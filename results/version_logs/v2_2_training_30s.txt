## alpha = 10.
## max_nb_parse = 64
## max_parse_dl_factor = 3.
## max_nb_shape_parse = 16
## max_nb_diff = 3
## max_nb_grid_reads = 3
## use_repeat = false
## beam_width = 1
## refine_degree = 20
## options
alpha = 10.0
mode = training
timeout = 30

=====================================
[-400] Checking task 007bbfb7.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3555.7 = 3564.7
DL output with Mo: L = 9.0 + 20085.4 = 20094.3
DL input+output M: L = 17.9 + 23641.1 = 23659.1

# learning a model for train pairs
2.000	
1.387	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.161	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.144	IN  DEF: ^.size=(?,?)
1.067	IN  DEF: ^.size.i=3
0.991	IN  DEF: ^.size.j=3
0.974	IN  DEF: ^.layer_0.pos=(?,?)
0.956	IN  DEF: ^.layer_0.shape.size=(?,?)
0.945	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.938	OUT DEF: ^.color=^.color
0.935	OUT DEF: ^.size=(?,?)
0.914	OUT DEF: ^.size.i=9
0.892	OUT DEF: ^.size.j=9
0.889	OUT DEF: ^.layer_0.pos=(?,?)
0.886	OUT DEF: ^.layer_0.shape.size=(?,?)
0.883	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 47.2 + 1984.2 = 2031.3
DL output with Mo: L = 52.0 + 6244.4 = 6296.4
DL input+output M: L = 99.2 + 8228.5 = 8327.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xxx|.xx at (0,0)
diff: 
delta:
   (35.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask ....xx.xx|...xxxxxx|....xx.xx|.xx.xx.xx|xxxxxxxxx|.xx.xx.xx|....xx.xx|...xxxxxx|....xx.xx at (0,0)
diff: 
delta:
   (105.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xxx|.xx at (0,0)
diff: 
delta:
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask Full at (0,1)
diff: 
delta: (1,0)=7#
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (0,0)
diff: 
delta: (2,0)=0 
! 28 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (2,1)=4 
   (52.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (0,6)=4  (0,8)=4  (2,1)=4  (2,7)=4  (6,3)=4  (6,5)=4  (8,4)=4 
   (166.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (2,1)=4 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,0)=4  (2,1)=4 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta: (0,0)=4  (0,2)=4 
! 11 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,2)
diff: 
delta: (2,0)=2 
   (38.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (7,2)
diff: 
delta: (4,8)=2  (5,6)=2  (5,8)=2  (7,8)=2  (8,0)=2  (8,6)=2  (8,8)=2 
   (149.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,2)
diff: 
delta: (2,0)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta: (1,2)=2  (2,2)=2 
! 13 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|x..|.xx at (0,0)
diff: 
delta:
   (35.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color pink and mask xx.xx....|x..x.....|.xx.xx...|xx.......|x........|.xx......|...xx.xx.|...x..x..|....xx.xx at (0,0)
diff: 
delta:
   (105.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|x..|.xx at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (2,1)
diff: 
delta: (0,0)=6  (0,1)=6  (1,0)=6 
! 27 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|x.. at (1,0)
diff: 
delta:
   (37.3 bits)
data: a background with size (9,9) and color red and layers
  _0: a rectangle with size (8,9) and color black and mask xxxxxxxxx|x..x..x..|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxx......|xxxxxxxxx|xxxx..x.. at (1,0)
diff: 
delta:
   (96.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|x.. at (1,0)
diff: 
delta:
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (2,1)=2  (2,2)=2 
! 25 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x.x|x.x|xx. at (0,0)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,2) and color black and mask x.|x.|.x at (0,1)
diff: 
delta:
! 45 wrong pixels (generated / expected)

TEST 007bbfb7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 6244.4 bits (6244.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-399] Checking task 00d62c1b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 29011.5 = 29020.5
DL output with Mo: L = 9.0 + 38896.3 = 38905.3
DL input+output M: L = 17.9 + 67907.8 = 67925.8

# learning a model for train pairs
2.000	
1.367	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.765	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.597	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.572	OUT DEF: ^.size=^.size
0.558	OUT DEF: ^.layer_0=^.layer_0
0.550	IN  DEF: ^.layer_0.shape.color=green
0.544	OUT DEF: ^.layer_01.shape.color=yellow
0.541	OUT DEF: ^.layer_01.shape.mask=Full
0.539	IN  DEF: ^.color=black
0.537	IN  DEF: ^.size=(?,?)
0.535	IN  DEF: ^.layer_0.pos=(?,?)
0.532	IN  DEF: ^.layer_0.shape.size=(?,?)
0.530	OUT DEF: ^.color=black
0.529	OUT DEF: ^.layer_01.pos=(?,?)
0.527	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 10106.2 = 10148.5
DL output with Mo: L = 39.6 + 6870.5 = 6910.2
DL input+output M: L = 81.9 + 16976.7 = 17058.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta:
   (54.5 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,2)
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
diff: 
delta: (2,1)=3  (2,3)=3  (3,2)=3  (3,4)=3  (4,3)=3 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,1)
diff: 
delta: (1,2)=3  (2,3)=3  (3,2)=3  (3,4)=3  (4,3)=3 
! 11 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta:
   (87.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,6)
diff: 
delta:
   (13.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
diff: 
delta:
   (128.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
  _01: a rectangle with size (4,2) and color yellow and mask Full at (3,4)
diff: 
delta: (3,7)=4 
   (40.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta:
   (119.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,3)
diff: 
delta: (7,8)=4  (8,4)=4 
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (12,13)=3  (13,14)=3  (13,17)=3  (14,15)=3  (14,16)=3  (14,17)=3  (15,15)=3  (15,17)=3  (16,12)=3  (16,15)=3  (16,16)=3  (16,17)=3  (17,13)=3 
   (620.6 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _01: a rectangle with size (4,6) and color yellow and mask Full at (5,9)
diff: 
delta: (2,8)=4  (3,9)=4  (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (12,8)=4  (12,9)=4  (12,13)=3  (13,8)=4  (13,9)=4  (13,14)=3  (13,17)=3  (14,15)=3  (14,16)=3  (14,17)=3  (15,15)=3  (15,16)=4  (15,17)=3  (16,12)=3  (16,15)=3  (16,16)=3  (16,17)=3  (17,13)=3 
   (556.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (12,13)=3  (13,14)=3  (13,17)=3  (14,15)=3  (14,16)=3  (14,17)=3  (15,15)=3  (15,17)=3  (16,12)=3  (16,15)=3  (16,16)=3  (16,17)=3  (17,13)=3 
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
diff: 
delta: (1,8)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3  (3,18)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,8)=3  (5,15)=3  (6,4)=3  (6,8)=3  (6,15)=3  (7,8)=3  (7,15)=3  (8,8)=3  (8,15)=3  (9,2)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (10,8)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,15)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,10)=3  (13,7)=3  (13,10)=3  (13,11)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (15,10)=3  (16,12)=3  (17,13)=3 
! 91 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (9,1) and color green and mask Full at (3,8)
diff: 
delta: (1,8)=3  (2,4)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,9)=3  (2,10)=3  (3,10)=3  (3,18)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,15)=3  (6,4)=3  (6,15)=3  (7,15)=3  (8,15)=3  (9,2)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (11,9)=3  (11,10)=3  (11,15)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,10)=3  (12,13)=3  (13,7)=3  (13,10)=3  (13,11)=3  (13,14)=3  (13,17)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,15)=3  (14,16)=3  (14,17)=3  (15,10)=3  (15,15)=3  (15,17)=3  (16,12)=3  (16,15)=3  (16,16)=3  (16,17)=3  (17,13)=3 
! 93 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (13,17) and color green and mask .x...............|x.xx.............|.x.xxxxx.xx......|...x....x..x.....|...xxxxx.xxx.....|............xxxxx|............x...x|............x...x|........xxxxx...x|........x...x...x|.......xxxxxx...x|.....xx.x...xxxxx|.......xx........ at (1,1)
diff: 
delta: (13,2)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=3  (15,11)=3  (16,7)=3  (16,11)=3  (17,7)=3  (17,11)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3 
! 57 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|.x...x|.x...x|.xxxxx at (15,6)
diff: 
delta: (1,2)=3  (2,1)=3  (2,3)=3  (2,4)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,11)=3  (4,4)=3  (4,9)=3  (4,12)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,13)=3  (6,14)=3  (6,15)=3  (6,16)=3  (6,17)=3  (7,13)=3  (7,17)=3  (8,13)=3  (8,17)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,17)=3  (10,9)=3  (10,13)=3  (10,17)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,13)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,9)=3  (12,13)=3  (12,14)=3  (12,15)=3  (12,16)=3  (12,17)=3  (13,2)=3  (13,8)=3  (13,9)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3 
! 100 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,1) and color green and mask Full at (6,13)
diff: 
delta: (1,2)=3  (2,1)=3  (2,3)=3  (2,4)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,11)=3  (4,4)=3  (4,9)=3  (4,12)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,14)=3  (6,15)=3  (6,16)=3  (6,17)=3  (7,17)=3  (8,17)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,17)=3  (10,9)=3  (10,17)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (11,17)=3  (12,6)=3  (12,7)=3  (12,9)=3  (12,14)=3  (12,15)=3  (12,16)=3  (12,17)=3  (13,2)=3  (13,8)=3  (13,9)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=3  (15,11)=3  (16,7)=3  (16,11)=3  (17,7)=3  (17,11)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3 
! 108 wrong pixels (generated / expected)

TEST 00d62c1b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 6870.5 bits (6870.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-398] Checking task 017c7c7b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5069.4 = 5078.4
DL output with Mo: L = 9.0 + 7197.5 = 7206.5
DL input+output M: L = 17.9 + 12266.9 = 12284.9

# learning a model for train pairs
2.000	
1.273	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.614	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.577	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.550	IN  DEF: ^.layer_0.shape.color=blue
0.531	OUT DEF: ^.layer_0.shape.color=red
0.522	IN  DEF: ^.color=black
0.515	IN  DEF: ^.size=(?,?)
0.472	IN  DEF: ^.size.i=6
0.440	IN  DEF: ^.size.j=3
0.433	IN  DEF: ^.layer_0.pos=(?,?)
0.410	IN  DEF: ^.layer_0.pos.i=(0)
0.393	IN  DEF: ^.layer_0.pos.j=0
0.386	IN  DEF: ^.layer_0.shape.size=(?,?)
0.342	IN  DEF: ^.layer_0.shape.size.i=6
0.336	OUT DEF: ^.color=black
0.331	OUT DEF: ^.size=(?,?)
0.296	OUT DEF: ^.size.i=9
0.273	OUT DEF: ^.size.j=^.size.j
0.268	OUT DEF: ^.layer_0.shape.size=(?,?)
0.233	OUT DEF: ^.layer_0.shape.size.i=9
0.212	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size (9,^.size.j) and color black and layers
  _0: a rectangle with size (9,^.layer_0.shape.size.j) and color red and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,?) and color blue and mask ? at ((0),0)

DL input  with Mi: L = 52.9 + 580.7 = 633.6
DL output with Mo: L = 49.2 + 577.6 = 626.8
DL input+output M: L = 102.1 + 1158.3 = 1260.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask .x.|xx.|.x.|.xx|.x.|xx. at (0,0)
diff: 
delta:
   (26.6 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,3) and color red and mask .x.|xx.|.x.|.xx|.x.|xx.|.x.|.xx|.x. at (0,0)
diff: 
delta:
   (30.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask .x.|xx.|.x.|.xx|.x.|xx. at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,1)
diff:   ^.layer_0.pos.j
delta: (1,0)=1  (3,2)=1  (5,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (12.1 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,3) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask .x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
   (19.4 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,2) and color red and mask .x|xx|.x|.x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask .x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,1)
diff:   ^.layer_0.pos.j
delta: (1,0)=1  (4,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask xxx|.x.|.x.|xxx|.x.|.x. at (0,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TEST 017c7c7b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 577.6 bits (577.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-397] Checking task 025d127b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7374.9 = 7383.9
DL output with Mo: L = 9.0 + 7374.9 = 7383.9
DL input+output M: L = 17.9 + 14749.8 = 14767.8

# learning a model for train pairs
2.000	
1.450	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.915	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.775	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.652	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.600	OUT DEF: ^.size=^.size
0.587	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.575	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.570	OUT DEF: ^.color=black
0.566	IN  DEF: ^.color=black
0.563	OUT DEF: ^.layer_0.pos=(?,?)
0.551	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.539	OUT DEF: ^.layer_0.pos.j=3
0.536	OUT DEF: ^.layer_0.shape.size=(?,?)
0.525	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.515	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
0.512	IN  DEF: ^.size=(?,?)
0.490	IN  DEF: ^.size.j=9
0.487	IN  DEF: ^.layer_0.pos=(?,?)
0.475	IN  DEF: ^.layer_0.pos.j=2
0.472	IN  DEF: ^.layer_0.shape.size=(?,?)
0.469	OUT DEF: ^.layer_01.pos=(?,?)
0.456	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.444	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j
0.441	OUT DEF: ^.layer_01.shape.size=(?,?)
0.422	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j - 1
0.404	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.i
0.401	IN  DEF: ^.layer_01.pos=(?,?)
0.388	IN  DEF: ^.layer_01.pos.i=1
0.376	IN  DEF: ^.layer_01.pos.j=1
0.373	IN  DEF: ^.layer_01.shape.size=(?,?)
0.355	IN  DEF: ^.layer_01.shape.size.i=5

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_0.shape.size.i) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,3)
  _01: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.j - 1) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,9) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,2)
  _01: a rectangle with size (5,?) and color ? and mask ? at (1,1)

DL input  with Mi: L = 83.6 + 1720.6 = 1804.1
DL output with Mo: L = 85.0 + 730.8 = 815.9
DL input+output M: L = 168.6 + 2451.4 = 2620.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask xxx.|x..x|.xxx at (7,2)
  _01: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
diff: 
delta:
   (91.8 bits)
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (7,3)
  _01: a rectangle with size (5,5) and color pink and mask xxx..|x..x.|.x..x|..x.x|..xxx at (1,2)
diff: 
delta:
   (32.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask xxx.|x..x|.xxx at (7,2)
  _01: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (7,2)
  _01: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
diff: 
delta: (8,2)=2  (8,5)=2  (9,3)=2  (9,4)=2  (9,5)=2 
! 20 wrong pixels (generated / expected)

TRAIN 025d127b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (5,8) and color cyan and mask xxxxx...|x....x..|.x....x.|..x....x|...xxxxx at (1,1)
diff: 
delta:
   (80.3 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (5,7) and color cyan and mask xxxxx..|x....x.|.x....x|..x...x|..xxxxx at (1,2)
diff: 
delta:
   (40.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (5,8) and color cyan and mask xxxxx...|x....x..|.x....x.|..x....x|...xxxxx at (1,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,6)
  _01: a rectangle with size (5,8) and color cyan and mask xxxxx...|x....x..|.x....x.|..x....x|...xxxxx at (1,1)
diff:   ^.layer_0.pos.j
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (3,7)
  _01: a rectangle with size (5,8) and color cyan and mask xxxxx...|x....x..|.x....x.|..x....x|...xxxxx at (1,1)
diff:   ^.layer_0.pos.j
delta:
! 15 wrong pixels (generated / expected)

TRAIN 025d127b.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
  _01: a rectangle with size (5,9) and color yellow and mask xxxxxx...|x.....x..|.x.....x.|..x.....x|...xxxxxx at (1,1)
diff:   ^.size.j
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,7)
  _01: a rectangle with size (5,9) and color yellow and mask xxxxxx...|x.....x..|.x.....x.|..x.....x|...xxxxxx at (1,1)
diff:   ^.size.j  ^.layer_0.pos.j
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (3,8)
  _01: a rectangle with size (5,9) and color yellow and mask xxxxxx...|x.....x..|.x.....x.|..x.....x|...xxxxxx at (1,1)
diff:   ^.size.j  ^.layer_0.pos.j
delta:
! 17 wrong pixels (generated / expected)

TEST 025d127b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.5 sec (6.5 sec/task)
bits-train-error = 730.8 bits (730.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-396] Checking task 045e512c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7905.6 = 7914.6
DL output with Mo: L = 9.0 + 27370.0 = 27378.9
DL input+output M: L = 17.9 + 35275.6 = 35293.5

# learning a model for train pairs
2.000	
1.638	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.471	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.314	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.182	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
1.105	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 4394.0 = 4442.0
DL output with Mo: L = 57.0 + 14826.2 = 14883.2
DL input+output M: L = 105.0 + 19220.2 = 19325.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,6)
diff: 
delta: (6,10)=3  (7,10)=3  (8,10)=3 
   (155.3 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,11) and color green and mask Full at (6,10)
  _01: a rectangle with size (11,3) and color red and mask Full at (10,6)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
diff: 
delta: (6,13)=0  (6,17)=0  (7,11)=0  (7,13)=0  (7,15)=0  (7,17)=0  (7,19)=0  (8,13)=0  (8,17)=0  (11,7)=0  (13,6)=0  (13,7)=0  (13,8)=0  (15,7)=0  (17,6)=0  (17,7)=0  (17,8)=0  (19,7)=0 
   (496.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,6)
diff: 
delta: (6,10)=3  (7,10)=3  (8,10)=3 
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (10,6)
  _01: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
diff: 
delta: (6,10)=3  (7,10)=3  (8,10)=3 
! size mismatch, 10x10 instead of 21x21

TRAIN 045e512c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (7,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
diff: 
delta: (8,9)=2  (8,15)=4 
   (137.7 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (8,0)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (3,11)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (7,11)
diff: 
delta: (0,11)=4  (0,12)=4  (0,13)=4  (1,12)=4  (7,0)=2  (7,4)=2  (7,8)=2  (7,16)=4  (7,20)=4  (8,2)=0  (8,6)=0  (8,15)=4  (8,16)=4  (8,17)=4  (8,19)=4  (8,20)=4  (9,0)=2  (9,4)=2  (9,8)=2  (9,16)=4  (9,20)=4 
   (562.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (7,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
diff: 
delta: (8,9)=2  (8,15)=4 
! size mismatch, 10x10 instead of 21x21

TRAIN 045e512c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
diff: 
delta: (4,10)=6  (5,11)=6 
   (146.4 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|x.x|.xx at (3,10)
  _01: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (11,10)
  _011: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
diff: 
delta: (0,14)=6  (0,16)=6  (1,15)=6  (1,16)=6  (15,14)=1  (15,15)=1  (16,14)=1  (16,16)=1  (17,15)=1  (17,16)=1  (19,18)=1  (19,19)=1  (20,18)=1  (20,20)=1 
   (423.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
diff: 
delta: (4,10)=6  (5,11)=6 
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
  _01: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
diff: 
delta: (4,10)=6  (5,11)=6 
! size mismatch, 10x10 instead of 21x21

TRAIN 045e512c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|x.x|x.x at (7,6)
  _01: a rectangle with size (1,3) and color green and mask Full at (11,6)
diff: 
delta: (4,10)=4  (5,10)=4  (7,10)=2  (8,10)=2  (9,10)=2 
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (11,6)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|x.x|x.x at (7,6)
diff: 
delta: (4,10)=4  (5,10)=4  (7,10)=2  (8,10)=2  (9,10)=2 
! size mismatch, 10x10 instead of 21x21

TEST 045e512c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.7 sec (27.7 sec/task)
bits-train-error = 14826.2 bits (14826.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-395] Checking task 0520fde7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6324.4 = 6333.4
DL output with Mo: L = 9.0 + 1430.0 = 1439.0
DL input+output M: L = 17.9 + 7754.4 = 7772.4

# learning a model for train pairs
2.000	
1.815	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.674	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.576	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.481	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.385	OUT DEF: ^.layer_0.shape.color=red
1.353	OUT DEF: ^.color=black
1.329	OUT DEF: ^.size=(?,?)
1.216	OUT DEF: ^.size.i=^.size.i
1.103	OUT DEF: ^.size.j=^.layer_0.shape.size.j
1.079	OUT DEF: ^.layer_0.pos=(?,?)
1.020	OUT DEF: ^.layer_0.pos.i=1
0.969	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.j - 1
0.948	IN  DEF: ^.layer_0.shape.color=blue
0.926	IN  DEF: ^.layer_01.shape.color=blue
0.904	IN  DEF: ^.layer_011.shape.color=grey
0.893	IN  DEF: ^.layer_011.shape.mask=Full
0.886	IN  DEF: ^.color=black
0.880	IN  DEF: ^.size=(?,?)
0.843	IN  DEF: ^.size.j=7
0.818	IN  DEF: ^.size.i=3
0.812	IN  DEF: ^.layer_0.pos=(?,?)
0.798	IN  DEF: ^.layer_0.pos.i=0
0.793	IN  DEF: ^.layer_0.shape.size=(?,?)
0.767	IN  DEF: ^.layer_0.shape.size.j=3
0.761	IN  DEF: ^.layer_01.pos=(?,?)
0.756	IN  DEF: ^.layer_01.shape.size=(?,?)
0.750	IN  DEF: ^.layer_011.pos=(?,?)
0.731	IN  DEF: ^.layer_011.pos.j=3
0.717	IN  DEF: ^.layer_011.pos.i=0
0.712	IN  DEF: ^.layer_011.shape.size=(?,?)
0.686	IN  DEF: ^.layer_011.shape.size.i=3
0.675	IN  DEF: ^.layer_011.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.layer_0.shape.size.j) and color black and layers
  _0: a point with color red at (1,^.layer_01.shape.size.j - 1)
WHERE (Mi)
a background with size (3,7) and color black and layers
  _0: a rectangle with size (?,3) and color blue and mask ? at (0,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)

DL input  with Mi: L = 110.5 + 1669.1 = 1779.5
DL output with Mo: L = 52.3 + 514.4 = 566.7
DL input+output M: L = 162.7 + 2183.5 = 2346.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,4)
  _01: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (41.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,4)
  _01: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
correct output grid

TRAIN 0520fde7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|..x|xx. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (0,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (51.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (0,1)=2  (2,1)=2 
   (34.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|..x|xx. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (0,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 0520fde7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|.xx at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta: (1,6)=1  (2,6)=1 
   (74.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (1,0)
diff: 
delta: (2,2)=2 
   (17.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|.xx at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta: (1,6)=1  (2,6)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|.xx at (0,0)
  _01: a rectangle with size (2,3) and color blue and mask Full at (1,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta: (1,5)=0  (2,5)=0 
! 3 wrong pixels (generated / expected)

TRAIN 0520fde7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|x.x|.x. at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask x-cross at (0,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TEST 0520fde7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.9 sec (8.9 sec/task)
bits-train-error = 514.4 bits (514.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-394] Checking task 05269061.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6666.3 = 6675.2
DL output with Mo: L = 9.0 + 18211.0 = 18219.9
DL input+output M: L = 17.9 + 24877.2 = 24895.2

# learning a model for train pairs
2.000	
1.870	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.748	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.644	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.568	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.504	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.439	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.380	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.338	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_01.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 4656.4 = 4723.2
DL output with Mo: L = 84.7 + 11398.7 = 11483.3
DL input+output M: L = 151.4 + 16055.1 = 16206.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (3,3) and color green and mask .xx|xx.|x.. at (0,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (110.6 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _010: a rectangle with size (6,6) and color green and mask .x...x|x...x.|...x..|..x...|.x....|x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask .xx|xx.|x.. at (0,0)
  _011: a rectangle with size (6,6) and color cyan and mask x..x.x|..x.x.|.x.x..|x.x...|.x....|x..... at (1,1)
  _0111: a rectangle with size (5,5) and color cyan and mask .xx.x|xx.xx|x.xx.|.xx.x|xx.x. at (0,0)
diff: 
delta: (2,6)=3  (3,5)=3  (4,4)=3  (4,6)=8  (5,3)=3  (5,5)=8  (5,6)=3  (6,2)=3  (6,4)=8  (6,5)=3 
   (426.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color green and mask x.x|.x.|x.. at (0,0)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (3,3) and color green and mask .xx|xx.|x.. at (0,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TRAIN 05269061.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,4)
  _011: a rectangle with size (4,4) and color red and mask ..xx|.xxx|xxx.|xx.. at (3,3)
diff: 
delta:
   (162.0 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _010: a rectangle with size (6,6) and color blue and mask .....x|....x.|...x..|..x..x|.x..x.|x..x.. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,4)
  _011: a rectangle with size (6,6) and color yellow and mask ...x.x|..x.xx|.x.xx.|x.xx.x|.xx.x.|xx.x.. at (1,1)
  _0111: a rectangle with size (5,5) and color yellow and mask ....x|...xx|..xx.|.xx.x|xx.xx at (0,0)
diff: 
delta: (0,1)=4  (0,2)=1  (1,0)=4  (1,1)=1  (2,0)=1  (5,6)=1  (6,5)=1 
   (372.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,4)
  _011: a rectangle with size (4,4) and color red and mask ..xx|.xxx|xxx.|xx.. at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.x.|x.. at (4,4)
  _01: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x.x|.x.x.|x.x.. at (2,2)
  _011: a rectangle with size (4,4) and color red and mask ..xx|.xxx|xxx.|xx.. at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _01: a rectangle with size (4,4) and color red and mask ..xx|.xx.|xx..|x... at (3,3)
  _011: a rectangle with size (3,3) and color yellow and mask xxx|xx.|x.. at (4,4)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TRAIN 05269061.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _01: a rectangle with size (5,5) and color cyan and mask ....x|...xx|..xx.|.xx..|xx... at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask ...x|..x.|.x..|x... at (3,3)
diff: 
delta:
   (193.0 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask ..x|.x.|x.. at (4,4)
  _01: a rectangle with size (5,5) and color cyan and mask ....x|...xx|..xx.|.xx..|xx... at (0,0)
  _011: a rectangle with size (6,6) and color cyan and mask ..xx.x|.xx.x.|xx.x..|x.x..x|.x..x.|x..x.. at (1,1)
  _0111: a rectangle with size (5,5) and color green and mask xx.xx|x.xx.|.xx.x|xx.x.|x.x.. at (2,2)
diff: 
delta: (0,1)=8  (0,2)=3  (1,0)=8  (1,1)=3  (2,0)=3  (5,6)=3  (6,5)=3 
   (341.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _01: a rectangle with size (5,5) and color cyan and mask ....x|...xx|..xx.|.xx..|xx... at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask ...x|..x.|.x..|x... at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask ...x|..x.|.x..|x... at (3,3)
  _011: a rectangle with size (5,5) and color cyan and mask ....x|...xx|..xx.|.xx..|xx... at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TRAIN 05269061.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask ......x|.....x.|....x..|...x...|..x....|.x.....|x...... at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (7,7) and color red and mask .x....x|x....x.|....x..|...x...|..x....|.x.....|x...... at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TEST 05269061.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.7 sec (28.7 sec/task)
bits-train-error = 11398.7 bits (11398.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-393] Checking task 05f2a901.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7876.0 = 7885.0
DL output with Mo: L = 9.0 + 7876.0 = 7885.0
DL input+output M: L = 17.9 + 15752.1 = 15770.0

# learning a model for train pairs
2.000	
1.554	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.108	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.784	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.585	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.478	OUT DEF: ^.layer_0=^.layer_00
0.404	OUT DEF: ^.size=^.size
0.387	IN  DEF: ^.layer_00.shape.color=cyan
0.369	IN  DEF: ^.layer_0.shape.color=red
0.360	IN  DEF: ^.layer_00.shape.mask=Full
0.354	IN  DEF: ^.color=black
0.348	OUT DEF: ^.color=black
0.344	OUT DEF: ^.layer_01.pos=(?,?)
0.340	IN  DEF: ^.layer_00.pos=(?,?)
0.335	IN  DEF: ^.size=(?,?)
0.331	IN  DEF: ^.layer_0.pos=(?,?)
0.326	IN  DEF: ^.layer_0.shape.size=(?,?)
0.322	IN  DEF: ^.layer_00.shape.size=(?,?)
0.306	IN  DEF: ^.layer_00.shape.size.i=2
0.289	IN  DEF: ^.layer_00.shape.size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_00
  _01: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 73.0 + 1898.9 = 1971.9
DL output with Mo: L = 26.8 + 281.8 = 308.6
DL input+output M: L = 99.8 + 2180.7 = 2280.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,9) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (2,0)
diff: 
delta:
   (59.5 bits)
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
  _01: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (8,0)
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (2,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,9) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
  _0: a rectangle with size (2,4) and color red and mask Full at (2,0)
diff: 
delta: (2,0)=0  (3,2)=0 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,9) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
  _0: a rectangle with size (1,3) and color red and mask Full at (2,1)
diff: 
delta: (3,0)=2  (3,1)=2  (3,3)=2 
! 9 wrong pixels (generated / expected)

TRAIN 05f2a901.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,0)
diff: 
delta:
   (62.8 bits)
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
  _01: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,3)
diff: 
delta:
   (9.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
  _0: a rectangle with size (4,2) and color red and mask Full at (1,1)
diff: 
delta: (3,0)=2 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,10) and color black and layers
  _00: a rectangle with size (4,2) and color red and mask Full at (1,1)
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color  ^.layer_00.shape.size.i
delta: (3,0)=2 
! 24 wrong pixels (generated / expected)

TRAIN 05f2a901.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (6,1)
diff: 
delta:
   (67.6 bits)
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
  _01: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (3,1)
diff: 
delta:
   (9.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (6,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
  _0: a rectangle with size (2,3) and color red and mask Full at (6,3)
diff: 
delta: (7,1)=2  (7,2)=2  (8,2)=2  (8,3)=2 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
  _0: a rectangle with size (1,5) and color red and mask Full at (7,1)
diff: 
delta: (6,3)=2  (6,4)=2  (6,5)=2  (8,2)=2  (8,3)=2 
! 15 wrong pixels (generated / expected)

TRAIN 05f2a901.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (6,1)
  _0: a rectangle with size (4,2) and color red and mask x.|xx|xx|.x at (4,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (6,1)
  _0: a rectangle with size (2,2) and color red and mask Full at (5,5)
diff: 
delta: (4,5)=2  (7,6)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,10) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (6,1)
  _0: a rectangle with size (4,2) and color red and mask Full at (4,5)
diff: 
delta: (4,6)=0  (7,5)=0 
! 14 wrong pixels (generated / expected)

TEST 05f2a901.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 281.8 bits (281.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-392] Checking task 06df4c85.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 151443.4 = 151452.3
DL output with Mo: L = 9.0 + 151443.4 = 151452.3
DL input+output M: L = 17.9 + 302886.7 = 302904.7

# learning a model for train pairs
2.000	
1.224	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.475	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.392	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.332	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.282	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.265	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 33899.0 = 33927.9
DL output with Mo: L = 93.0 + 6090.1 = 6183.1
DL input+output M: L = 121.9 + 39989.1 = 40111.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,15)=2  (3,16)=2  (4,3)=2  (4,4)=2  (4,15)=2  (4,16)=2  (6,9)=1  (6,10)=1  (7,9)=1  (7,10)=1  (9,15)=2  (9,16)=2  (10,15)=2  (10,16)=2  (12,3)=3  (12,4)=3  (12,9)=3  (12,10)=3  (13,3)=3  (13,4)=3  (13,9)=3  (13,10)=3 
   (979.1 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (2,14) and color red and mask Full at (3,3)
  _011: a rectangle with size (2,8) and color green and mask Full at (12,3)
  _0111: a rectangle with size (5,2) and color red and mask Full at (6,15)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (6,9)
diff: 
delta:
   (167.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,15)=2  (3,16)=2  (4,3)=2  (4,4)=2  (4,15)=2  (4,16)=2  (6,9)=1  (6,10)=1  (7,9)=1  (7,10)=1  (9,15)=2  (9,16)=2  (10,15)=2  (10,16)=2  (12,3)=3  (12,4)=3  (12,9)=3  (12,10)=3  (13,3)=3  (13,4)=3  (13,9)=3  (13,10)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN 06df4c85.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,12)=4  (3,13)=4  (4,3)=2  (4,4)=2  (4,12)=4  (4,13)=4  (9,9)=9# (9,10)=9# (9,21)=9# (9,22)=9# (10,9)=9# (10,10)=9# (10,21)=9# (10,22)=9# (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,9)=8  (18,10)=8  (18,18)=8  (18,19)=8  (19,9)=8  (19,10)=8  (19,18)=8  (19,19)=8 
   (1291.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (2,14) and color brown and mask Full at (9,9)
  _011: a rectangle with size (14,2) and color red and mask Full at (3,3)
  _0111: a rectangle with size (2,11) and color cyan and mask Full at (18,9)
  _01111: a rectangle with size (5,2) and color cyan and mask Full at (12,18)
diff: 
delta: (3,12)=4  (3,13)=4  (4,12)=4  (4,13)=4 
   (266.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,12)=4  (3,13)=4  (4,3)=2  (4,4)=2  (4,12)=4  (4,13)=4  (9,9)=9# (9,10)=9# (9,21)=9# (9,22)=9# (10,9)=9# (10,10)=9# (10,21)=9# (10,22)=9# (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,9)=8  (18,10)=8  (18,18)=8  (18,19)=8  (19,9)=8  (19,10)=8  (19,18)=8  (19,19)=8 
! size mismatch, 10x10 instead of 23x23

TRAIN 06df4c85.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=3  (3,4)=3  (3,15)=2  (3,16)=2  (4,3)=3  (4,4)=3  (4,15)=2  (4,16)=2  (9,9)=2  (9,10)=2  (9,18)=2  (9,19)=2  (10,9)=2  (10,10)=2  (10,18)=2  (10,19)=2  (18,3)=3  (18,4)=3  (18,15)=3  (18,16)=3  (19,3)=3  (19,4)=3  (19,15)=3  (19,16)=3 
   (1119.8 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (17,2) and color green and mask Full at (3,3)
  _011: a rectangle with size (2,11) and color red and mask Full at (9,9)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,15)
  _01111: a rectangle with size (2,11) and color green and mask Full at (18,6)
diff: 
delta:
   (174.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=3  (3,4)=3  (3,15)=2  (3,16)=2  (4,3)=3  (4,4)=3  (4,15)=2  (4,16)=2  (9,9)=2  (9,10)=2  (9,18)=2  (9,19)=2  (10,9)=2  (10,10)=2  (10,18)=2  (10,19)=2  (18,3)=3  (18,4)=3  (18,15)=3  (18,16)=3  (19,3)=3  (19,4)=3  (19,15)=3  (19,16)=3 
! size mismatch, 10x10 instead of 23x23

TRAIN 06df4c85.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,26) and color black and layers
  _0: a rectangle with size (26,26) and color yellow and mask ..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,6)=8  (3,7)=8  (3,15)=2  (3,16)=2  (4,6)=8  (4,7)=8  (4,15)=2  (4,16)=2  (9,21)=3  (9,22)=3  (10,21)=3  (10,22)=3  (12,6)=8  (12,7)=8  (13,6)=8  (13,7)=8  (18,3)=2  (18,4)=2  (18,15)=2  (18,16)=2  (19,3)=2  (19,4)=2  (19,15)=2  (19,16)=2 
! size mismatch, 10x10 instead of 26x26

TEST 06df4c85.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.3 sec (28.3 sec/task)
bits-train-error = 6090.1 bits (6090.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-391] Checking task 08ed6ac7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8950.6 = 8959.6
DL output with Mo: L = 9.0 + 8950.6 = 8959.6
DL input+output M: L = 17.9 + 17901.2 = 17919.2

# learning a model for train pairs
2.000	
1.712	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.424	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.121	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.913	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.764	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.711	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.659	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.607	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.566	OUT DEF: ^.size=^.size
0.538	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.515	OUT DEF: ^.layer_0111.shape.size=^.layer_0111.shape.size
0.492	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.467	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.444	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.421	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.398	OUT DEF: ^.layer_0111.pos=^.layer_0111.pos
0.379	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.369	OUT DEF: ^.layer_0.shape.color=blue
0.358	OUT DEF: ^.layer_01.shape.color=red
0.353	OUT DEF: ^.layer_0.shape.mask=Full
0.343	OUT DEF: ^.layer_011.shape.color=green
0.333	OUT DEF: ^.layer_0111.shape.color=yellow
0.327	OUT DEF: ^.layer_01.shape.mask=Full
0.322	IN  DEF: ^.layer_0.shape.mask=Full
0.317	IN  DEF: ^.layer_0111.shape.mask=Full
0.307	IN  DEF: ^.layer_0.shape.color=grey
0.296	IN  DEF: ^.layer_01.shape.color=grey
0.286	IN  DEF: ^.layer_011.shape.color=grey
0.281	OUT DEF: ^.layer_011.shape.mask=Full
0.271	IN  DEF: ^.layer_0111.shape.color=grey
0.265	OUT DEF: ^.layer_0111.shape.mask=Full
0.260	IN  DEF: ^.layer_01.shape.mask=Full
0.257	OUT DEF: ^.color=black
0.253	IN  DEF: ^.color=black
0.251	IN  DEF: ^.size=(?,?)
0.232	IN  DEF: ^.size.i=9
0.213	IN  DEF: ^.size.j=9
0.211	IN  DEF: ^.layer_0111.pos=(?,?)
0.206	IN  DEF: ^.layer_011.shape.mask=Full
0.203	IN  DEF: ^.layer_0.pos=(?,?)
0.201	IN  DEF: ^.layer_011.pos=(?,?)
0.198	IN  DEF: ^.layer_0.shape.size=(?,?)
0.193	IN  DEF: ^.layer_0.shape.size.j=1
0.191	IN  DEF: ^.layer_011.shape.size=(?,?)
0.185	IN  DEF: ^.layer_011.shape.size.j=1
0.183	IN  DEF: ^.layer_01.pos=(?,?)
0.180	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color red and mask Full at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color green and mask Full at ^.layer_011.pos
  _0111: a rectangle with size ^.layer_0111.shape.size and color yellow and mask Full at ^.layer_0111.pos
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (?,1) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,1) and color grey and mask Full at (?,?)
  _0111: a rectangle with size ? and color grey and mask Full at (?,?)

DL input  with Mi: L = 130.6 + 1397.0 = 1527.6
DL output with Mo: L = 88.5 + 0.0 = 88.5
DL input+output M: L = 219.1 + 1397.0 = 1616.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,7)
diff: 
delta:
   (71.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color green and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (6,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,7)
diff: 
delta:
correct output grid

TRAIN 08ed6ac7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
   (67.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color blue and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color red and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color green and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
correct output grid

TRAIN 08ed6ac7.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color grey and mask Full at (4,7)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,3)
diff: 
delta:
correct output grid

TEST 08ed6ac7.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 19.0 sec (19.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-390] Checking task 09629e4f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 63737.8 = 63746.8
DL output with Mo: L = 9.0 + 59635.8 = 59644.7
DL input+output M: L = 17.9 + 123373.6 = 123391.5

# learning a model for train pairs
2.000	
1.592	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.242	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.046	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.950	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.854	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.754	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_0.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 41408.8 = 41437.7
DL output with Mo: L = 93.0 + 6110.8 = 6203.8
DL input+output M: L = 121.9 + 47519.6 = 47641.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,0)=2  (0,5)=6  (0,6)=2  (0,10)=4  (1,1)=4  (1,2)=3  (1,4)=4  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,5)=3  (10,8)=2  (10,9)=3  (10,10)=4 
   (1035.2 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (4,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (8,0)
diff: 
delta:
   (152.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,0)=2  (0,5)=6  (0,6)=2  (0,10)=4  (1,1)=4  (1,2)=3  (1,4)=4  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,5)=3  (10,8)=2  (10,9)=3  (10,10)=4 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (3,0)
diff: 
delta: (0,0)=2  (0,3)=5# (0,5)=6  (0,6)=2  (0,7)=5# (0,10)=4  (1,1)=4  (1,2)=3  (1,3)=5# (1,4)=4  (1,6)=8  (1,7)=5# (1,8)=3  (1,10)=6  (2,0)=6  (2,3)=5# (2,4)=3  (2,7)=5# (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,3)=5# (4,4)=6  (4,5)=2  (4,7)=5# (4,9)=4  (4,10)=8  (5,2)=4  (5,3)=5# (5,6)=4  (5,7)=5# (5,8)=6  (6,0)=6  (6,1)=2  (6,3)=5# (6,4)=3  (6,5)=8  (6,7)=5# (6,9)=3  (6,10)=2  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,1)=3  (8,2)=6  (8,3)=5# (8,5)=2  (8,7)=5# (8,9)=6  (9,0)=2  (9,3)=5# (9,4)=4  (9,6)=8  (9,7)=5# (9,10)=8  (10,0)=8  (10,2)=4  (10,3)=5# (10,4)=6  (10,5)=3  (10,7)=5# (10,8)=2  (10,9)=3  (10,10)=4 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,0)=2  (0,2)=3  (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,0)=4  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,0)=4  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,6)=6  (10,8)=6  (10,9)=4 
   (1035.2 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0: a rectangle with size (3,3) and color red and mask Full at (0,8)
  _01: a rectangle with size (3,3) and color green and mask Full at (4,4)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (8,0)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (8,8)
diff: 
delta:
   (152.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,0)=2  (0,2)=3  (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,0)=4  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,0)=4  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,6)=6  (10,8)=6  (10,9)=4 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (3,0)
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,4)=4  (0,5)=6  (0,7)=5# (0,9)=6  (1,2)=8  (1,3)=5# (1,6)=2  (1,7)=5# (1,8)=4  (1,10)=3  (2,0)=4  (2,1)=6  (2,3)=5# (2,4)=3  (2,5)=8  (2,7)=5# (2,8)=2  (2,10)=8  (4,0)=4  (4,2)=8  (4,3)=5# (4,6)=2  (4,7)=5# (4,9)=6  (4,10)=4  (5,2)=2  (5,3)=5# (5,5)=3  (5,7)=5# (5,8)=3  (6,0)=3  (6,2)=6  (6,3)=5# (6,4)=4  (6,6)=6  (6,7)=5# (6,8)=8  (6,10)=2  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,0)=3  (8,1)=6  (8,3)=5# (8,5)=8  (8,6)=4  (8,7)=5# (8,8)=2  (9,1)=8  (9,2)=4  (9,3)=5# (9,4)=2  (9,7)=5# (9,8)=8  (9,10)=3  (10,0)=2  (10,3)=5# (10,5)=3  (10,6)=6  (10,7)=5# (10,8)=6  (10,9)=4 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,1)=2  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,1)=2  (4,4)=4  (4,6)=3  (4,8)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
   (1035.2 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0: a rectangle with size (3,3) and color green and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color pink and mask Full at (4,4)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color red and mask Full at (8,0)
diff: 
delta:
   (152.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,1)=2  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,1)=2  (4,4)=4  (4,6)=3  (4,8)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (3,0)
diff: 
delta: (0,1)=3  (0,3)=5# (0,5)=6  (0,6)=3  (0,7)=5# (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,3)=5# (1,4)=2  (1,5)=8  (1,7)=5# (1,10)=8  (2,1)=2  (2,2)=8  (2,3)=5# (2,5)=4  (2,7)=5# (2,8)=3  (2,10)=4  (4,1)=2  (4,3)=5# (4,4)=4  (4,6)=3  (4,7)=5# (4,8)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,3)=5# (5,4)=2  (5,6)=6  (5,7)=5# (5,10)=2  (6,0)=3  (6,1)=6  (6,3)=5# (6,5)=8  (6,7)=5# (6,8)=8  (6,9)=6  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,0)=6  (8,1)=3  (8,3)=5# (8,5)=3  (8,7)=5# (8,10)=3  (9,2)=2  (9,3)=5# (9,5)=6  (9,6)=4  (9,7)=5# (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,3)=5# (10,4)=2  (10,7)=5# (10,8)=4  (10,10)=6 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=4  (0,4)=4  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
   (1035.2 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask Full at (4,4)
  _011: a rectangle with size (3,3) and color pink and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color green and mask Full at (8,4)
diff: 
delta:
   (152.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=4  (0,4)=4  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (3,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=4  (0,3)=5# (0,4)=4  (0,5)=6  (0,7)=5# (0,8)=2  (0,10)=8  (1,3)=5# (1,4)=8  (1,6)=3  (1,7)=5# (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,3)=5# (2,5)=2  (2,7)=5# (2,8)=4  (4,1)=4  (4,2)=2  (4,3)=5# (4,4)=8  (4,6)=3  (4,7)=5# (4,9)=4  (5,1)=8  (5,2)=6  (5,3)=5# (5,6)=4  (5,7)=5# (5,9)=2  (5,10)=6  (6,1)=3  (6,3)=5# (6,4)=2  (6,5)=6  (6,7)=5# (6,9)=3  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,1)=6  (8,3)=5# (8,4)=6  (8,5)=2  (8,7)=5# (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,3)=5# (9,5)=8  (9,6)=3  (9,7)=5# (9,10)=4  (10,0)=4  (10,1)=2  (10,3)=5# (10,6)=4  (10,7)=5# (10,8)=2  (10,10)=8 
! size mismatch, 10x10 instead of 11x11

TRAIN 09629e4f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
diff: 
delta: (0,0)=6  (0,1)=4  (0,5)=3  (0,9)=4  (1,2)=3  (1,4)=2  (1,5)=8  (1,6)=6  (1,8)=8  (1,10)=2  (2,0)=2  (2,2)=8  (2,4)=4  (2,8)=6  (2,9)=3  (4,0)=2  (4,5)=3  (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,4)=8  (5,5)=4  (5,6)=2  (5,10)=4  (6,1)=8  (6,6)=6  (6,8)=8  (8,1)=2  (8,2)=4  (8,5)=6  (8,6)=4  (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,6)=3  (9,8)=4  (9,10)=6  (10,4)=2  (10,6)=8  (10,8)=3 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (3,0)
diff: 
delta: (0,0)=6  (0,1)=4  (0,3)=5# (0,5)=3  (0,7)=5# (0,9)=4  (1,2)=3  (1,3)=5# (1,4)=2  (1,5)=8  (1,6)=6  (1,7)=5# (1,8)=8  (1,10)=2  (2,0)=2  (2,2)=8  (2,3)=5# (2,4)=4  (2,7)=5# (2,8)=6  (2,9)=3  (4,0)=2  (4,3)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,3)=5# (5,4)=8  (5,5)=4  (5,6)=2  (5,7)=5# (5,10)=4  (6,1)=8  (6,3)=5# (6,6)=6  (6,7)=5# (6,8)=8  (7,0)=5# (7,1)=5# (7,2)=5# (7,3)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5# (7,8)=5# (7,9)=5# (7,10)=5# (8,1)=2  (8,2)=4  (8,3)=5# (8,5)=6  (8,6)=4  (8,7)=5# (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,3)=5# (9,6)=3  (9,7)=5# (9,8)=4  (9,10)=6  (10,3)=5# (10,4)=2  (10,6)=8  (10,7)=5# (10,8)=3 
! size mismatch, 10x10 instead of 11x11

TEST 09629e4f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.4 sec (20.4 sec/task)
bits-train-error = 6110.8 bits (6110.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-389] Checking task 0962bcdd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4458.3 = 4467.3
DL output with Mo: L = 9.0 + 13848.4 = 13857.3
DL input+output M: L = 17.9 + 18306.7 = 18324.6

# learning a model for train pairs
2.000	
1.802	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.604	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.410	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.211	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.071	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.924	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.885	OUT DEF: ^.layer_01.shape.mask=x.x.x|.xxx.|xxxxx|.xxx.|x.x.x
0.856	OUT DEF: ^.size=^.size
0.817	OUT DEF: ^.layer_0111.shape.mask=x.x.x|.xxx.|xxxxx|.xxx.|x.x.x
0.799	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.776	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.767	OUT DEF: ^.layer_0.shape.mask=x-cross
0.757	OUT DEF: ^.layer_011.shape.mask=x-cross
0.750	IN  DEF: ^.color=black
0.744	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.715	IN  DEF: ^.layer_0.shape.mask=Odd Checkboard
0.708	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
0.679	IN  DEF: ^.layer_01.shape.mask=Odd Checkboard
0.672	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.666	OUT DEF: ^.layer_0111.shape.color=^.layer_0.shape.color
0.661	IN  DEF: ^.size=(?,?)
0.620	IN  DEF: ^.size.i=12
0.579	IN  DEF: ^.size.j=12
0.574	IN  DEF: ^.layer_0111.pos=(?,?)
0.552	IN  DEF: ^.layer_0111.pos.j=8
0.547	IN  DEF: ^.layer_0.pos=(?,?)
0.526	IN  DEF: ^.layer_0.pos.i=2
0.521	IN  DEF: ^.layer_011.pos=(?,?)
0.499	IN  DEF: ^.layer_011.pos.i=3
0.494	IN  DEF: ^.layer_0.shape.size=(?,?)
0.470	IN  DEF: ^.layer_0.shape.size.i=3
0.446	IN  DEF: ^.layer_0.shape.size.j=3
0.441	IN  DEF: ^.layer_01.pos=(?,?)
0.419	IN  DEF: ^.layer_01.pos.j=7
0.415	IN  DEF: ^.layer_01.shape.size=(?,?)
0.390	IN  DEF: ^.layer_01.shape.size.i=3
0.366	IN  DEF: ^.layer_01.shape.size.j=3
0.364	OUT DEF: ^.color=black
0.363	OUT DEF: ^.layer_0.pos=(?,?)
0.356	OUT DEF: ^.layer_0.pos.i=1
0.349	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - 1
0.348	OUT DEF: ^.layer_0.shape.size=(?,?)
0.339	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i + 2
0.329	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j + 2
0.328	OUT DEF: ^.layer_01.pos=(?,?)
0.321	OUT DEF: ^.layer_01.pos.i=1
0.315	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j - 1
0.313	OUT DEF: ^.layer_011.pos=(?,?)
0.307	OUT DEF: ^.layer_011.pos.i=^.layer_0111.pos.i - ^.layer_0.pos.i
0.301	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j - 1
0.299	OUT DEF: ^.layer_01.shape.size=(?,?)
0.290	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.i + 2
0.280	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j + 2
0.279	OUT DEF: ^.layer_011.shape.size=(?,?)
0.270	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.shape.size.i + 2
0.260	OUT DEF: ^.layer_011.shape.size.j=^.layer_0.shape.size.j + 2
0.259	OUT DEF: ^.layer_0111.pos=(?,?)
0.253	OUT DEF: ^.layer_0111.pos.i=^.layer_0111.pos.i - ^.layer_0.pos.i
0.246	OUT DEF: ^.layer_0111.pos.j=^.layer_0111.pos.j - 2
0.245	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.235	OUT DEF: ^.layer_0111.shape.size.i=^.layer_0.shape.size.i + 2
0.226	OUT DEF: ^.layer_0111.shape.size.j=^.layer_0.shape.size.j + 2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i + 2,^.layer_0.shape.size.j + 2) and color ^.layer_011.shape.color and mask x-cross at (1,^.layer_0.pos.j - 1)
  _01: a rectangle with size (^.layer_01.shape.size.i + 2,^.layer_01.shape.size.j + 2) and color ^.layer_01.shape.color and mask x.x.x|.xxx.|xxxxx|.xxx.|x.x.x at (1,^.layer_0.pos.j - 1)
  _011: a rectangle with size (^.layer_0.shape.size.i + 2,^.layer_0.shape.size.j + 2) and color ^.layer_011.shape.color and mask x-cross at (^.layer_0111.pos.i - ^.layer_0.pos.i,^.layer_01.pos.j - 1)
  _0111: a rectangle with size (^.layer_0.shape.size.i + 2,^.layer_0.shape.size.j + 2) and color ^.layer_0.shape.color and mask x.x.x|.xxx.|xxxxx|.xxx.|x.x.x at (^.layer_0111.pos.i - ^.layer_0.pos.i,^.layer_0111.pos.j - 2)
WHERE (Mi)
a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask Odd Checkboard at (2,?)
  _01: a rectangle with size (3,3) and color ? and mask Odd Checkboard at (?,7)
  _011: a point with color ? at (3,?)
  _0111: a point with color ? at (?,8)

DL input  with Mi: L = 136.7 + 764.1 = 900.8
DL output with Mo: L = 339.8 + 0.0 = 339.8
DL input+output M: L = 476.4 + 764.1 = 1240.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,7)
  _011: a point with color red at (3,2)
  _0111: a point with color red at (7,8)
diff: 
delta:
   (38.2 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask x-cross at (1,0)
  _01: a rectangle with size (5,5) and color orange and mask x.x.x|.xxx.|xxxxx|.xxx.|x.x.x at (1,0)
  _011: a rectangle with size (5,5) and color red and mask x-cross at (5,6)
  _0111: a rectangle with size (5,5) and color orange and mask x.x.x|.xxx.|xxxxx|.xxx.|x.x.x at (5,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,7)
  _011: a point with color red at (3,2)
  _0111: a point with color red at (7,8)
diff: 
delta:
correct output grid

TRAIN 0962bcdd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (8,7)
  _011: a point with color pink at (3,3)
  _0111: a point with color pink at (9,8)
diff: 
delta:
   (38.2 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask x-cross at (1,1)
  _01: a rectangle with size (5,5) and color cyan and mask x.x.x|.xxx.|xxxxx|.xxx.|x.x.x at (1,1)
  _011: a rectangle with size (5,5) and color pink and mask x-cross at (7,6)
  _0111: a rectangle with size (5,5) and color cyan and mask x.x.x|.xxx.|xxxxx|.xxx.|x.x.x at (7,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (8,7)
  _011: a point with color pink at (3,3)
  _0111: a point with color pink at (9,8)
diff: 
delta:
correct output grid

TRAIN 0962bcdd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,7)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (6,1)
  _011: a point with color yellow at (7,2)
  _0111: a point with color yellow at (2,8)
diff:   ^.layer_011.pos.i  ^.layer_01.pos.j  ^.layer_0.pos.i
delta:
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (6,1)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,7)
  _011: a point with color yellow at (2,8)
  _0111: a point with color yellow at (7,2)
diff:   ^.layer_0111.pos.j  ^.layer_011.pos.i  ^.layer_0.pos.i
delta:
! 51 wrong pixels (generated / expected)

TEST 0962bcdd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.5 sec (23.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-388] Checking task 0a938d79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2624.5 = 2633.4
DL output with Mo: L = 9.0 + 53868.4 = 53877.4
DL input+output M: L = 17.9 + 56492.9 = 56510.8

# learning a model for train pairs
2.000	
1.897	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.794	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.691	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.588	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.484	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers

DL input  with Mi: L = 9.0 + 2624.5 = 2633.4
DL output with Mo: L = 103.8 + 25958.1 = 26061.9
DL input+output M: L = 112.8 + 28582.6 = 28695.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,25) and color black and layers
diff: 
delta: (0,5)=2  (9,7)=8 
   (67.0 bits)
data: a background with size (10,25) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,7)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _0111: a rectangle with size (10,1) and color cyan and mask Full at (0,11)
  _01111: a rectangle with size (10,1) and color red and mask Full at (0,13)
diff: 
delta: (0,15)=8  (0,17)=2  (0,19)=8  (0,21)=2  (0,23)=8  (1,15)=8  (1,17)=2  (1,19)=8  (1,21)=2  (1,23)=8  (2,15)=8  (2,17)=2  (2,19)=8  (2,21)=2  (2,23)=8  (3,15)=8  (3,17)=2  (3,19)=8  (3,21)=2  (3,23)=8  (4,15)=8  (4,17)=2  (4,19)=8  (4,21)=2  (4,23)=8  (5,15)=8  (5,17)=2  (5,19)=8  (5,21)=2  (5,23)=8  (6,15)=8  (6,17)=2  (6,19)=8  (6,21)=2  (6,23)=8  (7,15)=8  (7,17)=2  (7,19)=8  (7,21)=2  (7,23)=8  (8,15)=8  (8,17)=2  (8,19)=8  (8,21)=2  (8,23)=8  (9,15)=8  (9,17)=2  (9,19)=8  (9,21)=2  (9,23)=8 
   (1203.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,25) and color black and layers
diff: 
delta: (0,5)=2  (9,7)=8 
! size mismatch, 10x10 instead of 10x25

TRAIN 0a938d79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,23) and color black and layers
diff: 
delta: (0,5)=1  (6,8)=3 
   (64.4 bits)
data: a background with size (7,23) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (0,5)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,8)
  _011: a rectangle with size (7,1) and color blue and mask Full at (0,11)
  _0111: a rectangle with size (7,1) and color green and mask Full at (0,14)
  _01111: a rectangle with size (7,1) and color blue and mask Full at (0,17)
diff: 
delta: (0,20)=3  (1,20)=3  (2,20)=3  (3,20)=3  (4,20)=3  (5,20)=3  (6,20)=3 
   (314.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,23) and color black and layers
diff: 
delta: (0,5)=1  (6,8)=3 
! size mismatch, 10x10 instead of 7x23

TRAIN 0a938d79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (22,9) and color black and layers
diff: 
delta: (5,0)=2  (7,8)=3 
   (65.6 bits)
data: a background with size (22,9) and color black and layers
  _0: a rectangle with size (1,9) and color red and mask Full at (5,0)
  _01: a rectangle with size (1,9) and color green and mask Full at (7,0)
  _011: a rectangle with size (1,9) and color red and mask Full at (9,0)
  _0111: a rectangle with size (1,9) and color green and mask Full at (11,0)
  _01111: a rectangle with size (1,9) and color red and mask Full at (13,0)
diff: 
delta: (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (17,0)=2  (17,1)=2  (17,2)=2  (17,3)=2  (17,4)=2  (17,5)=2  (17,6)=2  (17,7)=2  (17,8)=2  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,5)=3  (19,6)=3  (19,7)=3  (19,8)=3  (21,0)=2  (21,1)=2  (21,2)=2  (21,3)=2  (21,4)=2  (21,5)=2  (21,6)=2  (21,7)=2  (21,8)=2 
   (903.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,9) and color black and layers
diff: 
delta: (5,0)=2  (7,8)=3 
! size mismatch, 10x10 instead of 22x9

TRAIN 0a938d79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (24,8) and color black and layers
diff: 
delta: (7,0)=4  (11,0)=1 
   (65.4 bits)
data: a background with size (24,8) and color black and layers
  _0: a rectangle with size (1,8) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (1,8) and color blue and mask Full at (11,0)
  _011: a rectangle with size (1,8) and color yellow and mask Full at (15,0)
  _0111: a rectangle with size (1,8) and color blue and mask Full at (19,0)
  _01111: a rectangle with size (1,8) and color yellow and mask Full at (23,0)
diff: 
delta:
   (175.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,8) and color black and layers
diff: 
delta: (7,0)=4  (11,0)=1 
! size mismatch, 10x10 instead of 24x8

TRAIN 0a938d79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,27) and color black and layers
diff: 
delta: (0,5)=3  (10,10)=4 
! size mismatch, 10x10 instead of 11x27

TEST 0a938d79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.0 sec (17.0 sec/task)
bits-train-error = 25958.1 bits (25958.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-387] Checking task 0b148d64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 105637.5 = 105646.5
DL output with Mo: L = 9.0 + 14879.9 = 14888.9
DL input+output M: L = 17.9 + 120517.5 = 120535.4

# learning a model for train pairs
2.000	
1.286	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.999	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.758	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.577	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.518	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.498	OUT DEF: ^.layer_0.pos=^.layer_0111.pos
0.495	OUT DEF: ^.color=black
0.492	OUT DEF: ^.size=(?,?)
0.476	OUT DEF: ^.size.i=^.layer_0.shape.size.i - ^.layer_01.pos.i
0.474	OUT DEF: ^.layer_0.shape.size=(?,?)
0.458	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i - ^.layer_01.pos.i
0.457	IN  DEF: ^.color=black
0.457	IN  DEF: ^.size=(?,?)
0.457	IN  DEF: ^.layer_0.pos=(?,?)
0.456	IN  DEF: ^.layer_0.shape.size=(?,?)
0.456	IN  DEF: ^.layer_01.pos=(?,?)
0.456	IN  DEF: ^.layer_01.shape.size=(?,?)
0.455	IN  DEF: ^.layer_011.pos=(?,?)
0.455	IN  DEF: ^.layer_011.shape.size=(?,?)
0.455	IN  DEF: ^.layer_0111.pos=(?,?)
0.454	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i - ^.layer_01.pos.i,?) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - ^.layer_01.pos.i,?) and color ? and mask ? at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 125.3 + 24019.5 = 24144.8
DL output with Mo: L = 65.1 + 3295.3 = 3360.4
DL input+output M: L = 190.4 + 27314.9 = 27505.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,7) and color cyan and mask Full at (0,14)
  _01: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
  _011: a rectangle with size (5,2) and color cyan and mask Full at (0,8)
  _0111: a rectangle with size (9,10) and color cyan and mask xxxxx.xxxx|x..x.x.xxx|xxx...xxxx|xx.xxxx.xx|xxxx.xx.xx|...xx.x..x|xxxx..x.x.|x..x..xx.x|xxxxxx.x.. at (0,0)
diff: 
delta: (0,18)=0  (1,17)=0  (1,18)=0  (1,19)=0  (2,16)=0  (3,16)=0  (3,17)=0  (3,18)=0  (4,17)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,19)=0  (5,20)=0  (6,17)=0  (7,15)=0  (8,19)=0  (8,20)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=0  (10,14)=0  (10,15)=0  (10,16)=0  (10,17)=0  (10,18)=0  (10,19)=0  (10,20)=0  (11,16)=0  (11,19)=0  (12,18)=0  (12,20)=0  (13,17)=0  (13,18)=0  (13,19)=0  (14,16)=0  (14,20)=0  (15,19)=0  (15,20)=0  (16,15)=0  (16,17)=0  (17,16)=0  (17,18)=0  (17,19)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,20)=0  (19,14)=0  (19,17)=0  (19,18)=0  (20,17)=0 
   (1543.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (0,0)
diff: 
delta:
   (125.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,7) and color cyan and mask Full at (0,14)
  _01: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
  _011: a rectangle with size (9,10) and color cyan and mask xxxxx.xxxx|x..x.x.xxx|xxx...xxxx|xx.xxxx.xx|xxxx.xx.xx|...xx.x..x|xxxx..x.x.|x..x..xx.x|xxxxxx.x.. at (0,0)
  _0111: a rectangle with size (1,3) and color black and mask Full at (2,3)
diff: 
delta: (0,18)=0  (1,17)=0  (1,18)=0  (1,19)=0  (2,16)=0  (3,16)=0  (3,17)=0  (3,18)=0  (4,17)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,19)=0  (5,20)=0  (6,17)=0  (7,15)=0  (8,19)=0  (8,20)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=0  (10,14)=0  (10,15)=0  (10,16)=0  (10,17)=0  (10,18)=0  (10,19)=0  (10,20)=0  (11,16)=0  (11,19)=0  (12,18)=0  (12,20)=0  (13,17)=0  (13,18)=0  (13,19)=0  (14,16)=0  (14,20)=0  (15,19)=0  (15,20)=0  (16,15)=0  (16,17)=0  (17,16)=0  (17,18)=0  (17,19)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,20)=0  (19,14)=0  (19,17)=0  (19,18)=0  (20,17)=0 
! 76 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,7) and color cyan and mask Full at (0,14)
  _01: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
  _011: a rectangle with size (9,10) and color cyan and mask xxxxx.xxxx|x..x.x.xxx|xxx...xxxx|xx.xxxx.xx|xxxx.xx.xx|...xx.x..x|xxxx..x.x.|x..x..xx.x|xxxxxx.x.. at (0,0)
  _0111: a rectangle with size (1,3) and color black and mask Full at (5,0)
diff: 
delta: (0,18)=0  (1,17)=0  (1,18)=0  (1,19)=0  (2,16)=0  (3,16)=0  (3,17)=0  (3,18)=0  (4,17)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,19)=0  (5,20)=0  (6,17)=0  (7,15)=0  (8,19)=0  (8,20)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=0  (10,14)=0  (10,15)=0  (10,16)=0  (10,17)=0  (10,18)=0  (10,19)=0  (10,20)=0  (11,16)=0  (11,19)=0  (12,18)=0  (12,20)=0  (13,17)=0  (13,18)=0  (13,19)=0  (14,16)=0  (14,20)=0  (15,19)=0  (15,20)=0  (16,15)=0  (16,17)=0  (17,16)=0  (17,18)=0  (17,19)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,20)=0  (19,14)=0  (19,17)=0  (19,18)=0  (20,17)=0 
! 74 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,7) and color cyan and mask Full at (0,14)
  _01: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
  _011: a rectangle with size (5,2) and color cyan and mask Full at (0,8)
  _0111: a rectangle with size (9,10) and color cyan and mask xxxxx.xxxx|x..x.x.xxx|xxx...xxxx|xx.xxxx.xx|xxxx.xx.xx|...xx.x..x|xxxx..x.x.|x..x..xx.x|xxxxxx.x.. at (0,0)
diff: 
delta: (0,18)=0  (1,17)=0  (1,18)=0  (1,19)=0  (2,16)=0  (3,16)=0  (3,17)=0  (3,18)=0  (4,17)=0  (5,15)=0  (5,16)=0  (5,17)=0  (5,19)=0  (5,20)=0  (6,17)=0  (7,15)=0  (8,19)=0  (8,20)=0  (9,14)=0  (9,15)=0  (9,16)=0  (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=0  (10,14)=0  (10,15)=0  (10,16)=0  (10,17)=0  (10,18)=0  (10,19)=0  (10,20)=0  (11,16)=0  (11,19)=0  (12,18)=0  (12,20)=0  (13,17)=0  (13,18)=0  (13,19)=0  (14,16)=0  (14,20)=0  (15,19)=0  (15,20)=0  (16,15)=0  (16,17)=0  (17,16)=0  (17,18)=0  (17,19)=0  (18,15)=0  (18,16)=0  (18,17)=0  (18,20)=0  (19,14)=0  (19,17)=0  (19,18)=0  (20,17)=0 
! 77 wrong pixels (generated / expected)

TRAIN 0b148d64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
  _01: a rectangle with size (6,9) and color red and mask x.xxxx...|.xxxxx...|xxx.xxxxx|.xxxxxx..|...xx.xxx|..xxxx.x. at (0,10)
  _011: a rectangle with size (7,7) and color red and mask x.x...x|.xx..xx|.xx..x.|xxx..xx|x..xxx.|x.x...x|.xx.xx. at (11,0)
  _0111: a rectangle with size (6,7) and color red and mask x.xxxx.|xxxx.xx|..xx.x.|x.x.xx.|.x.xxxx|xxx.x.x at (0,0)
diff: 
delta: (0,18)=2  (5,10)=2 
   (413.1 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (0,0)
diff: 
delta:
   (88.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
  _01: a rectangle with size (6,9) and color red and mask x.xxxx...|.xxxxx...|xxx.xxxxx|.xxxxxx..|...xx.xxx|..xxxx.x. at (0,10)
  _011: a rectangle with size (6,7) and color red and mask x.xxxx.|xxxx.xx|..xx.x.|x.x.xx.|.x.xxxx|xxx.x.x at (0,0)
  _0111: a rectangle with size (7,7) and color red and mask x.x...x|.xx..xx|.xx..x.|xxx..xx|x..xxx.|x.x...x|.xx.xx. at (11,0)
diff: 
delta: (0,18)=2  (5,10)=2 
! size mismatch, 7x10 instead of 7x9
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
  _01: a rectangle with size (6,9) and color red and mask x.xxxx...|.xxxxx...|xxx.xxxxx|.xxxxxx..|...xx.xxx|..xxxx.x. at (0,10)
  _011: a rectangle with size (7,7) and color red and mask x.x...x|.xx..xx|.xx..x.|xxx..xx|x..xxx.|x.x...x|.xx.xx. at (11,0)
  _0111: a rectangle with size (6,7) and color red and mask x.xxxx.|xxxx.xx|..xx.x.|x.x.xx.|.x.xxxx|xxx.x.x at (0,0)
diff: 
delta: (0,18)=2  (5,10)=2 
! size mismatch, 7x10 instead of 7x9

TRAIN 0b148d64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
  _01: a rectangle with size (7,9) and color blue and mask xx.x.....|xxxxxx.xx|xxxxxx.xx|xx.xxxxxx|xx...xxx.|xx..xxxxx|xxx..x..x at (0,8)
  _011: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (10,0)
  _0111: a rectangle with size (7,6) and color blue and mask .x.xxx|x.x...|xx.xx.|xx..xx|.xxx..|x..x..|...xx. at (0,0)
diff: 
delta: (18,3)=4  (18,5)=4 
   (445.9 bits)
data: a background with size (9,6) and color black and layers
  _0: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (0,0)
diff: 
delta: (8,3)=4  (8,5)=4 
   (115.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
  _01: a rectangle with size (7,9) and color blue and mask xx.x.....|xxxxxx.xx|xxxxxx.xx|xx.xxxxxx|xx...xxx.|xx..xxxxx|xxx..x..x at (0,8)
  _011: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (10,0)
  _0111: a rectangle with size (7,6) and color blue and mask .x.xxx|x.x...|xx.xx.|xx..xx|.xxx..|x..x..|...xx. at (0,0)
diff: 
delta: (18,3)=4  (18,5)=4 
! size mismatch, 9x10 instead of 9x6
>> Trial 2
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
  _01: a rectangle with size (7,9) and color blue and mask xx.x.....|xxxxxx.xx|xxxxxx.xx|xx.xxxxxx|xx...xxx.|xx..xxxxx|xxx..x..x at (0,8)
  _011: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (10,0)
  _0111: a rectangle with size (2,5) and color blue and mask Full at (2,0)
diff: 
delta: (0,1)=1  (0,3)=1  (0,4)=1  (0,5)=1  (1,0)=1  (1,2)=1  (2,2)=0  (2,3)=1  (3,2)=0  (3,3)=0  (3,5)=1  (4,1)=1  (4,2)=1  (4,3)=1  (5,0)=1  (5,3)=1  (6,3)=1  (6,4)=1  (18,3)=4  (18,5)=4 
! size mismatch, 9x10 instead of 9x6

TRAIN 0b148d64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask xxxx.x|x.x.xx|xx.xx.|...xxx|xxxxxx|xxxxxx at (0,0)
  _01: a rectangle with size (6,9) and color green and mask x.xxxxxx.|.x.xxx...|...xxxx..|...xx.x..|...xxx.xx|.....x..x at (0,8)
  _011: a rectangle with size (5,9) and color green and mask xxx.x.x..|.x.xxx...|x...x...x|.xxxxxx.x|..xxx.xx. at (10,8)
  _0111: a rectangle with size (5,6) and color green and mask x....x|.xx..x|xxxxx.|x.x.x.|.xx... at (10,0)
diff: 
delta: (3,8)=3  (3,9)=3  (4,9)=3  (5,8)=3  (5,9)=3  (10,16)=3 
! size mismatch, 6x10 instead of 6x6

TEST 0b148d64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.4 sec (6.4 sec/task)
bits-train-error = 3295.3 bits (3295.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-386] Checking task 0ca9ddb6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2585.8 = 2594.8
DL output with Mo: L = 9.0 + 8642.4 = 8651.4
DL input+output M: L = 17.9 + 11228.2 = 11246.2

# learning a model for train pairs
2.000	
1.858	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.794	OUT DEF: ^.size=^.size
1.747	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.694	IN  DEF: ^.layer_0.shape.color=red
1.642	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.589	IN  DEF: ^.layer_01.shape.color=blue
1.553	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.524	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
1.488	OUT DEF: ^.layer_011=^.layer_0
1.458	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.422	OUT DEF: ^.layer_0111=^.layer_01
1.399	OUT DEF: ^.layer_0.shape.mask=Odd Checkboard
1.382	IN  DEF: ^.color=black
1.366	OUT DEF: ^.layer_0.shape.color=orange
1.352	IN  DEF: ^.size=(?,?)
1.254	IN  DEF: ^.size.i=9
1.156	IN  DEF: ^.size.j=9
1.143	IN  DEF: ^.layer_0.pos=(?,?)
1.129	IN  DEF: ^.layer_01.pos=(?,?)
1.116	OUT OBJECT at ^.layer_01111: a point with color ? at ?
1.100	OUT DEF: ^.layer_01111.shape.color=yellow
1.086	OUT OBJECT at ^.layer_011111: a point with color ? at ?
1.070	OUT DEF: ^.layer_011111.shape.color=yellow
1.055	OUT OBJECT at ^.layer_0111111: a point with color ? at ?
1.039	OUT DEF: ^.layer_0111111.shape.color=yellow
1.034	OUT DEF: ^.color=black
1.029	OUT DEF: ^.layer_0.pos=(?,?)
1.015	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i - 1
1.001	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j - 1
0.997	OUT DEF: ^.layer_0.shape.size=(?,?)
0.978	OUT DEF: ^.layer_0.shape.size.i=3
0.959	OUT DEF: ^.layer_0.shape.size.j=3
0.955	OUT DEF: ^.layer_01.pos=(?,?)
0.940	OUT DEF: ^.layer_01.pos.j=1
0.936	OUT DEF: ^.layer_01.shape.size=(?,?)
0.932	OUT DEF: ^.layer_01111.pos=(?,?)
0.918	OUT DEF: ^.layer_01111.pos.i=^.layer_0.pos.i - 1
0.903	OUT DEF: ^.layer_01111.pos.j=^.layer_0.pos.j - 1
0.899	OUT DEF: ^.layer_011111.pos=(?,?)
0.885	OUT DEF: ^.layer_011111.pos.i=^.layer_0.pos.i - 1
0.871	OUT DEF: ^.layer_011111.pos.j=^.layer_0.pos.j + 1
0.867	OUT DEF: ^.layer_0111111.pos=(?,?)
0.853	OUT DEF: ^.layer_0111111.pos.i=^.layer_0.pos.i + 1
0.838	OUT DEF: ^.layer_0111111.pos.j=^.layer_0.pos.j + 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (^.layer_01.pos.i - 1,^.layer_01.pos.j - 1)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,1)
  _011: ^.layer_0
  _0111: ^.layer_01
  _01111: a point with color yellow at (^.layer_0.pos.i - 1,^.layer_0.pos.j - 1)
  _011111: a point with color yellow at (^.layer_0.pos.i - 1,^.layer_0.pos.j + 1)
  _0111111: a point with color yellow at (^.layer_0.pos.i + 1,^.layer_0.pos.j + 1)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 60.1 + 1342.8 = 1402.9
DL output with Mo: L = 229.2 + 2346.5 = 2575.6
DL input+output M: L = 289.3 + 3689.2 = 3978.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (6,6)
diff: 
delta:
   (18.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,1)
  _011: a point with color red at (3,2)
  _0111: a point with color blue at (6,6)
  _01111: a point with color yellow at (2,1)
  _011111: a point with color yellow at (2,3)
  _0111111: a point with color yellow at (4,3)
diff: 
delta:
   (16.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (6,6)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,6)
  _01: a point with color red at (3,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 19 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (6,6)
diff: 
delta: (0,3)=8  (3,2)=1  (7,1)=2 
   (77.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,5)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _011: a point with color red at (2,6)
  _0111: a point with color blue at (6,6)
  _01111: a point with color yellow at (1,5)
  _011111: a point with color yellow at (1,7)
  _0111111: a point with color yellow at (3,7)
diff: 
delta: (0,3)=8  (3,2)=1  (3,5)=4  (6,0)=4  (6,2)=4  (7,1)=2  (8,0)=4  (8,2)=4 
   (181.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (3,2)
diff: 
delta: (0,3)=8  (6,6)=1  (7,1)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (6,6)
diff: 
delta: (0,3)=8  (3,2)=1  (7,1)=2 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color blue at (3,2)
diff: 
delta: (0,3)=8  (2,6)=2  (6,6)=1 
! 16 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color blue at (7,3)
diff: 
delta: (5,6)=6 
   (38.6 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,1)
  _011: a point with color red at (2,2)
  _0111: a point with color blue at (7,3)
  _01111: a point with color yellow at (1,1)
  _011111: a point with color yellow at (1,3)
  _0111111: a point with color yellow at (3,3)
diff: 
delta: (5,6)=6 
   (36.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color blue at (7,3)
diff: 
delta: (5,6)=6 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color pink at (5,6)
diff:   ^.layer_01.shape.color
delta: (7,3)=1 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color pink at (5,6)
  _01: a point with color blue at (7,3)
diff:   ^.layer_0.shape.color
delta: (2,2)=2 
! 11 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (2,6)
diff: 
delta: (5,5)=8  (7,1)=6  (7,7)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (7,7)
  _01: a point with color blue at (2,6)
diff: 
delta: (3,2)=2  (5,5)=8  (7,1)=6 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color cyan at (5,5)
diff:   ^.layer_01.shape.color
delta: (2,6)=1  (7,1)=6  (7,7)=2 
! 20 wrong pixels (generated / expected)

TEST 0ca9ddb6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.4 sec (11.4 sec/task)
bits-train-error = 2346.5 bits (2346.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-385] Checking task 0d3d703e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4737.1 = 4746.0
DL output with Mo: L = 9.0 + 4737.1 = 4746.0
DL input+output M: L = 17.9 + 9474.1 = 9492.1

# learning a model for train pairs
2.000	
1.796	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.573	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.369	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.145	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.042	OUT DEF: ^.size=^.size
0.964	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.887	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.827	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.767	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.747	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.727	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.708	IN  DEF: ^.layer_0.shape.mask=Full
0.688	IN  DEF: ^.layer_01.shape.mask=Full
0.678	IN  DEF: ^.size=(?,?)
0.632	IN  DEF: ^.size.i=3
0.586	IN  DEF: ^.size.j=3
0.576	IN  DEF: ^.layer_0.pos=(?,?)
0.551	IN  DEF: ^.layer_0.pos.i=0
0.527	IN  DEF: ^.layer_0.pos.j=0
0.516	IN  DEF: ^.layer_0.shape.size=(?,?)
0.471	IN  DEF: ^.layer_0.shape.size.i=3
0.451	IN  DEF: ^.layer_0.shape.size.j=1
0.441	IN  DEF: ^.layer_01.pos=(?,?)
0.416	IN  DEF: ^.layer_01.pos.i=0
0.392	IN  DEF: ^.layer_01.pos.j=1
0.381	IN  DEF: ^.layer_01.shape.size=(?,?)
0.336	IN  DEF: ^.layer_01.shape.size.i=3
0.316	IN  DEF: ^.layer_01.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (3,1) and color ? and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color ? and mask Full at (0,1)

DL input  with Mi: L = 74.2 + 690.1 = 764.4
DL output with Mo: L = 44.1 + 690.1 = 734.2
DL input+output M: L = 118.3 + 1380.3 = 1498.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff:   ^.layer_01.pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff:   ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff:   ^.layer_01.pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff:   ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color brown and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff:   ^.layer_01.pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
diff:   ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff:   ^.layer_01.pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff:   ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff:   ^.layer_01.pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff:   ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TEST 0d3d703e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 690.1 bits (690.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-384] Checking task 0dfd9992.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 225299.1 = 225308.1
DL output with Mo: L = 9.0 + 218564.2 = 218573.2
DL input+output M: L = 17.9 + 443863.3 = 443881.3

# learning a model for train pairs
2.000	
1.983	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.967	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.943	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.927	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.910	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.889	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 213159.9 = 213226.6
DL output with Mo: L = 66.8 + 206036.4 = 206103.2
DL input+output M: L = 133.5 + 419196.3 = 419329.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (1,4)
  _01: a rectangle with size (13,1) and color red and mask Full at (0,5)
  _011: a rectangle with size (1,19) and color red and mask Full at (2,1)
diff: 
delta: (0,0)=3  (0,2)=5# (0,4)=3  (0,6)=3  (0,8)=5# (0,10)=3  (0,11)=2  (0,12)=3  (0,14)=5# (0,16)=3  (0,17)=2  (0,18)=3  (0,20)=5# (1,1)=3  (1,2)=2  (1,3)=3  (1,7)=3  (1,8)=2  (1,9)=3  (1,11)=5# (1,13)=3  (1,14)=2  (1,15)=3  (1,17)=5# (1,19)=3  (1,20)=2  (2,0)=5# (2,2)=1  (2,5)=4  (2,8)=1  (2,10)=5# (2,11)=4  (2,12)=5# (2,14)=1  (2,16)=5# (2,17)=4  (2,18)=5# (2,20)=1  (3,1)=3  (3,2)=2  (3,3)=3  (3,7)=3  (3,8)=2  (3,9)=3  (3,11)=5# (3,13)=3  (3,14)=2  (3,15)=3  (3,17)=5# (3,19)=3  (3,20)=2  (4,0)=3  (4,2)=5# (4,4)=3  (4,6)=3  (4,8)=5# (4,10)=3  (4,11)=2  (4,12)=3  (4,14)=5# (4,15)=0  (4,16)=0  (4,17)=0  (4,18)=0  (4,19)=0  (4,20)=5# (5,0)=2  (5,1)=5# (5,2)=4  (5,3)=5# (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=5# (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=5# (5,14)=4  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=0  (5,19)=0  (5,20)=4  (6,0)=3  (6,2)=5# (6,4)=3  (6,6)=3  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=2  (6,12)=3  (6,14)=5# (6,15)=0  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (6,20)=5# (7,1)=3  (7,2)=2  (7,3)=3  (7,5)=5# (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=5# (7,13)=3  (7,14)=2  (7,15)=3  (7,17)=5# (7,19)=3  (7,20)=2  (8,0)=5# (8,1)=2  (8,2)=1  (8,3)=2  (8,4)=5# (8,5)=4  (8,6)=5# (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=4  (8,12)=5# (8,13)=2  (8,14)=1  (8,15)=2  (8,16)=5# (8,17)=4  (8,18)=5# (8,19)=2  (8,20)=1  (9,1)=3  (9,2)=2  (9,3)=3  (9,5)=5# (9,7)=3  (9,8)=0  (9,9)=0  (9,11)=5# (9,13)=3  (9,14)=2  (9,15)=3  (9,17)=5# (9,19)=3  (9,20)=2  (10,0)=3  (10,2)=5# (10,4)=3  (10,6)=3  (10,8)=5# (10,10)=3  (10,11)=2  (10,12)=3  (10,14)=5# (10,16)=3  (10,17)=2  (10,18)=3  (10,20)=5# (11,0)=2  (11,1)=5# (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,7)=5# (11,8)=4  (11,9)=5# (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=5# (11,14)=4  (11,15)=5# (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=5# (11,20)=4  (12,0)=3  (12,2)=5# (12,3)=0  (12,4)=0  (12,6)=3  (12,8)=5# (12,10)=3  (12,11)=2  (12,12)=3  (12,14)=5# (12,16)=3  (12,17)=2  (12,18)=3  (12,20)=5# (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,5)=5# (13,7)=3  (13,8)=2  (13,9)=3  (13,11)=5# (13,13)=3  (13,14)=2  (13,15)=3  (13,17)=5# (13,19)=3  (13,20)=2  (14,0)=5# (14,1)=2  (14,2)=1  (14,3)=2  (14,4)=5# (14,5)=4  (14,6)=5# (14,7)=2  (14,8)=1  (14,9)=2  (14,10)=5# (14,11)=4  (14,12)=5# (14,13)=2  (14,14)=1  (14,15)=2  (14,16)=5# (14,17)=4  (14,18)=5# (14,19)=2  (14,20)=1  (15,1)=3  (15,2)=2  (15,3)=3  (15,5)=5# (15,7)=3  (15,8)=2  (15,9)=3  (15,11)=5# (15,13)=3  (15,14)=2  (15,15)=3  (15,17)=5# (15,19)=3  (15,20)=2  (16,0)=3  (16,2)=5# (16,4)=0  (16,5)=0  (16,6)=0  (16,8)=5# (16,10)=3  (16,11)=2  (16,12)=3  (16,14)=5# (16,16)=3  (16,17)=2  (16,18)=3  (16,20)=5# (17,0)=2  (17,1)=5# (17,2)=4  (17,3)=5# (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=5# (17,8)=4  (17,9)=5# (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=5# (17,14)=4  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=4  (18,0)=3  (18,2)=5# (18,4)=0  (18,5)=0  (18,6)=0  (18,8)=5# (18,10)=3  (18,11)=2  (18,12)=3  (18,14)=5# (18,16)=3  (18,17)=2  (18,18)=3  (18,20)=5# (19,1)=3  (19,2)=2  (19,3)=3  (19,5)=5# (19,7)=3  (19,8)=2  (19,9)=3  (19,11)=5# (19,13)=3  (19,14)=2  (19,15)=3  (19,17)=5# (19,19)=3  (19,20)=2  (20,0)=5# (20,1)=2  (20,2)=1  (20,3)=2  (20,4)=5# (20,5)=4  (20,6)=5# (20,7)=2  (20,8)=1  (20,9)=2  (20,10)=5# (20,11)=4  (20,12)=5# (20,13)=2  (20,14)=1  (20,15)=2  (20,16)=5# (20,17)=4  (20,18)=5# (20,19)=2  (20,20)=1 
   (7220.7 bits)
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (3,3) and color red and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (3,3) and color red and mask Odd Checkboard at (1,7)
  _011: a rectangle with size (1,19) and color grey and mask Full at (2,0)
diff: 
delta: (0,0)=3  (0,2)=5# (0,4)=3  (0,5)=2  (0,6)=3  (0,8)=5# (0,10)=3  (0,11)=2  (0,12)=3  (0,14)=5# (0,16)=3  (0,17)=2  (0,18)=3  (0,20)=5# (1,1)=3  (1,3)=3  (1,5)=5# (1,7)=3  (1,9)=3  (1,11)=5# (1,13)=3  (1,14)=2  (1,15)=3  (1,17)=5# (1,19)=3  (1,20)=2  (2,2)=1  (2,5)=4  (2,8)=1  (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,1)=3  (3,3)=3  (3,5)=5# (3,7)=3  (3,9)=3  (3,11)=5# (3,13)=3  (3,14)=2  (3,15)=3  (3,17)=5# (3,19)=3  (3,20)=2  (4,0)=3  (4,2)=5# (4,4)=3  (4,5)=2  (4,6)=3  (4,8)=5# (4,10)=3  (4,11)=2  (4,12)=3  (4,14)=5# (4,16)=3  (4,17)=2  (4,18)=3  (4,20)=5# (5,0)=2  (5,1)=5# (5,2)=4  (5,3)=5# (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=5# (5,8)=4  (5,9)=5# (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=5# (5,14)=4  (5,15)=5# (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=4  (6,0)=3  (6,2)=5# (6,4)=3  (6,5)=2  (6,6)=3  (6,8)=5# (6,10)=3  (6,11)=2  (6,12)=3  (6,14)=5# (6,16)=3  (6,17)=2  (6,18)=3  (6,20)=5# (7,1)=3  (7,2)=2  (7,3)=3  (7,5)=5# (7,7)=3  (7,8)=2  (7,9)=3  (7,11)=5# (7,13)=3  (7,14)=2  (7,15)=3  (7,17)=5# (7,19)=3  (7,20)=2  (8,0)=5# (8,1)=2  (8,2)=1  (8,3)=2  (8,4)=5# (8,5)=4  (8,6)=5# (8,7)=2  (8,8)=1  (8,9)=2  (8,10)=5# (8,11)=4  (8,12)=5# (8,13)=2  (8,14)=1  (8,15)=2  (8,16)=5# (8,17)=4  (8,18)=5# (8,19)=2  (8,20)=1  (9,1)=3  (9,2)=2  (9,3)=3  (9,5)=5# (9,7)=3  (9,8)=2  (9,9)=3  (9,11)=5# (9,13)=3  (9,14)=2  (9,15)=3  (9,17)=5# (9,19)=3  (9,20)=2  (10,0)=3  (10,2)=5# (10,4)=3  (10,5)=2  (10,6)=3  (10,8)=5# (10,10)=3  (10,11)=2  (10,12)=3  (10,14)=5# (10,16)=3  (10,17)=2  (10,18)=3  (10,20)=5# (11,0)=2  (11,1)=5# (11,2)=4  (11,3)=5# (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=5# (11,8)=4  (11,9)=5# (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=5# (11,14)=4  (11,15)=5# (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=5# (11,20)=4  (12,0)=3  (12,2)=5# (12,4)=3  (12,5)=2  (12,6)=3  (12,8)=5# (12,10)=3  (12,11)=2  (12,12)=3  (12,14)=5# (12,16)=3  (12,17)=2  (12,18)=3  (12,20)=5# (13,1)=3  (13,2)=2  (13,3)=3  (13,5)=5# (13,7)=3  (13,8)=2  (13,9)=3  (13,11)=5# (13,13)=3  (13,14)=2  (13,15)=3  (13,17)=5# (13,19)=3  (13,20)=2  (14,0)=5# (14,1)=2  (14,2)=1  (14,3)=2  (14,4)=5# (14,5)=4  (14,6)=5# (14,7)=2  (14,8)=1  (14,9)=2  (14,10)=5# (14,11)=4  (14,12)=5# (14,13)=2  (14,14)=1  (14,15)=2  (14,16)=5# (14,17)=4  (14,18)=5# (14,19)=2  (14,20)=1  (15,1)=3  (15,2)=2  (15,3)=3  (15,5)=5# (15,7)=3  (15,8)=2  (15,9)=3  (15,11)=5# (15,13)=3  (15,14)=2  (15,15)=3  (15,17)=5# (15,19)=3  (15,20)=2  (16,0)=3  (16,2)=5# (16,4)=3  (16,5)=2  (16,6)=3  (16,8)=5# (16,10)=3  (16,11)=2  (16,12)=3  (16,14)=5# (16,16)=3  (16,17)=2  (16,18)=3  (16,20)=5# (17,0)=2  (17,1)=5# (17,2)=4  (17,3)=5# (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=5# (17,8)=4  (17,9)=5# (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=5# (17,14)=4  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=4  (18,0)=3  (18,2)=5# (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=5# (18,10)=3  (18,11)=2  (18,12)=3  (18,14)=5# (18,16)=3  (18,17)=2  (18,18)=3  (18,20)=5# (19,1)=3  (19,2)=2  (19,3)=3  (19,5)=5# (19,7)=3  (19,8)=2  (19,9)=3  (19,11)=5# (19,13)=3  (19,14)=2  (19,15)=3  (19,17)=5# (19,19)=3  (19,20)=2  (20,0)=5# (20,1)=2  (20,2)=1  (20,3)=2  (20,4)=5# (20,5)=4  (20,6)=5# (20,7)=2  (20,8)=1  (20,9)=2  (20,10)=5# (20,11)=4  (20,12)=5# (20,13)=2  (20,14)=1  (20,15)=2  (20,16)=5# (20,17)=4  (20,18)=5# (20,19)=2  (20,20)=1 
   (7055.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (1,4)
  _01: a rectangle with size (13,1) and color red and mask Full at (0,5)
  _011: a rectangle with size (1,19) and color red and mask Full at (2,1)
diff: 
delta: (0,0)=3  (0,2)=5# (0,4)=3  (0,6)=3  (0,8)=5# (0,10)=3  (0,11)=2  (0,12)=3  (0,14)=5# (0,16)=3  (0,17)=2  (0,18)=3  (0,20)=5# (1,1)=3  (1,2)=2  (1,3)=3  (1,7)=3  (1,8)=2  (1,9)=3  (1,11)=5# (1,13)=3  (1,14)=2  (1,15)=3  (1,17)=5# (1,19)=3  (1,20)=2  (2,0)=5# (2,2)=1  (2,5)=4  (2,8)=1  (2,10)=5# (2,11)=4  (2,12)=5# (2,14)=1  (2,16)=5# (2,17)=4  (2,18)=5# (2,20)=1  (3,1)=3  (3,2)=2  (3,3)=3  (3,7)=3  (3,8)=2  (3,9)=3  (3,11)=5# (3,13)=3  (3,14)=2  (3,15)=3  (3,17)=5# (3,19)=3  (3,20)=2  (4,0)=3  (4,2)=5# (4,4)=3  (4,6)=3  (4,8)=5# (4,10)=3  (4,11)=2  (4,12)=3  (4,14)=5# (4,15)=0  (4,16)=0  (4,17)=0  (4,18)=0  (4,19)=0  (4,20)=5# (5,0)=2  (5,1)=5# (5,2)=4  (5,3)=5# (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=5# (5,8)=0  (5,9)=0  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=5# (5,14)=4  (5,15)=0  (5,16)=0  (5,17)=0  (5,18)=0  (5,19)=0  (5,20)=4  (6,0)=3  (6,2)=5# (6,4)=3  (6,6)=3  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=2  (6,12)=3  (6,14)=5# (6,15)=0  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (6,20)=5# (7,1)=3  (7,2)=2  (7,3)=3  (7,5)=5# (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=5# (7,13)=3  (7,14)=2  (7,15)=3  (7,17)=5# (7,19)=3  (7,20)=2  (8,0)=5# (8,1)=2  (8,2)=1  (8,3)=2  (8,4)=5# (8,5)=4  (8,6)=5# (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=4  (8,12)=5# (8,13)=2  (8,14)=1  (8,15)=2  (8,16)=5# (8,17)=4  (8,18)=5# (8,19)=2  (8,20)=1  (9,1)=3  (9,2)=2  (9,3)=3  (9,5)=5# (9,7)=3  (9,8)=0  (9,9)=0  (9,11)=5# (9,13)=3  (9,14)=2  (9,15)=3  (9,17)=5# (9,19)=3  (9,20)=2  (10,0)=3  (10,2)=5# (10,4)=3  (10,6)=3  (10,8)=5# (10,10)=3  (10,11)=2  (10,12)=3  (10,14)=5# (10,16)=3  (10,17)=2  (10,18)=3  (10,20)=5# (11,0)=2  (11,1)=5# (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,7)=5# (11,8)=4  (11,9)=5# (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=5# (11,14)=4  (11,15)=5# (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=5# (11,20)=4  (12,0)=3  (12,2)=5# (12,3)=0  (12,4)=0  (12,6)=3  (12,8)=5# (12,10)=3  (12,11)=2  (12,12)=3  (12,14)=5# (12,16)=3  (12,17)=2  (12,18)=3  (12,20)=5# (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,5)=5# (13,7)=3  (13,8)=2  (13,9)=3  (13,11)=5# (13,13)=3  (13,14)=2  (13,15)=3  (13,17)=5# (13,19)=3  (13,20)=2  (14,0)=5# (14,1)=2  (14,2)=1  (14,3)=2  (14,4)=5# (14,5)=4  (14,6)=5# (14,7)=2  (14,8)=1  (14,9)=2  (14,10)=5# (14,11)=4  (14,12)=5# (14,13)=2  (14,14)=1  (14,15)=2  (14,16)=5# (14,17)=4  (14,18)=5# (14,19)=2  (14,20)=1  (15,1)=3  (15,2)=2  (15,3)=3  (15,5)=5# (15,7)=3  (15,8)=2  (15,9)=3  (15,11)=5# (15,13)=3  (15,14)=2  (15,15)=3  (15,17)=5# (15,19)=3  (15,20)=2  (16,0)=3  (16,2)=5# (16,4)=0  (16,5)=0  (16,6)=0  (16,8)=5# (16,10)=3  (16,11)=2  (16,12)=3  (16,14)=5# (16,16)=3  (16,17)=2  (16,18)=3  (16,20)=5# (17,0)=2  (17,1)=5# (17,2)=4  (17,3)=5# (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=5# (17,8)=4  (17,9)=5# (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=5# (17,14)=4  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=4  (18,0)=3  (18,2)=5# (18,4)=0  (18,5)=0  (18,6)=0  (18,8)=5# (18,10)=3  (18,11)=2  (18,12)=3  (18,14)=5# (18,16)=3  (18,17)=2  (18,18)=3  (18,20)=5# (19,1)=3  (19,2)=2  (19,3)=3  (19,5)=5# (19,7)=3  (19,8)=2  (19,9)=3  (19,11)=5# (19,13)=3  (19,14)=2  (19,15)=3  (19,17)=5# (19,19)=3  (19,20)=2  (20,0)=5# (20,1)=2  (20,2)=1  (20,3)=2  (20,4)=5# (20,5)=4  (20,6)=5# (20,7)=2  (20,8)=1  (20,9)=2  (20,10)=5# (20,11)=4  (20,12)=5# (20,13)=2  (20,14)=1  (20,15)=2  (20,16)=5# (20,17)=4  (20,18)=5# (20,19)=2  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (7,7)
  _01: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (14,7)
  _011: a rectangle with size (16,2) and color grey and mask Full at (1,8)
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=7# (0,3)=2  (0,5)=5# (0,7)=2  (0,8)=7# (0,9)=7# (0,10)=2  (0,12)=5# (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,19)=5# (1,0)=7# (1,1)=5# (1,2)=5# (1,3)=7# (1,4)=4  (1,5)=3  (1,6)=4  (1,7)=7# (1,10)=7# (1,11)=4  (1,12)=3  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,19)=3  (1,20)=4  (2,0)=7# (2,1)=5# (2,2)=5# (2,3)=7# (2,4)=4  (2,5)=3  (2,6)=4  (2,7)=7# (2,10)=7# (2,11)=4  (2,12)=3  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,19)=3  (2,20)=4  (3,0)=2  (3,1)=7# (3,2)=7# (3,3)=2  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=7# (3,10)=2  (3,12)=5# (3,14)=2  (3,15)=7# (3,16)=0  (3,17)=0  (3,19)=5# (4,1)=4  (4,2)=4  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,11)=3  (4,12)=2  (4,13)=3  (4,15)=4  (4,16)=0  (4,17)=0  (4,18)=3  (4,19)=2  (4,20)=3  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,15)=3  (5,16)=0  (5,17)=0  (5,18)=2  (5,19)=1  (5,20)=2  (6,1)=4  (6,2)=4  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,11)=3  (6,12)=2  (6,13)=3  (6,15)=4  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (6,20)=3  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,5)=5# (7,7)=2  (7,10)=2  (7,12)=5# (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=0  (7,18)=0  (7,19)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=3  (8,6)=4  (8,11)=4  (8,12)=3  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=0  (8,18)=0  (8,19)=0  (8,20)=4  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,5)=3  (9,6)=4  (9,11)=4  (9,12)=3  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=5# (10,7)=2  (10,10)=2  (10,12)=5# (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,19)=5# (11,1)=4  (11,2)=4  (11,4)=3  (11,5)=2  (11,6)=3  (11,8)=4  (11,9)=4  (11,11)=3  (11,12)=2  (11,13)=3  (11,15)=4  (11,16)=4  (11,18)=3  (11,19)=2  (11,20)=3  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,8)=3  (12,9)=3  (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,15)=3  (12,16)=3  (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,1)=4  (13,2)=4  (13,4)=3  (13,5)=2  (13,6)=3  (13,8)=4  (13,9)=4  (13,11)=3  (13,12)=2  (13,13)=3  (13,15)=4  (13,16)=0  (13,17)=0  (13,18)=3  (13,19)=2  (13,20)=3  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,5)=5# (14,7)=2  (14,10)=2  (14,12)=5# (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,19)=5# (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,5)=3  (15,6)=4  (15,11)=4  (15,12)=3  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,5)=3  (16,6)=4  (16,11)=4  (16,12)=3  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,5)=5# (17,7)=2  (17,10)=2  (17,12)=5# (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,19)=5# (18,1)=4  (18,2)=4  (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=4  (18,9)=4  (18,11)=3  (18,12)=2  (18,13)=3  (18,15)=4  (18,16)=4  (18,18)=3  (18,19)=2  (18,20)=3  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,8)=3  (19,9)=3  (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,15)=3  (19,16)=3  (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,1)=4  (20,2)=4  (20,4)=3  (20,5)=2  (20,6)=3  (20,8)=4  (20,9)=4  (20,11)=3  (20,12)=2  (20,13)=3  (20,15)=4  (20,16)=4  (20,18)=3  (20,19)=2  (20,20)=3 
   (7548.3 bits)
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (0,7)
  _011: a rectangle with size (2,16) and color grey and mask Full at (1,1)
diff: 
delta: (0,0)=2  (0,3)=2  (0,5)=5# (0,7)=2  (0,10)=2  (0,12)=5# (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,19)=5# (1,4)=4  (1,5)=3  (1,6)=4  (1,11)=4  (1,12)=3  (1,13)=4  (1,14)=7# (1,17)=7# (1,18)=4  (1,19)=3  (1,20)=4  (2,4)=4  (2,5)=3  (2,6)=4  (2,11)=4  (2,12)=3  (2,13)=4  (2,14)=7# (2,17)=7# (2,18)=4  (2,19)=3  (2,20)=4  (3,0)=2  (3,3)=2  (3,5)=5# (3,7)=2  (3,10)=2  (3,12)=5# (3,14)=2  (3,15)=7# (3,16)=7# (3,17)=2  (3,19)=5# (4,1)=4  (4,2)=4  (4,4)=3  (4,5)=2  (4,6)=3  (4,8)=4  (4,9)=4  (4,11)=3  (4,12)=2  (4,13)=3  (4,15)=4  (4,16)=4  (4,18)=3  (4,19)=2  (4,20)=3  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=5# (5,8)=3  (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,15)=3  (5,16)=3  (5,17)=5# (5,18)=2  (5,19)=1  (5,20)=2  (6,1)=4  (6,2)=4  (6,4)=3  (6,5)=2  (6,6)=3  (6,8)=4  (6,9)=4  (6,11)=3  (6,12)=2  (6,13)=3  (6,15)=4  (6,16)=4  (6,18)=3  (6,19)=2  (6,20)=3  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,5)=5# (7,7)=2  (7,8)=7# (7,9)=7# (7,10)=2  (7,12)=5# (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=2  (7,19)=5# (8,0)=7# (8,1)=5# (8,2)=5# (8,3)=7# (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=7# (8,8)=5# (8,9)=5# (8,10)=7# (8,11)=4  (8,12)=3  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=7# (8,18)=4  (8,19)=3  (8,20)=4  (9,0)=7# (9,1)=5# (9,2)=5# (9,3)=7# (9,4)=4  (9,5)=3  (9,6)=4  (9,7)=7# (9,8)=5# (9,9)=5# (9,10)=7# (9,11)=4  (9,12)=3  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=7# (9,18)=4  (9,19)=3  (9,20)=4  (10,0)=2  (10,1)=7# (10,2)=7# (10,3)=2  (10,5)=5# (10,7)=2  (10,8)=7# (10,9)=7# (10,10)=2  (10,12)=5# (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,19)=5# (11,1)=4  (11,2)=4  (11,4)=3  (11,5)=2  (11,6)=3  (11,8)=4  (11,9)=4  (11,11)=3  (11,12)=2  (11,13)=3  (11,15)=4  (11,16)=4  (11,18)=3  (11,19)=2  (11,20)=3  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,8)=3  (12,9)=3  (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,15)=3  (12,16)=3  (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,1)=4  (13,2)=4  (13,4)=3  (13,5)=2  (13,6)=3  (13,8)=4  (13,9)=4  (13,11)=3  (13,12)=2  (13,13)=3  (13,15)=4  (13,16)=4  (13,18)=3  (13,19)=2  (13,20)=3  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,5)=5# (14,7)=2  (14,8)=7# (14,9)=7# (14,10)=2  (14,12)=5# (14,14)=2  (14,15)=7# (14,16)=7# (14,17)=2  (14,19)=5# (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,5)=3  (15,6)=4  (15,7)=7# (15,8)=5# (15,9)=5# (15,10)=7# (15,11)=4  (15,12)=3  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=5# (15,17)=7# (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,5)=3  (16,6)=4  (16,7)=7# (16,8)=5# (16,9)=5# (16,10)=7# (16,11)=4  (16,12)=3  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,5)=5# (17,7)=2  (17,8)=7# (17,9)=7# (17,10)=2  (17,12)=5# (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,19)=5# (18,1)=4  (18,2)=4  (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=4  (18,9)=4  (18,11)=3  (18,12)=2  (18,13)=3  (18,15)=4  (18,16)=4  (18,18)=3  (18,19)=2  (18,20)=3  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,8)=3  (19,9)=3  (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,15)=3  (19,16)=3  (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,1)=4  (20,2)=4  (20,4)=3  (20,5)=2  (20,6)=3  (20,8)=4  (20,9)=4  (20,11)=3  (20,12)=2  (20,13)=3  (20,15)=4  (20,16)=4  (20,18)=3  (20,19)=2  (20,20)=3 
   (7358.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (7,7)
  _01: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (14,7)
  _011: a rectangle with size (16,2) and color grey and mask Full at (1,8)
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=7# (0,3)=2  (0,5)=5# (0,7)=2  (0,8)=7# (0,9)=7# (0,10)=2  (0,12)=5# (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,19)=5# (1,0)=7# (1,1)=5# (1,2)=5# (1,3)=7# (1,4)=4  (1,5)=3  (1,6)=4  (1,7)=7# (1,10)=7# (1,11)=4  (1,12)=3  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,19)=3  (1,20)=4  (2,0)=7# (2,1)=5# (2,2)=5# (2,3)=7# (2,4)=4  (2,5)=3  (2,6)=4  (2,7)=7# (2,10)=7# (2,11)=4  (2,12)=3  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,19)=3  (2,20)=4  (3,0)=2  (3,1)=7# (3,2)=7# (3,3)=2  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=7# (3,10)=2  (3,12)=5# (3,14)=2  (3,15)=7# (3,16)=0  (3,17)=0  (3,19)=5# (4,1)=4  (4,2)=4  (4,4)=0  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,11)=3  (4,12)=2  (4,13)=3  (4,15)=4  (4,16)=0  (4,17)=0  (4,18)=3  (4,19)=2  (4,20)=3  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,15)=3  (5,16)=0  (5,17)=0  (5,18)=2  (5,19)=1  (5,20)=2  (6,1)=4  (6,2)=4  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,11)=3  (6,12)=2  (6,13)=3  (6,15)=4  (6,16)=0  (6,17)=0  (6,18)=0  (6,19)=0  (6,20)=3  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,5)=5# (7,7)=2  (7,10)=2  (7,12)=5# (7,14)=2  (7,15)=7# (7,16)=7# (7,17)=0  (7,18)=0  (7,19)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (8,5)=3  (8,6)=4  (8,11)=4  (8,12)=3  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=0  (8,18)=0  (8,19)=0  (8,20)=4  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (9,5)=3  (9,6)=4  (9,11)=4  (9,12)=3  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=0  (9,18)=0  (9,19)=0  (9,20)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (10,4)=0  (10,5)=5# (10,7)=2  (10,10)=2  (10,12)=5# (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,19)=5# (11,1)=4  (11,2)=4  (11,4)=3  (11,5)=2  (11,6)=3  (11,8)=4  (11,9)=4  (11,11)=3  (11,12)=2  (11,13)=3  (11,15)=4  (11,16)=4  (11,18)=3  (11,19)=2  (11,20)=3  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,8)=3  (12,9)=3  (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,15)=3  (12,16)=3  (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,1)=4  (13,2)=4  (13,4)=3  (13,5)=2  (13,6)=3  (13,8)=4  (13,9)=4  (13,11)=3  (13,12)=2  (13,13)=3  (13,15)=4  (13,16)=0  (13,17)=0  (13,18)=3  (13,19)=2  (13,20)=3  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,5)=5# (14,7)=2  (14,10)=2  (14,12)=5# (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,19)=5# (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,5)=3  (15,6)=4  (15,11)=4  (15,12)=3  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,5)=3  (16,6)=4  (16,11)=4  (16,12)=3  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,5)=5# (17,7)=2  (17,10)=2  (17,12)=5# (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,19)=5# (18,1)=4  (18,2)=4  (18,4)=3  (18,5)=2  (18,6)=3  (18,8)=4  (18,9)=4  (18,11)=3  (18,12)=2  (18,13)=3  (18,15)=4  (18,16)=4  (18,18)=3  (18,19)=2  (18,20)=3  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,8)=3  (19,9)=3  (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,15)=3  (19,16)=3  (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,1)=4  (20,2)=4  (20,4)=3  (20,5)=2  (20,6)=3  (20,8)=4  (20,9)=4  (20,11)=3  (20,12)=2  (20,13)=3  (20,15)=4  (20,16)=4  (20,18)=3  (20,19)=2  (20,20)=3 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (1,21) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,21) and color pink and mask Full at (11,0)
  _011: a rectangle with size (1,21) and color red and mask Full at (13,0)
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=2  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,1)=5# (11,3)=1  (11,5)=5# (11,7)=1  (11,9)=5# (11,11)=1  (11,13)=5# (11,15)=1  (11,17)=5# (11,19)=1  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,1)=1  (13,3)=5# (13,5)=1  (13,7)=5# (13,9)=1  (13,11)=5# (13,13)=1  (13,15)=5# (13,17)=1  (13,19)=5# (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=0  (17,2)=0  (17,3)=0  (17,4)=0  (17,5)=0  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
   (6547.0 bits)
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (1,21) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,21) and color pink and mask Full at (3,0)
  _011: a rectangle with size (1,21) and color red and mask Full at (5,0)
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,1)=2  (2,3)=6  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,1)=5# (3,3)=1  (3,5)=5# (3,7)=1  (3,9)=5# (3,11)=1  (3,13)=5# (3,15)=1  (3,17)=5# (3,19)=1  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,15)=6  (4,17)=2  (4,19)=6  (5,1)=1  (5,3)=5# (5,5)=1  (5,7)=5# (5,9)=1  (5,11)=5# (5,13)=1  (5,15)=5# (5,17)=1  (5,19)=5# (6,1)=2  (6,3)=6  (6,5)=2  (6,7)=6  (6,9)=2  (6,11)=6  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=1  (7,8)=6  (7,9)=5# (7,10)=6  (7,11)=1  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,5)=2  (8,7)=6  (8,9)=2  (8,11)=6  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=2  (9,5)=1  (9,6)=2  (9,7)=5# (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,0)=6  (11,1)=5# (11,2)=6  (11,3)=1  (11,4)=6  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=6  (11,9)=5# (11,10)=6  (11,11)=1  (11,12)=6  (11,13)=5# (11,14)=6  (11,15)=1  (11,16)=6  (11,17)=5# (11,18)=6  (11,19)=1  (11,20)=6  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,0)=2  (13,1)=1  (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=1  (13,6)=2  (13,7)=5# (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=5# (13,12)=2  (13,13)=1  (13,14)=2  (13,15)=5# (13,16)=2  (13,17)=1  (13,18)=2  (13,19)=5# (13,20)=2  (14,1)=2  (14,3)=6  (14,5)=2  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=6  (15,5)=5# (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=2  (16,3)=6  (16,5)=2  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=1  (17,2)=2  (17,3)=5# (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=2  (18,3)=6  (18,5)=2  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
   (6189.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (1,21) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,21) and color pink and mask Full at (11,0)
  _011: a rectangle with size (1,21) and color red and mask Full at (13,0)
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=2  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=6  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,1)=5# (11,3)=1  (11,5)=5# (11,7)=1  (11,9)=5# (11,11)=1  (11,13)=5# (11,15)=1  (11,17)=5# (11,19)=1  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,1)=1  (13,3)=5# (13,5)=1  (13,7)=5# (13,9)=1  (13,11)=5# (13,13)=1  (13,15)=5# (13,17)=1  (13,19)=5# (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=0  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=0  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=0  (17,2)=0  (17,3)=0  (17,4)=0  (17,5)=0  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color grey and layers
  _0: a rectangle with size (4,4) and color cyan and mask .xx.|x..x|x..x|.xx. at (5,14)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|x..x|x..x at (5,5)
  _011: a rectangle with size (2,11) and color pink and mask Full at (6,6)
diff: 
delta: (0,0)=9# (0,1)=6  (0,3)=6  (0,4)=9# (0,6)=3  (0,7)=3  (0,9)=9# (0,10)=6  (0,12)=6  (0,13)=9# (0,15)=3  (0,16)=3  (0,18)=9# (0,19)=6  (1,0)=6  (1,1)=3  (1,2)=2  (1,3)=3  (1,4)=6  (1,5)=2  (1,6)=9# (1,7)=9# (1,8)=2  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,15)=9# (1,16)=9# (1,17)=2  (1,18)=6  (1,19)=3  (1,20)=2  (2,1)=2  (2,2)=1  (2,3)=2  (2,5)=1  (2,6)=8  (2,7)=8  (2,8)=1  (2,9)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,13)=0  (2,14)=1  (2,15)=8  (2,16)=8  (2,17)=1  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=6  (3,5)=2  (3,6)=9# (3,7)=9# (3,8)=2  (3,9)=0  (3,10)=0  (3,11)=0  (3,12)=0  (3,13)=0  (3,14)=2  (3,15)=9# (3,16)=9# (3,17)=2  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=9# (4,1)=6  (4,3)=6  (4,4)=9# (4,6)=3  (4,7)=3  (4,9)=9# (4,10)=6  (4,12)=6  (4,13)=9# (4,15)=3  (4,16)=3  (4,18)=9# (4,19)=6  (5,1)=2  (5,2)=1  (5,3)=2  (5,5)=1  (5,8)=1  (5,10)=2  (5,11)=1  (5,12)=2  (5,14)=1  (5,17)=1  (5,19)=2  (5,20)=1  (6,0)=3  (6,1)=9# (6,2)=8  (6,3)=9# (6,4)=3  (6,9)=3  (6,10)=9# (6,11)=8  (6,12)=9# (6,13)=3  (6,18)=3  (6,19)=9# (6,20)=8  (7,0)=3  (7,1)=9# (7,2)=8  (7,3)=9# (7,4)=3  (7,9)=3  (7,10)=9# (7,11)=8  (7,12)=9# (7,13)=3  (7,18)=3  (7,19)=9# (7,20)=8  (8,1)=2  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,10)=2  (8,11)=1  (8,12)=2  (8,14)=1  (8,17)=1  (8,19)=2  (8,20)=1  (9,0)=9# (9,1)=6  (9,3)=6  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=9# (9,10)=6  (9,12)=6  (9,13)=9# (9,15)=3  (9,16)=3  (9,18)=9# (9,19)=6  (10,0)=6  (10,1)=3  (10,2)=2  (10,3)=3  (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,8)=2  (10,9)=6  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,14)=2  (10,15)=9# (10,16)=9# (10,17)=2  (10,18)=6  (10,19)=3  (10,20)=2  (11,1)=2  (11,2)=1  (11,3)=2  (11,5)=1  (11,6)=8  (11,7)=8  (11,8)=1  (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=1  (11,15)=8  (11,16)=8  (11,17)=1  (11,19)=2  (11,20)=1  (12,0)=6  (12,1)=3  (12,2)=2  (12,3)=3  (12,4)=6  (12,5)=2  (12,6)=9# (12,7)=9# (12,8)=2  (12,9)=6  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,14)=0  (12,15)=0  (12,16)=9# (12,17)=2  (12,18)=6  (12,19)=3  (12,20)=2  (13,0)=9# (13,1)=6  (13,3)=6  (13,4)=9# (13,6)=3  (13,7)=3  (13,9)=9# (13,10)=6  (13,12)=6  (13,13)=9# (13,14)=0  (13,15)=0  (13,16)=3  (13,18)=9# (13,19)=6  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=1  (14,6)=8  (14,7)=8  (14,8)=1  (14,10)=2  (14,11)=1  (14,12)=2  (14,14)=0  (14,15)=0  (14,16)=8  (14,17)=1  (14,19)=2  (14,20)=1  (15,0)=0  (15,1)=0  (15,2)=8  (15,3)=9# (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=6  (15,8)=8  (15,9)=3  (15,10)=9# (15,11)=8  (15,12)=9# (15,13)=3  (15,14)=0  (15,15)=0  (15,16)=6  (15,17)=8  (15,18)=3  (15,19)=9# (15,20)=8  (16,0)=0  (16,1)=0  (16,2)=8  (16,3)=9# (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=6  (16,8)=8  (16,9)=3  (16,10)=9# (16,11)=8  (16,12)=9# (16,13)=3  (16,14)=8  (16,15)=6  (16,16)=6  (16,17)=8  (16,18)=3  (16,19)=9# (16,20)=8  (17,1)=2  (17,2)=1  (17,3)=2  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=8  (17,8)=1  (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=1  (17,15)=8  (17,16)=8  (17,17)=1  (17,19)=2  (17,20)=1  (18,0)=9# (18,1)=6  (18,3)=6  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=3  (18,9)=9# (18,10)=6  (18,12)=6  (18,13)=9# (18,15)=3  (18,16)=3  (18,18)=9# (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=0  (19,5)=0  (19,6)=0  (19,7)=9# (19,8)=2  (19,9)=6  (19,10)=3  (19,11)=2  (19,12)=3  (19,13)=6  (19,14)=2  (19,15)=9# (19,16)=9# (19,17)=2  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=1  (20,6)=8  (20,7)=8  (20,8)=1  (20,10)=2  (20,11)=1  (20,12)=2  (20,14)=1  (20,15)=8  (20,16)=8  (20,17)=1  (20,19)=2  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TEST 0dfd9992.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.6 sec (29.6 sec/task)
bits-train-error = 206036.4 bits (206036.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-383] Checking task 0e206a2e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10589.9 = 10598.9
DL output with Mo: L = 9.0 + 8152.6 = 8161.6
DL input+output M: L = 17.9 + 18742.5 = 18760.5

# learning a model for train pairs
2.000	
1.674	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.426	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.346	OUT DEF: ^.size=^.size
1.307	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.279	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.249	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
1.232	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.214	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.199	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.182	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.165	OUT DEF: ^.layer_0111.shape.color=blue
1.148	OUT DEF: ^.layer_011.shape.color=yellow
1.138	IN  OBJECT at ^.layer_010: a point with color ? at ?
1.132	OUT DEF: ^.color=black
1.128	IN  DEF: ^.color=black
1.123	OUT DEF: ^.layer_0.pos=(?,?)
1.119	OUT DEF: ^.layer_0.shape.size=(?,?)
1.096	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.i + 2
1.076	OUT DEF: ^.layer_0.shape.size.i=3
1.072	OUT DEF: ^.layer_01.pos=(?,?)
1.068	OUT DEF: ^.layer_011.pos=(?,?)
1.063	OUT DEF: ^.layer_0111.pos=(?,?)
1.060	IN  DEF: ^.size=(?,?)
1.057	IN  DEF: ^.layer_0.pos=(?,?)
1.053	IN  DEF: ^.layer_0.shape.size=(?,?)
1.050	IN  DEF: ^.layer_010.pos=(?,?)
1.047	IN  DEF: ^.layer_01.pos=(?,?)
1.044	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,^.layer_01.pos.i + 2) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: a point with color yellow at (?,?)
  _0111: a point with color blue at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 86.1 + 7207.0 = 7293.1
DL output with Mo: L = 109.6 + 2791.7 = 2901.3
DL input+output M: L = 195.7 + 9998.7 = 10194.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _010: a point with color green at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xx.|x.x at (1,2)
diff: 
delta: (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
   (342.2 bits)
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.x.|xxx at (2,14)
  _01: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (9,1)
  _011: a point with color yellow at (2,15)
  _0111: a point with color blue at (4,17)
diff: 
delta: (4,13)=3  (9,2)=1  (10,3)=4  (11,2)=3 
   (152.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _010: a point with color green at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xx.|x.x at (1,2)
diff: 
delta: (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|.x.|x.x at (1,2)
  _010: a point with color green at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
diff: 
delta: (2,4)=1  (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 43 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _010: a point with color yellow at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,4)
diff: 
delta: (8,4)=1  (10,13)=4  (11,9)=1  (11,14)=2 
   (187.1 bits)
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask x....|.xxxx|x...x at (10,9)
  _01: a rectangle with size (1,1) and color red and mask Full at (11,14)
  _011: a point with color yellow at (10,13)
  _0111: a point with color blue at (11,9)
diff: 
delta:
   (61.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _010: a point with color red at (3,4)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,3)
diff: 
delta: (8,4)=1  (10,13)=4  (11,9)=1  (11,14)=2 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _010: a point with color red at (3,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (8,4)
diff: 
delta: (4,3)=4  (10,13)=4  (11,9)=1  (11,14)=2 
! 40 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _010: a point with color yellow at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,4)
diff: 
delta: (8,4)=1  (10,13)=4  (11,9)=1  (11,14)=2 
! 25 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _010: a point with color yellow at (2,9)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,9)
diff: 
delta: (4,5)=1  (11,1)=1  (11,5)=2  (13,5)=4 
   (191.4 bits)
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask ....x.|.xxx.x|x...x. at (10,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (11,5)
  _011: a point with color yellow at (13,5)
  _0111: a point with color blue at (11,1)
diff: 
delta:
   (65.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _010: a point with color yellow at (2,9)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,5)
diff: 
delta: (4,9)=2  (11,1)=1  (11,5)=2  (13,5)=4 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _010: a point with color blue at (4,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,9)
diff: 
delta: (4,9)=2  (11,1)=1  (11,5)=2  (13,5)=4 
! 22 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|x.xx.|.x..x|xxx.. at (3,6)
  _010: a point with color blue at (4,7)
  _01: a rectangle with size (3,4) and color grey and mask x...|.x.x|..x. at (9,10)
diff: 
delta: (4,10)=4  (6,5)=2  (9,11)=2  (11,11)=4  (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 52 wrong pixels (generated / expected)

TEST 0e206a2e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.2 sec (20.2 sec/task)
bits-train-error = 2791.7 bits (2791.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-382] Checking task 10fcaaa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1645.2 = 1654.2
DL output with Mo: L = 9.0 + 17699.0 = 17707.9
DL input+output M: L = 17.9 + 19344.2 = 19362.1

# learning a model for train pairs
2.000	
1.788	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.669	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.622	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.576	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.539	IN  DEF: ^.color=black
1.510	IN  DEF: ^.size=(?,?)
1.481	IN  DEF: ^.layer_0.pos=(?,?)
1.405	IN  DEF: ^.layer_0.pos.j=1
1.394	OUT OBJECT at ^.layer_0111: ^.layer_0.shape at ?
1.375	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
1.364	OUT OBJECT at ^.layer_0110: ^.layer_0.shape at ?
1.344	OUT OBJECT at ^.layer_01101: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _0110: ^.layer_0.shape at ?
  _01101: ^.layer_0.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_0.shape at ?
  _01111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,1)

DL input  with Mi: L = 32.6 + 1143.3 = 1175.9
DL output with Mo: L = 97.3 + 11106.9 = 11204.3
DL input+output M: L = 129.9 + 12250.2 = 12380.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,4) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta:
   (17.6 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _0110: a point with color grey at (1,1)
  _01101: a point with color grey at (1,5)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
  _0111: a point with color grey at (3,1)
  _01111: a point with color grey at (3,5)
diff: 
delta: (0,4)=8  (0,6)=8  (2,1)=0  (2,3)=0  (2,5)=0 
   (216.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,4) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 4x8

TRAIN 10fcaaa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  _0: a point with color pink at (2,1)
diff: 
delta: (0,2)=6 
   (37.2 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (4,8) and color cyan and mask xxxxxxxx|...x...x|x...x...|xxxxxxxx at (1,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (2,1)
  _0110: a point with color pink at (0,2)
  _01101: a point with color pink at (0,6)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (2,5)
  _0111: a point with color pink at (5,1)
  _01111: a point with color pink at (5,5)
diff: 
delta:
   (183.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a point with color pink at (2,1)
diff: 
delta: (0,2)=6 
! size mismatch, 10x10 instead of 6x8

TRAIN 10fcaaa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,1)
diff: 
delta: (4,0)=4 
   (38.9 bits)
data: a background with size (10,6) and color black and layers
  _0: a rectangle with size (2,6) and color cyan and mask x.xx.x|.xx.x. at (2,0)
  _01: a rectangle with size (2,6) and color cyan and mask x.xx.x|.xx.x. at (7,0)
  _0110: a point with color yellow at (1,1)
  _01101: a point with color yellow at (1,4)
  _011: a rectangle with size (1,6) and color cyan and mask Full at (5,0)
  _0111: a point with color yellow at (4,0)
  _01111: a point with color yellow at (4,3)
diff: 
delta: (0,0)=8  (0,2)=8  (0,3)=8  (0,5)=8  (6,1)=4  (6,4)=4  (9,0)=4  (9,3)=4 
   (323.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,1)
diff: 
delta: (4,0)=4 
! size mismatch, 10x10 instead of 10x6

TRAIN 10fcaaa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (20.6 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (2,0)
  _0110: a point with color red at (1,1)
  _01101: a point with color red at (1,5)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (4,0)
  _0111: a point with color red at (5,1)
  _01111: a point with color red at (5,5)
diff: 
delta: (0,1)=0  (0,3)=0  (0,5)=0  (2,1)=0  (2,3)=0  (2,5)=0  (4,2)=8  (4,4)=8  (4,6)=8  (5,0)=0  (6,2)=8  (6,4)=8  (6,6)=8 
   (387.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 8x8

TRAIN 10fcaaa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,5) and color black and layers
  _0: a point with color green at (0,1)
diff: 
delta: (3,3)=3  (5,1)=3 
! size mismatch, 10x10 instead of 12x10

TEST 10fcaaa3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.9 sec (19.9 sec/task)
bits-train-error = 11106.9 bits (11106.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-381] Checking task 11852cab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6498.1 = 6507.1
DL output with Mo: L = 9.0 + 8219.8 = 8228.7
DL input+output M: L = 17.9 + 14717.9 = 14735.8

# learning a model for train pairs
2.000	
1.921	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.798	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.728	OUT DEF: ^.size=^.size
1.689	OUT DEF: ^.layer_0=^.layer_0
1.672	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.642	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.603	OUT DEF: ^.layer_01=^.layer_01
1.573	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
1.542	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.512	OUT OBJECT at ^.layer_01111: ^.layer_01.shape at ?
1.495	IN  OBJECT at ^.layer_010: a point with color ? at ?
1.464	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
1.425	OUT DEF: ^.layer_010=^.layer_010
1.394	OUT OBJECT at ^.layer_011111: ^.layer_010.shape at ?
1.362	OUT OBJECT at ^.layer_0111111: ^.layer_010.shape at ?
1.330	OUT OBJECT at ^.layer_01111111: ^.layer_010.shape at ?
1.323	IN  DEF: ^.color=black
1.317	OUT DEF: ^.color=black
1.312	IN  DEF: ^.size=(?,?)
1.271	IN  DEF: ^.size.i=10
1.231	IN  DEF: ^.size.j=10
1.225	IN  DEF: ^.layer_0.pos=(?,?)
1.220	IN  DEF: ^.layer_0.shape.size=(?,?)
1.215	IN  DEF: ^.layer_010.pos=(?,?)
1.209	IN  DEF: ^.layer_01.pos=(?,?)
1.188	IN  DEF: ^.layer_01.pos.i=2
1.178	IN  OBJECT at ^.layer_0101: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: ^.layer_01
  _011: ^.layer_01.shape at ?
  _0111: ^.layer_01.shape at ?
  _01111: ^.layer_01.shape at ?
  _011111: ^.layer_010.shape at ?
  _0111111: ^.layer_010.shape at ?
  _01111111: ^.layer_010.shape at ?
WHERE (Mi)
a background with size (10,10) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at ?
  _01: a point with color ? at (2,?)

DL input  with Mi: L = 101.2 + 4721.1 = 4822.3
DL output with Mo: L = 81.2 + 3514.4 = 3595.6
DL input+output M: L = 182.5 + 8235.5 = 8417.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _010: a point with color cyan at (1,4)
  _0101: a point with color red at (2,3)
  _01: a point with color red at (2,5)
diff: 
delta: (3,2)=8  (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
   (179.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _010: a point with color cyan at (1,4)
  _01: a point with color red at (2,5)
  _011: a point with color red at (2,3)
  _0111: a point with color red at (4,3)
  _01111: a point with color red at (4,5)
  _011111: a point with color cyan at (3,2)
  _0111111: a point with color cyan at (3,6)
  _01111111: a point with color cyan at (5,4)
diff: 
delta: (1,6)=3  (3,4)=3  (5,2)=3  (5,6)=3 
   (143.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (4,3)
  _010: a point with color green at (1,2)
  _0101: a point with color cyan at (1,4)
  _01: a point with color red at (2,3)
diff: 
delta: (2,5)=2  (3,2)=8  (3,4)=3  (3,6)=8  (4,4)=0  (5,4)=8 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (4,3)
  _010: a point with color green at (1,2)
  _0101: a point with color cyan at (1,4)
  _01: a point with color red at (2,5)
diff: 
delta: (2,3)=2  (3,2)=8  (3,4)=3  (3,6)=8  (4,4)=0  (5,4)=8 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (4,3)
  _010: a point with color cyan at (1,4)
  _0101: a point with color green at (1,2)
  _01: a point with color red at (2,3)
diff: 
delta: (2,5)=2  (3,2)=8  (3,4)=3  (3,6)=8  (4,4)=0  (5,4)=8 
! 11 wrong pixels (generated / expected)

TRAIN 11852cab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x-cross at (3,3)
  _010: a point with color red at (2,2)
  _0101: a point with color green at (4,2)
  _01: a point with color green at (2,4)
diff: 
delta: (4,6)=3  (6,4)=3 
   (112.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x-cross at (3,3)
  _010: a point with color red at (2,2)
  _01: a point with color green at (2,4)
  _011: a point with color green at (4,2)
  _0111: a point with color green at (4,6)
  _01111: a point with color green at (6,4)
  _011111: a point with color red at (2,6)
  _0111111: a point with color red at (6,2)
  _01111111: a point with color red at (6,6)
diff: 
delta:
   (63.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x-cross at (3,3)
  _010: a point with color red at (2,2)
  _0101: a point with color green at (4,2)
  _01: a point with color green at (2,4)
diff: 
delta: (4,6)=3  (6,4)=3 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x-cross at (3,3)
  _010: a point with color green at (2,4)
  _0101: a point with color green at (4,2)
  _01: a point with color red at (2,2)
diff: 
delta: (4,6)=3  (6,4)=3 
! 7 wrong pixels (generated / expected)

TRAIN 11852cab.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _010: a point with color cyan at (1,5)
  _0101: a point with color cyan at (1,7)
  _01: a point with color yellow at (2,4)
diff: 
delta: (3,3)=8  (3,5)=1  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
   (179.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _010: a point with color cyan at (1,5)
  _01: a point with color yellow at (2,4)
  _011: a point with color yellow at (2,6)
  _0111: a point with color yellow at (4,4)
  _01111: a point with color yellow at (4,6)
  _011111: a point with color cyan at (1,7)
  _0111111: a point with color cyan at (3,3)
  _01111111: a point with color cyan at (3,7)
diff: 
delta: (3,5)=1  (5,3)=8  (5,5)=8  (5,7)=8 
   (143.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (5,3)
  _010: a point with color cyan at (1,3)
  _0101: a point with color cyan at (1,5)
  _01: a point with color yellow at (2,4)
diff: 
delta: (1,7)=8  (3,3)=8  (3,5)=1  (3,7)=8  (5,4)=0  (5,6)=0 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,3)
  _010: a point with color cyan at (3,3)
  _0101: a point with color blue at (3,5)
  _01: a point with color yellow at (2,4)
diff: 
delta: (1,4)=0  (1,6)=0  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,1) and color cyan and mask Full at (1,3)
  _010: a point with color cyan at (1,5)
  _0101: a point with color cyan at (1,7)
  _01: a point with color yellow at (2,4)
diff: 
delta: (2,3)=0  (3,5)=1  (3,7)=8  (4,3)=0  (5,5)=8  (5,7)=8 
! 11 wrong pixels (generated / expected)

TRAIN 11852cab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,2)
  _010: a point with color blue at (2,1)
  _0101: a point with color yellow at (2,3)
  _01: a point with color blue at (2,5)
diff: 
delta: (3,3)=0  (4,3)=1  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,2)
  _010: a point with color blue at (2,1)
  _0101: a point with color blue at (2,5)
  _01: a point with color yellow at (2,3)
diff: 
delta: (3,3)=0  (4,3)=1  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,2)
  _010: a point with color yellow at (2,3)
  _0101: a point with color blue at (2,1)
  _01: a point with color blue at (2,5)
diff: 
delta: (3,3)=0  (4,3)=1  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 11 wrong pixels (generated / expected)

TEST 11852cab.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.7 sec (23.7 sec/task)
bits-train-error = 3514.4 bits (3514.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-380] Checking task 1190e5a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 67190.0 = 67198.9
DL output with Mo: L = 9.0 + 627.8 = 636.7
DL input+output M: L = 17.9 + 67817.8 = 67835.7

# learning a model for train pairs
2.000	
1.193	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.815	OUT DEF: ^.color=^.color
0.760	OUT DEF: ^.size=(?,?)
0.760	IN  DEF: ^.size=(?,?)
0.759	IN  DEF: ^.layer_0.pos=(?,?)
0.757	IN  DEF: ^.layer_0.pos.i=(0)
0.755	IN  DEF: ^.layer_0.pos.j=(0)
0.754	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))

DL input  with Mi: L = 43.8 + 12468.4 = 12512.2
DL output with Mo: L = 12.5 + 349.2 = 361.6
DL input+output M: L = 56.3 + 12817.5 = 12873.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color green and layers
  _0: a rectangle with size (15,15) and color orange and mask .x........x..x.|.x........x..x.|xxxxxxxxxxxxxxx|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x. at (0,0)
diff: 
delta:
   (281.2 bits)
data: a background with size (2,4) and color green and layers
diff: 
delta:
   (10.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color green and layers
  _0: a rectangle with size (15,15) and color orange and mask .x........x..x.|.x........x..x.|xxxxxxxxxxxxxxx|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 2x4

TRAIN 1190e5a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color blue and layers
  _0: a rectangle with size (11,11) and color cyan and mask ....x......|....x......|....x......|xxxxxxxxxxx|....x......|....x......|....x......|....x......|....x......|xxxxxxxxxxx|....x...... at (0,0)
diff: 
delta:
   (173.6 bits)
data: a background with size (3,2) and color blue and layers
diff: 
delta:
   (9.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color blue and layers
  _0: a rectangle with size (11,11) and color cyan and mask ....x......|....x......|....x......|xxxxxxxxxxx|....x......|....x......|....x......|....x......|....x......|xxxxxxxxxxx|....x...... at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 3x2

TRAIN 1190e5a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (27,27) and color green and layers
  _0: a rectangle with size (27,27) and color blue and mask ......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x. at (0,0)
diff: 
delta:
   (792.0 bits)
data: a background with size (6,5) and color green and layers
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color green and layers
  _0: a rectangle with size (27,27) and color blue and mask ......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 6x5

TRAIN 1190e5a7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color blue and layers
  _0: a rectangle with size (22,22) and color grey and mask ...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 5x3

TEST 1190e5a7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 349.2 bits (349.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-379] Checking task 137eaa0f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6790.9 = 6799.9
DL output with Mo: L = 9.0 + 3710.9 = 3719.9
DL input+output M: L = 17.9 + 10501.8 = 10519.7

# learning a model for train pairs
2.000	
1.904	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.708	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.631	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.576	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.430	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
1.375	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
1.271	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
1.234	OUT DEF: ^.layer_01.shape.color=grey
1.215	OUT DEF: ^.layer_01.shape.mask=Full
1.198	IN  OBJECT at ^.layer_0101: a point with color ? at ?
1.179	IN  OBJECT at ^.layer_01011: a point with color ? at ?
1.158	IN  OBJECT at ^.layer_010111: a point with color ? at ?
1.138	IN  DEF: ^.layer_01011.shape.color=grey
1.117	IN  DEF: ^.layer_010111.shape.color=grey
1.107	IN  DEF: ^.layer_010.shape.mask=Full
1.097	IN  DEF: ^.layer_01.shape.mask=Full
1.087	OUT DEF: ^.size=(?,?)
1.044	OUT DEF: ^.size.i=3
1.000	OUT DEF: ^.size.j=3
0.990	OUT DEF: ^.layer_0.pos=(?,?)
0.967	OUT DEF: ^.layer_0.pos.i=0
0.946	OUT DEF: ^.layer_0.pos.j=^.layer_010.shape.size.j - 2
0.937	OUT DEF: ^.layer_010.pos=(?,?)
0.913	OUT DEF: ^.layer_010.pos.i=2
0.890	OUT DEF: ^.layer_010.pos.j=0
0.881	OUT DEF: ^.layer_01.pos=(?,?)
0.857	OUT DEF: ^.layer_01.pos.i=1
0.833	OUT DEF: ^.layer_01.pos.j=1
0.824	OUT DEF: ^.layer_01.shape.size=(?,?)
0.805	OUT DEF: ^.layer_01.shape.size.i=1
0.786	OUT DEF: ^.layer_01.shape.size.j=1
0.777	OUT DEF: ^.layer_011.pos=(?,?)
0.756	OUT DEF: ^.layer_011.pos.i=^.layer_01011.pos.i - 2
0.749	IN  DEF: ^.color=black
0.744	IN  DEF: ^.layer_01011.pos=(?,?)
0.739	IN  DEF: ^.layer_010111.pos=(?,?)
0.739	OUT DEF: ^.layer_01.shape.color=^.layer_01011.shape.color

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ? and layers
  _0: ^.layer_0.shape at (0,^.layer_010.shape.size.j - 2)
  _010: ^.layer_010.shape at (2,0)
  _01: a rectangle with size (1,1) and color ^.layer_01011.shape.color and mask Full at (1,1)
  _011: ^.layer_01.shape at (^.layer_01011.pos.i - 2,?)
WHERE (Mi)
a background with size ? and color black and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask Full at ?
  _0101: a point with color ? at ?
  _01011: a point with color grey at (?,?)
  _010111: a point with color grey at (?,?)
  _01: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 110.3 + 4355.5 = 4465.8
DL output with Mo: L = 108.8 + 196.0 = 304.8
DL input+output M: L = 219.1 + 4551.5 = 4770.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _0101: a point with color grey at (2,3)
  _01011: a point with color grey at (2,7)
  _010111: a point with color grey at (8,5)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
diff: 
delta:
   (127.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,0)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color orange and mask Full at (0,2)
diff: 
delta:
   (4.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _0101: a point with color grey at (2,3)
  _01011: a point with color grey at (2,7)
  _010111: a point with color grey at (8,5)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _010: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _0101: a point with color grey at (2,3)
  _01011: a point with color grey at (2,7)
  _010111: a point with color grey at (8,5)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _010: a rectangle with size (1,3) and color green and mask Full at (8,6)
  _0101: a point with color pink at (2,1)
  _01011: a point with color grey at (3,2)
  _010111: a point with color grey at (3,5)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,4)
diff: 
delta: (7,7)=5# (9,2)=5#
   (171.1 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,1)
  _010: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (1,3) and color orange and mask Full at (1,0)
diff: 
delta:
   (10.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _010: a rectangle with size (1,3) and color green and mask Full at (8,6)
  _0101: a point with color pink at (2,1)
  _01011: a point with color grey at (3,2)
  _010111: a point with color grey at (3,5)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,4)
diff: 
delta: (7,7)=5# (9,2)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _010: a rectangle with size (1,3) and color orange and mask Full at (3,4)
  _0101: a point with color pink at (2,1)
  _01011: a point with color grey at (3,2)
  _010111: a point with color grey at (7,7)
  _01: a rectangle with size (1,3) and color green and mask Full at (8,6)
diff: 
delta: (3,5)=5# (9,2)=5#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (8,6)
  _010: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _0101: a point with color pink at (2,1)
  _01011: a point with color grey at (3,2)
  _010111: a point with color grey at (3,5)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,4)
diff: 
delta: (7,7)=5# (9,2)=5#
! 6 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.. at (2,0)
  _010: a rectangle with size (1,2) and color brown and mask Full at (9,6)
  _0101: a point with color grey at (4,5)
  _01011: a point with color grey at (3,1)
  _010111: a point with color grey at (8,7)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
diff: 
delta:
   (137.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.. at (0,0)
  _010: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (1,2)
diff: 
delta:
   (4.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.. at (2,0)
  _010: a rectangle with size (1,2) and color brown and mask Full at (9,6)
  _0101: a point with color grey at (3,1)
  _01011: a point with color grey at (4,5)
  _010111: a point with color grey at (8,7)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|x.|x. at (1,7)
  _010: a rectangle with size (1,2) and color red and mask Full at (10,3)
  _0101: a point with color yellow at (3,0)
  _01011: a point with color grey at (2,8)
  _010111: a point with color grey at (4,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
diff: 
delta: (6,7)=8  (7,6)=5# (9,3)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|x.|x. at (1,7)
  _010: a rectangle with size (1,2) and color red and mask Full at (10,3)
  _0101: a point with color yellow at (3,0)
  _01011: a point with color grey at (2,8)
  _010111: a point with color grey at (4,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (6,7)
diff: 
delta: (4,2)=4  (7,6)=5# (9,3)=5#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|x.|x. at (1,7)
  _010: a rectangle with size (1,2) and color red and mask Full at (10,3)
  _0101: a point with color yellow at (3,0)
  _01011: a point with color grey at (4,1)
  _010111: a point with color grey at (2,8)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
diff: 
delta: (6,7)=8  (7,6)=5# (9,3)=5#
! 4 wrong pixels (generated / expected)

TEST 137eaa0f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.4 sec (19.4 sec/task)
bits-train-error = 196.0 bits (196.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-378] Checking task 150deff5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11307.2 = 11316.1
DL output with Mo: L = 9.0 + 11307.2 = 11316.1
DL input+output M: L = 17.9 + 22614.3 = 22632.3

# learning a model for train pairs
2.000	
1.232	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.909	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.763	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.663	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.614	OUT DEF: ^.size=^.size
0.577	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.564	OUT DEF: ^.layer_0111.shape.color=red
0.552	OUT DEF: ^.layer_0.shape.color=cyan
0.540	OUT DEF: ^.layer_01.shape.color=red
0.528	IN  DEF: ^.layer_0.shape.color=grey
0.522	OUT DEF: ^.layer_011.shape.mask=Full
0.515	OUT DEF: ^.layer_0111.shape.mask=Full
0.511	OUT DEF: ^.color=black
0.507	IN  DEF: ^.color=black
0.504	IN  DEF: ^.layer_0.pos=(?,?)
0.493	IN  DEF: ^.layer_0.pos.i=1
0.490	OUT DEF: ^.layer_0.pos=(?,?)
0.487	OUT DEF: ^.layer_0.shape.size=(?,?)
0.484	OUT DEF: ^.layer_01.pos=(?,?)
0.472	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.j
0.469	OUT DEF: ^.layer_01.shape.size=(?,?)
0.457	OUT DEF: ^.layer_01.shape.size.j=^.size.i - ^.layer_0.shape.size.j
0.453	OUT DEF: ^.layer_011.pos=(?,?)
0.450	IN  DEF: ^.size=(?,?)
0.447	IN  DEF: ^.layer_0.shape.size=(?,?)
0.444	OUT DEF: ^.layer_011.shape.size=(?,?)
0.433	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.pos.j + 1
0.429	OUT DEF: ^.layer_0111.pos=(?,?)
0.426	OUT DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,^.size.i - ^.layer_0.shape.size.j) and color red and mask ? at (^.layer_0.pos.j,?)
  _011: a rectangle with size (^.layer_0.pos.j + 1,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (1,?)

DL input  with Mi: L = 45.2 + 2161.7 = 2206.9
DL output with Mo: L = 144.1 + 2473.4 = 2617.5
DL input+output M: L = 189.3 + 4635.1 = 4824.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xx....|xxxxx.|.xxx..|.xxxxx|.x..xx|...xxx at (1,2)
diff: 
delta:
   (76.7 bits)
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (5,6) and color cyan and mask xx....|xx....|..xx..|..xxxx|....xx at (1,2)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (1,3) and color red and mask Full at (6,5)
diff: 
delta:
   (99.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xx....|xxxxx.|.xxx..|.xxxxx|.x..xx|...xxx at (1,2)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN 150deff5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|xxxxxx|..x..x|...xxx|...xxx|...x.. at (1,1)
diff: 
delta:
   (76.0 bits)
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (6,2) and color red and mask x.|x.|x.|.x|.x|.x at (1,3)
  _011: a rectangle with size (2,5) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (3,1) and color red and mask Full at (1,6)
diff: 
delta:
   (84.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|xxxxxx|..x..x|...xxx|...xxx|...x.. at (1,1)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 150deff5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|...xx|..x..|..xxx|..xxx at (1,1)
diff: 
delta:
   (63.5 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _0111: a rectangle with size (3,1) and color red and mask Full at (3,3)
diff: 
delta:
   (63.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|...xx|..x..|..xxx|..xxx at (1,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 150deff5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask .xx.xxx|.xx..x.|xxxxxx.|...xxx.|..xxx..|....xx.|....xx. at (0,1)
diff:   ^.layer_0.pos.i
delta:
! 29 wrong pixels (generated / expected)

TEST 150deff5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.2 sec (8.2 sec/task)
bits-train-error = 2473.4 bits (2473.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-377] Checking task 178fcbfb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3002.3 = 3011.2
DL output with Mo: L = 9.0 + 20270.4 = 20279.4
DL input+output M: L = 17.9 + 23272.7 = 23290.6

# learning a model for train pairs
2.000	
1.785	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.568	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.368	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.276	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.238	IN  OBJECT at ^.layer_0: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?

DL input  with Mi: L = 22.3 + 2873.0 = 2895.2
DL output with Mo: L = 85.3 + 5520.1 = 5605.4
DL input+output M: L = 107.6 + 8393.0 = 8500.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (4,7)=3  (6,3)=1 
   (75.4 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color green and mask Full at (4,0)
  _01: a rectangle with size (1,9) and color blue and mask Full at (6,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (5,2)
  _0111: a rectangle with size (9,1) and color red and mask Full at (0,2)
diff: 
delta:
   (132.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (4,7)=3  (6,3)=1 
! size mismatch, 10x10 instead of 9x9

TRAIN 178fcbfb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a point with color green at (1,1)
diff: 
delta: (4,3)=3  (6,1)=1  (7,5)=2 
   (94.7 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01: a rectangle with size (1,8) and color green and mask Full at (4,0)
  _011: a rectangle with size (1,8) and color blue and mask Full at (6,0)
  _0111: a rectangle with size (10,1) and color red and mask Full at (0,5)
diff: 
delta:
   (137.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a point with color green at (1,1)
diff: 
delta: (4,3)=3  (6,1)=1  (7,5)=2 
! size mismatch, 10x10 instead of 10x8

TRAIN 178fcbfb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
diff: 
delta: (3,8)=3  (6,2)=3  (8,3)=2  (9,9)=2 
   (117.2 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,11) and color green and mask Full at (6,0)
  _0111: a rectangle with size (10,1) and color red and mask Full at (0,3)
diff: 
delta: (0,9)=2  (2,9)=2  (4,9)=2  (5,9)=2  (7,9)=2  (8,9)=2  (9,9)=2 
   (282.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
diff: 
delta: (3,8)=3  (6,2)=3  (8,3)=2  (9,9)=2 
! size mismatch, 10x10 instead of 10x11

TRAIN 178fcbfb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color green at (0,3)
diff: 
delta: (1,9)=2  (3,5)=3  (5,4)=2  (7,1)=1  (9,8)=1 
! size mismatch, 10x10 instead of 12x11

TEST 178fcbfb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 22.8 sec (22.8 sec/task)
bits-train-error = 5520.1 bits (5520.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-376] Checking task 1a07d186.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20501.1 = 20510.0
DL output with Mo: L = 9.0 + 19687.2 = 19696.2
DL input+output M: L = 17.9 + 40188.3 = 40206.2

# learning a model for train pairs
2.000	
1.537	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.108	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.783	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.497	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.464	OUT DEF: ^.size=^.size
0.445	OUT DEF: ^.layer_01=^.layer_0
0.438	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.430	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.423	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.416	OUT DEF: ^.layer_0111.shape.color=^.layer_0.shape.color
0.411	IN  OBJECT at ^.layer_000: a point with color ? at ?
0.404	OUT DEF: ^.layer_0.shape.color=^.layer_00.shape.color
0.398	IN  OBJECT at ^.layer_0001: a point with color ? at ?
0.392	IN  OBJECT at ^.layer_00011: a point with color ? at ?
0.385	IN  OBJECT at ^.layer_001: a point with color ? at ?
0.382	IN  DEF: ^.layer_00.shape.mask=Full
0.379	IN  DEF: ^.layer_0.shape.mask=Full
0.376	OUT DEF: ^.color=black
0.374	IN  DEF: ^.color=black
0.372	OUT DEF: ^.layer_0.pos=(?,?)
0.364	OUT DEF: ^.layer_0.pos.j=^.layer_00.pos.j
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ? and color ^.layer_00.shape.color and mask ? at (?,^.layer_00.pos.j)
  _01: ^.layer_0
  _011: a point with color ^.layer_0.shape.color at ?
  _0111: a point with color ^.layer_0.shape.color at ?
WHERE (Mi)
a background with size ? and color black and layers
  _000: a point with color ? at ?
  _0001: a point with color ? at ?
  _00011: a point with color ? at ?
  _00: a rectangle with size ? and color ? and mask Full at ?
  _001: a point with color ? at ?
  _0: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 91.7 + 5066.6 = 5158.4
DL output with Mo: L = 68.4 + 2152.8 = 2221.2
DL input+output M: L = 160.1 + 7219.5 = 7379.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _000: a point with color yellow at (3,1)
  _0001: a point with color green at (3,6)
  _00011: a point with color yellow at (7,9)
  _00: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _001: a point with color red at (10,7)
  _0: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
diff: 
delta: (11,16)=3 
   (176.2 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,2) and color green and mask x.|x.|x.|xx|x.|x.|x.|x.|x.|x.|x.|xx|x.|x.|x.|x.|x.|x. at (0,3)
  _01: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
  _011: a point with color yellow at (3,11)
  _0111: a point with color yellow at (7,11)
diff: 
delta:
   (85.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _000: a point with color yellow at (3,1)
  _0001: a point with color green at (3,6)
  _00011: a point with color yellow at (7,9)
  _00: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _001: a point with color red at (10,7)
  _0: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
diff: 
delta: (11,16)=3 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,19) and color black and layers
  _000: a point with color yellow at (3,1)
  _0001: a point with color green at (3,6)
  _00011: a point with color yellow at (7,9)
  _00: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
  _001: a point with color red at (10,7)
  _0: a rectangle with size (18,1) and color green and mask Full at (0,3)
diff: 
delta: (11,16)=3 
! 23 wrong pixels (generated / expected)

TRAIN 1a07d186.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _000: a point with color red at (0,3)
  _0001: a point with color yellow at (1,9)
  _00011: a point with color blue at (5,10)
  _00: a rectangle with size (1,14) and color red and mask Full at (3,0)
  _001: a point with color red at (7,6)
  _0: a rectangle with size (1,14) and color blue and mask Full at (10,0)
diff: 
delta: (13,2)=1  (13,10)=2 
   (189.6 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (3,14) and color red and mask ...x..........|xxxxxxxxxxxxxx|......x...x... at (2,0)
  _01: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _011: a point with color blue at (9,10)
  _0111: a point with color blue at (11,2)
diff: 
delta:
   (90.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _000: a point with color red at (0,3)
  _0001: a point with color yellow at (1,9)
  _00011: a point with color blue at (5,10)
  _00: a rectangle with size (1,14) and color red and mask Full at (3,0)
  _001: a point with color red at (7,6)
  _0: a rectangle with size (1,14) and color blue and mask Full at (10,0)
diff: 
delta: (13,2)=1  (13,10)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  _000: a point with color red at (0,3)
  _0001: a point with color yellow at (1,9)
  _00011: a point with color blue at (5,10)
  _00: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _001: a point with color red at (7,6)
  _0: a rectangle with size (1,14) and color red and mask Full at (3,0)
diff: 
delta: (13,2)=1  (13,10)=2 
! 23 wrong pixels (generated / expected)

TRAIN 1a07d186.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _000: a point with color blue at (1,3)
  _0001: a point with color cyan at (1,7)
  _00011: a point with color cyan at (8,11)
  _00: a rectangle with size (1,1) and color cyan and mask Full at (12,3)
  _001: a point with color blue at (13,12)
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
diff: 
delta:
   (140.8 bits)
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _011: a point with color cyan at (4,7)
  _0111: a point with color cyan at (6,11)
diff: 
delta:
   (39.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _000: a point with color blue at (1,3)
  _0001: a point with color cyan at (1,7)
  _00011: a point with color cyan at (8,11)
  _00: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _001: a point with color cyan at (12,3)
  _0: a rectangle with size (1,1) and color blue and mask Full at (13,12)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  _000: a point with color blue at (1,3)
  _0001: a point with color cyan at (1,7)
  _00011: a point with color cyan at (8,11)
  _00: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _001: a point with color blue at (13,12)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (12,3)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,16) and color black and layers
  _000: a point with color blue at (1,3)
  _0001: a point with color cyan at (1,7)
  _00011: a point with color cyan at (8,11)
  _00: a rectangle with size (1,1) and color cyan and mask Full at (12,3)
  _001: a point with color blue at (13,12)
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 1a07d186.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,26) and color black and layers
  _000: a point with color red at (2,16)
  _0001: a point with color cyan at (4,24)
  _00011: a point with color cyan at (5,9)
  _00: a rectangle with size (19,1) and color red and mask Full at (0,4)
  _001: a point with color yellow at (7,6)
  _0: a rectangle with size (19,1) and color green and mask Full at (0,11)
diff: 
delta: (0,20)=4  (1,20)=4  (2,20)=4  (3,20)=4  (4,20)=4  (5,20)=4  (6,20)=4  (7,20)=4  (8,20)=4  (9,13)=3  (9,20)=4  (10,1)=2  (10,20)=4  (11,17)=8  (11,20)=4  (12,20)=4  (13,20)=4  (14,20)=4  (15,0)=8  (15,8)=3  (15,20)=4  (15,24)=4  (16,20)=4  (17,20)=4  (17,22)=3  (18,20)=4 
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,26) and color black and layers
  _000: a point with color red at (2,16)
  _0001: a point with color cyan at (4,24)
  _00011: a point with color cyan at (5,9)
  _00: a rectangle with size (19,1) and color red and mask Full at (0,4)
  _001: a point with color yellow at (7,6)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,20)
diff: 
delta: (0,11)=3  (1,11)=3  (2,11)=3  (3,11)=3  (4,11)=3  (5,11)=3  (6,11)=3  (7,11)=3  (8,11)=3  (9,11)=3  (9,13)=3  (10,1)=2  (10,11)=3  (11,11)=3  (11,17)=8  (12,11)=3  (13,11)=3  (14,11)=3  (15,0)=8  (15,8)=3  (15,11)=3  (15,24)=4  (16,11)=3  (17,11)=3  (17,22)=3  (18,11)=3 
! 46 wrong pixels (generated / expected)

TEST 1a07d186.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.7 sec (25.7 sec/task)
bits-train-error = 2152.8 bits (2152.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-375] Checking task 1b2d62fb.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16687.1 = 16696.1
DL output with Mo: L = 9.0 + 3878.1 = 3887.1
DL input+output M: L = 17.9 + 20565.3 = 20583.2

# learning a model for train pairs
2.000	
1.669	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.422	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.281	OUT DEF: ^.size=^.layer_0.shape.size
1.132	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.981	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.921	OUT DEF: ^.layer_0.shape.color=cyan
0.902	OUT DEF: ^.color=black
0.886	OUT DEF: ^.layer_0.pos=(?,?)
0.840	OUT DEF: ^.layer_0.pos.i=^.layer_011.pos.j
0.824	OUT DEF: ^.layer_0.shape.size=(?,?)
0.811	IN  DEF: ^.layer_0.shape.color=brown
0.806	IN  DEF: ^.color=black
0.802	IN  DEF: ^.size=(?,?)
0.779	IN  DEF: ^.size.j=7
0.758	IN  DEF: ^.size.i=5
0.755	IN  DEF: ^.layer_0.pos=(?,?)
0.744	IN  DEF: ^.layer_0.pos.i=0
0.740	IN  DEF: ^.layer_011.pos=(?,?)
0.736	IN  DEF: ^.layer_0.shape.size=(?,?)
0.716	IN  DEF: ^.layer_0.shape.size.i=5
0.699	IN  DEF: ^.layer_0.shape.size.j=3
0.696	IN  DEF: ^.layer_01.pos=(?,?)
0.685	IN  DEF: ^.layer_01.pos.i=0
0.681	IN  DEF: ^.layer_01.shape.size=(?,?)
0.678	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (^.layer_011.pos.j,?)
WHERE (Mi)
a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask ? at (0,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (0,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.4 + 5592.4 = 5705.9
DL output with Mo: L = 42.1 + 1263.1 = 1305.2
DL input+output M: L = 155.5 + 6855.5 = 7011.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask xxx|xx.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (3,2) and color brown and mask xx|.x|.x at (0,1)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (2,0)=9# (4,1)=9# (4,2)=9#
   (130.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
diff: 
delta:
   (11.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask xxx|xx.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,2) and color brown and mask xx|.x|.x at (0,1)
diff: 
delta: (2,0)=9# (4,1)=9# (4,2)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask xxx|xx.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (3,2) and color brown and mask xx|.x|.x at (0,1)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (2,0)=9# (4,1)=9# (4,2)=9#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask xxx|xx.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color brown and mask Full at (0,2)
diff: 
delta: (0,1)=9# (2,0)=9# (4,1)=9# (4,2)=9#
! 4 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x..|xxx|xxx|xxx|xxx at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,3) and color brown and mask x.x|.xx at (1,0)
diff: 
delta: (4,1)=9# (4,2)=9#
   (111.8 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,1)
diff: 
delta:
   (11.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x..|xxx|xxx|xxx|xxx at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,3) and color brown and mask x.x|.xx at (1,0)
diff: 
delta: (4,1)=9# (4,2)=9#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x..|xxx|xxx|xxx|xxx at (0,4)
  _01: a rectangle with size (2,3) and color brown and mask x.x|.xx at (1,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff:   ^.layer_01.pos.i
delta: (4,1)=9# (4,2)=9#
! 6 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
diff: 
delta:
   (85.5 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask .x.|..x|.xx|x..|x.. at (0,0)
diff: 
delta:
   (33.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,6)=9# (4,4)=9#
   (116.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (3,0)
diff: 
delta: (1,1)=8  (1,2)=8 
   (57.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,6)=9# (4,4)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
diff: 
delta: (0,6)=9# (4,4)=9#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
  _01: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff:   ^.layer_0.shape.size.i
delta: (0,6)=9# (4,4)=9#
! size mismatch, 3x3 instead of 5x3

TRAIN 1b2d62fb.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x.x|xxx|x..|xxx at (0,0)
  _01: a rectangle with size (3,3) and color brown and mask x.x|xxx|..x at (0,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,4)=9# (4,6)=9#
   (116.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
diff: 
delta:
   (11.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x.x|xxx|x..|xxx at (0,0)
  _01: a rectangle with size (3,3) and color brown and mask x.x|xxx|..x at (0,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,4)=9# (4,6)=9#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x.x|xxx|x..|xxx at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask x.x|xxx|..x at (0,4)
diff: 
delta: (3,4)=9# (4,6)=9#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x.x|xxx|..x at (0,4)
  _01: a rectangle with size (5,3) and color brown and mask .xx|x.x|xxx|x..|xxx at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff:   ^.layer_0.shape.size.i
delta: (3,4)=9# (4,6)=9#
! size mismatch, 3x3 instead of 5x3

TRAIN 1b2d62fb.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask xx.|.xx|xx.|xxx|.xx at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask .x.|x.x|.xx at (2,4)
diff: 
delta: (0,5)=9#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask xx.|.xx|xx.|xxx|.xx at (0,0)
  _01: a rectangle with size (3,3) and color brown and mask .x.|x.x|.xx at (2,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff:   ^.layer_01.pos.i
delta: (0,5)=9#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|.xx at (2,4)
  _01: a rectangle with size (5,3) and color brown and mask xx.|.xx|xx.|xxx|.xx at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (0,5)=9#
! size mismatch, 3x3 instead of 5x3

TEST 1b2d62fb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.7 sec (6.7 sec/task)
bits-train-error = 1263.1 bits (1263.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-374] Checking task 1b60fb0c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17924.4 = 17933.4
DL output with Mo: L = 9.0 + 23238.1 = 23247.1
DL input+output M: L = 17.9 + 41162.5 = 41180.4

# learning a model for train pairs
2.000	
1.193	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.471	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.298	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.273	OUT DEF: ^.size=^.size
0.259	OUT DEF: ^.layer_0=^.layer_0
0.252	IN  DEF: ^.layer_0.shape.color=blue
0.246	OUT DEF: ^.layer_01.shape.color=red
0.243	IN  DEF: ^.color=black
0.241	OUT DEF: ^.color=black
0.239	IN  DEF: ^.size=(?,?)
0.225	IN  DEF: ^.size.i=10
0.210	IN  DEF: ^.size.j=10
0.208	IN  DEF: ^.layer_0.pos=(?,?)
0.200	IN  DEF: ^.layer_0.pos.i=1
0.192	IN  DEF: ^.layer_0.pos.j=3
0.191	IN  DEF: ^.layer_0.shape.size=(?,?)
0.189	OUT DEF: ^.layer_01.pos=(?,?)
0.183	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.i
0.178	OUT DEF: ^.layer_01.pos.i=^.size.i - ^.layer_0.shape.size.j
0.176	OUT DEF: ^.layer_01.shape.size=(?,?)
0.169	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.j - 3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 3) and color red and mask ? at (^.size.i - ^.layer_0.shape.size.j,^.layer_0.pos.i)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (1,3)

DL input  with Mi: L = 56.2 + 2321.9 = 2378.1
DL output with Mo: L = 65.7 + 776.0 = 841.7
DL input+output M: L = 121.9 + 3097.9 = 3219.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
diff: 
delta:
   (66.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
  _01: a rectangle with size (3,3) and color red and mask xx.|xxx|x.. at (4,1)
diff: 
delta:
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
diff: 
delta:
   (82.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
  _01: a rectangle with size (5,4) and color red and mask xx..|xx..|xxxx|xx..|xx.. at (3,1)
diff: 
delta:
   (30.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
diff: 
delta:
   (82.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
  _01: a rectangle with size (5,4) and color red and mask x..x|x.x.|xxxx|x.x.|x..x at (3,1)
diff: 
delta:
   (30.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,8) and color blue and mask ..x.....|xxxxx...|..xx..x.|..x...x.|..xxxxxx|..xx.xx.|...x..x.|..xx....|.xxxxx..|...x.... at (0,2)
diff:   ^.layer_0.pos.j  ^.layer_0.pos.i
delta:
! 15 wrong pixels (generated / expected)

TEST 1b60fb0c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 776.0 bits (776.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-373] Checking task 1bfc4729.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1233.5 = 1242.5
DL output with Mo: L = 9.0 + 20296.6 = 20305.6
DL input+output M: L = 17.9 + 21530.1 = 21548.0

# learning a model for train pairs
2.000	
1.599	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.191	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.125	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.044	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.994	OUT DEF: ^.layer_0.shape.mask=xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x
0.944	OUT DEF: ^.layer_01.shape.mask=x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx
0.919	IN  DEF: ^.color=black
0.900	OUT DEF: ^.size=^.size
0.883	IN  DEF: ^.size=(?,?)
0.743	IN  DEF: ^.size.i=10
0.603	IN  DEF: ^.size.j=10
0.585	IN  DEF: ^.layer_0.pos=(?,?)
0.512	IN  DEF: ^.layer_0.pos.i=2
0.494	IN  DEF: ^.layer_01.pos=(?,?)
0.421	IN  DEF: ^.layer_01.pos.i=7
0.416	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.411	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.410	OUT DEF: ^.color=black
0.409	OUT DEF: ^.layer_0.pos=(?,?)
0.404	OUT DEF: ^.layer_0.pos.i=(0)
0.400	OUT DEF: ^.layer_0.pos.j=(0)
0.399	OUT DEF: ^.layer_0.shape.size=(?,?)
0.390	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.383	OUT DEF: ^.layer_0.shape.size.i=5
0.382	OUT DEF: ^.layer_01.pos=(?,?)
0.377	OUT DEF: ^.layer_01.pos.j=(0)
0.373	OUT DEF: ^.layer_01.pos.i=5
0.372	OUT DEF: ^.layer_01.shape.size=(?,?)
0.363	OUT DEF: ^.layer_01.shape.size.j=^.size.j
0.357	OUT DEF: ^.layer_01.shape.size.i=5

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (5,^.size.j) and color ^.layer_0.shape.color and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at ((0),(0))
  _01: a rectangle with size (5,^.size.j) and color ^.layer_01.shape.color and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at (5,(0))
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a point with color ? at (2,?)
  _01: a point with color ? at (7,?)

DL input  with Mi: L = 60.7 + 371.5 = 432.2
DL output with Mo: L = 175.9 + 0.0 = 175.9
DL input+output M: L = 236.6 + 371.5 = 608.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (2,2)
  _01: a point with color orange at (7,7)
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,10) and color pink and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at (0,0)
  _01: a rectangle with size (5,10) and color orange and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at (5,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (2,2)
  _01: a point with color orange at (7,7)
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,6)
  _01: a point with color yellow at (7,5)
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,10) and color blue and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at (0,0)
  _01: a rectangle with size (5,10) and color yellow and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at (5,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,6)
  _01: a point with color yellow at (7,5)
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (2,4)
  _01: a point with color cyan at (7,6)
diff: 
delta:
correct output grid

TEST 1bfc4729.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-372] Checking task 1c786137.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 144949.2 = 144958.2
DL output with Mo: L = 9.0 + 18287.8 = 18296.7
DL input+output M: L = 17.9 + 163237.0 = 163254.9

# learning a model for train pairs
2.000	
1.847	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.724	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.647	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.590	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.538	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.509	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 118860.2 = 118908.2
DL output with Mo: L = 85.3 + 12520.6 = 12605.9
DL input+output M: L = 133.3 + 131380.7 = 131514.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,21) and color black and layers
  _0: a rectangle with size (8,10) and color red and mask Border at (3,4)
  _01: a rectangle with size (10,6) and color green and mask xxx...|...xx.|.....x|.x...x|.xxxx.|x.xx..|.x.xx.|x.x..x|...xx.|....xx at (11,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,9)=3  (5,11)=3  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,8)=3  (6,9)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,10)=3  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,10)=3  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,9)=3  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,1)=1  (13,2)=5# (13,3)=1  (13,4)=8  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,0)=1  (14,2)=1  (14,4)=1  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,1)=1  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,2)=8  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,1)=8  (18,4)=1  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,0)=1  (19,1)=5# (19,2)=1  (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,0)=1  (20,1)=3  (20,3)=1  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,1)=1  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,2)=1  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
   (6595.2 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,5) and color green and mask .xxxx|.x.x.|xx...|..x..|..x..|.x... at (0,3)
  _01: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,6)
  _0111: a rectangle with size (1,7) and color blue and mask Full at (4,1)
diff: 
delta: (0,2)=8  (1,0)=1  (1,7)=1  (2,6)=8  (2,7)=1  (3,2)=5# (3,3)=1  (4,0)=5# (4,3)=0  (5,0)=5# (5,2)=8 
   (376.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,21) and color black and layers
  _0: a rectangle with size (8,10) and color red and mask Border at (3,4)
  _01: a rectangle with size (10,6) and color green and mask xxx...|...xx.|.....x|.x...x|.xxxx.|x.xx..|.x.xx.|x.x..x|...xx.|....xx at (11,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,9)=3  (5,11)=3  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,8)=3  (6,9)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,10)=3  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,10)=3  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,9)=3  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,1)=1  (13,2)=5# (13,3)=1  (13,4)=8  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,0)=1  (14,2)=1  (14,4)=1  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,1)=1  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,2)=8  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,1)=8  (18,4)=1  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,0)=1  (19,1)=5# (19,2)=1  (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,0)=1  (20,1)=3  (20,3)=1  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,1)=1  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,2)=1  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
! size mismatch, 10x10 instead of 6x8

TRAIN 1c786137.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (7,5) and color yellow and mask Border at (6,2)
  _01: a rectangle with size (5,10) and color pink and mask xx...x.xxx|xx....xxx.|..x.xx....|...x.x....|.xx....... at (0,3)
diff: 
delta: (0,1)=6  (0,2)=9# (0,6)=6  (0,7)=3  (0,9)=9# (0,13)=9# (0,14)=9# (1,0)=9# (1,1)=9# (1,7)=9# (1,8)=3  (1,12)=9# (1,13)=9# (1,15)=6  (2,0)=6  (2,2)=9# (2,10)=3  (2,13)=6  (3,0)=9# (3,1)=6  (3,2)=6  (3,3)=9# (3,4)=9# (3,5)=9# (3,7)=3  (3,9)=9# (3,10)=9# (3,11)=6  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=6  (4,0)=6  (4,1)=6  (4,6)=9# (4,9)=3  (4,15)=9# (5,0)=9# (5,1)=9# (5,2)=6  (5,5)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,1)=6  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
   (2075.4 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (2,0)
  _011: a rectangle with size (1,3) and color brown and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color brown and mask Full at (3,0)
diff: 
delta: (4,0)=6  (4,1)=3  (4,2)=9#
   (164.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (7,5) and color yellow and mask Border at (6,2)
  _01: a rectangle with size (5,10) and color pink and mask xx...x.xxx|xx....xxx.|..x.xx....|...x.x....|.xx....... at (0,3)
diff: 
delta: (0,1)=6  (0,2)=9# (0,6)=6  (0,7)=3  (0,9)=9# (0,13)=9# (0,14)=9# (1,0)=9# (1,1)=9# (1,7)=9# (1,8)=3  (1,12)=9# (1,13)=9# (1,15)=6  (2,0)=6  (2,2)=9# (2,10)=3  (2,13)=6  (3,0)=9# (3,1)=6  (3,2)=6  (3,3)=9# (3,4)=9# (3,5)=9# (3,7)=3  (3,9)=9# (3,10)=9# (3,11)=6  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=6  (4,0)=6  (4,1)=6  (4,6)=9# (4,9)=3  (4,15)=9# (5,0)=9# (5,1)=9# (5,2)=6  (5,5)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,1)=6  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
! size mismatch, 10x10 instead of 5x3

TRAIN 1c786137.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (10,12) and color cyan and mask Border at (2,3)
  _01: a rectangle with size (4,6) and color grey and mask .x....|..xx.x|x.x.x.|.x.x.. at (5,4)
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,7)=2  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,12)=5# (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,7)=2  (5,9)=3  (5,11)=5# (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,10)=3  (6,12)=5# (7,5)=2  (7,7)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,6)=2  (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,0)=2  (13,1)=5# (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=2  (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
   (3215.4 bits)
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask .x....|..xx.x|x.x.x.|.x.x.. at (2,0)
  _01: a rectangle with size (4,7) and color grey and mask x......|.xxxx..|.....x.|xx.x..x at (0,2)
  _011: a rectangle with size (5,4) and color red and mask .xxx|xxxx|.xxx|x.x.|.x.. at (3,0)
  _0111: a rectangle with size (1,4) and color red and mask Full at (4,6)
diff: 
delta: (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=2  (0,7)=2  (0,8)=5# (1,0)=3  (1,7)=2  (1,9)=5# (2,0)=3  (2,3)=2  (2,5)=3  (2,8)=3  (3,0)=3  (3,6)=3  (5,8)=3  (5,9)=3  (6,1)=3  (6,3)=3  (6,6)=5# (6,8)=5# (7,0)=3  (7,2)=5# (7,4)=5# (7,8)=5# (7,9)=5#
   (711.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (10,12) and color cyan and mask Border at (2,3)
  _01: a rectangle with size (4,6) and color grey and mask .x....|..xx.x|x.x.x.|.x.x.. at (5,4)
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,7)=2  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,12)=5# (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,7)=2  (5,9)=3  (5,11)=5# (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,10)=3  (6,12)=5# (7,5)=2  (7,7)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,6)=2  (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,0)=2  (13,1)=5# (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=2  (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
! size mismatch, 10x10 instead of 8x10

TRAIN 1c786137.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color cyan and layers
  _0: a rectangle with size (10,11) and color green and mask Border at (4,3)
  _01: a rectangle with size (4,6) and color blue and mask xxx.x.|...x..|..xx.x|.xx.x. at (5,7)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=0  (0,4)=1  (0,5)=1  (0,7)=0  (0,8)=0  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=0  (1,0)=0  (1,1)=1  (1,2)=0  (1,5)=1  (1,6)=0  (1,7)=1  (1,8)=1  (1,9)=2  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=0  (1,15)=2  (2,0)=0  (2,1)=0  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,11)=0  (2,13)=0  (2,14)=0  (2,15)=1  (3,0)=1  (3,1)=0  (3,2)=1  (3,3)=0  (3,5)=0  (3,6)=1  (3,8)=1  (3,9)=0  (3,10)=1  (3,11)=1  (3,15)=0  (4,1)=0  (4,14)=0  (4,15)=2  (5,0)=1  (5,1)=0  (5,4)=2  (5,5)=0  (5,10)=0  (5,12)=0  (5,14)=0  (5,15)=0  (6,0)=0  (6,5)=1  (6,6)=0  (6,8)=2  (6,11)=2  (6,14)=1  (7,0)=1  (7,1)=0  (7,5)=2  (7,6)=0  (7,7)=2  (7,8)=0  (8,0)=0  (8,2)=0  (8,4)=0  (8,5)=1  (8,14)=2  (8,15)=1  (9,0)=1  (9,1)=0  (9,2)=0  (9,4)=0  (9,5)=1  (9,8)=0  (9,10)=0  (9,11)=2  (9,12)=0  (9,15)=1  (10,0)=0  (10,4)=0  (10,7)=2  (11,0)=1  (11,1)=1  (11,2)=1  (11,5)=0  (11,6)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=0  (11,15)=0  (12,0)=1  (12,2)=0  (12,4)=0  (12,5)=2  (12,8)=1  (12,9)=2  (12,10)=0  (12,11)=0  (12,12)=2  (12,15)=1  (13,1)=1  (13,2)=1  (13,14)=0  (13,15)=2  (14,1)=1  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,8)=0  (14,9)=1  (14,10)=2  (14,14)=1  (15,1)=1  (15,2)=0  (15,3)=0  (15,4)=1  (15,5)=1  (15,7)=0  (15,8)=1  (15,9)=2  (15,11)=1  (15,12)=0  (15,13)=1  (15,14)=2  (15,15)=0  (16,1)=0  (16,3)=2  (16,5)=0  (16,7)=2  (16,8)=0  (16,9)=1  (16,11)=1  (16,13)=1 
! size mismatch, 10x10 instead of 8x9

TEST 1c786137.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.0 sec (28.0 sec/task)
bits-train-error = 12520.6 bits (12520.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-371] Checking task 1caeab9d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7419.5 = 7428.5
DL output with Mo: L = 9.0 + 7419.5 = 7428.5
DL input+output M: L = 17.9 + 14839.0 = 14856.9

# learning a model for train pairs
2.000	
1.809	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.615	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.409	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.218	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.024	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.819	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.747	OUT DEF: ^.size=^.size
0.708	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.668	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.629	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.600	OUT DEF: ^.layer_01.shape=^.layer_011.shape
0.570	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.500	OUT DEF: ^.layer_011=^.layer_01
0.482	IN  DEF: ^.layer_01.shape.color=blue
0.463	IN  DEF: ^.layer_0.shape.color=red
0.445	IN  DEF: ^.layer_011.shape.color=yellow
0.435	IN  DEF: ^.layer_0.shape.mask=Full
0.426	IN  DEF: ^.layer_01.shape.mask=Full
0.416	IN  DEF: ^.layer_011.shape.mask=Full
0.410	IN  DEF: ^.color=black
0.404	OUT DEF: ^.color=black
0.399	IN  DEF: ^.size=(?,?)
0.364	IN  DEF: ^.size.j=10
0.359	OUT DEF: ^.layer_0.pos=(?,?)
0.340	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.325	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i
0.320	OUT DEF: ^.layer_01.pos=(?,?)
0.302	OUT DEF: ^.layer_01.pos.j=^.layer_011.pos.j
0.286	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.281	IN  DEF: ^.layer_0.pos=(?,?)
0.276	IN  DEF: ^.layer_0.shape.size=(?,?)
0.259	IN  DEF: ^.layer_0.shape.size.i=2
0.254	IN  DEF: ^.layer_01.pos=(?,?)
0.250	IN  DEF: ^.layer_01.shape.size=(?,?)
0.232	IN  DEF: ^.layer_01.shape.size.i=2
0.228	IN  DEF: ^.layer_011.pos=(?,?)
0.223	IN  DEF: ^.layer_011.shape.size=(?,?)
0.206	IN  DEF: ^.layer_011.shape.size.i=2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_01.pos.i,^.layer_0.pos.j)
  _01: ^.layer_011.shape at (^.layer_01.pos.i,^.layer_011.pos.j)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,10) and color black and layers
  _0: a rectangle with size (2,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (2,?) and color blue and mask Full at (?,?)
  _011: a rectangle with size (2,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 107.0 + 1368.9 = 1476.0
DL output with Mo: L = 51.2 + 0.0 = 51.2
DL input+output M: L = 158.2 + 1368.9 = 1527.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
diff: 
delta:
   (44.8 bits)
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,4)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,1)
  _01: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (0,7)
diff: 
delta:
   (53.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (5,1)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (5,7)
  _011: a rectangle with size (2,3) and color blue and mask Full at (5,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,1)
  _01: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (0,7)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _01: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (3,6)
diff: 
delta:
   (38.8 bits)
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,3)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,6)
  _011: a rectangle with size (2,1) and color blue and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _01: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (3,6)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,1)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (5,4)
diff: 
delta: (2,7)=2  (4,0)=1  (7,3)=4 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|.xx|x.. at (0,7)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,1)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (5,4)
diff:   ^.layer_0.shape.mask  ^.layer_0.shape.size.i
delta: (4,0)=1  (7,3)=4 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (3,3) and color blue and mask .xx|.xx|x.. at (2,0)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (5,4)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.i
delta: (2,7)=2  (7,3)=4 
! 2 wrong pixels (generated / expected)

TEST 1caeab9d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-370] Checking task 1cf80156.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5660.5 = 5669.5
DL output with Mo: L = 9.0 + 4234.4 = 4243.4
DL input+output M: L = 17.9 + 9894.9 = 9912.9

# learning a model for train pairs
2.000	
1.372	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.541	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.443	OUT DEF: ^.size=^.layer_0.shape.size
0.432	OUT DEF: ^.color=black
0.424	OUT DEF: ^.layer_0.pos=(?,?)
0.401	OUT DEF: ^.layer_0.pos.i=(0)
0.377	OUT DEF: ^.layer_0.pos.j=(0)
0.369	IN  DEF: ^.color=black
0.363	IN  DEF: ^.size=(?,?)
0.314	IN  DEF: ^.size.j=12
0.308	IN  DEF: ^.layer_0.pos=(?,?)
0.302	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at ((0),(0))
WHERE (Mi)
a background with size (?,12) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 47.1 + 1634.2 = 1681.3
DL output with Mo: L = 21.7 + 0.0 = 21.7
DL input+output M: L = 68.8 + 1634.2 = 1703.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|..x.|xxx.|x.x. at (2,3)
diff: 
delta:
   (54.9 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|..x.|xxx.|x.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|..x.|xxx.|x.x. at (2,3)
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (5,3) and color blue and mask x..|xx.|.x.|xxx|..x at (1,2)
diff: 
delta:
   (54.1 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color blue and mask x..|xx.|.x.|xxx|..x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (5,3) and color blue and mask x..|xx.|.x.|xxx|..x at (1,2)
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxx.|...xx at (3,3)
diff: 
delta:
   (54.5 bits)
data: a background with size (3,5) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxx.|...xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxx.|...xx at (3,3)
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask ..xxxx|..x...|x.x...|xxxx.. at (4,2)
diff: 
delta:
correct output grid

TEST 1cf80156.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-369] Checking task 1e0a9b12.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4063.4 = 4072.4
DL output with Mo: L = 9.0 + 4063.4 = 4072.4
DL input+output M: L = 17.9 + 8126.9 = 8144.8

# learning a model for train pairs
2.000	
1.842	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.730	OUT DEF: ^.size=^.size
1.649	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.604	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.570	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.538	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.502	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.474	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.439	OUT DEF: ^.layer_0111.shape=^.layer_01.shape
1.410	IN  OBJECT at ^.layer_010: a point with color ? at ?
1.380	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.345	IN  OBJECT at ^.layer_0101: a point with color ? at ?
1.310	OUT DEF: ^.layer_011.shape=^.layer_011.shape
1.293	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.275	OUT DEF: ^.layer_01.shape.mask=^.layer_0.shape.mask
1.258	IN  DEF: ^.layer_0.shape.mask=Full
1.247	OUT DEF: ^.color=black
1.236	IN  DEF: ^.color=black
1.227	OUT DEF: ^.layer_0.pos=(?,?)
1.201	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
1.177	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i - 1
1.169	OUT DEF: ^.layer_0.shape.size=(?,?)
1.134	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.j + ^.layer_0.shape.size.i
1.117	OUT DEF: ^.layer_0.shape.size.j=1
1.108	OUT DEF: ^.layer_01.pos=(?,?)
1.082	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
1.056	OUT DEF: ^.layer_01.pos.j=3
1.047	OUT DEF: ^.layer_01.shape.size=(?,?)
1.024	OUT DEF: ^.layer_01.shape.size.i=^.size.i - ^.layer_01.pos.i
1.006	OUT DEF: ^.layer_01.shape.size.j=1
0.998	OUT DEF: ^.layer_0111.pos=(?,?)
0.972	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.j
0.948	OUT DEF: ^.layer_0111.pos.i=^.layer_0.shape.size.i + ^.layer_0101.pos.i
0.940	OUT DEF: ^.layer_011.pos=(?,?)
0.913	OUT DEF: ^.layer_011.pos.j=^.layer_011.pos.j
0.890	OUT DEF: ^.layer_011.pos.i=^.layer_0.shape.size.i + 2
0.882	IN  DEF: ^.size=(?,?)
0.873	IN  DEF: ^.layer_0.pos=(?,?)
0.864	IN  DEF: ^.layer_01.pos=(?,?)
0.856	IN  DEF: ^.layer_011.pos=(?,?)
0.847	IN  DEF: ^.layer_0.shape.size=(?,?)
0.830	IN  DEF: ^.layer_0.shape.size.j=1
0.821	IN  DEF: ^.layer_010.pos=(?,?)
0.795	IN  DEF: ^.layer_010.pos.i=(0)
0.786	IN  DEF: ^.layer_0101.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.pos.j + ^.layer_0.shape.size.i,1) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (^.layer_01.pos.i - 1,^.layer_0.pos.j)
  _01: a rectangle with size (^.size.i - ^.layer_01.pos.i,1) and color ? and mask ^.layer_0.shape.mask at (^.layer_01.pos.i,3)
  _011: ^.layer_011.shape at (^.layer_0.shape.size.i + 2,^.layer_011.pos.j)
  _0111: ^.layer_01.shape at (^.layer_0.shape.size.i + ^.layer_0101.pos.i,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _010: a point with color ? at ((0),?)
  _0101: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 106.4 + 2595.3 = 2701.6
DL output with Mo: L = 166.1 + 333.5 = 499.7
DL input+output M: L = 272.5 + 2928.8 = 3201.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _010: a point with color brown at (0,3)
  _0101: a point with color yellow at (2,1)
  _01: a point with color blue at (3,0)
  _011: a point with color pink at (2,2)
diff: 
delta:
   (68.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color brown and mask Full at (3,3)
  _011: a point with color pink at (3,2)
  _0111: a point with color blue at (3,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _010: a point with color brown at (0,3)
  _0101: a point with color yellow at (2,1)
  _01: a point with color pink at (2,2)
  _011: a point with color blue at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _010: a point with color brown at (0,3)
  _0101: a point with color yellow at (2,1)
  _01: a point with color blue at (3,0)
  _011: a point with color pink at (2,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _010: a point with color brown at (0,3)
  _0101: a point with color pink at (2,2)
  _01: a point with color yellow at (2,1)
  _011: a point with color blue at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _010: a point with color brown at (0,5)
  _0101: a point with color cyan at (1,3)
  _01: a point with color orange at (4,2)
  _011: a point with color orange at (5,2)
diff: 
delta: (4,3)=8 
   (98.3 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (4,3)
  _011: a point with color orange at (5,2)
  _0111: a point with color orange at (4,2)
diff: 
delta: (5,5)=9#
   (24.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _010: a point with color brown at (0,5)
  _0101: a point with color cyan at (1,3)
  _01: a point with color orange at (4,2)
  _011: a point with color cyan at (4,3)
diff: 
delta: (5,2)=7#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _010: a point with color brown at (0,5)
  _0101: a point with color cyan at (1,3)
  _01: a point with color orange at (4,2)
  _011: a point with color orange at (5,2)
diff: 
delta: (4,3)=8 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _010: a point with color brown at (0,5)
  _0101: a point with color cyan at (1,3)
  _01: a point with color cyan at (4,3)
  _011: a point with color orange at (4,2)
diff: 
delta: (5,2)=7#
! 4 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _010: a point with color blue at (0,3)
  _0101: a point with color blue at (2,3)
  _01: a point with color pink at (3,0)
  _011: a point with color red at (2,4)
diff: 
delta: (4,1)=3 
   (93.2 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color blue and mask Full at (3,3)
  _011: a point with color red at (4,4)
  _0111: a point with color pink at (4,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _010: a point with color blue at (0,3)
  _0101: a point with color blue at (2,3)
  _01: a point with color red at (2,4)
  _011: a point with color pink at (3,0)
diff: 
delta: (4,1)=3 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _010: a point with color blue at (0,3)
  _0101: a point with color blue at (2,3)
  _01: a point with color red at (2,4)
  _011: a point with color green at (4,1)
diff: 
delta: (3,0)=6 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _010: a point with color blue at (0,3)
  _0101: a point with color blue at (2,3)
  _01: a point with color pink at (3,0)
  _011: a point with color red at (2,4)
diff: 
delta: (4,1)=3 
! 2 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (3,0)
  _010: a point with color red at (0,1)
  _0101: a point with color yellow at (0,3)
  _01: a point with color grey at (1,0)
  _011: a point with color green at (0,4)
diff: 
delta: (2,2)=6  (3,1)=2  (3,3)=4 
! 11 wrong pixels (generated / expected)

TEST 1e0a9b12.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.4 sec (17.4 sec/task)
bits-train-error = 333.5 bits (333.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-368] Checking task 1e32b0e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 49507.8 = 49516.8
DL output with Mo: L = 9.0 + 73442.4 = 73451.4
DL input+output M: L = 17.9 + 122950.2 = 122968.1

# learning a model for train pairs
2.000	
1.406	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.876	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.705	IN  DEF: ^.layer_0.shape.mask=.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....
0.652	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.604	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.559	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.520	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.496	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.471	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
0.456	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _010: ^.layer_010.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_01.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 355.5 + 7498.6 = 7854.1
DL output with Mo: L = 93.8 + 21758.2 = 21852.1
DL input+output M: L = 449.3 + 29256.8 = 29706.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (13,1)
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (7,8)=2  (8,7)=2  (8,9)=2  (9,8)=2 
   (294.2 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (1,1)
  _01: a rectangle with size (1,15) and color cyan and mask Full at (8,1)
  _011: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (13,1)
  _0111: a rectangle with size (1,9) and color cyan and mask Full at (14,7)
  _01111: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (1,7)
diff: 
delta: (1,14)=8  (2,13)=2  (2,14)=2  (2,15)=2  (3,14)=8  (7,2)=8  (7,8)=2  (7,14)=8  (8,4)=0  (8,6)=0  (8,7)=2  (8,9)=2  (8,10)=0  (8,12)=0  (9,2)=8  (9,8)=2  (9,14)=8  (13,8)=8  (13,14)=8  (14,10)=0  (14,12)=0  (15,8)=8  (15,14)=8 
   (644.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (13,1)
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (7,8)=2  (8,7)=2  (8,9)=2  (9,8)=2 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1 
   (237.3 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _01: a rectangle with size (15,3) and color red and mask Full at (1,13)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
  _0111: a rectangle with size (3,9) and color red and mask Full at (7,1)
  _01111: a rectangle with size (3,3) and color red and mask Full at (13,1)
diff: 
delta: (1,7)=2  (1,8)=2  (1,9)=2  (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (2,9)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,13)=0  (4,14)=0  (4,15)=0  (6,13)=0  (6,14)=0  (6,15)=0  (7,4)=0  (7,6)=0  (8,4)=0  (8,6)=0  (8,14)=1  (9,4)=0  (9,6)=0  (10,13)=0  (10,14)=0  (10,15)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,7)=2  (13,9)=2  (14,8)=2  (15,7)=2  (15,9)=2 
   (887.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,1)
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
diff: 
delta: (2,7)=3  (2,15)=3  (14,15)=3  (15,14)=3 
   (218.4 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (15,1) and color blue and mask Full at (1,8)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
  _0111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (7,13)
  _01111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,1)
diff: 
delta: (1,14)=1  (2,7)=3  (2,8)=0  (2,9)=1  (2,13)=1  (2,15)=3  (3,14)=1  (4,8)=0  (6,8)=0  (8,3)=1  (8,7)=1  (8,8)=0  (8,9)=1  (9,2)=1  (10,8)=0  (12,8)=0  (13,14)=1  (14,7)=1  (14,8)=0  (14,9)=1  (14,13)=1  (14,15)=3  (15,14)=3 
   (643.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
diff: 
delta: (2,7)=3  (2,15)=3  (14,15)=3  (15,14)=3 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color brown and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _01: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (7,1)
diff: 
delta: (1,7)=4  (1,8)=4  (9,7)=4  (9,8)=4  (14,7)=4  (14,9)=4 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color brown and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (7,1)
  _01: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
diff: 
delta: (1,7)=4  (1,8)=4  (9,7)=4  (9,8)=4  (14,7)=4  (14,9)=4 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color brown and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _010: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (7,1)
diff: 
delta: (1,7)=4  (1,8)=4  (2,2)=0  (9,7)=4  (9,8)=4  (14,7)=4  (14,9)=4 
! size mismatch, 10x10 instead of 17x17

TEST 1e32b0e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.2 sec (29.2 sec/task)
bits-train-error = 21758.2 bits (21758.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-367] Checking task 1f0c79e5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3964.8 = 3973.8
DL output with Mo: L = 9.0 + 18647.8 = 18656.7
DL input+output M: L = 17.9 + 22612.6 = 22630.5

# learning a model for train pairs
2.000	
1.261	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.013	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.950	IN  OBJECT at ^.layer_00: a point with color ? at ?
0.910	OUT DEF: ^.size=^.size
0.887	IN  DEF: ^.layer_0.shape.mask=Full
0.871	IN  DEF: ^.color=black
0.859	IN  DEF: ^.size=(?,?)
0.773	IN  DEF: ^.size.i=9
0.688	IN  DEF: ^.size.j=9
0.676	IN  DEF: ^.layer_00.pos=(?,?)
0.663	IN  DEF: ^.layer_0.pos=(?,?)
0.651	IN  DEF: ^.layer_0.shape.size=(?,?)
0.608	IN  DEF: ^.layer_0.shape.size.i=2
0.565	IN  DEF: ^.layer_0.shape.size.j=2
0.561	OUT DEF: ^.color=black
0.559	OUT DEF: ^.layer_0.pos=(?,?)
0.556	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (2,2) and color ? and mask Full at (?,?)

DL input  with Mi: L = 69.7 + 1296.1 = 1365.9
DL output with Mo: L = 35.6 + 3930.8 = 3966.4
DL input+output M: L = 105.4 + 5226.9 = 5332.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (2,2) and color yellow and mask Full at (4,2)
diff: 
delta:
   (27.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,7) and color yellow and mask ....xxx|...xxx.|..xxx..|.xxx...|xxx....|xx..... at (0,2)
diff: 
delta:
   (74.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (2,2) and color yellow and mask Full at (4,2)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,2)
diff: 
delta:
   (27.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,7) and color green and mask xx.....|xxx....|.xxx...|..xxx..|...xxx.|....xxx|.....xx|......x at (1,2)
diff: 
delta:
   (88.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,2)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (3,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta: (4,4)=6 
   (47.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color pink and mask ......xxx|.....xxx.|....xxx..|...xxx...|..xxx....|.xxx.....|xxx......|xx.......|x........ at (0,0)
diff: 
delta:
   (115.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (3,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta: (4,4)=6 
! 28 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color orange at (4,4)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta:
   (27.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask xx....xxx|xxx..xxx.|.xxxxxx..|..xxxx...|..xxx....|.xxx.....|xxx......|xx.......|x........ at (0,0)
diff: 
delta:
   (115.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color orange at (4,4)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color cyan at (3,5)
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TEST 1f0c79e5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 3930.8 bits (3930.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-366] Checking task 1f642eb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10696.7 = 10705.7
DL output with Mo: L = 9.0 + 10696.7 = 10705.7
DL input+output M: L = 17.9 + 21393.4 = 21411.3

# learning a model for train pairs
2.000	
1.408	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.067	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.013	OUT DEF: ^.size=^.size
0.983	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.970	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.957	IN  DEF: ^.layer_0.shape.color=cyan
0.946	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.923	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.893	OUT DEF: ^.layer_01=^.layer_01
0.870	OUT OBJECT at ^.layer_00: ^.layer_01.shape at ?
0.840	OUT DEF: ^.layer_00.pos=^.layer_0.pos
0.829	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.805	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.775	OUT DEF: ^.layer_011=^.layer_011
0.751	OUT OBJECT at ^.layer_001: ^.layer_011.shape at ?
0.740	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.728	OUT OBJECT at ^.layer_01111: a point with color ? at ?
0.722	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.715	IN  DEF: ^.layer_0.shape.mask=Full
0.711	OUT DEF: ^.color=black
0.707	IN  DEF: ^.color=black
0.703	OUT DEF: ^.layer_001.pos=(?,?)
0.691	OUT DEF: ^.layer_001.pos.i=^.layer_01.pos.i + ^.layer_011.pos.i
0.679	OUT DEF: ^.layer_001.pos.j=^.layer_01.pos.j + ^.layer_011.pos.j
0.676	OUT DEF: ^.layer_0.shape.size=(?,?)
0.662	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.659	OUT DEF: ^.layer_0111.pos=(?,?)
0.656	IN  DEF: ^.size=(?,?)
0.631	IN  DEF: ^.size.i=10
0.606	IN  DEF: ^.size.j=10
0.603	OUT DEF: ^.layer_01111.pos=(?,?)
0.591	OUT DEF: ^.layer_01111.pos.i=^.layer_0.shape.size.i + 2
0.579	OUT DEF: ^.layer_0111.pos.i=9
0.575	IN  DEF: ^.layer_0.pos=(?,?)
0.562	IN  DEF: ^.layer_0.pos.i=3
0.559	IN  DEF: ^.layer_0.shape.size=(?,?)
0.556	IN  DEF: ^.layer_01.pos=(?,?)
0.553	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01.shape at ^.layer_0.pos
  _001: ^.layer_011.shape at (^.layer_01.pos.i + ^.layer_011.pos.i,^.layer_01.pos.j + ^.layer_011.pos.j)
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a point with color ? at (9,?)
  _01111: a point with color ? at (^.layer_0.shape.size.i + 2,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (3,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 87.8 + 2949.0 = 3036.8
DL output with Mo: L = 134.9 + 2743.8 = 2878.7
DL input+output M: L = 222.7 + 5692.8 = 5915.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color pink at (6,0)
diff: 
delta: (9,5)=4 
   (64.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (3,4)
  _001: a point with color pink at (6,4)
  _0: a rectangle with size (3,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color pink at (6,0)
  _0111: a point with color yellow at (9,5)
  _01111: a point with color yellow at (6,5)
diff: 
delta:
   (24.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color pink at (6,0)
diff: 
delta: (9,5)=4 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color yellow at (9,5)
diff: 
delta: (6,0)=6 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color pink at (6,0)
  _011: a point with color brown at (0,4)
diff: 
delta: (9,5)=4 
! 7 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,0)
  _011: a point with color orange at (0,4)
diff: 
delta: (5,9)=2  (7,0)=3  (9,5)=1 
   (105.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (3,3)
  _001: a point with color orange at (3,4)
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,0)
  _011: a point with color orange at (0,4)
  _0111: a point with color blue at (9,5)
  _01111: a point with color green at (7,0)
diff: 
delta: (5,5)=2  (5,9)=2  (7,3)=3  (7,5)=1 
   (105.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color orange at (0,4)
  _011: a point with color pink at (3,0)
diff: 
delta: (5,9)=2  (7,0)=3  (9,5)=1 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color orange at (0,4)
  _011: a point with color red at (5,9)
diff: 
delta: (3,0)=6  (7,0)=3  (9,5)=1 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,0)
  _011: a point with color orange at (0,4)
diff: 
delta: (5,9)=2  (7,0)=3  (9,5)=1 
! 13 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color green at (4,0)
diff: 
delta: (3,9)=6  (6,0)=2  (7,9)=2  (9,3)=7#
   (125.2 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (3,3)
  _001: a point with color green at (4,3)
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color green at (4,0)
  _0111: a point with color orange at (9,3)
  _01111: a point with color red at (7,9)
diff: 
delta: (3,5)=6  (3,9)=6  (6,0)=2  (6,3)=2  (7,3)=7# (7,5)=2 
   (144.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color pink at (3,9)
diff: 
delta: (4,0)=3  (6,0)=2  (7,9)=2  (9,3)=7#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color green at (4,0)
diff: 
delta: (3,9)=6  (6,0)=2  (7,9)=2  (9,3)=7#
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,9)
  _011: a point with color yellow at (0,3)
diff: 
delta: (4,0)=3  (6,0)=2  (7,9)=2  (9,3)=7#
! 18 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,2)
  _01: a point with color pink at (0,3)
  _011: a point with color red at (0,5)
diff: 
delta: (3,0)=9# (4,9)=7# (5,0)=3  (6,0)=4  (9,4)=6 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,2)
  _01: a point with color pink at (0,3)
  _011: a point with color brown at (3,0)
diff: 
delta: (0,5)=2  (4,9)=7# (5,0)=3  (6,0)=4  (9,4)=6 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,2)
  _01: a point with color red at (0,5)
  _011: a point with color pink at (0,3)
diff: 
delta: (3,0)=9# (4,9)=7# (5,0)=3  (6,0)=4  (9,4)=6 
! 19 wrong pixels (generated / expected)

TEST 1f642eb9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 2743.8 bits (2743.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-365] Checking task 1f85a75f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 34551.1 = 34560.1
DL output with Mo: L = 9.0 + 1447.7 = 1456.6
DL input+output M: L = 17.9 + 35998.8 = 36016.7

# learning a model for train pairs
2.000	
1.772	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.684	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.227	OUT DEF: ^.layer_0.shape=^.layer_0.shape
1.048	OUT DEF: ^.size=^.layer_0.shape.size
1.026	OUT DEF: ^.color=black
1.011	OUT DEF: ^.layer_0.pos=(?,?)
0.967	OUT DEF: ^.layer_0.pos.i=(0)
0.927	OUT DEF: ^.layer_0.pos.j=(0)
0.916	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.908	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.905	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.897	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.895	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.894	IN  OBJECT at ^.layer_0111111: a rectangle with size ? and color ? and mask ? at ?
0.892	IN  OBJECT at ^.layer_01111111: a point with color ? at ?
0.891	IN  OBJECT at ^.layer_011111111: a point with color ? at ?
0.889	IN  OBJECT at ^.layer_0111111111: a point with color ? at ?
0.887	IN  OBJECT at ^.layer_0110: a point with color ? at ?
0.886	IN  OBJECT at ^.layer_01111111111: a point with color ? at ?
0.884	IN  OBJECT at ^.layer_01111110: a point with color ? at ?
0.883	IN  DEF: ^.layer_01.shape.mask=Full
0.881	IN  DEF: ^.layer_011.shape.mask=Full
0.880	IN  DEF: ^.layer_0111.shape.mask=Full
0.878	IN  DEF: ^.layer_01111.shape.mask=Full
0.877	IN  DEF: ^.layer_0111111.shape.mask=Full
0.876	IN  DEF: ^.color=black
0.875	IN  DEF: ^.size=(?,?)
0.869	IN  DEF: ^.size.i=30
0.862	IN  DEF: ^.size.j=30
0.861	IN  DEF: ^.layer_0.pos=(?,?)
0.861	IN  DEF: ^.layer_0.shape.size=(?,?)
0.858	IN  DEF: ^.layer_0.shape.size.j=3
0.857	IN  DEF: ^.layer_01.pos=(?,?)
0.856	IN  DEF: ^.layer_01.shape.size=(?,?)
0.856	IN  DEF: ^.layer_0110.pos=(?,?)
0.852	IN  DEF: ^.layer_0110.pos.i=(0)
0.851	IN  DEF: ^.layer_011.pos=(?,?)
0.851	IN  DEF: ^.layer_011.shape.size=(?,?)
0.848	IN  DEF: ^.layer_011.shape.size.j=2
0.847	IN  DEF: ^.layer_011.shape.size.i=1
0.846	IN  OBJECT at ^.layer_01100: a rectangle with size ? and color ? and mask ? at ?
0.840	IN  OBJECT at ^.layer_011111111111: a rectangle with size ? and color ? and mask ? at ?
0.836	IN  DEF: ^.layer_011.pos.i=27
0.835	IN  OBJECT at ^.layer_0111111111111: a point with color ? at ?
0.833	IN  OBJECT at ^.layer_01111111111111: a point with color ? at ?
0.831	IN  OBJECT at ^.layer_0111111111110: a point with color ? at ?
0.829	IN  OBJECT at ^.layer_01111111111101: a point with color ? at ?
0.828	IN  DEF: ^.layer_01100.shape.mask=Full
0.827	IN  DEF: ^.color=black
0.826	IN  DEF: ^.layer_01100.pos=(?,?)
0.826	IN  DEF: ^.layer_01100.shape.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at ((0),(0))
WHERE (Mi)
a background with size (30,30) and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01100: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at ((0),?)
  _011: a rectangle with size (1,2) and color ? and mask Full at (27,?)
  _0111: a rectangle with size ? and color ? and mask Full at ?
  _01111: a rectangle with size ? and color ? and mask Full at ?
  _011111: a point with color ? at ?
  _01111110: a point with color ? at ?
  _0111111: a rectangle with size ? and color ? and mask Full at ?
  _01111111: a point with color ? at ?
  _011111111: a point with color ? at ?
  _0111111111: a point with color ? at ?
  _01111111111: a point with color ? at ?
  _0111111111110: a point with color ? at ?
  _01111111111101: a point with color ? at ?
  _011111111111: a rectangle with size ? and color ? and mask ? at ?
  _0111111111111: a point with color ? at ?
  _01111111111111: a point with color ? at ?

DL input  with Mi: L = 347.0 + 27527.5 = 27874.5
DL output with Mo: L = 28.0 + 0.0 = 28.0
DL input+output M: L = 375.0 + 27527.5 = 27902.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (10,17)
  _01: a rectangle with size (1,2) and color blue and mask Full at (4,12)
  _01100: a rectangle with size (1,2) and color blue and mask Full at (11,13)
  _0110: a point with color blue at (0,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (27,7)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (11,0)
  _01111: a rectangle with size (1,3) and color blue and mask Full at (25,20)
  _011111: a point with color blue at (0,5)
  _01111110: a point with color grey at (0,22)
  _0111111: a rectangle with size (2,1) and color grey and mask Full at (3,8)
  _01111111: a point with color grey at (1,15)
  _011111111: a point with color grey at (2,10)
  _0111111111: a point with color blue at (2,26)
  _01111111111: a point with color grey at (3,15)
  _0111111111110: a point with color blue at (3,22)
  _01111111111101: a point with color grey at (4,3)
  _011111111111: a rectangle with size (2,1) and color grey and mask Full at (6,4)
  _0111111111111: a point with color blue at (4,4)
  _01111111111111: a point with color blue at (4,15)
diff: 
delta: (4,19)=1  (5,18)=1  (5,29)=1  (6,7)=1  (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,1)=0  (11,5)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,21)=0  (26,13)=5# (26,24)=1  (26,26)=1  (26,29)=5# (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
   (1940.7 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (10,17)
  _01: a rectangle with size (1,2) and color blue and mask Full at (4,12)
  _01100: a rectangle with size (1,2) and color blue and mask Full at (11,13)
  _0110: a point with color blue at (0,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (27,7)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (11,0)
  _01111: a rectangle with size (1,3) and color blue and mask Full at (25,20)
  _011111: a point with color blue at (0,5)
  _01111110: a point with color grey at (0,22)
  _0111111: a rectangle with size (1,3) and color blue and mask Full at (26,24)
  _01111111: a point with color grey at (1,15)
  _011111111: a point with color grey at (2,10)
  _0111111111: a point with color blue at (2,26)
  _01111111111: a point with color grey at (3,8)
  _0111111111110: a point with color grey at (3,15)
  _01111111111101: a point with color blue at (3,22)
  _011111111111: a rectangle with size (2,1) and color grey and mask Full at (6,4)
  _0111111111111: a point with color grey at (4,3)
  _01111111111111: a point with color blue at (4,4)
diff: 
delta: (4,8)=5# (4,15)=1  (4,19)=1  (5,18)=1  (5,29)=1  (6,7)=1  (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,1)=0  (11,5)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,21)=0  (26,13)=5# (26,25)=0  (26,29)=5# (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
correct output grid

TRAIN 1f85a75f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (9,11)
  _01: a rectangle with size (8,1) and color red and mask Full at (2,7)
  _01100: a rectangle with size (1,2) and color red and mask Full at (0,10)
  _0110: a point with color red at (0,23)
  _011: a rectangle with size (1,2) and color red and mask Full at (27,17)
  _0111: a rectangle with size (2,1) and color red and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color red and mask Full at (7,20)
  _011111: a point with color red at (1,6)
  _01111110: a point with color red at (2,10)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (12,29)
  _01111111: a point with color red at (3,2)
  _011111111: a point with color red at (3,27)
  _0111111111: a point with color red at (4,13)
  _01111111111: a point with color red at (5,2)
  _0111111111110: a point with color red at (7,27)
  _01111111111101: a point with color red at (11,3)
  _011111111111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (9,22)
  _0111111111111: a point with color red at (12,6)
  _01111111111111: a point with color red at (14,8)
diff: 
delta: (4,7)=0  (7,7)=0  (8,7)=0  (17,19)=2  (17,25)=2  (18,28)=2  (19,1)=2  (19,16)=2  (20,8)=2  (20,28)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,21)=2  (28,27)=2 
   (812.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (9,11)
  _01: a rectangle with size (8,1) and color red and mask Full at (2,7)
  _01100: a rectangle with size (1,2) and color red and mask Full at (0,10)
  _0110: a point with color red at (0,23)
  _011: a rectangle with size (1,5) and color red and mask Full at (27,17)
  _0111: a rectangle with size (2,1) and color red and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color red and mask Full at (7,20)
  _011111: a point with color red at (1,6)
  _01111110: a point with color red at (2,10)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (12,29)
  _01111111: a point with color red at (3,2)
  _011111111: a point with color red at (3,27)
  _0111111111: a point with color red at (4,13)
  _01111111111: a point with color red at (5,2)
  _0111111111110: a point with color red at (7,27)
  _01111111111101: a point with color red at (9,23)
  _011111111111: a rectangle with size (3,1) and color red and mask Full at (18,28)
  _0111111111111: a point with color red at (10,22)
  _01111111111111: a point with color red at (11,3)
diff:   ^.layer_011.shape.size.j
delta: (4,7)=0  (7,7)=0  (8,7)=0  (12,6)=2  (14,8)=2  (17,19)=2  (17,25)=2  (19,1)=2  (19,16)=2  (19,28)=0  (20,8)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,19)=0  (27,20)=0  (28,27)=2 
correct output grid

TRAIN 1f85a75f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|.x.|xxx at (0,19)
  _01: a rectangle with size (4,4) and color red and mask .xxx|xx.x|xx.x|.xxx at (12,19)
  _01100: a rectangle with size (2,4) and color blue and mask x...|.xxx at (23,10)
  _0110: a point with color blue at (0,2)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,27)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (6,22)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (6,8)
  _011111: a point with color green at (0,4)
  _01111110: a point with color cyan at (0,6)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (6,26)
  _01111111: a point with color green at (0,19)
  _011111111: a point with color cyan at (1,2)
  _0111111111: a point with color green at (1,3)
  _01111111111: a point with color cyan at (1,17)
  _0111111111110: a point with color blue at (2,0)
  _01111111111101: a point with color blue at (2,22)
  _011111111111: a rectangle with size (2,3) and color green and mask Odd Checkboard at (11,10)
  _0111111111111: a point with color green at (2,23)
  _01111111111111: a point with color cyan at (3,2)
diff:   ^.layer_011.pos.i  ^.layer_01100.shape.mask  ^.layer_01.shape.mask
delta: (3,9)=8  (3,12)=1  (3,16)=8  (3,20)=3  (3,23)=3  (3,29)=8  (4,0)=1  (4,16)=3  (4,23)=1  (4,24)=8  (4,26)=8  (4,29)=3  (5,17)=8  (5,29)=8  (6,1)=8  (6,3)=1  (6,29)=3  (7,3)=1  (7,4)=8  (7,18)=3  (7,19)=1  (8,11)=1  (8,16)=8  (8,18)=3  (8,25)=3  (10,5)=1  (10,20)=8  (11,1)=1  (11,2)=8  (11,5)=3  (11,10)=8  (11,17)=8  (12,3)=1  (12,6)=1  (13,2)=1  (13,10)=8  (13,26)=1  (14,8)=1  (15,3)=3  (15,12)=1  (15,17)=3  (15,24)=8  (15,25)=3  (16,0)=1  (16,13)=3  (16,15)=8  (17,10)=1  (17,11)=1  (18,4)=8  (18,9)=3  (18,17)=8  (19,2)=8  (19,8)=3  (19,17)=8  (19,18)=3  (19,22)=3  (19,29)=3  (20,17)=1  (20,19)=3  (21,8)=3  (21,17)=1  (21,25)=1  (22,6)=8  (22,12)=3  (22,14)=1  (22,29)=3  (23,14)=3  (23,16)=3  (23,18)=1  (23,21)=3  (23,26)=8  (24,6)=8  (24,8)=8  (24,17)=8  (24,25)=1  (25,1)=8  (25,12)=8  (25,16)=8  (25,20)=1  (25,23)=8  (25,25)=3  (25,27)=3  (26,2)=1  (26,5)=3  (26,7)=1  (27,5)=3  (27,14)=1  (27,17)=8  (27,19)=3  (27,20)=1  (27,22)=1  (28,16)=3  (28,21)=3  (29,2)=8  (29,7)=8  (29,17)=3  (29,21)=3  (29,29)=3 
! size mismatch, 3x3 instead of 4x4
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|xx.x|xx.x|.xxx at (12,19)
  _01: a rectangle with size (3,3) and color cyan and mask ..x|.x.|xxx at (0,19)
  _01100: a rectangle with size (1,3) and color blue and mask Full at (24,11)
  _0110: a point with color blue at (0,2)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,27)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (6,22)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (6,8)
  _011111: a point with color green at (0,4)
  _01111110: a point with color cyan at (0,6)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (6,26)
  _01111111: a point with color green at (0,19)
  _011111111: a point with color cyan at (1,2)
  _0111111111: a point with color green at (1,3)
  _01111111111: a point with color cyan at (1,17)
  _0111111111110: a point with color blue at (2,0)
  _01111111111101: a point with color blue at (2,22)
  _011111111111: a rectangle with size (2,3) and color green and mask Odd Checkboard at (11,10)
  _0111111111111: a point with color green at (2,23)
  _01111111111111: a point with color cyan at (3,2)
diff:   ^.layer_011.pos.i  ^.layer_01.shape.mask  ^.layer_0.shape.size.j
delta: (3,9)=8  (3,12)=1  (3,16)=8  (3,20)=3  (3,23)=3  (3,29)=8  (4,0)=1  (4,16)=3  (4,23)=1  (4,24)=8  (4,26)=8  (4,29)=3  (5,17)=8  (5,29)=8  (6,1)=8  (6,3)=1  (6,29)=3  (7,3)=1  (7,4)=8  (7,18)=3  (7,19)=1  (8,11)=1  (8,16)=8  (8,18)=3  (8,25)=3  (10,5)=1  (10,20)=8  (11,1)=1  (11,2)=8  (11,5)=3  (11,10)=8  (11,17)=8  (12,3)=1  (12,6)=1  (13,2)=1  (13,10)=8  (13,26)=1  (14,8)=1  (15,3)=3  (15,12)=1  (15,17)=3  (15,24)=8  (15,25)=3  (16,0)=1  (16,13)=3  (16,15)=8  (17,10)=1  (17,11)=1  (18,4)=8  (18,9)=3  (18,17)=8  (19,2)=8  (19,8)=3  (19,17)=8  (19,18)=3  (19,22)=3  (19,29)=3  (20,17)=1  (20,19)=3  (21,8)=3  (21,17)=1  (21,25)=1  (22,6)=8  (22,12)=3  (22,14)=1  (22,29)=3  (23,10)=1  (23,14)=3  (23,16)=3  (23,18)=1  (23,21)=3  (23,26)=8  (24,6)=8  (24,8)=8  (24,17)=8  (24,25)=1  (25,1)=8  (25,12)=8  (25,16)=8  (25,20)=1  (25,23)=8  (25,25)=3  (25,27)=3  (26,2)=1  (26,5)=3  (26,7)=1  (27,5)=3  (27,14)=1  (27,17)=8  (27,19)=3  (27,20)=1  (27,22)=1  (28,16)=3  (28,21)=3  (29,2)=8  (29,7)=8  (29,17)=3  (29,21)=3  (29,29)=3 
correct output grid

TEST 1f85a75f.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 27.9 sec (27.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-364] Checking task 1f876c06.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4961.7 = 4970.7
DL output with Mo: L = 9.0 + 10317.6 = 10326.5
DL input+output M: L = 17.9 + 15279.3 = 15297.2

# learning a model for train pairs
2.000	
1.888	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.781	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.697	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.618	OUT DEF: ^.layer_01.shape.mask=x....|.x...|..x..|...x.|....x
1.562	OUT DEF: ^.size=^.size
1.535	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.513	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.482	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.460	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.438	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.414	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.390	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.363	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.350	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.336	OUT DEF: ^.layer_0111.shape.color=^.layer_00.shape.color
1.323	OUT DEF: ^.layer_01.shape.color=^.layer_01111.shape.color
1.314	IN  DEF: ^.color=black
1.307	IN  DEF: ^.size=(?,?)
1.254	IN  DEF: ^.size.i=10
1.201	IN  DEF: ^.size.j=10
1.194	IN  DEF: ^.layer_00.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ? and color ^.layer_01111.shape.color and mask x....|.x...|..x..|...x.|....x at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ^.layer_00.shape.color and mask ? at ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?

DL input  with Mi: L = 101.0 + 3525.3 = 3626.3
DL output with Mo: L = 112.7 + 4679.2 = 4791.9
DL input+output M: L = 213.7 + 8204.5 = 8418.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (0,2)
  _0: a point with color pink at (0,5)
  _01: a point with color red at (2,0)
  _011: a point with color pink at (4,9)
  _0111: a point with color yellow at (5,3)
  _01111: a point with color yellow at (9,7)
diff: 
delta:
   (90.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (5,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,2)
  _0111: a rectangle with size (3,3) and color red and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
   (129.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (0,2)
  _0: a point with color pink at (0,5)
  _01: a point with color red at (2,0)
  _011: a point with color pink at (4,9)
  _0111: a point with color yellow at (5,3)
  _01111: a point with color yellow at (9,7)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 1f876c06.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a point with color green at (0,7)
  _01: a point with color cyan at (2,6)
  _011: a point with color green at (2,9)
  _0111: a point with color brown at (3,3)
  _01111: a point with color orange at (5,5)
diff: 
delta: (7,1)=8  (9,9)=7#
   (131.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (0,7)
  _01: a rectangle with size (5,5) and color orange and mask x....|.x...|..x..|...x.|....x at (5,5)
  _011: a rectangle with size (6,6) and color cyan and mask .....x|....x.|...x..|..x.x.|.x...x|x..... at (2,1)
  _0111: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (0,0)
diff: 
delta:
   (165.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a point with color green at (0,7)
  _01: a point with color cyan at (2,6)
  _011: a point with color green at (2,9)
  _0111: a point with color brown at (3,3)
  _01111: a point with color orange at (5,5)
diff: 
delta: (7,1)=8  (9,9)=7#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a point with color green at (0,7)
  _01: a point with color cyan at (2,6)
  _011: a point with color green at (2,9)
  _0111: a point with color brown at (3,3)
  _01111: a point with color cyan at (7,1)
diff: 
delta: (5,5)=7# (9,9)=7#
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a point with color green at (0,7)
  _01: a point with color cyan at (2,6)
  _011: a point with color green at (2,9)
  _0111: a point with color orange at (5,5)
  _01111: a point with color brown at (3,3)
diff: 
delta: (7,1)=8  (9,9)=7#
! 18 wrong pixels (generated / expected)

TRAIN 1f876c06.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (0,3)
  _0: a point with color cyan at (0,5)
  _01: a point with color yellow at (2,2)
  _011: a point with color pink at (3,0)
  _0111: a point with color cyan at (4,9)
  _01111: a point with color yellow at (6,6)
diff: 
delta: (5,4)=9# (9,0)=9#
   (131.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (2,2)
  _011: a rectangle with size (5,5) and color brown and mask ....x|...x.|..x..|.x...|x.... at (5,0)
  _0111: a rectangle with size (4,4) and color pink and mask ...x|..x.|.xx.|x..x at (0,0)
diff: 
delta:
   (172.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (0,3)
  _0: a point with color cyan at (0,5)
  _01: a point with color yellow at (2,2)
  _011: a point with color pink at (3,0)
  _0111: a point with color cyan at (4,9)
  _01111: a point with color brown at (5,4)
diff: 
delta: (6,6)=4  (9,0)=9#
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (0,3)
  _0: a point with color cyan at (0,5)
  _01: a point with color yellow at (2,2)
  _011: a point with color pink at (3,0)
  _0111: a point with color cyan at (4,9)
  _01111: a point with color yellow at (6,6)
diff: 
delta: (5,4)=9# (9,0)=9#
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (0,3)
  _0: a point with color cyan at (0,5)
  _01: a point with color yellow at (2,2)
  _011: a point with color pink at (3,0)
  _0111: a point with color brown at (5,4)
  _01111: a point with color cyan at (4,9)
diff: 
delta: (6,6)=4  (9,0)=9#
! 23 wrong pixels (generated / expected)

TRAIN 1f876c06.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (0,6)
  _0: a point with color brown at (0,9)
  _01: a point with color orange at (1,0)
  _011: a point with color green at (3,3)
  _0111: a point with color brown at (3,6)
  _01111: a point with color pink at (4,0)
diff: 
delta: (5,9)=4  (7,3)=6  (7,6)=7# (9,5)=4 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (0,6)
  _0: a point with color brown at (0,9)
  _01: a point with color orange at (1,0)
  _011: a point with color green at (3,3)
  _0111: a point with color brown at (3,6)
  _01111: a point with color yellow at (5,9)
diff: 
delta: (4,0)=6  (7,3)=6  (7,6)=7# (9,5)=4 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (0,6)
  _0: a point with color brown at (0,9)
  _01: a point with color orange at (1,0)
  _011: a point with color green at (3,3)
  _0111: a point with color pink at (4,0)
  _01111: a point with color brown at (3,6)
diff: 
delta: (5,9)=4  (7,3)=6  (7,6)=7# (9,5)=4 
! 27 wrong pixels (generated / expected)

TEST 1f876c06.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.3 sec (24.3 sec/task)
bits-train-error = 4679.2 bits (4679.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-363] Checking task 1fad071e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16886.2 = 16895.2
DL output with Mo: L = 9.0 + 1146.9 = 1155.9
DL input+output M: L = 17.9 + 18033.1 = 18051.1

# learning a model for train pairs
2.000	
1.872	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.789	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.705	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.622	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.538	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.453	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.399	IN  OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
1.369	OUT DEF: ^.size=(?,?)
1.317	OUT DEF: ^.size.i=^.layer_0.shape.size.i - 1
1.148	OUT DEF: ^.size.j=^.layer_0.shape.size.j + 3
1.117	OUT DEF: ^.layer_0.pos=(?,?)
1.083	OUT DEF: ^.layer_0.pos.i=(0)
0.993	OUT DEF: ^.layer_0.pos.j=^.layer_01111.pos.i
0.985	IN  DEF: ^.layer_01.shape.color=blue
0.976	IN  DEF: ^.layer_0111.shape.color=red
0.968	IN  DEF: ^.layer_011111.shape.color=blue
0.946	IN  OBJECT at ^.layer_0111111: a rectangle with size ? and color ? and mask ? at ?
0.933	OUT DEF: ^.color=^.layer_01.shape.color
0.813	OUT DEF: ^.layer_0.shape.color=black
0.806	IN  OBJECT at ^.layer_0111110: a point with color ? at ?
0.804	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i - 1,^.layer_0.shape.size.j + 3) and color ^.layer_01.shape.color and layers
  _0: a point with color black at ((0),^.layer_01111.pos.i)
WHERE (Mi)
a background with size ? and color black and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color blue and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color red and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _0111110: a point with color ? at ?
  _011111: a rectangle with size ? and color blue and mask ? at ?
  _0111111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 154.2 + 7783.6 = 7937.8
DL output with Mo: L = 62.6 + 323.2 = 385.8
DL input+output M: L = 216.8 + 8106.8 = 8323.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,2)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (4,0)
  _0111110: a point with color blue at (0,8)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
  _0111111: a rectangle with size (1,1) and color blue and mask Full at (8,1)
diff: 
delta: (8,8)=1 
   (222.9 bits)
data: a background with size (1,5) and color blue and layers
  _0: a point with color black at (0,4)
diff: 
delta: (0,2)=0  (0,3)=0 
   (32.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,2)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (0,8)
  _0111110: a point with color blue at (4,0)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
  _0111111: a rectangle with size (1,1) and color blue and mask Full at (8,1)
diff: 
delta: (8,8)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,2)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (4,0)
  _0111110: a point with color blue at (0,8)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
  _0111111: a rectangle with size (1,1) and color blue and mask Full at (8,1)
diff: 
delta: (8,8)=1 
! 2 wrong pixels (generated / expected)

TRAIN 1fad071e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _01111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _0111110: a point with color red at (0,3)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
  _0111111: a rectangle with size (1,1) and color red and mask Full at (0,8)
diff: 
delta: (2,3)=2  (3,8)=1  (5,8)=2  (8,1)=1 
   (285.3 bits)
data: a background with size (1,5) and color blue and layers
  _0: a point with color black at (0,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _0111110: a point with color red at (0,3)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
  _0111111: a rectangle with size (1,1) and color red and mask Full at (0,8)
diff: 
delta: (2,3)=2  (3,8)=1  (5,8)=2  (8,1)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _01111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _0111110: a point with color red at (0,3)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
  _0111111: a rectangle with size (1,1) and color red and mask Full at (0,8)
diff: 
delta: (2,3)=2  (3,8)=1  (5,8)=2  (8,1)=1 
correct output grid

TRAIN 1fad071e.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (4,4)
  _0111110: a point with color blue at (2,0)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (7,7)
diff: 
delta: (4,7)=1  (6,4)=2  (8,5)=1 
   (270.1 bits)
data: a background with size (1,5) and color blue and layers
  _0: a point with color black at (0,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (4,4)
  _0111110: a point with color blue at (2,0)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (7,7)
diff: 
delta: (4,7)=1  (6,4)=2  (8,5)=1 
correct output grid

TRAIN 1fad071e.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (3,5)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,1)
  _01111: a rectangle with size (2,2) and color red and mask Full at (6,6)
  _0111110: a point with color blue at (0,8)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,3)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (7,0)
diff: 
delta: (1,3)=1  (6,0)=1 
! 2 wrong pixels (generated / expected)

TEST 1fad071e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.1 sec (7.1 sec/task)
bits-train-error = 323.2 bits (323.2 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-362] Checking task 2013d3e2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8909.8 = 8918.8
DL output with Mo: L = 9.0 + 2079.7 = 2088.7
DL input+output M: L = 17.9 + 10989.5 = 11007.4

# learning a model for train pairs
2.000	
1.831	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.714	OUT DEF: ^.size=^.layer_0.pos
1.648	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.586	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.553	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.509	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
1.474	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.431	OUT DEF: ^.layer_01.shape.color=pink
1.394	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.350	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
1.311	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.267	OUT OBJECT at ^.layer_01111: a point with color ? at ?
1.252	OUT DEF: ^.color=black
1.242	OUT DEF: ^.layer_0.pos=(?,?)
1.215	OUT DEF: ^.layer_0.pos.j=^.layer_00.shape.size.j
1.194	OUT DEF: ^.layer_0.pos.i=^.layer_00.pos.j - ^.layer_00.pos.i
1.184	OUT DEF: ^.layer_01.pos=(?,?)
1.157	OUT DEF: ^.layer_01.pos.i=1
1.136	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j - ^.layer_00.shape.size.j
1.125	OUT DEF: ^.layer_011.pos=(?,?)
1.099	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j
1.077	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i - ^.layer_00.shape.size.i
1.067	OUT DEF: ^.layer_0111.pos=(?,?)
1.039	OUT DEF: ^.layer_0111.pos.j=(0)
1.017	OUT DEF: ^.layer_0111.pos.i=^.layer_00.pos.i - 2
1.007	OUT DEF: ^.layer_01111.pos=(?,?)
0.980	OUT DEF: ^.layer_01111.pos.i=2
0.954	OUT DEF: ^.layer_01111.pos.j=1
0.948	IN  DEF: ^.layer_00.shape.mask=Full
0.943	IN  DEF: ^.layer_0.shape.mask=Full
0.938	IN  DEF: ^.layer_01.shape.mask=Full
0.934	IN  DEF: ^.color=black
0.932	IN  DEF: ^.size=(?,?)
0.912	IN  DEF: ^.size.i=10
0.893	IN  DEF: ^.size.j=10
0.890	IN  DEF: ^.layer_00.pos=(?,?)
0.888	IN  DEF: ^.layer_00.shape.size=(?,?)
0.886	IN  DEF: ^.layer_0.pos=(?,?)
0.875	IN  DEF: ^.layer_0.pos.i=3
0.865	IN  DEF: ^.layer_0.pos.j=3
0.862	IN  OBJECT at ^.layer_000: a point with color ? at ?
0.817	OUT DEF: ^.layer_0111.shape=^.layer_000.shape
0.811	IN  OBJECT at ^.layer_0001: a point with color ? at ?
0.789	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.783	IN  DEF: ^.layer_011.shape.mask=Full
0.780	IN  DEF: ^.color=black
0.777	IN  DEF: ^.layer_000.pos=(?,?)
0.775	IN  DEF: ^.layer_0001.pos=(?,?)
0.773	IN  DEF: ^.layer_0.shape.size=(?,?)
0.770	IN  DEF: ^.layer_01.pos=(?,?)
0.760	IN  DEF: ^.layer_01.pos.j=2
0.757	IN  DEF: ^.layer_01.shape.size=(?,?)
0.755	IN  DEF: ^.layer_011.pos=(?,?)
0.752	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.pos and color black and layers
  _0: a point with color ^.layer_01.shape.color at (^.layer_00.pos.j - ^.layer_00.pos.i,^.layer_00.shape.size.j)
  _01: a point with color pink at (1,^.layer_0.pos.j - ^.layer_00.shape.size.j)
  _011: a point with color ^.layer_0.shape.color at (^.layer_0.pos.i - ^.layer_00.shape.size.i,^.layer_01.pos.j)
  _0111: ^.layer_000.shape at (^.layer_00.pos.i - 2,(0))
  _01111: a point with color ? at (2,1)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _000: a point with color ? at (?,?)
  _0001: a point with color ? at (?,?)
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (3,3)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,2)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 169.4 + 4673.9 = 4843.3
DL output with Mo: L = 170.3 + 267.1 = 437.5
DL input+output M: L = 339.7 + 4941.0 = 5280.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _000: a point with color orange at (2,4)
  _0001: a point with color pink at (3,3)
  _00: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (2,6) and color orange and mask Full at (4,2)
  _011: a rectangle with size (6,2) and color orange and mask Full at (2,4)
diff: 
delta: (3,6)=6  (6,3)=6  (6,6)=6 
   (175.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (0,2)
  _01: a point with color pink at (1,1)
  _011: a point with color cyan at (1,2)
  _0111: a point with color orange at (2,0)
  _01111: a point with color cyan at (2,1)
diff: 
delta: (2,2)=4 
   (22.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _000: a point with color orange at (2,4)
  _0001: a point with color orange at (2,5)
  _00: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (2,6) and color orange and mask Full at (4,2)
  _011: a rectangle with size (1,2) and color orange and mask Full at (7,4)
diff: 
delta: (3,3)=6  (3,6)=6  (6,3)=6  (6,6)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _000: a point with color orange at (2,4)
  _0001: a point with color orange at (2,5)
  _00: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (1,2) and color orange and mask Full at (7,4)
  _011: a rectangle with size (2,6) and color orange and mask Full at (4,2)
diff:   ^.layer_01.pos.j
delta: (3,3)=6  (3,6)=6  (6,3)=6  (6,6)=6 
! 3 wrong pixels (generated / expected)

TRAIN 2013d3e2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _000: a point with color blue at (1,1)
  _0001: a point with color blue at (1,6)
  _00: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color grey and mask Full at (3,2)
diff: 
delta: (2,4)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
   (292.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color red at (2,2)
  _0111: a point with color blue at (0,0)
  _01111: a point with color grey at (2,1)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _000: a point with color blue at (1,1)
  _0001: a point with color blue at (1,6)
  _00: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color grey and mask Full at (3,2)
diff: 
delta: (2,4)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _000: a point with color blue at (1,1)
  _0001: a point with color blue at (1,6)
  _00: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _0: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color grey and mask Full at (3,2)
diff:   ^.layer_0.pos.i
delta: (2,4)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
! size mismatch, 2x3 instead of 3x3

TRAIN 2013d3e2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _000: a point with color cyan at (2,5)
  _0001: a point with color cyan at (3,5)
  _00: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,6)
diff: 
delta: (3,6)=4  (4,6)=4  (5,3)=4  (6,3)=4  (6,4)=8  (6,5)=4  (6,6)=4  (7,4)=8 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _000: a point with color cyan at (2,5)
  _0001: a point with color cyan at (3,5)
  _00: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (5,6)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
diff:   ^.layer_01.pos.j
delta: (3,6)=4  (4,6)=4  (5,3)=4  (6,3)=4  (6,4)=8  (6,5)=4  (6,6)=4  (7,4)=8 
! 5 wrong pixels (generated / expected)

TEST 2013d3e2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.2 sec (20.2 sec/task)
bits-train-error = 267.1 bits (267.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-361] Checking task 2204b7a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14886.2 = 14895.2
DL output with Mo: L = 9.0 + 14886.2 = 14895.2
DL input+output M: L = 17.9 + 29772.4 = 29790.3

# learning a model for train pairs
2.000	
1.679	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.354	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.033	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.708	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.646	OUT DEF: ^.layer_0=^.layer_0
0.585	OUT DEF: ^.layer_01=^.layer_01
0.546	OUT DEF: ^.size=^.size
0.538	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.529	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.521	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.511	OUT DEF: ^.layer_0111.shape.color=^.layer_0.shape.color
0.502	OUT OBJECT at ^.layer_01111: a point with color ? at ?
0.493	OUT DEF: ^.layer_01111.shape.color=^.layer_01.shape.color
0.485	IN  OBJECT at ^.layer_010: a point with color ? at ?
0.464	OUT DEF: ^.layer_011.pos=^.layer_010.pos
0.455	IN  DEF: ^.layer_010.shape.color=green
0.447	IN  OBJECT at ^.layer_0101: a point with color ? at ?
0.438	IN  DEF: ^.layer_0101.shape.color=green
0.429	IN  OBJECT at ^.layer_01011: a point with color ? at ?
0.407	OUT DEF: ^.layer_0111.pos=^.layer_01011.pos
0.398	IN  DEF: ^.layer_01011.shape.color=green
0.393	IN  DEF: ^.layer_0.shape.mask=Full
0.389	IN  DEF: ^.layer_01.shape.mask=Full
0.386	OUT DEF: ^.color=black
0.383	IN  DEF: ^.color=black
0.380	IN  DEF: ^.size=(?,?)
0.363	IN  DEF: ^.size.i=10
0.345	IN  DEF: ^.size.j=10
0.343	OUT DEF: ^.layer_01111.pos=(?,?)
0.334	OUT DEF: ^.layer_01111.pos.i=^.layer_01011.pos.j - 1
0.332	IN  DEF: ^.layer_0101.pos=(?,?)
0.329	IN  DEF: ^.layer_01011.pos=(?,?)
0.327	IN  DEF: ^.layer_01.pos=(?,?)
0.325	IN  DEF: ^.layer_0.pos=(?,?)
0.315	IN  DEF: ^.layer_0.pos.i=(0)
0.306	IN  DEF: ^.layer_0.pos.j=(0)
0.304	IN  DEF: ^.layer_0.shape.size=(?,?)
0.301	IN  DEF: ^.layer_010.pos=(?,?)
0.299	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a point with color ^.layer_0.shape.color at ^.layer_010.pos
  _0111: a point with color ^.layer_0.shape.color at ^.layer_01011.pos
  _01111: a point with color ^.layer_01.shape.color at (^.layer_01011.pos.j - 1,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at ((0),(0))
  _010: a point with color green at (?,?)
  _0101: a point with color green at (?,?)
  _01011: a point with color green at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 133.4 + 3087.0 = 3220.4
DL output with Mo: L = 77.9 + 1155.9 = 1233.8
DL input+output M: L = 211.3 + 4242.9 = 4454.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _010: a point with color green at (4,4)
  _0101: a point with color green at (1,6)
  _01011: a point with color green at (6,2)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
diff: 
delta:
   (69.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color blue at (4,4)
  _0111: a point with color blue at (6,2)
  _01111: a point with color red at (1,6)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _010: a point with color green at (1,6)
  _0101: a point with color green at (4,4)
  _01011: a point with color green at (6,2)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _010: a point with color green at (1,6)
  _0101: a point with color green at (6,2)
  _01011: a point with color green at (4,4)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _010: a point with color green at (4,4)
  _0101: a point with color green at (1,6)
  _01011: a point with color green at (6,2)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _010: a point with color green at (2,1)
  _0101: a point with color green at (3,3)
  _01011: a point with color green at (2,7)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
diff: 
delta: (6,4)=3  (7,8)=3 
   (110.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color yellow at (2,1)
  _0111: a point with color yellow at (2,7)
  _01111: a point with color orange at (6,4)
diff: 
delta: (3,3)=4  (7,8)=7#
   (45.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _010: a point with color green at (2,1)
  _0101: a point with color green at (2,7)
  _01011: a point with color green at (3,3)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
diff: 
delta: (6,4)=3  (7,8)=3 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _010: a point with color green at (2,1)
  _0101: a point with color green at (2,7)
  _01011: a point with color green at (6,4)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
diff: 
delta: (3,3)=3  (7,8)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _010: a point with color green at (2,1)
  _0101: a point with color green at (3,3)
  _01011: a point with color green at (2,7)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
diff: 
delta: (6,4)=3  (7,8)=3 
! 4 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _010: a point with color green at (2,4)
  _0101: a point with color green at (3,1)
  _01011: a point with color green at (3,7)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
   (129.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color cyan at (2,4)
  _0111: a point with color cyan at (3,7)
  _01111: a point with color brown at (6,1)
diff: 
delta: (3,1)=8  (6,6)=9# (7,3)=9#
   (65.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _010: a point with color green at (2,4)
  _0101: a point with color green at (3,1)
  _01011: a point with color green at (3,7)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _010: a point with color green at (2,4)
  _0101: a point with color green at (3,1)
  _01011: a point with color green at (6,1)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
diff: 
delta: (3,7)=3  (6,6)=3  (7,3)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _010: a point with color green at (2,4)
  _0101: a point with color green at (3,7)
  _01011: a point with color green at (3,1)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _010: a point with color green at (0,1)
  _0101: a point with color green at (1,5)
  _01011: a point with color green at (1,8)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
diff: 
delta: (3,3)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _010: a point with color green at (0,1)
  _0101: a point with color green at (1,5)
  _01011: a point with color green at (3,3)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
diff: 
delta: (1,8)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _010: a point with color green at (0,1)
  _0101: a point with color green at (1,8)
  _01011: a point with color green at (1,5)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
diff: 
delta: (3,3)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 8 wrong pixels (generated / expected)

TEST 2204b7a8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 13.7 sec (13.7 sec/task)
bits-train-error = 1155.9 bits (1155.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-360] Checking task 22168020.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9172.1 = 9181.0
DL output with Mo: L = 9.0 + 17164.9 = 17173.9
DL input+output M: L = 17.9 + 26337.0 = 26354.9

# learning a model for train pairs
2.000	
1.476	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.116	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.884	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.693	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.660	OUT DEF: ^.size=^.size
0.631	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.613	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.594	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.586	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.578	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.573	IN  DEF: ^.color=black
0.569	IN  DEF: ^.size=(?,?)
0.541	IN  DEF: ^.size.i=10
0.512	IN  DEF: ^.size.j=10
0.508	IN  DEF: ^.layer_0.pos=(?,?)
0.504	IN  DEF: ^.layer_0.shape.size=(?,?)
0.500	IN  DEF: ^.layer_01.pos=(?,?)
0.497	IN  DEF: ^.layer_01.shape.size=(?,?)
0.494	OUT DEF: ^.color=black
0.492	OUT DEF: ^.layer_0.shape.size=(?,?)
0.483	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.6 + 3298.7 = 3379.3
DL output with Mo: L = 49.7 + 1929.2 = 1978.9
DL input+output M: L = 130.3 + 5227.9 = 5358.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,8) and color green and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (1,1)
diff: 
delta:
   (93.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,8) and color green and mask xxxxxxxx|.xxxxxx.|..xxxx..|...xx...|...xx... at (1,1)
diff: 
delta:
   (53.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,8) and color green and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (1,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,8)
  _01: a rectangle with size (5,8) and color green and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (1,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 22168020.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
diff: 
delta:
   (109.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask xxxxxx|.xxxx.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (4,6) and color yellow and mask xxxxxx|.xxxx.|..xx..|..xx.. at (6,4)
diff: 
delta:
   (61.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
  _01: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (8,6)
diff: 
delta: (6,4)=4  (6,9)=4  (7,5)=4  (7,8)=4 
! 26 wrong pixels (generated / expected)

TRAIN 22168020.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
  _01: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
diff: 
delta:
   (127.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask xxxxxx|.xxxx.|..xx..|..xx.. at (0,0)
  _01: a rectangle with size (5,8) and color cyan and mask xxxxxxxx|.xxxxxx.|..xxxx..|...xx...|...xx... at (5,1)
diff: 
delta:
   (77.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
  _01: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (2,2) and color pink and mask Full at (2,2)
diff: 
delta: (0,0)=6  (0,5)=6  (1,1)=6  (1,4)=6 
! 36 wrong pixels (generated / expected)

TRAIN 22168020.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
  _01: a rectangle with size (4,6) and color green and mask x....x|.x..x.|..xx..|..xx.. at (6,1)
diff: 
delta: (1,0)=4  (1,3)=4  (2,1)=4  (2,2)=4  (3,1)=4  (3,2)=4 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask x....x|.x..x.|..xx..|..xx.. at (6,1)
  _01: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
diff: 
delta: (1,0)=4  (1,3)=4  (2,1)=4  (2,2)=4  (3,1)=4  (3,2)=4 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
  _01: a rectangle with size (3,4) and color yellow and mask x..x|.xx.|.xx. at (1,0)
diff: 
delta: (6,1)=3  (6,6)=3  (7,2)=3  (7,5)=3  (8,3)=3  (8,4)=3  (9,3)=3  (9,4)=3 
! 34 wrong pixels (generated / expected)

TEST 22168020.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 1929.2 bits (1929.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-359] Checking task 22233c11.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3408.5 = 3417.5
DL output with Mo: L = 9.0 + 5722.6 = 5731.6
DL input+output M: L = 17.9 + 9131.1 = 9149.1

# learning a model for train pairs
2.000	
1.638	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.292	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.191	OUT DEF: ^.size=^.size
1.100	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.044	OUT DEF: ^.layer_0=^.layer_0
1.003	IN  DEF: ^.layer_0.shape.color=green
0.980	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.956	OUT DEF: ^.layer_011.shape.color=cyan
0.942	IN  DEF: ^.color=black
0.932	IN  DEF: ^.size=(?,?)
0.855	IN  DEF: ^.size.i=10
0.778	IN  DEF: ^.size.j=10
0.768	IN  DEF: ^.layer_0.pos=(?,?)
0.727	IN  DEF: ^.layer_0.pos.i=3
0.717	IN  DEF: ^.layer_0.shape.size=(?,?)
0.709	OUT DEF: ^.color=black
0.703	OUT DEF: ^.layer_01.pos=(?,?)
0.697	OUT DEF: ^.layer_01.shape.size=(?,?)
0.691	OUT DEF: ^.layer_011.pos=(?,?)
0.667	OUT DEF: ^.layer_011.pos.i=2
0.662	OUT DEF: ^.layer_01.shape.color=cyan
0.640	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i + ^.layer_0.shape.size.i
0.628	OUT DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color cyan and mask Full at (^.layer_0.pos.i + ^.layer_0.shape.size.i,?)
  _011: a point with color cyan at (2,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (3,?)

DL input  with Mi: L = 54.9 + 1171.7 = 1226.6
DL output with Mo: L = 71.0 + 1469.3 = 1540.3
DL input+output M: L = 125.9 + 2641.0 = 2766.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
diff: 
delta: (6,7)=3  (7,6)=3 
   (60.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (5,1)
  _011: a point with color cyan at (2,4)
diff: 
delta: (5,5)=8  (6,7)=3  (7,6)=3  (8,8)=8 
   (94.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
diff: 
delta: (6,7)=3  (7,6)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (6,6)
diff:   ^.layer_0.pos.i
delta: (3,2)=3  (4,3)=3 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (3,2)
diff: 
delta: (4,3)=3  (6,7)=3  (7,6)=3 
! 10 wrong pixels (generated / expected)

TRAIN 22233c11.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
diff: 
delta:
   (36.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,5)
  _011: a point with color cyan at (2,0)
diff: 
delta: (1,0)=8 
   (38.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,3)
diff: 
delta: (5,1)=3  (5,2)=3  (6,1)=3  (6,2)=3 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (5,1)
diff:   ^.layer_0.pos.i
delta: (3,3)=3  (3,4)=3  (4,3)=3  (4,4)=3 
! 13 wrong pixels (generated / expected)

TRAIN 22233c11.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
diff: 
delta:
   (19.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (5,2)
  _011: a point with color cyan at (2,5)
diff: 
delta:
   (13.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (3,3)
diff: 
delta: (4,4)=3 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (4,4)
diff:   ^.layer_0.pos.i
delta: (3,3)=3 
! 8 wrong pixels (generated / expected)

TRAIN 22233c11.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask ...xxx|...xxx|...xxx|xxx...|xxx...|xxx... at (2,3)
diff:   ^.layer_0.pos.i
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,6)
diff:   ^.layer_0.pos.i
delta: (5,3)=3  (5,4)=3  (5,5)=3  (6,3)=3  (6,4)=3  (6,5)=3  (7,3)=3  (7,4)=3  (7,5)=3 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (5,3)
diff:   ^.layer_0.pos.i
delta: (2,6)=3  (2,7)=3  (2,8)=3  (3,6)=3  (3,7)=3  (3,8)=3  (4,6)=3  (4,7)=3  (4,8)=3 
! 22 wrong pixels (generated / expected)

TEST 22233c11.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 1469.3 bits (1469.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-358] Checking task 2281f1f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4767.9 = 4776.9
DL output with Mo: L = 9.0 + 12027.1 = 12036.0
DL input+output M: L = 17.9 + 16795.0 = 16812.9

# learning a model for train pairs
2.000	
1.926	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.852	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.784	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.736	OUT DEF: ^.size=^.size
1.707	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.684	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.657	OUT DEF: ^.layer_01=^.layer_0
1.632	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.611	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size
1.582	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.561	OUT DEF: ^.layer_0111.shape.size=^.layer_0.shape.size
1.540	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
1.514	OUT DEF: ^.layer_00=^.layer_00
1.493	OUT OBJECT at ^.layer_01111: ^.layer_00.shape at ?
1.472	OUT OBJECT at ^.layer_011111: ^.layer_00.shape at ?
1.466	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.460	OUT DEF: ^.layer_011.shape.mask=^.layer_0.shape.mask
1.454	OUT DEF: ^.layer_0111.shape.mask=^.layer_0.shape.mask
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00
  _0: a rectangle with size ? and color ? and mask ^.layer_0.shape.mask at ?
  _01: ^.layer_0
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ?
  _0111: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ?
  _01111: ^.layer_00.shape at ?
  _011111: ^.layer_00.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a point with color ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 53.5 + 4137.8 = 4191.3
DL output with Mo: L = 88.5 + 6856.2 = 6944.7
DL input+output M: L = 142.0 + 10994.0 = 11136.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,0)
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,3)
  _01: a point with color grey at (0,7)
diff: 
delta: (3,9)=5# (7,9)=5#
   (115.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,0)
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,7)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _01111: a point with color grey at (3,9)
  _011111: a point with color grey at (7,9)
diff: 
delta: (3,7)=2  (7,0)=2  (7,3)=2  (7,7)=2 
   (154.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,0)
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,3)
  _01: a point with color grey at (0,7)
diff: 
delta: (3,9)=5# (7,9)=5#
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,0)
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,7)
  _01: a point with color grey at (0,3)
diff: 
delta: (3,9)=5# (7,9)=5#
! 12 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a point with color grey at (0,7)
diff: 
delta: (2,9)=5# (4,9)=5# (7,9)=5#
   (137.5 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _011: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _0111: a rectangle with size (1,2) and color red and mask Full at (7,3)
  _01111: a point with color grey at (0,7)
  _011111: a point with color grey at (2,9)
diff: 
delta: (2,1)=2  (2,7)=2  (4,1)=2  (4,7)=2  (4,9)=5# (7,1)=2  (7,7)=2  (7,9)=5#
   (233.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a point with color grey at (0,7)
diff: 
delta: (2,9)=5# (4,9)=5# (7,9)=5#
! 19 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (2,9)
  _0: a rectangle with size (1,7) and color grey and mask Full at (0,2)
  _01: a point with color grey at (3,9)
diff: 
delta: (0,4)=0  (0,6)=0  (6,9)=5# (8,9)=5#
   (160.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (2,9)
  _0: a rectangle with size (2,7) and color red and mask Full at (2,2)
  _01: a rectangle with size (1,7) and color grey and mask Full at (0,2)
  _011: a rectangle with size (1,7) and color red and mask Full at (6,2)
  _0111: a rectangle with size (1,7) and color red and mask Full at (8,2)
  _01111: a point with color grey at (3,9)
  _011111: a point with color grey at (6,9)
diff: 
delta: (0,4)=0  (0,6)=0  (2,4)=0  (2,6)=0  (3,4)=0  (3,6)=0  (6,4)=0  (6,6)=0  (8,4)=0  (8,6)=0  (8,9)=5#
   (297.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (2,9)
  _0: a rectangle with size (1,7) and color grey and mask Full at (0,2)
  _01: a point with color grey at (3,9)
diff: 
delta: (0,4)=0  (0,6)=0  (6,9)=5# (8,9)=5#
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,2)
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,7)
  _01: a point with color grey at (0,3)
diff: 
delta: (0,5)=5# (2,9)=5# (3,9)=5# (6,9)=5# (8,9)=5#
! 30 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,0)
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,2)
  _01: a point with color grey at (0,6)
diff: 
delta: (0,8)=5# (2,9)=5# (3,9)=5# (5,9)=5# (7,9)=5# (9,9)=5#
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (0,0)
  _0: a rectangle with size (2,1) and color grey and mask Full at (2,9)
  _01: a point with color grey at (0,2)
diff: 
delta: (0,3)=5# (0,6)=5# (0,8)=5# (5,9)=5# (7,9)=5# (9,9)=5#
! 35 wrong pixels (generated / expected)

TEST 2281f1f4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 6856.2 bits (6856.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-357] Checking task 228f6490.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 29876.0 = 29884.9
DL output with Mo: L = 9.0 + 29876.0 = 29884.9
DL input+output M: L = 17.9 + 59752.0 = 59769.9

# learning a model for train pairs
2.000	
1.672	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.361	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.066	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.814	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.713	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.636	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.594	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.554	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.525	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.499	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.468	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_00.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_0111.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 8700.8 = 8804.6
DL output with Mo: L = 96.5 + 5094.0 = 5190.4
DL input+output M: L = 200.3 + 13794.7 = 13995.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _0: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (8,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (2,7)
diff: 
delta: (0,0)=7# (5,8)=7# (7,4)=7#
   (265.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _01111: a rectangle with size (1,2) and color pink and mask Full at (8,7)
diff: 
delta: (5,8)=7# (7,4)=7#
   (170.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _0: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (8,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (2,7)
diff: 
delta: (0,0)=7# (5,8)=7# (7,4)=7#
! 43 wrong pixels (generated / expected)

TRAIN 228f6490.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _0: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _01: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _011: a rectangle with size (2,3) and color green and mask xxx|..x at (5,0)
  _0111: a rectangle with size (2,4) and color brown and mask Full at (1,6)
diff: 
delta: (4,7)=6  (4,9)=6  (5,6)=6  (5,7)=6 
   (281.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _0: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,3) and color green and mask Full at (1,1)
  _0111: a rectangle with size (2,2) and color pink and mask .x|xx at (4,6)
  _01111: a rectangle with size (2,4) and color brown and mask Full at (7,4)
diff: 
delta: (4,9)=6 
   (162.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _0: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _01: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _011: a rectangle with size (2,3) and color green and mask xxx|..x at (5,0)
  _0111: a rectangle with size (2,4) and color brown and mask Full at (1,6)
diff: 
delta: (4,7)=6  (4,9)=6  (5,6)=6  (5,7)=6 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _0: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _01: a rectangle with size (2,4) and color brown and mask Full at (1,6)
  _011: a rectangle with size (2,2) and color pink and mask Full at (8,0)
  _0111: a rectangle with size (2,3) and color green and mask xxx|..x at (5,0)
diff: 
delta: (4,7)=6  (4,9)=6  (5,6)=6  (5,7)=6 
! 39 wrong pixels (generated / expected)

TRAIN 228f6490.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _0: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _01: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _0111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
diff: 
delta: (4,5)=4  (5,7)=4  (5,8)=4  (7,9)=4 
   (323.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _0: a rectangle with size (2,3) and color red and mask Full at (7,1)
  _01: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _011: a rectangle with size (2,4) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
diff: 
delta: (4,5)=4  (7,9)=4 
   (177.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _0: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _01: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _0111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
diff: 
delta: (4,5)=4  (5,7)=4  (5,8)=4  (7,9)=4 
! 67 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _01: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _0111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
diff: 
delta: (4,5)=4  (5,7)=4  (5,8)=4  (7,9)=4 
! 67 wrong pixels (generated / expected)

TRAIN 228f6490.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x...x|xx.xx|xxxxx|xxxxx at (0,2)
  _0: a rectangle with size (3,7) and color grey and mask xxxxxxx|x...xxx|xxxxxxx at (7,3)
  _01: a rectangle with size (2,3) and color orange and mask xxx|.x. at (5,0)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,0)
diff: 
delta: (0,9)=2  (1,0)=2  (4,9)=2  (5,5)=2  (5,7)=2 
! 46 wrong pixels (generated / expected)

TEST 228f6490.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.5 sec (25.5 sec/task)
bits-train-error = 5094.0 bits (5094.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-356] Checking task 22eb0ac0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5730.6 = 5739.6
DL output with Mo: L = 9.0 + 10310.3 = 10319.2
DL input+output M: L = 17.9 + 16040.9 = 16058.8

# learning a model for train pairs
2.000	
1.695	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.548	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.492	OUT DEF: ^.size=^.size
1.474	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.443	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.419	IN  DEF: ^.layer_0.shape.color=cyan
1.400	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.375	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
1.351	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.319	OUT DEF: ^.layer_011=^.layer_01
1.300	IN  OBJECT at ^.layer_010: a point with color ? at ?
1.281	IN  OBJECT at ^.layer_0101: a point with color ? at ?
1.256	OUT OBJECT at ^.layer_01111: ^.layer_0101.shape at ?
1.225	OUT DEF: ^.layer_01111=^.layer_0101
1.211	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.199	OUT OBJECT at ^.layer_011111: a point with color ? at ?
1.185	OUT OBJECT at ^.layer_0111111: a point with color ? at ?
1.177	IN  DEF: ^.color=black
1.170	OUT DEF: ^.layer_0.shape.mask=Full
1.164	OUT DEF: ^.layer_01.shape.mask=Full
1.157	IN  DEF: ^.size=(?,?)
1.112	IN  DEF: ^.size.i=10
1.066	IN  DEF: ^.size.j=10
1.060	IN  DEF: ^.layer_0.pos=(?,?)
1.054	IN  DEF: ^.layer_010.pos=(?,?)
1.029	IN  DEF: ^.layer_010.pos.i=1
1.023	IN  DEF: ^.layer_0101.pos=(?,?)
0.999	IN  DEF: ^.layer_0101.pos.i=3
0.975	IN  DEF: ^.layer_0101.pos.j=9
0.963	IN  OBJECT at ^.layer_01011: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size ? and color ? and mask Full at ?
  _011: ^.layer_01
  _0111: ^.layer_01.shape at ?
  _01111: ^.layer_0101
  _011111: a point with color ? at ?
  _0111111: a point with color ? at ?
WHERE (Mi)
a background with size (10,10) and color ? and layers
  _0: a point with color cyan at (?,?)
  _010: a point with color ? at (1,?)
  _0101: a point with color ? at (3,9)
  _01011: a point with color ? at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 105.7 + 3865.9 = 3971.7
DL output with Mo: L = 90.9 + 2710.1 = 2800.9
DL input+output M: L = 196.6 + 6576.0 = 6772.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,0)
  _010: a point with color brown at (1,0)
  _0101: a point with color brown at (3,9)
  _01011: a point with color yellow at (5,0)
  _01: a point with color pink at (1,9)
diff: 
delta: (5,9)=4  (7,0)=6  (7,9)=8 
   (115.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (3,0)
  _01: a rectangle with size (1,10) and color yellow and mask Full at (5,0)
  _011: a point with color pink at (1,9)
  _0111: a point with color pink at (7,0)
  _01111: a point with color brown at (3,9)
  _011111: a point with color brown at (1,0)
  _0111111: a point with color cyan at (7,9)
diff: 
delta:
   (76.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,0)
  _010: a point with color brown at (1,0)
  _0101: a point with color brown at (3,9)
  _01011: a point with color pink at (1,9)
  _01: a point with color yellow at (5,0)
diff: 
delta: (5,9)=4  (7,0)=6  (7,9)=8 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (1,0)
  _010: a point with color pink at (1,9)
  _0101: a point with color brown at (3,9)
  _01011: a point with color cyan at (3,0)
  _01: a point with color yellow at (5,0)
diff:   ^.layer_0.shape.color
delta: (5,9)=4  (7,0)=6  (7,9)=8 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (1,0)
  _010: a point with color pink at (1,9)
  _0101: a point with color brown at (3,9)
  _01011: a point with color cyan at (3,0)
  _01: a point with color yellow at (5,9)
diff:   ^.layer_0.shape.color
delta: (5,0)=4  (7,0)=6  (7,9)=8 
! 18 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _010: a point with color cyan at (1,9)
  _0101: a point with color red at (3,9)
  _01011: a point with color yellow at (3,0)
  _01: a point with color green at (5,0)
diff: 
delta: (5,9)=4  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
   (154.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (1,10) and color blue and mask Full at (7,0)
  _011: a point with color green at (5,0)
  _0111: a point with color green at (9,9)
  _01111: a point with color red at (3,9)
  _011111: a point with color yellow at (3,0)
  _0111111: a point with color yellow at (5,9)
diff: 
delta: (9,0)=2 
   (103.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _010: a point with color cyan at (1,9)
  _0101: a point with color red at (3,9)
  _01011: a point with color yellow at (3,0)
  _01: a point with color green at (5,0)
diff: 
delta: (5,9)=4  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _010: a point with color cyan at (1,9)
  _0101: a point with color red at (3,9)
  _01011: a point with color yellow at (3,0)
  _01: a point with color yellow at (5,9)
diff: 
delta: (5,0)=3  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,0)
  _010: a point with color cyan at (1,9)
  _0101: a point with color red at (3,9)
  _01011: a point with color green at (5,0)
  _01: a point with color yellow at (3,0)
diff: 
delta: (5,9)=4  (7,0)=1  (7,9)=1  (9,0)=2  (9,9)=3 
! 26 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,9)
  _010: a point with color red at (1,0)
  _0101: a point with color yellow at (3,9)
  _01011: a point with color green at (3,0)
  _01: a point with color green at (5,9)
diff: 
delta: (5,0)=5# (7,0)=8  (7,9)=2 
   (115.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,9)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _011: a point with color green at (5,9)
  _0111: a point with color green at (3,0)
  _01111: a point with color yellow at (3,9)
  _011111: a point with color grey at (5,0)
  _0111111: a point with color cyan at (7,0)
diff: 
delta: (7,9)=2 
   (90.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,9)
  _010: a point with color red at (1,0)
  _0101: a point with color yellow at (3,9)
  _01011: a point with color green at (3,0)
  _01: a point with color grey at (5,0)
diff: 
delta: (5,9)=3  (7,0)=8  (7,9)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,9)
  _010: a point with color red at (1,0)
  _0101: a point with color yellow at (3,9)
  _01011: a point with color green at (3,0)
  _01: a point with color green at (5,9)
diff: 
delta: (5,0)=5# (7,0)=8  (7,9)=2 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,9)
  _010: a point with color red at (1,0)
  _0101: a point with color yellow at (3,9)
  _01011: a point with color grey at (5,0)
  _01: a point with color green at (3,0)
diff: 
delta: (5,9)=3  (7,0)=8  (7,9)=2 
! 9 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,0)
  _010: a point with color red at (1,9)
  _0101: a point with color green at (3,9)
  _01011: a point with color green at (3,0)
  _01: a point with color red at (5,0)
diff:   ^.layer_0.shape.color
delta: (5,9)=9# (7,0)=6  (7,9)=6  (9,0)=9# (9,9)=4 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,0)
  _010: a point with color red at (1,9)
  _0101: a point with color green at (3,9)
  _01011: a point with color green at (3,0)
  _01: a point with color brown at (5,9)
diff:   ^.layer_0.shape.color
delta: (5,0)=2  (7,0)=6  (7,9)=6  (9,0)=9# (9,9)=4 
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,0)
  _010: a point with color red at (1,9)
  _0101: a point with color green at (3,9)
  _01011: a point with color red at (5,0)
  _01: a point with color green at (3,0)
diff:   ^.layer_0.shape.color
delta: (5,9)=9# (7,0)=6  (7,9)=6  (9,0)=9# (9,9)=4 
! 28 wrong pixels (generated / expected)

TEST 22eb0ac0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 22.5 sec (22.5 sec/task)
bits-train-error = 2710.1 bits (2710.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-355] Checking task 234bbc79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8215.3 = 8224.3
DL output with Mo: L = 9.0 + 8040.4 = 8049.4
DL input+output M: L = 17.9 + 16255.7 = 16273.7

# learning a model for train pairs
2.000	
1.743	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.585	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.469	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.403	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.340	OUT OBJECT at ^.layer_010: ^.layer_01.shape at ?
1.309	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.266	OUT DEF: ^.layer_010=^.layer_01
1.243	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.224	IN  OBJECT at ^.layer_001: a point with color ? at ?
1.213	IN  DEF: ^.layer_01.shape.mask=Full
1.190	IN  DEF: ^.layer_00.shape.color=grey
1.183	OUT DEF: ^.color=black
1.175	IN  DEF: ^.color=black
1.170	OUT DEF: ^.size=(?,?)
1.142	OUT DEF: ^.size.i=^.size.i
1.136	OUT DEF: ^.layer_0.pos=(?,?)
1.122	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
1.116	OUT DEF: ^.layer_0.shape.size=(?,?)
1.099	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.shape.size.j - ^.layer_00.pos.i
1.093	OUT DEF: ^.layer_01.pos=(?,?)
1.087	OUT DEF: ^.layer_01.shape.size=(?,?)
1.065	OUT DEF: ^.layer_01.shape.size.j=^.layer_00.pos.j - ^.layer_00.pos.i
1.059	IN  DEF: ^.size=(?,?)
1.032	IN  DEF: ^.size.i=3
1.026	IN  DEF: ^.layer_00.pos=(?,?)
1.021	IN  DEF: ^.layer_001.pos=(?,?)
1.006	IN  DEF: ^.layer_001.pos.i=0
1.000	IN  DEF: ^.layer_0.pos=(?,?)
0.995	IN  DEF: ^.layer_0.shape.size=(?,?)
0.989	IN  DEF: ^.layer_01.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,?) and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.j - ^.layer_00.pos.i,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_00.pos.j - ^.layer_00.pos.i) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (3,?) and color black and layers
  _00: a point with color grey at (?,?)
  _001: a point with color ? at (0,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size ? and color ? and mask Full at (?,?)

DL input  with Mi: L = 100.1 + 5464.7 = 5564.8
DL output with Mo: L = 108.3 + 2404.0 = 2512.3
DL input+output M: L = 208.4 + 7868.7 = 8077.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,9) and color black and layers
  _00: a point with color grey at (1,3)
  _001: a point with color grey at (0,1)
  _0: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
diff: 
delta: (1,4)=1  (1,6)=5# (2,4)=5#
   (121.2 bits)
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,4)
  _010: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color blue and mask xx|.x at (0,2)
diff: 
delta: (0,1)=2 
   (61.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color black and layers
  _00: a point with color grey at (0,1)
  _001: a point with color grey at (1,3)
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff:   ^.layer_001.pos.i
delta: (1,4)=1  (1,6)=5# (2,4)=5#
! size mismatch, 3x10 instead of 3x7
>> Trial 2
data: a background with size (3,9) and color black and layers
  _00: a point with color grey at (0,1)
  _001: a point with color grey at (1,3)
  _0: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
diff:   ^.layer_001.pos.i
delta: (1,4)=1  (1,6)=5# (2,4)=5#
! size mismatch, 3x10 instead of 3x7

TRAIN 234bbc79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,3)
  _001: a point with color blue at (0,4)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
diff: 
delta: (0,5)=5# (2,1)=5# (2,7)=5#
   (133.8 bits)
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask .xxx|xx.. at (1,5)
  _010: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,2)
diff: 
delta: (2,1)=2 
   (66.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,3)
  _001: a point with color blue at (0,4)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
diff: 
delta: (0,5)=5# (2,1)=5# (2,7)=5#
! size mismatch, 3x10 instead of 3x9
>> Trial 2
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,5)
  _001: a point with color grey at (0,3)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
diff: 
delta: (0,4)=1  (2,1)=5# (2,7)=5#
! size mismatch, 3x10 instead of 3x9

TRAIN 234bbc79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (1,4)
  _001: a point with color grey at (0,6)
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta: (2,2)=5# (2,8)=5# (2,9)=6  (2,10)=6 
   (143.0 bits)
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask ..x|xxx at (1,3)
  _010: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (1,6)
diff: 
delta: (2,2)=2 
   (63.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,6)
  _001: a point with color grey at (1,4)
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
diff:   ^.layer_001.pos.i
delta: (2,2)=5# (2,8)=5# (2,9)=6  (2,10)=6 
! size mismatch, 3x10 instead of 3x9
>> Trial 2
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,6)
  _001: a point with color grey at (1,4)
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (2,9)
diff:   ^.layer_001.pos.i
delta: (1,5)=8  (1,6)=8  (2,2)=5# (2,8)=5#
! size mismatch, 3x10 instead of 3x9
>> Trial 3
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,6)
  _001: a point with color grey at (1,4)
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff:   ^.layer_001.pos.i
delta: (2,2)=5# (2,8)=5# (2,9)=6  (2,10)=6 
! size mismatch, 3x10 instead of 3x9

TRAIN 234bbc79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,2)
  _001: a point with color blue at (0,1)
  _0: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,0)
diff: 
delta: (1,4)=5# (1,5)=2  (1,7)=5# (2,5)=5#
   (148.5 bits)
data: a background with size (3,8) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xx.xx|.xxx. at (0,3)
  _010: a rectangle with size (1,2) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
diff: 
delta:
   (49.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,2)
  _001: a point with color blue at (0,1)
  _0: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,0)
diff: 
delta: (1,4)=5# (1,5)=2  (1,7)=5# (2,5)=5#
! size mismatch, 3x10 instead of 3x8
>> Trial 2
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,2)
  _001: a point with color red at (0,9)
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,8)
diff: 
delta: (1,4)=5# (1,5)=2  (1,7)=5# (2,5)=5#
! size mismatch, 3x10 instead of 3x8
>> Trial 3
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,2)
  _001: a point with color blue at (0,1)
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
diff:   ^.layer_01.shape.mask
delta: (1,4)=5# (1,5)=2  (1,7)=5# (2,5)=5#
! size mismatch, 3x10 instead of 3x8

TRAIN 234bbc79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,1)
  _001: a point with color grey at (0,3)
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (0,4)
diff: 
delta: (0,7)=5# (0,9)=5# (0,10)=8  (1,6)=5# (1,7)=3  (1,10)=8  (2,4)=5#
! size mismatch, 3x10 instead of 3x8
>> Trial 2
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,1)
  _001: a point with color grey at (0,3)
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,10)
diff: 
delta: (0,4)=1  (0,7)=5# (0,9)=5# (1,4)=1  (1,6)=5# (1,7)=3  (2,4)=5#
! size mismatch, 3x10 instead of 3x8
>> Trial 3
data: a background with size (3,11) and color black and layers
  _00: a point with color grey at (0,3)
  _001: a point with color grey at (0,1)
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (0,4)
diff: 
delta: (0,7)=5# (0,9)=5# (0,10)=8  (1,6)=5# (1,7)=3  (1,10)=8  (2,4)=5#
! size mismatch, 3x10 instead of 3x8

TEST 234bbc79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 2404.0 bits (2404.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-354] Checking task 23581191.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1209.2 = 1218.2
DL output with Mo: L = 9.0 + 12503.6 = 12512.6
DL input+output M: L = 17.9 + 13712.8 = 13730.7

# learning a model for train pairs
2.000	
1.775	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.558	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.422	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.293	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.224	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.142	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.112	OUT DEF: ^.size=^.size
1.105	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.097	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.090	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
1.064	IN  DEF: ^.color=black
0.989	IN  DEF: ^.layer_0.shape.color=cyan
0.914	IN  DEF: ^.layer_01.shape.color=orange
0.896	IN  DEF: ^.size=(?,?)
0.758	IN  DEF: ^.size.i=9
0.620	IN  DEF: ^.size.j=9
0.602	IN  DEF: ^.layer_0.pos=(?,?)
0.585	IN  DEF: ^.layer_01.pos=(?,?)
0.512	IN  DEF: ^.layer_01.pos.j=6
0.504	OUT DEF: ^.layer_0111.shape.color=^.layer_01.shape.color
0.501	OUT DEF: ^.layer_0.shape.mask=Full
0.494	OUT OBJECT at ^.layer_00: a point with color ? at ?
0.487	OUT DEF: ^.layer_00.shape.color=red
0.478	OUT OBJECT at ^.layer_000: a point with color ? at ?
0.471	OUT DEF: ^.layer_000.shape.color=red
0.467	OUT DEF: ^.layer_011.shape.mask=Full
0.464	OUT DEF: ^.layer_01.shape.mask=Full
0.460	OUT DEF: ^.layer_0111.shape.mask=Full
0.457	OUT DEF: ^.color=black
0.456	OUT DEF: ^.layer_000.pos=(?,?)
0.448	OUT DEF: ^.layer_000.pos.i=^.layer_0.pos.i
0.441	OUT DEF: ^.layer_000.pos.j=^.layer_01.pos.j
0.440	OUT DEF: ^.layer_00.pos=(?,?)
0.433	OUT DEF: ^.layer_00.pos.i=^.layer_01.pos.i
0.425	OUT DEF: ^.layer_00.pos.j=^.layer_0.pos.j
0.424	OUT DEF: ^.layer_0.pos=(?,?)
0.417	OUT DEF: ^.layer_0.pos.j=(0)
0.410	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.408	OUT DEF: ^.layer_0.shape.size=(?,?)
0.394	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.390	OUT DEF: ^.layer_0.shape.size.i=1
0.388	OUT DEF: ^.layer_01.pos=(?,?)
0.381	OUT DEF: ^.layer_01.pos.j=(0)
0.374	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.373	OUT DEF: ^.layer_01.shape.size=(?,?)
0.359	OUT DEF: ^.layer_01.shape.size.j=^.size.j
0.355	OUT DEF: ^.layer_01.shape.size.i=1
0.353	OUT DEF: ^.layer_011.pos=(?,?)
0.346	OUT DEF: ^.layer_011.pos.i=(0)
0.339	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j
0.337	OUT DEF: ^.layer_011.shape.size=(?,?)
0.324	OUT DEF: ^.layer_011.shape.size.i=^.size.i
0.320	OUT DEF: ^.layer_011.shape.size.j=1
0.318	OUT DEF: ^.layer_0111.pos=(?,?)
0.311	OUT DEF: ^.layer_0111.pos.i=(0)
0.304	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.j
0.302	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.288	OUT DEF: ^.layer_0111.shape.size.i=^.size.i
0.284	OUT DEF: ^.layer_0111.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: a point with color red at (^.layer_0.pos.i,^.layer_01.pos.j)
  _00: a point with color red at (^.layer_01.pos.i,^.layer_0.pos.j)
  _0: a rectangle with size (1,^.size.j) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,(0))
  _01: a rectangle with size (1,^.size.j) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,(0))
  _011: a rectangle with size (^.size.i,1) and color ^.layer_0.shape.color and mask Full at ((0),^.layer_0.pos.j)
  _0111: a rectangle with size (^.size.i,1) and color ^.layer_01.shape.color and mask Full at ((0),^.layer_01.pos.j)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color orange at (?,6)

DL input  with Mi: L = 61.3 + 269.5 = 330.8
DL output with Mo: L = 161.9 + 0.0 = 161.9
DL input+output M: L = 223.2 + 269.5 = 492.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (2,2)
  _01: a point with color orange at (6,6)
diff: 
delta:
   (13.5 bits)
data: a background with size (9,9) and color black and layers
  _000: a point with color red at (2,6)
  _00: a point with color red at (6,2)
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,9) and color orange and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _0111: a rectangle with size (9,1) and color orange and mask Full at (0,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (2,2)
  _01: a point with color orange at (6,6)
diff: 
delta:
correct output grid

TRAIN 23581191.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,3)
  _01: a point with color orange at (7,6)
diff: 
delta:
   (13.5 bits)
data: a background with size (9,9) and color black and layers
  _000: a point with color red at (1,6)
  _00: a point with color red at (7,3)
  _0: a rectangle with size (1,9) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (1,9) and color orange and mask Full at (7,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,3)
  _0111: a rectangle with size (9,1) and color orange and mask Full at (0,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,3)
  _01: a point with color orange at (7,6)
diff: 
delta:
correct output grid

TRAIN 23581191.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,4)
  _01: a point with color orange at (6,1)
diff:   ^.layer_01.pos.j
delta:
correct output grid

TEST 23581191.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 11.7 sec (11.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-353] Checking task 239be575.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20975.5 = 20984.5
DL output with Mo: L = 9.0 + 640.7 = 649.6
DL input+output M: L = 17.9 + 21616.2 = 21634.1

# learning a model for train pairs
2.000	
1.851	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.724	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.609	OUT DEF: ^.size=(?,?)
1.393	OUT DEF: ^.size.i=1
1.177	OUT DEF: ^.size.j=1
1.081	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.043	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.028	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.015	IN  DEF: ^.layer_011.shape.color=cyan
0.992	IN  DEF: ^.layer_01.shape.color=red
0.978	IN  DEF: ^.layer_01111.shape.color=cyan
0.972	IN  DEF: ^.layer_01111.shape.mask=Full
0.965	IN  DEF: ^.layer_01.shape.mask=Full
0.958	IN  DEF: ^.layer_0111.shape.mask=Full
0.954	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.950	IN  DEF: ^.color=black
0.946	IN  DEF: ^.size=(?,?)
0.943	IN  DEF: ^.layer_0.pos=(?,?)
0.939	IN  DEF: ^.layer_0.shape.size=(?,?)
0.936	IN  DEF: ^.layer_01.pos=(?,?)
0.932	IN  DEF: ^.layer_011.pos=(?,?)
0.928	IN  DEF: ^.layer_01.shape.size=(?,?)
0.916	IN  DEF: ^.layer_01.shape.size.i=2
0.904	IN  DEF: ^.layer_01.shape.size.j=2
0.900	IN  DEF: ^.layer_011.shape.size=(?,?)
0.897	IN  DEF: ^.layer_0111.pos=(?,?)
0.893	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.890	IN  DEF: ^.layer_011111.pos=(?,?)
0.886	IN  DEF: ^.layer_01111.pos=(?,?)
0.882	IN  DEF: ^.layer_01111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (2,2) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 172.4 + 8837.9 = 9010.2
DL output with Mo: L = 11.6 + 282.7 = 294.3
DL input+output M: L = 184.0 + 9120.6 = 9304.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (0,2)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _011111: a point with color cyan at (2,4)
diff: 
delta:
   (102.8 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (0,2)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _011111: a point with color cyan at (2,4)
diff: 
delta:
correct output grid

TRAIN 239be575.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _011: a rectangle with size (4,5) and color cyan and mask x.xxx|xxx.x|.x..x|x.... at (1,1)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (4,4)
  _011111: a point with color black at (0,0)
diff: 
delta:
   (132.1 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _011: a rectangle with size (4,5) and color cyan and mask x.xxx|xxx.x|.x..x|x.... at (1,1)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (4,4)
  _011111: a point with color black at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask xx..|.x..|.xxx at (2,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _011: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,5)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,5)
  _01111: a rectangle with size (1,5) and color cyan and mask Full at (0,0)
  _011111: a point with color cyan at (4,0)
diff: 
delta: (5,0)=8 
   (158.5 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask xx..|.x..|.xxx at (2,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _011: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,5)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,5)
  _01111: a rectangle with size (1,5) and color cyan and mask Full at (0,0)
  _011111: a point with color cyan at (4,0)
diff: 
delta: (5,0)=8 
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask xx..|.xx.|...x at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color cyan and mask .x|xx at (4,3)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,1)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (4,6)
  _011111: a point with color cyan at (1,6)
diff: 
delta: (2,5)=8  (3,0)=8 
   (173.9 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask Full at (4,3)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _011: a rectangle with size (3,4) and color cyan and mask xx..|.xx.|...x at (0,0)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,1)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (1,6)
  _011111: a point with color cyan at (2,5)
diff: 
delta: (3,0)=8  (4,3)=0  (4,5)=0  (5,5)=0 
correct output grid

TRAIN 239be575.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (4,3)
  _011: a rectangle with size (3,2) and color cyan and mask Even Checkboard at (3,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (0,5)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (3,2)
  _011111: a point with color cyan at (0,0)
diff: 
delta: (2,0)=8  (5,0)=8 
   (156.7 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (4,3)
  _011: a rectangle with size (3,2) and color cyan and mask Even Checkboard at (3,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (0,5)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (3,2)
  _011111: a point with color cyan at (0,0)
diff: 
delta: (2,0)=8  (5,0)=8 
! 1 wrong pixels (generated / expected)

TRAIN 239be575.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,3)
  _01: a rectangle with size (2,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (4,2) and color cyan and mask x.|x.|.x|x. at (2,4)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (5,1)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _011111: a point with color cyan at (0,5)
diff: 
delta: (1,2)=8  (3,2)=8 
   (159.8 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,3)
  _01: a rectangle with size (2,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (4,2) and color cyan and mask x.|x.|.x|x. at (2,4)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (5,1)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _011111: a point with color cyan at (0,5)
diff: 
delta: (1,2)=8  (3,2)=8 
correct output grid

TRAIN 239be575.json/6: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx..|.xxx|x.x.|..x. at (2,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,2)
  _0111: a rectangle with size (2,2) and color red and mask Full at (5,3)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _011111: a point with color cyan at (2,5)
diff: 
delta: (4,5)=8  (6,0)=8  (7,1)=8  (7,5)=8 
! 1 wrong pixels (generated / expected)

TEST 239be575.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|x.. at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (1,4)
  _011: a rectangle with size (1,4) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (5,1)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _011111: a point with color cyan at (3,5)
diff: 
delta: (4,3)=8  (5,0)=8  (5,5)=8  (7,2)=0 
correct output grid

TEST 239be575.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 16.7 sec (16.7 sec/task)
bits-train-error = 282.7 bits (282.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.50 tasks (50.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.50

=====================================
[-352] Checking task 23b5c85d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 91266.3 = 91275.2
DL output with Mo: L = 9.0 + 975.1 = 984.0
DL input+output M: L = 17.9 + 92241.3 = 92259.3

# learning a model for train pairs
2.000	
1.466	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.239	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.149	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.087	OUT DEF: ^.size=(?,?)
1.086	IN  DEF: ^.layer_011.shape.mask=Full
1.084	IN  DEF: ^.layer_01.shape.mask=Full
1.084	IN  DEF: ^.color=black
1.083	IN  DEF: ^.size=(?,?)
1.082	IN  DEF: ^.layer_0.pos=(?,?)
1.081	IN  DEF: ^.layer_0.shape.size=(?,?)
1.081	IN  DEF: ^.layer_01.pos=(?,?)
1.080	IN  DEF: ^.layer_01.shape.size=(?,?)
1.079	IN  DEF: ^.layer_011.pos=(?,?)
1.079	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 95.4 + 12797.0 = 12892.4
DL output with Mo: L = 13.6 + 909.0 = 922.6
DL input+output M: L = 109.0 + 13706.0 = 13815.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (6,1) and color red and mask Full at (1,6)
  _011: a rectangle with size (6,6) and color red and mask Full at (1,1)
diff: 
delta:
   (97.8 bits)
data: a background with size (3,3) and color cyan and layers
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (6,1) and color red and mask Full at (1,6)
  _011: a rectangle with size (6,6) and color red and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN 23b5c85d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (5,6) and color red and mask Full at (10,4)
  _01: a rectangle with size (9,8) and color green and mask Full at (3,1)
  _011: a rectangle with size (7,7) and color cyan and mask Full at (2,12)
diff: 
delta: (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
   (756.2 bits)
data: a background with size (2,3) and color blue and layers
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (5,6) and color red and mask Full at (10,4)
  _01: a rectangle with size (9,8) and color green and mask Full at (3,1)
  _011: a rectangle with size (7,7) and color cyan and mask Full at (2,12)
diff: 
delta: (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 2x3

TRAIN 23b5c85d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (0,9)
  _01: a rectangle with size (3,2) and color pink and mask Full at (5,5)
  _011: a rectangle with size (9,4) and color green and mask Full at (1,2)
diff: 
delta:
   (101.6 bits)
data: a background with size (3,2) and color pink and layers
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask Full at (5,5)
  _01: a rectangle with size (9,4) and color green and mask Full at (1,2)
  _011: a rectangle with size (4,3) and color red and mask Full at (0,9)
diff: 
delta:
! size mismatch, 10x10 instead of 3x2

TRAIN 23b5c85d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (8,13) and color red and mask xxxxxxxxxxxxx|xxxxxxxxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxxxx.......x at (2,1)
  _01: a rectangle with size (4,7) and color green and mask Full at (9,6)
  _011: a rectangle with size (3,4) and color orange and mask Full at (4,3)
diff: 
delta:
   (215.7 bits)
data: a background with size (3,4) and color orange and layers
diff: 
delta:
   (19.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (8,13) and color red and mask xxxxxxxxxxxxx|xxxxxxxxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxxxx.......x at (2,1)
  _01: a rectangle with size (4,7) and color green and mask Full at (9,6)
  _011: a rectangle with size (3,4) and color orange and mask Full at (4,3)
diff: 
delta:
! size mismatch, 10x10 instead of 3x4

TRAIN 23b5c85d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (7,8) and color blue and mask Full at (2,1)
  _01: a rectangle with size (4,7) and color pink and mask Full at (11,4)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (3,11)
diff: 
delta:
   (108.4 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (16.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (7,8) and color blue and mask Full at (2,1)
  _01: a rectangle with size (4,7) and color pink and mask Full at (11,4)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (3,11)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 23b5c85d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (11,8) and color yellow and mask Full at (3,9)
  _01: a rectangle with size (6,6) and color blue and mask Full at (2,2)
  _011: a rectangle with size (4,5) and color green and mask Full at (13,2)
diff: 
delta: (9,7)=6  (9,8)=6  (9,9)=6  (10,7)=6  (10,8)=6  (10,9)=6  (11,7)=6  (11,8)=6  (11,9)=6 
! size mismatch, 10x10 instead of 3x3

TEST 23b5c85d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 909.0 bits (909.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-351] Checking task 253bf280.json: 8 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6086.0 = 6095.0
DL output with Mo: L = 9.0 + 14562.7 = 14571.7
DL input+output M: L = 17.9 + 20648.8 = 20666.7

# learning a model for train pairs
2.000	
1.675	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.578	OUT DEF: ^.size=^.size
1.519	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.458	IN  DEF: ^.layer_0.shape.color=cyan
1.439	IN  DEF: ^.color=black
1.422	IN  DEF: ^.size=(?,?)
1.406	IN  DEF: ^.layer_0.pos=(?,?)
1.393	OUT DEF: ^.layer_0.shape.mask=Full
1.385	OUT DEF: ^.color=black
1.378	OUT DEF: ^.layer_0.pos=(?,?)
1.371	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)

DL input  with Mi: L = 31.0 + 5013.3 = 5044.3
DL output with Mo: L = 33.9 + 7884.1 = 7917.9
DL input+output M: L = 64.9 + 12897.4 = 12962.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta: (3,9)=8 
   (47.6 bits)
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (3,3)
diff: 
delta: (3,2)=8  (3,9)=8 
   (64.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta: (3,9)=8 
! 12 wrong pixels (generated / expected)

TRAIN 253bf280.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _0: a point with color cyan at (1,4)
diff: 
delta: (2,8)=8  (6,8)=8  (7,4)=8 
   (88.7 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (2,4)
diff: 
delta: (1,4)=8  (2,8)=8  (3,8)=3  (4,8)=3  (5,8)=3  (6,8)=8  (7,4)=8 
   (162.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a point with color cyan at (1,4)
diff: 
delta: (2,8)=8  (6,8)=8  (7,4)=8 
! 16 wrong pixels (generated / expected)

TRAIN 253bf280.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (1,9)=8  (8,2)=8  (8,7)=8 
   (90.3 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (1,7) and color green and mask Full at (1,2)
diff: 
delta: (1,1)=8  (1,9)=8  (8,2)=8  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=8 
   (185.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (1,9)=8  (8,2)=8  (8,7)=8 
! 18 wrong pixels (generated / expected)

TRAIN 253bf280.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,6) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (7,2)=8 
   (44.6 bits)
data: a background with size (9,6) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (2,2)
diff: 
delta: (1,2)=8  (7,2)=8 
   (61.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,6) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (7,2)=8 
! 11 wrong pixels (generated / expected)

TRAIN 253bf280.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta:
   (16.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta:
   (15.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 253bf280.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (3,4)=8 
   (41.2 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta: (3,4)=8 
   (36.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (3,4)=8 
! 5 wrong pixels (generated / expected)

TRAIN 253bf280.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (7,6) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (3,1)=8  (6,3)=8 
   (61.9 bits)
data: a background with size (7,6) and color black and layers
  _0: a rectangle with size (4,1) and color green and mask Full at (2,3)
diff: 
delta: (1,3)=8  (3,1)=8  (6,3)=8 
   (78.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (3,1)=8  (6,3)=8 
! 11 wrong pixels (generated / expected)

TRAIN 253bf280.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (4,6)=8  (4,10)=8  (5,1)=8  (9,3)=8 
   (110.3 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (7,1) and color green and mask Full at (2,3)
diff: 
delta: (1,3)=8  (4,6)=8  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=8  (5,1)=8  (9,3)=8 
   (185.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (4,6)=8  (4,10)=8  (5,1)=8  (9,3)=8 
! 19 wrong pixels (generated / expected)

TRAIN 253bf280.json/8: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (1,10)=8  (5,6)=8  (5,12)=8  (7,1)=8  (9,8)=8  (10,1)=8 
! 25 wrong pixels (generated / expected)

TEST 253bf280.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 7884.1 bits (7884.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-350] Checking task 25d487eb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7513.4 = 7522.4
DL output with Mo: L = 9.0 + 12258.5 = 12267.4
DL input+output M: L = 17.9 + 19771.9 = 19789.8

# learning a model for train pairs
2.000	
1.388	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.912	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.548	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.498	OUT DEF: ^.size=^.size
0.470	OUT DEF: ^.layer_00=^.layer_0
0.449	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.438	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.432	IN  DEF: ^.color=black
0.426	OUT DEF: ^.layer_0.shape.mask=Full
0.421	IN  DEF: ^.size=(?,?)
0.417	IN  DEF: ^.layer_0.pos=(?,?)
0.412	IN  DEF: ^.layer_0.shape.size=(?,?)
0.408	IN  DEF: ^.layer_01.pos=(?,?)
0.404	OUT DEF: ^.color=black
0.401	OUT DEF: ^.layer_0.pos=(?,?)
0.389	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j
0.386	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 58.1 + 2515.7 = 2573.8
DL output with Mo: L = 41.3 + 496.2 = 537.5
DL input+output M: L = 99.4 + 3011.9 = 3111.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _01: a point with color blue at (4,3)
diff: 
delta:
   (78.7 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _0: a rectangle with size (1,12) and color blue and mask Full at (4,3)
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _01: a point with color blue at (4,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _01: a point with color red at (3,4)
diff: 
delta: (4,3)=1  (4,4)=2  (4,5)=2  (5,4)=2 
! 18 wrong pixels (generated / expected)

TRAIN 25d487eb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _01: a point with color green at (8,6)
diff: 
delta:
   (93.2 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _0: a rectangle with size (9,1) and color green and mask Full at (0,6)
diff: 
delta:
   (15.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _01: a point with color green at (8,6)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full at (7,4)
  _01: a point with color cyan at (5,6)
diff: 
delta: (6,5)=8  (6,6)=8  (6,7)=8  (7,6)=8  (8,3)=8  (8,6)=3  (8,9)=8 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full at (7,4)
  _01: a point with color cyan at (6,5)
diff: 
delta: (5,6)=8  (6,6)=8  (6,7)=8  (7,6)=8  (8,3)=8  (8,6)=3  (8,9)=8 
! 14 wrong pixels (generated / expected)

TRAIN 25d487eb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _01: a point with color red at (2,4)
diff: 
delta:
   (79.7 bits)
data: a background with size (15,12) and color black and layers
  _00: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _0: a rectangle with size (13,1) and color red and mask Full at (2,4)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _01: a point with color red at (2,4)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,2)
  _01: a point with color green at (3,3)
diff: 
delta: (2,4)=2  (3,4)=3  (3,5)=3  (4,4)=3 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,2)
  _01: a point with color green at (3,4)
diff: 
delta: (2,4)=2  (3,3)=3  (3,5)=3  (4,4)=3 
! 19 wrong pixels (generated / expected)

TRAIN 25d487eb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (11,1)
  _01: a point with color cyan at (14,4)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (2,5) and color yellow and mask Full at (13,2)
  _01: a point with color yellow at (11,4)
diff: 
delta: (12,3)=4  (12,4)=4  (12,5)=4  (13,4)=4  (14,1)=4  (14,4)=8  (14,7)=4 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (2,5) and color yellow and mask Full at (13,2)
  _01: a point with color yellow at (12,3)
diff: 
delta: (11,4)=4  (12,4)=4  (12,5)=4  (13,4)=4  (14,1)=4  (14,4)=8  (14,7)=4 
! 20 wrong pixels (generated / expected)

TEST 25d487eb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 496.2 bits (496.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-349] Checking task 25d8a9c8.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4419.7 = 4428.7
DL output with Mo: L = 9.0 + 2626.4 = 2635.4
DL input+output M: L = 17.9 + 7046.1 = 7064.1

# learning a model for train pairs
2.000	
1.580	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.360	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.173	OUT DEF: ^.size=^.size
1.051	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.964	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.928	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.907	IN  DEF: ^.layer_0.shape.mask=Full
0.889	OUT DEF: ^.layer_0.pos=(?,?)
0.845	OUT DEF: ^.layer_0.pos.j=(0)
0.806	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.j - ^.layer_01.pos.i
0.795	IN  DEF: ^.layer_0.pos=(?,?)
0.769	IN  DEF: ^.layer_0.pos.j=(0)
0.758	IN  DEF: ^.size=(?,?)
0.709	IN  DEF: ^.size.i=3
0.659	IN  DEF: ^.size.j=3
0.649	IN  DEF: ^.layer_0.shape.size=(?,?)
0.599	IN  DEF: ^.layer_0.shape.size.j=3
0.578	IN  DEF: ^.layer_0.shape.size.i=1
0.567	IN  DEF: ^.layer_01.pos=(?,?)
0.556	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at (^.layer_01.pos.j - ^.layer_01.pos.i,(0))
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (1,3) and color ? and mask Full at (?,(0))
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 76.2 + 1793.4 = 1869.7
DL output with Mo: L = 44.7 + 309.2 = 353.9
DL input+output M: L = 121.0 + 2102.6 = 2223.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color green and mask x.|xx at (1,1)
diff: 
delta:
   (41.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (6.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color green and mask x.|xx at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,1)
diff: 
delta: (2,0)=3 
   (52.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
diff: 
delta:
   (6.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,1)
diff: 
delta: (2,0)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta: (2,1)=7# (2,2)=7#
! 6 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=2 
   (50.4 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,3) and color black and mask Full at (0,0)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,2)
diff: 
delta: (0,0)=2 
! 6 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (34.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (2,0)
diff: 
delta:
   (6.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i
delta:
! 3 wrong pixels (generated / expected)

TRAIN 25d8a9c8.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
diff: 
delta: (1,1)=2 
! 6 wrong pixels (generated / expected)

TEST 25d8a9c8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 309.2 bits (309.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-348] Checking task 25ff71a9.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2561.4 = 2570.3
DL output with Mo: L = 9.0 + 2561.4 = 2570.3
DL input+output M: L = 17.9 + 5122.7 = 5140.6

# learning a model for train pairs
2.000	
1.630	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.261	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.963	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.771	OUT DEF: ^.size=^.size
0.747	OUT DEF: ^.color=black
0.724	IN  DEF: ^.color=black
0.705	IN  DEF: ^.size=(?,?)
0.621	IN  DEF: ^.size.i=3
0.536	IN  DEF: ^.size.j=3
0.517	OUT DEF: ^.layer_0.pos=(?,?)
0.472	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.431	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i + 1
0.412	IN  DEF: ^.layer_0.shape.size=(?,?)
0.394	IN  DEF: ^.layer_0.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i + 1,^.layer_0.pos.j)
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 45.3 + 935.1 = 980.4
DL output with Mo: L = 31.6 + 0.0 = 31.6
DL input+output M: L = 76.9 + 935.1 = 1012.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (20.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
   (20.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
   (26.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,1)
diff: 
delta:
   (26.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,1)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta:
correct output grid

TEST 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
diff: 
delta:
correct output grid

TEST 25ff71a9.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-347] Checking task 264363fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 277370.1 = 277379.0
DL output with Mo: L = 9.0 + 270085.6 = 270094.5
DL input+output M: L = 17.9 + 547455.6 = 547473.6

# learning a model for train pairs
2.000	
1.140	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.426	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.366	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.338	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.335	OUT DEF: ^.layer_0.shape.size=^.size
0.319	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.308	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.305	OUT DEF: ^.size=^.size
0.304	OUT DEF: ^.color=^.layer_01.shape.color
0.304	IN  DEF: ^.layer_01.shape.mask=Full
0.304	OUT DEF: ^.layer_0.pos=(?,?)
0.303	OUT DEF: ^.layer_0.pos.i=(0)
0.303	OUT DEF: ^.layer_0.pos.j=(0)
0.302	OUT DEF: ^.layer_01.shape.size=(?,?)
0.301	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j
0.301	IN  OBJECT at ^.layer_010: a point with color ? at ?
0.301	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.301	OUT DEF: ^.layer_011.pos=(?,?)
0.300	OUT DEF: ^.layer_011.shape.size=(?,?)
0.300	IN  DEF: ^.size=(?,?)
0.299	IN  DEF: ^.size.i=30
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_01.shape.color and layers
  _0: a rectangle with size ^.size and color ? and mask ? at ((0),(0))
  _01: a rectangle with size (?,^.layer_01.shape.size.j) and color ? and mask ? at ^.layer_01.pos
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (30,?) and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a point with color ? at ?
  _01: a rectangle with size ? and color ? and mask Full at ?
  _011: a point with color ? at ?

DL input  with Mi: L = 84.5 + 21350.2 = 21434.7
DL output with Mo: L = 89.7 + 59787.0 = 59876.7
DL input+output M: L = 174.3 + 81137.2 = 81311.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color cyan and layers
  _0: a rectangle with size (15,17) and color blue and mask Full at (1,2)
  _010: a point with color red at (2,25)
  _01: a rectangle with size (9,18) and color blue and mask Full at (18,8)
  _011: a point with color green at (3,24)
diff: 
delta: (3,25)=2  (3,26)=3  (4,23)=2  (4,24)=2  (4,25)=3  (4,26)=2  (4,27)=2  (5,5)=3  (5,24)=3  (5,25)=2  (5,26)=3  (6,25)=2  (25,17)=3 
   (433.2 bits)
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (6,18) and color blue and mask Full at (18,8)
  _011: a rectangle with size (15,17) and color red and mask ...x.............|...x.............|...x.............|...x.............|xxx.xxxxxxxxxxxxx|...x.............|...x.............|...x.............|...x.............|...x.............|...x.............|...x.............|...x.............|...x.............|...x............. at (1,2)
diff: 
delta: (4,4)=3  (4,6)=3  (5,5)=3  (6,4)=3  (6,6)=3  (18,17)=2  (19,17)=2  (20,17)=2  (21,17)=2  (22,17)=2  (23,17)=2  (24,16)=3  (24,17)=2  (24,18)=3  (25,8)=2  (25,9)=2  (25,10)=2  (25,11)=2  (25,12)=2  (25,13)=2  (25,14)=2  (25,15)=2  (25,16)=2  (25,17)=3  (25,18)=2  (25,19)=2  (25,20)=2  (25,21)=2  (25,22)=2  (25,23)=2  (25,24)=2  (25,25)=2  (26,16)=3  (26,17)=2  (26,18)=3 
   (2000.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color cyan and layers
  _0: a rectangle with size (15,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx.xxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (1,2)
  _010: a point with color red at (2,25)
  _01: a rectangle with size (9,18) and color blue and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxx.xxxxxxxx|xxxxxxxxxxxxxxxxxx at (18,8)
  _011: a point with color green at (3,24)
diff:   ^.layer_01.shape.mask
delta: (3,25)=2  (3,26)=3  (4,23)=2  (4,24)=2  (4,25)=3  (4,26)=2  (4,27)=2  (5,5)=3  (5,24)=3  (5,25)=2  (5,26)=3  (6,25)=2  (25,17)=3 
! 900 wrong pixels (generated / expected)

TRAIN 264363fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (13,18) and color red and mask Full at (15,6)
  _010: a point with color green at (3,24)
  _01: a rectangle with size (9,17) and color red and mask Full at (5,1)
  _011: a point with color green at (4,24)
diff: 
delta: (5,22)=3  (5,23)=3  (5,24)=4  (5,25)=3  (5,26)=3  (6,24)=3  (7,14)=4  (7,24)=3  (10,5)=4  (24,16)=4 
   (365.9 bits)
data: a background with size (30,30) and color red and layers
  _0: a rectangle with size (30,30) and color blue and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (9,17) and color green and mask ....x........x...|....x........x...|xxxxxxxxxxxxx.xxx|....x........x...|....x........x...|xxxx.xxxxxxxxxxxx|....x........x...|....x........x...|....x........x... at (5,1)
  _011: a rectangle with size (13,18) and color green and mask ..........x.......|..........x.......|..........x.......|..........x.......|..........x.......|..........x.......|..........x.......|..........x.......|..........x.......|xxxxxxxxxx.xxxxxxx|..........x.......|..........x.......|..........x....... at (15,6)
diff: 
delta: (7,14)=4  (10,5)=4  (24,16)=4 
   (1421.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (13,18) and color red and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxx.xxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (15,6)
  _010: a point with color green at (3,24)
  _01: a rectangle with size (9,17) and color red and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxx.xxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxx.xxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (5,1)
  _011: a point with color green at (4,24)
diff:   ^.layer_01.shape.mask
delta: (5,22)=3  (5,23)=3  (5,24)=4  (5,25)=3  (5,26)=3  (6,24)=3  (7,14)=4  (7,24)=3  (10,5)=4  (24,16)=4 
! 900 wrong pixels (generated / expected)

TRAIN 264363fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color green and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........xxxxxxxxxxxxxxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _010: a point with color yellow at (6,23)
  _01: a rectangle with size (13,7) and color green and mask Full at (2,16)
  _011: a point with color yellow at (10,15)
diff: 
delta: (12,4)=4  (20,18)=4  (24,24)=5# (25,23)=6  (25,24)=5# (25,25)=6  (26,23)=6  (26,24)=4  (26,25)=6  (27,23)=6  (27,24)=5# (27,25)=6  (28,24)=5#
   (1335.9 bits)
data: a background with size (30,30) and color green and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........xxxxxxxxxxxxxxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,7) and color green and mask Full at (2,16)
  _011: a rectangle with size (7,6) and color green and mask Full at (8,17)
diff: 
delta: (2,15)=5# (2,23)=5# (3,15)=5# (3,23)=5# (4,15)=5# (4,23)=5# (5,15)=5# (5,22)=6  (5,23)=5# (5,24)=6  (6,15)=5# (6,22)=6  (6,23)=4  (6,24)=6  (7,15)=5# (7,22)=6  (7,23)=5# (7,24)=6  (8,15)=5# (8,23)=5# (9,4)=5# (9,14)=6  (9,15)=5# (9,16)=6  (9,23)=5# (10,4)=5# (10,14)=6  (10,15)=4  (10,16)=6  (10,23)=5# (11,3)=6  (11,4)=5# (11,5)=6  (11,14)=6  (11,15)=5# (11,16)=6  (11,23)=5# (12,3)=6  (12,4)=4  (12,5)=6  (12,15)=5# (12,23)=5# (13,3)=6  (13,4)=5# (13,5)=6  (13,15)=5# (13,23)=5# (14,4)=5# (14,15)=5# (14,23)=5# (15,4)=5# (16,4)=5# (16,18)=5# (17,4)=5# (17,18)=5# (18,4)=5# (18,18)=5# (19,4)=5# (19,17)=6  (19,18)=5# (19,19)=6  (20,4)=5# (20,17)=6  (20,18)=4  (20,19)=6  (21,4)=5# (21,17)=6  (21,18)=5# (21,19)=6  (22,4)=5# (22,18)=5# (23,4)=5#
   (2556.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color green and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........xxxxxxxxxxxxxxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxx...xxxx|xxxxxxxxxxxxxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _010: a point with color yellow at (6,23)
  _01: a rectangle with size (11,9) and color green and mask Full at (13,1)
  _011: a point with color yellow at (10,15)
diff: 
delta: (12,4)=4  (20,18)=4  (24,24)=5# (25,23)=6  (25,24)=5# (25,25)=6  (26,23)=6  (26,24)=4  (26,25)=6  (27,23)=6  (27,24)=5# (27,25)=6  (28,24)=5#
! 900 wrong pixels (generated / expected)

TRAIN 264363fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (30,30) and color yellow and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxx............xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xx...xxxxxxx.................x|x.....xxxxxx.................x|xx...xxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxx.................x|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _010: a point with color red at (9,6)
  _01: a rectangle with size (6,17) and color blue and mask Full at (18,12)
  _011: a point with color red at (17,23)
diff: 
delta: (22,2)=3  (22,3)=3  (22,4)=3  (23,1)=8  (23,2)=8  (23,3)=2  (23,4)=8  (23,5)=8  (24,2)=3  (24,3)=3  (24,4)=3  (24,18)=2 
! 900 wrong pixels (generated / expected)

TEST 264363fd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.9 sec (27.9 sec/task)
bits-train-error = 59787.0 bits (59787.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-346] Checking task 272f95fa.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 24599.9 = 24608.9
DL output with Mo: L = 9.0 + 67807.4 = 67816.3
DL input+output M: L = 17.9 + 92407.3 = 92425.2

# learning a model for train pairs
2.000	
1.261	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.911	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.669	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.524	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.425	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.362	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.321	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 6391.7 = 6420.6
DL output with Mo: L = 111.4 + 3995.1 = 4106.5
DL input+output M: L = 140.3 + 10386.8 = 10527.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
diff: 
delta:
   (409.1 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
  _01: a rectangle with size (10,6) and color blue and mask Full at (8,5)
  _011: a rectangle with size (4,7) and color green and mask Full at (3,12)
  _0111: a rectangle with size (4,6) and color pink and mask Full at (3,5)
  _01111: a rectangle with size (4,4) and color yellow and mask Full at (3,0)
  _011111: a rectangle with size (2,6) and color red and mask Full at (0,5)
diff: 
delta:
   (209.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 18x19
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (1,19) and color cyan and mask Full at (2,0)
diff: 
delta: (0,4)=8  (0,11)=8  (1,4)=8  (1,11)=8  (3,4)=8  (3,11)=8  (4,4)=8  (4,11)=8  (5,4)=8  (5,11)=8  (6,4)=8  (6,11)=8  (7,0)=8  (7,1)=8  (7,2)=8  (7,3)=8  (7,4)=8  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8  (7,9)=8  (7,10)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=8  (7,17)=8  (7,18)=8  (8,4)=8  (8,11)=8  (9,4)=8  (9,11)=8  (10,4)=8  (10,11)=8  (11,4)=8  (11,11)=8  (12,4)=8  (12,11)=8  (13,4)=8  (13,11)=8  (14,4)=8  (14,11)=8  (15,4)=8  (15,11)=8  (16,4)=8  (16,11)=8  (17,4)=8  (17,11)=8 
! size mismatch, 10x10 instead of 18x19

TRAIN 272f95fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
diff: 
delta:
   (230.0 bits)
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
  _01: a rectangle with size (4,6) and color red and mask Full at (0,3)
  _011: a rectangle with size (4,6) and color blue and mask Full at (8,3)
  _0111: a rectangle with size (2,6) and color pink and mask Full at (5,3)
  _01111: a rectangle with size (2,4) and color green and mask Full at (5,10)
  _011111: a rectangle with size (2,2) and color yellow and mask Full at (5,0)
diff: 
delta:
   (190.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 12x14

TRAIN 272f95fa.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color black and layers
  _0: a rectangle with size (17,15) and color cyan and mask ...x....x......|...x....x......|...x....x......|...x....x......|...x....x......|...x....x......|xxxxxxxxxxxxxxx|...x....x......|...x....x......|...x....x......|...x....x......|...x....x......|...x....x......|xxxxxxxxxxxxxxx|...x....x......|...x....x......|...x....x...... at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 17x15
>> Trial 2
data: a background with size (17,15) and color black and layers
  _0: a rectangle with size (17,1) and color cyan and mask Full at (0,3)
diff: 
delta: (0,8)=8  (1,8)=8  (2,8)=8  (3,8)=8  (4,8)=8  (5,8)=8  (6,0)=8  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,10)=8  (6,11)=8  (6,12)=8  (6,13)=8  (6,14)=8  (7,8)=8  (8,8)=8  (9,8)=8  (10,8)=8  (11,8)=8  (12,8)=8  (13,0)=8  (13,1)=8  (13,2)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,10)=8  (13,11)=8  (13,12)=8  (13,13)=8  (13,14)=8  (14,8)=8  (15,8)=8  (16,8)=8 
! size mismatch, 10x10 instead of 17x15

TEST 272f95fa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.6 sec (20.6 sec/task)
bits-train-error = 3995.1 bits (3995.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-345] Checking task 27a28665.json: 7 train, 3 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6062.6 = 6071.6
DL output with Mo: L = 9.0 + 975.2 = 984.2
DL input+output M: L = 17.9 + 7037.8 = 7055.8

# learning a model for train pairs
2.000	
1.562	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.473	OUT DEF: ^.size=(?,?)
1.307	OUT DEF: ^.size.i=1
1.141	OUT DEF: ^.size.j=1
1.124	IN  DEF: ^.color=black
1.109	IN  DEF: ^.size=(?,?)
1.046	IN  DEF: ^.size.i=3
0.983	IN  DEF: ^.size.j=3
0.969	IN  DEF: ^.layer_0.pos=(?,?)
0.935	IN  DEF: ^.layer_0.pos.i=0
0.902	IN  DEF: ^.layer_0.pos.j=0
0.887	IN  DEF: ^.layer_0.shape.size=(?,?)
0.824	IN  DEF: ^.layer_0.shape.size.i=3
0.761	IN  DEF: ^.layer_0.shape.size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ? and layers
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask ? at (0,0)

DL input  with Mi: L = 48.8 + 1060.9 = 1109.7
DL output with Mo: L = 11.6 + 557.6 = 569.2
DL input+output M: L = 60.4 + 1618.5 = 1678.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
   (16.7 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (0,0)
diff: 
delta:
   (11.3 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x-cross at (0,0)
diff: 
delta:
   (11.3 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x-cross at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
   (16.7 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
   (16.7 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
   (16.7 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (16.7 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x-cross at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/3: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 557.6 bits (557.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-344] Checking task 28bf18c6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3662.0 = 3671.0
DL output with Mo: L = 9.0 + 4063.4 = 4072.4
DL input+output M: L = 17.9 + 7725.4 = 7743.4

# learning a model for train pairs
2.000	
1.478	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.963	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.929	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.916	IN  DEF: ^.color=black
0.905	OUT DEF: ^.color=black
0.895	IN  DEF: ^.size=(?,?)
0.829	IN  DEF: ^.size.i=8
0.762	IN  DEF: ^.size.j=8
0.753	IN  DEF: ^.layer_0.pos=(?,?)
0.743	IN  DEF: ^.layer_0.shape.size=(?,?)
0.699	IN  DEF: ^.layer_0.shape.size.i=3
0.654	IN  DEF: ^.layer_0.shape.size.j=3
0.646	OUT DEF: ^.size=(?,?)
0.592	OUT DEF: ^.size.j=6
0.552	OUT DEF: ^.size.i=^.layer_0.shape.size.i
0.543	OUT DEF: ^.layer_0.pos=(?,?)
0.514	OUT DEF: ^.layer_0.pos.j=(0)
0.493	OUT DEF: ^.layer_0.pos.i=(0)
0.484	OUT DEF: ^.layer_0.shape.size=(?,?)
0.430	OUT DEF: ^.layer_0.shape.size.j=6
0.390	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i,6) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,6) and color ^.layer_0.shape.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask ? at (?,?)

DL input  with Mi: L = 55.3 + 760.4 = 815.7
DL output with Mo: L = 51.9 + 631.8 = 683.6
DL input+output M: L = 107.2 + 1392.2 = 1499.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|.x.|xxx at (1,1)
diff: 
delta:
   (25.3 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xx.xx.|.x..x.|xxxxxx at (0,0)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|.x.|xxx at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 28bf18c6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (5,2)
diff: 
delta:
   (25.3 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color red and mask .x..x.|xxxxxx|xx.xx. at (0,0)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (5,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,2)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i
delta: (5,3)=2  (6,4)=2 
! size mismatch, 2x6 instead of 3x6

TRAIN 28bf18c6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x..|.x. at (1,4)
diff: 
delta:
   (25.3 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask .xx.xx|x..x..|.x..x. at (0,0)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x..|.x. at (1,4)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,5)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i
delta: (2,4)=1  (3,5)=1 
! size mismatch, 1x6 instead of 3x6

TRAIN 28bf18c6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|x.. at (4,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (5,1)
diff:   ^.layer_0.shape.size.i
delta: (4,3)=3  (6,1)=3 
! size mismatch, 1x6 instead of 3x6

TEST 28bf18c6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 631.8 bits (631.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-343] Checking task 28e73c20.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1031.8 = 1040.7
DL output with Mo: L = 9.0 + 49735.2 = 49744.2
DL input+output M: L = 17.9 + 50767.0 = 50784.9

# learning a model for train pairs
2.000	
1.162	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.090	IN  DEF: ^.color=black
1.031	IN  DEF: ^.size=(?,?)
1.012	OUT DEF: ^.size=^.size
1.009	OUT DEF: ^.layer_0.shape.size=^.size
1.004	OUT DEF: ^.layer_0.shape.color=green
1.003	OUT DEF: ^.color=black
1.001	OUT DEF: ^.layer_0.pos=(?,?)
0.997	OUT DEF: ^.layer_0.pos.i=(0)
0.992	OUT DEF: ^.layer_0.pos.j=(0)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color green and mask ? at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 11.7 + 892.8 = 904.5
DL output with Mo: L = 30.4 + 6092.9 = 6123.3
DL input+output M: L = 42.1 + 6985.7 = 7027.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
diff: 
delta:
   (15.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask xxxxxx|.....x|xxxx.x|x.xx.x|x....x|xxxxxx at (0,0)
diff: 
delta:
   (39.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 28e73c20.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
diff: 
delta:
   (16.6 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xxxxxxxx|.......x|xxxxxx.x|x....x.x|x.xx.x.x|x.xxxx.x|x......x|xxxxxxxx at (0,0)
diff: 
delta:
   (67.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 28e73c20.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
diff: 
delta:
   (20.3 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,15) and color green and mask xxxxxxxxxxxxxxx|..............x|xxxxxxxxxxxxx.x|x...........x.x|x.xxxxxxxxx.x.x|x.x.......x.x.x|x.x.xxxxx.x.x.x|x.x.x...x.x.x.x|x.x.x.xxx.x.x.x|x.x.x.....x.x.x|x.x.xxxxxxx.x.x|x.x.........x.x|x.xxxxxxxxxxx.x|x.............x|xxxxxxxxxxxxxxx at (0,0)
diff: 
delta:
   (228.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
diff: 
delta:
! 98 wrong pixels (generated / expected)

TRAIN 28e73c20.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
diff: 
delta:
   (19.4 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,13) and color green and mask xxxxxxxxxxxxx|............x|xxxxxxxxxxx.x|x.........x.x|x.xxxxxxx.x.x|x.x.....x.x.x|x.x.xxx.x.x.x|x.x.x...x.x.x|x.x.xxxxx.x.x|x.x.......x.x|x.xxxxxxxxx.x|x...........x|xxxxxxxxxxxxx at (0,0)
diff: 
delta:
   (172.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
diff: 
delta:
! 72 wrong pixels (generated / expected)

TRAIN 28e73c20.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
diff: 
delta:
   (17.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color green and mask xxxxxxxxxx|.........x|xxxxxxxx.x|x......x.x|x.xxxx.x.x|x.x.xx.x.x|x.x....x.x|x.xxxxxx.x|x........x|xxxxxxxxxx at (0,0)
diff: 
delta:
   (103.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta:
! 40 wrong pixels (generated / expected)

TRAIN 28e73c20.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
diff: 
delta:
! 144 wrong pixels (generated / expected)

TEST 28e73c20.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 6092.9 bits (6092.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-342] Checking task 29623171.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 29736.7 = 29745.7
DL output with Mo: L = 9.0 + 30890.1 = 30899.1
DL input+output M: L = 17.9 + 60626.8 = 60644.8

# learning a model for train pairs
2.000	
1.383	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.646	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.503	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.475	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.456	OUT DEF: ^.size=^.size
0.335	IN  DEF: ^.layer_0.shape.mask=...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.319	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.309	OUT DEF: ^.layer_0=^.layer_0
0.304	IN  DEF: ^.layer_0.shape.color=grey
0.299	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.296	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.292	IN  OBJECT at ^.layer_010: a point with color ? at ?
0.288	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.285	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.281	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.276	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
0.274	OUT DEF: ^.layer_01.shape.mask=Full
0.272	OUT DEF: ^.layer_011.shape.mask=Full
0.270	IN  DEF: ^.color=black
0.269	OUT DEF: ^.color=black
0.267	IN  DEF: ^.size=(?,?)
0.258	IN  DEF: ^.size.i=11
0.249	IN  DEF: ^.size.j=11
0.248	IN  DEF: ^.layer_0.pos=(?,?)
0.243	IN  DEF: ^.layer_0.pos.i=(0)
0.238	IN  DEF: ^.layer_0.pos.j=(0)
0.237	IN  DEF: ^.layer_0.shape.size=(?,?)
0.228	IN  DEF: ^.layer_0.shape.size.i=11
0.219	IN  DEF: ^.layer_0.shape.size.j=11
0.218	IN  DEF: ^.layer_010.pos=(?,?)
0.217	IN  DEF: ^.layer_0111.pos=(?,?)
0.215	IN  DEF: ^.layer_01.pos=(?,?)
0.214	IN  DEF: ^.layer_01.shape.size=(?,?)
0.213	IN  DEF: ^.layer_011111.pos=(?,?)
0.212	IN  DEF: ^.layer_011.pos=(?,?)
0.211	IN  DEF: ^.layer_01111.pos=(?,?)
0.209	IN  DEF: ^.layer_0111111.pos=(?,?)
0.205	IN  DEF: ^.layer_0111111.pos.i=9
0.204	OUT DEF: ^.layer_01.pos=(?,?)
0.199	OUT DEF: ^.layer_01.pos.j=8
0.195	OUT DEF: ^.layer_01.pos.i=^.layer_0111.pos.j - ^.layer_0111111.pos.j
0.194	OUT DEF: ^.layer_01.shape.size=(?,?)
0.189	OUT DEF: ^.layer_01.shape.size.i=3
0.183	OUT DEF: ^.layer_01.shape.size.j=3
0.182	OUT DEF: ^.layer_011.pos=(?,?)
0.177	OUT DEF: ^.layer_011.pos.j=(0)
0.173	OUT DEF: ^.layer_011.pos.i=4
0.172	OUT DEF: ^.layer_011.shape.size=(?,?)
0.167	OUT DEF: ^.layer_011.shape.size.i=3
0.161	OUT DEF: ^.layer_011.shape.size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (3,3) and color ^.layer_01.shape.color and mask Full at (^.layer_0111.pos.j - ^.layer_0111111.pos.j,8)
  _011: a rectangle with size (3,3) and color ? and mask Full at (4,(0))
WHERE (Mi)
a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at ((0),(0))
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (9,?)

DL input  with Mi: L = 316.3 + 4250.0 = 4566.3
DL output with Mo: L = 101.1 + 139.3 = 240.5
DL input+output M: L = 417.4 + 4389.3 = 4806.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color blue at (1,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,6)
  _011: a point with color blue at (1,9)
  _0111: a point with color blue at (5,9)
  _01111: a point with color blue at (8,8)
  _011111: a point with color blue at (9,10)
  _0111111: a point with color blue at (9,1)
diff: 
delta:
   (104.8 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (8,8)
  _011: a rectangle with size (3,3) and color black and mask Full at (4,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color blue at (1,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,6)
  _011: a point with color blue at (1,9)
  _0111: a point with color blue at (5,9)
  _01111: a point with color blue at (8,8)
  _011111: a point with color blue at (9,10)
  _0111111: a point with color blue at (9,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 29623171.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color red at (0,5)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011: a point with color red at (0,8)
  _0111: a point with color red at (1,0)
  _01111: a point with color red at (1,10)
  _011111: a point with color red at (5,6)
  _0111111: a point with color red at (9,0)
diff: 
delta: (6,9)=2  (9,6)=2  (9,10)=2 
   (165.1 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color red and mask Full at (4,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color red at (0,5)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011: a point with color red at (0,8)
  _0111: a point with color red at (1,0)
  _01111: a point with color red at (1,10)
  _011111: a point with color red at (5,6)
  _0111111: a point with color red at (9,0)
diff: 
delta: (6,9)=2  (9,6)=2  (9,10)=2 
! 9 wrong pixels (generated / expected)

TRAIN 29623171.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color green at (0,0)
  _01: a rectangle with size (2,3) and color green and mask xx.|..x at (9,8)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,9)
  _01111: a point with color green at (5,1)
  _011111: a point with color green at (5,5)
  _0111111: a point with color green at (9,1)
diff: 
delta: (6,4)=3  (9,4)=3 
   (155.1 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Full at (8,8)
  _011: a rectangle with size (3,3) and color black and mask Full at (4,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color green at (0,0)
  _01: a rectangle with size (2,3) and color green and mask xx.|..x at (9,8)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,9)
  _01111: a point with color green at (5,1)
  _011111: a point with color green at (5,5)
  _0111111: a point with color green at (9,1)
diff: 
delta: (6,4)=3  (9,4)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color green at (0,0)
  _01: a rectangle with size (2,3) and color green and mask xx.|..x at (9,8)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,9)
  _01111: a point with color green at (5,1)
  _011111: a point with color green at (5,5)
  _0111111: a point with color green at (9,4)
diff: 
delta: (6,4)=3  (9,1)=3 
! 24 wrong pixels (generated / expected)

TRAIN 29623171.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _010: a point with color yellow at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|..x|xx. at (8,4)
  _011: a point with color yellow at (0,1)
  _0111: a point with color yellow at (1,1)
  _01111: a point with color yellow at (1,6)
  _011111: a point with color yellow at (1,8)
  _0111111: a point with color yellow at (2,0)
diff:   ^.layer_0111111.pos.i
delta: (1,9)=4  (2,9)=4  (4,9)=4  (5,0)=4  (5,5)=4  (5,8)=4  (5,10)=4  (8,10)=4  (9,0)=4  (9,9)=4 
! 33 wrong pixels (generated / expected)

TEST 29623171.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.6 sec (25.6 sec/task)
bits-train-error = 139.3 bits (139.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-341] Checking task 29c11459.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1164.5 = 1173.5
DL output with Mo: L = 9.0 + 4490.8 = 4499.8
DL input+output M: L = 17.9 + 5655.3 = 5673.3

# learning a model for train pairs
2.000	
1.718	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.427	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.349	OUT DEF: ^.size=^.size
1.278	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.193	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.149	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.123	IN  DEF: ^.color=black
1.100	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.079	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.059	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.038	OUT DEF: ^.layer_011.shape.color=grey
1.020	IN  DEF: ^.size=(?,?)
0.867	IN  DEF: ^.size.j=11
0.752	IN  DEF: ^.size.i=5
0.733	IN  DEF: ^.layer_0.pos=(?,?)
0.652	IN  DEF: ^.layer_0.pos.j=(0)
0.633	IN  DEF: ^.layer_01.pos=(?,?)
0.553	IN  DEF: ^.layer_01.pos.j=10
0.543	OUT DEF: ^.layer_0.shape.mask=Full
0.532	OUT DEF: ^.layer_01.shape.mask=Full
0.525	OUT DEF: ^.color=black
0.520	OUT DEF: ^.layer_0.shape.size=(?,?)
0.490	OUT DEF: ^.layer_0.shape.size.j=^.size.i
0.479	OUT DEF: ^.layer_0.shape.size.i=1
0.475	OUT DEF: ^.layer_01.pos=(?,?)
0.454	OUT DEF: ^.layer_01.pos.j=6
0.438	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.433	OUT DEF: ^.layer_01.shape.size=(?,?)
0.403	OUT DEF: ^.layer_01.shape.size.j=^.size.i
0.392	OUT DEF: ^.layer_01.shape.size.i=1
0.387	OUT DEF: ^.layer_011.pos=(?,?)
0.367	OUT DEF: ^.layer_011.pos.j=5
0.351	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.i) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (1,^.size.i) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,6)
  _011: a point with color grey at (^.layer_0.pos.i,5)
WHERE (Mi)
a background with size (5,11) and color black and layers
  _0: a point with color ? at (?,(0))
  _01: a point with color ? at (?,10)

DL input  with Mi: L = 58.3 + 331.5 = 389.8
DL output with Mo: L = 83.6 + 0.0 = 83.6
DL input+output M: L = 141.9 + 331.5 = 473.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,11) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color red at (1,10)
diff: 
delta:
   (16.6 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (1,6)
  _011: a point with color grey at (1,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color red at (1,10)
diff: 
delta:
correct output grid

TRAIN 29c11459.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,11) and color black and layers
  _0: a point with color green at (3,0)
  _01: a point with color orange at (3,10)
diff: 
delta:
   (16.6 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (3,0)
  _01: a rectangle with size (1,5) and color orange and mask Full at (3,6)
  _011: a point with color grey at (3,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color green at (3,0)
  _01: a point with color orange at (3,10)
diff: 
delta:
correct output grid

TRAIN 29c11459.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color yellow at (1,0)
  _01: a point with color cyan at (1,10)
diff: 
delta: (4,0)=6  (4,10)=9#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,11) and color black and layers
  _0: a point with color yellow at (1,0)
  _01: a point with color brown at (4,10)
diff: 
delta: (1,10)=8  (4,0)=6 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,11) and color black and layers
  _0: a point with color pink at (4,0)
  _01: a point with color cyan at (1,10)
diff: 
delta: (1,0)=4  (4,10)=9#
! 11 wrong pixels (generated / expected)

TEST 29c11459.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-340] Checking task 29ec7d0e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 182038.5 = 182047.4
DL output with Mo: L = 9.0 + 169674.2 = 169683.2
DL input+output M: L = 17.9 + 351712.7 = 351730.6

# learning a model for train pairs
2.000	
1.918	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.839	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.832	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.821	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 167753.5 = 167782.4
DL output with Mo: L = 66.8 + 152601.7 = 152668.5
DL input+output M: L = 95.7 + 320355.3 = 320450.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,18) and color grey and layers
  _0: a rectangle with size (18,18) and color blue and mask xxx..xxxxxxxxxxxxx|x....x....x....x..|x....x.........x..|x....x.........x..|x....x....x....x..|xxxxxx..xxx...xxxx|x....x....x....x..|x....x....x....x..|x....x....x....x..|x....x....x....x..|....xxxxxxxxxxxxxx|.....x....x....x..|.....x....x....x..|x....x....x....x..|x....x....x....x..|xxxxxxxxxxxxxxxxxx|x....x....x....x..|x....x....x....x.. at (0,0)
diff: 
delta: (0,3)=0  (0,4)=0  (1,1)=2  (1,2)=3  (1,3)=0  (1,4)=0  (1,6)=2  (1,7)=3  (1,8)=4  (1,11)=2  (1,12)=3  (1,13)=4  (1,16)=2  (1,17)=3  (2,1)=3  (2,3)=0  (2,4)=0  (2,6)=3  (2,8)=2  (2,9)=4  (2,10)=0  (2,11)=0  (2,13)=2  (2,14)=4  (2,16)=3  (3,1)=4  (3,2)=2  (3,4)=3  (3,6)=4  (3,7)=2  (3,9)=3  (3,10)=0  (3,11)=0  (3,12)=2  (3,14)=3  (3,16)=4  (3,17)=2  (4,2)=4  (4,3)=3  (4,4)=2  (4,6)=0  (4,7)=0  (4,8)=3  (4,9)=2  (4,12)=4  (4,13)=3  (4,14)=2  (4,17)=4  (5,6)=0  (5,7)=0  (5,11)=0  (5,12)=0  (5,13)=0  (6,1)=2  (6,2)=3  (6,3)=4  (6,6)=2  (6,7)=3  (6,8)=4  (6,11)=0  (6,12)=0  (6,13)=0  (6,16)=2  (6,17)=3  (7,1)=3  (7,3)=2  (7,4)=4  (7,6)=3  (7,8)=2  (7,9)=4  (7,11)=3  (7,13)=2  (7,14)=4  (7,16)=3  (8,1)=4  (8,2)=2  (8,4)=3  (8,6)=4  (8,7)=2  (8,9)=3  (8,11)=4  (8,12)=2  (8,14)=3  (8,16)=4  (8,17)=2  (9,2)=4  (9,3)=3  (9,4)=2  (9,7)=4  (9,8)=3  (9,9)=2  (9,12)=4  (9,13)=3  (9,14)=2  (9,17)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,6)=2  (11,7)=3  (11,8)=4  (11,11)=2  (11,12)=3  (11,13)=4  (11,16)=2  (11,17)=3  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=4  (12,6)=3  (12,8)=2  (12,9)=4  (12,11)=3  (12,13)=2  (12,14)=4  (12,16)=3  (13,1)=4  (13,2)=2  (13,4)=3  (13,6)=4  (13,7)=2  (13,9)=3  (13,11)=4  (13,12)=2  (13,14)=3  (13,16)=4  (13,17)=2  (14,2)=4  (14,3)=3  (14,4)=2  (14,7)=4  (14,8)=3  (14,9)=2  (14,12)=4  (14,13)=3  (14,14)=2  (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,6)=2  (16,7)=3  (16,8)=4  (16,11)=2  (16,12)=3  (16,13)=4  (16,16)=2  (16,17)=3  (17,1)=3  (17,3)=2  (17,4)=4  (17,6)=3  (17,8)=2  (17,9)=4  (17,11)=3  (17,13)=2  (17,14)=4  (17,16)=3 
   (3809.9 bits)
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x....x....x....x..|x....x....x....x..|x....x....x....x..|x....x....x....x..|xxxxxxxxxxxxxxxxxx|x....x....x....x..|x....x....x....x..|x....x....x....x..|x....x....x....x..|xxxxxxxxxxxxxxxxxx|x....x....x....x..|x....x....x....x..|x....x....x....x..|x....x....x....x..|xxxxxxxxxxxxxxxxxx|x....x....x....x..|x....x....x....x.. at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,3)
  _011: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,8)
diff: 
delta: (1,1)=2  (1,4)=5# (1,6)=2  (1,9)=5# (1,11)=2  (1,13)=4  (1,14)=5# (1,16)=2  (2,2)=5# (2,3)=2  (2,7)=5# (2,8)=2  (2,12)=5# (2,13)=2  (2,14)=4  (2,17)=5# (3,1)=4  (3,2)=2  (3,3)=5# (3,6)=4  (3,7)=2  (3,8)=5# (3,11)=4  (3,12)=2  (3,13)=5# (3,16)=4  (3,17)=2  (4,1)=5# (4,2)=4  (4,4)=2  (4,6)=5# (4,7)=4  (4,9)=2  (4,11)=5# (4,12)=4  (4,14)=2  (4,16)=5# (4,17)=4  (6,1)=2  (6,3)=4  (6,4)=5# (6,6)=2  (6,8)=4  (6,9)=5# (6,11)=2  (6,13)=4  (6,14)=5# (6,16)=2  (7,2)=5# (7,3)=2  (7,4)=4  (7,7)=5# (7,8)=2  (7,9)=4  (7,12)=5# (7,13)=2  (7,14)=4  (7,17)=5# (8,1)=4  (8,2)=2  (8,3)=5# (8,6)=4  (8,7)=2  (8,8)=5# (8,11)=4  (8,12)=2  (8,13)=5# (8,16)=4  (8,17)=2  (9,1)=5# (9,2)=4  (9,4)=2  (9,6)=5# (9,7)=4  (9,9)=2  (9,11)=5# (9,12)=4  (9,14)=2  (9,16)=5# (9,17)=4  (11,1)=2  (11,3)=4  (11,4)=5# (11,6)=2  (11,8)=4  (11,9)=5# (11,11)=2  (11,13)=4  (11,14)=5# (11,16)=2  (12,2)=5# (12,3)=2  (12,4)=4  (12,7)=5# (12,8)=2  (12,9)=4  (12,12)=5# (12,13)=2  (12,14)=4  (12,17)=5# (13,1)=4  (13,2)=2  (13,3)=5# (13,6)=4  (13,7)=2  (13,8)=5# (13,11)=4  (13,12)=2  (13,13)=5# (13,16)=4  (13,17)=2  (14,1)=5# (14,2)=4  (14,4)=2  (14,6)=5# (14,7)=4  (14,9)=2  (14,11)=5# (14,12)=4  (14,14)=2  (14,16)=5# (14,17)=4  (16,1)=2  (16,3)=4  (16,4)=5# (16,6)=2  (16,8)=4  (16,9)=5# (16,11)=2  (16,13)=4  (16,14)=5# (16,16)=2  (17,2)=5# (17,3)=2  (17,4)=4  (17,7)=5# (17,8)=2  (17,9)=4  (17,12)=5# (17,13)=2  (17,14)=4  (17,17)=5#
   (3403.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color grey and layers
  _0: a rectangle with size (18,18) and color blue and mask xxx..xxxxxxxxxxxxx|x....x....x....x..|x....x.........x..|x....x.........x..|x....x....x....x..|xxxxxx..xxx...xxxx|x....x....x....x..|x....x....x....x..|x....x....x....x..|x....x....x....x..|....xxxxxxxxxxxxxx|.....x....x....x..|.....x....x....x..|x....x....x....x..|x....x....x....x..|xxxxxxxxxxxxxxxxxx|x....x....x....x..|x....x....x....x.. at (0,0)
diff: 
delta: (0,3)=0  (0,4)=0  (1,1)=2  (1,2)=3  (1,3)=0  (1,4)=0  (1,6)=2  (1,7)=3  (1,8)=4  (1,11)=2  (1,12)=3  (1,13)=4  (1,16)=2  (1,17)=3  (2,1)=3  (2,3)=0  (2,4)=0  (2,6)=3  (2,8)=2  (2,9)=4  (2,10)=0  (2,11)=0  (2,13)=2  (2,14)=4  (2,16)=3  (3,1)=4  (3,2)=2  (3,4)=3  (3,6)=4  (3,7)=2  (3,9)=3  (3,10)=0  (3,11)=0  (3,12)=2  (3,14)=3  (3,16)=4  (3,17)=2  (4,2)=4  (4,3)=3  (4,4)=2  (4,6)=0  (4,7)=0  (4,8)=3  (4,9)=2  (4,12)=4  (4,13)=3  (4,14)=2  (4,17)=4  (5,6)=0  (5,7)=0  (5,11)=0  (5,12)=0  (5,13)=0  (6,1)=2  (6,2)=3  (6,3)=4  (6,6)=2  (6,7)=3  (6,8)=4  (6,11)=0  (6,12)=0  (6,13)=0  (6,16)=2  (6,17)=3  (7,1)=3  (7,3)=2  (7,4)=4  (7,6)=3  (7,8)=2  (7,9)=4  (7,11)=3  (7,13)=2  (7,14)=4  (7,16)=3  (8,1)=4  (8,2)=2  (8,4)=3  (8,6)=4  (8,7)=2  (8,9)=3  (8,11)=4  (8,12)=2  (8,14)=3  (8,16)=4  (8,17)=2  (9,2)=4  (9,3)=3  (9,4)=2  (9,7)=4  (9,8)=3  (9,9)=2  (9,12)=4  (9,13)=3  (9,14)=2  (9,17)=4  (10,0)=0  (10,1)=0  (10,2)=0  (10,3)=0  (11,0)=0  (11,1)=0  (11,2)=0  (11,3)=0  (11,6)=2  (11,7)=3  (11,8)=4  (11,11)=2  (11,12)=3  (11,13)=4  (11,16)=2  (11,17)=3  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=0  (12,4)=4  (12,6)=3  (12,8)=2  (12,9)=4  (12,11)=3  (12,13)=2  (12,14)=4  (12,16)=3  (13,1)=4  (13,2)=2  (13,4)=3  (13,6)=4  (13,7)=2  (13,9)=3  (13,11)=4  (13,12)=2  (13,14)=3  (13,16)=4  (13,17)=2  (14,2)=4  (14,3)=3  (14,4)=2  (14,7)=4  (14,8)=3  (14,9)=2  (14,12)=4  (14,13)=3  (14,14)=2  (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,6)=2  (16,7)=3  (16,8)=4  (16,11)=2  (16,12)=3  (16,13)=4  (16,16)=2  (16,17)=3  (17,1)=3  (17,3)=2  (17,4)=4  (17,6)=3  (17,8)=2  (17,9)=4  (17,11)=3  (17,13)=2  (17,14)=4  (17,16)=3 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (1,17) and color yellow and mask Full at (9,1)
diff: 
delta: (0,7)=0  (0,8)=0  (0,9)=0  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,5)=4  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,4)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,3)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (7,1)=2  (7,2)=3  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,2)=1  (9,4)=1  (9,6)=1  (9,8)=1  (9,10)=1  (9,12)=1  (9,14)=1  (9,16)=1  (10,1)=5# (10,2)=3  (10,4)=5# (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=3  (11,11)=2  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=3  (11,17)=2  (12,7)=0  (12,8)=0  (12,9)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,1)=2  (13,2)=3  (13,3)=4  (13,4)=5# (13,5)=6  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=5# (13,11)=6  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,1)=5# (16,2)=3  (16,4)=5# (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
   (4404.1 bits)
data: a background with size (18,18) and color grey and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|xxxxxxxxxxxxxxxxxx|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|xxxxxxxxxxxxxxxxxx|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|x.....x.....x.....|x.....x.....x..... at (0,0)
  _01: a rectangle with size (1,17) and color yellow and mask Full at (3,1)
  _011: a rectangle with size (1,17) and color yellow and mask Full at (9,1)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,7)=2  (1,8)=3  (1,9)=4  (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,17)=6  (2,1)=3  (2,3)=1  (2,4)=3  (2,7)=3  (2,9)=1  (2,10)=3  (2,13)=3  (2,15)=1  (2,16)=3  (3,2)=1  (3,4)=1  (3,8)=1  (3,10)=1  (3,14)=1  (3,16)=1  (4,2)=3  (4,3)=1  (4,5)=3  (4,8)=3  (4,9)=1  (4,11)=3  (4,14)=3  (4,15)=1  (4,17)=3  (5,1)=6  (5,3)=4  (5,4)=3  (5,5)=2  (5,7)=6  (5,9)=4  (5,10)=3  (5,11)=2  (5,13)=6  (5,15)=4  (5,16)=3  (5,17)=2  (7,1)=2  (7,2)=3  (7,3)=4  (7,5)=6  (7,7)=2  (7,8)=3  (7,9)=4  (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,17)=6  (8,1)=3  (8,3)=1  (8,4)=3  (8,7)=3  (8,9)=1  (8,10)=3  (8,13)=3  (8,15)=1  (8,16)=3  (9,2)=1  (9,4)=1  (9,8)=1  (9,10)=1  (9,14)=1  (9,16)=1  (10,2)=3  (10,3)=1  (10,5)=3  (10,8)=3  (10,9)=1  (10,11)=3  (10,14)=3  (10,15)=1  (10,17)=3  (11,1)=6  (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=6  (11,9)=4  (11,10)=3  (11,11)=2  (11,13)=6  (11,15)=4  (11,16)=3  (11,17)=2  (13,1)=2  (13,2)=3  (13,3)=4  (13,5)=6  (13,7)=2  (13,8)=3  (13,9)=4  (13,11)=6  (13,13)=2  (13,14)=3  (13,15)=4  (13,17)=6  (14,1)=3  (14,3)=1  (14,4)=3  (14,7)=3  (14,9)=1  (14,10)=3  (14,13)=3  (14,15)=1  (14,16)=3  (15,1)=4  (15,2)=1  (15,3)=4  (15,4)=1  (15,5)=4  (15,7)=4  (15,8)=1  (15,9)=4  (15,10)=1  (15,11)=4  (15,13)=4  (15,14)=1  (15,15)=4  (15,16)=1  (15,17)=4  (16,2)=3  (16,3)=1  (16,5)=3  (16,8)=3  (16,9)=1  (16,11)=3  (16,14)=3  (16,15)=1  (16,17)=3  (17,1)=6  (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,15)=4  (17,16)=3  (17,17)=2 
   (3629.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (1,17) and color yellow and mask Full at (9,1)
diff: 
delta: (0,7)=0  (0,8)=0  (0,9)=0  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,5)=4  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,4)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,3)=0  (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (7,1)=2  (7,2)=3  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,2)=1  (9,4)=1  (9,6)=1  (9,8)=1  (9,10)=1  (9,12)=1  (9,14)=1  (9,16)=1  (10,1)=5# (10,2)=3  (10,4)=5# (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=3  (11,11)=2  (11,12)=0  (11,13)=0  (11,14)=0  (11,15)=0  (11,16)=3  (11,17)=2  (12,7)=0  (12,8)=0  (12,9)=0  (12,12)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,1)=2  (13,2)=3  (13,3)=4  (13,4)=5# (13,5)=6  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=5# (13,11)=6  (13,12)=0  (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,1)=5# (16,2)=3  (16,4)=5# (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x......x......x...|x......x..........|x.................|x.................|x.................|x.................|x..xxxxxxxxxx.....|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|xxxxxxxxxxxxxxxxxx|x......x......x...|x......x......x...|x......x......x... at (0,0)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,8)=2  (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,16)=3  (1,17)=4  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,6)=6  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,3)=3  (3,4)=6  (3,5)=2  (3,16)=7# (3,17)=3  (4,1)=5# (4,2)=2  (4,3)=6  (4,4)=3  (4,5)=7# (4,16)=2  (4,17)=6  (5,3)=2  (5,4)=7# (5,5)=5# (5,10)=2  (5,11)=7# (5,16)=4  (5,17)=2  (6,3)=5# (6,4)=4  (6,5)=3  (6,10)=5# (6,11)=4  (6,12)=3  (6,16)=6  (6,17)=5# (7,16)=1  (7,17)=1  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
   (4339.3 bits)
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|xxxxxxxxxxxxxxxxxx|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|xxxxxxxxxxxxxxxxxx|x......x......x...|x......x......x...|x......x......x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (1,5)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (1,12)
diff: 
delta: (1,1)=2  (1,3)=4  (1,4)=5# (1,6)=7# (1,8)=2  (1,10)=4  (1,11)=5# (1,13)=7# (1,15)=2  (1,17)=4  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,9)=5# (2,10)=7# (2,11)=2  (2,12)=4  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,4)=6  (3,5)=2  (3,6)=5# (3,8)=4  (3,9)=7# (3,11)=6  (3,12)=2  (3,13)=5# (3,15)=4  (3,16)=7# (4,1)=5# (4,2)=2  (4,3)=6  (4,5)=7# (4,6)=4  (4,8)=5# (4,9)=2  (4,10)=6  (4,12)=7# (4,13)=4  (4,15)=5# (4,16)=2  (4,17)=6  (5,1)=6  (5,2)=4  (5,3)=2  (5,4)=7# (5,5)=5# (5,8)=6  (5,9)=4  (5,10)=2  (5,11)=7# (5,12)=5# (5,15)=6  (5,16)=4  (5,17)=2  (6,1)=7# (6,2)=6  (6,3)=5# (6,4)=4  (6,6)=2  (6,8)=7# (6,9)=6  (6,10)=5# (6,11)=4  (6,13)=2  (6,15)=7# (6,16)=6  (6,17)=5# (8,1)=2  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,17)=4  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (11,1)=5# (11,2)=2  (11,3)=6  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,17)=4  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7#
   (4227.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x......x......x...|x......x..........|x.................|x.................|x.................|x.................|x..xxxxxxxxxx.....|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|x......x......x...|xxxxxxxxxxxxxxxxxx|x......x......x...|x......x......x...|x......x......x... at (0,0)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,8)=2  (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,16)=3  (1,17)=4  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,6)=6  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,3)=3  (3,4)=6  (3,5)=2  (3,16)=7# (3,17)=3  (4,1)=5# (4,2)=2  (4,3)=6  (4,4)=3  (4,5)=7# (4,16)=2  (4,17)=6  (5,3)=2  (5,4)=7# (5,5)=5# (5,10)=2  (5,11)=7# (5,16)=4  (5,17)=2  (6,3)=5# (6,4)=4  (6,5)=3  (6,10)=5# (6,11)=4  (6,12)=3  (6,16)=6  (6,17)=5# (7,16)=1  (7,17)=1  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (18,18) and color grey and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|xxx.....xxxxxxxxxx|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|xxxx..xxxxxxxxxxxx|x.......x.......x. at (0,0)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,3)=7# (2,4)=1  (2,5)=3  (2,7)=7# (2,9)=3  (2,11)=7# (2,12)=1  (2,13)=3  (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,2)=1  (4,4)=1  (4,6)=1  (4,10)=1  (4,12)=1  (4,14)=0  (4,15)=0  (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,3)=3  (6,4)=1  (6,5)=7# (6,7)=3  (6,9)=7# (6,11)=3  (6,12)=1  (6,13)=7# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (9,1)=2  (9,2)=3  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=2  (9,10)=3  (9,11)=4  (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,3)=7# (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,9)=3  (10,11)=7# (10,12)=1  (10,13)=3  (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,2)=1  (12,4)=1  (12,6)=1  (12,10)=1  (12,12)=1  (12,14)=1  (13,1)=6  (13,2)=3  (13,3)=8  (13,5)=2  (13,6)=0  (13,7)=0  (13,9)=6  (13,10)=3  (13,11)=8  (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,3)=3  (14,4)=1  (14,5)=7# (14,6)=0  (14,7)=0  (14,9)=7# (14,11)=3  (14,12)=1  (14,13)=7# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=0  (15,5)=0  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,4)=0  (16,5)=0  (17,1)=2  (17,2)=3  (17,3)=4  (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
   (4222.1 bits)
data: a background with size (18,18) and color orange and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|xxxxxxxxxxxxxxxxxx|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|xxxxxxxxxxxxxxxxxx|x.......x.......x. at (0,0)
  _01: a rectangle with size (1,17) and color grey and mask Full at (4,1)
  _011: a rectangle with size (1,17) and color grey and mask Full at (12,1)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,12)=5# (1,13)=6  (1,15)=8  (1,17)=2  (2,1)=3  (2,2)=5# (2,4)=1  (2,5)=3  (2,6)=5# (2,9)=3  (2,10)=5# (2,12)=1  (2,13)=3  (2,14)=5# (2,17)=3  (3,1)=4  (3,3)=2  (3,4)=5# (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,11)=2  (3,12)=5# (3,13)=8  (3,14)=3  (3,15)=6  (3,17)=4  (4,2)=1  (4,4)=1  (4,6)=1  (4,10)=1  (4,12)=1  (4,14)=1  (5,1)=6  (5,2)=3  (5,3)=8  (5,4)=5# (5,5)=2  (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,12)=5# (5,13)=2  (5,15)=4  (5,17)=6  (6,2)=5# (6,3)=3  (6,4)=1  (6,6)=5# (6,7)=3  (6,10)=5# (6,11)=3  (6,12)=1  (6,14)=5# (6,15)=3  (7,1)=8  (7,3)=6  (7,4)=5# (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,11)=6  (7,12)=5# (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (9,1)=2  (9,2)=3  (9,3)=4  (9,4)=5# (9,5)=6  (9,7)=8  (9,9)=2  (9,10)=3  (9,11)=4  (9,12)=5# (9,13)=6  (9,15)=8  (9,17)=2  (10,1)=3  (10,2)=5# (10,4)=1  (10,5)=3  (10,6)=5# (10,9)=3  (10,10)=5# (10,12)=1  (10,13)=3  (10,14)=5# (10,17)=3  (11,1)=4  (11,3)=2  (11,4)=5# (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,11)=2  (11,12)=5# (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,2)=1  (12,4)=1  (12,6)=1  (12,10)=1  (12,12)=1  (12,14)=1  (13,1)=6  (13,2)=3  (13,3)=8  (13,4)=5# (13,5)=2  (13,7)=4  (13,9)=6  (13,10)=3  (13,11)=8  (13,12)=5# (13,13)=2  (13,15)=4  (13,17)=6  (14,2)=5# (14,3)=3  (14,4)=1  (14,6)=5# (14,7)=3  (14,10)=5# (14,11)=3  (14,12)=1  (14,14)=5# (14,15)=3  (15,1)=8  (15,3)=6  (15,4)=5# (15,5)=4  (15,6)=3  (15,7)=2  (15,9)=8  (15,11)=6  (15,12)=5# (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (17,1)=2  (17,2)=3  (17,3)=4  (17,4)=5# (17,5)=6  (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,12)=5# (17,13)=6  (17,15)=8  (17,17)=2 
   (4000.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color grey and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxxxxxxx|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|xxx.....xxxxxxxxxx|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|x.......x.......x.|xxxx..xxxxxxxxxxxx|x.......x.......x. at (0,0)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,3)=7# (2,4)=1  (2,5)=3  (2,7)=7# (2,9)=3  (2,11)=7# (2,12)=1  (2,13)=3  (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,2)=1  (4,4)=1  (4,6)=1  (4,10)=1  (4,12)=1  (4,14)=0  (4,15)=0  (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,3)=3  (6,4)=1  (6,5)=7# (6,7)=3  (6,9)=7# (6,11)=3  (6,12)=1  (6,13)=7# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,3)=0  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (9,1)=2  (9,2)=3  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,7)=0  (9,9)=2  (9,10)=3  (9,11)=4  (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,3)=7# (10,4)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,9)=3  (10,11)=7# (10,12)=1  (10,13)=3  (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,2)=1  (12,4)=1  (12,6)=1  (12,10)=1  (12,12)=1  (12,14)=1  (13,1)=6  (13,2)=3  (13,3)=8  (13,5)=2  (13,6)=0  (13,7)=0  (13,9)=6  (13,10)=3  (13,11)=8  (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,3)=3  (14,4)=1  (14,5)=7# (14,6)=0  (14,7)=0  (14,9)=7# (14,11)=3  (14,12)=1  (14,13)=7# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=0  (15,5)=0  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,4)=0  (16,5)=0  (17,1)=2  (17,2)=3  (17,3)=4  (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
! size mismatch, 10x10 instead of 18x18

TRAIN 29ec7d0e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color blue and mask xxxxxxxxxxxxx.....|x........x........|x........x........|x........x........|x........x........|x........x........|x.................|x.................|x.................|xxxxxxxxxxxxxxxxxx|x........x........|x........x........|x........x........|x........x........|x........x........|x........x........|x........x........|x........x........ at (0,0)
diff: 
delta: (0,16)=1  (0,17)=1  (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=8  (1,8)=9# (1,10)=2  (1,11)=3  (1,12)=4  (1,16)=8  (1,17)=9# (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=9# (2,5)=2  (2,6)=4  (2,7)=6  (2,8)=8  (2,10)=3  (2,11)=5# (2,12)=7# (2,16)=6  (2,17)=8  (3,1)=4  (3,2)=7# (3,3)=1  (3,4)=4  (3,5)=7# (3,6)=1  (3,7)=4  (3,8)=7# (3,10)=4  (3,11)=7# (3,12)=1  (3,13)=4  (3,14)=7# (3,15)=1  (3,16)=4  (3,17)=7# (4,1)=5# (4,2)=9# (4,3)=4  (4,4)=8  (4,5)=3  (4,6)=7# (4,7)=2  (4,8)=6  (4,10)=5# (4,11)=9# (4,12)=4  (4,13)=8  (4,14)=3  (4,15)=7# (4,16)=2  (4,17)=6  (5,1)=6  (5,2)=2  (5,6)=4  (5,7)=9# (5,8)=5# (5,10)=6  (5,11)=2  (5,12)=7# (5,16)=9# (5,17)=5# (6,1)=7# (6,2)=4  (6,6)=1  (6,7)=7# (6,8)=4  (6,16)=7# (6,17)=4  (7,1)=8  (7,2)=6  (7,6)=7# (7,7)=5# (7,8)=3  (7,13)=2  (7,14)=9# (7,15)=7# (7,16)=5# (7,17)=3  (8,1)=9# (8,2)=8  (8,6)=4  (8,7)=3  (8,8)=2  (8,13)=6  (8,14)=5# (8,15)=4  (8,16)=3  (8,17)=2  (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,5)=6  (10,6)=7# (10,7)=8  (10,8)=9# (10,10)=2  (10,11)=3  (10,12)=4  (10,13)=5# (10,14)=6  (10,15)=7# (10,16)=8  (10,17)=9# (11,1)=3  (11,2)=5# (11,3)=7# (11,4)=9# (11,5)=2  (11,6)=4  (11,7)=6  (11,8)=8  (11,10)=3  (11,11)=5# (11,12)=7# (11,13)=9# (11,14)=2  (11,15)=4  (11,16)=6  (11,17)=8  (12,1)=4  (12,2)=7# (12,3)=1  (12,4)=4  (12,5)=7# (12,6)=1  (12,7)=4  (12,8)=7# (12,10)=4  (12,11)=7# (12,12)=1  (12,13)=4  (12,14)=7# (12,15)=1  (12,16)=4  (12,17)=7# (13,4)=8  (13,5)=3  (13,6)=7# (13,7)=2  (13,8)=6  (13,10)=5# (13,11)=9# (13,12)=4  (13,13)=8  (13,14)=3  (13,15)=7# (13,16)=2  (13,17)=6  (14,4)=3  (14,5)=8  (14,6)=4  (14,7)=9# (14,8)=5# (14,10)=6  (14,11)=2  (14,12)=7# (14,13)=3  (14,14)=8  (14,15)=4  (14,16)=9# (14,17)=5# (15,4)=7# (15,5)=4  (15,6)=1  (15,7)=7# (15,8)=4  (15,10)=7# (15,11)=4  (15,12)=1  (15,13)=7# (15,14)=4  (15,15)=1  (15,16)=7# (15,17)=4  (16,4)=2  (16,5)=9# (16,6)=7# (16,7)=5# (16,8)=3  (16,10)=8  (16,11)=6  (16,12)=4  (16,13)=2  (16,14)=9# (16,15)=7# (16,16)=5# (16,17)=3  (17,1)=9# (17,2)=8  (17,3)=7# (17,4)=6  (17,5)=5# (17,6)=4  (17,7)=3  (17,8)=2  (17,10)=9# (17,11)=8  (17,12)=7# (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
! size mismatch, 10x10 instead of 18x18

TEST 29ec7d0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.6 sec (29.6 sec/task)
bits-train-error = 152601.7 bits (152601.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-339] Checking task 2bcee788.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5779.6 = 5788.6
DL output with Mo: L = 9.0 + 7771.8 = 7780.8
DL input+output M: L = 17.9 + 13551.4 = 13569.3

# learning a model for train pairs
2.000	
1.379	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.063	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.959	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.860	OUT DEF: ^.size=^.size
0.820	OUT DEF: ^.color=green
0.788	IN  DEF: ^.layer_01.shape.color=red
0.764	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.748	IN  DEF: ^.layer_01.shape.mask=Full
0.737	IN  DEF: ^.color=black
0.729	IN  DEF: ^.size=(?,?)
0.668	IN  DEF: ^.size.i=10
0.607	IN  DEF: ^.size.j=10
0.599	IN  DEF: ^.layer_01.pos=(?,?)
0.590	IN  DEF: ^.layer_0.pos=(?,?)
0.582	IN  DEF: ^.layer_0.shape.size=(?,?)
0.574	IN  DEF: ^.layer_01.shape.size=(?,?)
0.568	OUT DEF: ^.layer_0.pos=(?,?)
0.561	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 81.0 + 1992.8 = 2073.8
DL output with Mo: L = 41.9 + 1538.1 = 1580.0
DL input+output M: L = 122.8 + 3530.9 = 3653.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (3,5)
diff: 
delta:
   (54.1 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (3,6) and color yellow and mask ..xx..|xxxxxx|..xx.. at (3,2)
diff: 
delta:
   (43.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (3,5)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (3,5)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,3)
diff: 
delta:
   (52.9 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (6,3) and color pink and mask .xx|.x.|xx.|xx.|.x.|.xx at (1,3)
diff: 
delta:
   (43.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (4,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,3)
diff: 
delta:
   (45.6 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (2,4) and color orange and mask .xx.|xxxx at (4,2)
diff: 
delta:
   (31.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (4,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 2bcee788.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,5)
diff: 
delta:
   (46.7 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|..x|..x|xxx at (4,3)
diff: 
delta:
   (36.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (6,5)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 12 wrong pixels (generated / expected)

TRAIN 2bcee788.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|xx|.x at (3,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (4,6)
  _01: a rectangle with size (3,2) and color blue and mask x.|xx|.x at (3,4)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 12 wrong pixels (generated / expected)

TEST 2bcee788.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 1538.1 bits (1538.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-338] Checking task 2bee17df.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 35291.9 = 35300.9
DL output with Mo: L = 9.0 + 49719.4 = 49728.4
DL input+output M: L = 17.9 + 85011.3 = 85029.2

# learning a model for train pairs
2.000	
1.602	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.236	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.892	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.593	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.363	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.351	OUT DEF: ^.size=^.size
0.339	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.332	OUT DEF: ^.layer_0=^.layer_0
0.326	OUT DEF: ^.layer_01=^.layer_01
0.322	IN  DEF: ^.layer_0.shape.color=red
0.318	IN  DEF: ^.layer_01.shape.color=cyan
0.315	OUT DEF: ^.layer_011.shape.color=green
0.312	OUT OBJECT at ^.layer_0110: a rectangle with size ? and color ? and mask ? at ?
0.308	OUT DEF: ^.layer_0110.shape.color=green
0.307	OUT DEF: ^.layer_0110.shape.mask=Full
0.305	OUT DEF: ^.layer_011.shape.mask=Full
0.304	OUT DEF: ^.layer_0111.shape.mask=Full
0.302	IN  DEF: ^.color=black
0.301	IN  DEF: ^.size=(?,?)
0.300	IN  DEF: ^.layer_0.pos=(?,?)
0.299	IN  DEF: ^.layer_0.shape.size=(?,?)
0.298	IN  DEF: ^.layer_01.pos=(?,?)
0.294	IN  DEF: ^.layer_01.pos.j=(0)
0.293	IN  DEF: ^.layer_01.shape.size=(?,?)
0.292	OUT DEF: ^.color=black
0.292	OUT DEF: ^.layer_0110.pos=(?,?)
0.289	OUT DEF: ^.layer_0110.pos.i=1
0.286	OUT DEF: ^.layer_0110.pos.j=^.layer_0.pos.i + 3
0.286	OUT DEF: ^.layer_0110.shape.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _0110: a rectangle with size (?,?) and color green and mask Full at (1,^.layer_0.pos.i + 3)
  _011: a rectangle with size ? and color green and mask Full at ?
  _0111: a rectangle with size ? and color ? and mask Full at ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,(0))

DL input  with Mi: L = 72.5 + 8619.3 = 8691.8
DL output with Mo: L = 97.6 + 1858.1 = 1955.7
DL input+output M: L = 170.1 + 10477.4 = 10647.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
  _01: a rectangle with size (11,12) and color cyan and mask x...xx.xxxxx|x....x..xx.x|x..........x|x..........x|x..........x|x..........x|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
diff: 
delta:
   (292.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
  _01: a rectangle with size (11,12) and color cyan and mask x...xx.xxxxx|x....x..xx.x|x..........x|x..........x|x..........x|x..........x|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _0110: a rectangle with size (10,1) and color green and mask Full at (1,3)
  _011: a rectangle with size (6,10) and color green and mask Full at (3,1)
  _0111: a rectangle with size (1,1) and color black and mask Full at (2,4)
diff: 
delta:
   (61.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
  _01: a rectangle with size (11,12) and color cyan and mask x...xx.xxxxx|x....x..xx.x|x..........x|x..........x|x..........x|x..........x|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
diff: 
delta:
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|x...xx.xxxxx|x....x..xx.x|x..........x|x..........x|x..........x|x..........x at (0,0)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 66 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask Full at (0,4)
  _01: a rectangle with size (11,12) and color cyan and mask x...xxxxxxxx|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,6)=2  (1,6)=0  (2,5)=2  (2,8)=2  (2,9)=2  (2,11)=2  (3,11)=2  (4,11)=2  (5,11)=2  (6,11)=2 
! 77 wrong pixels (generated / expected)

TRAIN 2bee17df.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|x.....xxxxxx|xx.....xx..x|x......x...x|x..........x|xxx........x|xx.........x|xx.........x|x..........x at (0,0)
diff: 
delta:
   (316.7 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|x.....xxxxxx|xx.....xx..x|x......x...x|x..........x|xxx........x|xx.........x|xx.........x|x..........x at (0,0)
  _0110: a rectangle with size (10,2) and color green and mask Full at (1,4)
  _011: a rectangle with size (1,10) and color green and mask Full at (4,1)
  _0111: a rectangle with size (1,10) and color green and mask Full at (8,1)
diff: 
delta:
   (65.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|x.....xxxxxx|xx.....xx..x|x......x...x|x..........x|xxx........x|xx.........x|xx.........x|x..........x at (0,0)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
  _01: a rectangle with size (11,12) and color red and mask x.....xxxxxx|xx.....xx..x|x......x...x|x..........x|xxx........x|xx.........x|xx.........x|x..........x|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color cyan and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (10,10) and color black and mask xxxxx.....|xxxxxx..xx|xxxxxx.xxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx at (1,1)
diff:   ^.color  ^.layer_01.shape.color  ^.layer_01.pos.j
delta:
! 64 wrong pixels (generated / expected)

TRAIN 2bee17df.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx......x|x.......x|x........|x........|x.....xx.|xx...xxxx|xxxxxxxxx at (0,0)
diff: 
delta:
   (253.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx......x|x.......x|x........|x........|x.....xx.|xx...xxxx|xxxxxxxxx at (0,0)
  _0110: a rectangle with size (8,1) and color green and mask Full at (1,3)
  _011: a rectangle with size (2,8) and color green and mask Full at (5,1)
  _0111: a rectangle with size (1,2) and color black and mask Full at (4,1)
diff: 
delta:
   (58.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx......x|x.......x|x........|x........|x.....xx.|xx...xxxx|xxxxxxxxx at (0,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (8,8) and color black and mask ..x..x.x|.xx.xxxx|.xxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx at (1,1)
diff:   ^.color  ^.layer_01.shape.color  ^.layer_01.pos.j
delta:
! 48 wrong pixels (generated / expected)

TRAIN 2bee17df.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (13,13) and color red and mask ...........xx|............x|............x|...........xx|..........xxx|............x|............x|............x|............x|............x|...........xx|..x.xx....xxx|xxxxxxxxxxxxx at (1,1)
  _01: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..xxx|xxx..........x|x............x|xxx.........xx|xx.........xxx|x............x|xx...........x|xx...........x|xx...........x|x............x|xx..........xx|xx.x.xx....xxx|xxxxxxxxxxxxxx at (0,0)
diff: 
delta:
! 63 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..x..|xxx...........|x.............|xxx...........|xx............|x.............|xx............|xx............|xx............|x.............|xx............|xx............|x............. at (0,0)
  _01: a rectangle with size (13,13) and color red and mask xxx..xxx..xxx|xx..........x|............x|xx.........xx|x.........xxx|............x|x...........x|x...........x|x...........x|............x|x..........xx|x.x.xx....xxx|xxxxxxxxxxxxx at (1,1)
diff:   ^.layer_01.shape.color  ^.layer_01.pos.j  ^.layer_0.shape.color
delta:
! 62 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (1,13) and color red and mask Full at (13,1)
  _01: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..x..|xxx...........|x.............|xxx...........|xx............|x.............|xx............|xx............|xx............|x.............|xx............|xx............|xxxxxxxxxxxxxx at (0,0)
diff: 
delta: (1,12)=2  (1,13)=2  (2,13)=2  (3,13)=2  (4,12)=2  (4,13)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,13)=2  (7,13)=2  (8,13)=2  (9,13)=2  (10,13)=2  (11,12)=2  (11,13)=2  (12,3)=2  (12,5)=2  (12,6)=2  (12,11)=2  (12,12)=2  (12,13)=2 
! 85 wrong pixels (generated / expected)

TEST 2bee17df.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.9 sec (26.9 sec/task)
bits-train-error = 1858.1 bits (1858.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-337] Checking task 2c608aff.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14833.3 = 14842.2
DL output with Mo: L = 9.0 + 18994.7 = 19003.7
DL input+output M: L = 17.9 + 33828.0 = 33845.9

# learning a model for train pairs
2.000	
1.495	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.105	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.952	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.908	OUT DEF: ^.size=^.size
0.878	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.816	IN  DEF: ^.layer_0.shape.mask=Full
0.792	OUT DEF: ^.layer_00=^.layer_0
0.775	OUT DEF: ^.color=^.color
0.772	IN  DEF: ^.size=(?,?)
0.768	IN  DEF: ^.layer_00.pos=(?,?)
0.753	IN  DEF: ^.layer_00.pos.j=(0)
0.642	IN  DEF: ^.layer_00.pos.i=(0)
0.634	IN  DEF: ^.layer_00.shape.mask=Full
0.629	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.626	IN  DEF: ^.layer_00.shape.size=(?,?)
0.622	IN  DEF: ^.layer_0.pos=(?,?)
0.619	IN  DEF: ^.layer_0.shape.size=(?,?)
0.617	OUT DEF: ^.layer_0.pos=(?,?)
0.614	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at ((0),(0))
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 70.2 + 5164.7 = 5234.9
DL output with Mo: L = 41.3 + 4927.6 = 4968.9
DL input+output M: L = 111.5 + 10092.3 = 10203.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,12) and color cyan and layers
  _00: a rectangle with size (1,12) and color cyan and mask Full at (0,0)
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
diff: 
delta: (3,9)=4  (7,7)=4 
   (109.6 bits)
data: a background with size (9,12) and color cyan and layers
  _00: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _0: a rectangle with size (1,5) and color yellow and mask Full at (3,5)
diff: 
delta: (7,7)=4 
   (44.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,12) and color cyan and layers
  _00: a rectangle with size (4,7) and color cyan and mask Full at (5,0)
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
diff:   ^.layer_00.pos.i
delta: (3,9)=4  (7,7)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,12) and color yellow and layers
  _00: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|xx...xxxxxxx|xx...xxxxxxx|xx...xxxx.xx|xx...xxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxx.xxxx|xxxxxxxxxxxx at (0,0)
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
diff:   ^.layer_00.shape.mask
delta:
! 90 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,12) and color green and layers
  _00: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|xx...xxxxxxx|xx...xxxxxxx|xx...xxxx.xx|xx...xxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxx.xxxx|xxxxxxxxxxxx at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (3,9)
diff:   ^.layer_00.shape.mask
delta: (7,7)=4 
! 95 wrong pixels (generated / expected)

TRAIN 2c608aff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color red and layers
  _00: a rectangle with size (2,12) and color red and mask Full at (0,0)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
diff: 
delta: (8,3)=8 
   (91.2 bits)
data: a background with size (10,12) and color red and layers
  _00: a rectangle with size (3,3) and color blue and mask Full at (2,3)
  _0: a rectangle with size (4,1) and color cyan and mask Full at (5,3)
diff: 
delta:
   (22.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color red and layers
  _00: a rectangle with size (2,12) and color red and mask Full at (0,0)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
diff: 
delta: (8,3)=8 
! 8 wrong pixels (generated / expected)

TRAIN 2c608aff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color blue and layers
  _00: a rectangle with size (14,1) and color blue and mask Full at (0,0)
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
diff: 
delta: (0,4)=2  (6,10)=2  (11,1)=2 
   (134.6 bits)
data: a background with size (14,12) and color blue and layers
  _00: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _0: a rectangle with size (1,4) and color red and mask Full at (6,7)
diff: 
delta: (0,4)=2  (1,4)=2  (2,4)=2  (3,4)=2  (11,1)=2 
   (126.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color blue and layers
  _00: a rectangle with size (14,5) and color blue and mask Full at (0,7)
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
diff:   ^.layer_00.pos.j
delta: (0,4)=2  (6,7)=1  (6,8)=1  (6,9)=1  (6,10)=2  (6,11)=1  (11,1)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color red and layers
  _00: a rectangle with size (14,12) and color blue and mask xxxx.xxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxx....xxxxx|xxx....xxxxx|xxx....xxx.x|xxx....xxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|x.xxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (0,0)
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
diff:   ^.layer_00.shape.mask
delta:
! 143 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color yellow and layers
  _00: a rectangle with size (14,12) and color blue and mask xxxx.xxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxx....xxxxx|xxx....xxxxx|xxx....xxx.x|xxx....xxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|x.xxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (0,0)
  _0: a rectangle with size (1,1) and color red and mask Full at (0,4)
diff:   ^.layer_00.shape.mask
delta: (6,10)=2  (11,1)=2 
! 151 wrong pixels (generated / expected)

TRAIN 2c608aff.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,18) and color blue and layers
  _00: a rectangle with size (1,18) and color blue and mask Full at (0,0)
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
diff: 
delta: (1,8)=4  (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
   (181.1 bits)
data: a background with size (14,18) and color blue and layers
  _00: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _0: a rectangle with size (1,18) and color blue and mask Full at (0,0)
diff: 
delta: (1,8)=4  (2,8)=4  (3,8)=4  (3,11)=4  (4,8)=4  (4,11)=4  (4,15)=4  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (11,13)=4 
   (298.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color yellow and layers
  _00: a rectangle with size (14,18) and color blue and mask xxxxxxxxxxxxxxxxxx|xxxxxxxx.xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxx.xxxxxx|xxxxxxxxxxxxxxx.xx|xx.xxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (0,0)
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
diff:   ^.layer_00.shape.mask
delta:
! 219 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,18) and color grey and layers
  _00: a rectangle with size (14,18) and color blue and mask xxxxxxxxxxxxxxxxxx|xxxxxxxx.xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxx.xxxxxx|xxxxxxxxxxxxxxx.xx|xx.xxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,8)
diff:   ^.layer_00.shape.mask
delta: (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
! 231 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,18) and color grey and layers
  _00: a rectangle with size (14,18) and color blue and mask xxxxxxxxxxxxxxxxxx|xxxxxxxx.xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxx.xxxxxx|xxxxxxxxxxxxxxx.xx|xx.xxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxx.....xxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (3,11)
diff:   ^.layer_00.shape.mask
delta: (1,8)=4  (4,15)=4  (5,2)=4  (11,13)=4 
! 231 wrong pixels (generated / expected)

TRAIN 2c608aff.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color red and layers
  _00: a rectangle with size (6,15) and color red and mask Full at (11,0)
  _0: a rectangle with size (6,8) and color cyan and mask Full at (5,7)
diff:   ^.layer_00.pos.i
delta: (1,9)=1  (2,2)=1  (2,17)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 31 wrong pixels (generated / expected)

TEST 2c608aff.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.2 sec (5.2 sec/task)
bits-train-error = 4927.6 bits (4927.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-336] Checking task 2dc579da.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9408.5 = 9417.5
DL output with Mo: L = 9.0 + 1140.0 = 1148.9
DL input+output M: L = 17.9 + 10548.5 = 10566.4

# learning a model for train pairs
2.000	
1.466	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.257	OUT DEF: ^.color=^.color
1.226	OUT DEF: ^.size=(?,?)
1.222	IN  DEF: ^.size=(?,?)
1.219	IN  DEF: ^.layer_0.shape.size=(?,?)
1.215	IN  DEF: ^.layer_0.pos=(?,?)
1.202	IN  DEF: ^.layer_0.pos.i=(0)
1.185	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.134	OUT OBJECT at ^.layer_0: ^.layer_01.shape at ?
0.926	OUT DEF: ^.color=^.color
0.895	OUT DEF: ^.layer_0.pos=(?,?)
0.882	IN  DEF: ^.layer_0.pos.j=(0)
0.878	IN  DEF: ^.layer_01.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
  _0: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 60.9 + 3776.2 = 3837.1
DL output with Mo: L = 28.0 + 513.0 = 541.1
DL input+output M: L = 89.0 + 4289.2 = 4378.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color green and mask ..x..|..x..|xxxxx|..x..|..x.. at (0,0)
  _01: a point with color yellow at (4,0)
diff: 
delta:
   (80.5 bits)
data: a background with size (2,2) and color cyan and layers
  _0: a point with color yellow at (1,0)
diff: 
delta:
   (13.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color green and mask ..x..|..x..|xxxxx|..x..|..x.. at (0,0)
  _01: a point with color cyan at (0,0)
diff: 
delta: (4,0)=4 
! size mismatch, 10x10 instead of 2x2

TRAIN 2dc579da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (7,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|...x...|...x...|...x... at (0,0)
  _01: a point with color blue at (1,5)
diff: 
delta:
   (109.3 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a point with color blue at (1,1)
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (7,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|...x...|...x...|...x... at (0,0)
  _01: a point with color blue at (1,5)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (7,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|...x...|...x...|...x... at (0,0)
  _01: a point with color yellow at (0,4)
diff: 
delta: (1,5)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN 2dc579da.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (11,11) and color blue and mask .....x.....|.....x.....|.....x.....|.....x.....|.....x.....|xxxxxxxxxxx|.....x.....|.....x.....|.....x.....|.....x.....|.....x..... at (0,0)
  _01: a point with color cyan at (2,1)
diff: 
delta:
   (187.8 bits)
data: a background with size (5,5) and color green and layers
  _0: a point with color cyan at (2,1)
diff: 
delta:
   (21.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (11,11) and color blue and mask .....x.....|.....x.....|.....x.....|.....x.....|.....x.....|xxxxxxxxxxx|.....x.....|.....x.....|.....x.....|.....x.....|.....x..... at (0,0)
  _01: a point with color cyan at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN 2dc579da.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color blue and layers
  _0: a rectangle with size (6,6) and color blue and mask Full at (0,0)
  _01: a point with color red at (3,8)
diff: 
delta: (0,6)=0  (1,6)=0  (2,6)=0  (3,6)=0  (4,6)=0  (5,6)=0  (6,0)=0  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (7,6)=0  (8,6)=0  (9,6)=0  (10,6)=0  (11,6)=0  (12,6)=0 
! size mismatch, 10x10 instead of 6x6

TEST 2dc579da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 513.0 bits (513.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-335] Checking task 2dd70a9a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 43253.8 = 43262.8
DL output with Mo: L = 9.0 + 52220.8 = 52229.7
DL input+output M: L = 17.9 + 95474.5 = 95492.5

# learning a model for train pairs
2.000	
1.644	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.283	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.155	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.058	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.954	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.877	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.814	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.767	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.714	OUT OBJECT at ^.layer_01111: ^.layer_011.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_01.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_011.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 18221.3 = 18306.6
DL output with Mo: L = 77.2 + 15128.2 = 15205.4
DL input+output M: L = 162.5 + 33349.5 = 33512.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _01: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|x.x.x at (0,4)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (8,18)=8  (8,19)=8  (9,18)=8  (9,19)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
   (921.4 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _01: a rectangle with size (12,15) and color green and mask ..............x|..............x|xxxxxxxxxxxxxxx|x..............|x........x.....|x.....x..x.....|x..xxx.x..x.xx.|x.x....xxxxxxxx|x..xxx..xxx.x..|x..xx....x...x.|x...x.x.x..x..x|x..xxx...xxxx.. at (4,3)
  _011: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _0111: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _01111: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|x.x.x at (0,4)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (8,18)=8  (8,19)=8  (9,18)=8  (9,19)=8  (10,1)=8  (11,0)=8  (16,1)=8  (18,9)=8  (19,10)=8 
   (771.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|x.x.x at (0,4)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (8,18)=8  (8,19)=8  (9,18)=8  (9,19)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _01: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|x.x.x at (0,4)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (8,18)=8  (8,19)=8  (9,18)=8  (9,19)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _010: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|x.x.x at (0,4)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (8,18)=8  (8,19)=8  (9,18)=8  (9,19)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
! size mismatch, 10x10 instead of 20x20

TRAIN 2dd70a9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
diff: 
delta: (0,9)=8  (1,2)=8  (3,9)=8  (4,1)=8  (9,0)=8 
   (250.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _01: a rectangle with size (5,5) and color green and mask x....|x....|xxxxx|..x.x|..x.x at (1,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _01111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
diff: 
delta: (1,2)=8  (3,9)=8  (4,1)=8  (9,0)=8 
   (214.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
diff: 
delta: (0,9)=8  (1,2)=8  (3,9)=8  (4,1)=8  (9,0)=8 
! 27 wrong pixels (generated / expected)

TRAIN 2dd70a9a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _01: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _011: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (4,13)=8  (5,1)=3  (5,2)=3  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
   (650.3 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _01: a rectangle with size (5,7) and color green and mask xxxxxxx|......x|......x|......x|..xxxxx at (5,1)
  _011: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _0111: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _01111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (4,13)=8  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
   (526.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _01: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _011: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (4,13)=8  (5,1)=3  (5,2)=3  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _01: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _011: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (4,13)=8  (5,1)=3  (5,2)=3  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _010: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _01: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _011: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (4,13)=8  (5,1)=3  (5,2)=3  (5,8)=8  (5,12)=8  (6,11)=8  (6,13)=8  (7,5)=8  (7,8)=8  (7,10)=8  (7,11)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN 2dd70a9a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask xxxx|x...|.x..|..x.|..x.|...x at (0,0)
  _010: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (7,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (8,5)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (5,10)
diff: 
delta: (0,9)=8  (0,10)=8  (1,5)=8  (1,6)=2  (1,7)=2  (2,4)=8  (2,5)=8  (3,8)=8  (3,12)=8  (4,6)=8  (4,12)=8  (5,8)=8  (7,3)=3  (7,4)=3  (10,1)=8  (10,2)=8  (11,3)=8  (12,11)=8 
! size mismatch, 10x10 instead of 13x13

TEST 2dd70a9a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.1 sec (29.1 sec/task)
bits-train-error = 15128.2 bits (15128.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-334] Checking task 2dee498d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10343.9 = 10352.9
DL output with Mo: L = 9.0 + 3605.9 = 3614.9
DL input+output M: L = 17.9 + 13949.9 = 13967.8

# learning a model for train pairs
2.000	
1.919	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.753	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.721	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.616	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.568	OUT DEF: ^.color=^.color
1.529	OUT DEF: ^.layer_0.shape.color=blue
1.503	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.494	OUT DEF: ^.size=(?,?)
1.450	OUT DEF: ^.size.i=^.size.i
1.406	OUT DEF: ^.size.j=^.size.i
1.396	OUT DEF: ^.layer_0.pos=(?,?)
1.373	OUT DEF: ^.layer_0.pos.i=^.layer_011.pos.i
1.354	OUT DEF: ^.layer_0.pos.j=^.layer_0.shape.size.i - ^.layer_011.shape.size.i
1.344	OUT DEF: ^.layer_01.pos=(?,?)
1.321	OUT DEF: ^.layer_01.pos.j=(0)
1.298	OUT DEF: ^.layer_01.pos.i=^.layer_011.pos.i
1.288	OUT DEF: ^.layer_01.shape.size=(?,?)
1.253	OUT DEF: ^.layer_01.shape.size.i=^.layer_011.pos.j + ^.layer_011.shape.size.i
1.246	IN  DEF: ^.layer_011.shape.mask=Full
1.243	IN  DEF: ^.size=(?,?)
1.239	IN  DEF: ^.layer_0.pos=(?,?)
1.231	IN  DEF: ^.layer_0.pos.i=(0)
1.228	IN  DEF: ^.layer_0.shape.size=(?,?)
1.224	IN  DEF: ^.layer_01.pos=(?,?)
1.221	IN  DEF: ^.layer_01.shape.size=(?,?)
1.218	IN  DEF: ^.layer_011.shape.size=(?,?)
1.214	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i) and color ^.color and layers
  _0: a point with color blue at (^.layer_011.pos.i,^.layer_0.shape.size.i - ^.layer_011.shape.size.i)
  _01: a rectangle with size (^.layer_011.pos.j + ^.layer_011.shape.size.i,?) and color ? and mask ? at (^.layer_011.pos.i,(0))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 98.8 + 6969.1 = 7067.8
DL output with Mo: L = 101.4 + 1819.7 = 1921.1
DL input+output M: L = 200.1 + 8788.7 = 8988.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,9) and color yellow and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (0,2)
diff: 
delta: (0,8)=1  (2,2)=4  (2,3)=4 
   (173.8 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a point with color blue at (0,2)
  _01: a rectangle with size (3,3) and color grey and mask .xx|xxx|.x. at (0,0)
diff: 
delta: (2,0)=1 
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color blue and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,7) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (2,2)
diff: 
delta: (0,2)=1  (0,3)=1  (2,8)=4 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,9) and color yellow and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (0,2)
  _011: a rectangle with size (1,2) and color blue and mask Full at (2,5)
diff: 
delta: (0,5)=4  (0,6)=4  (2,0)=1 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,9) and color yellow and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (0,2)
diff: 
delta: (0,8)=1  (2,2)=4  (2,3)=4 
! 7 wrong pixels (generated / expected)

TRAIN 2dee498d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (4,4) and color red and mask x-cross at (0,0)
  _011: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
diff: 
delta: (0,4)=2  (0,7)=1  (0,8)=2  (0,11)=1  (1,5)=2  (1,6)=1  (1,9)=2  (1,10)=1  (2,5)=1  (2,6)=2  (2,9)=1  (2,10)=2  (3,4)=1  (3,7)=2  (3,8)=1  (3,11)=2 
   (411.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a point with color blue at (1,2)
  _01: a rectangle with size (2,4) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,3)=1  (1,1)=2  (2,1)=1  (2,2)=2  (3,0)=1  (3,3)=2 
   (133.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (4,4) and color red and mask x-cross at (0,0)
  _011: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
diff: 
delta: (0,4)=2  (0,7)=1  (0,8)=2  (0,11)=1  (1,5)=2  (1,6)=1  (1,9)=2  (1,10)=1  (2,5)=1  (2,6)=2  (2,9)=1  (2,10)=2  (3,4)=1  (3,7)=2  (3,8)=1  (3,11)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
  _011: a rectangle with size (4,4) and color red and mask x..x|xxxx|xxxx|x..x at (0,0)
diff:   ^.layer_011.shape.mask
delta: (0,4)=2  (0,7)=1  (0,8)=2  (0,11)=1  (1,1)=2  (1,5)=2  (1,6)=1  (1,9)=2  (1,10)=1  (2,2)=2  (2,5)=1  (2,6)=2  (2,9)=1  (2,10)=2  (3,4)=1  (3,7)=2  (3,8)=1  (3,11)=2 
! 14 wrong pixels (generated / expected)

TRAIN 2dee498d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,2)
  _011: a rectangle with size (1,5) and color blue and mask Full at (0,1)
diff: 
delta: (0,4)=2  (1,4)=2 
   (112.1 bits)
data: a background with size (2,2) and color green and layers
  _0: a point with color blue at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,2)
  _011: a rectangle with size (1,5) and color blue and mask Full at (0,1)
diff: 
delta: (0,4)=2  (1,4)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (1,5) and color blue and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,4)=2  (1,4)=2 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,6) and color blue and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,2)
  _011: a rectangle with size (1,5) and color green and mask Full at (1,1)
diff: 
delta: (0,4)=2  (1,4)=2 
! 3 wrong pixels (generated / expected)

TRAIN 2dee498d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .x...|xx...|.xxx.|...xx|...x. at (0,0)
  _01: a rectangle with size (5,5) and color red and mask .x...|xx...|.xxx.|...xx|...x. at (0,5)
  _011: a rectangle with size (5,5) and color red and mask .x...|xx...|.xxx.|...xx|...x. at (0,10)
diff:   ^.layer_011.shape.mask
delta: (0,3)=4  (0,4)=4  (0,8)=4  (0,9)=4  (0,13)=4  (0,14)=4  (1,3)=4  (1,4)=4  (1,8)=4  (1,9)=4  (1,13)=4  (1,14)=4  (3,0)=1  (3,1)=1  (3,5)=1  (3,6)=1  (3,10)=1  (3,11)=1  (4,0)=1  (4,1)=1  (4,5)=1  (4,6)=1  (4,10)=1  (4,11)=1 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .x...|xx...|.xxx.|...xx|...x. at (0,0)
  _01: a rectangle with size (5,5) and color red and mask .x...|xx...|.xxx.|...xx|...x. at (0,5)
  _011: a rectangle with size (2,12) and color yellow and mask Full at (0,3)
diff: 
delta: (0,5)=0  (0,7)=0  (0,10)=0  (0,11)=2  (0,12)=0  (1,7)=0  (1,10)=2  (1,11)=2  (1,12)=0  (2,11)=2  (2,12)=2  (2,13)=2  (3,0)=1  (3,1)=1  (3,5)=1  (3,6)=1  (3,10)=1  (3,11)=1  (3,13)=2  (3,14)=2  (4,0)=1  (4,1)=1  (4,5)=1  (4,6)=1  (4,10)=1  (4,11)=1  (4,13)=2 
! 19 wrong pixels (generated / expected)

TEST 2dee498d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.4 sec (5.4 sec/task)
bits-train-error = 1819.7 bits (1819.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-333] Checking task 31aa019c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12601.7 = 12610.6
DL output with Mo: L = 9.0 + 5922.9 = 5931.9
DL input+output M: L = 17.9 + 18524.6 = 18542.5

# learning a model for train pairs
2.000	
1.366	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.269	OUT DEF: ^.size=^.size
1.241	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.214	OUT OBJECT at ^.layer_00: a point with color ? at ?
1.191	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.168	OUT DEF: ^.layer_0.shape.color=red
1.156	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.148	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.139	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.131	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.123	IN  OBJECT at ^.layer_011111: a point with color ? at ?
1.115	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
1.106	IN  OBJECT at ^.layer_01111111: a point with color ? at ?
1.098	IN  OBJECT at ^.layer_011111111: a point with color ? at ?
1.089	IN  OBJECT at ^.layer_0111111111: a point with color ? at ?
1.080	IN  OBJECT at ^.layer_01111111111: a point with color ? at ?
1.072	IN  OBJECT at ^.layer_011111111111: a point with color ? at ?
1.062	IN  OBJECT at ^.layer_0111111111111: a point with color ? at ?
1.053	IN  OBJECT at ^.layer_01111111111111: a point with color ? at ?
1.041	IN  OBJECT at ^.layer_011111111111111: a point with color ? at ?
1.034	OUT DEF: ^.color=black
1.028	OUT DEF: ^.layer_00.pos=(?,?)
1.005	OUT DEF: ^.layer_00.pos.j=^.layer_0111111111111.pos.j
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color ? at (?,^.layer_0111111111111.pos.j)
  _0: a rectangle with size ? and color red and mask ^.layer_0.shape.mask at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?
  _011111: a point with color ? at ?
  _0111111: a point with color ? at ?
  _01111111: a point with color ? at ?
  _011111111: a point with color ? at ?
  _0111111111: a point with color ? at ?
  _01111111111: a point with color ? at ?
  _011111111111: a point with color ? at ?
  _0111111111111: a point with color ? at ?
  _01111111111111: a point with color ? at ?
  _011111111111111: a point with color ? at ?

DL input  with Mi: L = 199.6 + 10316.3 = 10515.9
DL output with Mo: L = 49.3 + 966.1 = 1015.4
DL input+output M: L = 248.9 + 11282.4 = 11531.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (8,7)
  _011: a point with color blue at (0,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color red at (2,0)
  _011111: a point with color red at (2,5)
  _0111111: a point with color blue at (2,9)
  _01111111: a point with color blue at (3,2)
  _011111111: a point with color grey at (3,9)
  _0111111111: a point with color cyan at (4,2)
  _01111111111: a point with color yellow at (6,1)
  _011111111111: a point with color grey at (7,1)
  _0111111111111: a point with color cyan at (8,1)
  _01111111111111: a point with color blue at (7,4)
  _011111111111111: a point with color blue at (8,6)
diff: 
delta:
   (276.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (6,1)
  _0: a rectangle with size (3,3) and color red and mask Full at (5,0)
diff: 
delta:
   (32.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (8,7)
  _011: a point with color blue at (0,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color red at (2,0)
  _011111: a point with color red at (2,5)
  _0111111: a point with color blue at (2,9)
  _01111111: a point with color blue at (3,2)
  _011111111: a point with color grey at (3,9)
  _0111111111: a point with color cyan at (4,2)
  _01111111111: a point with color yellow at (6,1)
  _011111111111: a point with color grey at (7,1)
  _0111111111111: a point with color blue at (7,4)
  _01111111111111: a point with color cyan at (8,1)
  _011111111111111: a point with color blue at (8,6)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (8,7)
  _011: a point with color blue at (0,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color red at (2,0)
  _011111: a point with color red at (2,5)
  _0111111: a point with color blue at (2,9)
  _01111111: a point with color blue at (3,2)
  _011111111: a point with color grey at (3,9)
  _0111111111: a point with color cyan at (4,2)
  _01111111111: a point with color yellow at (6,1)
  _011111111111: a point with color grey at (7,1)
  _0111111111111: a point with color cyan at (8,1)
  _01111111111111: a point with color blue at (7,4)
  _011111111111111: a point with color blue at (8,6)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 31aa019c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a point with color red at (0,0)
  _0111: a point with color blue at (0,3)
  _01111: a point with color green at (0,5)
  _011111: a point with color green at (0,9)
  _0111111: a point with color brown at (1,3)
  _01111111: a point with color green at (1,8)
  _011111111: a point with color orange at (1,9)
  _0111111111: a point with color blue at (2,3)
  _01111111111: a point with color pink at (2,7)
  _011111111111: a point with color brown at (2,9)
  _0111111111111: a point with color blue at (3,7)
  _01111111111111: a point with color brown at (4,0)
  _011111111111111: a point with color red at (5,4)
diff: 
delta: (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
   (485.1 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (2,7)
  _0: a rectangle with size (3,3) and color red and mask Full at (1,6)
diff: 
delta:
   (32.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a point with color red at (0,0)
  _0111: a point with color blue at (0,3)
  _01111: a point with color green at (0,5)
  _011111: a point with color green at (0,9)
  _0111111: a point with color brown at (1,3)
  _01111111: a point with color green at (1,8)
  _011111111: a point with color orange at (1,9)
  _0111111111: a point with color blue at (2,3)
  _01111111111: a point with color pink at (2,7)
  _011111111111: a point with color brown at (2,9)
  _0111111111111: a point with color blue at (3,7)
  _01111111111111: a point with color brown at (4,0)
  _011111111111111: a point with color red at (5,4)
diff: 
delta: (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
! 14 wrong pixels (generated / expected)

TRAIN 31aa019c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a point with color pink at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _01111111: a point with color grey at (2,6)
  _011111111: a point with color blue at (3,3)
  _0111111111: a point with color blue at (4,9)
  _01111111111: a point with color pink at (5,5)
  _011111111111: a point with color blue at (6,1)
  _0111111111111: a point with color green at (8,6)
  _01111111111111: a point with color orange at (6,3)
  _011111111111111: a point with color grey at (9,2)
diff: 
delta:
   (270.1 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (8,6)
  _0: a rectangle with size (3,3) and color red and mask Full at (7,5)
diff: 
delta:
   (32.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a point with color pink at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _01111111: a point with color grey at (2,6)
  _011111111: a point with color blue at (3,3)
  _0111111111: a point with color blue at (4,9)
  _01111111111: a point with color pink at (5,5)
  _011111111111: a point with color blue at (6,1)
  _0111111111111: a point with color orange at (6,3)
  _01111111111111: a point with color green at (8,6)
  _011111111111111: a point with color grey at (9,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a point with color pink at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _01111111: a point with color grey at (2,6)
  _011111111: a point with color blue at (3,3)
  _0111111111: a point with color blue at (4,9)
  _01111111111: a point with color pink at (5,5)
  _011111111111: a point with color blue at (6,1)
  _0111111111111: a point with color green at (8,6)
  _01111111111111: a point with color orange at (6,3)
  _011111111111111: a point with color grey at (9,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 31aa019c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color orange and mask Full at (4,0)
  _01: a rectangle with size (1,2) and color grey and mask Full at (7,0)
  _011: a point with color red at (0,4)
  _0111: a point with color grey at (0,5)
  _01111: a point with color orange at (0,6)
  _011111: a point with color grey at (1,3)
  _0111111: a point with color pink at (1,4)
  _01111111: a point with color red at (1,6)
  _011111111: a point with color green at (2,6)
  _0111111111: a point with color cyan at (3,2)
  _01111111111: a point with color green at (3,4)
  _011111111111: a point with color cyan at (3,9)
  _0111111111111: a point with color yellow at (4,4)
  _01111111111111: a point with color yellow at (4,9)
  _011111111111111: a point with color cyan at (5,3)
diff: 
delta: (4,1)=4  (5,6)=7# (6,5)=9# (6,7)=4  (7,3)=3  (7,6)=6  (7,7)=7# (7,9)=7# (8,2)=3  (8,9)=2  (9,0)=1  (9,2)=1  (9,8)=6  (9,9)=7#
! 14 wrong pixels (generated / expected)

TEST 31aa019c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.1 sec (25.1 sec/task)
bits-train-error = 966.1 bits (966.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-332] Checking task 321b1fc6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7386.9 = 7395.8
DL output with Mo: L = 9.0 + 5670.5 = 5679.5
DL input+output M: L = 17.9 + 13057.4 = 13075.3

# learning a model for train pairs
2.000	
1.856	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.711	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.564	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.496	OUT DEF: ^.size=^.size
1.453	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.410	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.367	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.332	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.266	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
1.200	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_0111.shape at ?
  _01111: ^.layer_0111.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 3823.0 = 3908.3
DL output with Mo: L = 86.2 + 3730.2 = 3816.4
DL input+output M: L = 171.5 + 7553.2 = 7724.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
diff: 
delta: (1,2)=6  (2,1)=9# (2,2)=4 
   (187.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (4,5)
  _01: a rectangle with size (1,1) and color pink and mask Full at (4,6)
  _011: a rectangle with size (1,1) and color brown and mask Full at (5,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (7,2)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (8,8)
diff: 
delta: (5,6)=4  (7,3)=6  (8,2)=9# (8,3)=4  (8,9)=6  (9,8)=9# (9,9)=4 
   (231.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
diff: 
delta: (1,2)=6  (2,1)=9# (2,2)=4 
! 16 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (1,1)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (2,6)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (7,3)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (6,5)
diff: 
delta: (5,5)=7# (5,6)=7#
   (194.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color orange and mask Full at (1,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (2,6)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (3,6)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (8,3)
diff: 
delta: (7,3)=7# (7,4)=7#
   (141.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (1,1)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (2,6)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (7,3)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (6,5)
diff: 
delta: (5,5)=7# (5,6)=7#
! 19 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (1,4) and color green and mask Full at (6,0)
  _0111: a rectangle with size (2,7) and color cyan and mask Full at (1,1)
diff: 
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,2)=8  (3,7)=8  (5,1)=4  (5,2)=4  (6,1)=4  (7,2)=3 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (2,7) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (1,4) and color green and mask Full at (6,0)
diff: 
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,2)=8  (3,7)=8  (5,1)=4  (5,2)=4  (6,1)=4  (7,2)=3 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (2,7) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (5,1)
diff: 
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,2)=8  (3,7)=8  (6,0)=3  (6,2)=3  (6,3)=3  (7,2)=3 
! 24 wrong pixels (generated / expected)

TEST 321b1fc6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.4 sec (24.4 sec/task)
bits-train-error = 3730.2 bits (3730.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-331] Checking task 32597951.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 80666.3 = 80675.2
DL output with Mo: L = 9.0 + 82032.5 = 82041.5
DL input+output M: L = 17.9 + 162698.8 = 162716.7

# learning a model for train pairs
2.000	
1.584	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.190	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.028	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.909	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.838	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.795	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.758	OUT OBJECT at ^.layer_0111: ^.layer_011.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_011.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 33931.6 = 33998.4
DL output with Mo: L = 67.1 + 27513.6 = 27580.8
DL input+output M: L = 133.9 + 61445.3 = 61579.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,0)=1  (1,1)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,7)=1  (1,8)=1  (1,9)=1  (1,11)=1  (1,12)=1  (1,13)=1  (1,15)=1  (1,16)=1  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
   (1879.2 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _01: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _011: a rectangle with size (1,17) and color blue and mask Full at (7,0)
  _0111: a rectangle with size (1,17) and color blue and mask Full at (9,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,0)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=3  (3,6)=3  (3,8)=3  (3,9)=3  (3,10)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (5,0)=1  (5,1)=1  (5,3)=1  (5,4)=1  (5,5)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,11)=1  (5,12)=1  (5,13)=1  (5,15)=1  (5,16)=1  (7,3)=0  (7,7)=0  (7,11)=0  (7,15)=0  (9,2)=0  (9,6)=0  (9,10)=0  (9,14)=0  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
   (1700.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,0)=1  (1,1)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,7)=1  (1,8)=1  (1,9)=1  (1,11)=1  (1,12)=1  (1,13)=1  (1,15)=1  (1,16)=1  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask Full at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (7,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,0)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=1  (3,6)=1  (3,8)=1  (3,9)=1  (3,10)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (5,0)=1  (5,1)=1  (5,3)=1  (5,4)=1  (5,5)=1  (5,7)=1  (5,8)=1  (5,9)=1  (5,11)=1  (5,12)=1  (5,13)=1  (5,15)=1  (5,16)=1  (7,3)=0  (7,7)=0  (7,11)=0  (7,15)=0  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx...xx...|...xx.x...xx..|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _011: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
diff: 
delta: (0,0)=1  (0,14)=1  (0,16)=1  (1,0)=1  (1,1)=1  (1,14)=1  (1,15)=1  (2,16)=1  (3,15)=1  (4,2)=1  (4,15)=1  (4,16)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
   (1097.6 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (7,14) and color blue and mask .......x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (10,1)
  _01: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _011: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
  _0111: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=3  (8,1)=8  (8,2)=3  (8,4)=3  (8,5)=3  (8,6)=3  (9,1)=3  (9,2)=3  (9,4)=3  (9,5)=3  (9,7)=3  (10,1)=1  (10,4)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
   (918.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx...xx...|...xx.x...xx..|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _011: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
diff: 
delta: (0,0)=1  (0,14)=1  (0,16)=1  (1,0)=1  (1,1)=1  (1,14)=1  (1,15)=1  (2,16)=1  (3,15)=1  (4,2)=1  (4,15)=1  (4,16)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _01: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.xxx...xx....|.xx.x...xx... at (0,3)
  _011: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
diff: 
delta: (0,0)=1  (0,14)=1  (0,16)=1  (1,0)=1  (1,1)=1  (1,14)=1  (1,15)=1  (2,16)=1  (3,15)=1  (4,2)=1  (4,15)=1  (4,16)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _01: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _011: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|xxxxxxx..x.xx|xxxxxx.xx....|xxxxxx..xx... at (0,3)
diff: 
delta: (0,0)=1  (0,14)=1  (0,16)=1  (1,0)=1  (1,1)=1  (1,14)=1  (1,15)=1  (2,16)=1  (3,15)=1  (4,2)=1  (4,15)=1  (4,16)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (5,5) and color cyan and mask Full at (3,4)
diff: 
delta:
   (416.4 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask .xx.x|x..x.|.xx.x|x..x.|.xx.x at (3,4)
  _01: a rectangle with size (17,17) and color blue and mask .x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x at (0,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (3,4)
  _0111: a rectangle with size (5,5) and color cyan and mask Full at (3,4)
diff: 
delta:
   (133.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (5,5) and color cyan and mask Full at (3,4)
diff: 
delta:
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask Full at (11,7)
  _01: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|....xxxxxx.x..|....xxxxxx..x.|....xxxxxx...x at (0,3)
  _011: a rectangle with size (11,11) and color blue and mask x..........|.x.........|..x........|x..x.......|.x..x......|..x..x.....|...x..x....|....x..x...|.....x..x..|......x..x.|.......x..x at (0,6)
diff: 
delta: (0,0)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,1)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,2)=1  (2,11)=1  (2,14)=1  (3,0)=1  (3,3)=1  (3,12)=1  (3,15)=1  (4,1)=1  (4,4)=1  (4,13)=1  (4,16)=1  (5,2)=1  (5,5)=1  (5,14)=1  (6,0)=1  (6,3)=1  (6,6)=1  (6,15)=1  (7,1)=1  (7,4)=1  (7,7)=1  (7,16)=1  (8,2)=1  (8,5)=1  (8,8)=1  (9,0)=1  (9,3)=1  (9,6)=1  (9,9)=1  (10,1)=1  (10,4)=1  (10,7)=1  (10,10)=1  (11,2)=1  (11,5)=1  (11,8)=1  (11,11)=1  (12,0)=1  (12,3)=1  (12,6)=1  (12,9)=1  (12,12)=1  (13,1)=1  (13,4)=1  (13,7)=1  (13,10)=1  (13,13)=1  (14,2)=1  (14,5)=1  (14,8)=1  (14,11)=1  (14,14)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (15,12)=1  (15,15)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1  (16,13)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask Full at (11,7)
  _01: a rectangle with size (11,11) and color blue and mask x..........|.x.........|..x........|...x.......|....x......|.....x.....|......x....|.......x...|........x..|.........x.|..........x at (0,6)
  _011: a rectangle with size (14,14) and color blue and mask x..x..........|.x..x.........|..x..x........|...x..x.......|....x..x......|.....x..x.....|......x..x....|.......x..x...|........x..x..|.........x..x.|..........x..x|....xxxxxx.x..|....xxxxxx..x.|....xxxxxx...x at (0,3)
diff: 
delta: (0,0)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,1)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,2)=1  (2,11)=1  (2,14)=1  (3,0)=1  (3,3)=1  (3,12)=1  (3,15)=1  (4,1)=1  (4,4)=1  (4,13)=1  (4,16)=1  (5,2)=1  (5,5)=1  (5,14)=1  (6,0)=1  (6,3)=1  (6,6)=1  (6,15)=1  (7,1)=1  (7,4)=1  (7,7)=1  (7,16)=1  (8,2)=1  (8,5)=1  (8,8)=1  (9,0)=1  (9,3)=1  (9,6)=1  (9,9)=1  (10,1)=1  (10,4)=1  (10,7)=1  (10,10)=1  (11,2)=1  (11,5)=1  (11,8)=1  (11,11)=1  (12,0)=1  (12,3)=1  (12,6)=1  (12,9)=1  (12,12)=1  (13,1)=1  (13,4)=1  (13,7)=1  (13,10)=1  (13,13)=1  (14,2)=1  (14,5)=1  (14,8)=1  (14,11)=1  (14,14)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (15,12)=1  (15,15)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1  (16,13)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask x.xx.x|xx.xx.|.xx.xx|x.xx.x at (11,7)
  _01: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|....x.xx.x.x..|....xx.xx...x.|.....xx.xx...x at (0,3)
  _011: a rectangle with size (11,11) and color blue and mask x..........|.x.........|..x........|x..x.......|.x..x......|..x..x.....|...x..x....|....x..x...|.....x..x..|......x..x.|.......x..x at (0,6)
diff: 
delta: (0,0)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,1)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,2)=1  (2,11)=1  (2,14)=1  (3,0)=1  (3,3)=1  (3,12)=1  (3,15)=1  (4,1)=1  (4,4)=1  (4,13)=1  (4,16)=1  (5,2)=1  (5,5)=1  (5,14)=1  (6,0)=1  (6,3)=1  (6,6)=1  (6,15)=1  (7,1)=1  (7,4)=1  (7,7)=1  (7,16)=1  (8,2)=1  (8,5)=1  (8,8)=1  (9,0)=1  (9,3)=1  (9,6)=1  (9,9)=1  (10,1)=1  (10,4)=1  (10,7)=1  (10,10)=1  (11,2)=1  (11,5)=1  (11,8)=1  (11,11)=1  (12,0)=1  (12,3)=1  (12,6)=1  (12,9)=1  (12,12)=1  (13,1)=1  (13,4)=1  (13,7)=1  (13,10)=1  (13,13)=1  (14,2)=1  (14,5)=1  (14,8)=1  (14,11)=1  (14,14)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (15,12)=1  (15,15)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1  (16,13)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17

TEST 32597951.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.9 sec (28.9 sec/task)
bits-train-error = 27513.6 bits (27513.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-330] Checking task 3345333e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17291.4 = 17300.4
DL output with Mo: L = 9.0 + 14038.7 = 14047.6
DL input+output M: L = 17.9 + 31330.1 = 31348.0

# learning a model for train pairs
2.000	
1.173	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.668	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.371	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.340	OUT DEF: ^.size=^.size
0.323	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.316	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.313	IN  DEF: ^.layer_01.shape.mask=Full
0.311	OUT DEF: ^.color=black
0.309	IN  DEF: ^.color=black
0.308	OUT DEF: ^.layer_0.shape.size=(?,?)
0.296	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.286	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.shape.size.i + ^.layer_01.shape.size.i
0.284	IN  DEF: ^.size=(?,?)
0.273	IN  DEF: ^.size.i=16
0.261	IN  DEF: ^.size.j=16
0.260	IN  DEF: ^.layer_0.shape.size=(?,?)
0.259	IN  DEF: ^.layer_01.pos=(?,?)
0.258	IN  DEF: ^.layer_0.pos=(?,?)
0.256	IN  DEF: ^.layer_01.shape.size=(?,?)
0.249	IN  DEF: ^.layer_01.shape.size.j=4

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_01.shape.size.i + ^.layer_01.shape.size.i) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (16,16) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,4) and color ? and mask Full at (?,?)

DL input  with Mi: L = 85.4 + 2640.3 = 2725.7
DL output with Mo: L = 45.7 + 1241.2 = 1286.9
DL input+output M: L = 131.1 + 3881.5 = 4012.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (3,4) and color blue and mask Full at (3,6)
diff: 
delta: (2,7)=6  (2,8)=6 
   (143.4 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,6) and color pink and mask xx..xx|xx..xx|.xxxx.|..xx..|..xx..|.xxxx.|.x..x.|.xxxx.|..xx.. at (2,3)
diff: 
delta:
   (57.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (3,4) and color blue and mask Full at (3,6)
diff: 
delta: (2,7)=6  (2,8)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Full at (3,6)
  _01: a rectangle with size (9,5) and color pink and mask xx...|xx.xx|.xxxx|..xxx|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.j
delta: (2,7)=6  (2,8)=6 
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (1,2) and color pink and mask Full at (2,7)
diff:   ^.layer_01.shape.size.j
delta: (3,6)=1  (3,7)=1  (3,8)=1  (3,9)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1 
! 30 wrong pixels (generated / expected)

TRAIN 3345333e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|...xxxx.|...xxxxx|...xx.x.|......x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (4,0)
diff: 
delta:
   (120.6 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|.xxxxxx.|xxxxxxxx|.x.xx.x.|.x....x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
diff: 
delta:
   (67.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|...xxxx.|...xxxxx|...xx.x.|......x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (4,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Full at (4,0)
  _01: a rectangle with size (8,8) and color red and mask ..x..x..|xxxxxxx.|xxxxxxxx|xxxxx.x.|xxx...x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.j
delta:
! 82 wrong pixels (generated / expected)

TRAIN 3345333e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color grey and mask .x...x..|..xxx.x.|......xx|..xxxxxx|...x....|..xxxxxx|xx.x.xx.|.x...x.. at (5,6)
  _01: a rectangle with size (5,4) and color cyan and mask Full at (6,4)
diff: 
delta:
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Full at (6,4)
  _01: a rectangle with size (8,8) and color grey and mask .x...x..|xxxxx.x.|xx....xx|xxxxxxxx|xx.x....|xxxxxxxx|xx.x.xx.|.x...x.. at (5,6)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.j
delta:
! 69 wrong pixels (generated / expected)

TEST 3345333e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 1241.2 bits (1241.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-329] Checking task 3428a4f5.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 23603.3 = 23612.3
DL output with Mo: L = 9.0 + 9763.5 = 9772.5
DL input+output M: L = 17.9 + 33366.8 = 33384.8

# learning a model for train pairs
2.000	
1.418	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.155	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.889	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.776	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.712	OUT DEF: ^.size=^.layer_0.shape.size
0.693	OUT DEF: ^.layer_0.shape.color=green
0.685	IN  DEF: ^.layer_0.shape.color=red
0.677	IN  DEF: ^.layer_01.shape.color=red
0.669	IN  DEF: ^.layer_011.shape.color=yellow
0.663	OUT DEF: ^.color=black
0.658	OUT DEF: ^.layer_0.pos=(?,?)
0.642	OUT DEF: ^.layer_0.pos.i=(0)
0.638	OUT DEF: ^.layer_0.shape.size=(?,?)
0.607	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.603	IN  DEF: ^.layer_011.shape.mask=Full
0.599	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j + ^.layer_01.shape.size.j
0.597	IN  DEF: ^.color=black
0.595	IN  DEF: ^.size=(?,?)
0.579	IN  DEF: ^.size.i=13
0.567	IN  DEF: ^.size.j=5
0.565	IN  DEF: ^.layer_0.pos=(?,?)
0.559	IN  DEF: ^.layer_0.pos.j=0
0.557	IN  DEF: ^.layer_0.shape.size=(?,?)
0.544	IN  DEF: ^.layer_0.shape.size.i=6
0.532	IN  DEF: ^.layer_0.shape.size.j=5
0.530	IN  DEF: ^.layer_01.pos=(?,?)
0.528	IN  DEF: ^.layer_01.shape.size=(?,?)
0.526	IN  DEF: ^.layer_011.pos=(?,?)
0.518	IN  DEF: ^.layer_011.pos.i=6
0.512	IN  DEF: ^.layer_011.pos.j=0
0.510	IN  DEF: ^.layer_011.shape.size=(?,?)
0.498	IN  DEF: ^.layer_011.shape.size.j=5
0.494	IN  DEF: ^.layer_011.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_01.pos.j + ^.layer_01.shape.size.j) and color green and mask ? at ((0),?)
WHERE (Mi)
a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask ? at (?,0)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)

DL input  with Mi: L = 123.2 + 5734.3 = 5857.5
DL output with Mo: L = 54.5 + 2349.5 = 2404.0
DL input+output M: L = 177.7 + 8083.8 = 8261.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _01: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (2,0)=2  (3,0)=2  (3,1)=2  (5,1)=2  (12,0)=2 
   (173.8 bits)
data: a background with size (6,5) and color black and layers
  _0: a rectangle with size (6,5) and color green and mask x..xx|xxx.x|..xxx|xxx.x|...x.|...x. at (0,0)
diff: 
delta: (5,0)=3  (5,1)=3 
   (74.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _01: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (2,0)=2  (3,0)=2  (3,1)=2  (5,1)=2  (12,0)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _01: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i  ^.layer_0.pos.j
delta: (2,0)=2  (3,0)=2  (3,1)=2  (5,1)=2  (12,0)=2 
! size mismatch, 5x3 instead of 6x5

TRAIN 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (12,1)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (2,0)=2  (8,2)=2  (9,0)=2  (9,4)=2  (10,3)=2  (11,1)=2  (11,3)=2 
   (190.8 bits)
data: a background with size (6,5) and color black and layers
  _0: a rectangle with size (6,4) and color green and mask xxxx|.x.x|.xx.|.x..|.x..|.xxx at (0,1)
diff: 
delta: (4,0)=3  (5,0)=3 
   (68.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (2,0)=2  (8,2)=2  (9,0)=2 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _01: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i  ^.layer_0.pos.j
delta: (2,0)=2  (8,2)=2  (9,0)=2 
! size mismatch, 4x4 instead of 6x5
>> Trial 3
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (12,1)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (2,0)=2  (8,2)=2  (9,0)=2  (9,4)=2  (10,3)=2  (11,1)=2  (11,3)=2 
! 15 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask xx.xx|x.xxx|x....|.x.x.|xxx.x|x.x.. at (0,0)
  _01: a rectangle with size (6,5) and color red and mask ...xx|..x.x|xx...|..x.x|.x.xx|.xx.x at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (7,0)=2 
   (114.5 bits)
data: a background with size (6,5) and color black and layers
  _0: a rectangle with size (6,5) and color green and mask .x...|x....|.x...|.xxxx|x.xx.|xx..x at (0,0)
diff: 
delta: (1,3)=3 
   (55.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask xx.xx|x.xxx|x....|.x.x.|xxx.x|x.x.. at (0,0)
  _01: a rectangle with size (6,5) and color red and mask ...xx|..x.x|xx...|..x.x|.x.xx|.xx.x at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (7,0)=2 
! 16 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .x.x.|xx.xx|.xxx.|.xx..|.xxxx|x.x.x at (0,0)
  _01: a rectangle with size (6,5) and color red and mask x.xxx|.xx..|x.x.x|x...x|xx.x.|x.xx. at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta:
   (94.3 bits)
data: a background with size (6,5) and color black and layers
  _0: a rectangle with size (6,5) and color green and mask xxx.x|x.xxx|xx.xx|xxx.x|x.x.x|...xx at (0,0)
diff: 
delta:
   (36.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .x.x.|xx.xx|.xxx.|.xx..|.xxxx|x.x.x at (0,0)
  _01: a rectangle with size (6,5) and color red and mask x.xxx|.xx..|x.x.x|x...x|xx.x.|x.xx. at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask x.xx.|x..xx|xxx..|xxxxx|.xx..|xxxxx at (0,0)
  _01: a rectangle with size (5,5) and color red and mask x....|xxx..|.xx..|x.xx.|x.xxx at (8,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (7,3)=2  (7,4)=2  (8,4)=2  (9,4)=2 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask x....|xxx..|.xx..|x.xx.|x.xxx at (8,0)
  _01: a rectangle with size (6,5) and color red and mask x.xx.|x..xx|xxx..|xxxxx|.xx..|xxxxx at (0,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff:   ^.layer_0.shape.size.i
delta: (7,3)=2  (7,4)=2  (8,4)=2  (9,4)=2 
! size mismatch, 5x5 instead of 6x5

TEST 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask ..x.x|..x.x|...x.|.xxx.|x.xx.|xxx.x at (0,0)
  _01: a rectangle with size (6,5) and color red and mask xx...|.xxxx|..xx.|.x...|.xx..|x.... at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (0,0)=2  (1,0)=2  (11,4)=2 
! 14 wrong pixels (generated / expected)

TEST 3428a4f5.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.6 sec (20.6 sec/task)
bits-train-error = 2349.5 bits (2349.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-328] Checking task 3618c87e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4918.6 = 4927.5
DL output with Mo: L = 9.0 + 4057.0 = 4065.9
DL input+output M: L = 17.9 + 8975.5 = 8993.5

# learning a model for train pairs
2.000	
1.533	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.163	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.050	OUT DEF: ^.size=^.size
0.957	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.893	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.846	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.812	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.778	OUT DEF: ^.layer_01.shape.color=blue
0.750	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.722	IN  DEF: ^.layer_0.shape.color=grey
0.694	IN  DEF: ^.layer_01.shape.color=blue
0.676	OUT DEF: ^.layer_01.shape.mask=Full
0.665	OUT DEF: ^.color=black
0.656	IN  DEF: ^.color=black
0.647	OUT DEF: ^.layer_01.pos=(?,?)
0.621	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.594	OUT DEF: ^.layer_01.pos.i=4
0.586	OUT DEF: ^.layer_01.shape.size=(?,?)
0.568	OUT DEF: ^.layer_01.shape.size.i=1
0.561	IN  DEF: ^.size=(?,?)
0.520	IN  DEF: ^.size.i=5
0.478	IN  DEF: ^.size.j=5
0.471	IN  DEF: ^.layer_0.pos=(?,?)
0.449	IN  DEF: ^.layer_0.pos.i=3
0.427	IN  DEF: ^.layer_0.pos.j=0
0.420	IN  DEF: ^.layer_0.shape.size=(?,?)
0.378	IN  DEF: ^.layer_0.shape.size.j=5
0.352	IN  DEF: ^.layer_0.shape.size.i=2
0.345	IN  DEF: ^.layer_01.pos=(?,?)
0.323	IN  DEF: ^.layer_01.pos.i=2
0.322	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (1,?) and color ^.layer_01.shape.color and mask Full at (4,^.layer_01.pos.j)
WHERE (Mi)
a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ? at (3,0)
  _01: a point with color blue at (2,?)

DL input  with Mi: L = 73.6 + 879.0 = 952.6
DL output with Mo: L = 54.4 + 469.0 = 523.3
DL input+output M: L = 128.0 + 1348.0 = 1476.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (3,0)
  _01: a point with color blue at (2,2)
diff: 
delta:
   (16.7 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta:
   (15.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (3,0)
  _01: a point with color blue at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (4,0)
  _01: a point with color blue at (2,2)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (3,2)=5#
! 2 wrong pixels (generated / expected)

TRAIN 3618c87e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x.x.|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,3)=1 
   (35.6 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x.x.|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,3)=1 
! 5 wrong pixels (generated / expected)

TRAIN 3618c87e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x..x|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,4)=1 
   (35.6 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x..x|x.xx. at (3,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (4,1)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x..x|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,4)=1 
! 5 wrong pixels (generated / expected)

TRAIN 3618c87e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x.x|xxxxx at (3,0)
  _01: a point with color blue at (2,2)
diff: 
delta: (2,4)=1 
! 5 wrong pixels (generated / expected)

TEST 3618c87e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 469.0 bits (469.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-327] Checking task 3631a71a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 406943.7 = 406952.7
DL output with Mo: L = 9.0 + 373390.1 = 373399.1
DL input+output M: L = 17.9 + 780333.8 = 780351.7

# learning a model for train pairs
2.000	
1.913	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.841	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.782	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.748	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.719	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.697	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.676	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 313495.9 = 313599.7
DL output with Mo: L = 48.0 + 338078.1 = 338126.1
DL input+output M: L = 151.8 + 651574.0 = 651725.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx..|xxxxxx.. at (5,22)
  _01: a rectangle with size (6,7) and color brown and mask Full at (9,12)
  _011: a rectangle with size (5,8) and color blue and mask xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (15,12)
  _0111: a rectangle with size (3,7) and color brown and mask Full at (8,0)
  _01111: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,10)=4  (8,21)=4  (9,7)=7# (9,9)=8  (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (5093.0 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.xx..xx.|xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (12,12)
  _01: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (5,23)=1  (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (6,25)=3  (6,28)=7# (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (7,22)=7# (7,29)=7# (8,0)=6  (8,1)=6  (8,2)=5# (8,3)=5# (8,5)=1  (8,10)=4  (8,21)=4  (8,26)=1  (8,28)=5# (8,29)=5# (9,0)=6  (9,1)=6  (9,2)=5# (9,4)=1  (9,7)=7# (9,9)=8  (9,22)=8  (9,24)=7# (9,27)=1  (9,29)=5# (10,0)=5# (10,1)=5# (10,2)=4  (10,8)=4  (10,11)=5# (10,15)=7# (10,16)=7# (10,20)=5# (10,23)=4  (10,29)=4  (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,14)=7# (11,17)=7# (11,21)=5# (11,24)=2  (11,26)=7# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,12)=1  (12,19)=1  (12,25)=4  (12,27)=7# (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (5714.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx..|xxxxxx.. at (5,22)
  _01: a rectangle with size (6,7) and color brown and mask Full at (9,12)
  _011: a rectangle with size (5,8) and color blue and mask xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (15,12)
  _0111: a rectangle with size (3,7) and color brown and mask Full at (8,0)
  _01111: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,10)=4  (8,21)=4  (9,7)=7# (9,9)=8  (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,5) and color brown and mask Full at (1,21)
  _01: a rectangle with size (2,7) and color brown and mask Full at (28,17)
  _011: a rectangle with size (2,6) and color brown and mask Full at (25,20)
  _0111: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01111: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
   (8517.7 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (1,21)=3  (1,23)=8  (1,24)=3  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,21)=4  (2,22)=3  (2,23)=3  (2,25)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,21)=4  (3,23)=3  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (4,21)=8  (4,23)=1  (4,24)=1  (4,25)=1  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=7# (16,10)=7# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=7# (19,22)=5# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=2  (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,20)=6  (25,21)=6  (25,23)=8  (25,24)=2  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,22)=1  (26,24)=1  (26,25)=1  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,17)=6  (28,21)=4  (28,23)=3  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,17)=6  (29,19)=8  (29,20)=4  (29,21)=4  (29,22)=3  (29,23)=3  (29,25)=4  (29,28)=7# (29,29)=7#
   (8943.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,5) and color brown and mask Full at (1,21)
  _01: a rectangle with size (2,7) and color brown and mask Full at (28,17)
  _011: a rectangle with size (2,6) and color brown and mask Full at (25,20)
  _0111: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01111: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (7,4) and color brown and mask Full at (0,17)
  _01: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _011: a rectangle with size (7,3) and color brown and mask Full at (7,0)
  _0111: a rectangle with size (6,12) and color cyan and mask x..........x|xx........xx|..xx....xx..|..xx....xx..|....x..x....|....xxxx.... at (24,10)
  _01111: a rectangle with size (12,6) and color cyan and mask x...xx|x...x.|x.xx..|x.xx..|xx....|x.....|x.....|xx....|..xx..|..xx..|....x.|....xx at (10,2)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,5)=3  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,3)=3  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,15)=7# (27,16)=7# (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (8469.4 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _01: a rectangle with size (6,12) and color cyan and mask ....xxxx....|....x..x....|..xx....xx..|..xx....xx..|xx........xx|x..........x at (2,10)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,18)=4  (0,19)=4  (0,20)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,18)=4  (1,19)=4  (1,20)=4  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,18)=3  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,14)=7# (5,15)=7# (5,16)=7# (5,17)=7# (5,20)=3  (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,13)=7# (6,15)=5# (6,16)=5# (6,18)=7# (6,25)=1  (6,28)=4  (6,29)=4  (7,2)=4  (7,7)=1  (7,9)=3  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,22)=3  (7,24)=1  (7,29)=4  (8,0)=8  (8,1)=8  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,0)=8  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,1)=4  (10,2)=2  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,0)=4  (11,1)=4  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,0)=4  (12,1)=4  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,0)=4  (13,1)=4  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,10)=8  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,21)=8  (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,10)=8  (25,11)=8  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,20)=8  (25,21)=8  (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,12)=8  (26,13)=8  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,18)=8  (26,19)=8  (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,12)=8  (27,13)=8  (27,15)=7# (27,16)=7# (27,18)=8  (27,19)=8  (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,14)=8  (28,17)=8  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,14)=8  (29,15)=8  (29,16)=8  (29,17)=8  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (9389.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (7,4) and color brown and mask Full at (0,17)
  _01: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _011: a rectangle with size (7,3) and color brown and mask Full at (7,0)
  _0111: a rectangle with size (6,12) and color cyan and mask x..........x|xx........xx|..xx....xx..|..xx....xx..|....x..x....|....xxxx.... at (24,10)
  _01111: a rectangle with size (12,6) and color cyan and mask x...xx|x...x.|x.xx..|x.xx..|xx....|x.....|x.....|xx....|..xx..|..xx..|....x.|....xx at (10,2)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,5)=3  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,3)=3  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,15)=7# (27,16)=7# (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|.....x....xx....|.....x.xx.x.x...|......xxxx.xxx..|.....x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (7,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxx..x|xxxxx..x|xxx.x... at (11,5)
  _011: a rectangle with size (20,9) and color red and mask ......x..|.......xx|.......x.|......x..|.....x...|....xxxxx|...x.xxxx|..x..xxxx|.x...xxxx|x....xxxx|x....xxxx|.x...xxx.|..x......|...x.....|....x....|.....x...|......x..|.......x.|.......xx|......x.. at (6,0)
  _0111: a rectangle with size (7,2) and color brown and mask Full at (23,9)
  _01111: a rectangle with size (4,3) and color brown and mask Full at (7,27)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,15)=2  (0,16)=2  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,14)=2  (1,17)=2  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,13)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=2  (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,12)=2  (3,14)=7# (3,17)=7# (3,19)=2  (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,20)=2  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,21)=2  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,22)=2  (6,25)=2  (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,23)=2  (7,24)=2  (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,24)=2  (8,26)=3  (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,25)=2  (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,26)=2  (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,27)=2  (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (12,28)=2  (13,0)=3  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (13,29)=2  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (9269.4 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x.x.xx.x.x...|..xxx.xxxx.xxx..|.x...x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (4,4) and color pink and mask Border at (14,14)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,15)=2  (0,16)=2  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,14)=2  (1,17)=2  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,13)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=2  (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,12)=2  (3,14)=7# (3,17)=7# (3,19)=2  (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=3  (4,11)=2  (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,20)=2  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,10)=2  (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,21)=2  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,6)=2  (6,9)=2  (6,10)=7# (6,11)=7# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,22)=2  (6,25)=2  (6,27)=6  (7,7)=2  (7,8)=2  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,23)=2  (7,24)=2  (8,3)=6  (8,4)=3  (8,5)=3  (8,7)=2  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,24)=2  (8,26)=3  (8,27)=3  (8,28)=6  (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,6)=2  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,25)=2  (9,27)=3  (9,28)=6  (9,29)=6  (10,1)=6  (10,2)=3  (10,3)=3  (10,5)=2  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,26)=2  (10,28)=3  (10,29)=3  (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,4)=2  (11,6)=7# (11,8)=1  (11,9)=1  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,27)=2  (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,3)=2  (12,4)=4  (12,5)=4  (12,6)=1  (12,8)=7# (12,9)=7# (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (12,28)=2  (13,0)=3  (13,2)=2  (13,4)=4  (13,5)=4  (13,8)=7# (13,23)=7# (13,26)=4  (13,27)=4  (13,29)=2  (14,1)=2  (14,2)=7# (14,3)=7# (14,4)=1  (14,10)=4  (14,11)=4  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,0)=2  (15,2)=7# (15,7)=4  (15,10)=4  (15,21)=4  (15,24)=4  (15,29)=7# (16,0)=2  (16,2)=7# (16,7)=4  (16,10)=4  (16,21)=4  (16,24)=4  (16,29)=7# (17,1)=2  (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,2)=2  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,3)=2  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,4)=2  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,5)=2  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,6)=2  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,7)=2  (23,9)=8  (23,10)=1  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,7)=2  (24,8)=2  (24,10)=7# (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,6)=2  (25,9)=2  (25,10)=7# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,10)=2  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=3  (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=6  (28,10)=3  (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=6  (29,10)=3  (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (9759.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|.....x....xx....|.....x.xx.x.x...|......xxxx.xxx..|.....x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (7,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxx..x|xxxxx..x|xxx.x... at (11,5)
  _011: a rectangle with size (20,9) and color red and mask ......x..|.......xx|.......x.|......x..|.....x...|....xxxxx|...x.xxxx|..x..xxxx|.x...xxxx|x....xxxx|x....xxxx|.x...xxx.|..x......|...x.....|....x....|.....x...|......x..|.......x.|.......xx|......x.. at (6,0)
  _0111: a rectangle with size (7,2) and color brown and mask Full at (23,9)
  _01111: a rectangle with size (4,3) and color brown and mask Full at (7,27)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,15)=2  (0,16)=2  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,14)=2  (1,17)=2  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,13)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=2  (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,12)=2  (3,14)=7# (3,17)=7# (3,19)=2  (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,20)=2  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,21)=2  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,22)=2  (6,25)=2  (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,23)=2  (7,24)=2  (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,24)=2  (8,26)=3  (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,25)=2  (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,26)=2  (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,27)=2  (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (12,28)=2  (13,0)=3  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (13,29)=2  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (9,7) and color brown and mask xxxxx..|xxxxx..|xxxxx..|xxxxx..|xxxxxxx|..xxxxx|..xxxxx|..xxxxx|..xxxxx at (3,20)
  _01: a rectangle with size (3,7) and color brown and mask Full at (2,0)
  _011: a rectangle with size (12,12) and color pink and mask ...........x|..........xx|xxxxxxx..x..|xxxxxxx.xx..|xxxxxxxx....|......xx....|.....x......|....xx......|...x........|..xx........|.x..........|xx.......... at (0,0)
  _0111: a rectangle with size (12,6) and color pink and mask .....x|....x.|..xx..|..xx..|.x....|x.....|x.....|.x....|..xx..|..xx..|....x.|.....x at (10,2)
  _01111: a rectangle with size (2,7) and color brown and mask Full at (27,18)
diff: 
delta: (0,0)=8  (0,2)=7# (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,9)=3  (0,13)=8  (0,18)=8  (0,20)=6  (0,22)=3  (0,24)=1  (0,25)=1  (0,26)=7# (0,27)=7# (0,29)=7# (1,1)=8  (1,4)=7# (1,5)=7# (1,6)=1  (1,7)=1  (1,8)=3  (1,9)=3  (1,12)=8  (1,13)=8  (1,18)=8  (1,19)=8  (1,20)=6  (1,21)=6  (1,22)=3  (1,23)=3  (1,24)=1  (1,25)=1  (1,26)=7# (1,27)=7# (2,7)=8  (2,10)=7# (2,11)=7# (2,15)=6  (2,16)=6  (2,20)=7# (2,21)=7# (2,22)=6  (2,24)=8  (2,26)=1  (2,27)=1  (2,29)=2  (3,10)=7# (3,11)=7# (3,14)=6  (3,17)=6  (3,25)=8  (3,26)=1  (3,27)=1  (4,9)=8  (4,12)=6  (4,13)=6  (4,18)=6  (4,19)=6  (4,28)=1  (4,29)=1  (5,0)=7# (5,1)=7# (5,2)=1  (5,3)=1  (5,5)=5# (5,8)=8  (5,9)=8  (5,12)=6  (5,13)=6  (5,18)=6  (5,19)=6  (5,25)=6  (5,26)=5# (5,28)=1  (5,29)=1  (6,0)=1  (6,1)=1  (6,3)=8  (6,6)=2  (6,11)=6  (6,14)=5# (6,15)=5# (6,16)=5# (6,17)=5# (6,25)=2  (6,26)=6  (6,28)=8  (7,0)=1  (7,1)=1  (7,2)=8  (7,7)=2  (7,10)=6  (7,14)=5# (7,17)=5# (7,27)=6  (7,29)=8  (8,1)=3  (8,5)=8  (8,12)=6  (8,14)=3  (8,17)=3  (8,19)=6  (8,28)=6  (9,0)=3  (9,1)=3  (9,4)=8  (9,5)=8  (9,9)=6  (9,11)=5# (9,15)=3  (9,16)=3  (9,20)=5# (9,27)=8  (9,28)=6  (9,29)=6  (10,2)=7# (10,3)=7# (10,12)=3  (10,15)=6  (10,16)=6  (10,19)=3  (10,28)=7# (10,29)=7# (11,2)=7# (11,3)=7# (11,9)=5# (11,13)=3  (11,14)=6  (11,15)=6  (11,16)=6  (11,17)=6  (11,18)=3  (11,28)=7# (11,29)=7# (12,1)=8  (12,8)=6  (12,10)=3  (12,13)=4  (12,14)=3  (12,17)=3  (12,18)=4  (12,21)=3  (12,23)=6  (12,26)=6  (12,27)=6  (13,0)=8  (13,1)=8  (13,11)=3  (13,12)=4  (13,19)=4  (13,20)=3  (13,26)=6  (13,27)=6  (14,6)=5# (14,7)=5# (14,8)=3  (14,11)=6  (14,12)=3  (14,14)=2  (14,17)=2  (14,19)=3  (14,20)=6  (14,23)=3  (14,24)=5# (14,25)=5# (14,28)=6  (15,6)=5# (15,9)=3  (15,10)=6  (15,11)=6  (15,15)=2  (15,16)=2  (15,20)=6  (15,21)=6  (15,22)=3  (15,25)=5# (15,29)=6  (16,6)=5# (16,9)=3  (16,10)=6  (16,11)=6  (16,15)=2  (16,16)=2  (16,20)=6  (16,21)=6  (16,22)=3  (16,25)=5# (16,29)=6  (17,6)=5# (17,7)=5# (17,8)=3  (17,11)=6  (17,12)=3  (17,14)=2  (17,17)=2  (17,19)=3  (17,20)=6  (17,23)=3  (17,24)=5# (17,25)=5# (17,28)=6  (18,0)=8  (18,1)=8  (18,11)=3  (18,12)=4  (18,19)=4  (18,20)=3  (18,26)=6  (18,27)=6  (19,1)=8  (19,8)=6  (19,10)=3  (19,13)=4  (19,14)=3  (19,17)=3  (19,18)=4  (19,21)=3  (19,23)=6  (19,26)=6  (19,27)=6  (20,0)=6  (20,1)=6  (20,2)=7# (20,3)=7# (20,9)=5# (20,13)=3  (20,14)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=3  (20,22)=5# (20,25)=6  (20,28)=7# (20,29)=7# (21,1)=6  (21,2)=7# (21,3)=7# (21,12)=3  (21,15)=6  (21,16)=6  (21,19)=3  (21,24)=6  (21,28)=7# (21,29)=7# (22,0)=3  (22,1)=3  (22,2)=6  (22,3)=6  (22,4)=8  (22,5)=8  (22,9)=6  (22,11)=5# (22,15)=3  (22,16)=3  (22,20)=5# (22,22)=6  (22,26)=8  (22,27)=8  (22,28)=6  (22,29)=6  (23,1)=3  (23,3)=6  (23,5)=8  (23,12)=6  (23,14)=3  (23,17)=3  (23,19)=6  (23,26)=8  (23,28)=6  (24,0)=1  (24,1)=1  (24,2)=8  (24,4)=6  (24,5)=6  (24,7)=2  (24,10)=6  (24,14)=5# (24,17)=5# (24,21)=6  (24,24)=2  (24,26)=6  (24,27)=6  (24,29)=8  (25,0)=1  (25,1)=1  (25,3)=8  (25,5)=6  (25,6)=2  (25,11)=6  (25,14)=5# (25,15)=5# (25,16)=5# (25,17)=5# (25,20)=6  (25,25)=2  (25,26)=6  (25,28)=8  (26,0)=7# (26,1)=7# (26,2)=1  (26,3)=1  (26,5)=5# (26,6)=6  (26,7)=6  (26,8)=8  (26,9)=8  (26,12)=6  (26,13)=6  (26,18)=6  (26,19)=6  (26,22)=8  (26,23)=8  (26,24)=6  (26,25)=6  (26,26)=5# (26,28)=1  (26,29)=1  (27,0)=7# (27,1)=7# (27,2)=1  (27,3)=1  (27,7)=6  (27,9)=8  (27,12)=6  (27,13)=6  (27,28)=1  (27,29)=1  (28,4)=1  (28,5)=1  (28,6)=8  (28,8)=6  (28,9)=6  (28,10)=7# (28,11)=7# (28,14)=6  (28,17)=6  (28,25)=8  (28,26)=1  (28,27)=1  (29,0)=7# (29,2)=2  (29,4)=1  (29,5)=1  (29,7)=8  (29,9)=6  (29,10)=7# (29,11)=7# (29,15)=6  (29,16)=6  (29,20)=7# (29,21)=7# (29,22)=6  (29,24)=8  (29,26)=1  (29,27)=1  (29,29)=2 
! size mismatch, 10x10 instead of 30x30

TEST 3631a71a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.5 sec (29.5 sec/task)
bits-train-error = 338078.1 bits (338078.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-326] Checking task 363442ee.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13720.5 = 13729.5
DL output with Mo: L = 9.0 + 33687.2 = 33696.2
DL input+output M: L = 17.9 + 47407.7 = 47425.7

# learning a model for train pairs
2.000	
1.688	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.544	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.431	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.334	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.249	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.190	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.153	OUT OBJECT at ^.layer_0110: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _0110: ^.layer_01.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 8071.8 = 8119.8
DL output with Mo: L = 84.0 + 18849.3 = 18933.3
DL input+output M: L = 132.0 + 26921.1 = 27053.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color red and mask Full at (0,0)
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (2,1)=4  (2,2)=4  (4,8)=1  (7,8)=1 
   (239.5 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,7) and color red and mask Full at (0,0)
  _0110: a rectangle with size (2,3) and color red and mask Full at (3,7)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (2,1)
  _0111: a rectangle with size (2,3) and color red and mask Full at (6,7)
diff: 
delta: (0,0)=4  (0,4)=4  (1,1)=6  (1,5)=6  (2,0)=6  (2,4)=6  (3,7)=4  (4,8)=6  (5,7)=6  (5,8)=4  (5,9)=4  (6,7)=4  (7,8)=6  (8,7)=6  (8,8)=4  (8,9)=4 
   (446.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color red and mask Full at (0,0)
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (2,1)=4  (2,2)=4  (4,8)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (9,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (2,1)=4  (2,2)=4  (4,8)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (2,1)=7# (2,2)=7# (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
   (289.3 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (6,9) and color green and mask ........x|.......xx|......x..|..x..x...|.xx.xx...|x..x..... at (3,4)
  _0110: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
  _011: a rectangle with size (6,6) and color green and mask .....x|....xx|...x..|..x...|.xx...|x..... at (0,4)
  _0111: a rectangle with size (4,2) and color orange and mask Full at (5,5)
diff: 
delta: (0,0)=2  (0,1)=7# (0,7)=2  (0,8)=7# (1,0)=2  (1,7)=2  (2,1)=7# (2,2)=7# (2,8)=7# (2,9)=7# (3,4)=2  (3,5)=7# (3,10)=2  (3,11)=7# (4,4)=2  (4,10)=2  (5,11)=7# (5,12)=7# (6,4)=2  (6,7)=2  (6,8)=7# (7,4)=2  (7,7)=2  (8,8)=7# (8,9)=7#
   (721.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (2,1)=7# (2,2)=7# (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|.xx|x.. at (0,0)
  _01: a rectangle with size (9,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (2,1)=7# (2,2)=7# (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (1,1)
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=3  (1,0)=2  (1,8)=1  (2,0)=3  (2,1)=7# (2,2)=7# (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask Full at (1,0)
  _01: a rectangle with size (9,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (1,1)=8  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
   (278.4 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask Full at (1,10)
  _01: a rectangle with size (2,6) and color brown and mask Full at (7,7)
  _0110: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (2,7) and color brown and mask Full at (1,0)
  _0111: a rectangle with size (2,3) and color brown and mask Full at (4,7)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (0,4)=3  (0,5)=8  (0,6)=6  (0,10)=3  (0,11)=8  (0,12)=6  (1,1)=8  (1,2)=2  (1,5)=8  (1,6)=2  (1,11)=8  (1,12)=2  (3,7)=3  (3,8)=8  (3,9)=6  (4,8)=8  (4,9)=2  (6,7)=3  (6,8)=8  (6,9)=6  (6,10)=3  (6,11)=8  (6,12)=6  (7,8)=8  (7,9)=2  (7,11)=8  (7,12)=2 
   (717.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color brown and mask Full at (1,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (1,1)=8  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask Full at (1,0)
  _01: a rectangle with size (9,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (1,1)=8  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color brown and mask x..|xxx at (1,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (1,1)=8  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=9# (1,0)=8  (1,1)=4  (1,2)=4  (1,8)=1  (1,11)=1  (2,0)=8  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (9,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,2)=9# (1,0)=8  (1,1)=4  (1,2)=4  (1,8)=1  (1,11)=1  (2,0)=8  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TEST 363442ee.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.3 sec (28.3 sec/task)
bits-train-error = 18849.3 bits (18849.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-325] Checking task 36d67576.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13910.0 = 13919.0
DL output with Mo: L = 9.0 + 18652.7 = 18661.7
DL input+output M: L = 17.9 + 32562.7 = 32580.6

# learning a model for train pairs
2.000	
1.867	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.727	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.593	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.453	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.318	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.178	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
1.145	OUT DEF: ^.size=^.size
1.126	OUT DEF: ^.layer_0=^.layer_0
1.107	OUT DEF: ^.layer_01=^.layer_01
1.089	OUT DEF: ^.layer_011=^.layer_011
1.073	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.039	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
1.005	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at ?
0.986	OUT DEF: ^.layer_0111=^.layer_0111
0.975	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
0.967	IN  OBJECT at ^.layer_01110: a point with color ? at ?
0.953	OUT OBJECT at ^.layer_01110: ^.layer_01110.shape at ?
0.940	OUT OBJECT at ^.layer_0111111: ^.layer_01110.shape at ?
0.927	OUT OBJECT at ^.layer_01111111: ^.layer_01110.shape at ?
0.908	OUT DEF: ^.layer_01110=^.layer_01110
0.900	IN  OBJECT at ^.layer_011101: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _01110: ^.layer_01110
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
  _0111111: ^.layer_01110.shape at ?
  _01111111: ^.layer_01110.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _01110: a point with color ? at ?
  _011101: a point with color ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 108.9 + 7775.9 = 7884.8
DL output with Mo: L = 87.6 + 6133.3 = 6220.8
DL input+output M: L = 196.4 + 13909.2 = 14105.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _01110: a point with color blue at (1,2)
  _011101: a point with color red at (1,5)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,4)
diff: 
delta: (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
   (268.8 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _01110: a point with color blue at (1,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,4)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (3,11)
  _011111: a rectangle with size (1,1) and color red and mask Full at (1,5)
  _0111111: a point with color blue at (5,11)
  _01111111: a point with color blue at (9,4)
diff: 
delta: (2,9)=3  (3,1)=3  (3,3)=3  (3,5)=3  (4,9)=3  (6,9)=3  (6,11)=2  (7,3)=3  (7,5)=3  (7,7)=3  (9,3)=2  (9,6)=1 
   (303.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _01110: a point with color blue at (1,2)
  _011101: a point with color blue at (1,4)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,5)
diff: 
delta: (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _01110: a point with color blue at (1,2)
  _011101: a point with color blue at (1,4)
  _0111: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta: (1,5)=2  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _01110: a point with color blue at (1,2)
  _011101: a point with color red at (1,5)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,4)
diff: 
delta: (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
! 20 wrong pixels (generated / expected)

TRAIN 36d67576.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _01110: a point with color red at (1,4)
  _011101: a point with color blue at (2,5)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
diff: 
delta: (4,9)=2  (11,6)=2 
   (246.1 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _01110: a point with color red at (1,4)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a rectangle with size (1,4) and color green and mask Full at (7,8)
  _011111: a rectangle with size (4,1) and color green and mask Full at (9,3)
  _0111111: a point with color red at (4,9)
  _01111111: a point with color red at (11,6)
diff: 
delta: (2,5)=1  (5,8)=1  (12,5)=1 
   (126.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _01110: a point with color red at (1,4)
  _011101: a point with color blue at (2,5)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
diff: 
delta: (4,9)=2  (11,6)=2 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _01110: a point with color blue at (2,5)
  _011101: a point with color red at (1,4)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
diff: 
delta: (4,9)=2  (11,6)=2 
! 17 wrong pixels (generated / expected)

TRAIN 36d67576.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (9,3)
  _01110: a point with color red at (1,4)
  _011101: a point with color blue at (2,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (3,2)
diff: 
delta: (4,3)=1  (5,7)=2  (11,3)=2 
   (262.6 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (9,3)
  _01110: a point with color red at (1,4)
  _0111: a rectangle with size (1,1) and color green and mask Full at (3,2)
  _01111: a rectangle with size (1,1) and color green and mask Full at (7,9)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _0111111: a point with color red at (5,7)
  _01111111: a point with color red at (11,3)
diff: 
delta: (4,3)=1  (6,10)=1  (8,4)=1  (8,8)=1  (9,5)=3  (10,6)=1 
   (183.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (9,3)
  _01110: a point with color red at (1,4)
  _011101: a point with color blue at (2,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (3,2)
diff: 
delta: (4,3)=1  (5,7)=2  (11,3)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (9,3)
  _01110: a point with color red at (1,4)
  _011101: a point with color blue at (2,1)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (4,3)
diff: 
delta: (3,2)=3  (5,7)=2  (11,3)=2 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (9,3)
  _01110: a point with color red at (1,4)
  _011101: a point with color green at (3,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (2,1)
diff: 
delta: (4,3)=1  (5,7)=2  (11,3)=2 
! 14 wrong pixels (generated / expected)

TRAIN 36d67576.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (3,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (3,10)
  _011: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (9,1)
  _01110: a point with color blue at (2,2)
  _011101: a point with color green at (2,3)
  _0111: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (9,8)
diff: 
delta: (3,4)=2  (4,5)=3  (5,5)=1  (5,12)=2  (9,8)=2  (11,1)=2 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (3,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (3,10)
  _011: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (9,1)
  _01110: a point with color green at (2,3)
  _011101: a point with color blue at (2,2)
  _0111: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (9,8)
diff: 
delta: (3,4)=2  (4,5)=3  (5,5)=1  (5,12)=2  (9,8)=2  (11,1)=2 
! 27 wrong pixels (generated / expected)

TEST 36d67576.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.4 sec (26.4 sec/task)
bits-train-error = 6133.3 bits (6133.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-324] Checking task 36fdfd69.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 74678.6 = 74687.5
DL output with Mo: L = 9.0 + 76026.3 = 76035.2
DL input+output M: L = 17.9 + 150704.8 = 150722.8

# learning a model for train pairs
2.000	
1.687	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.471	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.260	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.140	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.027	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.930	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 26652.0 = 26718.7
DL output with Mo: L = 66.8 + 43441.0 = 43507.8
DL input+output M: L = 133.5 + 70093.0 = 70226.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,13) and color blue and mask x....xx......|xx.xxxxxx....|xxx.x........|x..x.........|.xxx.........|x.x..........|x.x..........|...x.........|...xx........|.....x.......|....xx.x.x.x.|......xxxxx..|.....xx.x....|........xx...|......x..x...|......xxx.x.x|......xxx.xx. at (0,0)
  _01: a rectangle with size (17,8) and color blue and mask ...x....|.x.xxx..|xxx..xx.|x...xxxx|..x.xx..|xxxx....|....xx.x|....x.x.|......xx|....xx..|.x.x....|x..xx..x|...x.xxx|...xxx..|.....xx.|x.x..xxx|xx.....x at (0,10)
  _011: a rectangle with size (3,7) and color red and mask Full at (1,2)
diff: 
delta: (0,17)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,5)=1  (5,6)=1  (6,6)=1  (6,8)=1  (7,6)=1  (7,10)=1  (7,15)=2  (8,1)=1  (8,9)=1  (8,14)=2  (8,15)=2  (10,1)=1  (10,2)=1  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,1)=1  (13,11)=1  (14,2)=1  (16,0)=1  (16,3)=1 
   (1080.4 bits)
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,8) and color blue and mask ...x....|.x.xxx..|xxx..xx.|x...xxxx|..x.xx..|xxxx....|....xx.x|......x.|......xx|....xx..|...x....|...xx..x|...x.xxx|...xxx..|.....xx.|.....xxx|.......x at (0,10)
  _01: a rectangle with size (11,6) and color blue and mask x.....|xx....|xx....|x.....|.xxx..|x.x...|x.x...|...x..|...xx.|.....x|....xx at (0,0)
  _011: a rectangle with size (4,7) and color blue and mask ..xx...|x..x...|xxx.x.x|xxx.xx. at (13,6)
diff: 
delta: (0,5)=1  (0,6)=1  (0,17)=1  (1,2)=2  (1,3)=4  (1,4)=4  (1,5)=4  (1,6)=4  (1,7)=4  (1,8)=4  (2,2)=4  (2,3)=2  (2,4)=4  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,2)=2  (3,3)=4  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (4,6)=1  (4,7)=1  (4,8)=1  (5,5)=1  (5,6)=1  (6,6)=1  (6,8)=1  (7,6)=1  (7,10)=1  (7,14)=4  (7,15)=2  (8,1)=1  (8,9)=1  (8,14)=2  (8,15)=2  (10,1)=1  (10,2)=1  (10,6)=2  (10,7)=4  (10,8)=2  (10,9)=4  (10,10)=2  (10,11)=1  (11,6)=4  (11,7)=4  (11,8)=4  (11,9)=4  (11,10)=4  (12,5)=1  (12,6)=4  (12,7)=2  (12,8)=4  (12,9)=2  (12,10)=2  (13,1)=1  (13,11)=1  (14,2)=1  (16,0)=1  (16,3)=1 
   (1671.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,13) and color blue and mask x....xx......|xx.xxxxxx....|xxx.x........|x..x.........|.xxx.........|x.x..........|x.x..........|...x.........|...xx........|.....x.......|....xx.x.x.x.|......xxxxx..|.....xx.x....|........xx...|......x..x...|......xxx.x.x|......xxx.xx. at (0,0)
  _01: a rectangle with size (17,8) and color blue and mask ...x....|.x.xxx..|xxx..xx.|x...xxxx|..x.xx..|xxxx....|....xx.x|....x.x.|......xx|....xx..|.x.x....|x..xx..x|...x.xxx|...xxx..|.....xx.|x.x..xxx|xx.....x at (0,10)
  _011: a rectangle with size (3,7) and color red and mask Full at (1,2)
diff: 
delta: (0,17)=1  (4,6)=1  (4,7)=1  (4,8)=1  (5,5)=1  (5,6)=1  (6,6)=1  (6,8)=1  (7,6)=1  (7,10)=1  (7,15)=2  (8,1)=1  (8,9)=1  (8,14)=2  (8,15)=2  (10,1)=1  (10,2)=1  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,1)=1  (13,11)=1  (14,2)=1  (16,0)=1  (16,3)=1 
! size mismatch, 10x10 instead of 17x18

TRAIN 36fdfd69.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (8,10) and color cyan and mask ..xxxxx...|...x.x.x..|xxxxxx.x.x|...x.xx.x.|......x.x.|.....x..xx|.....xx...|.....xxx.. at (0,6)
  _01: a rectangle with size (6,7) and color cyan and mask x...xxx|x..xx.x|.xx.xxx|.x....x|.x.xxxx|.xxxxxx at (9,9)
  _011: a rectangle with size (15,10) and color cyan and mask x.......xx|.x.......x|..xxx.xxxx|..x.x....x|...x...x..|x..x.xxx..|x..xx.xxxx|x.x.x.x.xx|x...x.....|x.xx.xxx.x|x..xx.xx.x|.x...xx...|x..xxxx...|.xx.xxx...|xxx.x.x... at (0,0)
diff: 
delta: (0,5)=8  (3,13)=2  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,13)=2  (5,2)=2  (5,4)=2  (7,15)=8  (9,4)=2  (10,2)=2  (10,5)=2  (11,9)=2  (12,9)=2  (12,11)=2 
   (760.8 bits)
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.......|x.......|x.......|x.......|x.....xx|x.....xx|.x...xx.|x..xxxx.|.xx.xxx.|xxx.x.x. at (5,0)
  _01: a rectangle with size (6,6) and color cyan and mask ...xxx|..xx.x|...xxx|.....x|x.xxxx|xxxxxx at (9,10)
  _011: a rectangle with size (6,10) and color cyan and mask ..xxxxx...|...x.x.x..|xxxxxx.x.x|...x....x.|........x.|........xx at (0,6)
diff: 
delta: (0,0)=8  (0,5)=8  (1,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,2)=8  (3,4)=8  (3,11)=4  (3,12)=4  (3,13)=2  (4,2)=2  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=8  (4,11)=2  (4,12)=4  (4,13)=2  (5,2)=2  (5,3)=4  (5,4)=2  (5,5)=4  (5,6)=4  (5,7)=8  (5,11)=8  (6,3)=8  (6,4)=8  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,11)=8  (6,12)=8  (7,2)=8  (7,4)=8  (7,6)=8  (7,8)=8  (7,9)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,15)=8  (8,4)=8  (9,2)=4  (9,3)=4  (9,4)=2  (9,5)=4  (9,9)=8  (10,2)=2  (10,3)=4  (10,4)=4  (10,5)=2  (10,9)=8  (11,9)=2  (11,10)=4  (11,11)=4  (12,9)=2  (12,10)=4  (12,11)=2 
   (1552.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (8,10) and color cyan and mask ..xxxxx...|...x.x.x..|xxxxxx.x.x|...x.xx.x.|......x.x.|.....x..xx|.....xx...|.....xxx.. at (0,6)
  _01: a rectangle with size (6,7) and color cyan and mask x...xxx|x..xx.x|.xx.xxx|.x....x|.x.xxxx|.xxxxxx at (9,9)
  _011: a rectangle with size (15,10) and color cyan and mask x.......xx|.x.......x|..xxx.xxxx|..x.x....x|...x...x..|x..x.xxx..|x..xx.xxxx|x.x.x.x.xx|x...x.....|x.xx.xxx.x|x..xx.xx.x|.x...xx...|x..xxxx...|.xx.xxx...|xxx.x.x... at (0,0)
diff: 
delta: (0,5)=8  (3,13)=2  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,13)=2  (5,2)=2  (5,4)=2  (7,15)=8  (9,4)=2  (10,2)=2  (10,5)=2  (11,9)=2  (12,9)=2  (12,11)=2 
! size mismatch, 10x10 instead of 15x16

TRAIN 36fdfd69.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (15,9) and color green and mask ..x.xx...|xx.x.....|..xxx....|..xxx....|..x......|xx.......|.x.......|xx......x|xx.....xx|xx.....x.|..xx...x.|...xx.x.x|...x.xx.x|...x.....|....xx... at (0,5)
  _01: a rectangle with size (7,7) and color green and mask ..xx.xx|xxx..xx|.x.x...|.xx.xx.|..x.xx.|.xx.x.x|x..x... at (8,0)
  _011: a rectangle with size (3,5) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,1)=3  (1,2)=3  (1,12)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,12)=3  (3,13)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,11)=3  (5,12)=3  (6,1)=3  (6,10)=3  (7,8)=3  (8,8)=3  (8,9)=3  (9,3)=2  (9,10)=3  (10,2)=2  (14,12)=3  (14,13)=3 
   (824.0 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (8,9) and color green and mask xx......x|xx.....xx|xx.....x.|..xx...x.|...xx.x.x|...x.xx.x|...x.....|....xx... at (7,5)
  _01: a rectangle with size (7,7) and color green and mask ..xx.xx|xx...xx|.x.....|.xx.xx.|..x.xx.|.xx.x.x|x..x... at (8,0)
  _011: a rectangle with size (3,5) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,7)=4  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,5)=4  (5,6)=4  (5,11)=3  (5,12)=3  (6,1)=3  (6,6)=4  (6,10)=3  (7,8)=3  (8,8)=3  (8,9)=3  (9,2)=4  (9,3)=2  (9,10)=3  (10,2)=2  (10,3)=4  (14,12)=3  (14,13)=3 
   (1120.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (15,9) and color green and mask ..x.xx...|xx.x.....|..xxx....|..xxx....|..x......|xx.......|.x.......|xx......x|xx.....xx|xx.....x.|..xx...x.|...xx.x.x|...x.xx.x|...x.....|....xx... at (0,5)
  _01: a rectangle with size (7,7) and color green and mask ..xx.xx|xxx..xx|.x.x...|.xx.xx.|..x.xx.|.xx.x.x|x..x... at (8,0)
  _011: a rectangle with size (3,5) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,1)=3  (1,2)=3  (1,12)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,12)=3  (3,13)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,11)=3  (5,12)=3  (6,1)=3  (6,10)=3  (7,8)=3  (8,8)=3  (8,9)=3  (9,3)=2  (9,10)=3  (10,2)=2  (14,12)=3  (14,13)=3 
! size mismatch, 10x10 instead of 15x14

TRAIN 36fdfd69.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,18) and color brown and mask ........xx........|.........x..x.....|........xxx..x..x.|.........xxxxxx.x.|......x.xx.x..xxxx|.....x.x..x..x....|.....x....x.xx....|..xx.x..x.xx.xxx..|...x...xxxxx.x....|xx.x.x.xx..xx.....|.xx.x.x.x..x......|.xx..x.xxx........|x.xx.xxx..x.......|xxxxxx....x.......|.xxxxxx.x.........|.x.x..xx.x........|x................. at (0,0)
  _01: a rectangle with size (8,6) and color brown and mask x....x|..xxxx|.xxx.x|..xxx.|.x..x.|x.xx.x|.x..x.|x.xxx. at (9,12)
  _011: a rectangle with size (3,6) and color red and mask Full at (13,11)
diff: 
delta: (0,3)=9# (0,4)=9# (0,5)=9# (0,16)=9# (1,0)=9# (1,1)=2  (1,2)=9# (1,3)=2  (1,4)=2  (1,5)=9# (2,1)=2  (2,2)=2  (2,3)=9# (2,4)=9# (2,5)=2  (4,1)=9# (4,2)=9# (5,0)=9# (5,1)=9# (5,2)=9# (5,3)=9# (5,6)=2  (5,8)=2  (5,9)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,0)=9# (7,17)=9# (10,7)=2  (11,6)=2 
! size mismatch, 10x10 instead of 17x18

TEST 36fdfd69.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.1 sec (29.1 sec/task)
bits-train-error = 43441.0 bits (43441.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-323] Checking task 3906de3d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 18303.0 = 18312.0
DL output with Mo: L = 9.0 + 18303.0 = 18312.0
DL input+output M: L = 17.9 + 36606.1 = 36624.0

# learning a model for train pairs
2.000	
1.325	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.681	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.547	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.469	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.437	OUT DEF: ^.size=^.size
0.420	OUT DEF: ^.layer_00=^.layer_0
0.412	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.404	IN  DEF: ^.layer_0.shape.color=blue
0.395	OUT DEF: ^.layer_0.shape=^.layer_01.shape
0.388	IN  DEF: ^.layer_01.shape.color=red
0.373	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.369	IN  DEF: ^.layer_01.shape.mask=Full
0.366	IN  DEF: ^.color=black
0.364	OUT DEF: ^.color=black
0.362	OUT DEF: ^.layer_0.pos=(?,?)
0.354	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j
0.348	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i - ^.layer_00.pos.j
0.346	IN  DEF: ^.size=(?,?)
0.331	IN  DEF: ^.size.i=10
0.317	IN  DEF: ^.size.j=10
0.315	IN  DEF: ^.layer_0.pos=(?,?)
0.307	IN  DEF: ^.layer_0.pos.i=(0)
0.306	IN  DEF: ^.layer_0.shape.size=(?,?)
0.304	IN  DEF: ^.layer_01.pos=(?,?)
0.302	IN  DEF: ^.layer_00.pos=(?,?)
0.300	IN  DEF: ^.layer_00.shape.size=(?,?)
0.298	IN  DEF: ^.layer_01.shape.size=(?,?)
0.294	IN  DEF: ^.layer_01.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: ^.layer_01.shape at (^.layer_01.pos.i - ^.layer_00.pos.j,^.layer_01.pos.j)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask ? at ((0),?)
  _01: a rectangle with size (?,1) and color red and mask Full at (?,?)

DL input  with Mi: L = 109.8 + 3445.7 = 3555.6
DL output with Mo: L = 44.3 + 1784.2 = 1828.4
DL input+output M: L = 154.1 + 5229.9 = 5384.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,2) and color blue and mask Full at (0,5)
  _0: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
   (82.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _0: a rectangle with size (3,1) and color red and mask Full at (2,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,2) and color blue and mask Full at (0,2)
  _0: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,2) and color blue and mask Full at (0,5)
  _0: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
correct output grid

TRAIN 3906de3d.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color red and mask Full at (9,4)
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta:
   (94.1 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _0: a rectangle with size (4,1) and color red and mask Full at (2,6)
diff: 
delta: (1,4)=2 
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,1) and color red and mask Full at (6,6)
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (1,1) and color red and mask Full at (9,4)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _0: a rectangle with size (4,1) and color red and mask Full at (6,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (9,4)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta:
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _0: a rectangle with size (1,1) and color red and mask Full at (9,4)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta:
! 31 wrong pixels (generated / expected)

TRAIN 3906de3d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
  _0: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta: (7,8)=2  (8,8)=2  (9,8)=2 
   (167.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _0: a rectangle with size (4,1) and color red and mask Full at (3,6)
diff: 
delta: (1,3)=2  (2,3)=2  (2,8)=2  (3,3)=2  (3,4)=2  (3,8)=2  (4,4)=2  (4,8)=2 
   (157.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _0: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta: (7,8)=2  (8,8)=2  (9,8)=2 
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _0: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta: (7,3)=2  (7,8)=2  (8,8)=2  (9,8)=2 
! 45 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _0: a rectangle with size (3,2) and color red and mask Full at (7,3)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta: (7,4)=0  (7,8)=2  (8,8)=2  (9,8)=2 
! 47 wrong pixels (generated / expected)

TRAIN 3906de3d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,3) and color red and mask .x.|.x.|xx.|xxx at (6,4)
  _0: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (4,8)
diff: 
delta: (7,2)=2  (8,2)=2  (9,2)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _0: a rectangle with size (4,3) and color red and mask .x.|.x.|xx.|xxx at (6,4)
  _01: a rectangle with size (6,1) and color red and mask Full at (4,8)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta: (7,2)=2  (8,2)=2  (9,2)=2 
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,3) and color red and mask .x.|.x.|xx.|xxx at (6,4)
  _0: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (7,2)
diff: 
delta: (4,8)=2  (5,8)=2  (6,8)=2  (7,8)=2  (8,8)=2  (9,8)=2 
! 17 wrong pixels (generated / expected)

TEST 3906de3d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 1784.2 bits (1784.2 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-322] Checking task 39a8645d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16655.9 = 16664.9
DL output with Mo: L = 9.0 + 2533.2 = 2542.2
DL input+output M: L = 17.9 + 19189.1 = 19207.0

# learning a model for train pairs
2.000	
1.579	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.458	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.312	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.167	OUT DEF: ^.size=^.layer_0.shape.size
1.046	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.922	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.856	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.804	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.786	OUT DEF: ^.color=black
0.772	OUT DEF: ^.layer_0.pos=(?,?)
0.738	OUT DEF: ^.layer_0.pos.i=(0)
0.704	OUT DEF: ^.layer_0.pos.j=(0)
0.701	IN  DEF: ^.color=black
0.699	IN  DEF: ^.size=(?,?)
0.682	IN  DEF: ^.size.i=14
0.664	IN  DEF: ^.size.j=14
0.662	IN  DEF: ^.layer_0.pos=(?,?)
0.660	IN  DEF: ^.layer_0.shape.size=(?,?)
0.650	IN  DEF: ^.layer_0.shape.size.i=3
0.640	IN  DEF: ^.layer_0.shape.size.j=3
0.638	IN  DEF: ^.layer_01.pos=(?,?)
0.636	IN  DEF: ^.layer_01.shape.size=(?,?)
0.626	IN  DEF: ^.layer_01.shape.size.j=3
0.624	IN  DEF: ^.layer_011.pos=(?,?)
0.622	IN  DEF: ^.layer_011.shape.size=(?,?)
0.613	IN  DEF: ^.layer_011.shape.size.i=3
0.610	IN  DEF: ^.layer_01111.pos=(?,?)
0.608	IN  DEF: ^.layer_0111.pos=(?,?)
0.606	IN  DEF: ^.layer_01111.shape.size=(?,?)
0.598	IN  DEF: ^.layer_01111.shape.size.i=3
0.596	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.586	IN  DEF: ^.layer_0111.shape.size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ((0),(0))
WHERE (Mi)
a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _011: a rectangle with size (3,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (3,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 179.3 + 6428.5 = 6607.8
DL output with Mo: L = 34.8 + 446.9 = 481.7
DL input+output M: L = 214.0 + 6875.5 = 7089.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask x-cross at (2,10)
  _011: a rectangle with size (3,3) and color cyan and mask x-cross at (7,3)
  _0111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (7,9)
  _01111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (11,1)
diff: 
delta:
   (140.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (0,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask x-cross at (2,10)
  _011: a rectangle with size (3,3) and color cyan and mask x-cross at (7,3)
  _0111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (7,9)
  _01111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (11,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (0,7)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (6,1)
  _011: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (11,11)
  _0111: a rectangle with size (3,3) and color red and mask x-cross at (5,6)
  _01111: a rectangle with size (3,3) and color yellow and mask x..|.xx|x.. at (1,2)
diff: 
delta: (3,11)=4  (4,12)=4  (4,13)=4  (5,11)=4  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (12,2)=4 
   (397.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x..|.xx|x.. at (0,0)
diff: 
delta:
   (16.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (0,7)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (6,1)
  _011: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (11,11)
  _0111: a rectangle with size (3,3) and color red and mask x-cross at (5,6)
  _01111: a rectangle with size (3,3) and color yellow and mask x..|.xx|x.. at (1,2)
diff: 
delta: (3,11)=4  (4,12)=4  (4,13)=4  (5,11)=4  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (12,2)=4 
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|xx.|..x at (2,9)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,2)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (8,9)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (9,8)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (2,3)
diff: 
delta:
   (105.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (16.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|xx.|..x at (2,9)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,2)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (8,9)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (9,8)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (2,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|.xx|x.x at (2,3)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (2,9)
  _011: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (8,0)
  _0111: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (11,4)
  _01111: a rectangle with size (3,3) and color green and mask x.x|.xx|x.x at (11,9)
diff: 
delta: (7,7)=8  (8,6)=8  (8,8)=8  (9,7)=8 
! 9 wrong pixels (generated / expected)

TEST 39a8645d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.8 sec (12.8 sec/task)
bits-train-error = 446.9 bits (446.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-321] Checking task 39e1d7f9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 220174.2 = 220183.2
DL output with Mo: L = 9.0 + 254039.4 = 254048.4
DL input+output M: L = 17.9 + 474213.6 = 474231.5

# learning a model for train pairs
2.000	
1.358	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.755	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.685	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.614	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.545	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.481	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.417	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
0.366	OUT OBJECT at ^.layer_01111: ^.layer_01.shape at ?
0.334	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
0.301	OUT OBJECT at ^.layer_011110: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_011.shape at ?
  _0111: ^.layer_01.shape at ?
  _011110: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_01.shape at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 47547.2 = 47614.0
DL output with Mo: L = 103.0 + 21424.2 = 21527.2
DL input+output M: L = 169.7 + 68971.5 = 69141.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _011: a rectangle with size (14,4) and color green and mask Full at (0,5)
diff: 
delta: (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=6  (21,15)=6  (21,16)=6  (21,17)=6  (21,18)=6  (22,15)=6  (22,16)=6  (22,17)=6  (22,18)=6  (23,15)=6  (23,16)=6  (23,17)=6  (23,18)=6 
   (1417.9 bits)
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (4,4) and color pink and mask Full at (5,5)
  _011: a rectangle with size (14,4) and color green and mask Full at (0,5)
  _0111: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _011110: a rectangle with size (4,4) and color pink and mask Full at (20,15)
  _01111: a rectangle with size (4,14) and color green and mask Full at (20,10)
  _011111: a rectangle with size (4,4) and color green and mask Full at (15,15)
diff: 
delta:
   (180.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _011: a rectangle with size (14,4) and color green and mask Full at (0,5)
diff: 
delta: (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=6  (21,15)=6  (21,16)=6  (21,17)=6  (21,18)=6  (22,15)=6  (22,16)=6  (22,17)=6  (22,18)=6  (23,15)=6  (23,16)=6  (23,17)=6  (23,18)=6 
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _01: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx....x....|xxxxxxxxxxxxxxx....x....|xxxxxxxxxxxxxxx....x....|xxxxxxxxxxxxxxx....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _011: a rectangle with size (14,4) and color green and mask Full at (0,5)
diff: 
delta: (5,4)=8  (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (5,9)=8  (6,4)=8  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=8  (7,4)=8  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (7,9)=8  (8,4)=8  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (8,9)=8  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=6  (21,15)=6  (21,16)=6  (21,17)=6  (21,18)=6  (22,15)=6  (22,16)=6  (22,17)=6  (22,18)=6  (23,15)=6  (23,16)=6  (23,17)=6  (23,18)=6 
! size mismatch, 10x10 instead of 24x24

TRAIN 39e1d7f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _011: a rectangle with size (3,11) and color pink and mask Full at (8,4)
diff: 
delta: (0,24)=4  (0,25)=4  (0,26)=4  (1,24)=4  (1,25)=4  (1,26)=4  (2,24)=4  (2,25)=4  (2,26)=4  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
   (1471.8 bits)
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _011: a rectangle with size (3,11) and color pink and mask Full at (20,8)
  _0111: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _011110: a rectangle with size (3,3) and color pink and mask Full at (0,20)
  _01111: a rectangle with size (11,3) and color pink and mask Full at (16,12)
  _011111: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
diff: 
delta: (4,24)=6  (4,25)=6  (4,26)=6  (5,24)=6  (5,25)=6  (5,26)=6  (6,24)=6  (6,25)=6  (6,26)=6  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
   (779.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _011: a rectangle with size (11,3) and color pink and mask Full at (4,8)
diff: 
delta: (0,24)=4  (0,25)=4  (0,26)=4  (1,24)=4  (1,25)=4  (1,26)=4  (2,24)=4  (2,25)=4  (2,26)=4  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
! size mismatch, 10x10 instead of 27x27
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
diff: 
delta: (4,8)=6  (4,9)=6  (4,10)=6  (5,8)=6  (5,9)=6  (5,10)=6  (6,8)=6  (6,9)=6  (6,10)=6  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (12,8)=6  (12,9)=6  (12,10)=6  (13,8)=6  (13,9)=6  (13,10)=6  (14,8)=6  (14,9)=6  (14,10)=6  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (11,3) and color yellow and mask Full at (12,12)
  _011: a rectangle with size (11,3) and color yellow and mask Full at (12,20)
diff: 
delta: (0,24)=2  (0,25)=2  (0,26)=2  (1,24)=2  (1,25)=2  (1,26)=2  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (12,16)=4  (12,17)=4  (12,18)=4  (13,16)=4  (13,17)=4  (13,18)=4  (14,16)=4  (14,17)=4  (14,18)=4  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2  (20,16)=4  (20,17)=4  (20,18)=4  (21,16)=4  (21,17)=4  (21,18)=4  (22,16)=4  (22,17)=4  (22,18)=4 
   (1865.0 bits)
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (23,3) and color yellow and mask Full at (0,20)
  _011: a rectangle with size (11,3) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (11,3) and color yellow and mask Full at (0,8)
  _011110: a rectangle with size (11,3) and color yellow and mask Full at (12,12)
  _01111: a rectangle with size (11,3) and color yellow and mask Full at (0,4)
  _011111: a rectangle with size (11,3) and color yellow and mask Full at (12,16)
diff: 
delta: (0,24)=2  (0,25)=2  (0,26)=2  (1,24)=2  (1,25)=2  (1,26)=2  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,24)=4  (4,25)=4  (4,26)=4  (5,4)=2  (5,5)=2  (5,6)=2  (5,24)=4  (5,25)=4  (5,26)=4  (6,4)=2  (6,5)=2  (6,6)=2  (6,24)=4  (6,25)=4  (6,26)=4  (8,20)=0  (8,21)=0  (8,22)=0  (9,20)=0  (9,21)=0  (9,22)=0  (10,20)=0  (10,21)=0  (10,22)=0  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2 
   (1182.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (3,11) and color yellow and mask Full at (12,12)
  _011: a rectangle with size (3,11) and color yellow and mask Full at (20,12)
diff: 
delta: (0,24)=2  (0,25)=2  (0,26)=2  (1,24)=2  (1,25)=2  (1,26)=2  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (16,12)=4  (16,13)=4  (16,14)=4  (16,16)=2  (16,17)=2  (16,18)=2  (16,20)=4  (16,21)=4  (16,22)=4  (17,12)=4  (17,13)=4  (17,14)=4  (17,16)=2  (17,17)=2  (17,18)=2  (17,20)=4  (17,21)=4  (17,22)=4  (18,12)=4  (18,13)=4  (18,14)=4  (18,16)=2  (18,17)=2  (18,18)=2  (18,20)=4  (18,21)=4  (18,22)=4 
! size mismatch, 10x10 instead of 27x27
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (11,3) and color yellow and mask Full at (12,12)
  _011: a rectangle with size (11,3) and color yellow and mask Full at (12,20)
diff: 
delta: (0,24)=2  (0,25)=2  (0,26)=2  (1,24)=2  (1,25)=2  (1,26)=2  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (12,16)=4  (12,17)=4  (12,18)=4  (13,16)=4  (13,17)=4  (13,18)=4  (14,16)=4  (14,17)=4  (14,18)=4  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2  (20,16)=4  (20,17)=4  (20,18)=4  (21,16)=4  (21,17)=4  (21,18)=4  (22,16)=4  (22,17)=4  (22,18)=4 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (2,8) and color cyan and mask Full at (6,6)
  _011: a rectangle with size (2,8) and color green and mask Full at (9,6)
diff: 
delta: (3,21)=6  (3,22)=6  (4,21)=6  (4,22)=6  (6,9)=3  (6,10)=3  (7,9)=3  (7,10)=3  (9,9)=6  (9,10)=6  (10,9)=6  (10,10)=6  (12,6)=8  (12,7)=8  (12,9)=3  (12,10)=3  (12,12)=8  (12,13)=8  (13,6)=8  (13,7)=8  (13,9)=3  (13,10)=3  (13,12)=8  (13,13)=8  (21,15)=6  (21,16)=6  (22,15)=6  (22,16)=6  (24,0)=6  (24,1)=6  (25,0)=6  (25,1)=6 
! size mismatch, 10x10 instead of 29x29
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (2,8) and color cyan and mask Full at (6,6)
  _011: a rectangle with size (2,8) and color cyan and mask Full at (12,6)
diff: 
delta: (3,21)=6  (3,22)=6  (4,21)=6  (4,22)=6  (6,9)=3  (6,10)=3  (7,9)=3  (7,10)=3  (9,6)=3  (9,7)=3  (9,9)=6  (9,10)=6  (9,12)=3  (9,13)=3  (10,6)=3  (10,7)=3  (10,9)=6  (10,10)=6  (10,12)=3  (10,13)=3  (12,9)=3  (12,10)=3  (13,9)=3  (13,10)=3  (21,15)=6  (21,16)=6  (22,15)=6  (22,16)=6  (24,0)=6  (24,1)=6  (25,0)=6  (25,1)=6 
! size mismatch, 10x10 instead of 29x29

TEST 39e1d7f9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.6 sec (27.6 sec/task)
bits-train-error = 21424.2 bits (21424.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-320] Checking task 3aa6fb7a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3175.9 = 3184.8
DL output with Mo: L = 9.0 + 4084.1 = 4093.1
DL input+output M: L = 17.9 + 7260.0 = 7277.9

# learning a model for train pairs
2.000	
1.858	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.640	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.488	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.268	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.184	OUT DEF: ^.size=^.size
1.127	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.079	OUT DEF: ^.layer_0=^.layer_0
1.031	OUT DEF: ^.layer_01=^.layer_01
0.992	OUT DEF: ^.layer_011.shape.size=^.layer_0.pos
0.949	IN  DEF: ^.layer_0.shape.mask=x.|xx
0.906	IN  DEF: ^.layer_01.shape.mask=xx|.x
0.877	IN  DEF: ^.layer_0.shape.color=cyan
0.848	IN  DEF: ^.layer_01.shape.color=cyan
0.827	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.804	OUT DEF: ^.layer_0111.shape.color=blue
0.793	OUT DEF: ^.layer_011.shape.mask=Full
0.783	IN  DEF: ^.color=black
0.775	OUT DEF: ^.color=black
0.769	IN  DEF: ^.size=(?,?)
0.720	IN  DEF: ^.size.i=7
0.672	IN  DEF: ^.size.j=7
0.665	IN  DEF: ^.layer_0.pos=(?,?)
0.658	IN  DEF: ^.layer_0.shape.size=(?,?)
0.631	IN  DEF: ^.layer_0.shape.size.i=2
0.604	IN  DEF: ^.layer_0.shape.size.j=2
0.598	IN  DEF: ^.layer_01.pos=(?,?)
0.572	IN  DEF: ^.layer_01.pos.j=4
0.565	IN  DEF: ^.layer_01.shape.size=(?,?)
0.538	IN  DEF: ^.layer_01.shape.size.i=2
0.511	IN  DEF: ^.layer_01.shape.size.j=2
0.506	OUT DEF: ^.layer_011.pos=(?,?)
0.489	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j + 1
0.483	OUT DEF: ^.layer_0111.pos=(?,?)
0.464	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.j
0.446	OUT DEF: ^.layer_0111.pos.i=^.layer_01.pos.i + 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_0.pos and color ? and mask Full at (?,^.layer_0.pos.j + 1)
  _0111: a point with color blue at (^.layer_01.pos.i + 1,^.layer_01.pos.j)
WHERE (Mi)
a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (?,?)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (?,4)

DL input  with Mi: L = 93.5 + 823.8 = 917.3
DL output with Mo: L = 84.1 + 564.5 = 648.6
DL input+output M: L = 177.6 + 1388.3 = 1566.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
diff: 
delta:
   (12.4 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _011: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _0111: a point with color blue at (4,4)
diff: 
delta:
   (8.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 3aa6fb7a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
diff: 
delta: (5,4)=8  (6,3)=8  (6,4)=8 
   (70.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (5,3)
  _0111: a point with color blue at (1,4)
diff: 
delta: (2,3)=1  (5,3)=1 
   (47.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
diff: 
delta: (5,4)=8  (6,3)=8  (6,4)=8 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
diff:   ^.layer_0.shape.mask
delta: (2,2)=8  (3,2)=8  (3,3)=8 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
diff:   ^.layer_01.shape.mask  ^.layer_01.pos.j
delta: (0,4)=8  (0,5)=8  (1,5)=8 
! 8 wrong pixels (generated / expected)

TRAIN 3aa6fb7a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,5)
diff:   ^.layer_01.pos.j
delta: (1,0)=8  (1,1)=8  (2,0)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,5)
diff:   ^.layer_01.pos.j  ^.layer_0.shape.mask
delta: (3,3)=8  (4,3)=8  (4,4)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.pos.j
delta: (0,5)=8  (0,6)=8  (1,6)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 15 wrong pixels (generated / expected)

TEST 3aa6fb7a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.0 sec (2.0 sec/task)
bits-train-error = 564.5 bits (564.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-319] Checking task 3ac3eb23.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 965.8 = 974.8
DL output with Mo: L = 9.0 + 5382.8 = 5391.8
DL input+output M: L = 17.9 + 6348.7 = 6366.6

# learning a model for train pairs
2.000	
1.521	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.316	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.222	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.158	OUT DEF: ^.size=^.size
1.126	IN  DEF: ^.color=black
1.102	OUT DEF: ^.layer_01.shape.mask=Odd Checkboard
1.080	IN  DEF: ^.size=(?,?)
0.930	IN  DEF: ^.size.i=6
0.908	IN  DEF: ^.layer_0.pos=(?,?)
0.821	IN  DEF: ^.layer_0.pos.j=1
0.741	IN  DEF: ^.layer_0.pos.i=(0)
0.724	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.718	OUT DEF: ^.color=black
0.714	OUT DEF: ^.layer_0.pos=(?,?)
0.698	OUT DEF: ^.layer_0.pos.j=(0)
0.694	OUT DEF: ^.layer_0.shape.size=(?,?)
0.690	OUT DEF: ^.layer_01.pos=(?,?)
0.676	OUT DEF: ^.layer_01.pos.i=(0)
0.672	OUT DEF: ^.layer_01.shape.size=(?,?)
0.644	OUT DEF: ^.layer_01.shape.size.i=^.size.i
0.624	OUT DEF: ^.layer_01.shape.size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,(0))
  _01: a rectangle with size (^.size.i,3) and color ? and mask Odd Checkboard at ((0),?)
WHERE (Mi)
a background with size (6,?) and color black and layers
  _0: a point with color ? at ((0),1)

DL input  with Mi: L = 37.3 + 463.5 = 500.8
DL output with Mo: L = 69.3 + 524.7 = 594.0
DL input+output M: L = 106.6 + 988.2 = 1094.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,10) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta: (0,5)=8 
   (33.8 bits)
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,3) and color red and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (6,3) and color cyan and mask Odd Checkboard at (0,4)
diff: 
delta:
   (32.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta: (0,5)=8 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,10) and color black and layers
  _0: a point with color cyan at (0,5)
diff:   ^.layer_0.pos.j
delta: (0,1)=2 
! 20 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (12.6 bits)
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (6,3) and color yellow and mask Odd Checkboard at (0,0)
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,12) and color black and layers
  _0: a point with color green at (0,2)
diff:   ^.layer_0.pos.j
delta: (0,6)=6  (0,9)=7#
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,12) and color black and layers
  _0: a point with color pink at (0,6)
diff:   ^.layer_0.pos.j
delta: (0,2)=3  (0,9)=7#
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,12) and color black and layers
  _0: a point with color orange at (0,9)
diff:   ^.layer_0.pos.j
delta: (0,2)=3  (0,6)=6 
! 37 wrong pixels (generated / expected)

TEST 3ac3eb23.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 524.7 bits (524.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-318] Checking task 3af2c5a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3098.0 = 3107.0
DL output with Mo: L = 9.0 + 11653.5 = 11662.5
DL input+output M: L = 17.9 + 14751.5 = 14769.5

# learning a model for train pairs
2.000	
1.211	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.695	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.673	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.661	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.649	IN  DEF: ^.size=(?,?)
0.589	IN  DEF: ^.size.j=4
0.537	IN  DEF: ^.size.i=3
0.526	IN  DEF: ^.layer_0.pos=(?,?)
0.514	IN  DEF: ^.layer_0.shape.size=(?,?)
0.487	IN  DEF: ^.layer_0.shape.size.i=3
0.458	IN  DEF: ^.layer_0.pos.i=0
0.444	IN  DEF: ^.color=black
0.440	OUT DEF: ^.color=black
0.437	OUT DEF: ^.size=(?,?)
0.416	OUT DEF: ^.size.j=8
0.397	OUT DEF: ^.size.i=6
0.394	OUT DEF: ^.layer_0.shape.size=(?,?)
0.374	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j + ^.layer_0.shape.size.j
0.355	OUT DEF: ^.layer_0.shape.size.i=6

# Learned model:
CONSTRUCT (Mo)
a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,^.layer_0.shape.size.j + ^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,?) and color ? and mask ? at (0,?)

DL input  with Mi: L = 47.9 + 787.9 = 835.8
DL output with Mo: L = 56.6 + 947.6 = 1004.2
DL input+output M: L = 104.5 + 1735.6 = 1840.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (0,1)
diff: 
delta:
   (20.1 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask .x..x.|x.xx.x|.x..x.|.x..x.|x.xx.x|.x..x. at (0,1)
diff: 
delta:
   (39.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (0,1)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN 3af2c5a8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask ..xx|.x.x|xxx. at (0,0)
diff: 
delta:
   (29.3 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask ..xxxx..|.x.xx.x.|xxx..xxx|xxx..xxx|.x.xx.x.|..xxxx.. at (0,0)
diff: 
delta:
   (51.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask ..xx|.x.x|xxx. at (0,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN 3af2c5a8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x...|x... at (0,0)
diff: 
delta:
   (29.3 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Border at (0,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x...|x... at (0,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (2,3) and color black and mask Full at (1,1)
diff:   ^.color  ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta:
! 24 wrong pixels (generated / expected)

TRAIN 3af2c5a8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (0,0)=4  (1,3)=4 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff:   ^.layer_0.shape.size.i
delta: (1,3)=4  (2,0)=4  (2,1)=4 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,3)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (0,0)=4  (2,0)=4  (2,1)=4 
! 18 wrong pixels (generated / expected)

TEST 3af2c5a8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 947.6 bits (947.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-317] Checking task 3bd67248.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5458.3 = 5467.2
DL output with Mo: L = 9.0 + 13820.8 = 13829.8
DL input+output M: L = 17.9 + 19279.1 = 19297.0

# learning a model for train pairs
2.000	
1.260	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.949	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.703	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.626	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.589	OUT DEF: ^.size=^.size
0.568	OUT DEF: ^.layer_0=^.layer_0
0.555	IN  DEF: ^.layer_0.shape.mask=Full
0.545	OUT DEF: ^.layer_01.shape.color=yellow
0.535	OUT DEF: ^.layer_011.shape.color=red
0.527	IN  DEF: ^.color=black
0.521	IN  DEF: ^.size=(?,?)
0.514	IN  DEF: ^.layer_0.pos=(?,?)
0.492	IN  DEF: ^.layer_0.pos.i=(0)
0.470	IN  DEF: ^.layer_0.pos.j=(0)
0.463	IN  DEF: ^.layer_0.shape.size=(?,?)
0.450	IN  DEF: ^.layer_0.shape.size.j=1
0.445	OUT DEF: ^.layer_01.shape.mask=^.layer_0.shape.mask
0.442	OUT DEF: ^.color=black
0.439	OUT DEF: ^.layer_01.pos=(?,?)
0.431	OUT DEF: ^.layer_01.pos.j=^.layer_0.shape.size.j
0.423	OUT DEF: ^.layer_01.pos.i=^.layer_0.shape.size.i - ^.layer_0.shape.size.j
0.420	OUT DEF: ^.layer_01.shape.size=(?,?)
0.405	OUT DEF: ^.layer_01.shape.size.j=^.size.j - 1
0.400	OUT DEF: ^.layer_01.shape.size.i=1
0.397	OUT DEF: ^.layer_011.pos=(?,?)
0.388	OUT DEF: ^.layer_011.pos.i=(0)
0.380	OUT DEF: ^.layer_011.pos.j=^.layer_0.shape.size.j
0.377	OUT DEF: ^.layer_011.shape.size=(?,?)
0.362	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.shape.size.i - 1
0.347	OUT DEF: ^.layer_011.shape.size.j=^.size.j - 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (1,^.size.j - 1) and color yellow and mask ^.layer_0.shape.mask at (^.layer_0.shape.size.i - ^.layer_0.shape.size.j,^.layer_0.shape.size.j)
  _011: a rectangle with size (^.layer_0.shape.size.i - 1,^.size.j - 1) and color red and mask ? at ((0),^.layer_0.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,1) and color ? and mask Full at ((0),(0))

DL input  with Mi: L = 40.0 + 846.2 = 886.2
DL output with Mo: L = 106.9 + 2447.6 = 2554.5
DL input+output M: L = 146.9 + 3293.9 = 3440.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
diff: 
delta:
   (35.1 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (1,14) and color yellow and mask Full at (14,1)
  _011: a rectangle with size (14,14) and color red and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (0,1)
diff: 
delta:
   (199.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
diff: 
delta:
! 182 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,14) and color black and mask Full at (0,1)
diff:   ^.color  ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta:
! 43 wrong pixels (generated / expected)

TRAIN 3bd67248.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
diff: 
delta:
   (21.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,1)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,2) and color black and mask Full at (0,1)
diff:   ^.color  ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta:
! 7 wrong pixels (generated / expected)

TRAIN 3bd67248.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (28.5 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
  _011: a rectangle with size (6,6) and color red and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,1)
diff: 
delta:
   (39.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color cyan and layers
  _0: a rectangle with size (7,6) and color black and mask Full at (0,1)
diff:   ^.color  ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta:
! 19 wrong pixels (generated / expected)

TRAIN 3bd67248.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,0)
diff: 
delta:
! 72 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (10,9) and color black and mask Full at (0,1)
diff:   ^.color  ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta:
! 28 wrong pixels (generated / expected)

TEST 3bd67248.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 2447.6 bits (2447.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-316] Checking task 3bdb4ada.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 37858.8 = 37867.7
DL output with Mo: L = 9.0 + 32055.4 = 32064.3
DL input+output M: L = 17.9 + 69914.2 = 69932.1

# learning a model for train pairs
2.000	
1.384	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.814	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.480	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.169	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.156	OUT DEF: ^.size=^.size
0.145	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.135	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.128	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.120	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.118	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.115	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.113	IN  DEF: ^.layer_0.shape.mask=Full
0.112	IN  DEF: ^.layer_01.shape.mask=Full
0.111	OUT DEF: ^.color=black
0.110	IN  DEF: ^.color=black
0.110	IN  DEF: ^.size=(?,?)
0.105	IN  DEF: ^.size.i=8
0.105	IN  DEF: ^.layer_0.pos=(?,?)
0.103	IN  DEF: ^.layer_0.pos.i=5
0.102	IN  DEF: ^.layer_0.shape.size=(?,?)
0.099	IN  DEF: ^.layer_0.shape.size.i=3
0.099	IN  DEF: ^.layer_01.pos=(?,?)
0.096	IN  DEF: ^.layer_01.pos.i=1
0.096	IN  DEF: ^.layer_01.shape.size=(?,?)
0.093	IN  DEF: ^.layer_01.shape.size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (8,?) and color black and layers
  _0: a rectangle with size (3,?) and color ? and mask Full at (5,?)
  _01: a rectangle with size (3,?) and color ? and mask Full at (1,?)

DL input  with Mi: L = 78.7 + 1050.9 = 1129.5
DL output with Mo: L = 43.1 + 1982.4 = 2025.5
DL input+output M: L = 121.8 + 3033.2 = 3155.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,13) and color cyan and mask Full at (5,12)
  _01: a rectangle with size (3,29) and color yellow and mask Full at (1,0)
diff: 
delta:
   (55.6 bits)
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,13) and color cyan and mask xxxxxxxxxxxxx|x.x.x.x.x.x.x|xxxxxxxxxxxxx at (5,12)
  _01: a rectangle with size (3,29) and color yellow and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (1,0)
diff: 
delta:
   (132.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,13) and color cyan and mask Full at (5,12)
  _01: a rectangle with size (3,29) and color yellow and mask Full at (1,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask Full at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask Full at (1,1)
diff: 
delta:
   (49.4 bits)
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask xxxxxxxxxxx|x.x.x.x.x.x|xxxxxxxxxxx at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask xxxxxxxxx|x.x.x.x.x|xxxxxxxxx at (1,1)
diff: 
delta:
   (66.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask Full at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask Full at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (3,7) and color grey and mask Full at (1,2)
diff:   ^.size.i
delta: (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (8,19)=8  (9,15)=8  (9,16)=8  (9,17)=8  (9,18)=8  (9,19)=8  (10,15)=8  (10,16)=8  (10,17)=8  (10,18)=8  (10,19)=8 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (8,15)
diff:   ^.size.i  ^.layer_01.pos.i
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5#
! 26 wrong pixels (generated / expected)

TEST 3bdb4ada.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 1982.4 bits (1982.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-315] Checking task 3befdf3e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8599.2 = 8608.2
DL output with Mo: L = 9.0 + 23045.0 = 23054.0
DL input+output M: L = 17.9 + 31644.2 = 31662.2

# learning a model for train pairs
2.000	
1.394	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.881	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.655	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.538	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.494	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.469	OUT DEF: ^.size=^.size
0.451	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size
0.437	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.424	OUT DEF: ^.layer_011.pos=^.layer_01.pos
0.412	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.404	IN  DEF: ^.layer_0.shape.mask=Full
0.396	IN  DEF: ^.layer_01.shape.mask=Full
0.390	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.384	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.378	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.372	IN  DEF: ^.color=black
0.368	IN  DEF: ^.size=(?,?)
0.338	IN  DEF: ^.size.i=10
0.307	IN  DEF: ^.size.j=10
0.303	IN  DEF: ^.layer_0.pos=(?,?)
0.287	IN  DEF: ^.layer_0.pos.i=4
0.283	IN  DEF: ^.layer_0.shape.size=(?,?)
0.279	IN  DEF: ^.layer_01.pos=(?,?)
0.263	IN  DEF: ^.layer_01.pos.i=3
0.259	IN  DEF: ^.layer_01.shape.size=(?,?)
0.256	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.253	OUT DEF: ^.layer_011.shape.mask=Full
0.251	OUT DEF: ^.color=black
0.249	OUT DEF: ^.layer_01.pos=(?,?)
0.244	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i - ^.layer_0.shape.size.i
0.238	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j - ^.layer_0.shape.size.j
0.237	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_01.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i - ^.layer_0.shape.size.i,^.layer_01.pos.j - ^.layer_0.shape.size.j)
  _011: a rectangle with size ^.layer_01.shape.size and color ^.layer_0.shape.color and mask Full at ^.layer_01.pos
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (4,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (3,?)

DL input  with Mi: L = 81.3 + 1139.3 = 1220.6
DL output with Mo: L = 93.7 + 2094.0 = 2187.7
DL input+output M: L = 175.0 + 3233.3 = 3408.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (4,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta:
   (34.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (4,4)
  _01: a rectangle with size (5,5) and color yellow and mask .xxx.|x...x|x.x.x|x...x|.xxx. at (2,2)
  _011: a rectangle with size (3,3) and color pink and mask Full at (3,3)
diff: 
delta:
   (42.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (4,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (3,3)
  _01: a rectangle with size (1,1) and color pink and mask Full at (4,4)
diff:   ^.layer_01.pos.i  ^.layer_0.shape.mask  ^.layer_0.pos.i
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff:   ^.layer_0.pos.i
delta: (4,4)=6 
! 24 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta:
   (39.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01: a rectangle with size (8,8) and color red and mask ..xxxx..|..xxxx..|xx....xx|xx.xx.xx|xx.xx.xx|xx....xx|..xxxx..|..xxxx.. at (1,1)
  _011: a rectangle with size (4,4) and color orange and mask Full at (3,3)
diff: 
delta:
   (83.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Border at (3,3)
  _01: a rectangle with size (2,2) and color orange and mask Full at (4,4)
diff:   ^.layer_01.pos.i  ^.layer_0.shape.mask  ^.layer_0.pos.i
delta:
! 36 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (4,3)
  _01: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta:
   (39.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (4,3)
  _01: a rectangle with size (8,8) and color green and mask ..xxxx..|..xxxx..|xx....xx|xx.xx.xx|xx.xx.xx|xx....xx|..xxxx..|..xxxx.. at (1,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (3,2)
diff: 
delta:
   (83.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (4,3)
  _01: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
negative integer

TEST 3befdf3e.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 11.7 sec (11.7 sec/task)
bits-train-error = 2094.0 bits (2094.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-314] Checking task 3c9b0459.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3783.3 = 3792.3
DL output with Mo: L = 9.0 + 3783.3 = 3792.3
DL input+output M: L = 17.9 + 7566.7 = 7584.6

# learning a model for train pairs
2.000	
1.769	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.539	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.409	OUT DEF: ^.size=^.size
1.294	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.210	OUT DEF: ^.color=^.color
1.160	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.148	OUT DEF: ^.layer_0.pos=(?,?)
1.117	OUT DEF: ^.layer_0.pos.j=(0)
1.104	IN  DEF: ^.size=(?,?)
1.047	IN  DEF: ^.size.i=3
0.990	IN  DEF: ^.size.j=3
0.977	IN  DEF: ^.layer_0.pos=(?,?)
0.964	IN  DEF: ^.layer_0.shape.size=(?,?)
0.959	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.946	IN  DEF: ^.layer_01.pos=(?,?)
0.915	IN  DEF: ^.layer_01.pos.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (?,(0))
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,1)

DL input  with Mi: L = 63.9 + 2086.5 = 2150.3
DL output with Mo: L = 31.4 + 1289.1 = 1320.4
DL input+output M: L = 95.3 + 3375.5 = 3470.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Odd Checkboard at (0,1)
  _01: a point with color cyan at (2,1)
diff: 
delta:
   (42.4 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,0)
diff: 
delta: (0,1)=8 
   (27.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Odd Checkboard at (0,1)
  _01: a point with color cyan at (2,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|x.. at (0,0)
  _01: a point with color cyan at (2,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask .x|xx at (0,1)
  _01: a point with color brown at (2,1)
diff: 
delta: (0,0)=9#
   (59.1 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (1,0)
diff: 
delta: (0,1)=9# (2,2)=9#
   (44.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask .x|xx at (0,1)
  _01: a point with color brown at (2,1)
diff: 
delta: (0,0)=9#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01: a point with color yellow at (1,1)
diff: 
delta: (0,0)=9# (2,1)=9#
! 5 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|.xx at (1,0)
  _01: a point with color cyan at (0,1)
diff: 
delta:
   (44.8 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|.xx at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|.xx at (1,0)
  _01: a point with color cyan at (0,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color grey at (2,1)
diff: 
delta: (2,2)=5#
! 2 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color brown and mask ..x|xxx at (0,0)
  _01: a point with color red at (0,1)
diff: 
delta: (2,0)=2 
   (62.3 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color brown and mask xxx|x.. at (1,0)
diff: 
delta: (0,2)=2  (2,1)=2 
   (46.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color brown and mask ..x|xxx at (0,0)
  _01: a point with color red at (0,1)
diff: 
delta: (2,0)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,1)
  _01: a point with color red at (0,1)
diff: 
delta: (0,0)=3  (2,0)=2 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color brown and mask Full at (1,0)
  _01: a point with color red at (0,1)
diff: 
delta: (0,2)=9# (2,0)=2 
! 8 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,2) and color pink and mask x.|xx|.x at (0,0)
  _01: a point with color orange at (2,2)
diff:   ^.layer_01.pos.j
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _01: a point with color yellow at (2,0)
diff:   ^.layer_01.pos.j
delta: (2,2)=7#
! 6 wrong pixels (generated / expected)

TEST 3c9b0459.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 1289.1 bits (1289.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-313] Checking task 3de23699.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9371.3 = 9380.2
DL output with Mo: L = 9.0 + 4843.0 = 4852.0
DL input+output M: L = 17.9 + 14214.3 = 14232.2

# learning a model for train pairs
2.000	
1.568	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.251	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.138	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.034	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.018	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.980	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.962	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.944	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.923	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.910	OUT DEF: ^.color=black
0.900	OUT DEF: ^.size=(?,?)
0.890	OUT DEF: ^.layer_0.pos=(?,?)
0.864	OUT DEF: ^.layer_0.pos.j=^.layer_011.pos.j - ^.layer_01111.pos.j
0.838	OUT DEF: ^.layer_0.pos.i=(0)
0.832	IN  DEF: ^.color=black
0.826	IN  DEF: ^.size=(?,?)
0.821	IN  DEF: ^.layer_0.pos=(?,?)
0.816	IN  DEF: ^.layer_0.shape.size=(?,?)
0.811	IN  DEF: ^.layer_01.pos=(?,?)
0.806	IN  DEF: ^.layer_01111.pos=(?,?)
0.801	IN  DEF: ^.layer_011.pos=(?,?)
0.796	IN  DEF: ^.layer_0111.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_01.shape.color and mask ^.layer_0.shape.mask at ((0),^.layer_011.pos.j - ^.layer_01111.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 107.9 + 5202.8 = 5310.6
DL output with Mo: L = 48.3 + 1064.9 = 1113.2
DL input+output M: L = 156.2 + 6267.7 = 6423.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.xx at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,5)
  _0111: a point with color yellow at (5,1)
  _01111: a point with color yellow at (5,5)
diff: 
delta:
   (103.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (11.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.xx at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,5)
  _0111: a point with color yellow at (5,1)
  _01111: a point with color yellow at (5,5)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.xx at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,5)
  _0111: a point with color yellow at (5,5)
  _01111: a point with color yellow at (5,1)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN 3de23699.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,9) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .xx..|.xx.x|x..x. at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (5,1)
  _01111: a point with color green at (5,7)
diff: 
delta:
   (118.9 bits)
data: a background with size (3,5) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask .xx..|.xx.x|x..x. at (0,0)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,9) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .xx..|.xx.x|x..x. at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (5,1)
  _01111: a point with color green at (5,7)
diff: 
delta:
! size mismatch, 10x10 instead of 3x5
>> Trial 2
data: a background with size (12,9) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .xx..|.xx.x|x..x. at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (5,7)
  _01111: a point with color green at (5,1)
diff: 
delta:
! size mismatch, 10x10 instead of 3x5

TRAIN 3de23699.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .x.|.x.|xxx|.xx at (6,4)
  _01: a point with color pink at (5,3)
  _011: a point with color pink at (5,8)
  _0111: a point with color pink at (10,3)
  _01111: a point with color pink at (10,8)
diff: 
delta:
   (119.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|.xx at (0,0)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .x.|.x.|xxx|.xx at (6,4)
  _01: a point with color pink at (5,3)
  _011: a point with color pink at (5,8)
  _0111: a point with color pink at (10,3)
  _01111: a point with color pink at (10,8)
diff: 
delta:
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .x.|.x.|xxx|.xx at (6,4)
  _01: a point with color pink at (5,3)
  _011: a point with color pink at (5,8)
  _0111: a point with color pink at (10,8)
  _01111: a point with color pink at (10,3)
diff: 
delta:
! size mismatch, 10x10 instead of 4x4

TRAIN 3de23699.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color yellow at (5,9)
diff: 
delta: (5,7)=4  (6,2)=8  (6,11)=8 
   (178.3 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask .xx|xx. at (0,2)
diff: 
delta: (2,6)=8  (3,4)=8  (3,6)=8 
   (70.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color yellow at (5,7)
diff: 
delta: (5,9)=4  (6,2)=8  (6,11)=8 
! size mismatch, 10x10 instead of 4x8
>> Trial 2
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color yellow at (5,9)
diff: 
delta: (5,7)=4  (6,2)=8  (6,11)=8 
! size mismatch, 10x10 instead of 4x8

TRAIN 3de23699.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|xxx|..x at (6,6)
  _01: a point with color red at (2,2)
  _011: a point with color red at (2,13)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (4,9)
diff: 
delta: (4,10)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3  (11,2)=2  (11,13)=2 
! size mismatch, 10x10 instead of 8x10
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|xxx|..x at (6,6)
  _01: a point with color red at (2,2)
  _011: a point with color red at (2,13)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (4,10)
diff: 
delta: (4,9)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3  (11,2)=2  (11,13)=2 
! size mismatch, 10x10 instead of 8x10
>> Trial 3
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|xxx|..x at (6,6)
  _01: a point with color red at (2,2)
  _011: a point with color red at (2,13)
  _0111: a point with color green at (4,9)
  _01111: a point with color green at (4,4)
diff: 
delta: (4,10)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3  (11,2)=2  (11,13)=2 
! size mismatch, 10x10 instead of 8x10

TEST 3de23699.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.9 sec (4.9 sec/task)
bits-train-error = 1064.9 bits (1064.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-312] Checking task 3e980e27.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8624.6 = 8633.5
DL output with Mo: L = 9.0 + 15373.2 = 15382.2
DL input+output M: L = 17.9 + 23997.8 = 24015.7

# learning a model for train pairs
2.000	
1.790	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.600	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.483	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.394	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.326	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.238	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.171	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_01.shape at ?
  _01111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 6180.8 = 6228.8
DL output with Mo: L = 74.2 + 6839.6 = 6913.8
DL input+output M: L = 122.2 + 13020.4 = 13142.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|xx.|..x at (3,3)
diff: 
delta: (8,7)=2 
   (108.6 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color blue and mask .x.|.xx|x.. at (8,5)
  _011: a rectangle with size (1,1) and color blue and mask Full at (5,5)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|xx.|..x at (3,3)
  _01111: a rectangle with size (1,1) and color red and mask Full at (8,7)
diff: 
delta:
   (121.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta: (8,7)=2 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|xx.|..x at (3,3)
diff: 
delta: (8,7)=2 
! size mismatch, 10x10 instead of 13x13

TRAIN 3e980e27.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,6)
diff: 
delta: (6,2)=3  (9,9)=3 
   (129.4 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (5,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (2,6)
  _0111: a rectangle with size (1,1) and color green and mask Full at (6,2)
  _01111: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (8,8)
diff: 
delta: (9,9)=3 
   (142.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,6)
diff: 
delta: (6,2)=3  (9,9)=3 
! size mismatch, 10x10 instead of 13x13

TRAIN 3e980e27.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
diff: 
delta: (1,10)=2  (2,2)=3  (7,7)=2  (8,1)=3 
   (177.9 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (2,3) and color yellow and mask ..x|xx. at (1,9)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,10)
  _0111: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
  _01111: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (8,1)
diff: 
delta: (2,2)=3  (7,7)=2  (8,1)=3 
   (179.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
diff: 
delta: (1,10)=2  (2,2)=3  (7,7)=2  (8,1)=3 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
  _01: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
diff: 
delta: (1,10)=2  (2,2)=3  (7,7)=2  (8,1)=3 
! size mismatch, 10x10 instead of 13x13
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (8,7)
diff: 
delta: (1,10)=2  (2,2)=3  (7,6)=4  (7,7)=2  (8,1)=3 
! size mismatch, 10x10 instead of 13x13

TRAIN 3e980e27.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
diff: 
delta: (2,3)=2  (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
   (202.2 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (1,2)
  _011: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (10,7)
  _0111: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
  _01111: a rectangle with size (2,3) and color blue and mask .xx|x.x at (8,3)
diff: 
delta: (2,3)=2  (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
   (240.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
  _01: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
diff: 
delta: (2,3)=2  (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
diff: 
delta: (2,3)=2  (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
! size mismatch, 10x10 instead of 13x13

TRAIN 3e980e27.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|..x|.x. at (5,8)
  _01: a rectangle with size (3,2) and color blue and mask .x|x.|xx at (1,1)
diff: 
delta: (1,5)=3  (1,9)=2  (2,2)=2  (6,9)=3  (9,3)=2  (10,7)=3 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask .x|x.|xx at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|..x|.x. at (5,8)
diff: 
delta: (1,5)=3  (1,9)=2  (2,2)=2  (6,9)=3  (9,3)=2  (10,7)=3 
! size mismatch, 10x10 instead of 13x13

TEST 3e980e27.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.0 sec (26.0 sec/task)
bits-train-error = 6839.6 bits (6839.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-311] Checking task 3eda0437.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 24022.7 = 24031.7
DL output with Mo: L = 9.0 + 28667.5 = 28676.4
DL input+output M: L = 17.9 + 52690.2 = 52708.1

# learning a model for train pairs
2.000	
1.707	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.442	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.215	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.034	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.861	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.720	IN  OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
0.595	OUT OBJECT at ^.layer_001: ^.layer_001.shape at ?
0.570	OUT DEF: ^.size=^.size
0.550	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.531	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.511	OUT OBJECT at ^.layer_0110: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00.shape at ?
  _001: ^.layer_001.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0.shape at ?
  _0110: ^.layer_01.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _001: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 8729.2 = 8814.6
DL output with Mo: L = 86.7 + 4037.2 = 4124.0
DL input+output M: L = 172.1 + 12766.4 = 12938.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _001: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _01: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
diff: 
delta: (0,0)=5# (0,6)=5# (2,5)=1 
   (280.1 bits)
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _001: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0: a rectangle with size (2,4) and color pink and mask Full at (1,15)
  _01: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _0110: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
  _011: a rectangle with size (1,7) and color grey and mask Full at (0,0)
diff: 
delta: (2,5)=1 
   (122.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _001: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _01: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
diff: 
delta: (0,0)=5# (0,6)=5# (2,5)=1 
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _001: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _0: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _01: a rectangle with size (3,5) and color blue and mask ...x.|xxxxx|.x... at (0,25)
diff: 
delta: (0,0)=5# (0,6)=5# (2,5)=1 
! 47 wrong pixels (generated / expected)

TRAIN 3eda0437.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,8) and color blue and mask .xxxx...|.x.x.xx.|x.x.xx.x|xx.xxx.. at (0,7)
  _001: a rectangle with size (4,7) and color blue and mask xxx..xx|xxx.xx.|..xxx..|.x.x... at (0,0)
  _0: a rectangle with size (2,3) and color blue and mask Full at (2,16)
  _01: a rectangle with size (4,4) and color blue and mask .x.x|.xxx|xxx.|xxxx at (0,16)
diff: 
delta:
   (223.9 bits)
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,8) and color blue and mask .xxxx...|.x.x.xx.|x.x.xx.x|xx.xxx.. at (0,7)
  _001: a rectangle with size (4,7) and color blue and mask xxx..xx|xxx.xx.|..xxx..|.x.x... at (0,0)
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,19)
  _01: a rectangle with size (2,3) and color blue and mask Full at (2,16)
  _0110: a rectangle with size (4,4) and color blue and mask .x.x|.xxx|xxx.|xxxx at (0,16)
  _011: a rectangle with size (2,3) and color pink and mask Full at (0,14)
diff: 
delta:
   (96.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,8) and color blue and mask .xxxx...|.x.x.xx.|x.x.xx.x|xx.xxx.. at (0,7)
  _001: a rectangle with size (4,7) and color blue and mask xxx..xx|xxx.xx.|..xxx..|.x.x... at (0,0)
  _0: a rectangle with size (2,3) and color blue and mask Full at (2,16)
  _01: a rectangle with size (4,4) and color blue and mask .x.x|.xxx|xxx.|xxxx at (0,16)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN 3eda0437.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _001: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,17)
diff: 
delta: (0,19)=1 
   (164.7 bits)
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _001: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0: a rectangle with size (2,5) and color pink and mask Full at (0,2)
  _01: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
  _0110: a rectangle with size (1,1) and color blue and mask Full at (0,17)
  _011: a rectangle with size (1,1) and color blue and mask Full at (0,19)
diff: 
delta:
   (89.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _001: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,17)
diff: 
delta: (0,19)=1 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _001: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
  _0: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,17)
diff: 
delta: (0,19)=1 
! 22 wrong pixels (generated / expected)

TRAIN 3eda0437.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _001: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta: (3,19)=1 
   (204.2 bits)
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _001: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0: a rectangle with size (3,3) and color pink and mask Full at (0,17)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,0)
  _0110: a rectangle with size (1,1) and color blue and mask Full at (0,2)
  _011: a rectangle with size (1,1) and color blue and mask Full at (3,19)
diff: 
delta:
   (95.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _001: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta: (3,19)=1 
! 49 wrong pixels (generated / expected)

TRAIN 3eda0437.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,24) and color black and layers
  _00: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _001: a rectangle with size (3,5) and color blue and mask x.x.x|xxxx.|.xxx. at (0,4)
  _0: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta:
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,24) and color black and layers
  _00: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _001: a rectangle with size (1,4) and color blue and mask Full at (1,4)
  _0: a rectangle with size (3,5) and color blue and mask x.x.x|xxxx.|.xxx. at (0,4)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
diff: 
delta: (1,0)=1 
! 61 wrong pixels (generated / expected)

TEST 3eda0437.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 4037.2 bits (4037.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-310] Checking task 3f7978a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13259.3 = 13268.3
DL output with Mo: L = 9.0 + 7263.2 = 7272.2
DL input+output M: L = 17.9 + 20522.5 = 20540.5

# learning a model for train pairs
2.000	
1.675	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.534	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.448	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.366	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.286	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
1.217	OUT DEF: ^.layer_0.shape=^.layer_0.shape
1.178	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
1.145	OUT DEF: ^.color=^.layer_010.shape.color
1.126	OUT DEF: ^.layer_01.shape.color=^.color
1.116	IN  DEF: ^.layer_0.shape.color=grey
1.092	IN  OBJECT at ^.layer_0101: a rectangle with size ? and color ? and mask ? at ?
1.081	IN  DEF: ^.layer_010.shape.color=cyan
1.070	IN  OBJECT at ^.layer_01011: a rectangle with size ? and color ? and mask ? at ?
1.062	IN  OBJECT at ^.layer_010111: a point with color ? at ?
1.053	IN  OBJECT at ^.layer_0101111: a point with color ? at ?
1.045	IN  OBJECT at ^.layer_0100: a point with color ? at ?
1.035	IN  DEF: ^.layer_0100.shape.color=cyan
1.026	IN  OBJECT at ^.layer_01011111: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ^.layer_010.shape.color and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ^.color and mask ? at ?
  _011: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color grey and mask ? at ?
  _0100: a point with color cyan at ?
  _010: a rectangle with size ? and color cyan and mask ? at ?
  _0101: a rectangle with size ? and color ? and mask ? at ?
  _01011: a rectangle with size ? and color ? and mask ? at ?
  _010111: a point with color ? at ?
  _0101111: a point with color ? at ?
  _01011111: a point with color ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 154.4 + 9029.9 = 9184.3
DL output with Mo: L = 54.3 + 2375.0 = 2429.4
DL input+output M: L = 208.7 + 11404.9 = 11613.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _0100: a point with color cyan at (1,1)
  _010: a rectangle with size (1,1) and color cyan and mask Full at (1,8)
  _0101: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _01011: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
  _010111: a point with color cyan at (3,3)
  _0101111: a point with color cyan at (3,7)
  _01011111: a point with color cyan at (5,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (7,3)
diff: 
delta: (7,7)=8  (8,1)=8 
   (233.5 bits)
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (1,0)
  _01: a rectangle with size (5,3) and color black and mask xxx|xxx|x.x|xxx|xxx at (0,1)
  _011: a rectangle with size (3,1) and color grey and mask Full at (1,4)
diff: 
delta:
   (72.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _0100: a point with color cyan at (1,1)
  _010: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _0101: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
  _01011: a rectangle with size (1,1) and color cyan and mask Full at (1,8)
  _010111: a point with color cyan at (3,3)
  _0101111: a point with color cyan at (3,7)
  _01011111: a point with color cyan at (5,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (7,3)
diff:   ^.layer_010.shape.color
delta: (7,7)=8  (8,1)=8 
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _0100: a point with color cyan at (1,1)
  _010: a rectangle with size (1,1) and color cyan and mask Full at (1,5)
  _0101: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _01011: a rectangle with size (1,1) and color cyan and mask Full at (1,8)
  _010111: a point with color cyan at (3,3)
  _0101111: a point with color cyan at (3,7)
  _01011111: a point with color cyan at (5,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (5,5)
diff: 
delta: (7,3)=8  (7,7)=8  (8,1)=8 
! size mismatch, 10x10 instead of 5x5

TRAIN 3f7978a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (4,2)
  _0100: a point with color cyan at (0,1)
  _010: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.. at (1,8)
  _0101: a rectangle with size (2,2) and color cyan and mask x.|xx at (7,8)
  _01011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _010111: a point with color cyan at (1,2)
  _0101111: a point with color cyan at (1,6)
  _01011111: a point with color cyan at (3,2)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
diff: 
delta: (4,0)=8  (7,2)=8  (7,4)=8  (8,1)=8 
   (298.7 bits)
data: a background with size (5,7) and color cyan and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (1,0)
  _01: a rectangle with size (5,5) and color black and mask xxxxx|xxxxx|xx..x|xxxxx|x.xxx at (0,1)
  _011: a rectangle with size (3,1) and color grey and mask Full at (1,6)
diff: 
delta:
   (86.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.. at (1,8)
  _0100: a point with color cyan at (0,1)
  _010: a rectangle with size (2,2) and color cyan and mask x.|xx at (7,8)
  _0101: a rectangle with size (3,1) and color grey and mask Full at (4,2)
  _01011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _010111: a point with color cyan at (1,2)
  _0101111: a point with color cyan at (1,6)
  _01011111: a point with color cyan at (3,2)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
diff:   ^.layer_0.shape.color
delta: (4,0)=8  (7,2)=8  (7,4)=8  (8,1)=8 
! size mismatch, 10x10 instead of 5x7

TRAIN 3f7978a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _0100: a point with color cyan at (0,9)
  _010: a rectangle with size (1,2) and color cyan and mask Full at (9,2)
  _0101: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _01011: a rectangle with size (8,1) and color cyan and mask Full at (2,7)
  _010111: a point with color cyan at (0,10)
  _0101111: a point with color cyan at (2,3)
  _01011111: a point with color cyan at (3,9)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (7,10)
diff: 
delta: (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (8,7)=0  (10,8)=8 
   (370.8 bits)
data: a background with size (6,5) and color cyan and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (1,0)
  _01: a rectangle with size (6,3) and color black and mask xxx|xxx|x.x|xxx|x.x|xxx at (0,1)
  _011: a rectangle with size (4,1) and color grey and mask Full at (1,4)
diff: 
delta:
   (77.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _0100: a point with color cyan at (0,9)
  _010: a rectangle with size (1,2) and color cyan and mask Full at (9,2)
  _0101: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _01011: a rectangle with size (8,1) and color cyan and mask Full at (2,7)
  _010111: a point with color cyan at (0,10)
  _0101111: a point with color cyan at (2,3)
  _01011111: a point with color cyan at (3,9)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,2)
diff: 
delta: (4,4)=0  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,10)=8  (8,7)=0  (8,10)=8  (10,8)=8 
! size mismatch, 10x10 instead of 6x5

TRAIN 3f7978a0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (4,0)
  _0100: a point with color cyan at (0,0)
  _010: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,0)
  _0101: a rectangle with size (8,1) and color grey and mask Full at (4,3)
  _01011: a rectangle with size (10,1) and color cyan and mask Full at (3,3)
  _010111: a point with color cyan at (2,8)
  _0101111: a point with color cyan at (4,12)
  _01011111: a point with color cyan at (7,6)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,4)
diff: 
delta: (7,9)=8  (8,2)=8  (8,12)=8  (10,1)=8  (10,10)=8  (10,12)=8  (11,7)=8  (12,0)=8  (13,12)=8 
! size mismatch, 10x10 instead of 10x4
>> Trial 2
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (4,0)
  _0100: a point with color cyan at (0,0)
  _010: a rectangle with size (8,1) and color grey and mask Full at (4,3)
  _0101: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,0)
  _01011: a rectangle with size (10,1) and color cyan and mask Full at (3,3)
  _010111: a point with color cyan at (2,8)
  _0101111: a point with color cyan at (4,12)
  _01011111: a point with color cyan at (7,6)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,4)
diff:   ^.layer_010.shape.color
delta: (7,9)=8  (8,2)=8  (8,12)=8  (10,1)=8  (10,10)=8  (10,12)=8  (11,7)=8  (12,0)=8  (13,12)=8 
! size mismatch, 10x10 instead of 10x4

TEST 3f7978a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 2375.0 bits (2375.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-309] Checking task 40853293.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4762.3 = 4771.2
DL output with Mo: L = 9.0 + 15269.9 = 15278.9
DL input+output M: L = 17.9 + 20032.2 = 20050.1

# learning a model for train pairs
2.000	
1.756	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.565	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.428	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.317	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.242	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.212	OUT DEF: ^.size=^.size
1.198	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.182	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.168	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.151	OUT DEF: ^.layer_011.pos=^.layer_01.pos
1.137	IN  OBJECT at ^.layer_010: a point with color ? at ?
1.121	OUT DEF: ^.layer_0111.pos=^.layer_010.pos
1.107	IN  OBJECT at ^.layer_0101: a point with color ? at ?
1.092	IN  OBJECT at ^.layer_01011: a point with color ? at ?
1.077	IN  OBJECT at ^.layer_010111: a point with color ? at ?
1.061	OUT DEF: ^.layer_01.pos=^.layer_01011.pos
1.046	IN  OBJECT at ^.layer_0101111: a point with color ? at ?
1.029	IN  OBJECT at ^.layer_01011111: a point with color ? at ?
1.013	OUT DEF: ^.layer_01111.pos=^.layer_01011111.pos
1.007	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.001	IN  DEF: ^.color=black
0.995	OUT DEF: ^.layer_0111.shape.color=green
0.976	IN  DEF: ^.layer_010.shape.color=green
0.956	IN  DEF: ^.layer_0101.shape.color=green
0.950	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.944	OUT DEF: ^.layer_01111.shape.color=^.layer_01011111.shape.color
0.938	OUT DEF: ^.layer_01.shape.color=^.layer_01011.shape.color
0.934	IN  DEF: ^.size=(?,?)
0.929	IN  DEF: ^.layer_01.pos=(?,?)
0.925	IN  DEF: ^.layer_01011111.pos=(?,?)
0.920	IN  DEF: ^.layer_010.pos=(?,?)
0.916	IN  DEF: ^.layer_0.pos=(?,?)
0.891	IN  DEF: ^.layer_0.pos.i=2
0.887	IN  DEF: ^.layer_0101.pos=(?,?)
0.882	IN  DEF: ^.layer_01011.pos=(?,?)
0.878	IN  DEF: ^.layer_010111.pos=(?,?)
0.873	IN  DEF: ^.layer_0101111.pos=(?,?)
0.870	OUT DEF: ^.layer_0.shape.mask=Full
0.867	OUT DEF: ^.layer_01.shape.mask=Full
0.864	OUT DEF: ^.layer_011.shape.mask=Full
0.861	OUT DEF: ^.layer_0111.shape.mask=Full
0.857	OUT DEF: ^.layer_01111.shape.mask=Full
0.855	OUT DEF: ^.color=black
0.854	OUT DEF: ^.layer_0.shape.size=(?,?)
0.843	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.pos.i - ^.layer_0.pos.j
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_01.pos.i - ^.layer_0.pos.j,?) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size ? and color ^.layer_01011.shape.color and mask Full at ^.layer_01011.pos
  _011: a rectangle with size ? and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos
  _0111: a rectangle with size ? and color green and mask Full at ^.layer_010.pos
  _01111: a rectangle with size ? and color ^.layer_01011111.shape.color and mask Full at ^.layer_01011111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (2,?)
  _010: a point with color green at (?,?)
  _0101: a point with color green at (?,?)
  _01011: a point with color ? at (?,?)
  _010111: a point with color ? at (?,?)
  _0101111: a point with color ? at (?,?)
  _01011111: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 151.1 + 3532.7 = 3683.8
DL output with Mo: L = 128.2 + 956.5 = 1084.7
DL input+output M: L = 279.3 + 4489.2 = 4768.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _010: a point with color green at (6,3)
  _0101: a point with color green at (6,11)
  _01011: a point with color cyan at (12,14)
  _010111: a point with color red at (13,6)
  _0101111: a point with color cyan at (17,14)
  _01011111: a point with color grey at (20,2)
  _01: a point with color pink at (18,4)
diff: 
delta: (20,7)=5# (27,4)=6 
   (185.9 bits)
data: a background with size (30,20) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (2,6)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (12,14)
  _011: a rectangle with size (10,1) and color pink and mask Full at (18,4)
  _0111: a rectangle with size (1,9) and color green and mask Full at (6,3)
  _01111: a rectangle with size (1,6) and color grey and mask Full at (20,2)
diff: 
delta:
   (49.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _010: a point with color green at (6,3)
  _0101: a point with color green at (6,11)
  _01011: a point with color cyan at (12,14)
  _010111: a point with color red at (13,6)
  _0101111: a point with color cyan at (17,14)
  _01011111: a point with color pink at (18,4)
  _01: a point with color grey at (20,2)
diff: 
delta: (20,7)=5# (27,4)=6 
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _010: a point with color green at (6,3)
  _0101: a point with color green at (6,11)
  _01011: a point with color cyan at (12,14)
  _010111: a point with color red at (13,6)
  _0101111: a point with color cyan at (17,14)
  _01011111: a point with color pink at (18,4)
  _01: a point with color grey at (20,7)
diff: 
delta: (20,2)=5# (27,4)=6 
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _010: a point with color green at (6,3)
  _0101: a point with color green at (6,11)
  _01011: a point with color cyan at (12,14)
  _010111: a point with color red at (13,6)
  _0101111: a point with color cyan at (17,14)
  _01011111: a point with color grey at (20,2)
  _01: a point with color pink at (18,4)
diff: 
delta: (20,7)=5# (27,4)=6 
! 40 wrong pixels (generated / expected)

TRAIN 40853293.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _010: a point with color green at (4,2)
  _0101: a point with color green at (4,7)
  _01011: a point with color orange at (8,2)
  _010111: a point with color orange at (8,5)
  _0101111: a point with color yellow at (10,3)
  _01011111: a point with color cyan at (14,1)
  _01: a point with color brown at (12,5)
diff: 
delta: (14,6)=8  (18,5)=9#
   (167.4 bits)
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (9,1) and color yellow and mask Full at (2,3)
  _01: a rectangle with size (1,4) and color orange and mask Full at (8,2)
  _011: a rectangle with size (7,1) and color brown and mask Full at (12,5)
  _0111: a rectangle with size (1,6) and color green and mask Full at (4,2)
  _01111: a rectangle with size (1,6) and color cyan and mask Full at (14,1)
diff: 
delta:
   (46.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _010: a point with color green at (4,2)
  _0101: a point with color green at (4,7)
  _01011: a point with color orange at (8,2)
  _010111: a point with color orange at (8,5)
  _0101111: a point with color yellow at (10,3)
  _01011111: a point with color brown at (12,5)
  _01: a point with color cyan at (14,1)
diff: 
delta: (14,6)=8  (18,5)=9#
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _010: a point with color green at (4,2)
  _0101: a point with color green at (4,7)
  _01011: a point with color orange at (8,2)
  _010111: a point with color orange at (8,5)
  _0101111: a point with color yellow at (10,3)
  _01011111: a point with color brown at (12,5)
  _01: a point with color cyan at (14,6)
diff: 
delta: (14,1)=8  (18,5)=9#
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _010: a point with color green at (4,2)
  _0101: a point with color green at (4,7)
  _01011: a point with color orange at (8,2)
  _010111: a point with color orange at (8,5)
  _0101111: a point with color yellow at (10,3)
  _01011111: a point with color cyan at (14,1)
  _01: a point with color brown at (12,5)
diff: 
delta: (14,6)=8  (18,5)=9#
! 27 wrong pixels (generated / expected)

TRAIN 40853293.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a point with color grey at (2,9)
  _010: a point with color green at (1,3)
  _0101: a point with color red at (3,1)
  _01011: a point with color red at (3,16)
  _010111: a point with color orange at (7,7)
  _0101111: a point with color orange at (7,13)
  _01011111: a point with color grey at (9,9)
  _01: a point with color cyan at (14,8)
diff:   ^.layer_0101.shape.color
delta: (14,14)=8  (18,3)=3 
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a point with color grey at (2,9)
  _010: a point with color green at (1,3)
  _0101: a point with color red at (3,1)
  _01011: a point with color red at (3,16)
  _010111: a point with color orange at (7,7)
  _0101111: a point with color orange at (7,13)
  _01011111: a point with color grey at (9,9)
  _01: a point with color cyan at (14,14)
diff:   ^.layer_0101.shape.color
delta: (14,8)=8  (18,3)=3 
! 58 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a point with color grey at (2,9)
  _010: a point with color green at (1,3)
  _0101: a point with color red at (3,1)
  _01011: a point with color red at (3,16)
  _010111: a point with color orange at (7,7)
  _0101111: a point with color orange at (7,13)
  _01011111: a point with color cyan at (14,8)
  _01: a point with color grey at (9,9)
diff:   ^.layer_0101.shape.color
delta: (14,14)=8  (18,3)=3 
! 57 wrong pixels (generated / expected)

TEST 40853293.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 956.5 bits (956.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-308] Checking task 4093f84a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 36993.2 = 37002.1
DL output with Mo: L = 9.0 + 36993.2 = 37002.1
DL input+output M: L = 17.9 + 73986.3 = 74004.2

# learning a model for train pairs
2.000	
1.122	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.320	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.303	OUT DEF: ^.size=^.size
0.299	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.296	IN  DEF: ^.layer_0.shape.color=grey
0.293	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.290	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.287	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.284	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.281	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.278	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
0.274	IN  OBJECT at ^.layer_01111111: a point with color ? at ?
0.272	IN  DEF: ^.layer_0.shape.mask=Full
0.271	OUT DEF: ^.color=black
0.270	IN  DEF: ^.color=black
0.269	IN  DEF: ^.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask ? at ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size ? and color grey and mask Full at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?
  _011111: a point with color ? at ?
  _0111111: a point with color ? at ?
  _01111111: a point with color ? at ?

DL input  with Mi: L = 115.4 + 6134.8 = 6250.2
DL output with Mo: L = 28.0 + 3664.7 = 3692.7
DL input+output M: L = 143.4 + 9799.5 = 9942.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _01: a point with color red at (0,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (3,10)
  _01111: a point with color red at (9,9)
  _011111: a point with color red at (10,1)
  _0111111: a point with color red at (11,4)
  _01111111: a point with color red at (12,11)
diff: 
delta:
   (162.6 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (6,14) and color grey and mask ..x.....x.x...|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|.x..x....x.x.. at (4,0)
diff: 
delta:
   (117.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _01: a point with color red at (0,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (3,10)
  _01111: a point with color red at (9,9)
  _011111: a point with color red at (10,1)
  _0111111: a point with color red at (11,4)
  _01111111: a point with color red at (12,11)
diff: 
delta:
! 67 wrong pixels (generated / expected)

TRAIN 4093f84a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a point with color green at (0,12)
  _011: a point with color green at (1,9)
  _0111: a point with color green at (2,3)
  _01111: a point with color green at (2,11)
  _011111: a point with color green at (4,0)
  _0111111: a point with color green at (6,10)
  _01111111: a point with color green at (6,12)
diff: 
delta: (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
   (247.4 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,8) and color grey and mask .xxxxxx.|.xxxxxx.|xxxxxxx.|.xxxxx..|xxxxxx..|.xxxxx..|.xxxxxxx|xxxxxx..|.xxxxx..|xxxxxxx.|.xxxxx..|.xxxxx..|.xxxxxx.|.xxxxx.. at (0,3)
diff: 
delta:
   (146.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a point with color green at (0,12)
  _011: a point with color green at (1,9)
  _0111: a point with color green at (2,3)
  _01111: a point with color green at (2,11)
  _011111: a point with color green at (4,0)
  _0111111: a point with color green at (6,10)
  _01111111: a point with color green at (6,12)
diff: 
delta: (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
! 85 wrong pixels (generated / expected)

TRAIN 4093f84a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _01: a point with color blue at (1,7)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,7)
  _01111: a point with color blue at (3,12)
  _011111: a point with color blue at (5,8)
  _0111111: a point with color blue at (9,1)
  _01111111: a point with color blue at (10,11)
diff: 
delta: (11,3)=1  (11,8)=1 
   (203.5 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,14) and color grey and mask .......x......|...x...xx...x.|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|.x.x....x..x.. at (5,0)
diff: 
delta:
   (102.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _01: a point with color blue at (1,7)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,7)
  _01111: a point with color blue at (3,12)
  _011111: a point with color blue at (5,8)
  _0111111: a point with color blue at (9,1)
  _01111111: a point with color blue at (10,11)
diff: 
delta: (11,3)=1  (11,8)=1 
! 41 wrong pixels (generated / expected)

TRAIN 4093f84a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,2) and color grey and mask Full at (0,5)
  _01: a point with color yellow at (1,2)
  _011: a point with color yellow at (1,9)
  _0111: a point with color yellow at (3,3)
  _01111: a point with color yellow at (4,1)
  _011111: a point with color yellow at (6,7)
  _0111111: a point with color yellow at (6,11)
  _01111111: a point with color yellow at (11,1)
diff: 
delta: (11,3)=4  (11,10)=4  (13,12)=4 
! 42 wrong pixels (generated / expected)

TEST 4093f84a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.0 sec (20.0 sec/task)
bits-train-error = 3664.7 bits (3664.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-307] Checking task 41e4d17e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10406.1 = 10415.1
DL output with Mo: L = 9.0 + 25107.2 = 25116.2
DL input+output M: L = 17.9 + 35513.3 = 35531.3

# learning a model for train pairs
2.000	
1.445	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.199	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.181	OUT DEF: ^.size=^.size
1.167	IN  DEF: ^.color=cyan
1.157	OUT DEF: ^.layer_0=^.layer_0
1.148	IN  DEF: ^.layer_0.shape.color=blue
0.912	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.793	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.772	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.757	IN  DEF: ^.color=cyan
0.750	OUT DEF: ^.color=^.color
0.748	IN  DEF: ^.layer_00.pos=(?,?)
0.746	IN  DEF: ^.size=(?,?)
0.727	IN  DEF: ^.size.i=15
0.709	IN  DEF: ^.size.j=15
0.707	IN  DEF: ^.layer_00.shape.size=(?,?)
0.704	IN  DEF: ^.layer_0.pos=(?,?)
0.695	IN  DEF: ^.layer_0.pos.j=3
0.692	IN  DEF: ^.layer_0.shape.size=(?,?)
0.679	IN  DEF: ^.layer_0.shape.size.i=5
0.666	IN  DEF: ^.layer_0.shape.size.j=5
0.664	OUT DEF: ^.layer_01.shape.mask=Full
0.664	OUT DEF: ^.layer_00.pos=(?,?)
0.663	OUT DEF: ^.layer_01.pos=(?,?)
0.498	OUT DEF: ^.layer_01.pos.i=(0)
0.485	IN  DEF: ^.layer_00.shape.size.j=5
0.476	IN  DEF: ^.layer_00.shape.color=blue
0.468	IN  DEF: ^.layer_0.shape.mask=Border
0.459	OUT DEF: ^.layer_00=^.layer_00
0.455	OUT DEF: ^.layer_01.pos.j=5
0.451	OUT DEF: ^.layer_01.shape.color=pink
0.450	OUT DEF: ^.layer_01.shape.size=(?,?)
0.442	OUT DEF: ^.layer_01.shape.size.i=^.size.i
0.441	OUT DEF: ^.layer_01.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_00
  _0: ^.layer_0
  _01: a rectangle with size (^.size.i,1) and color pink and mask Full at ((0),5)
WHERE (Mi)
a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (?,5) and color blue and mask ? at (?,?)
  _0: a rectangle with size (5,5) and color blue and mask Border at (?,3)

DL input  with Mi: L = 106.3 + 476.3 = 582.6
DL output with Mo: L = 51.0 + 9609.0 = 9660.0
DL input+output M: L = 157.3 + 10085.3 = 10242.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _0: a rectangle with size (5,5) and color blue and mask Border at (1,3)
diff: 
delta:
   (20.3 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _0: a rectangle with size (5,5) and color blue and mask Border at (1,3)
  _01: a rectangle with size (15,1) and color pink and mask Full at (0,5)
diff: 
delta: (3,0)=6  (3,1)=6  (3,2)=6  (3,4)=6  (3,6)=6  (3,8)=6  (3,9)=6  (3,10)=6  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6 
   (248.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _0: a rectangle with size (5,5) and color blue and mask Border at (1,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (5,5) and color blue and mask Border at (9,8)
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
diff: 
delta:
   (27.3 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (5,5) and color blue and mask Border at (9,8)
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
  _01: a rectangle with size (15,1) and color pink and mask Full at (0,5)
diff: 
delta: (0,10)=6  (1,10)=6  (2,10)=6  (3,10)=6  (4,10)=6  (5,0)=6  (5,1)=6  (5,2)=6  (5,4)=6  (5,6)=6  (5,8)=6  (5,9)=6  (5,10)=6  (5,11)=6  (5,12)=6  (5,13)=6  (5,14)=6  (6,10)=6  (7,10)=6  (8,10)=6  (10,10)=6  (11,0)=6  (11,1)=6  (11,2)=6  (11,3)=6  (11,4)=6  (11,6)=6  (11,7)=6  (11,9)=6  (11,10)=6  (11,11)=6  (11,13)=6  (11,14)=6  (12,10)=6  (14,10)=6 
   (712.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (5,5) and color blue and mask Border at (9,8)
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
diff: 
delta:
! 35 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (5,5) and color blue and mask Border at (1,6)
  _0: a rectangle with size (5,5) and color blue and mask Border at (9,3)
diff: 
delta:
! 35 wrong pixels (generated / expected)

TEST 41e4d17e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.0 sec (10.0 sec/task)
bits-train-error = 9609.0 bits (9609.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-306] Checking task 4258a5f9.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1790.0 = 1799.0
DL output with Mo: L = 9.0 + 12316.2 = 12325.2
DL input+output M: L = 17.9 + 14106.3 = 14124.2

# learning a model for train pairs
2.000	
1.552	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.431	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.365	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.323	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.279	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.227	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.197	OUT DEF: ^.size=^.size
1.180	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.129	IN  DEF: ^.layer_0.shape.color=grey
1.078	IN  DEF: ^.layer_01.shape.color=grey
1.027	IN  DEF: ^.layer_011.shape.color=grey
1.010	IN  DEF: ^.color=black
0.998	IN  DEF: ^.size=(?,?)
0.905	IN  DEF: ^.size.i=9
0.811	IN  DEF: ^.size.j=9
0.799	IN  DEF: ^.layer_0.pos=(?,?)
0.750	IN  DEF: ^.layer_0.pos.i=1
0.738	IN  DEF: ^.layer_01.pos=(?,?)
0.689	IN  DEF: ^.layer_01.pos.j=3
0.677	IN  DEF: ^.layer_011.pos=(?,?)
0.627	IN  DEF: ^.layer_011.pos.i=7
0.620	OUT DEF: ^.layer_0.shape.color=blue
0.614	OUT DEF: ^.layer_011.shape.mask=Full
0.608	OUT DEF: ^.layer_01.shape.mask=Full
0.604	OUT DEF: ^.layer_0111.shape.mask=Full
0.602	OUT DEF: ^.color=black
0.600	OUT DEF: ^.layer_0.pos=(?,?)
0.593	OUT DEF: ^.layer_0.pos.i=(0)
0.591	OUT DEF: ^.layer_0.shape.size=(?,?)
0.589	OUT DEF: ^.layer_01.pos=(?,?)
0.582	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i
0.581	OUT DEF: ^.layer_01.shape.size=(?,?)
0.574	OUT DEF: ^.layer_01.shape.size.j=^.layer_011.pos.j
0.568	OUT DEF: ^.layer_01.shape.size.i=^.layer_011.pos.j
0.567	OUT DEF: ^.layer_011.pos=(?,?)
0.559	OUT DEF: ^.layer_011.pos.i=4
0.558	OUT DEF: ^.layer_011.shape.size=(?,?)
0.552	OUT DEF: ^.layer_011.shape.size.j=^.layer_011.pos.j
0.545	OUT DEF: ^.layer_011.shape.size.i=^.layer_011.pos.j
0.544	OUT DEF: ^.layer_0111.pos=(?,?)
0.542	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.536	OUT DEF: ^.layer_0111.shape.size.j=^.layer_011.pos.j
0.530	OUT DEF: ^.layer_0111.shape.size.i=^.layer_011.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at ((0),?)
  _01: a rectangle with size (^.layer_011.pos.j,^.layer_011.pos.j) and color ? and mask Full at (^.layer_0.pos.i,?)
  _011: a rectangle with size (^.layer_011.pos.j,^.layer_011.pos.j) and color ? and mask Full at (4,?)
  _0111: a rectangle with size (^.layer_011.pos.j,^.layer_011.pos.j) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,?)
  _01: a point with color grey at (?,3)
  _011: a point with color grey at (7,?)

DL input  with Mi: L = 81.7 + 475.4 = 557.1
DL output with Mo: L = 139.9 + 2571.5 = 2711.4
DL input+output M: L = 221.6 + 3046.9 = 3268.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,1)
diff: 
delta:
   (13.5 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,8) and color blue and mask .....xxx|.....x.x|.....xxx|..xxx...|..x.x...|..xxx...|xxx.....|x.x.....|xxx..... at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,3)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (7,1)
diff: 
delta:
   (128.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,1)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (7,1)
  _011: a point with color grey at (4,3)
diff:   ^.layer_011.pos.i  ^.layer_01.pos.j
delta:
! 42 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (7,3)
diff: 
delta: (5,7)=5#
   (34.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (0,6)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (4,6)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (6,2)
diff: 
delta: (1,7)=5# (2,3)=5# (5,7)=5# (7,3)=5#
   (128.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (7,3)
diff: 
delta: (5,7)=5#
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (5,7)
diff:   ^.layer_011.pos.i
delta: (7,3)=5#
! 75 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,1)
diff: 
delta: (2,7)=5# (7,5)=5#
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,5)
diff: 
delta: (2,7)=5# (7,1)=5#
! 57 wrong pixels (generated / expected)

TEST 4258a5f9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.4 sec (17.4 sec/task)
bits-train-error = 2571.5 bits (2571.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-305] Checking task 4290ef0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 25783.8 = 25792.8
DL output with Mo: L = 9.0 + 25999.6 = 26008.5
DL input+output M: L = 17.9 + 51783.3 = 51801.3

# learning a model for train pairs
2.000	
1.866	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.811	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.763	OUT DEF: ^.layer_01.shape.mask=Full
1.756	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.590	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.486	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.418	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
1.350	OUT OBJECT at ^.layer_010: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_01.shape at ?
  _01: a rectangle with size ? and color ? and mask Full at ?
  _011: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 18561.0 = 18627.8
DL output with Mo: L = 66.1 + 16249.0 = 16315.1
DL input+output M: L = 132.9 + 34810.0 = 34942.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,17) and color blue and layers
  _0: a rectangle with size (13,17) and color yellow and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxx...xx|xxx..x..xxxx...xx|xxx.xxx.xxxx...xx|xxxxxxxxxxxxxxxxx|xxx.xxx.xxxxxxxxx|xxx..x..xxxxxxxxx|xxxxxxxxxx..xxx..|xxxxxxxxxx.xxxxx.|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxx.xxxxx. at (0,0)
  _01: a rectangle with size (2,7) and color pink and mask Full at (7,10)
  _011: a rectangle with size (3,3) and color green and mask Full at (1,12)
diff: 
delta: (2,13)=4  (12,10)=6  (12,16)=6 
   (419.0 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (2,5) and color blue and mask Full at (1,1)
  _010: a rectangle with size (2,7) and color pink and mask Full at (0,0)
  _01: a rectangle with size (2,5) and color blue and mask Full at (4,1)
  _011: a rectangle with size (2,7) and color pink and mask Full at (5,0)
diff: 
delta: (0,2)=4  (0,3)=4  (0,4)=4  (1,3)=4  (2,2)=3  (2,3)=3  (2,4)=3  (3,2)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=3  (5,3)=4  (6,2)=4  (6,3)=4  (6,4)=4 
   (394.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color blue and layers
  _0: a rectangle with size (13,17) and color yellow and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxx...xx|xxx..x..xxxx...xx|xxx.xxx.xxxx...xx|xxxxxxxxxxxxxxxxx|xxx.xxx.xxxxxxxxx|xxx..x..xxxxxxxxx|xxxxxxxxxx..xxx..|xxxxxxxxxx.xxxxx.|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxx.xxxxx. at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Full at (1,12)
  _011: a rectangle with size (2,7) and color pink and mask Full at (7,10)
diff: 
delta: (2,13)=4  (12,10)=6  (12,16)=6 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (13,17) and color blue and layers
  _0: a rectangle with size (13,17) and color yellow and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxx...xx|xxx..x..xxxx...xx|xxx.xxx.xxxx...xx|xxxxxxxxxxxxxxxxx|xxx.xxx.xxxxxxxxx|xxx..x..xxxxxxxxx|xxxxxxxxxx..xxx..|xxxxxxxxxx.xxxxx.|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxx.xxxxx. at (0,0)
  _01: a rectangle with size (2,7) and color pink and mask Full at (7,10)
  _011: a rectangle with size (3,3) and color green and mask Full at (1,12)
diff: 
delta: (2,13)=4  (12,10)=6  (12,16)=6 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color red and layers
  _0: a rectangle with size (18,18) and color cyan and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xx...x...xxxxxxxxx|xx.xxxxx.xxxxxxxxx|xx.xxxxx.xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xx.xxxxx.xxxx.xxxx|xx.xxxxx.xxxxxxxxx|xx...x...xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|x...xxxxxxxxxxxxxx|x...xxx..x..xxxxxx|x...xxx.xxx.xxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxx.xxx.xxxxxx|xxxxxxx..x..xxxxxx|xxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,7) and color blue and mask Full at (2,2)
  _011: a rectangle with size (3,7) and color blue and mask Full at (6,2)
diff: 
delta: (6,13)=0  (11,1)=4  (11,2)=4  (11,3)=4  (12,1)=4  (12,2)=8  (12,3)=4  (13,1)=4  (13,2)=4  (13,3)=4 
   (678.2 bits)
data: a background with size (7,7) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (2,2)
  _010: a rectangle with size (3,7) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,5) and color red and mask Full at (4,1)
  _011: a rectangle with size (3,7) and color blue and mask Full at (4,0)
diff: 
delta: (0,3)=8  (1,1)=2  (1,2)=2  (1,3)=8  (1,4)=2  (1,5)=2  (2,1)=2  (2,5)=2  (3,3)=0  (5,3)=8  (6,3)=8 
   (303.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color red and layers
  _0: a rectangle with size (18,18) and color cyan and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xx...x...xxxxxxxxx|xx.xxxxx.xxxxxxxxx|xx.xxxxx.xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xx.xxxxx.xxxx.xxxx|xx.xxxxx.xxxxxxxxx|xx...x...xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|x...xxxxxxxxxxxxxx|x...xxx..x..xxxxxx|x...xxx.xxx.xxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxx.xxx.xxxxxx|xxxxxxx..x..xxxxxx|xxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,7) and color blue and mask Full at (2,2)
  _011: a rectangle with size (3,7) and color blue and mask Full at (6,2)
diff: 
delta: (6,13)=0  (11,1)=4  (11,2)=4  (11,3)=4  (12,1)=4  (12,2)=8  (12,3)=4  (13,1)=4  (13,2)=4  (13,3)=4 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (18,18) and color red and layers
  _0: a rectangle with size (18,18) and color cyan and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xx...x...xxxxxxxxx|xx.xxxxx.xxxxxxxxx|xx.xxxxx.xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xx.xxxxx.xxxx.xxxx|xx.xxxxx.xxxxxxxxx|xx...x...xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|x...xxxxxxxxxxxxxx|x...xxx..x..xxxxxx|x...xxx.xxx.xxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxx.xxx.xxxxxx|xxxxxxx..x..xxxxxx|xxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (7,3) and color blue and mask Full at (2,2)
  _011: a rectangle with size (7,3) and color blue and mask Full at (2,6)
diff: 
delta: (6,13)=0  (11,1)=4  (11,2)=4  (11,3)=4  (12,1)=4  (12,2)=8  (12,3)=4  (13,1)=4  (13,2)=4  (13,3)=4 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (18,18) and color green and mask xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|xx.xx...xxx...x..x|xx.xx.xxxxxxx.x.xx|xxxxx.xxxxxxx.xxxx|xx.xxxxxxxxxxxx.xx|xx.xxxx...xxxxx..x|...xxxx...xxxxxxxx|xxxxx.x...xxx.xxxx|xxxxx.xxxxxxx.xxxx|xxxxx...xxx...xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxx..xxxxxxx..xxxx|xxx.xxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx.x|xxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (7,3) and color red and mask Full at (1,0)
  _011: a rectangle with size (3,3) and color orange and mask Full at (6,7)
diff: 
delta: (2,15)=8  (2,16)=8  (3,15)=8  (5,15)=8  (6,15)=8  (6,16)=8  (7,8)=3  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
   (759.0 bits)
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (4,4)
  _010: a rectangle with size (7,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (9,3) and color blue and mask Full at (1,1)
  _011: a rectangle with size (7,3) and color red and mask Full at (2,6)
diff: 
delta: (0,0)=4  (0,1)=4  (0,9)=4  (0,10)=4  (1,0)=4  (1,7)=1  (1,8)=1  (1,9)=1  (1,10)=4  (2,9)=1  (3,3)=8  (3,4)=8  (3,6)=8  (3,7)=8  (3,9)=1  (4,1)=3  (4,3)=8  (4,7)=8  (5,1)=3  (5,2)=3  (5,3)=3  (5,5)=6  (5,7)=3  (5,8)=3  (6,1)=3  (6,3)=8  (6,7)=8  (7,3)=8  (7,4)=8  (7,6)=8  (7,7)=8  (7,9)=1  (8,9)=1  (9,0)=4  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=4  (10,0)=4  (10,1)=4  (10,9)=4  (10,10)=4 
   (926.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (18,18) and color green and mask xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|xx.xx...xxx...x..x|xx.xx.xxxxxxx.x.xx|xxxxx.xxxxxxx.xxxx|xx.xxxxxxxxxxxx.xx|xx.xxxx...xxxxx..x|...xxxx...xxxxxxxx|xxxxx.x...xxx.xxxx|xxxxx.xxxxxxx.xxxx|xxxxx...xxx...xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxx..xxxxxxx..xxxx|xxx.xxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx.x|xxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (7,3) and color red and mask Full at (1,0)
  _011: a rectangle with size (3,3) and color orange and mask Full at (6,7)
diff: 
delta: (2,15)=8  (2,16)=8  (3,15)=8  (5,15)=8  (6,15)=8  (6,16)=8  (7,8)=3  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (18,18) and color green and mask xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|xx.xx...xxx...x..x|xx.xx.xxxxxxx.x.xx|xxxxx.xxxxxxx.xxxx|xx.xxxxxxxxxxxx.xx|xx.xxxx...xxxxx..x|...xxxx...xxxxxxxx|xxxxx.x...xxx.xxxx|xxxxx.xxxxxxx.xxxx|xxxxx...xxx...xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxx..xxxxxxx..xxxx|xxx.xxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx.x|xxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask Border at (6,7)
  _011: a rectangle with size (7,3) and color red and mask Full at (1,0)
diff: 
delta: (2,15)=8  (2,16)=8  (3,15)=8  (5,15)=8  (6,15)=8  (6,16)=8  (7,8)=3  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
! size mismatch, 10x10 instead of 11x11

TRAIN 4290ef0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color green and layers
  _0: a rectangle with size (19,19) and color blue and mask xxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxx.xxxxx|xxxxxxx...xxx.xxxxx|xxxxxxx...xxx.xxxxx|xxxxxxx...xxx.xxxxx|xxxxxxxxxxxxx.....x|xxxxxxxxxxxxxxxxxxx|xxx..x..xxxxxxxxxxx|xxx.xxx.xxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|xxx.xxx.xxxxxxxxxxx|xxx..x..xxxxxxxxxxx|xxxxxxxxxxxxxx..xxx|xxxxxxxxxxxxxx.xxxx|xxxx...xxx...xxxxxx|xxxx.xxxxxxx.xxxxxx|xxxx.xxxxxxx.xxxxxx|xxxxxxxxxxxxxx.xxxx at (0,0)
  _01: a rectangle with size (3,9) and color red and mask Full at (15,4)
  _011: a rectangle with size (5,5) and color yellow and mask Full at (2,13)
diff: 
delta: (0,13)=4  (3,7)=8  (3,8)=8  (3,9)=8  (4,7)=8  (4,8)=1  (4,9)=8  (5,7)=8  (5,8)=8  (5,9)=8  (13,14)=6  (13,15)=6  (14,14)=6  (18,14)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (19,19) and color green and layers
  _0: a rectangle with size (19,19) and color blue and mask xxxxxxxxxxxxx.xxxxx|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxx.xxxxx|xxxxxxx...xxx.xxxxx|xxxxxxx...xxx.xxxxx|xxxxxxx...xxx.xxxxx|xxxxxxxxxxxxx.....x|xxxxxxxxxxxxxxxxxxx|xxx..x..xxxxxxxxxxx|xxx.xxx.xxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|xxx.xxx.xxxxxxxxxxx|xxx..x..xxxxxxxxxxx|xxxxxxxxxxxxxx..xxx|xxxxxxxxxxxxxx.xxxx|xxxx...xxx...xxxxxx|xxxx.xxxxxxx.xxxxxx|xxxx.xxxxxxx.xxxxxx|xxxxxxxxxxxxxx.xxxx at (0,0)
  _01: a rectangle with size (5,5) and color yellow and mask Full at (2,13)
  _011: a rectangle with size (3,9) and color red and mask Full at (15,4)
diff: 
delta: (0,13)=4  (3,7)=8  (3,8)=8  (3,9)=8  (4,7)=8  (4,8)=1  (4,9)=8  (5,7)=8  (5,8)=8  (5,9)=8  (13,14)=6  (13,15)=6  (14,14)=6  (18,14)=6 
! size mismatch, 10x10 instead of 11x11

TEST 4290ef0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.4 sec (28.4 sec/task)
bits-train-error = 16249.0 bits (16249.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-304] Checking task 42a50994.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 26450.5 = 26459.4
DL output with Mo: L = 9.0 + 18074.6 = 18083.6
DL input+output M: L = 17.9 + 44525.1 = 44543.0

# learning a model for train pairs
2.000	
1.862	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.759	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.666	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.531	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
1.455	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.349	OUT OBJECT at ^.layer_010: ^.layer_01.shape at ?
1.303	OUT DEF: ^.size=^.size
1.258	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
1.186	OUT OBJECT at ^.layer_0111: ^.layer_010.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_01.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_0.shape at ?
  _0111: ^.layer_010.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 20945.5 = 21012.3
DL output with Mo: L = 76.5 + 7018.9 = 7095.3
DL input+output M: L = 143.2 + 27964.4 = 28107.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _010: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
diff: 
delta: (2,7)=8  (2,9)=8  (5,8)=8  (6,6)=8  (8,10)=8  (10,1)=8  (12,1)=8  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
   (367.4 bits)
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _010: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (6,2)
  _011: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _0111: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
diff: 
delta:
   (84.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _010: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
diff: 
delta: (2,7)=8  (2,9)=8  (5,8)=8  (6,6)=8  (8,10)=8  (10,1)=8  (12,1)=8  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
! 20 wrong pixels (generated / expected)

TRAIN 42a50994.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _010: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (8,7)
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,11)=6  (9,13)=6  (10,7)=6  (10,11)=6  (11,2)=6  (11,16)=6  (11,17)=6 
   (540.6 bits)
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _010: a rectangle with size (1,2) and color pink and mask Full at (11,16)
  _01: a rectangle with size (2,1) and color pink and mask Full at (9,11)
  _011: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _0111: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
diff: 
delta: (0,11)=6  (1,10)=6  (4,7)=6  (5,8)=6 
   (174.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _010: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (8,7)
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,11)=6  (9,13)=6  (10,7)=6  (10,11)=6  (11,2)=6  (11,16)=6  (11,17)=6 
! 20 wrong pixels (generated / expected)

TRAIN 42a50994.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _010: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _01: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (2,16)=5# (3,16)=5# (4,4)=5# (4,6)=5# (4,15)=5# (4,16)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (8,13)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5# (10,13)=5#
   (637.8 bits)
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _010: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _01: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
  _011: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _0111: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
diff: 
delta: (6,14)=5# (6,15)=5# (8,0)=5# (9,0)=5# (10,1)=5#
   (218.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _010: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _01: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (2,16)=5# (3,16)=5# (4,4)=5# (4,6)=5# (4,15)=5# (4,16)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,11)=5# (8,13)=5# (9,0)=5# (9,9)=5# (9,11)=5# (10,1)=5# (10,10)=5# (10,13)=5#
! 42 wrong pixels (generated / expected)

TRAIN 42a50994.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (17,9) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _010: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
diff: 
delta: (0,5)=4  (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,4)=4  (5,7)=4  (5,8)=4  (6,0)=4  (8,6)=4  (10,6)=4  (10,8)=4  (11,4)=4  (11,7)=4  (12,7)=4  (15,0)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
   (548.8 bits)
data: a background with size (17,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|.x.|.x. at (10,6)
  _010: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _0111: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
diff: 
delta: (0,5)=4  (1,4)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
   (224.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,9) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _010: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
diff: 
delta: (0,5)=4  (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,4)=4  (5,7)=4  (5,8)=4  (6,0)=4  (8,6)=4  (10,6)=4  (10,8)=4  (11,4)=4  (11,7)=4  (12,7)=4  (15,0)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
! 38 wrong pixels (generated / expected)

TRAIN 42a50994.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask ..x.x..|.x.x...|.xxx.xx|.x..x..|x...... at (10,2)
  _010: a rectangle with size (3,5) and color green and mask ....x|.xxxx|x.... at (0,6)
  _01: a rectangle with size (2,3) and color green and mask xxx|.x. at (3,9)
diff: 
delta: (0,1)=3  (0,4)=3  (0,13)=3  (1,0)=3  (1,13)=3  (2,0)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,4)=3  (7,5)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,0)=3  (13,12)=3  (14,0)=3  (14,8)=3  (14,11)=3  (15,0)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 56 wrong pixels (generated / expected)

TEST 42a50994.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.8 sec (25.8 sec/task)
bits-train-error = 7018.9 bits (7018.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-303] Checking task 4347f46a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 33777.9 = 33786.8
DL output with Mo: L = 9.0 + 22673.9 = 22682.9
DL input+output M: L = 17.9 + 56451.8 = 56469.7

# learning a model for train pairs
2.000	
1.525	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.107	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.849	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.780	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.726	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.699	OUT DEF: ^.size=^.size
0.685	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.678	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.676	IN  DEF: ^.layer_0.shape.mask=Full
0.674	OUT DEF: ^.color=black
0.673	OUT DEF: ^.layer_0.shape.size=(?,?)
0.663	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.661	OUT DEF: ^.layer_01.pos=(?,?)
0.655	OUT DEF: ^.layer_01.pos.j=1
0.649	OUT DEF: ^.layer_01.pos.i=^.layer_0.shape.size.j - ^.layer_0.pos.j
0.647	OUT DEF: ^.layer_01.shape.size=(?,?)
0.643	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.pos.i
0.641	OUT DEF: ^.layer_011.pos=(?,?)
0.636	OUT DEF: ^.layer_011.pos.j=^.layer_0.shape.size.i - 3
0.633	OUT DEF: ^.layer_0111.shape.mask=Border
0.631	OUT DEF: ^.layer_011.shape.size=(?,?)
0.623	OUT DEF: ^.layer_011.shape.size.i=4
0.621	OUT DEF: ^.layer_0111.pos=(?,?)
0.620	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.611	OUT DEF: ^.layer_0111.shape.size.i=^.layer_0.shape.size.i
0.610	IN  DEF: ^.color=black
0.609	IN  DEF: ^.size=(?,?)
0.608	IN  DEF: ^.layer_0.pos=(?,?)
0.607	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.pos.i,?) and color ? and mask ? at (^.layer_0.shape.size.j - ^.layer_0.pos.j,1)
  _011: a rectangle with size (4,?) and color ? and mask ? at (?,^.layer_0.shape.size.i - 3)
  _0111: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask Border at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 40.0 + 17490.3 = 17530.3
DL output with Mo: L = 149.8 + 1844.5 = 1994.3
DL input+output M: L = 189.8 + 19334.8 = 19524.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (3,6)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
   (1186.2 bits)
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Border at (3,6)
  _01: a rectangle with size (3,4) and color cyan and mask Border at (1,1)
  _011: a rectangle with size (4,7) and color pink and mask Border at (10,2)
  _0111: a rectangle with size (5,3) and color orange and mask Border at (10,12)
diff: 
delta:
   (70.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (3,6)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 67 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (4,7) and color pink and mask Full at (10,2)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (10,12)=7# (10,13)=7# (10,14)=7# (11,12)=7# (11,13)=7# (11,14)=7# (12,12)=7# (12,13)=7# (12,14)=7# (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 79 wrong pixels (generated / expected)

TRAIN 4347f46a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (4,5) and color red and mask Full at (1,1)
diff: 
delta:
   (42.6 bits)
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color red and mask Full at (4,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,1)
  _0111: a rectangle with size (4,5) and color red and mask Border at (1,1)
diff: 
delta:
   (52.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (4,5) and color red and mask Full at (1,1)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 4347f46a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,8) and color grey and mask Full at (1,2)
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
   (520.1 bits)
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,8) and color grey and mask Border at (1,2)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
  _011: a rectangle with size (4,1) and color yellow and mask Full at (6,1)
  _0111: a rectangle with size (4,6) and color yellow and mask Border at (6,1)
diff: 
delta:
   (61.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,8) and color grey and mask Full at (1,2)
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,1)
diff: 
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (1,9)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (2,9)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5#
! 46 wrong pixels (generated / expected)

TRAIN 4347f46a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (7,6) and color yellow and mask Full at (5,2)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=1  (9,15)=1  (9,16)=1  (9,17)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,15)=1  (10,16)=1  (10,17)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,15)=1  (11,16)=1  (11,17)=1  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 96 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask Full at (1,1)
diff: 
delta: (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (8,7)=4  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4  (9,7)=4  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=1  (9,15)=1  (9,16)=1  (9,17)=1  (10,2)=4  (10,3)=4  (10,4)=4  (10,5)=4  (10,6)=4  (10,7)=4  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,15)=1  (10,16)=1  (10,17)=1  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=4  (11,7)=4  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,15)=1  (11,16)=1  (11,17)=1  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 84 wrong pixels (generated / expected)

TEST 4347f46a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.4 sec (6.4 sec/task)
bits-train-error = 1844.5 bits (1844.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-302] Checking task 444801d8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13743.5 = 13752.5
DL output with Mo: L = 9.0 + 23618.2 = 23627.2
DL input+output M: L = 17.9 + 37361.7 = 37379.6

# learning a model for train pairs
2.000	
1.550	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.235	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.960	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.723	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.584	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.487	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.462	OUT DEF: ^.size=^.size
0.443	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size
0.427	OUT DEF: ^.layer_00.shape.mask=^.layer_01.shape.mask
0.413	OUT DEF: ^.layer_0=^.layer_0
0.403	IN  DEF: ^.layer_0.shape.color=blue
0.397	OUT DEF: ^.layer_00.shape.color=^.layer_0.shape.color
0.394	IN  DEF: ^.color=black
0.391	OUT DEF: ^.layer_01.shape.mask=Full
0.388	OUT DEF: ^.layer_011.shape.mask=Full
0.386	IN  DEF: ^.size=(?,?)
0.366	IN  DEF: ^.size.i=10
0.347	IN  DEF: ^.size.j=10
0.345	IN  DEF: ^.layer_0.pos=(?,?)
0.335	IN  DEF: ^.layer_0.pos.j=1
0.332	IN  DEF: ^.layer_0.shape.size=(?,?)
0.317	IN  DEF: ^.layer_0.shape.size.j=5
0.315	IN  DEF: ^.layer_01.pos=(?,?)
0.312	IN  DEF: ^.layer_01.shape.size=(?,?)
0.310	OUT DEF: ^.color=black
0.309	OUT DEF: ^.layer_00.pos=(?,?)
0.303	OUT DEF: ^.layer_00.pos.j=4
0.301	OUT DEF: ^.layer_00.shape.size=(?,?)
0.296	OUT DEF: ^.layer_00.shape.size.i=^.layer_01.shape.size.i
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_0.shape.color and mask ^.layer_01.shape.mask at (?,4)
  _0: ^.layer_0
  _01: a rectangle with size ? and color ? and mask Full at ?
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,5) and color blue and mask ? at (?,1)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 86.9 + 2994.4 = 3081.3
DL output with Mo: L = 79.9 + 1618.7 = 1698.6
DL input+output M: L = 166.8 + 4613.2 = 4780.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
   (60.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _0: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (1,5) and color red and mask Full at (0,1)
  _011: a rectangle with size (5,5) and color red and mask Full at (0,1)
diff: 
delta:
   (50.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (1,1)
  _01: a rectangle with size (5,5) and color blue and mask Border at (1,1)
diff: 
delta: (1,3)=0  (3,3)=2 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (5,1)
  _01: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
diff: 
delta: (3,3)=2 
! 25 wrong pixels (generated / expected)

TRAIN 444801d8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (3,3)=2  (8,6)=3 
   (119.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color green and mask Full at (6,4)
  _011: a rectangle with size (4,5) and color red and mask Full at (1,1)
diff: 
delta:
   (55.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (3,3)=2  (8,6)=3 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
diff:   ^.layer_0.pos.j
delta: (3,3)=2  (8,6)=3 
! 40 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask Full at (7,4)
diff: 
delta: (3,3)=2  (7,6)=0  (8,5)=0  (8,6)=3  (8,7)=0 
! 41 wrong pixels (generated / expected)

TRAIN 444801d8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (2,3)=6  (8,6)=8 
   (119.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (6,4)
  _011: a rectangle with size (4,5) and color pink and mask Full at (0,1)
diff: 
delta:
   (55.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
diff: 
delta: (2,3)=6  (8,6)=8 
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
diff:   ^.layer_0.pos.j
delta: (2,3)=6  (8,6)=8 
! 35 wrong pixels (generated / expected)

TRAIN 444801d8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,0)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (6,4)
diff:   ^.layer_0.pos.j
delta: (2,2)=4  (7,6)=7#
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (6,4)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,0)
diff:   ^.layer_0.pos.j
delta: (2,2)=4  (7,6)=7#
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,0)
  _01: a rectangle with size (4,5) and color blue and mask Full at (6,4)
diff:   ^.layer_0.pos.j
delta: (2,2)=4  (6,6)=0  (7,5)=0  (7,6)=7# (7,7)=0  (8,5)=0  (8,6)=0  (8,7)=0 
! 41 wrong pixels (generated / expected)

TEST 444801d8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.8 sec (25.8 sec/task)
bits-train-error = 1618.7 bits (1618.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-301] Checking task 445eab21.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17166.3 = 17175.3
DL output with Mo: L = 9.0 + 537.9 = 546.9
DL input+output M: L = 17.9 + 17704.3 = 17722.2

# learning a model for train pairs
2.000	
1.486	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.049	OUT DEF: ^.color=^.layer_0.shape.color
0.722	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.658	OUT DEF: ^.size=(?,?)
0.423	OUT DEF: ^.size.i=2
0.188	OUT DEF: ^.size.j=2
0.180	IN  DEF: ^.layer_0.shape.mask=Border
0.172	IN  DEF: ^.layer_01.shape.mask=Border
0.169	IN  DEF: ^.color=black
0.167	IN  DEF: ^.size=(?,?)
0.152	IN  DEF: ^.size.i=10
0.137	IN  DEF: ^.size.j=10
0.135	IN  DEF: ^.layer_0.pos=(?,?)
0.132	IN  DEF: ^.layer_0.shape.size=(?,?)
0.130	IN  DEF: ^.layer_01.pos=(?,?)
0.128	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (2,2) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)

DL input  with Mi: L = 83.3 + 1630.3 = 1713.6
DL output with Mo: L = 15.7 + 0.0 = 15.7
DL input+output M: L = 98.9 + 1630.3 = 1729.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask Border at (5,3)
  _01: a rectangle with size (4,4) and color orange and mask Border at (0,1)
diff: 
delta:
   (53.8 bits)
data: a background with size (2,2) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask Border at (5,3)
  _01: a rectangle with size (4,4) and color orange and mask Border at (0,1)
diff: 
delta:
correct output grid

TRAIN 445eab21.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask Border at (5,2)
  _01: a rectangle with size (4,5) and color pink and mask Border at (0,0)
diff: 
delta:
   (55.0 bits)
data: a background with size (2,2) and color orange and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask Border at (5,2)
  _01: a rectangle with size (4,5) and color pink and mask Border at (0,0)
diff: 
delta:
correct output grid

TRAIN 445eab21.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,6) and color yellow and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color red and mask Border at (7,7)
diff: 
delta:
   (54.3 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,6) and color yellow and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color red and mask Border at (7,7)
diff: 
delta:
correct output grid

TRAIN 445eab21.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,5) and color green and mask Border at (0,0)
  _01: a rectangle with size (10,4) and color brown and mask Border at (0,6)
diff: 
delta:
correct output grid

TEST 445eab21.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-300] Checking task 447fd412.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8555.2 = 8564.2
DL output with Mo: L = 9.0 + 19035.1 = 19044.1
DL input+output M: L = 17.9 + 27590.3 = 27608.2

# learning a model for train pairs
2.000	
1.566	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.252	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.071	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.959	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.852	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.800	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.768	OUT DEF: ^.size=^.size
0.750	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
0.732	OUT DEF: ^.layer_0111=^.layer_01
0.714	OUT DEF: ^.layer_01=^.layer_0
0.697	IN  DEF: ^.layer_011.shape.color=red
0.689	IN  DEF: ^.layer_01.shape.mask=Full
0.673	IN  DEF: ^.layer_0.shape.color=blue
0.657	IN  DEF: ^.layer_01.shape.color=red
0.649	IN  DEF: ^.layer_011.shape.mask=Full
0.641	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.636	IN  DEF: ^.color=black
0.632	IN  DEF: ^.layer_0.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask ? at ?
  _01: ^.layer_0
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_01
WHERE (Mi)
a background with size ? and color black and layers
  _0: a rectangle with size ? and color blue and mask ? at (?,?)
  _01: a rectangle with size ? and color red and mask Full at ?
  _011: a rectangle with size ? and color red and mask Full at ?

DL input  with Mi: L = 71.5 + 3760.6 = 3832.1
DL output with Mo: L = 58.1 + 3455.4 = 3513.6
DL input+output M: L = 129.6 + 7216.0 = 7345.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff: 
delta: (2,1)=2  (2,4)=2 
   (140.3 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask xxxx..|xxxx..|..xx..|..xx..|xxxxxx|xxxxxx at (8,5)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
  _0111: a rectangle with size (2,2) and color red and mask Full at (8,3)
diff: 
delta: (2,1)=2  (2,4)=2 
   (138.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff: 
delta: (2,1)=2  (2,4)=2 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,9)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,3)
diff: 
delta: (2,1)=2  (2,4)=2 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color  ^.layer_0.shape.color
delta: (2,1)=2  (2,4)=2 
! 34 wrong pixels (generated / expected)

TRAIN 447fd412.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,2)
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
   (152.6 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (9,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (10,8)
  _0111: a rectangle with size (4,1) and color red and mask Full at (3,6)
diff: 
delta: (8,2)=2  (9,9)=2  (11,2)=2  (12,9)=2 
   (152.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,2)
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
! 16 wrong pixels (generated / expected)

TRAIN 447fd412.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta:
   (83.2 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,7) and color blue and mask Full at (7,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _0111: a rectangle with size (3,3) and color red and mask Full at (7,7)
diff: 
delta:
   (54.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _011: a rectangle with size (3,3) and color red and mask Full at (7,7)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 26 wrong pixels (generated / expected)

TRAIN 447fd412.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (2,2)
  _01: a rectangle with size (3,3) and color red and mask Full at (8,17)
  _011: a rectangle with size (2,2) and color red and mask Full at (11,5)
diff: 
delta: (2,12)=2  (3,4)=2 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (11,5)
  _011: a rectangle with size (3,3) and color red and mask Full at (8,17)
diff: 
delta: (2,12)=2  (3,4)=2 
! 85 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (4,2)
  _01: a rectangle with size (3,3) and color red and mask Full at (8,17)
  _011: a rectangle with size (2,2) and color red and mask Full at (11,5)
diff: 
delta: (2,2)=1  (2,12)=2  (3,2)=1  (3,4)=2 
! 82 wrong pixels (generated / expected)

TEST 447fd412.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.7 sec (24.7 sec/task)
bits-train-error = 3455.4 bits (3455.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-299] Checking task 44d8ac46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 35103.1 = 35112.1
DL output with Mo: L = 9.0 + 40944.8 = 40953.8
DL input+output M: L = 17.9 + 76047.9 = 76065.9

# learning a model for train pairs
2.000	
1.658	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.327	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.023	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.732	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.551	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.376	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.288	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.268	OUT DEF: ^.size=^.size
0.257	OUT DEF: ^.layer_0=^.layer_0
0.246	OUT DEF: ^.layer_01=^.layer_01
0.235	OUT DEF: ^.layer_011=^.layer_011
0.229	IN  DEF: ^.layer_0.shape.color=grey
0.224	IN  DEF: ^.layer_01.shape.color=grey
0.222	OUT DEF: ^.layer_0111.shape.mask=Full
0.220	IN  DEF: ^.color=black
0.219	OUT DEF: ^.color=black
0.217	IN  DEF: ^.size=(?,?)
0.207	IN  DEF: ^.size.i=12
0.196	IN  DEF: ^.size.j=12
0.195	IN  DEF: ^.layer_0.pos=(?,?)
0.193	IN  DEF: ^.layer_0.shape.size=(?,?)
0.192	IN  DEF: ^.layer_01.pos=(?,?)
0.186	IN  DEF: ^.layer_01.pos.j=1
0.181	IN  DEF: ^.layer_011.shape.color=grey
0.180	IN  DEF: ^.layer_01.shape.size=(?,?)
0.179	IN  DEF: ^.layer_011.pos=(?,?)
0.177	IN  DEF: ^.layer_011.shape.size=(?,?)
0.176	OUT DEF: ^.layer_0111.pos=(?,?)
0.175	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.171	OUT DEF: ^.layer_0111.shape.size.j=^.layer_011.shape.size.j - 2
0.167	OUT DEF: ^.layer_0111.shape.size.i=^.layer_01.shape.size.j - ^.layer_0.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size (^.layer_01.shape.size.j - ^.layer_0.pos.j,^.layer_011.shape.size.j - 2) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (12,12) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,1)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 115.3 + 4116.6 = 4231.9
DL output with Mo: L = 75.6 + 1815.4 = 1891.0
DL input+output M: L = 190.8 + 5932.0 = 6122.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
diff: 
delta:
   (105.2 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,2)
diff: 
delta: (10,3)=2 
   (35.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (8,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
diff: 
delta: (10,3)=0 
! 9 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
  _011: a rectangle with size (6,6) and color grey and mask Border at (3,6)
diff: 
delta:
   (117.9 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
  _011: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _0111: a rectangle with size (4,4) and color red and mask Full at (4,7)
diff: 
delta: (2,3)=2  (9,1)=2  (9,2)=2  (10,1)=2  (10,2)=2 
   (116.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
  _011: a rectangle with size (6,6) and color grey and mask Border at (3,6)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _01: a rectangle with size (4,4) and color grey and mask Full at (1,1)
  _011: a rectangle with size (6,6) and color grey and mask Border at (3,6)
diff: 
delta: (2,3)=0 
! 28 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _01: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _011: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff: 
delta:
   (79.4 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _01: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _011: a rectangle with size (4,4) and color grey and mask Border at (3,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,8)
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _01: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _011: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _011: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff:   ^.layer_01.pos.j
delta:
! 10 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
  _01: a rectangle with size (1,4) and color grey and mask Full at (1,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x..x|xxxx|xxxx at (1,1)
diff: 
delta:
   (109.2 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
  _01: a rectangle with size (1,4) and color grey and mask Full at (1,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x..x|xxxx|xxxx at (1,1)
  _0111: a rectangle with size (1,2) and color black and mask Full at (2,2)
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
  _01: a rectangle with size (1,4) and color grey and mask Full at (1,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x..x|xxxx|xxxx at (1,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|x..x|xxxx|xxxx at (1,1)
  _011: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,2)
  _01: a rectangle with size (5,4) and color grey and mask xxxx|xx.x|x..x|x..x|xxxx at (1,7)
  _011: a rectangle with size (5,5) and color grey and mask Border at (1,0)
diff:   ^.layer_01.pos.j
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,0)
  _01: a rectangle with size (5,4) and color grey and mask xxxx|xx.x|x..x|x..x|xxxx at (1,7)
  _011: a rectangle with size (4,6) and color grey and mask Border at (8,2)
diff:   ^.layer_01.pos.j
delta:
! 13 wrong pixels (generated / expected)

TEST 44d8ac46.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 13.6 sec (13.6 sec/task)
bits-train-error = 1815.4 bits (1815.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-298] Checking task 44f52bb0.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4131.0 = 4140.0
DL output with Mo: L = 9.0 + 835.9 = 844.9
DL input+output M: L = 17.9 + 4966.9 = 4984.8

# learning a model for train pairs
2.000	
1.667	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.579	OUT DEF: ^.size=(?,?)
1.413	OUT DEF: ^.size.i=1
1.247	OUT DEF: ^.size.j=1
1.229	IN  DEF: ^.size=(?,?)
1.149	IN  DEF: ^.size.i=3
1.070	IN  DEF: ^.size.j=3
1.052	IN  DEF: ^.layer_0.pos=(?,?)
1.034	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ? and layers
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 47.2 + 1836.0 = 1883.2
DL output with Mo: L = 11.6 + 477.9 = 489.6
DL input+output M: L = 58.8 + 2314.0 = 2372.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x-cross at (0,0)
diff: 
delta:
   (29.5 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x-cross at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask x.|x.|.x at (0,0)
diff: 
delta:
   (30.8 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask x.|x.|.x at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color black and mask Full at (0,1)
diff: 
delta:
   (28.6 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color black and mask Full at (0,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2 
   (36.3 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
diff: 
delta:
   (30.8 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,0)
diff: 
delta:
   (27.6 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|xxx|x.x at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 477.9 bits (477.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-297] Checking task 4522001f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1602.0 = 1611.0
DL output with Mo: L = 9.0 + 12503.6 = 12512.6
DL input+output M: L = 17.9 + 14105.6 = 14123.5

# learning a model for train pairs
2.000	
1.194	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.898	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.796	OUT DEF: ^.layer_0.shape.mask=xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx
0.734	IN  OBJECT at ^.layer_00: a point with color ? at ?
0.677	IN  DEF: ^.layer_00.shape.color=red
0.620	IN  DEF: ^.layer_0.shape.color=green
0.591	IN  DEF: ^.layer_0.shape.mask=Full
0.571	IN  DEF: ^.color=black
0.555	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.541	IN  DEF: ^.size=(?,?)
0.474	IN  DEF: ^.size.i=3
0.408	IN  DEF: ^.size.j=3
0.394	IN  DEF: ^.layer_0.pos=(?,?)
0.381	IN  DEF: ^.layer_00.pos=(?,?)
0.344	IN  DEF: ^.layer_00.pos.i=1
0.308	IN  DEF: ^.layer_00.pos.j=1
0.294	IN  DEF: ^.layer_0.shape.size=(?,?)
0.241	IN  DEF: ^.layer_0.shape.size.i=2
0.188	IN  DEF: ^.layer_0.shape.size.j=2
0.181	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.178	OUT DEF: ^.color=black
0.177	OUT DEF: ^.size=(?,?)
0.163	OUT DEF: ^.size.i=9
0.150	OUT DEF: ^.size.j=9
0.148	OUT DEF: ^.layer_0.shape.size=(?,?)
0.135	OUT DEF: ^.layer_0.shape.size.i=8
0.122	OUT DEF: ^.layer_0.shape.size.j=8

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,8) and color ^.layer_0.shape.color and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at ^.layer_0.pos
WHERE (Mi)
a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (?,?)

DL input  with Mi: L = 65.2 + 116.3 = 181.5
DL output with Mo: L = 119.5 + 0.0 = 119.5
DL input+output M: L = 184.7 + 116.3 = 301.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
   (5.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN 4522001f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
diff: 
delta:
   (5.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN 4522001f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,1)
diff: 
delta:
! 64 wrong pixels (generated / expected)

TEST 4522001f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-296] Checking task 4612dd53.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12771.0 = 12780.0
DL output with Mo: L = 9.0 + 19208.3 = 19217.2
DL input+output M: L = 17.9 + 31979.3 = 31997.2

# learning a model for train pairs
2.000	
1.865	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.735	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.610	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.524	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.443	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.370	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.305	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.250	OUT OBJECT at ^.layer_01111: ^.layer_011.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_01.shape at ?
  _01111: ^.layer_011.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 9212.4 = 9279.2
DL output with Mo: L = 76.4 + 9985.4 = 10061.8
DL input+output M: L = 143.2 + 19197.8 = 19341.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (6,2)
  _011: a rectangle with size (1,5) and color blue and mask Full at (7,6)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (1,8)=1  (2,2)=1  (2,10)=0  (4,10)=0  (7,8)=0 
   (270.8 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (1,3)
  _01: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _011: a rectangle with size (3,1) and color red and mask Full at (3,2)
  _0111: a rectangle with size (2,2) and color blue and mask x.|xx at (6,2)
  _01111: a rectangle with size (1,5) and color blue and mask Full at (7,6)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (1,8)=1  (2,2)=1  (2,10)=2  (4,10)=2  (7,4)=2  (7,5)=2  (7,8)=2 
   (308.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (6,2)
  _011: a rectangle with size (1,5) and color blue and mask Full at (7,6)
diff: 
delta: (1,2)=1  (1,4)=1  (1,7)=1  (1,8)=1  (2,2)=1  (2,10)=0  (4,10)=0  (7,8)=0 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask .x|.x|xx at (5,9)
  _01: a rectangle with size (1,6) and color blue and mask Full at (7,2)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,7)
diff: 
delta: (1,2)=1  (1,4)=1  (1,10)=1  (2,2)=1  (3,10)=1  (6,2)=1  (7,4)=0  (7,5)=0 
! size mismatch, 10x10 instead of 9x13
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,7) and color blue and mask Full at (1,4)
  _01: a rectangle with size (3,2) and color blue and mask .x|.x|xx at (5,9)
  _011: a rectangle with size (2,2) and color blue and mask x.|xx at (6,2)
diff: 
delta: (1,2)=1  (1,5)=0  (1,6)=0  (1,9)=0  (2,2)=1  (3,10)=1  (7,6)=1  (7,7)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 4612dd53.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (7,2)
  _01: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _011: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
diff: 
delta: (2,7)=1  (4,4)=1  (4,8)=0  (5,2)=1  (5,4)=1  (6,2)=1  (8,7)=1 
   (267.6 bits)
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (7,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (2,5)
  _0111: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _01111: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
diff: 
delta: (2,7)=1  (3,4)=2  (4,2)=2  (4,4)=1  (4,8)=2  (5,4)=1  (6,4)=2  (7,2)=2  (8,6)=2  (8,7)=1  (8,8)=2 
   (330.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (7,2)
  _01: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _011: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
diff: 
delta: (2,7)=1  (4,4)=1  (4,8)=0  (5,2)=1  (5,4)=1  (6,2)=1  (8,7)=1 
! size mismatch, 10x10 instead of 11x13
>> Trial 2
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (7,2)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|.x|x. at (5,7)
diff: 
delta: (2,7)=1  (2,8)=1  (3,8)=1  (4,4)=1  (5,2)=1  (5,4)=1  (6,2)=1 
! size mismatch, 10x10 instead of 11x13

TRAIN 4612dd53.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,2)
diff: 
delta: (3,4)=0  (3,7)=0  (4,2)=1  (4,10)=1  (6,10)=1  (7,5)=1  (7,7)=1  (7,8)=1  (8,10)=1  (9,10)=1  (10,4)=0  (10,7)=0  (10,8)=0 
   (382.8 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (7,4)
  _01: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _011: a rectangle with size (8,1) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _01111: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,2)
diff: 
delta: (3,4)=2  (3,7)=2  (4,2)=1  (5,2)=2  (5,10)=2  (7,5)=1  (7,7)=1  (7,8)=1  (9,2)=2  (10,4)=2  (10,7)=2  (10,8)=2 
   (359.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,7) and color blue and mask Full at (7,2)
  _011: a rectangle with size (3,2) and color blue and mask .x|.x|xx at (8,9)
diff: 
delta: (3,4)=0  (3,7)=0  (4,2)=1  (4,10)=1  (6,2)=1  (6,10)=1  (7,4)=0  (7,6)=0  (8,2)=1  (10,2)=1  (10,3)=1  (10,5)=1  (10,6)=1 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,2)
diff: 
delta: (3,4)=0  (3,7)=0  (4,2)=1  (4,10)=1  (6,10)=1  (7,5)=1  (7,7)=1  (7,8)=1  (8,10)=1  (9,10)=1  (10,4)=0  (10,7)=0  (10,8)=0 
! size mismatch, 10x10 instead of 13x13

TRAIN 4612dd53.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,4)
  _011: a rectangle with size (1,7) and color blue and mask Full at (10,4)
diff: 
delta: (2,6)=0  (2,8)=0  (3,10)=1  (4,2)=0  (5,2)=0  (6,10)=1  (7,4)=1  (7,6)=1  (7,9)=1  (7,10)=1  (8,2)=0  (9,10)=1  (10,6)=0  (10,8)=0 
! size mismatch, 10x10 instead of 13x13

TEST 4612dd53.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 9985.4 bits (9985.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-295] Checking task 46442a0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2387.8 = 2396.7
DL output with Mo: L = 9.0 + 8510.4 = 8519.4
DL input+output M: L = 17.9 + 10898.2 = 10916.1

# learning a model for train pairs
2.000	
1.413	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.122	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.093	OUT DEF: ^.color=^.layer_0.shape.color
1.077	OUT DEF: ^.layer_0.shape.color=^.color
1.062	IN  DEF: ^.size=(?,?)
1.048	IN  DEF: ^.layer_0.pos=(?,?)
1.014	IN  DEF: ^.layer_0.pos.i=(0)
0.980	IN  DEF: ^.layer_0.pos.j=(0)
0.966	IN  DEF: ^.layer_0.shape.size=(?,?)
0.962	OUT DEF: ^.size=(?,?)
0.938	OUT DEF: ^.size.i=^.size.i + ^.size.i
0.914	OUT DEF: ^.size.j=^.size.j + ^.size.j
0.910	OUT DEF: ^.layer_0.pos=(?,?)
0.898	OUT DEF: ^.layer_0.pos.i=^.layer_0.shape.size.i - 2
0.886	OUT DEF: ^.layer_0.pos.j=^.layer_0.shape.size.i - 2
0.882	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i + ^.size.i,^.size.j + ^.size.j) and color ^.layer_0.shape.color and layers
  _0: a rectangle with size (?,?) and color ^.color and mask ? at (^.layer_0.shape.size.i - 2,^.layer_0.shape.size.i - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))

DL input  with Mi: L = 43.8 + 1388.5 = 1432.3
DL output with Mo: L = 85.4 + 2340.2 = 2425.6
DL input+output M: L = 129.2 + 3728.7 = 3857.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,2) and color cyan and layers
  _0: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
   (36.5 bits)
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color cyan and mask x-cross at (0,0)
diff: 
delta:
   (19.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color cyan and layers
  _0: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color pink and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 46442a0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (0,0)
diff: 
delta:
   (34.6 bits)
data: a background with size (6,6) and color orange and layers
  _0: a rectangle with size (6,6) and color cyan and mask ..xx..|..xx..|xxxxxx|xxxxxx|..xx..|..xx.. at (0,0)
diff: 
delta:
   (54.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (0,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 46442a0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
diff: 
delta: (0,1)=9# (0,2)=9#
   (67.7 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta: (0,1)=9# (0,2)=9# (1,5)=9# (2,5)=9# (3,0)=9# (4,0)=9# (5,3)=9# (5,4)=9#
   (160.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
diff: 
delta: (0,1)=9# (0,2)=9#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (1,1)
diff:   ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (0,1)=9# (0,2)=9#
! 19 wrong pixels (generated / expected)

TRAIN 46442a0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,3) and color yellow and mask Odd Checkboard at (0,0)
diff: 
delta: (0,0)=1  (0,2)=1  (2,1)=1 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color brown and mask Odd Checkboard at (1,0)
diff:   ^.layer_0.pos.i
delta: (0,0)=1  (0,2)=1  (2,1)=1 
! 23 wrong pixels (generated / expected)

TEST 46442a0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 2340.2 bits (2340.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-294] Checking task 469497ad.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7319.8 = 7328.7
DL output with Mo: L = 9.0 + 83930.0 = 83938.9
DL input+output M: L = 17.9 + 91249.7 = 91267.6

# learning a model for train pairs
2.000	
1.681	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.394	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.142	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.977	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.853	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.745	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 3968.0 = 4015.9
DL output with Mo: L = 85.3 + 16423.7 = 16509.0
DL input+output M: L = 133.3 + 20391.7 = 20525.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta:
   (78.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,10) and color green and mask Full at (8,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (2,2)
  _011: a rectangle with size (10,2) and color green and mask Full at (0,8)
  _0111: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,0)
diff: 
delta: (0,7)=2  (1,6)=2  (6,1)=2  (6,6)=2  (7,0)=2  (7,7)=2 
   (267.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta:
! 62 wrong pixels (generated / expected)

TRAIN 469497ad.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta: (0,4)=7# (1,4)=7# (4,0)=7# (4,1)=7#
   (150.5 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (10,9) and color pink and mask ......xxx|......xxx|......xxx|......xxx|......xxx|......xxx|......xxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (5,6)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (3,0)
  _011: a rectangle with size (3,6) and color orange and mask Full at (12,0)
  _0111: a rectangle with size (5,3) and color orange and mask Full at (0,12)
diff: 
delta: (0,8)=2  (1,7)=2  (2,6)=2  (9,6)=2  (10,7)=2  (11,8)=2 
   (378.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta: (0,4)=7# (1,4)=7# (4,0)=7# (4,1)=7#
! size mismatch, 10x10 instead of 15x15

TRAIN 469497ad.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta: (2,4)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=4 
   (168.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (4,4)
  _01: a rectangle with size (4,8) and color brown and mask Full at (16,0)
  _011: a rectangle with size (12,12) and color green and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|........xxxx|........xxxx|........xxxx|........xxxx|xxxxxxxx....|xxxxxxxx....|xxxxxxxx....|xxxxxxxx.... at (8,8)
  _0111: a rectangle with size (8,4) and color brown and mask Full at (0,16)
diff: 
delta: (0,0)=2  (0,15)=2  (1,1)=2  (1,14)=2  (2,2)=2  (2,13)=2  (3,3)=2  (3,12)=2  (12,3)=2  (12,12)=2  (13,2)=2  (13,13)=2  (14,1)=2  (14,14)=2  (15,0)=2  (15,15)=2  (16,16)=4  (16,17)=4  (16,18)=4  (16,19)=4  (17,16)=4  (17,17)=4  (17,18)=4  (17,19)=4  (18,16)=4  (18,17)=4  (18,18)=4  (18,19)=4  (19,16)=4  (19,17)=4  (19,18)=4  (19,19)=4 
   (996.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta: (2,4)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=4 
! size mismatch, 10x10 instead of 20x20

TRAIN 469497ad.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (0,1)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta: (2,4)=1  (3,4)=7# (4,2)=1  (4,3)=7# (4,4)=9#
! size mismatch, 10x10 instead of 25x25

TEST 469497ad.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 16423.7 bits (16423.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-293] Checking task 46f33fce.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3997.9 = 4006.9
DL output with Mo: L = 9.0 + 57972.9 = 57981.9
DL input+output M: L = 17.9 + 61970.8 = 61988.8

# learning a model for train pairs
2.000	
1.730	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.574	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.418	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.261	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.233	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.205	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.175	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.144	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.109	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.106	OUT DEF: ^.layer_0111.shape.color=^.layer_0111.shape.color
1.104	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.095	IN  DEF: ^.size=(?,?)
1.029	IN  DEF: ^.size.i=10
0.964	IN  DEF: ^.size.j=10
0.952	IN  DEF: ^.color=black
0.943	IN  DEF: ^.layer_0.pos=(?,?)
0.909	IN  DEF: ^.layer_0.pos.i=1
0.875	IN  DEF: ^.layer_0.pos.j=1
0.866	IN  DEF: ^.layer_01.pos=(?,?)
0.857	IN  DEF: ^.layer_011.pos=(?,?)
0.848	IN  DEF: ^.layer_0111.pos=(?,?)
0.840	IN  DEF: ^.layer_01111.pos=(?,?)
0.805	IN  DEF: ^.layer_01111.pos.i=9
0.803	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.768	IN  DEF: ^.layer_01111.pos.j=9
0.734	IN  DEF: ^.layer_011.pos.j=3
0.732	OUT DEF: ^.layer_011.shape.color=^.layer_01111.shape.color
0.730	OUT DEF: ^.layer_0.shape.mask=Full
0.729	OUT DEF: ^.layer_01.shape.mask=Full
0.728	OUT DEF: ^.layer_011.shape.mask=Full
0.727	OUT DEF: ^.layer_0111.shape.mask=Full
0.726	OUT DEF: ^.color=black
0.725	OUT DEF: ^.size=(?,?)
0.720	OUT DEF: ^.size.i=20
0.714	OUT DEF: ^.size.j=20
0.714	OUT DEF: ^.layer_0.pos=(?,?)
0.711	OUT DEF: ^.layer_0.pos.i=(0)
0.708	OUT DEF: ^.layer_0.pos.j=(0)
0.707	OUT DEF: ^.layer_0.shape.size=(?,?)
0.704	OUT DEF: ^.layer_0.shape.size.i=4
0.701	OUT DEF: ^.layer_0.shape.size.j=4
0.700	OUT DEF: ^.layer_01.pos=(?,?)
0.697	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.i + 3
0.697	OUT DEF: ^.layer_01.shape.size=(?,?)
0.694	OUT DEF: ^.layer_01.shape.size.i=4
0.690	OUT DEF: ^.layer_01.shape.size.j=4
0.690	OUT DEF: ^.layer_011.pos=(?,?)
0.687	OUT DEF: ^.layer_011.pos.i=16
0.686	OUT DEF: ^.layer_011.shape.size=(?,?)
0.683	OUT DEF: ^.layer_011.shape.size.i=4
0.682	OUT DEF: ^.layer_0111.pos=(?,?)
0.682	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.679	OUT DEF: ^.layer_0111.shape.size.i=4

# Learned model:
CONSTRUCT (Mo)
a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color ^.layer_0.shape.color and mask Full at ((0),(0))
  _01: a rectangle with size (4,4) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.i + 3)
  _011: a rectangle with size (4,?) and color ^.layer_01111.shape.color and mask Full at (16,?)
  _0111: a rectangle with size (4,?) and color ^.layer_0111.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a point with color ? at (1,1)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,3)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (9,9)

DL input  with Mi: L = 114.5 + 1811.1 = 1925.6
DL output with Mo: L = 172.5 + 11309.9 = 11482.4
DL input+output M: L = 287.0 + 13121.0 = 13408.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color green at (5,5)
  _011: a point with color blue at (3,3)
  _0111: a point with color yellow at (3,1)
  _01111: a point with color green at (9,9)
diff: 
delta: (7,7)=4 
   (67.3 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (8,8)
  _011: a rectangle with size (4,4) and color green and mask Full at (16,16)
  _0111: a rectangle with size (4,4) and color yellow and mask Full at (4,0)
diff: 
delta: (4,4)=1  (4,5)=1  (4,6)=1  (4,7)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (6,4)=1  (6,5)=1  (6,6)=1  (6,7)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,7)=1  (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=4  (13,12)=4  (13,13)=4  (13,14)=4  (13,15)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,15)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4 
   (714.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color green at (5,5)
  _01111: a point with color green at (9,9)
diff: 
delta: (7,7)=4 
! 104 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color green at (5,5)
  _011: a point with color blue at (3,3)
  _0111: a point with color yellow at (3,1)
  _01111: a point with color green at (9,9)
diff: 
delta: (7,7)=4 
! 104 wrong pixels (generated / expected)

TRAIN 46f33fce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,9)
diff: 
delta: (9,7)=2 
   (67.3 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,4)
  _011: a rectangle with size (4,8) and color red and mask Full at (16,12)
  _0111: a rectangle with size (4,4) and color cyan and mask Full at (12,16)
diff: 
delta: (4,4)=4  (4,5)=4  (4,6)=4  (4,7)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4 
   (379.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,9)
diff: 
delta: (9,7)=2 
! 72 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color yellow at (3,3)
  _011: a point with color green at (1,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,9)
diff: 
delta: (9,7)=2 
! 96 wrong pixels (generated / expected)

TRAIN 46f33fce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,3)
  _0111: a point with color blue at (9,1)
  _01111: a point with color yellow at (9,9)
diff: 
delta:
   (46.4 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (0,4)
  _011: a rectangle with size (4,4) and color yellow and mask Full at (16,16)
  _0111: a rectangle with size (4,8) and color blue and mask Full at (16,0)
diff: 
delta:
   (37.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,3)
  _0111: a point with color blue at (9,1)
  _01111: a point with color yellow at (9,9)
diff: 
delta:
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color blue at (9,1)
  _011: a point with color red at (1,3)
  _0111: a point with color blue at (9,3)
  _01111: a point with color yellow at (9,9)
diff: 
delta:
! 80 wrong pixels (generated / expected)

TRAIN 46f33fce.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (3,3)
  _01: a point with color blue at (5,5)
  _011: a point with color green at (7,3)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color red at (9,1)
diff:   ^.layer_01111.pos.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta:
! 104 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (5,5)
  _01: a point with color pink at (3,3)
  _011: a point with color green at (7,3)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color red at (9,1)
diff:   ^.layer_01111.pos.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta:
! 104 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (5,5)
  _01: a point with color green at (7,3)
  _011: a point with color pink at (3,3)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color red at (9,1)
diff:   ^.layer_01111.pos.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta:
! 104 wrong pixels (generated / expected)

TEST 46f33fce.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 22.3 sec (22.3 sec/task)
bits-train-error = 11309.9 bits (11309.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-292] Checking task 47c1f68c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12982.1 = 12991.1
DL output with Mo: L = 9.0 + 11054.3 = 11063.3
DL input+output M: L = 17.9 + 24036.4 = 24054.4

# learning a model for train pairs
2.000	
1.538	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.244	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.096	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.985	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.908	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.833	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.752	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 3546.9 = 3613.7
DL output with Mo: L = 85.3 + 5156.1 = 5241.5
DL input+output M: L = 152.1 + 8703.1 = 8855.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color red and mask Full at (5,0)
  _01: a rectangle with size (11,1) and color red and mask Full at (0,5)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xx.|.xx at (1,0)
diff: 
delta:
   (122.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xx.|.xx at (1,0)
  _01: a rectangle with size (3,3) and color red and mask .x.|.xx|xx. at (1,7)
  _011: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (6,0)
  _0111: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (6,7)
diff: 
delta:
   (179.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color red and mask Full at (5,0)
  _01: a rectangle with size (11,1) and color red and mask Full at (0,5)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xx.|.xx at (1,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color green and mask x.x|xx.|x.. at (0,0)
diff: 
delta:
   (118.6 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.. at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,5)
  _011: a rectangle with size (3,3) and color cyan and mask x..|xx.|x.x at (5,0)
  _0111: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.x at (5,5)
diff: 
delta:
   (175.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color green and mask x.x|xx.|x.. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 8x8

TRAIN 47c1f68c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,7) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (7,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color red and mask x..|.xx|.x. at (0,0)
diff: 
delta:
   (113.5 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (6,6) and color yellow and mask x....x|.xxxx.|.x..x.|.x..x.|.xxxx.|x....x at (0,0)
  _0111: a rectangle with size (2,2) and color black and mask Full at (2,2)
diff: 
delta:
   (161.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,7) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (7,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color red and mask x..|.xx|.x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 47c1f68c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color green and mask Full at (6,0)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,6)
  _011: a rectangle with size (5,4) and color cyan and mask ..x.|.x..|x.x.|..x.|..xx at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TEST 47c1f68c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.6 sec (25.6 sec/task)
bits-train-error = 5156.1 bits (5156.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-291] Checking task 484b58aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 371514.0 = 371523.0
DL output with Mo: L = 9.0 + 350417.8 = 350426.8
DL input+output M: L = 17.9 + 721931.8 = 721949.8

# learning a model for train pairs
2.000	
1.781	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.628	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.618	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.609	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 311104.5 = 311152.5
DL output with Mo: L = 48.0 + 270203.2 = 270251.2
DL input+output M: L = 96.0 + 581307.7 = 581403.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (24,24) and color red and mask .......................x|....................x.x.|.....................x..|..................x.x...|...................x....|................x.x.....|.................x......|..............x.x.......|...............x........|............x.x.........|.............x..........|..........x.x...........|...........x............|........x.x.............|.........x..............|......x.x...............|.......x................|....x.x.................|.....x..................|..x.x...................|...x....................|x.x.....................|.x......................|x....................... at (0,0)
  _01: a rectangle with size (18,18) and color red and mask .................x|..............x.x.|...............x..|............x.x...|.............x....|..........x.x...x.|...........x.....x|........x.x...x.x.|.........x.....x..|......x.x...x.x...|.......x.....x....|....x.x...x.x.....|.....x.....x......|..x.x...x.x.......|...x.....x........|x.x...x.x.........|.x.....x..........|x...x.x........... at (0,0)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,19)=4  (0,21)=6  (0,22)=1  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,15)=1  (1,17)=3  (1,18)=4  (1,21)=1  (1,23)=3  (1,24)=4  (1,26)=2  (1,27)=1  (1,28)=2  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,17)=4  (2,19)=6  (2,20)=1  (2,23)=4  (2,25)=6  (2,26)=1  (2,27)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,8)=2  (3,9)=3  (3,10)=4  (3,13)=1  (3,15)=3  (3,16)=4  (3,19)=1  (3,21)=3  (3,22)=4  (3,24)=2  (3,25)=1  (3,26)=2  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,15)=4  (4,17)=6  (4,18)=1  (4,21)=4  (4,23)=6  (4,24)=1  (4,25)=2  (4,27)=4  (5,0)=2  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,11)=1  (5,13)=3  (5,14)=4  (5,17)=1  (5,19)=3  (5,20)=4  (5,22)=2  (5,23)=1  (5,24)=2  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=2  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,13)=4  (6,15)=6  (6,16)=1  (6,19)=4  (6,21)=6  (6,22)=1  (6,23)=2  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,9)=1  (7,11)=3  (7,12)=4  (7,15)=1  (7,17)=3  (7,18)=4  (7,20)=2  (7,21)=1  (7,22)=2  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,11)=4  (8,13)=6  (8,14)=1  (8,17)=4  (8,19)=6  (8,20)=1  (8,21)=2  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=0  (9,5)=0  (9,7)=1  (9,9)=3  (9,10)=4  (9,13)=1  (9,15)=3  (9,16)=4  (9,18)=2  (9,19)=1  (9,20)=2  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,9)=4  (10,11)=6  (10,12)=1  (10,15)=4  (10,17)=6  (10,18)=1  (10,19)=2  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,5)=1  (11,7)=3  (11,8)=4  (11,11)=1  (11,13)=3  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,7)=4  (12,9)=6  (12,10)=1  (12,13)=4  (12,15)=6  (12,16)=1  (12,17)=2  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,3)=1  (13,5)=3  (13,6)=4  (13,9)=1  (13,11)=3  (13,12)=4  (13,14)=2  (13,15)=1  (13,16)=2  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,5)=4  (14,7)=6  (14,8)=1  (14,11)=4  (14,13)=6  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,1)=1  (15,3)=3  (15,4)=4  (15,7)=1  (15,9)=3  (15,10)=4  (15,12)=2  (15,13)=1  (15,14)=2  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,3)=4  (16,5)=6  (16,6)=1  (16,9)=4  (16,11)=6  (16,12)=1  (16,13)=2  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,1)=3  (17,2)=4  (17,5)=1  (17,7)=3  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,7)=4  (18,9)=6  (18,10)=1  (18,11)=2  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,3)=1  (19,5)=3  (19,6)=4  (19,8)=2  (19,9)=1  (19,10)=2  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,5)=4  (20,7)=6  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,1)=1  (21,3)=3  (21,4)=4  (21,6)=2  (21,7)=1  (21,8)=2  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,3)=4  (22,5)=6  (22,6)=1  (22,7)=2  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,1)=3  (23,2)=4  (23,4)=2  (23,5)=1  (23,6)=2  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,5)=2  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,2)=2  (25,3)=1  (25,4)=2  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,3)=2  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,0)=2  (27,1)=1  (27,2)=2  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,1)=2  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
   (13805.7 bits)
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (24,24) and color red and mask .......................x|....................x.x.|.....................x..|..................x.x...|...................x....|................x.x.....|.................x......|..............x.x.......|...............x........|............x.x.........|.............x..........|..........x.x...........|...........x............|........x.x.............|.........x..............|......x.x...............|.......x................|....x.x.................|.....x..................|..x.x...................|...x....................|x.x.....................|.x......................|x....................... at (0,0)
  _01: a rectangle with size (18,18) and color red and mask .................x|..............x.x.|...............x..|............x.x...|.............x....|..........x.x...x.|...........x.....x|........x.x...x.x.|.........x.....x..|......x.x...x.x...|.......x.....x....|....x.x...x.x.....|.....x.....x......|..x.x...x.x.......|...x.....x........|x.x...x.x.........|.x.....x..........|x...x.x........... at (0,0)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,19)=4  (0,21)=6  (0,22)=1  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,15)=1  (1,17)=3  (1,18)=4  (1,21)=1  (1,23)=3  (1,24)=4  (1,26)=2  (1,27)=1  (1,28)=2  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,17)=4  (2,19)=6  (2,20)=1  (2,23)=4  (2,25)=6  (2,26)=1  (2,27)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=2  (3,7)=1  (3,8)=2  (3,9)=3  (3,10)=4  (3,13)=1  (3,15)=3  (3,16)=4  (3,19)=1  (3,21)=3  (3,22)=4  (3,24)=2  (3,25)=1  (3,26)=2  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=1  (4,7)=2  (4,9)=4  (4,11)=6  (4,12)=1  (4,15)=4  (4,17)=6  (4,18)=1  (4,21)=4  (4,23)=6  (4,24)=1  (4,25)=2  (4,27)=4  (5,0)=2  (5,1)=3  (5,2)=4  (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=3  (5,8)=4  (5,11)=1  (5,13)=3  (5,14)=4  (5,17)=1  (5,19)=3  (5,20)=4  (5,22)=2  (5,23)=1  (5,24)=2  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=4  (6,3)=6  (6,4)=1  (6,5)=2  (6,7)=4  (6,9)=6  (6,10)=1  (6,13)=4  (6,15)=6  (6,16)=1  (6,19)=4  (6,21)=6  (6,22)=1  (6,23)=2  (6,25)=4  (6,27)=6  (6,28)=1  (7,0)=4  (7,2)=2  (7,3)=1  (7,4)=2  (7,5)=3  (7,6)=4  (7,9)=1  (7,11)=3  (7,12)=4  (7,15)=1  (7,17)=3  (7,18)=4  (7,20)=2  (7,21)=1  (7,22)=2  (7,23)=3  (7,24)=4  (7,26)=2  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,5)=4  (8,7)=6  (8,8)=1  (8,11)=4  (8,13)=6  (8,14)=1  (8,17)=4  (8,19)=6  (8,20)=1  (8,21)=2  (8,23)=4  (8,25)=6  (8,26)=1  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=4  (9,7)=1  (9,9)=3  (9,10)=4  (9,13)=1  (9,15)=3  (9,16)=4  (9,18)=2  (9,19)=1  (9,20)=2  (9,21)=3  (9,22)=4  (9,24)=2  (9,25)=1  (9,26)=2  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,9)=4  (10,11)=6  (10,12)=1  (10,15)=4  (10,17)=6  (10,18)=1  (10,19)=2  (10,21)=4  (10,23)=6  (10,24)=1  (10,25)=2  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,5)=1  (11,7)=3  (11,8)=4  (11,11)=1  (11,13)=3  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=2  (11,25)=3  (11,26)=4  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,7)=4  (12,9)=6  (12,10)=1  (12,13)=4  (12,15)=6  (12,16)=1  (12,17)=2  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,3)=1  (13,5)=3  (13,6)=4  (13,9)=1  (13,11)=3  (13,12)=4  (13,14)=2  (13,15)=1  (13,16)=2  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,5)=4  (14,7)=6  (14,8)=1  (14,11)=4  (14,13)=6  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,1)=1  (15,3)=3  (15,4)=4  (15,7)=1  (15,9)=3  (15,10)=4  (15,12)=2  (15,13)=1  (15,14)=2  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,3)=4  (16,5)=6  (16,6)=1  (16,9)=4  (16,11)=6  (16,12)=1  (16,13)=2  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,1)=3  (17,2)=4  (17,5)=1  (17,7)=3  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,7)=4  (18,9)=6  (18,10)=1  (18,11)=2  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,3)=1  (19,5)=3  (19,6)=4  (19,8)=2  (19,9)=1  (19,10)=2  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,5)=4  (20,7)=6  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,1)=1  (21,3)=3  (21,4)=4  (21,6)=2  (21,7)=1  (21,8)=2  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=1  (21,14)=2  (21,15)=3  (21,16)=4  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,3)=4  (22,5)=6  (22,6)=1  (22,7)=2  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=2  (22,15)=4  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,1)=3  (23,2)=4  (23,4)=2  (23,5)=1  (23,6)=2  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=3  (23,14)=4  (23,16)=2  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,5)=2  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,2)=2  (25,3)=1  (25,4)=2  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,3)=2  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,0)=2  (27,1)=1  (27,2)=2  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,1)=2  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
   (13454.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (24,24) and color red and mask .......................x|....................x.x.|.....................x..|..................x.x...|...................x....|................x.x.....|.................x......|..............x.x.......|...............x........|............x.x.........|.............x..........|..........x.x...........|...........x............|........x.x.............|.........x..............|......x.x...............|.......x................|....x.x.................|.....x..................|..x.x...................|...x....................|x.x.....................|.x......................|x....................... at (0,0)
  _01: a rectangle with size (18,18) and color red and mask .................x|..............x.x.|...............x..|............x.x...|.............x....|..........x.x...x.|...........x.....x|........x.x...x.x.|.........x.....x..|......x.x...x.x...|.......x.....x....|....x.x...x.x.....|.....x.....x......|..x.x...x.x.......|...x.....x........|x.x...x.x.........|.x.....x..........|x...x.x........... at (0,0)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,19)=4  (0,21)=6  (0,22)=1  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,15)=1  (1,17)=3  (1,18)=4  (1,21)=1  (1,23)=3  (1,24)=4  (1,26)=2  (1,27)=1  (1,28)=2  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,17)=4  (2,19)=6  (2,20)=1  (2,23)=4  (2,25)=6  (2,26)=1  (2,27)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,8)=2  (3,9)=3  (3,10)=4  (3,13)=1  (3,15)=3  (3,16)=4  (3,19)=1  (3,21)=3  (3,22)=4  (3,24)=2  (3,25)=1  (3,26)=2  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,15)=4  (4,17)=6  (4,18)=1  (4,21)=4  (4,23)=6  (4,24)=1  (4,25)=2  (4,27)=4  (5,0)=2  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,11)=1  (5,13)=3  (5,14)=4  (5,17)=1  (5,19)=3  (5,20)=4  (5,22)=2  (5,23)=1  (5,24)=2  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=2  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,13)=4  (6,15)=6  (6,16)=1  (6,19)=4  (6,21)=6  (6,22)=1  (6,23)=2  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,9)=1  (7,11)=3  (7,12)=4  (7,15)=1  (7,17)=3  (7,18)=4  (7,20)=2  (7,21)=1  (7,22)=2  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,11)=4  (8,13)=6  (8,14)=1  (8,17)=4  (8,19)=6  (8,20)=1  (8,21)=2  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=0  (9,5)=0  (9,7)=1  (9,9)=3  (9,10)=4  (9,13)=1  (9,15)=3  (9,16)=4  (9,18)=2  (9,19)=1  (9,20)=2  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,9)=4  (10,11)=6  (10,12)=1  (10,15)=4  (10,17)=6  (10,18)=1  (10,19)=2  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,5)=1  (11,7)=3  (11,8)=4  (11,11)=1  (11,13)=3  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,7)=4  (12,9)=6  (12,10)=1  (12,13)=4  (12,15)=6  (12,16)=1  (12,17)=2  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,3)=1  (13,5)=3  (13,6)=4  (13,9)=1  (13,11)=3  (13,12)=4  (13,14)=2  (13,15)=1  (13,16)=2  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,5)=4  (14,7)=6  (14,8)=1  (14,11)=4  (14,13)=6  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,1)=1  (15,3)=3  (15,4)=4  (15,7)=1  (15,9)=3  (15,10)=4  (15,12)=2  (15,13)=1  (15,14)=2  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,3)=4  (16,5)=6  (16,6)=1  (16,9)=4  (16,11)=6  (16,12)=1  (16,13)=2  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,1)=3  (17,2)=4  (17,5)=1  (17,7)=3  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,7)=4  (18,9)=6  (18,10)=1  (18,11)=2  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,3)=1  (19,5)=3  (19,6)=4  (19,8)=2  (19,9)=1  (19,10)=2  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,5)=4  (20,7)=6  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,1)=1  (21,3)=3  (21,4)=4  (21,6)=2  (21,7)=1  (21,8)=2  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,3)=4  (22,5)=6  (22,6)=1  (22,7)=2  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,1)=3  (23,2)=4  (23,4)=2  (23,5)=1  (23,6)=2  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,5)=2  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,2)=2  (25,3)=1  (25,4)=2  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,3)=2  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,0)=2  (27,1)=1  (27,2)=2  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,1)=2  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
! size mismatch, 10x10 instead of 29x29

TRAIN 484b58aa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (29,29) and color red and mask ........x..x..x.x.x.x....xx..|........x.xx..x..x..x.x.x.x..|.....x...x....x.xx..x..x..x..|......x.x..x...x....x.xx..x..|.......xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x...........x.x|..x.x.x.x....xx............x.|..x..x..x.....x.........x.x..|..x.xx..x.....x.x.x......xx..|...x....x.xx..x..x......x.x..|x.x......x....x.xx.....x..x..|.xx.....x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.....x....xx...x.x..x...x.|..x.....x.x.x.x....xx...x.x..|..x.....x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x...x.x....xx.. at (0,0)
  _01: a rectangle with size (25,1) and color orange and mask Full at (2,11)
diff: 
delta: (0,1)=4  (0,2)=2  (0,3)=1  (0,4)=2  (0,5)=2  (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=7# (1,7)=4  (1,9)=1  (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,13)=4  (2,15)=1  (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (2,28)=2  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,17)=7# (3,19)=4  (3,21)=1  (3,25)=3  (3,27)=7# (3,28)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,3)=0  (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,23)=7# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,1)=4  (7,3)=1  (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,5)=7# (8,7)=4  (8,9)=1  (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,13)=4  (9,15)=1  (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (9,28)=2  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,17)=7# (10,19)=4  (10,21)=1  (10,25)=3  (10,27)=7# (10,28)=1  (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,13)=1  (11,15)=3  (11,16)=3  (11,17)=2  (11,18)=3  (11,19)=0  (11,20)=0  (11,21)=0  (11,22)=0  (11,23)=0  (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,18)=2  (12,19)=0  (12,20)=0  (12,21)=0  (12,22)=0  (12,23)=0  (12,24)=3  (12,25)=7# (12,26)=1  (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=0  (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,17)=7# (13,18)=1  (13,19)=0  (13,20)=0  (13,21)=0  (13,22)=0  (13,23)=0  (13,25)=1  (13,27)=3  (13,28)=3  (14,1)=4  (14,3)=1  (14,7)=3  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,15)=6  (14,17)=1  (14,19)=0  (14,20)=0  (14,21)=0  (14,22)=0  (14,23)=0  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,5)=7# (15,7)=4  (15,9)=1  (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=0  (15,20)=0  (15,21)=0  (15,22)=0  (15,23)=1  (16,1)=1  (16,3)=3  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=7# (16,8)=1  (16,13)=4  (16,15)=1  (16,19)=0  (16,20)=0  (16,21)=0  (16,22)=0  (16,24)=3  (16,25)=6  (16,27)=6  (16,28)=2  (17,0)=1  (17,3)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,17)=7# (17,19)=4  (17,21)=1  (17,25)=3  (17,27)=7# (17,28)=1  (18,4)=0  (18,5)=0  (18,6)=0  (18,9)=4  (18,10)=3  (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,23)=7# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,4)=0  (19,5)=0  (19,6)=0  (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (20,1)=3  (20,3)=7# (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=6  (20,9)=6  (20,11)=1  (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,1)=4  (21,3)=1  (21,4)=0  (21,5)=0  (21,6)=0  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,5)=7# (22,7)=4  (22,9)=1  (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,13)=4  (23,15)=1  (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (23,28)=2  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,17)=7# (24,19)=4  (24,21)=1  (24,25)=3  (24,27)=7# (24,28)=1  (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,23)=7# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,1)=4  (28,3)=1  (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,16)=2  (28,17)=1  (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
   (10860.9 bits)
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (29,29) and color red and mask ..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x...x.x....xx.. at (0,0)
  _01: a rectangle with size (29,1) and color orange and mask Full at (0,23)
diff: 
delta: (0,1)=4  (0,3)=1  (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=3  (1,1)=7# (1,2)=1  (1,5)=7# (1,7)=4  (1,9)=1  (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (2,1)=1  (2,3)=3  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,11)=7# (2,13)=4  (2,15)=1  (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (2,28)=2  (3,0)=1  (3,3)=4  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,17)=7# (3,19)=4  (3,21)=1  (3,25)=3  (3,27)=7# (3,28)=1  (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,25)=1  (6,27)=3  (6,28)=3  (7,1)=4  (7,3)=1  (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,5)=7# (8,7)=4  (8,9)=1  (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,11)=7# (9,13)=4  (9,15)=1  (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (9,28)=2  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,17)=7# (10,19)=4  (10,21)=1  (10,25)=3  (10,27)=7# (10,28)=1  (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,18)=3  (11,19)=7# (11,20)=1  (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,19)=1  (12,21)=3  (12,22)=3  (12,24)=3  (12,25)=7# (12,26)=1  (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=6  (13,11)=1  (13,17)=7# (13,18)=1  (13,21)=4  (13,22)=3  (13,25)=1  (13,27)=3  (13,28)=3  (14,1)=4  (14,3)=1  (14,7)=3  (14,9)=7# (14,10)=1  (14,12)=3  (14,13)=6  (14,15)=6  (14,17)=1  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,5)=7# (15,7)=4  (15,9)=1  (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=6  (15,21)=6  (15,23)=1  (16,1)=1  (16,3)=3  (16,4)=3  (16,6)=3  (16,7)=7# (16,8)=1  (16,11)=7# (16,13)=4  (16,15)=1  (16,19)=3  (16,21)=7# (16,22)=1  (16,24)=3  (16,25)=6  (16,27)=6  (16,28)=2  (17,0)=1  (17,3)=4  (17,4)=3  (17,5)=7# (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,17)=7# (17,19)=4  (17,21)=1  (17,25)=3  (17,27)=7# (17,28)=1  (18,5)=7# (18,6)=1  (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,5)=1  (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (20,1)=3  (20,3)=7# (20,4)=1  (20,6)=3  (20,7)=6  (20,9)=6  (20,11)=1  (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,25)=1  (20,27)=3  (20,28)=3  (21,1)=4  (21,3)=1  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,5)=7# (22,7)=4  (22,9)=1  (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,11)=7# (23,13)=4  (23,15)=1  (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (23,28)=2  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,17)=7# (24,19)=4  (24,21)=1  (24,25)=3  (24,27)=7# (24,28)=1  (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,25)=1  (27,27)=3  (27,28)=3  (28,1)=4  (28,3)=1  (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,16)=2  (28,17)=1  (28,24)=1  (28,27)=4  (28,28)=3 
   (9960.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (29,29) and color red and mask ........x..x..x.x.x.x....xx..|........x.xx..x..x..x.x.x.x..|.....x...x....x.xx..x..x..x..|......x.x..x...x....x.xx..x..|.......xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x...........x.x|..x.x.x.x....xx............x.|..x..x..x.....x.........x.x..|..x.xx..x.....x.x.x......xx..|...x....x.xx..x..x......x.x..|x.x......x....x.xx.....x..x..|.xx.....x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.....x....xx...x.x..x...x.|..x.....x.x.x.x....xx...x.x..|..x.....x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x...x.x....xx.. at (0,0)
  _01: a rectangle with size (25,1) and color orange and mask Full at (2,11)
diff: 
delta: (0,1)=4  (0,2)=2  (0,3)=1  (0,4)=2  (0,5)=2  (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=7# (1,7)=4  (1,9)=1  (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,13)=4  (2,15)=1  (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (2,28)=2  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,17)=7# (3,19)=4  (3,21)=1  (3,25)=3  (3,27)=7# (3,28)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,3)=0  (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,23)=7# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,1)=4  (7,3)=1  (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,5)=7# (8,7)=4  (8,9)=1  (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,13)=4  (9,15)=1  (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (9,28)=2  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,17)=7# (10,19)=4  (10,21)=1  (10,25)=3  (10,27)=7# (10,28)=1  (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,13)=1  (11,15)=3  (11,16)=3  (11,17)=2  (11,18)=3  (11,19)=0  (11,20)=0  (11,21)=0  (11,22)=0  (11,23)=0  (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,18)=2  (12,19)=0  (12,20)=0  (12,21)=0  (12,22)=0  (12,23)=0  (12,24)=3  (12,25)=7# (12,26)=1  (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=0  (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,17)=7# (13,18)=1  (13,19)=0  (13,20)=0  (13,21)=0  (13,22)=0  (13,23)=0  (13,25)=1  (13,27)=3  (13,28)=3  (14,1)=4  (14,3)=1  (14,7)=3  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,15)=6  (14,17)=1  (14,19)=0  (14,20)=0  (14,21)=0  (14,22)=0  (14,23)=0  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,5)=7# (15,7)=4  (15,9)=1  (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=0  (15,20)=0  (15,21)=0  (15,22)=0  (15,23)=1  (16,1)=1  (16,3)=3  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=7# (16,8)=1  (16,13)=4  (16,15)=1  (16,19)=0  (16,20)=0  (16,21)=0  (16,22)=0  (16,24)=3  (16,25)=6  (16,27)=6  (16,28)=2  (17,0)=1  (17,3)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,17)=7# (17,19)=4  (17,21)=1  (17,25)=3  (17,27)=7# (17,28)=1  (18,4)=0  (18,5)=0  (18,6)=0  (18,9)=4  (18,10)=3  (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,23)=7# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,4)=0  (19,5)=0  (19,6)=0  (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (20,1)=3  (20,3)=7# (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=6  (20,9)=6  (20,11)=1  (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,1)=4  (21,3)=1  (21,4)=0  (21,5)=0  (21,6)=0  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,5)=7# (22,7)=4  (22,9)=1  (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,13)=4  (23,15)=1  (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (23,28)=2  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,17)=7# (24,19)=4  (24,21)=1  (24,25)=3  (24,27)=7# (24,28)=1  (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,23)=7# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,1)=4  (28,3)=1  (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,16)=2  (28,17)=1  (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
! size mismatch, 10x10 instead of 29x29

TRAIN 484b58aa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (29,29) and color blue and mask x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.x.....x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x..........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x.x......|.x.x.x.x.x.x.x.x.x.x.x.x.....|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x at (0,0)
  _01: a rectangle with size (1,29) and color red and mask Full at (1,0)
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,1)=8  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (20,28)=1  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (22,28)=1  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (24,28)=1  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
   (6443.8 bits)
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (29,29) and color blue and mask Even Checkboard at (0,0)
  _01: a rectangle with size (1,29) and color red and mask Full at (1,0)
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,7)=4  (4,9)=6  (4,11)=8  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (6,1)=8  (6,5)=4  (6,7)=6  (6,9)=8  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (8,3)=4  (8,5)=6  (8,7)=8  (8,11)=4  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (10,1)=4  (10,3)=6  (10,5)=8  (10,9)=4  (10,11)=6  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=8  (16,27)=4  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,25)=4  (18,27)=6  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,23)=4  (20,25)=6  (20,27)=8  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=4  (22,23)=6  (22,25)=8  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,27)=4  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
   (3605.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (29,29) and color blue and mask x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.x.....x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x..........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x.x......|.x.x.x.x.x.x.x.x.x.x.x.x.....|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x at (0,0)
  _01: a rectangle with size (1,29) and color red and mask Full at (1,0)
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,1)=8  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (20,28)=1  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (22,28)=1  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (24,28)=1  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
! size mismatch, 10x10 instead of 29x29

TRAIN 484b58aa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color blue and layers
  _0: a rectangle with size (23,24) and color red and mask .....................x..|.....................x.x|......................x.|..................xx.x..|....................xx..|.................x.x....|...............x..x.....|...............x.x......|................x.......|............xx.x........|..............xx........|...........x.x..........|.........x..x...........|.........x.x............|..........x.............|......xx.x..............|........xx..............|.....x.x................|...x..x.................|...x.x..................|....x...................|xx.x....................|..xx.................... at (6,5)
  _01: a rectangle with size (12,13) and color red and mask .........xx.x|...........xx|........x.x..|......x..x...|......x.x....|.......x.....|...xx.x.....x|.....xx.....x|..x.x........|x..x.....xx.x|x.x........xx|.x......x.x.. at (0,14)
diff: 
delta: (0,0)=8  (0,2)=2  (0,3)=6  (0,5)=2  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,11)=2  (0,12)=5# (0,14)=2  (0,15)=9# (0,17)=2  (0,18)=8  (0,20)=2  (0,21)=6  (0,27)=3  (1,1)=8  (1,2)=2  (1,4)=5# (1,5)=9# (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=8  (1,11)=9# (1,13)=5# (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=9# (1,19)=8  (1,20)=2  (1,22)=5# (1,23)=9# (1,28)=8  (2,0)=5# (2,1)=3  (2,3)=8  (2,4)=2  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=8  (2,12)=8  (2,13)=9# (2,14)=0  (2,15)=0  (2,16)=0  (2,18)=5# (2,19)=3  (2,21)=8  (2,25)=6  (2,27)=5# (2,28)=8  (3,0)=5# (3,2)=2  (3,3)=9# (3,5)=2  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=2  (3,12)=2  (3,14)=0  (3,15)=0  (3,16)=0  (3,17)=2  (3,18)=5# (3,21)=9# (3,24)=8  (3,26)=2  (3,27)=6  (4,1)=5# (4,2)=2  (4,4)=2  (4,5)=9# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=5# (4,11)=9# (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=9# (4,19)=5# (4,23)=9# (4,25)=8  (4,26)=2  (4,28)=5# (5,0)=8  (5,1)=9# (5,3)=2  (5,4)=5# (5,6)=5# (5,7)=3  (5,9)=8  (5,10)=2  (5,12)=2  (5,13)=6  (5,14)=0  (5,15)=0  (5,16)=0  (5,18)=8  (5,19)=9# (5,22)=5# (5,24)=5# (5,25)=3  (5,27)=8  (5,28)=2  (6,0)=2  (6,2)=2  (6,3)=3  (6,5)=2  (6,6)=5# (6,8)=2  (6,9)=9# (6,11)=2  (6,12)=8  (6,14)=0  (6,15)=0  (6,16)=0  (6,21)=3  (6,23)=2  (6,24)=5# (6,27)=9# (7,1)=2  (7,2)=2  (7,4)=8  (7,5)=9# (7,7)=5# (7,8)=2  (7,10)=2  (7,11)=9# (7,13)=8  (7,14)=0  (7,15)=0  (7,16)=0  (7,17)=9# (7,22)=8  (7,23)=9# (7,25)=5# (8,0)=2  (8,1)=6  (8,3)=5# (8,4)=8  (8,6)=8  (8,7)=9# (8,9)=2  (8,10)=5# (8,12)=5# (8,13)=3  (8,15)=8  (8,19)=6  (8,21)=5# (8,22)=8  (8,24)=8  (8,25)=9# (8,28)=5# (9,0)=8  (9,2)=2  (9,3)=6  (9,5)=2  (9,6)=2  (9,8)=2  (9,9)=3  (9,11)=2  (9,12)=5# (9,15)=9# (9,18)=8  (9,20)=2  (9,21)=6  (9,27)=3  (10,1)=8  (10,2)=2  (10,4)=5# (10,5)=9# (10,7)=2  (10,8)=2  (10,10)=8  (10,11)=9# (10,13)=5# (10,17)=9# (10,19)=8  (10,20)=2  (10,22)=5# (10,23)=9# (10,28)=8  (11,0)=5# (11,1)=3  (11,3)=8  (11,4)=2  (11,6)=2  (11,7)=6  (11,9)=5# (11,10)=8  (11,12)=8  (11,13)=9# (11,16)=5# (11,18)=5# (11,19)=3  (11,21)=8  (11,25)=6  (11,27)=5# (11,28)=8  (12,0)=5# (12,2)=0  (12,3)=0  (12,5)=2  (12,6)=8  (12,8)=2  (12,9)=6  (12,11)=2  (12,12)=2  (12,13)=0  (12,14)=0  (12,15)=0  (12,17)=2  (12,18)=5# (12,21)=9# (12,24)=8  (12,26)=2  (12,27)=6  (13,1)=5# (13,2)=0  (13,3)=0  (13,4)=2  (13,5)=9# (13,7)=8  (13,8)=2  (13,10)=5# (13,11)=9# (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=8  (13,17)=9# (13,19)=5# (13,23)=9# (13,25)=8  (13,26)=2  (13,28)=5# (14,0)=8  (14,1)=9# (14,2)=0  (14,3)=0  (14,4)=5# (14,6)=5# (14,7)=3  (14,9)=8  (14,10)=2  (14,12)=2  (14,13)=6  (14,15)=5# (14,16)=8  (14,18)=8  (14,19)=9# (14,22)=5# (14,24)=5# (14,25)=3  (14,27)=8  (14,28)=2  (15,0)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=2  (15,6)=5# (15,8)=2  (15,9)=9# (15,11)=2  (15,12)=8  (15,14)=2  (15,15)=6  (15,21)=3  (15,23)=2  (15,24)=5# (15,26)=2  (15,27)=9# (16,1)=2  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=9# (16,7)=5# (16,8)=2  (16,10)=2  (16,11)=9# (16,13)=8  (16,14)=2  (16,16)=5# (16,17)=9# (16,22)=8  (16,23)=9# (16,25)=5# (16,26)=2  (16,28)=2  (17,0)=2  (17,1)=6  (17,3)=0  (17,4)=0  (17,6)=8  (17,7)=9# (17,9)=2  (17,10)=5# (17,12)=5# (17,13)=3  (17,15)=8  (17,19)=6  (17,21)=5# (17,22)=8  (17,24)=8  (17,25)=9# (17,27)=2  (17,28)=5# (18,0)=8  (18,2)=2  (18,3)=0  (18,4)=0  (18,5)=2  (18,6)=2  (18,8)=2  (18,9)=3  (18,11)=2  (18,12)=5# (18,15)=9# (18,18)=8  (18,20)=2  (18,21)=6  (18,23)=2  (18,24)=2  (18,26)=2  (18,27)=3  (19,1)=8  (19,2)=2  (19,4)=5# (19,5)=9# (19,7)=2  (19,8)=2  (19,10)=8  (19,11)=9# (19,13)=5# (19,17)=9# (19,19)=8  (19,20)=2  (19,22)=5# (19,23)=9# (19,25)=2  (19,26)=2  (19,28)=8  (20,0)=5# (20,1)=3  (20,3)=8  (20,4)=2  (20,6)=2  (20,7)=6  (20,9)=5# (20,10)=8  (20,12)=8  (20,13)=9# (20,16)=5# (20,18)=5# (20,19)=3  (20,21)=8  (20,22)=2  (20,24)=2  (20,25)=6  (20,27)=5# (20,28)=8  (21,0)=5# (21,2)=2  (21,3)=9# (21,5)=2  (21,6)=8  (21,8)=2  (21,9)=6  (21,15)=3  (21,17)=2  (21,18)=5# (21,20)=2  (21,21)=9# (21,23)=2  (21,24)=8  (21,26)=2  (21,27)=6  (22,1)=5# (22,2)=2  (22,4)=2  (22,5)=9# (22,7)=8  (22,8)=2  (22,10)=5# (22,11)=9# (22,16)=8  (22,17)=9# (22,19)=5# (22,20)=2  (22,22)=2  (22,23)=9# (22,25)=8  (22,26)=2  (22,28)=5# (23,0)=8  (23,1)=9# (23,3)=2  (23,4)=5# (23,6)=5# (23,7)=3  (23,9)=8  (23,13)=6  (23,15)=5# (23,16)=8  (23,18)=8  (23,19)=9# (23,21)=2  (23,22)=5# (23,24)=5# (23,25)=3  (23,27)=8  (23,28)=2  (24,0)=2  (24,2)=2  (24,3)=3  (24,5)=2  (24,6)=5# (24,9)=9# (24,12)=8  (24,14)=2  (24,15)=6  (24,17)=2  (24,18)=2  (24,20)=2  (24,21)=3  (24,23)=2  (24,24)=5# (24,26)=2  (24,27)=9# (25,1)=2  (25,2)=2  (25,4)=8  (25,5)=9# (25,7)=5# (25,11)=9# (25,13)=8  (25,14)=2  (25,16)=5# (25,17)=9# (25,19)=2  (25,20)=2  (25,22)=8  (25,23)=9# (25,25)=5# (25,26)=2  (25,28)=2  (26,0)=2  (26,1)=6  (26,3)=5# (26,4)=8  (26,6)=8  (26,7)=9# (26,10)=5# (26,12)=5# (26,13)=3  (26,15)=8  (26,16)=2  (26,18)=2  (26,19)=6  (26,21)=5# (26,22)=8  (26,24)=8  (26,25)=9# (26,27)=2  (26,28)=5# (27,0)=8  (27,2)=2  (27,3)=6  (27,9)=3  (27,11)=2  (27,12)=5# (27,14)=2  (27,15)=9# (27,17)=2  (27,18)=8  (27,20)=2  (27,21)=6  (27,23)=2  (27,24)=2  (27,26)=2  (27,27)=3  (28,1)=8  (28,2)=2  (28,4)=5# (28,5)=9# (28,10)=8  (28,11)=9# (28,13)=5# (28,14)=2  (28,16)=2  (28,17)=9# (28,19)=8  (28,20)=2  (28,22)=5# (28,23)=9# (28,25)=2  (28,26)=2  (28,28)=8 
! size mismatch, 10x10 instead of 29x29

TEST 484b58aa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.7 sec (29.7 sec/task)
bits-train-error = 270203.2 bits (270203.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-290] Checking task 48d8fb45.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8407.6 = 8416.6
DL output with Mo: L = 9.0 + 2372.5 = 2381.5
DL input+output M: L = 17.9 + 10780.1 = 10798.1

# learning a model for train pairs
2.000	
1.641	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.397	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.073	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.824	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.669	OUT DEF: ^.size=^.layer_0.shape.size
0.609	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.590	OUT DEF: ^.color=black
0.575	OUT DEF: ^.layer_0.pos=(?,?)
0.538	OUT DEF: ^.layer_0.pos.i=(0)
0.502	OUT DEF: ^.layer_0.pos.j=(0)
0.497	IN  DEF: ^.color=black
0.492	IN  DEF: ^.size=(?,?)
0.461	IN  DEF: ^.size.i=10
0.430	IN  DEF: ^.size.j=10
0.426	IN  DEF: ^.layer_0.pos=(?,?)
0.422	IN  DEF: ^.layer_0.shape.size=(?,?)
0.402	IN  DEF: ^.layer_0.shape.size.i=3
0.383	IN  DEF: ^.layer_0.shape.size.j=3
0.379	IN  DEF: ^.layer_01.pos=(?,?)
0.375	IN  DEF: ^.layer_01.shape.size=(?,?)
0.355	IN  DEF: ^.layer_01.shape.size.i=3
0.336	IN  DEF: ^.layer_01.shape.size.j=3
0.332	IN  DEF: ^.layer_011.pos=(?,?)
0.315	IN  DEF: ^.layer_011.pos.j=7
0.311	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at ((0),(0))
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask ? at (?,?)
  _01: a rectangle with size (3,3) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,7)

DL input  with Mi: L = 118.7 + 2416.8 = 2535.5
DL output with Mo: L = 23.9 + 0.0 = 23.9
DL input+output M: L = 142.6 + 2416.8 = 2559.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|xxx|.xx at (7,5)
  _011: a rectangle with size (3,3) and color blue and mask .xx|xx.|.x. at (1,7)
diff: 
delta: (2,3)=5#
   (105.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.xx at (7,5)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (3,2)
  _011: a rectangle with size (3,3) and color blue and mask .xx|xx.|.x. at (1,7)
diff: 
delta: (2,3)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|xxx|.xx at (7,5)
  _011: a rectangle with size (3,3) and color blue and mask .xx|xx.|.x. at (1,7)
diff: 
delta: (2,3)=5#
correct output grid

TRAIN 48d8fb45.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (2,6)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|x.x|.xx at (3,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,7)
diff: 
delta:
   (68.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|.xx at (3,1)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (2,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,7)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (2,6)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|x.x|.xx at (3,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,7)
diff: 
delta:
correct output grid

TRAIN 48d8fb45.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (5,6)
  _01: a rectangle with size (3,3) and color red and mask .xx|x.x|.x. at (2,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,7)
diff: 
delta:
   (68.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x.x|.x. at (2,1)
  _01: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (5,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,7)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (5,6)
  _01: a rectangle with size (3,3) and color red and mask .xx|x.x|.x. at (2,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,7)
diff: 
delta:
correct output grid

TRAIN 48d8fb45.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|.xx at (6,5)
  _01: a rectangle with size (3,3) and color green and mask .x.|xx.|.xx at (1,5)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (4,1)
diff:   ^.layer_011.pos.j
delta: (0,6)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xx.|.xx at (1,5)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|.xx at (6,5)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (4,1)
diff:   ^.layer_011.pos.j
delta: (0,6)=5#
correct output grid

TEST 48d8fb45.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.50
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-289] Checking task 4938f0c2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11330.6 = 11339.6
DL output with Mo: L = 9.0 + 21236.5 = 21245.4
DL input+output M: L = 17.9 + 32567.1 = 32585.0

# learning a model for train pairs
2.000	
1.736	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.551	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.401	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.262	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.122	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.981	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.874	OUT OBJECT at ^.layer_01111: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 6598.0 = 6646.0
DL output with Mo: L = 84.0 + 6028.2 = 6112.2
DL input+output M: L = 132.0 + 12626.2 = 12758.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _01: a rectangle with size (2,2) and color green and mask Full at (7,9)
diff: 
delta:
   (106.9 bits)
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _01: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,11)
  _011: a rectangle with size (4,4) and color red and mask xxxx|x..x|x..x|x..x at (9,5)
  _0111: a rectangle with size (4,4) and color red and mask xxxx|x..x|x..x|x..x at (9,11)
  _01111: a rectangle with size (2,2) and color green and mask Full at (7,9)
diff: 
delta:
   (204.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _01: a rectangle with size (2,2) and color green and mask Full at (7,9)
diff: 
delta:
! size mismatch, 10x10 instead of 20x30
>> Trial 2
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (7,9)
  _01: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
diff: 
delta:
! size mismatch, 10x10 instead of 20x30
>> Trial 3
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (6,5)
  _01: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
diff: 
delta: (7,9)=3  (7,10)=3  (8,9)=3  (8,10)=3 
! size mismatch, 10x10 instead of 20x30

TRAIN 4938f0c2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,4)
diff: 
delta:
   (87.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _01: a rectangle with size (3,3) and color red and mask .xx|x.x|xx. at (0,6)
  _011: a rectangle with size (3,3) and color red and mask .xx|x.x|xx. at (5,1)
  _0111: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (5,6)
  _01111: a rectangle with size (2,2) and color green and mask Full at (3,4)
diff: 
delta:
   (160.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,4)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,4)
diff: 
delta: (0,3)=0  (1,2)=0  (2,1)=0 
! 29 wrong pixels (generated / expected)

TRAIN 4938f0c2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
diff: 
delta: (1,4)=2  (1,7)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
   (465.1 bits)
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask xxx|x..|x.. at (6,2)
  _011: a rectangle with size (3,3) and color red and mask xxx|..x|..x at (6,7)
  _0111: a rectangle with size (2,2) and color green and mask Full at (4,5)
  _01111: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
diff: 
delta: (1,4)=2  (1,7)=2  (8,4)=2  (8,7)=2 
   (237.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
diff: 
delta: (1,4)=2  (1,7)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
! size mismatch, 10x10 instead of 12x14
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask xxx|x..|x.. at (6,2)
diff: 
delta: (1,4)=2  (1,7)=2  (1,9)=2  (2,9)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,7)=2  (6,8)=2  (6,9)=2  (7,9)=2  (8,4)=2  (8,7)=2  (8,9)=2 
! size mismatch, 10x10 instead of 12x14
>> Trial 3
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
  _01: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
diff: 
delta: (1,4)=2  (1,7)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
! size mismatch, 10x10 instead of 12x14

TRAIN 4938f0c2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,14) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|.x..|..x.|..xx at (2,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,6)
diff: 
delta:
! size mismatch, 10x10 instead of 18x14
>> Trial 2
data: a background with size (18,14) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,6)
  _01: a rectangle with size (4,4) and color red and mask xxxx|.x..|..x.|..xx at (2,2)
diff: 
delta:
! size mismatch, 10x10 instead of 18x14
>> Trial 3
data: a background with size (18,14) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,6)
diff: 
delta: (3,3)=2  (4,4)=2  (5,4)=2  (5,5)=2 
! size mismatch, 10x10 instead of 18x14

TEST 4938f0c2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.0 sec (26.0 sec/task)
bits-train-error = 6028.2 bits (6028.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-288] Checking task 496994bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3829.3 = 3838.3
DL output with Mo: L = 9.0 + 7265.7 = 7274.7
DL input+output M: L = 17.9 + 11095.0 = 11112.9

# learning a model for train pairs
2.000	
1.560	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.194	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.879	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.628	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.583	OUT DEF: ^.size=^.size
0.558	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.534	IN  DEF: ^.layer_0.shape.color=red
0.512	OUT DEF: ^.color=^.layer_0.shape.color
0.499	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.486	OUT DEF: ^.layer_0.shape.color=^.color
0.474	IN  DEF: ^.layer_0.shape.mask=Full
0.461	IN  DEF: ^.layer_01.shape.mask=Full
0.453	IN  DEF: ^.color=black
0.447	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.440	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.435	IN  DEF: ^.size=(?,?)
0.389	IN  DEF: ^.size.i=10
0.384	IN  DEF: ^.layer_0.pos=(?,?)
0.360	IN  DEF: ^.layer_0.pos.i=(0)
0.343	IN  DEF: ^.layer_0.pos.j=(0)
0.337	IN  DEF: ^.layer_0.shape.size=(?,?)
0.331	IN  DEF: ^.layer_01.pos=(?,?)
0.314	IN  DEF: ^.layer_01.pos.j=(0)
0.309	IN  DEF: ^.layer_01.shape.size=(?,?)
0.296	IN  DEF: ^.layer_01.shape.size.i=1
0.293	OUT DEF: ^.layer_0.pos=(?,?)
0.282	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i + 1
0.273	OUT DEF: ^.layer_0.pos.j=(0)
0.270	OUT DEF: ^.layer_0.shape.size=(?,?)
0.253	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j + 1
0.236	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.233	OUT DEF: ^.layer_01.shape.size=(?,?)
0.213	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.j + 3
0.196	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.j + 1,^.layer_0.shape.size.j) and color ^.color and mask ^.layer_0.shape.mask at (^.layer_01.pos.i + 1,(0))
  _01: a rectangle with size (^.layer_01.shape.size.j + 3,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (10,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at ((0),(0))
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,(0))

DL input  with Mi: L = 74.8 + 625.9 = 700.7
DL output with Mo: L = 95.9 + 0.0 = 95.9
DL input+output M: L = 170.7 + 625.9 = 796.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
   (30.1 bits)
data: a background with size (10,3) and color red and layers
  _0: a rectangle with size (4,3) and color black and mask Full at (3,0)
  _01: a rectangle with size (6,3) and color green and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
correct output grid

TRAIN 496994bd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (1,0)
diff: 
delta:
   (32.5 bits)
data: a background with size (10,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask Full at (2,0)
  _01: a rectangle with size (8,5) and color cyan and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN 496994bd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,6) and color grey and mask Full at (1,0)
diff:   ^.layer_01.shape.size.i  ^.layer_0.shape.color
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,6) and color black and layers
  _0: a rectangle with size (2,6) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,6) and color green and mask Full at (0,0)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta:
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,6) and color grey and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (0,0)
  _01: a rectangle with size (7,6) and color black and mask Full at (3,0)
diff:   ^.color  ^.layer_01.shape.size.i  ^.layer_0.shape.color
delta:
! 36 wrong pixels (generated / expected)

TEST 496994bd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-287] Checking task 49d1d64f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2507.4 = 2516.3
DL output with Mo: L = 9.0 + 7826.2 = 7835.1
DL input+output M: L = 17.9 + 10333.5 = 10351.4

# learning a model for train pairs
2.000	
1.912	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.823	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.777	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.722	IN  DEF: ^.layer_0.shape.color=blue
1.672	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.615	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.576	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.499	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.481	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
1.460	OUT DEF: ^.layer_01.shape.mask=.x|xx
1.443	OUT DEF: ^.layer_0.shape.color=^.color
1.425	OUT DEF: ^.layer_0111.shape.color=^.layer_01.shape.color
1.421	OUT DEF: ^.size=(?,?)
1.396	OUT DEF: ^.size.j=^.size.j + 2
1.372	OUT DEF: ^.size.i=^.size.i + 2
1.349	OUT DEF: ^.layer_0111.shape.mask=x.|xx
1.297	IN  DEF: ^.layer_011.shape.color=green
1.283	IN  DEF: ^.size=(?,?)
1.269	IN  DEF: ^.layer_0.pos=(?,?)
1.239	IN  DEF: ^.layer_0.pos.i=(0)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i + 2,^.size.j + 2) and color ? and layers
  _0: a rectangle with size ? and color ^.color and mask ? at ?
  _01: a rectangle with size ? and color ? and mask .x|xx at ?
  _011: a rectangle with size ? and color ^.layer_011.shape.color and mask ? at ?
  _0111: a rectangle with size ? and color ^.layer_01.shape.color and mask x.|xx at ?
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color blue at ((0),?)
  _01: a point with color ? at ?
  _011: a point with color green at ?

DL input  with Mi: L = 59.3 + 1649.8 = 1709.1
DL output with Mo: L = 116.1 + 4270.0 = 4386.1
DL input+output M: L = 175.3 + 5919.8 = 6095.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,2) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color green at (1,0)
diff: 
delta:
   (35.5 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _01: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _011: a rectangle with size (2,2) and color green and mask xx|.x at (2,0)
  _0111: a rectangle with size (2,2) and color red and mask x.|xx at (0,2)
diff: 
delta:
   (91.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color green at (1,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color red and layers
  _0: a point with color blue at (0,0)
  _01: a point with color cyan at (1,1)
  _011: a point with color green at (1,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,2) and color green and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color cyan at (1,1)
diff:   ^.layer_011.shape.color
delta:
! 13 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (1,1)
diff: 
delta:
   (38.4 bits)
data: a background with size (4,5) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask ..x..|..x..|xx.xx|.x.x. at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _011: a rectangle with size (2,1) and color green and mask Full at (2,2)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,3)
diff: 
delta:
   (107.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (1,1)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (2,0)
diff: 
delta: (1,0)=8  (1,1)=0  (2,2)=8 
   (91.0 bits)
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x..|x.. at (2,2)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _011: a rectangle with size (2,2) and color green and mask Full at (3,0)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,3)
diff: 
delta: (0,0)=0  (0,2)=1  (0,4)=0  (1,2)=1  (2,2)=0  (4,0)=0  (4,4)=0 
   (227.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (2,0)
diff: 
delta: (1,0)=8  (1,1)=0  (2,2)=8 
! 18 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color yellow and layers
  _0: a point with color blue at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color green at (2,0)
diff:   ^.layer_0.pos.i
delta: (0,1)=8 
! 17 wrong pixels (generated / expected)

TEST 49d1d64f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 4270.0 bits (4270.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-286] Checking task 4be741c5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 45722.3 = 45731.3
DL output with Mo: L = 9.0 + 1605.9 = 1614.9
DL input+output M: L = 17.9 + 47328.2 = 47346.1

# learning a model for train pairs
2.000	
1.497	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.189	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.110	OUT OBJECT at ^.layer_0: a point with color ? at ?
0.962	OUT DEF: ^.color=^.color
0.876	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.829	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.807	OUT DEF: ^.size=(?,?)
0.785	OUT DEF: ^.layer_0.pos=(?,?)
0.747	OUT DEF: ^.layer_0.pos.i=^.layer_011.shape.size.i - 2
0.745	IN  DEF: ^.layer_011.shape.mask=Full
0.691	OUT DEF: ^.size.j=^.layer_01.shape.size.j - ^.layer_011.pos.i
0.691	IN  DEF: ^.size=(?,?)
0.690	IN  DEF: ^.layer_01.pos=(?,?)
0.687	IN  DEF: ^.layer_01.pos.j=(0)
0.686	IN  DEF: ^.layer_0.pos=(?,?)
0.685	IN  DEF: ^.layer_0.shape.size=(?,?)
0.685	IN  DEF: ^.layer_01.shape.size=(?,?)
0.684	IN  DEF: ^.layer_011.pos=(?,?)
0.683	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.layer_01.shape.size.j - ^.layer_011.pos.i) and color ^.color and layers
  _0: a point with color ^.layer_0.shape.color at (^.layer_011.shape.size.i - 2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,(0))
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 98.8 + 5956.7 = 6055.4
DL output with Mo: L = 58.8 + 830.4 = 889.2
DL input+output M: L = 157.6 + 6787.1 = 6944.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,16) and color cyan and layers
  _0: a rectangle with size (14,10) and color red and mask ...xxxxxxx|....xxxx..|....xxxx..|...xxxxx..|..xxxxxxx.|..xxxxxx..|...xxxxx..|...xxxxxx.|.xxxxxxxxx|.xxxxxxxxx|xxxxxxxxx.|xxxxxxxx..|.xxxxxxx..|..xxxxxxx. at (0,4)
  _01: a rectangle with size (14,8) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,4) and color cyan and mask Full at (5,12)
diff: 
delta:
   (261.4 bits)
data: a background with size (1,3) and color cyan and layers
  _0: a point with color red at (0,1)
diff: 
delta: (0,0)=4 
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color cyan and layers
  _0: a rectangle with size (14,10) and color red and mask ...xxxxxxx|....xxxx..|....xxxx..|...xxxxx..|..xxxxxxx.|..xxxxxx..|...xxxxx..|...xxxxxx.|.xxxxxxxxx|.xxxxxxxxx|xxxxxxxxx.|xxxxxxxx..|.xxxxxxx..|..xxxxxxx. at (0,4)
  _01: a rectangle with size (14,8) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,4) and color cyan and mask Full at (5,12)
diff: 
delta:
! size mismatch, 10x3 instead of 1x3
>> Trial 2
data: a background with size (14,16) and color cyan and layers
  _0: a rectangle with size (14,10) and color red and mask ...xxxxxxx|....xxxx..|....xxxx..|...xxxxx..|..xxxxxxx.|..xxxxxx..|...xxxxx..|...xxxxxx.|.xxxxxxxxx|.xxxxxxxxx|xxxxxxxxx.|xxxxxxxx..|.xxxxxxx..|..xxxxxxx. at (0,4)
  _01: a rectangle with size (14,8) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (3,4) and color cyan and mask Full at (1,12)
diff: 
delta:
! size mismatch, 10x7 instead of 1x3

TRAIN 4be741c5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,7) and color grey and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _01: a rectangle with size (4,7) and color red and mask Full at (0,0)
  _011: a rectangle with size (3,2) and color grey and mask Full at (6,3)
diff: 
delta:
   (139.6 bits)
data: a background with size (3,1) and color grey and layers
  _0: a point with color cyan at (1,0)
diff: 
delta: (0,0)=2 
   (22.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,7) and color grey and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _01: a rectangle with size (4,7) and color red and mask Full at (0,0)
  _011: a rectangle with size (3,2) and color grey and mask Full at (6,3)
diff: 
delta:
! size mismatch, 10x1 instead of 3x1
>> Trial 2
data: a background with size (9,7) and color grey and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _01: a rectangle with size (4,7) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,5) and color grey and mask Full at (7,2)
diff: 
delta:
! size mismatch, 10x0 instead of 3x1

TRAIN 4be741c5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,9) and color pink and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..xx.....|.xxx.x.xx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx..x at (1,0)
  _01: a rectangle with size (3,9) and color red and mask xxxxxxxxx|xxxxxxxxx|x.xxxxx.. at (6,0)
  _011: a rectangle with size (3,9) and color green and mask Full at (8,0)
diff: 
delta:
   (194.7 bits)
data: a background with size (4,1) and color pink and layers
  _0: a point with color yellow at (1,0)
diff: 
delta: (2,0)=2  (3,0)=3 
   (39.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color red and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..xx.....|.xxx.x.xx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx..x at (1,0)
  _01: a rectangle with size (3,9) and color green and mask .x.....xx|xxxxxxxxx|xxxxxxxxx at (8,0)
  _011: a rectangle with size (3,9) and color pink and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x9 instead of 4x1
>> Trial 2
data: a background with size (11,9) and color pink and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..xx.....|.xxx.x.xx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx..x at (1,0)
  _01: a rectangle with size (3,9) and color green and mask .x.....xx|xxxxxxxxx|xxxxxxxxx at (8,0)
  _011: a rectangle with size (3,9) and color red and mask Full at (6,0)
diff: 
delta:
! size mismatch, 10x3 instead of 4x1
>> Trial 3
data: a background with size (11,9) and color pink and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..xx.....|.xxx.x.xx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx..x at (1,0)
  _01: a rectangle with size (3,9) and color red and mask xxxxxxxxx|xxxxxxxxx|x.xxxxx.. at (6,0)
  _011: a rectangle with size (3,9) and color green and mask Full at (8,0)
diff: 
delta:
! size mismatch, 10x1 instead of 4x1

TRAIN 4be741c5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color blue and layers
  _0: a rectangle with size (14,6) and color red and mask .xxxxx|xxxxx.|..xx..|..xx..|.xxxxx|..xxxx|xxxxx.|.xxxx.|.xxxx.|xxxxxx|xxxxxx|.xxxx.|..xxx.|...xxx at (0,3)
  _01: a rectangle with size (14,6) and color green and mask Full at (0,0)
  _011: a rectangle with size (14,4) and color cyan and mask ..xx|.xxx|xxxx|.xxx|..xx|...x|..xx|.xxx|..xx|..xx|.xxx|..xx|..xx|..xx at (0,10)
diff:   ^.layer_011.shape.mask
delta:
! size mismatch, 10x6 instead of 1x4
>> Trial 2
data: a background with size (14,14) and color red and layers
  _0: a rectangle with size (14,6) and color blue and mask ..xxx.|.xxx..|xxx...|xxxx..|..xxx.|..xxxx|.xxxx.|.xxx..|.xxxx.|..xxx.|..xx..|.xxxx.|.xxxx.|..xxx. at (0,7)
  _01: a rectangle with size (14,6) and color green and mask xxxx..|xxx...|xxxxx.|xxxxx.|xxxx..|xxxxx.|xxx...|xxxx..|xxxx..|xxx...|xxx...|xxxx..|xxxxx.|xxxxxx at (0,0)
  _011: a rectangle with size (14,4) and color cyan and mask Full at (0,10)
diff: 
delta:
! size mismatch, 10x6 instead of 1x4
>> Trial 3
data: a background with size (14,14) and color cyan and layers
  _0: a rectangle with size (14,6) and color blue and mask ..xxx.|.xxx..|xxx...|xxxx..|..xxx.|..xxxx|.xxxx.|.xxx..|.xxxx.|..xxx.|..xx..|.xxxx.|.xxxx.|..xxx. at (0,7)
  _01: a rectangle with size (14,6) and color green and mask xxxx..|xxx...|xxxxx.|xxxxx.|xxxx..|xxxxx.|xxx...|xxxx..|xxxx..|xxx...|xxx...|xxxx..|xxxxx.|xxxxxx at (0,0)
  _011: a rectangle with size (14,6) and color red and mask Full at (0,3)
diff: 
delta:
! size mismatch, 10x6 instead of 1x4

TEST 4be741c5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 830.4 bits (830.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-285] Checking task 4c4377d9.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4054.1 = 4063.1
DL output with Mo: L = 9.0 + 7592.7 = 7601.6
DL input+output M: L = 17.9 + 11646.8 = 11664.7

# learning a model for train pairs
2.000	
1.389	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.973	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.931	OUT DEF: ^.color=^.color
0.906	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.894	IN  DEF: ^.layer_0.pos=(?,?)
0.862	IN  DEF: ^.layer_0.pos.j=(0)
0.833	IN  DEF: ^.layer_0.pos.i=(0)
0.821	IN  DEF: ^.size=(?,?)
0.760	IN  DEF: ^.size.j=4
0.706	IN  DEF: ^.size.i=3
0.694	IN  DEF: ^.layer_0.shape.size=(?,?)
0.679	IN  DEF: ^.layer_0.shape.size.i=3
0.634	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.627	OUT DEF: ^.size=(?,?)
0.589	OUT DEF: ^.size.i=6
0.555	OUT DEF: ^.size.j=^.size.j
0.549	OUT DEF: ^.layer_0.shape.size=(?,?)
0.510	OUT DEF: ^.layer_0.shape.size.i=6
0.478	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size (6,^.size.j) and color ^.color and layers
  _0: a rectangle with size (6,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (3,4) and color ? and layers
  _0: a rectangle with size (3,?) and color ? and mask ? at ((0),(0))

DL input  with Mi: L = 51.2 + 1321.3 = 1372.5
DL output with Mo: L = 45.1 + 1022.4 = 1067.5
DL input+output M: L = 96.3 + 2343.7 = 2440.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xx.|.x. at (0,0)
diff: 
delta:
   (30.2 bits)
data: a background with size (6,4) and color brown and layers
  _0: a rectangle with size (6,3) and color grey and mask .x.|xx.|..x|..x|xx.|.x. at (0,0)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xx.|.x. at (0,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color grey and layers
  _0: a rectangle with size (3,4) and color brown and mask xx.x|..xx|..xx at (0,0)
diff: 
delta: (2,0)=9#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (0,2)=5# (2,1)=5#
! 8 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (3,4) and color blue and mask .xx.|xxxx|...x at (0,0)
diff: 
delta:
   (34.0 bits)
data: a background with size (6,4) and color yellow and layers
  _0: a rectangle with size (6,4) and color blue and mask ...x|xxxx|.xx.|.xx.|xxxx|...x at (0,0)
diff: 
delta:
   (27.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (3,4) and color blue and mask .xx.|xxxx|...x at (0,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color blue and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (2,0)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (0,0)=4  (0,3)=4 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (1,0)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (0,1)=1  (0,2)=1  (2,3)=1 
! 8 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,4) and color yellow and mask .x.x|..xx|xxxx at (0,0)
diff: 
delta:
   (34.0 bits)
data: a background with size (6,4) and color brown and layers
  _0: a rectangle with size (6,4) and color yellow and mask xxxx|..xx|.x.x|.x.x|..xx|xxxx at (0,0)
diff: 
delta:
   (27.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,4) and color yellow and mask .x.x|..xx|xxxx at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,0)
diff:   ^.layer_0.shape.size.i
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (2,1) and color brown and mask Full at (0,0)
diff:   ^.layer_0.shape.size.i
delta: (0,2)=9# (1,1)=9#
! 6 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (3,4) and color grey and mask ..xx|.xx.|xx.. at (0,0)
diff: 
delta:
   (34.0 bits)
data: a background with size (6,4) and color green and layers
  _0: a rectangle with size (6,4) and color grey and mask xx..|.xx.|..xx|..xx|.xx.|xx.. at (0,0)
diff: 
delta:
   (27.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (3,4) and color grey and mask ..xx|.xx.|xx.. at (0,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color grey and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (0,0)
diff:   ^.layer_0.shape.size.i
delta: (1,3)=3  (2,2)=3  (2,3)=3 
! 12 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,4) and color yellow and mask xx..|xxxx|xx.. at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (0,0)
diff: 
delta: (1,2)=4  (1,3)=4 
! 4 wrong pixels (generated / expected)

TEST 4c4377d9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 1022.4 bits (1022.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-284] Checking task 4c5c2cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8200.7 = 8209.6
DL output with Mo: L = 9.0 + 21330.0 = 21339.0
DL input+output M: L = 17.9 + 29530.6 = 29548.6

# learning a model for train pairs
2.000	
1.626	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.384	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.196	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.054	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.914	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.773	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.646	OUT OBJECT at ^.layer_01111: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 3106.0 = 3154.0
DL output with Mo: L = 84.0 + 5510.3 = 5594.3
DL input+output M: L = 132.0 + 8616.3 = 8748.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask x-cross at (7,6)
diff: 
delta:
   (111.7 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _01: a rectangle with size (5,4) and color red and mask x..x|x.xx|xx..|.xx.|...x at (3,8)
  _011: a rectangle with size (5,4) and color red and mask x...|.xx.|..xx|xx.x|x..x at (9,3)
  _0111: a rectangle with size (5,4) and color red and mask ...x|.xx.|xx..|x.xx|x..x at (9,8)
  _01111: a rectangle with size (3,3) and color yellow and mask x-cross at (7,6)
diff: 
delta:
   (207.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask x-cross at (7,6)
diff: 
delta:
! size mismatch, 10x10 instead of 14x14
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x-cross at (7,6)
  _01: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x..x at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 14x14

TRAIN 4c5c2cf0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _01: a rectangle with size (3,3) and color green and mask x-cross at (6,4)
diff: 
delta:
   (102.2 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _01: a rectangle with size (3,4) and color cyan and mask .x..|xxx.|.xxx at (3,1)
  _011: a rectangle with size (3,4) and color cyan and mask .xxx|xxx.|.x.. at (9,1)
  _0111: a rectangle with size (3,4) and color cyan and mask xxx.|.xxx|..x. at (9,6)
  _01111: a rectangle with size (3,3) and color green and mask x-cross at (6,4)
diff: 
delta:
   (179.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _01: a rectangle with size (3,3) and color green and mask x-cross at (6,4)
diff: 
delta:
! size mismatch, 10x10 instead of 14x14
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x-cross at (6,4)
  _01: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
diff: 
delta:
! size mismatch, 10x10 instead of 14x14

TRAIN 4c5c2cf0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (6,4)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
diff: 
delta:
   (96.6 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (6,4)
  _01: a rectangle with size (3,3) and color blue and mask .x.|x.x|.xx at (3,1)
  _011: a rectangle with size (3,3) and color blue and mask .x.|x.x|xx. at (3,7)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|x.x|.x. at (9,7)
  _01111: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
diff: 
delta:
   (164.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x-cross at (6,4)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask x-cross at (6,4)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TRAIN 4c5c2cf0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask ..x.|xx.x|.x..|.xx.|x...|x... at (8,7)
  _01: a rectangle with size (3,3) and color orange and mask x-cross at (6,5)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x-cross at (6,5)
  _01: a rectangle with size (6,4) and color yellow and mask x.x.|xx.x|.x..|.xx.|x...|x... at (8,7)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TEST 4c5c2cf0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.6 sec (27.6 sec/task)
bits-train-error = 5510.3 bits (5510.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-283] Checking task 50846271.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 125767.2 = 125776.2
DL output with Mo: L = 9.0 + 130143.1 = 130152.1
DL input+output M: L = 17.9 + 255910.3 = 255928.3

# learning a model for train pairs
2.000	
1.283	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.730	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.667	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.629	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 35584.9 = 35613.8
DL output with Mo: L = 66.8 + 44984.3 = 45051.1
DL input+output M: L = 95.7 + 80569.3 = 80664.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
diff: 
delta: (0,10)=5# (0,11)=5# (0,12)=5# (0,13)=5# (0,14)=5# (0,15)=5# (0,18)=5# (1,10)=5# (1,12)=5# (1,14)=5# (1,17)=5# (2,10)=5# (2,11)=5# (2,12)=2  (3,12)=2  (3,13)=5# (3,14)=5# (3,15)=5# (4,12)=2  (4,13)=5# (4,14)=5# (5,1)=5# (5,9)=2  (5,11)=2  (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=2  (6,1)=5# (6,2)=5# (6,12)=2  (6,13)=5# (7,12)=2  (7,13)=5# (8,12)=2  (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
   (1614.2 bits)
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (19,16) and color grey and mask ..............xx|..............x.|...........xxx..|...........x.xx.|..........x.x...|..........x..xxx|.........xx.x...|.............x..|.............x..|..........xxx.xx|..........xx..xx|...........xx...|.......x..xx....|......xx.x..x...|x.x..x..xxx.....|.xx.x..x..xxx...|x...x...xx...xxx|.xxxx..xx.x...xx|.......x.x.x...x at (1,6)
  _01: a rectangle with size (9,10) and color grey and mask .......x..|.x..xxxx..|x.xx.xxx..|x..xx...x.|.....x...x|....x...x.|....x.....|.....x....|......x... at (0,0)
  _011: a rectangle with size (8,7) and color grey and mask .....x.|x...xx.|.x.x...|....xx.|xxxxx..|...x.xx|.xxx..x|.xx.... at (6,5)
diff: 
delta: (0,10)=5# (0,11)=5# (0,12)=5# (0,13)=5# (0,14)=5# (0,15)=5# (0,18)=5# (1,10)=5# (1,12)=5# (1,14)=5# (1,17)=5# (2,10)=5# (2,11)=5# (2,12)=2  (3,12)=2  (3,13)=5# (3,14)=5# (3,15)=5# (4,12)=2  (4,13)=5# (4,14)=5# (5,1)=5# (5,9)=2  (5,10)=8  (5,11)=2  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=2  (6,1)=5# (6,2)=5# (6,12)=2  (6,13)=5# (7,12)=2  (7,13)=5# (8,0)=5# (8,12)=2  (8,21)=5# (9,0)=5# (9,3)=5# (9,12)=5# (9,13)=5# (10,1)=5# (10,3)=5# (10,14)=5# (11,1)=5# (11,2)=5# (11,5)=8  (11,13)=5# (11,14)=5# (12,2)=5# (12,3)=5# (12,5)=2  (13,0)=5# (13,2)=5# (13,5)=8  (13,21)=5# (14,2)=2  (14,3)=8  (14,4)=8  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (15,1)=5# (15,2)=5# (15,5)=8  (16,0)=5# (16,4)=5# (16,5)=2  (17,2)=5# (17,3)=5# (17,5)=2  (18,1)=5# (18,2)=5# (18,3)=5#
   (2227.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
diff: 
delta: (0,10)=5# (0,11)=5# (0,12)=5# (0,13)=5# (0,14)=5# (0,15)=5# (0,18)=5# (1,10)=5# (1,12)=5# (1,14)=5# (1,17)=5# (2,10)=5# (2,11)=5# (2,12)=2  (3,12)=2  (3,13)=5# (3,14)=5# (3,15)=5# (4,12)=2  (4,13)=5# (4,14)=5# (5,1)=5# (5,9)=2  (5,11)=2  (5,12)=5# (5,13)=5# (5,14)=5# (5,15)=2  (6,1)=5# (6,2)=5# (6,12)=2  (6,13)=5# (7,12)=2  (7,13)=5# (8,12)=2  (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
! size mismatch, 10x10 instead of 20x22

TRAIN 50846271.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
diff: 
delta: (3,6)=2  (4,4)=2  (4,6)=2  (4,7)=2  (4,8)=2  (5,6)=2  (8,0)=5# (9,0)=5# (10,0)=5# (10,12)=2  (10,14)=2  (10,15)=2  (10,16)=2  (15,7)=2  (15,8)=2  (16,7)=2 
   (810.8 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx..x.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x......xx.x.xx...|xx..xx.xxx.x..xx....|..xx...x..xx..x.....|...x.x.xxx.xxx......|....x..xxxx.xx......|...x.xxx.xx.x.......|..xx.xxxxx.x........|..x......xxx........|..x..x.xx.xxxx......|xx..xx....xxx.......|xx...xx..xx.xxxx..xx|..x.x.....x..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.x..xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (7,5) and color grey and mask ..x.x|.xx.x|..x.x|xxxxx|....x|..x.x|xxxx. at (6,15)
  _011: a rectangle with size (3,3) and color red and mask xx.|xxx|xxx at (3,6)
diff: 
delta: (2,6)=8  (4,4)=2  (4,5)=8  (6,6)=8  (8,0)=5# (8,14)=8  (9,0)=5# (9,14)=8  (10,0)=5# (10,12)=2  (10,13)=8  (10,14)=2  (10,15)=2  (10,16)=2  (11,14)=8  (12,14)=8  (13,7)=8  (14,7)=8  (15,5)=8  (15,6)=8  (15,7)=2  (15,8)=2  (15,9)=8  (16,7)=2  (17,7)=8 
   (1113.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
diff: 
delta: (3,6)=2  (4,4)=2  (4,6)=2  (4,7)=2  (4,8)=2  (5,6)=2  (8,0)=5# (9,0)=5# (10,0)=5# (10,12)=2  (10,14)=2  (10,15)=2  (10,16)=2  (15,7)=2  (15,8)=2  (16,7)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN 50846271.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
diff: 
delta: (5,11)=2  (6,9)=2  (6,10)=2  (6,12)=2  (6,13)=2  (8,11)=2  (9,1)=2  (9,2)=2  (10,1)=2  (11,1)=2  (13,18)=5#
   (643.7 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xx.x...x..|x.....x.x.x.x..x.xx|x.x..xx.x.....xx.x.|...xxxxx.x..xxx.xxx|..x.xxxx..x.xxx....|......x..xxxxxxxx..|..xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (2,5) and color red and mask .xxx.|xx.xx at (5,9)
  _011: a rectangle with size (3,2) and color red and mask Full at (9,1)
diff: 
delta: (4,11)=8  (6,11)=8  (7,1)=8  (7,11)=8  (8,0)=5# (8,1)=8  (8,11)=2  (9,0)=8  (9,3)=8  (10,0)=5# (13,18)=5#
   (716.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
diff: 
delta: (5,11)=2  (6,9)=2  (6,10)=2  (6,12)=2  (6,13)=2  (8,11)=2  (9,1)=2  (9,2)=2  (10,1)=2  (11,1)=2  (13,18)=5#
! size mismatch, 10x10 instead of 18x19

TRAIN 50846271.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
diff: 
delta: (0,6)=5# (0,11)=5# (1,8)=5# (1,11)=5# (2,8)=2  (2,10)=5# (3,8)=2  (3,9)=5# (3,11)=5# (4,6)=2  (4,8)=2  (4,9)=2  (4,10)=2  (5,8)=2  (5,11)=5#
   (489.7 bits)
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx......|xxx.xx......|xxx.x.......|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (4,3) and color red and mask x..|x..|xxx|x.. at (2,8)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
diff: 
delta: (0,6)=5# (1,8)=5# (4,6)=2  (4,7)=8  (5,7)=5# (5,11)=5# (6,7)=5# (6,8)=8 
   (440.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
diff: 
delta: (0,6)=5# (0,11)=5# (1,8)=5# (1,11)=5# (2,8)=2  (2,10)=5# (3,8)=2  (3,9)=5# (3,11)=5# (4,6)=2  (4,8)=2  (4,9)=2  (4,10)=2  (5,8)=2  (5,11)=5#
! size mismatch, 10x10 instead of 11x12

TRAIN 50846271.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (19,22) and color grey and mask .............x.....xx.|............xx.....xxx|...........xx..xx..xxx|...........x.x.xx.xxx.|............x.xxx..xx.|...........x....xxxx..|xx...........x...xxxxx|x..........xxx.x..x.x.|xxxxx..xx.x.x.xx..xxx.|...xxx..x...xx.xxx....|...xxx.x.x.xx.x.x..xx.|.xxx...xxxx..x.xx...xx|xx..xxx..xx.x.xx..xx.x|..xxxxxxxx..xxxxx..x.x|xx.xx...xxx.xxx.x..xx.|x...x.x.x.x.xxxx....xx|xxx....xx.......x.x.xx|x.x..x.x.......xxx.xx.|xxxxx.x.xxxx....xx.x.x at (0,0)
diff: 
delta: (0,1)=5# (0,3)=5# (0,6)=5# (0,7)=5# (0,9)=5# (0,15)=5# (1,1)=5# (1,3)=5# (1,4)=5# (1,8)=5# (1,9)=5# (2,4)=5# (2,5)=5# (2,6)=5# (3,2)=5# (3,3)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,9)=5# (4,1)=5# (4,3)=5# (4,4)=2  (4,5)=2  (4,6)=5# (4,7)=2  (4,8)=2  (4,9)=5# (5,3)=5# (5,5)=5# (5,6)=2  (5,7)=5# (5,8)=5# (5,9)=5# (6,4)=5# (6,5)=5# (6,6)=2  (6,8)=5# (6,9)=5# (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (16,11)=2  (16,12)=2  (16,13)=2  (16,14)=2  (16,15)=2  (17,13)=5# (18,13)=5#
! size mismatch, 10x10 instead of 19x22

TEST 50846271.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.5 sec (29.5 sec/task)
bits-train-error = 44984.3 bits (44984.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-282] Checking task 508bd3b6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 18820.1 = 18829.1
DL output with Mo: L = 9.0 + 24281.7 = 24290.7
DL input+output M: L = 17.9 + 43101.8 = 43119.8

# learning a model for train pairs
2.000	
1.178	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.517	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.403	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.376	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.321	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.296	OUT DEF: ^.size=^.size
0.282	OUT DEF: ^.layer_0=^.layer_0
0.268	OUT DEF: ^.layer_011=^.layer_01
0.261	IN  DEF: ^.layer_0.shape.color=red
0.253	IN  DEF: ^.layer_01.shape.color=cyan
0.248	OUT DEF: ^.layer_01.shape.color=green
0.244	IN  DEF: ^.layer_0.shape.mask=Full
0.242	IN  DEF: ^.color=black
0.240	OUT DEF: ^.color=black
0.238	IN  DEF: ^.size=(?,?)
0.223	IN  DEF: ^.size.i=12
0.208	IN  DEF: ^.size.j=12
0.206	IN  DEF: ^.layer_0.pos=(?,?)
0.205	IN  DEF: ^.layer_0.shape.size=(?,?)
0.203	IN  DEF: ^.layer_01.pos=(?,?)
0.201	IN  DEF: ^.layer_01.shape.size=(?,?)
0.199	OUT DEF: ^.layer_01.pos=(?,?)
0.198	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (12,12) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 83.3 + 1628.7 = 1712.0
DL output with Mo: L = 46.5 + 2553.8 = 2600.3
DL input+output M: L = 129.9 + 4182.5 = 4312.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
   (48.7 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (10,6) and color green and mask .x....|..x...|...x..|....x.|.....x|....x.|...x..|..x...|.x....|x..... at (0,4)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
   (89.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (10,3)
diff: 
delta: (11,2)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,10)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (11,2)
diff: 
delta: (10,3)=8 
! 15 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
   (57.7 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (6,9) and color green and mask ........x|.......x.|x.....x..|.x...x...|..x.x....|...x..... at (3,3)
  _011: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
   (83.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,0)
diff: 
delta: (3,1)=8  (4,2)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,1)
diff: 
delta: (2,0)=8  (4,2)=8 
! 15 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
diff: 
delta:
   (56.5 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (9,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x.....|.x....|..x...|...x.. at (0,2)
  _011: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
diff: 
delta:
   (83.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (9,6)
diff: 
delta: (10,7)=8  (11,8)=8 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (10,7)
diff: 
delta: (9,6)=8  (11,8)=8 
! 11 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,4) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,4) and color red and mask Full at (0,8)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,3)
diff: 
delta: (1,4)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,4) and color red and mask Full at (0,8)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,4)
diff: 
delta: (0,3)=8 
! 15 wrong pixels (generated / expected)

TEST 508bd3b6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.5 sec (20.5 sec/task)
bits-train-error = 2553.8 bits (2553.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-281] Checking task 50cb2852.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 36338.7 = 36347.7
DL output with Mo: L = 9.0 + 36338.7 = 36347.7
DL input+output M: L = 17.9 + 72677.4 = 72695.4

# learning a model for train pairs
2.000	
1.568	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.214	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.932	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.692	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.549	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.421	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.357	OUT OBJECT at ^.layer_0101: a rectangle with size ? and color ? and mask ? at ?
0.340	OUT DEF: ^.size=^.size
0.330	OUT DEF: ^.layer_0=^.layer_0
0.321	OUT DEF: ^.layer_01=^.layer_01
0.316	OUT OBJECT at ^.layer_01011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _0: ^.layer_0
  _010: a rectangle with size ? and color ? and mask ? at ?
  _0101: a rectangle with size ? and color ? and mask ? at ?
  _01011: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_01
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 7731.7 = 7779.7
DL output with Mo: L = 92.9 + 3620.3 = 3713.2
DL input+output M: L = 140.9 + 11352.0 = 11492.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (8,8)
  _01: a rectangle with size (6,5) and color red and mask Full at (1,2)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
   (277.1 bits)
data: a background with size (13,15) and color black and layers
  _00: a rectangle with size (3,5) and color cyan and mask Full at (9,9)
  _0: a rectangle with size (5,7) and color green and mask Full at (8,8)
  _010: a rectangle with size (4,3) and color cyan and mask Full at (2,3)
  _0101: a rectangle with size (3,3) and color blue and mask Border at (1,10)
  _01011: a rectangle with size (1,1) and color cyan and mask Full at (2,11)
  _01: a rectangle with size (6,5) and color red and mask Full at (1,2)
diff: 
delta:
   (123.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (8,8)
  _01: a rectangle with size (6,5) and color red and mask Full at (1,2)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (8,8)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,10)
diff: 
delta: (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,2)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2 
! 50 wrong pixels (generated / expected)

TRAIN 50cb2852.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask Full at (7,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
diff: 
delta:
   (85.7 bits)
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (1,4) and color cyan and mask Full at (8,3)
  _0: a rectangle with size (3,6) and color blue and mask Full at (7,2)
  _010: a rectangle with size (1,4) and color red and mask Full at (1,1)
  _0101: a rectangle with size (1,4) and color red and mask Full at (4,1)
  _01011: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
diff: 
delta:
   (113.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask Full at (7,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 50cb2852.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _01: a rectangle with size (6,4) and color red and mask Full at (1,6)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
   (410.3 bits)
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,6) and color cyan and mask Full at (9,3)
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _010: a rectangle with size (4,4) and color green and mask Border at (2,0)
  _0101: a rectangle with size (4,2) and color cyan and mask Full at (2,7)
  _01011: a rectangle with size (2,2) and color cyan and mask Full at (3,1)
  _01: a rectangle with size (6,4) and color red and mask Full at (1,6)
diff: 
delta:
   (125.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _01: a rectangle with size (6,4) and color red and mask Full at (1,6)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,8) and color blue and mask Full at (8,2)
  _01: a rectangle with size (4,4) and color green and mask Full at (2,0)
diff: 
delta: (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,6)=2  (4,7)=2  (4,8)=2  (4,9)=2  (5,6)=2  (5,7)=2  (5,8)=2  (5,9)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2 
! 44 wrong pixels (generated / expected)

TRAIN 50cb2852.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (5,2)
  _01: a rectangle with size (7,4) and color green and mask Full at (7,9)
diff: 
delta: (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,8)=1  (1,9)=1  (1,10)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,10)=1 
! 57 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (5,2)
  _01: a rectangle with size (4,5) and color blue and mask Full at (0,1)
diff: 
delta: (1,8)=1  (1,9)=1  (1,10)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,8)=1  (3,9)=1  (3,10)=1  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (10,9)=3  (10,10)=3  (10,11)=3  (10,12)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (12,9)=3  (12,10)=3  (12,11)=3  (12,12)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3 
! 63 wrong pixels (generated / expected)

TEST 50cb2852.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.5 sec (23.5 sec/task)
bits-train-error = 3620.3 bits (3620.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-280] Checking task 5117e062.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12722.5 = 12731.5
DL output with Mo: L = 9.0 + 2276.9 = 2285.9
DL input+output M: L = 17.9 + 14999.4 = 15017.3

# learning a model for train pairs
2.000	
1.668	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.437	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.268	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.106	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.945	OUT DEF: ^.size=^.layer_0.shape.size
0.826	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.781	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.720	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.700	OUT DEF: ^.color=black
0.685	OUT DEF: ^.layer_0.pos=(?,?)
0.647	OUT DEF: ^.layer_0.pos.i=(0)
0.609	OUT DEF: ^.layer_0.pos.j=(0)
0.605	IN  DEF: ^.color=black
0.603	IN  DEF: ^.size=(?,?)
0.580	IN  DEF: ^.size.i=13
0.558	IN  DEF: ^.size.j=13
0.555	IN  DEF: ^.layer_0.pos=(?,?)
0.552	IN  DEF: ^.layer_0.shape.size=(?,?)
0.540	IN  DEF: ^.layer_0.shape.size.i=3
0.527	IN  DEF: ^.layer_0.shape.size.j=3
0.524	IN  DEF: ^.layer_01.pos=(?,?)
0.521	IN  DEF: ^.layer_01.shape.size=(?,?)
0.509	IN  DEF: ^.layer_01.shape.size.i=3
0.496	IN  DEF: ^.layer_01.shape.size.j=3
0.493	IN  DEF: ^.layer_011.pos=(?,?)
0.490	IN  DEF: ^.layer_011.shape.size=(?,?)
0.478	IN  DEF: ^.layer_011.shape.size.j=3
0.475	IN  DEF: ^.layer_0111.pos=(?,?)
0.472	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_011.shape.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask ? at (?,?)
  _01: a rectangle with size (3,3) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,3) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 148.9 + 3652.3 = 3801.2
DL output with Mo: L = 34.8 + 361.8 = 396.6
DL input+output M: L = 183.8 + 4014.1 = 4197.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
diff: 
delta: (1,10)=8 
   (139.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
  _0111: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
diff: 
delta: (1,10)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
  _011: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _0111: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (0,7)
  _011: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
   (107.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .xx|xx.|.xx at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (0,7)
  _011: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _011: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (0,7)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|xxx|..x at (3,8)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (8,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (4,1)
diff: 
delta: (3,2)=8 
   (118.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xx. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|xxx|..x at (3,8)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (8,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (4,1)
diff: 
delta: (3,2)=8 
! 3 wrong pixels (generated / expected)

TRAIN 5117e062.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _011: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
diff: 
delta: (5,10)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _011: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
  _0111: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _0111: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)

TEST 5117e062.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 361.8 bits (361.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-279] Checking task 5168d44c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8412.4 = 8421.4
DL output with Mo: L = 9.0 + 8412.4 = 8421.4
DL input+output M: L = 17.9 + 16824.9 = 16842.8

# learning a model for train pairs
2.000	
1.573	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.146	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.988	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.916	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.808	OUT DEF: ^.layer_0=^.layer_01
0.742	OUT DEF: ^.size=^.size
0.726	IN  DEF: ^.layer_0.shape.color=red
0.710	IN  DEF: ^.layer_0.shape.mask=Border
0.693	IN  DEF: ^.layer_01.shape.color=green
0.685	IN  DEF: ^.layer_01.shape.mask=Full
0.680	OUT DEF: ^.color=black
0.674	IN  DEF: ^.color=black
0.670	OUT DEF: ^.layer_00.pos=(?,?)
0.655	OUT DEF: ^.layer_00.pos.j=^.layer_0.pos.i
0.640	OUT DEF: ^.layer_00.pos.i=^.layer_0.pos.j + 2
0.636	IN  DEF: ^.size=(?,?)
0.632	IN  DEF: ^.layer_0.pos=(?,?)
0.628	IN  DEF: ^.layer_0.shape.size=(?,?)
0.609	IN  DEF: ^.layer_0.shape.size.i=3
0.589	IN  DEF: ^.layer_0.shape.size.j=3
0.585	IN  DEF: ^.layer_01.pos=(?,?)
0.581	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (^.layer_0.pos.j + 2,^.layer_0.pos.i)
  _0: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 76.7 + 3174.3 = 3250.9
DL output with Mo: L = 42.8 + 1598.4 = 1641.3
DL input+output M: L = 119.5 + 4772.7 = 4892.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
   (127.2 bits)
data: a background with size (7,13) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Border at (2,2)
  _0: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,6)=0  (3,8)=0  (3,10)=0 
   (60.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta: (3,3)=3  (3,5)=3  (3,7)=3  (3,9)=3  (3,11)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,3)
diff: 
delta: (3,1)=3  (3,5)=3  (3,7)=3  (3,9)=3  (3,11)=3 
! 5 wrong pixels (generated / expected)

TRAIN 5168d44c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
   (127.7 bits)
data: a background with size (13,7) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Border at (5,3)
  _0: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (3,4)=0  (9,4)=0  (11,4)=0 
   (79.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff:   ^.layer_0.shape.mask
delta: (1,4)=0  (4,4)=3  (7,4)=0  (9,4)=0  (11,4)=0 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,4)
diff: 
delta: (2,4)=3  (4,4)=3  (6,4)=3  (8,4)=3  (10,4)=3  (12,4)=3 
! 6 wrong pixels (generated / expected)

TRAIN 5168d44c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (5,2)=0 
   (62.5 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Border at (3,1)
  _0: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (1,2)=0 
   (19.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (5,2)=0 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff:   ^.layer_0.shape.mask
delta: (2,2)=3  (5,2)=0 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,2)
diff: 
delta: (2,2)=3  (4,2)=3  (6,2)=3 
! 3 wrong pixels (generated / expected)

TRAIN 5168d44c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,17) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,7)
  _01: a rectangle with size (1,17) and color green and mask Full at (4,0)
diff: 
delta: (4,1)=0  (4,3)=0  (4,5)=0  (4,11)=0  (4,13)=0  (4,15)=0 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,17) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,7)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,0)
diff: 
delta: (4,2)=3  (4,4)=3  (4,6)=3  (4,8)=3  (4,10)=3  (4,12)=3  (4,14)=3  (4,16)=3 
! 16 wrong pixels (generated / expected)

TEST 5168d44c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.8 sec (2.8 sec/task)
bits-train-error = 1598.4 bits (1598.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-278] Checking task 539a4f51.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8987.5 = 8996.4
DL output with Mo: L = 9.0 + 26460.5 = 26469.4
DL input+output M: L = 17.9 + 35447.9 = 35465.9

# learning a model for train pairs
2.000	
1.691	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.420	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.204	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.126	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.007	OUT OBJECT at ^.layer_000: a rectangle with size ? and color ? and mask ? at ?
0.909	OUT OBJECT at ^.layer_001: ^.layer_01.shape at ?
0.849	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.836	OUT DEF: ^.layer_00=^.layer_0
0.824	OUT DEF: ^.layer_001=^.layer_01
0.794	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.774	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.762	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.751	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.689	OUT OBJECT at ^.layer_0011: ^.layer_011.shape at ?
0.677	OUT DEF: ^.layer_0011=^.layer_011
0.669	IN  DEF: ^.layer_011.shape.mask=Full
0.665	IN  DEF: ^.size=(?,?)
0.642	IN  DEF: ^.size.i=5
0.620	IN  DEF: ^.size.j=5
0.616	IN  DEF: ^.layer_0.pos=(?,?)
0.604	IN  DEF: ^.layer_0.pos.i=0
0.581	IN  DEF: ^.layer_0.pos.j=0
0.535	IN  DEF: ^.layer_0.shape.mask=Full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _000: a rectangle with size ? and color ? and mask ? at ?
  _00: ^.layer_0
  _001: ^.layer_01
  _0011: ^.layer_011
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size (5,5) and color ? and layers
  _0: a rectangle with size ? and color ? and mask Full at (0,0)
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 82.0 + 2349.1 = 2431.1
DL output with Mo: L = 99.4 + 6918.6 = 7018.0
DL input+output M: L = 181.4 + 9267.7 = 9449.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (0,3)
diff: 
delta:
   (67.2 bits)
data: a background with size (10,10) and color green and layers
  _000: a rectangle with size (2,10) and color red and mask Full at (8,0)
  _00: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _001: a rectangle with size (1,4) and color green and mask Full at (3,0)
  _0011: a rectangle with size (4,1) and color green and mask Full at (0,3)
  _0: a rectangle with size (7,7) and color red and mask Full at (0,0)
  _01: a rectangle with size (10,2) and color red and mask Full at (0,8)
  _011: a rectangle with size (1,8) and color green and mask Full at (7,0)
diff: 
delta:
   (140.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (0,3)
diff: 
delta:
! 88 wrong pixels (generated / expected)

TRAIN 539a4f51.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask Full at (0,0)
diff: 
delta:
   (71.2 bits)
data: a background with size (10,10) and color pink and layers
  _000: a rectangle with size (2,10) and color blue and mask Full at (8,0)
  _00: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _001: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _0011: a rectangle with size (4,4) and color pink and mask Full at (0,0)
  _0: a rectangle with size (6,6) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,2) and color blue and mask Full at (0,8)
  _011: a rectangle with size (7,7) and color yellow and mask Full at (0,0)
diff: 
delta:
   (145.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask Full at (0,0)
diff: 
delta:
! 88 wrong pixels (generated / expected)

TRAIN 539a4f51.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (0,0)
diff: 
delta: (0,0)=2 
   (96.6 bits)
data: a background with size (10,10) and color pink and layers
  _000: a rectangle with size (9,9) and color blue and mask ........x|........x|........x|........x|........x|........x|........x|........x|xxxxxxxxx at (0,0)
  _00: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _001: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _0011: a rectangle with size (4,4) and color blue and mask Full at (0,0)
  _0: a rectangle with size (7,7) and color green and mask xxxx..x|xxxx..x|xxxx..x|xxxx..x|......x|......x|xxxxxxx at (0,0)
  _01: a rectangle with size (8,8) and color yellow and mask xxxx..xx|xxxx..xx|xxxx..xx|xxxx..xx|......xx|......xx|xxxxxxxx|xxxxxxxx at (0,0)
  _011: a rectangle with size (6,6) and color red and mask xxxx.x|xxxx.x|xxxx.x|xxxx.x|.....x|xxxxxx at (0,0)
diff: 
delta: (0,0)=2 
   (406.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (5,5) and color pink and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (0,0)
  _011: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,0)=2 
! 86 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color yellow and layers
  _0: a rectangle with size (5,5) and color pink and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _01: a rectangle with size (4,4) and color blue and mask ...x|...x|...x|xxxx at (0,0)
  _011: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff:   ^.layer_0.shape.mask
delta: (0,0)=2 
! 84 wrong pixels (generated / expected)

TRAIN 539a4f51.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (0,0)
  _01: a rectangle with size (2,5) and color red and mask Full at (3,0)
  _011: a rectangle with size (5,2) and color red and mask Full at (0,3)
diff: 
delta:
! 84 wrong pixels (generated / expected)

TEST 539a4f51.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.5 sec (24.5 sec/task)
bits-train-error = 6918.6 bits (6918.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-277] Checking task 53b68214.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5706.7 = 5715.7
DL output with Mo: L = 9.0 + 8599.6 = 8608.5
DL input+output M: L = 17.9 + 14306.3 = 14324.2

# learning a model for train pairs
2.000	
1.333	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.720	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.683	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.667	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.659	IN  DEF: ^.color=black
0.653	IN  DEF: ^.layer_0.pos=(?,?)
0.632	IN  DEF: ^.layer_0.pos.i=(0)
0.626	IN  DEF: ^.size=(?,?)
0.580	IN  DEF: ^.size.j=10
0.574	IN  DEF: ^.layer_0.shape.size=(?,?)
0.569	OUT DEF: ^.color=black
0.565	OUT DEF: ^.size=(?,?)
0.533	OUT DEF: ^.size.j=^.size.j
0.502	OUT DEF: ^.size.i=^.size.j
0.498	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.j,^.size.j) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),?)

DL input  with Mi: L = 47.1 + 1636.1 = 1683.2
DL output with Mo: L = 37.4 + 1718.1 = 1755.6
DL input+output M: L = 84.6 + 3354.3 = 3438.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask xxx....|..x....|..xxx..|....x..|....xxx|......x at (0,0)
diff: 
delta:
   (77.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,10) and color blue and mask xxx.......|..x.......|..xxx.....|....x.....|....xxx...|......x...|......xxx.|........x.|........xx at (0,0)
diff: 
delta:
   (110.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask xxx....|..x....|..xxx..|....x..|....xxx|......x at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta: (0,0)=1  (0,1)=1  (2,3)=1  (2,4)=1  (3,4)=1  (4,4)=1  (4,5)=1  (4,6)=1  (5,6)=1 
! 18 wrong pixels (generated / expected)

TRAIN 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,2)
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,2)
diff: 
delta:
   (13.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,2)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 53b68214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x. at (0,0)
diff: 
delta:
   (58.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x.|x.x|.x. at (0,0)
diff: 
delta:
   (47.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x. at (0,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (0,1)
diff: 
delta: (2,0)=2  (2,1)=0  (2,2)=2  (5,0)=2  (5,1)=0  (5,2)=2 
! 13 wrong pixels (generated / expected)

TRAIN 53b68214.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,2) and color pink and mask Odd Checkboard at (0,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask xxx|x.x|xxx|x.x|xxx at (0,1)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST 53b68214.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 1718.1 bits (1718.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-276] Checking task 543a7ed5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16254.8 = 16263.7
DL output with Mo: L = 9.0 + 44809.5 = 44818.4
DL input+output M: L = 17.9 + 61064.2 = 61082.2

# learning a model for train pairs
2.000	
1.586	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.178	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.018	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.872	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.759	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.685	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 6971.7 = 7019.7
DL output with Mo: L = 85.3 + 11252.7 = 11338.0
DL input+output M: L = 133.3 + 18224.3 = 18357.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,15) and color cyan and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxx....xxx|xxxxxxxx....xxx|xxx..xxx....xxx|xxx..xxx....xxx|xxxxxxxx....xxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxx....xxxxxx|xxxxx....xxxxxx|xxxxx....xxxxxx|xxxxx....xxxxxx|xxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (3,9)
diff: 
delta:
   (325.5 bits)
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,15) and color cyan and mask xxxxxxxxxxxxxxx|xxxxxxx......xx|xxxxxxx......xx|xx....x......xx|xx....x......xx|xx....x......xx|xx....x......xx|xxxxxxx......xx|xxxxxxxxxxxxxxx|xxxx......xxxxx|xxxx......xxxxx|xxxx......xxxxx|xxxx......xxxxx|xxxx......xxxxx|xxxx......xxxxx at (0,0)
  _01: a rectangle with size (7,6) and color green and mask Border at (1,7)
  _011: a rectangle with size (6,6) and color green and mask Border at (9,4)
  _0111: a rectangle with size (4,4) and color green and mask Border at (3,2)
diff: 
delta: (3,9)=4  (3,10)=4  (4,9)=4  (4,10)=4  (5,9)=4  (5,10)=4 
   (531.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,15) and color cyan and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxx....xxx|xxxxxxxx....xxx|xxx..xxx....xxx|xxx..xxx....xxx|xxxxxxxx....xxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxx....xxxxxx|xxxxx....xxxxxx|xxxxx....xxxxxx|xxxxx....xxxxxx|xxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (3,9)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 543a7ed5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,15) and color cyan and mask xxxxxxxxxxxxxxx|xxxxxxxx...xxxx|xxxxxxxx...xxxx|xx....xx...xxxx|xx....xxxxxxxxx|xx....xxxxxxxxx|xx....xxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (9,9)
diff: 
delta: (4,3)=8  (5,3)=8 
   (371.7 bits)
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,7) and color cyan and mask xxxxxxx|xxxxxxx|x......|x......|x......|x......|x......|x......|xxxxxxx|xxxxxxx|xxxxxxx|xxxxxxx|xxxxxxx|xxxxxxx|xxxxxxx at (0,0)
  _01: a rectangle with size (15,14) and color green and mask xxxxxxxxxxx...|xxxxxxx...x...|xxxxxxx...x...|x....xx...x...|x....xxxxxx...|x....x........|x....x........|xxxxxxxxxxxxxx|xxxxxxx......x|xxxxxxx......x|xxxxxxx......x|xxxxxxx......x|xxxxxxx......x|xxxxxxx......x|xxxxxxxxxxxxxx at (0,1)
  _011: a rectangle with size (7,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx at (0,7)
  _0111: a rectangle with size (4,4) and color yellow and mask Full at (9,9)
diff: 
delta: (4,3)=4  (5,3)=4 
   (593.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,15) and color cyan and mask xxxxxxxxxxxxxxx|xxxxxxxx...xxxx|xxxxxxxx...xxxx|xx....xx...xxxx|xx....xxxxxxxxx|xx....xxxxxxxxx|xx....xxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxx......x|xxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (9,9)
diff: 
delta: (4,3)=8  (5,3)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN 543a7ed5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,15) and color cyan and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxx...xxx|xx....xxx...xxx|xx....xxx...xxx|xx....xxx...xxx|xx....xxx...xxx|xxxxxxxxx...xxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxx.......xxxx|xxxx.......xxxx|xxxx.......xxxx|xxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (2,3) and color pink and mask Full at (2,9)
diff: 
delta: (4,3)=8  (4,4)=8  (4,10)=8  (5,3)=8  (5,4)=8  (5,10)=8  (6,10)=8  (12,6)=8  (12,7)=8 
! size mismatch, 10x10 instead of 15x15

TEST 543a7ed5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 11252.7 bits (11252.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-275] Checking task 54d82841.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5136.7 = 5145.7
DL output with Mo: L = 9.0 + 6032.5 = 6041.5
DL input+output M: L = 17.9 + 11169.3 = 11187.2

# learning a model for train pairs
2.000	
1.675	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.277	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.094	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.837	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.755	OUT DEF: ^.size=^.size
0.703	IN  DEF: ^.layer_0.shape.mask=xxx|x.x
0.657	OUT DEF: ^.layer_00=^.layer_00
0.610	OUT DEF: ^.layer_0=^.layer_0
0.587	OUT OBJECT at ^.layer_01: a point with color ? at ?
0.564	OUT DEF: ^.layer_01.shape.color=yellow
0.555	IN  DEF: ^.color=black
0.548	OUT DEF: ^.color=black
0.541	IN  DEF: ^.size=(?,?)
0.534	IN  DEF: ^.layer_00.pos=(?,?)
0.511	IN  DEF: ^.layer_00.pos.j=1
0.504	IN  DEF: ^.layer_00.shape.size=(?,?)
0.475	IN  DEF: ^.layer_00.shape.size.j=3
0.468	IN  DEF: ^.layer_0.pos=(?,?)
0.461	IN  DEF: ^.layer_0.shape.size=(?,?)
0.430	IN  DEF: ^.layer_0.shape.size.j=3
0.405	IN  DEF: ^.layer_0.shape.size.i=2
0.399	OUT DEF: ^.layer_01.pos=(?,?)
0.379	OUT DEF: ^.layer_01.pos.j=2
0.362	OUT DEF: ^.layer_01.pos.i=^.size.i - 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: ^.layer_0
  _01: a point with color yellow at (^.size.i - 1,2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,3) and color ? and mask ? at (?,1)
  _0: a rectangle with size (2,3) and color ? and mask xxx|x.x at (?,?)

DL input  with Mi: L = 83.3 + 1400.6 = 1483.9
DL output with Mo: L = 51.0 + 396.4 = 447.4
DL input+output M: L = 134.3 + 1797.0 = 1931.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta:
   (52.3 bits)
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
  _01: a point with color yellow at (7,2)
diff: 
delta: (7,6)=4 
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask Full at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta: (1,2)=0 
! 2 wrong pixels (generated / expected)

TRAIN 54d82841.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (0,1)
diff: 
delta:
   (38.8 bits)
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (0,1)
  _01: a point with color yellow at (4,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (0,1)
diff: 
delta:
correct output grid

TRAIN 54d82841.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta:
   (49.0 bits)
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
  _01: a point with color yellow at (4,2)
diff: 
delta: (4,5)=4 
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask Full at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta: (2,2)=0 
! 2 wrong pixels (generated / expected)

TRAIN 54d82841.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _00: a rectangle with size (2,3) and color grey and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,5)
diff: 
delta: (2,8)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,11) and color black and layers
  _00: a rectangle with size (2,3) and color grey and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (2,8)
diff: 
delta: (1,5)=8  (1,6)=8  (1,7)=8  (2,5)=8  (2,7)=8 
! 7 wrong pixels (generated / expected)

TEST 54d82841.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.4 sec (2.4 sec/task)
bits-train-error = 396.4 bits (396.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-274] Checking task 54d9e175.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11063.7 = 11072.7
DL output with Mo: L = 9.0 + 22265.3 = 22274.2
DL input+output M: L = 17.9 + 33329.0 = 33346.9

# learning a model for train pairs
2.000	
1.640	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.368	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.155	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.009	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.932	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.861	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.831	OUT DEF: ^.size=^.size
0.805	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.788	OUT DEF: ^.layer_00=^.layer_0
0.774	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.758	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.740	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.725	OUT DEF: ^.color=brown
0.720	IN  DEF: ^.color=black
0.703	IN  DEF: ^.layer_0.shape.color=grey
0.699	IN  DEF: ^.size=(?,?)
0.666	IN  DEF: ^.size.j=11
0.662	IN  DEF: ^.layer_0.pos=(?,?)
0.650	IN  DEF: ^.layer_0.pos.i=(0)
0.642	IN  DEF: ^.layer_01.shape.mask=Full
0.637	IN  DEF: ^.layer_0.shape.size=(?,?)
0.633	IN  DEF: ^.layer_01.pos=(?,?)
0.629	IN  DEF: ^.layer_01.shape.size=(?,?)
0.620	IN  DEF: ^.layer_01.shape.size.j=1
0.616	IN  DEF: ^.layer_011.pos=(?,?)
0.599	IN  DEF: ^.layer_011.pos.j=5
0.587	IN  DEF: ^.layer_011.pos.i=1
0.583	IN  DEF: ^.layer_0111.pos=(?,?)
0.566	IN  DEF: ^.layer_0111.pos.j=1
0.562	IN  DEF: ^.layer_01111.pos=(?,?)
0.544	IN  DEF: ^.layer_01111.pos.j=9
0.533	IN  DEF: ^.layer_01111.pos.i=1
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color brown and layers
  _00: ^.layer_0
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size (?,11) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at ((0),?)
  _01: a rectangle with size (?,1) and color ? and mask Full at (?,?)
  _011: a point with color ? at (1,5)
  _0111: a point with color ? at (?,1)
  _01111: a point with color ? at (1,9)

DL input  with Mi: L = 135.1 + 3493.2 = 3628.2
DL output with Mo: L = 95.6 + 4478.9 = 4574.5
DL input+output M: L = 230.7 + 7972.0 = 8202.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,5)
  _0111: a point with color blue at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
   (55.1 bits)
data: a background with size (3,11) and color brown and layers
  _00: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _0: a rectangle with size (3,3) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,8)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (110.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,5)
  _0111: a point with color blue at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a point with color red at (1,5)
  _0111: a point with color blue at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN 54d9e175.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,5)
  _0111: a point with color red at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
   (55.1 bits)
data: a background with size (3,11) and color brown and layers
  _00: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _0: a rectangle with size (3,3) and color orange and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,8)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (110.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,5)
  _0111: a point with color red at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a point with color green at (1,5)
  _0111: a point with color red at (1,1)
  _01111: a point with color blue at (1,9)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN 54d9e175.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,5)
  _0111: a point with color green at (1,1)
  _01111: a point with color yellow at (1,9)
diff: 
delta:
   (55.1 bits)
data: a background with size (3,11) and color brown and layers
  _00: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color brown and mask Full at (0,8)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (110.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,5)
  _0111: a point with color green at (1,1)
  _01111: a point with color yellow at (1,9)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color green at (1,1)
  _01111: a point with color yellow at (1,9)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 54d9e175.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (5,1)
  _01111: a point with color red at (1,9)
diff: 
delta: (5,5)=3  (5,9)=4 
   (184.1 bits)
data: a background with size (7,11) and color brown and layers
  _00: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _0: a rectangle with size (3,3) and color pink and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color orange and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color orange and mask Full at (4,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
diff: 
delta:
   (118.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (5,1)
  _01111: a point with color red at (1,9)
diff: 
delta: (5,5)=3  (5,9)=4 
! 40 wrong pixels (generated / expected)

TRAIN 54d9e175.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _011: a point with color green at (1,5)
  _0111: a point with color blue at (5,1)
  _01111: a point with color yellow at (1,9)
diff: 
delta: (5,5)=1  (5,9)=3 
! 45 wrong pixels (generated / expected)

TEST 54d9e175.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.6 sec (24.6 sec/task)
bits-train-error = 4478.9 bits (4478.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-273] Checking task 5521c0d9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17832.8 = 17841.8
DL output with Mo: L = 9.0 + 17832.8 = 17841.8
DL input+output M: L = 17.9 + 35665.6 = 35683.5

# learning a model for train pairs
2.000	
1.534	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.069	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.835	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.635	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.466	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.327	IN  OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
0.291	OUT DEF: ^.size=^.size
0.261	OUT DEF: ^.layer_0.shape=^.layer_001.shape
0.253	IN  DEF: ^.layer_00.shape.color=yellow
0.245	IN  DEF: ^.layer_001.shape.color=red
0.238	IN  DEF: ^.layer_0.shape.color=blue
0.234	IN  DEF: ^.layer_00.shape.mask=Full
0.230	IN  DEF: ^.layer_001.shape.mask=Full
0.226	IN  DEF: ^.layer_0.shape.mask=Full
0.223	OUT DEF: ^.color=black
0.221	IN  DEF: ^.color=black
0.219	OUT DEF: ^.layer_00.pos=(?,?)
0.210	OUT DEF: ^.layer_00.pos.j=^.layer_00.pos.j
0.202	OUT DEF: ^.layer_00.pos.i=^.layer_00.pos.i - ^.layer_00.shape.size.i
0.200	OUT DEF: ^.layer_0.pos=(?,?)
0.191	OUT DEF: ^.layer_0.pos.j=^.layer_001.pos.j
0.183	OUT DEF: ^.layer_0.pos.i=^.layer_001.pos.i - ^.layer_001.shape.size.i
0.181	OUT DEF: ^.layer_01.pos=(?,?)
0.173	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j
0.165	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i - ^.layer_0.shape.size.i
0.163	IN  DEF: ^.layer_00.pos=(?,?)
0.161	IN  DEF: ^.size=(?,?)
0.144	IN  DEF: ^.size.i=15
0.127	IN  DEF: ^.size.j=15
0.125	IN  DEF: ^.layer_00.shape.size=(?,?)
0.123	IN  DEF: ^.layer_0.pos=(?,?)
0.121	IN  DEF: ^.layer_001.pos=(?,?)
0.120	IN  DEF: ^.layer_001.shape.size=(?,?)
0.118	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00.shape at (^.layer_00.pos.i - ^.layer_00.shape.size.i,^.layer_00.pos.j)
  _0: ^.layer_001.shape at (^.layer_001.pos.i - ^.layer_001.shape.size.i,^.layer_001.pos.j)
  _01: ^.layer_0.shape at (^.layer_0.pos.i - ^.layer_0.shape.size.i,^.layer_0.pos.j)
WHERE (Mi)
a background with size (15,15) and color black and layers
  _00: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _001: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 112.0 + 1889.0 = 2001.0
DL output with Mo: L = 96.8 + 0.0 = 96.8
DL input+output M: L = 208.7 + 1889.0 = 2097.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (4,4) and color yellow and mask Full at (11,9)
  _001: a rectangle with size (2,4) and color red and mask Full at (13,4)
  _0: a rectangle with size (4,2) and color blue and mask Full at (11,1)
diff: 
delta:
   (65.3 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (4,4) and color yellow and mask Full at (7,9)
  _0: a rectangle with size (2,4) and color red and mask Full at (11,4)
  _01: a rectangle with size (4,2) and color blue and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (4,4) and color yellow and mask Full at (11,9)
  _001: a rectangle with size (2,4) and color red and mask Full at (13,4)
  _0: a rectangle with size (4,2) and color blue and mask Full at (11,1)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (6,4) and color yellow and mask Full at (9,1)
  _001: a rectangle with size (5,2) and color red and mask Full at (10,11)
  _0: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta:
   (65.1 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (6,4) and color yellow and mask Full at (3,1)
  _0: a rectangle with size (5,2) and color red and mask Full at (5,11)
  _01: a rectangle with size (2,2) and color blue and mask Full at (11,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (6,4) and color yellow and mask Full at (9,1)
  _001: a rectangle with size (5,2) and color red and mask Full at (10,11)
  _0: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask Full at (12,11)
  _001: a rectangle with size (1,4) and color red and mask Full at (14,1)
  _0: a rectangle with size (4,1) and color blue and mask Full at (11,7)
diff: 
delta:
   (58.5 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask Full at (9,11)
  _0: a rectangle with size (1,4) and color red and mask Full at (13,1)
  _01: a rectangle with size (4,1) and color blue and mask Full at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask Full at (12,11)
  _001: a rectangle with size (1,4) and color red and mask Full at (14,1)
  _0: a rectangle with size (4,1) and color blue and mask Full at (11,7)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (6,3) and color yellow and mask Full at (9,5)
  _001: a rectangle with size (7,4) and color red and mask Full at (8,0)
  _0: a rectangle with size (3,5) and color blue and mask Full at (12,10)
diff: 
delta:
correct output grid

TEST 5521c0d9.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-272] Checking task 5582e5ca.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3552.8 = 3561.8
DL output with Mo: L = 9.0 + 608.1 = 617.1
DL input+output M: L = 17.9 + 4160.9 = 4178.9

# learning a model for train pairs
2.000	
1.399	OUT DEF: ^.size=^.size
1.009	OUT DEF: ^.color=^.color
0.935	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.894	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.874	IN  DEF: ^.layer_0.shape.mask=Full
0.864	IN  DEF: ^.layer_01.shape.size=(?,?)
0.855	IN  DEF: ^.size=(?,?)
0.809	IN  DEF: ^.size.i=3
0.763	IN  DEF: ^.size.j=3
0.754	IN  DEF: ^.layer_0.pos=(?,?)
0.744	IN  DEF: ^.layer_0.shape.size=(?,?)
0.734	IN  DEF: ^.layer_01.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 74.6 + 2493.4 = 2567.9
DL output with Mo: L = 7.9 + 0.0 = 7.9
DL input+output M: L = 82.5 + 2493.4 = 2575.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
diff: 
delta: (0,2)=8  (2,2)=0 
   (84.8 bits)
data: a background with size (3,3) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=8  (2,2)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
diff: 
delta: (0,2)=8  (2,2)=0 
correct output grid

TRAIN 5582e5ca.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta: (0,0)=6  (2,1)=4 
   (79.7 bits)
data: a background with size (3,3) and color brown and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta: (0,0)=6  (2,1)=4 
correct output grid

TRAIN 5582e5ca.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,0)
diff: 
delta: (0,2)=9# (1,2)=1 
   (84.8 bits)
data: a background with size (3,3) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,0)
diff: 
delta: (0,2)=9# (1,2)=1 
correct output grid

TRAIN 5582e5ca.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,1)
diff: 
delta: (1,2)=9# (2,1)=3  (2,2)=0 
correct output grid

TEST 5582e5ca.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-271] Checking task 5614dbcf.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13620.8 = 13629.8
DL output with Mo: L = 9.0 + 1438.3 = 1447.3
DL input+output M: L = 17.9 + 15059.1 = 15077.1

# learning a model for train pairs
2.000	
1.798	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.622	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.453	OUT DEF: ^.size=^.layer_0.shape.size
1.369	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.285	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.203	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.150	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.086	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.026	OUT OBJECT at ^.layer_01: a point with color ? at ?
0.962	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.940	OUT DEF: ^.color=black
0.925	OUT DEF: ^.layer_0.pos=(?,?)
0.885	OUT DEF: ^.layer_0.pos.i=(0)
0.855	OUT DEF: ^.layer_0.pos.j=^.layer_01111.pos.i - ^.layer_01.pos.j
0.840	OUT DEF: ^.layer_01.pos=(?,?)
0.810	OUT DEF: ^.layer_01.pos.i=^.layer_0.shape.size.i - ^.layer_011.pos.i
0.805	IN  DEF: ^.layer_011.shape.mask=Full
0.800	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.797	IN  DEF: ^.layer_0.shape.mask=Full
0.793	IN  DEF: ^.layer_01.shape.mask=Full
0.762	OUT DEF: ^.layer_01.pos.j=^.layer_011111.pos.j - 2
0.756	IN  DEF: ^.layer_011111.shape.color=grey
0.752	IN  DEF: ^.layer_0111.shape.mask=Full
0.747	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
0.741	IN  DEF: ^.layer_0111111.shape.color=grey
0.737	IN  DEF: ^.layer_01111.shape.mask=Full
0.735	IN  DEF: ^.color=black
0.733	IN  DEF: ^.size=(?,?)
0.721	IN  DEF: ^.size.i=9
0.709	IN  DEF: ^.size.j=9
0.707	IN  DEF: ^.layer_0.pos=(?,?)
0.700	IN  DEF: ^.layer_0.pos.i=(0)
0.699	IN  DEF: ^.layer_0.shape.size=(?,?)
0.691	IN  DEF: ^.layer_0.shape.size.i=3
0.683	IN  DEF: ^.layer_0.shape.size.j=3
0.681	IN  DEF: ^.layer_01111.pos=(?,?)
0.680	IN  DEF: ^.layer_0111111.pos=(?,?)
0.673	IN  DEF: ^.layer_0111111.pos.i=6
0.672	IN  DEF: ^.layer_01.pos=(?,?)
0.670	IN  DEF: ^.layer_01.shape.size=(?,?)
0.662	IN  DEF: ^.layer_01.shape.size.i=3
0.654	IN  DEF: ^.layer_01.shape.size.j=3
0.653	IN  DEF: ^.layer_011.pos=(?,?)
0.651	IN  DEF: ^.layer_011.shape.size=(?,?)
0.649	IN  DEF: ^.layer_0111.pos=(?,?)
0.643	IN  DEF: ^.layer_0111.pos.j=(0)
0.641	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.640	IN  DEF: ^.layer_01111.shape.size=(?,?)
0.638	IN  DEF: ^.layer_011111.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at ((0),^.layer_01111.pos.i - ^.layer_01.pos.j)
  _01: a point with color ^.layer_01.shape.color at (^.layer_0.shape.size.i - ^.layer_011.pos.i,^.layer_011111.pos.j - 2)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask Full at ((0),?)
  _01: a rectangle with size (3,3) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,(0))
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a point with color grey at (?,?)
  _0111111: a point with color grey at (6,?)

DL input  with Mi: L = 204.9 + 2917.5 = 3122.4
DL output with Mo: L = 89.3 + 502.7 = 592.0
DL input+output M: L = 294.2 + 3420.2 = 3714.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,6)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,3)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (6,0)
  _01111: a rectangle with size (3,3) and color brown and mask Full at (6,6)
  _011111: a point with color grey at (8,4)
  _0111111: a point with color grey at (6,5)
diff: 
delta: (1,7)=5# (3,4)=5# (8,1)=5# (8,8)=5#
   (184.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color cyan at (0,2)
diff: 
delta: (1,1)=7# (2,0)=6  (2,2)=9#
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Border at (0,6)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,3)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (6,0)
  _01111: a rectangle with size (3,3) and color brown and mask Full at (6,6)
  _011111: a point with color grey at (1,7)
  _0111111: a point with color grey at (6,5)
diff:   ^.layer_01.shape.mask
delta: (3,4)=5# (8,1)=5# (8,4)=5# (8,8)=5#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,6)
  _011: a rectangle with size (3,3) and color orange and mask x.x|xxx|xxx at (3,3)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (6,0)
  _01111: a rectangle with size (3,3) and color brown and mask Full at (6,6)
  _011111: a point with color grey at (3,4)
  _0111111: a point with color grey at (6,5)
diff:   ^.layer_011.shape.mask
delta: (1,7)=5# (8,1)=5# (8,4)=5# (8,8)=5#
! 3 wrong pixels (generated / expected)

TRAIN 5614dbcf.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask Full at (6,3)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (3,0)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,7)
  _011111: a point with color grey at (4,3)
  _0111111: a point with color grey at (6,1)
diff: 
delta: (7,5)=5#
   (107.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color orange at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask Full at (6,3)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (3,0)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,3)
  _011111: a point with color grey at (4,7)
  _0111111: a point with color grey at (6,1)
diff: 
delta: (7,5)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask Full at (6,3)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (3,0)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,7)
  _011111: a point with color grey at (4,3)
  _0111111: a point with color grey at (6,1)
diff: 
delta: (7,5)=5#
correct output grid

TRAIN 5614dbcf.json/2: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
negative integer

TEST 5614dbcf.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 13.2 sec (13.2 sec/task)
bits-train-error = 502.7 bits (502.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-270] Checking task 56dc2b01.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8618.6 = 8627.5
DL output with Mo: L = 9.0 + 11238.4 = 11247.4
DL input+output M: L = 17.9 + 19857.0 = 19874.9

# learning a model for train pairs
2.000	
1.557	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.119	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.899	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.692	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.523	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.474	OUT DEF: ^.size=^.size
0.446	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size
0.418	OUT DEF: ^.layer_01=^.layer_01
0.402	IN  DEF: ^.layer_0.shape.color=green
0.386	IN  DEF: ^.layer_01.shape.color=red
0.374	OUT DEF: ^.layer_011.shape.color=cyan
0.366	IN  DEF: ^.layer_01.shape.mask=Full
0.359	OUT DEF: ^.layer_011.shape.mask=Full
0.354	IN  DEF: ^.color=black
0.350	IN  DEF: ^.size=(?,?)
0.346	IN  DEF: ^.layer_0.pos=(?,?)
0.331	IN  DEF: ^.layer_0.pos.j=(0)
0.327	IN  DEF: ^.layer_0.shape.size=(?,?)
0.323	IN  DEF: ^.layer_01.pos=(?,?)
0.319	IN  DEF: ^.layer_01.shape.size=(?,?)
0.315	OUT DEF: ^.color=black
0.312	OUT DEF: ^.layer_0.pos=(?,?)
0.309	OUT DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (?,?)
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_01.shape.size and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,(0))
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 71.5 + 2146.0 = 2217.5
DL output with Mo: L = 49.8 + 535.0 = 584.8
DL input+output M: L = 121.3 + 2681.0 = 2802.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
diff: 
delta:
   (69.0 bits)
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,6)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (0,5)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (1,1) and color black and mask Full at (3,0)
diff:   ^.layer_01.shape.color
delta: (0,10)=2  (1,10)=2  (2,10)=2  (3,10)=2 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (2,1) and color black and mask Full at (0,0)
diff:   ^.layer_01.shape.color
delta: (0,10)=2  (1,10)=2  (2,10)=2  (3,10)=2 
! 26 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta:
   (77.6 bits)
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (10,0)
diff: 
delta:
   (18.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (15,0)
  _01: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 43 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
  _01: a rectangle with size (1,4) and color black and mask Full at (2,1)
diff:   ^.layer_01.shape.color
delta: (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=2 
! 32 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta:
   (68.1 bits)
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (4,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (7,0)
diff: 
delta:
   (18.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (3,0)
  _01: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 41 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask Full at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta: (12,1)=0  (12,2)=0  (13,2)=0 
! 27 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask .xx|x.x|xxx|x.. at (0,11)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff:   ^.layer_0.pos.j
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (0,11)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff:   ^.layer_0.pos.j
delta: (0,11)=0  (1,12)=0  (3,12)=0  (3,13)=0 
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,11)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff:   ^.layer_0.pos.j
delta: (0,12)=3  (0,13)=3  (1,11)=3  (1,13)=3  (3,11)=3 
! 18 wrong pixels (generated / expected)

TEST 56dc2b01.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.2 sec (6.2 sec/task)
bits-train-error = 535.0 bits (535.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-269] Checking task 56ff96f3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3178.2 = 3187.2
DL output with Mo: L = 9.0 + 18859.2 = 18868.2
DL input+output M: L = 17.9 + 22037.4 = 22055.4

# learning a model for train pairs
2.000	
1.345	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.292	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.232	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.193	OUT DEF: ^.size=^.size
1.174	IN  DEF: ^.color=black
1.159	IN  DEF: ^.size=(?,?)
1.144	IN  DEF: ^.layer_0.pos=(?,?)
1.087	IN  DEF: ^.layer_0.pos.j=1
1.072	IN  DEF: ^.layer_01.pos=(?,?)
1.062	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.057	OUT DEF: ^.layer_0.shape.mask=Full
1.054	OUT DEF: ^.color=black
1.051	OUT DEF: ^.layer_0.pos=(?,?)
1.041	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
1.039	OUT DEF: ^.layer_0.shape.size=(?,?)
1.025	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_01.pos.j) and color ^.layer_0.shape.color and mask Full at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,1)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 49.7 + 2393.0 = 2442.7
DL output with Mo: L = 36.7 + 4838.8 = 4875.6
DL input+output M: L = 86.4 + 7231.8 = 7318.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color blue at (1,6)
diff: 
delta: (5,3)=2  (7,7)=2 
   (82.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask Full at (1,1)
diff: 
delta: (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2  (6,7)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2 
   (301.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color blue at (1,6)
diff: 
delta: (5,3)=2  (7,7)=2 
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color red at (5,3)
diff: 
delta: (1,6)=1  (7,7)=2 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color red at (7,7)
diff: 
delta: (1,6)=1  (5,3)=2 
! 35 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,2)
diff: 
delta: (3,7)=7# (4,4)=7#
   (77.4 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask Full at (1,1)
diff: 
delta: (3,4)=7# (3,5)=7# (3,6)=7# (3,7)=7# (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7#
   (161.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta: (4,2)=3  (4,4)=7#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,2)
diff: 
delta: (3,7)=7# (4,4)=7#
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color orange at (4,4)
diff: 
delta: (3,7)=7# (4,2)=3 
! 20 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color yellow at (6,5)
diff: 
delta:
   (41.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (2,1)
diff: 
delta:
   (11.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color yellow at (6,5)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (6,5)
  _01: a point with color yellow at (2,1)
diff:   ^.layer_0.pos.j
delta:
! 27 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,11) and color black and layers
  _0: a point with color orange at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta:
   (38.6 bits)
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (3,7) and color orange and mask Full at (1,1)
diff: 
delta:
   (9.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  _0: a point with color orange at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,11) and color black and layers
  _0: a point with color orange at (3,7)
  _01: a point with color orange at (1,1)
diff:   ^.layer_0.pos.j
delta:
! 21 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a point with color pink at (7,1)
  _01: a point with color cyan at (0,0)
diff: 
delta: (1,2)=8  (4,5)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color black and layers
  _0: a point with color pink at (7,1)
  _01: a point with color cyan at (1,2)
diff: 
delta: (0,0)=8  (4,5)=6 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,8) and color black and layers
  _0: a point with color pink at (7,1)
  _01: a point with color pink at (4,5)
diff: 
delta: (0,0)=8  (1,2)=8 
! 32 wrong pixels (generated / expected)

TEST 56ff96f3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 4838.8 bits (4838.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-268] Checking task 57aa92db.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14262.9 = 14271.9
DL output with Mo: L = 9.0 + 32487.2 = 32496.2
DL input+output M: L = 17.9 + 46750.1 = 46768.0

# learning a model for train pairs
2.000	
1.460	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.236	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.057	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.925	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.800	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.713	OUT OBJECT at ^.layer_001: ^.layer_011.shape at ?
0.682	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.655	OUT DEF: ^.size=^.size
0.640	OUT DEF: ^.layer_00=^.layer_0
0.625	OUT DEF: ^.layer_001=^.layer_011
0.612	IN  OBJECT at ^.layer_0110: a point with color ? at ?
0.605	IN  DEF: ^.layer_01.shape.mask=Full
0.600	OUT DEF: ^.layer_01.shape.color=^.layer_0110.shape.color
0.596	IN  DEF: ^.color=black
0.592	IN  DEF: ^.size=(?,?)
0.589	IN  DEF: ^.layer_0.pos=(?,?)
0.585	IN  DEF: ^.layer_0.shape.size=(?,?)
0.582	IN  DEF: ^.layer_01.pos=(?,?)
0.579	IN  DEF: ^.layer_01.shape.size=(?,?)
0.575	IN  DEF: ^.layer_0110.pos=(?,?)
0.572	IN  DEF: ^.layer_011.pos=(?,?)
0.569	IN  DEF: ^.layer_011.shape.size=(?,?)
0.567	OUT DEF: ^.color=black
0.565	OUT DEF: ^.layer_0.pos=(?,?)
0.564	OUT DEF: ^.layer_0.shape.size=(?,?)
0.562	OUT DEF: ^.layer_01.pos=(?,?)
0.561	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _001: ^.layer_011
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0110.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.0 + 5786.8 = 5899.8
DL output with Mo: L = 76.4 + 4711.1 = 4787.5
DL input+output M: L = 189.4 + 10497.9 = 10687.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _0110: a point with color blue at (2,4)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
diff: 
delta:
   (117.8 bits)
data: a background with size (16,12) and color black and layers
  _00: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _001: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
  _0: a rectangle with size (6,4) and color yellow and mask ..xx|..xx|xxxx|xxxx|..xx|..xx at (7,3)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,4)
diff: 
delta:
   (72.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _0110: a point with color blue at (2,4)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _0110: a point with color blue at (2,4)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 57aa92db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _0110: a point with color pink at (7,11)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
diff: 
delta: (12,5)=2  (12,6)=3 
   (161.5 bits)
data: a background with size (16,18) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _001: a rectangle with size (1,1) and color red and mask Full at (7,10)
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|..x at (11,6)
  _01: a rectangle with size (3,3) and color pink and mask ..x|xxx|..x at (6,11)
diff: 
delta: (2,2)=2  (12,5)=2 
   (116.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _0110: a point with color red at (7,10)
  _011: a rectangle with size (1,1) and color pink and mask Full at (7,11)
diff: 
delta: (12,5)=2  (12,6)=3 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _0110: a point with color red at (7,10)
  _011: a rectangle with size (1,1) and color red and mask Full at (12,5)
diff: 
delta: (7,11)=6  (12,6)=3 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _0110: a point with color pink at (7,11)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
diff: 
delta: (12,5)=2  (12,6)=3 
! 16 wrong pixels (generated / expected)

TRAIN 57aa92db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _0110: a point with color yellow at (3,3)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
diff: 
delta:
   (130.7 bits)
data: a background with size (17,18) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _001: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _0: a rectangle with size (9,9) and color cyan and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxx...xxx|xxx...xxx|xxx...xxx at (7,6)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,3)
diff: 
delta:
   (134.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _0110: a point with color yellow at (3,3)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
diff: 
delta:
! 68 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _0110: a point with color yellow at (3,3)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
diff: 
delta:
! 68 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _0110: a point with color yellow at (3,3)
  _011: a rectangle with size (3,3) and color blue and mask xxx|xxx|x.x at (2,2)
diff: 
delta:
! 68 wrong pixels (generated / expected)

TRAIN 57aa92db.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _0110: a point with color green at (2,4)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
diff: 
delta: (2,5)=2  (4,14)=2 
   (168.7 bits)
data: a background with size (15,18) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _001: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
  _0: a rectangle with size (6,6) and color yellow and mask ....xx|....xx|xxxxxx|xxxxxx|....xx|....xx at (7,2)
  _01: a rectangle with size (3,3) and color green and mask ..x|xx.|..x at (1,3)
diff: 
delta: (2,5)=2  (4,14)=2 
   (147.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _0110: a point with color green at (2,4)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
diff: 
delta: (2,5)=2  (4,14)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _0110: a point with color green at (2,4)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
diff: 
delta: (2,5)=2  (4,14)=2 
! 26 wrong pixels (generated / expected)

TRAIN 57aa92db.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (4,4) and color red and mask Full at (7,25)
  _0110: a point with color cyan at (2,4)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (3,10)
diff: 
delta: (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,13)=1  (3,14)=1  (3,15)=1  (4,3)=8  (4,4)=8  (4,13)=1  (4,14)=1  (4,15)=1  (5,13)=1  (5,14)=1  (5,15)=1  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 189 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (4,4) and color red and mask Full at (7,25)
  _0110: a point with color cyan at (2,4)
  _011: a rectangle with size (3,3) and color blue and mask Full at (3,13)
diff: 
delta: (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,10)=4  (3,11)=4  (3,12)=4  (4,3)=8  (4,4)=8  (4,10)=4  (4,11)=4  (4,12)=4  (5,10)=4  (5,11)=4  (5,12)=4  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 189 wrong pixels (generated / expected)

TEST 57aa92db.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.9 sec (18.9 sec/task)
bits-train-error = 4711.1 bits (4711.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-267] Checking task 5ad4f10b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 75152.3 = 75161.3
DL output with Mo: L = 9.0 + 2372.5 = 2381.5
DL input+output M: L = 17.9 + 77524.9 = 77542.8

# learning a model for train pairs
2.000	
1.348	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.988	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.969	OUT DEF: ^.color=black
0.954	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.896	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.881	OUT DEF: ^.size=(?,?)
0.813	OUT DEF: ^.size.i=3
0.744	OUT DEF: ^.size.j=3
0.730	OUT DEF: ^.layer_0.pos=(?,?)
0.693	OUT DEF: ^.layer_0.pos.i=0
0.656	OUT DEF: ^.layer_0.pos.j=0
0.641	OUT DEF: ^.layer_0.shape.size=(?,?)
0.573	OUT DEF: ^.layer_0.shape.size.i=3
0.505	OUT DEF: ^.layer_0.shape.size.j=3
0.496	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.493	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.488	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.485	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.484	IN  OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
0.483	IN  DEF: ^.layer_01111.shape.mask=Full
0.482	IN  DEF: ^.color=black
0.482	IN  DEF: ^.size=(?,?)
0.482	IN  DEF: ^.layer_01.pos=(?,?)
0.481	IN  DEF: ^.layer_00.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color ^.layer_0.shape.color and mask ? at (0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size ? and color ? and mask ? at (?,?)
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at (?,?)
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask Full at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 151.6 + 23026.4 = 23178.0
DL output with Mo: L = 49.5 + 361.8 = 411.3
DL input+output M: L = 201.0 + 23388.2 = 23589.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,24) and color black and layers
  _00: a rectangle with size (12,12) and color yellow and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxx....|....xxxx....|....xxxx....|....xxxx....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,3)
  _0: a rectangle with size (1,4) and color cyan and mask Full at (11,19)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,9)
  _011: a rectangle with size (2,3) and color cyan and mask ..x|xx. at (14,15)
  _0111: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,20)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (19,0)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (13,19)
diff: 
delta: (0,23)=8  (2,1)=8  (2,18)=8  (3,7)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,21)=0  (12,17)=8  (14,0)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
   (854.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.x.|xxx at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,24) and color black and layers
  _00: a rectangle with size (12,12) and color yellow and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxx....|....xxxx....|....xxxx....|....xxxx....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,3)
  _0: a rectangle with size (1,4) and color cyan and mask Full at (11,19)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,9)
  _011: a rectangle with size (2,3) and color cyan and mask ..x|xx. at (14,15)
  _0111: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,20)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (19,0)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (13,19)
diff: 
delta: (0,23)=8  (2,1)=8  (2,18)=8  (3,7)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,21)=0  (12,17)=8  (14,0)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
! 3 wrong pixels (generated / expected)

TRAIN 5ad4f10b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,23) and color black and layers
  _00: a rectangle with size (9,9) and color blue and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx......|xxx......|xxx...... at (1,10)
  _0: a rectangle with size (2,5) and color red and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (3,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,15)
  _0111: a rectangle with size (1,2) and color red and mask Full at (12,4)
  _01111: a rectangle with size (2,1) and color red and mask Full at (1,5)
  _011111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,6)
diff: 
delta: (0,2)=2  (1,21)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,22)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
   (803.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,23) and color black and layers
  _00: a rectangle with size (9,9) and color blue and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx......|xxx......|xxx...... at (1,10)
  _0: a rectangle with size (2,5) and color red and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (3,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,15)
  _0111: a rectangle with size (1,2) and color red and mask Full at (12,4)
  _01111: a rectangle with size (2,1) and color red and mask Full at (1,5)
  _011111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,6)
diff: 
delta: (0,2)=2  (1,21)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,22)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
! 5 wrong pixels (generated / expected)

TRAIN 5ad4f10b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,23) and color black and layers
  _00: a rectangle with size (15,15) and color pink and mask .....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (5,2)
  _0: a rectangle with size (2,1) and color green and mask Full at (10,3)
  _01: a rectangle with size (2,1) and color green and mask Full at (17,8)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color green and mask Full at (1,15)
  _011111: a rectangle with size (1,1) and color green and mask Full at (2,0)
diff: 
delta: (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (23,21)=3 
   (644.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|.xx|x.x at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,23) and color black and layers
  _00: a rectangle with size (15,15) and color pink and mask .....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (5,2)
  _0: a rectangle with size (2,1) and color green and mask Full at (10,3)
  _01: a rectangle with size (2,1) and color green and mask Full at (17,8)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color green and mask Full at (1,15)
  _011111: a rectangle with size (1,1) and color green and mask Full at (2,0)
diff: 
delta: (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (23,21)=3 
! 4 wrong pixels (generated / expected)

TRAIN 5ad4f10b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,26) and color black and layers
  _00: a rectangle with size (12,12) and color cyan and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxxxxxx|....xxxxxxxx|....xxxxxxxx|....xxxxxxxx|........xxxx|........xxxx|........xxxx|........xxxx at (4,2)
  _0: a rectangle with size (2,5) and color yellow and mask .x..x|x.xx. at (15,1)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (2,18)
  _011: a rectangle with size (4,2) and color yellow and mask Odd Checkboard at (15,16)
  _0111: a rectangle with size (2,3) and color yellow and mask Odd Checkboard at (6,21)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (9,15)
  _011111: a rectangle with size (3,2) and color yellow and mask x.|x.|.x at (11,1)
diff: 
delta: (0,21)=4  (1,3)=4  (1,10)=4  (1,23)=4  (2,8)=4  (2,13)=4  (3,4)=4  (3,9)=4  (3,12)=4  (4,19)=4  (7,14)=4  (9,24)=4  (12,4)=4  (12,9)=4  (13,25)=4  (14,0)=4  (14,8)=4  (14,19)=4  (15,19)=4  (15,25)=4  (16,9)=4  (16,11)=4  (18,4)=4  (18,13)=4  (18,21)=4  (18,25)=4  (19,8)=4  (19,11)=4  (21,11)=4  (21,14)=4  (21,15)=4  (21,20)=4 
! 4 wrong pixels (generated / expected)

TEST 5ad4f10b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 361.8 bits (361.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-266] Checking task 5bd6f4ac.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 22199.2 = 22208.1
DL output with Mo: L = 9.0 + 3744.8 = 3753.8
DL input+output M: L = 17.9 + 25944.0 = 25961.9

# learning a model for train pairs
2.000	
1.941	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.897	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.850	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.808	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.787	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.771	OUT DEF: ^.color=black
1.758	OUT DEF: ^.size=(?,?)
1.700	OUT DEF: ^.size.i=3
1.642	OUT DEF: ^.size.j=3
1.629	OUT DEF: ^.layer_0.pos=(?,?)
1.601	OUT DEF: ^.layer_0.pos.j=^.layer_0.shape.size.j - 1
1.552	OUT DEF: ^.layer_011.shape.color=yellow
1.524	OUT DEF: ^.layer_0.pos.i=^.layer_01.shape.size.j - 1
1.511	OUT DEF: ^.layer_01.pos=(?,?)
1.498	OUT DEF: ^.layer_011.pos=(?,?)
1.495	IN  DEF: ^.color=black
1.493	IN  DEF: ^.size=(?,?)
1.478	IN  DEF: ^.size.i=9
1.462	IN  DEF: ^.size.j=9
1.460	IN  DEF: ^.layer_0.pos=(?,?)
1.457	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.454	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a point with color ? at (^.layer_01.shape.size.j - 1,^.layer_0.shape.size.j - 1)
  _01: a point with color ? at (?,?)
  _011: a point with color yellow at (?,?)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _00: a point with color ? at ?
  _0: a rectangle with size ? and color ? and mask ? at (?,?)
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 78.2 + 19752.1 = 19830.4
DL output with Mo: L = 90.0 + 2016.3 = 2106.2
DL input+output M: L = 168.2 + 21768.4 = 21936.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,0)
diff: 
delta: (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
   (591.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color brown at (0,0)
  _011: a point with color yellow at (1,0)
diff: 
delta: (0,1)=7# (1,1)=8  (2,0)=4 
   (71.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,0)
diff: 
delta: (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,0)
  _01: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
diff: 
delta: (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! 7 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
  _01: a rectangle with size (3,1) and color orange and mask Full at (4,8)
diff: 
delta: (0,7)=6  (1,1)=4  (1,3)=7# (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
   (670.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,1)
  _01: a point with color cyan at (1,1)
  _011: a point with color yellow at (2,0)
diff: 
delta: (1,2)=1  (2,1)=4  (2,2)=5#
   (71.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (3,1) and color orange and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
diff: 
delta: (0,7)=6  (1,1)=4  (1,3)=7# (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
  _01: a rectangle with size (3,1) and color orange and mask Full at (4,8)
diff: 
delta: (0,7)=6  (1,1)=4  (1,3)=7# (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! 7 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,4)
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
diff: 
delta: (1,3)=7# (1,6)=6  (1,8)=1  (2,1)=3  (2,5)=1  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
   (376.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (1,0)
  _01: a point with color blue at (1,2)
  _011: a point with color yellow at (2,1)
diff: 
delta: (2,0)=9#
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,4)
  _0: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (1,3)=7# (1,6)=6  (1,8)=1  (2,1)=3  (2,5)=1  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,4)
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
diff: 
delta: (1,3)=7# (1,6)=6  (1,8)=1  (2,1)=3  (2,5)=1  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! 5 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
diff: 
delta: (0,8)=4  (1,6)=3  (2,4)=2  (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
   (336.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (1,0)
  _01: a point with color green at (2,2)
  _011: a point with color yellow at (0,2)
diff: 
delta:
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
diff: 
delta: (0,8)=4  (1,6)=3  (2,4)=2  (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! 4 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (3,4) and color brown and mask ...x|..x.|xx.. at (0,5)
  _01: a rectangle with size (2,2) and color brown and mask Full at (7,0)
diff: 
delta: (0,1)=9# (0,4)=1  (0,6)=5# (0,7)=8  (1,0)=2  (1,1)=9# (1,3)=6  (1,5)=8  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,0)=7# (4,1)=7# (4,2)=4  (4,4)=7# (4,6)=9# (5,2)=7# (5,5)=1  (5,6)=5# (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,5)=5# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! 6 wrong pixels (generated / expected)

TEST 5bd6f4ac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 13.2 sec (13.2 sec/task)
bits-train-error = 2016.3 bits (2016.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-265] Checking task 5c0a986e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5346.9 = 5355.9
DL output with Mo: L = 9.0 + 9554.1 = 9563.1
DL input+output M: L = 17.9 + 14901.0 = 14919.0

# learning a model for train pairs
2.000	
1.725	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.434	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.192	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.937	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.876	OUT DEF: ^.size=^.size
0.843	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.817	IN  DEF: ^.layer_0.shape.color=red
0.791	IN  DEF: ^.layer_01.shape.color=blue
0.777	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.762	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.749	IN  DEF: ^.layer_0.shape.mask=Full
0.736	IN  DEF: ^.layer_01.shape.mask=Full
0.727	IN  DEF: ^.color=black
0.721	IN  DEF: ^.size=(?,?)
0.672	IN  DEF: ^.size.i=10
0.622	IN  DEF: ^.size.j=10
0.616	IN  DEF: ^.layer_0.pos=(?,?)
0.609	IN  DEF: ^.layer_0.shape.size=(?,?)
0.585	IN  DEF: ^.layer_0.shape.size.i=2
0.561	IN  DEF: ^.layer_0.shape.size.j=2
0.555	IN  DEF: ^.layer_01.pos=(?,?)
0.548	IN  DEF: ^.layer_01.shape.size=(?,?)
0.524	IN  DEF: ^.layer_01.shape.size.i=2
0.500	IN  DEF: ^.layer_01.shape.size.j=2
0.495	OUT DEF: ^.color=black
0.492	OUT DEF: ^.layer_0.shape.size=(?,?)
0.470	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j + 2
0.449	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.pos.j + 2
0.445	OUT DEF: ^.layer_01.pos=(?,?)
0.431	OUT DEF: ^.layer_01.pos.j=(0)
0.417	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i - ^.layer_01.pos.j
0.414	OUT DEF: ^.layer_01.shape.size=(?,?)
0.392	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.pos.j + 2
0.371	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.pos.j + 2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_01.pos.j + 2,^.layer_01.pos.j + 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_01.pos.j + 2,^.layer_01.pos.j + 2) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i - ^.layer_01.pos.j,(0))
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (?,?)
  _01: a rectangle with size (2,2) and color blue and mask Full at (?,?)

DL input  with Mi: L = 85.3 + 557.3 = 642.5
DL output with Mo: L = 116.7 + 2283.5 = 2400.3
DL input+output M: L = 202.0 + 2840.8 = 3042.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..x.|...x at (6,4)
  _01: a rectangle with size (4,4) and color blue and mask x...|.x..|..xx|..xx at (0,0)
diff: 
delta:
   (38.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (6,4)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 48 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (7,6)
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xx......|xx......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,2)
  _01: a rectangle with size (8,8) and color blue and mask x.xx....|.x..x...|..x..x..|...x..x.|....x..x|.....x..|......xx|......xx at (1,0)
diff: 
delta:
   (134.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (7,6)
diff: 
delta:
! 72 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (5,3)
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask xx...|xx...|..x..|...x.|....x at (2,5)
  _01: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...xx|...xx at (2,0)
diff: 
delta:
   (56.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (5,3)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (3,6)
  _01: a rectangle with size (2,2) and color red and mask Full at (5,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 30 wrong pixels (generated / expected)

TEST 5c0a986e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 2283.5 bits (2283.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-264] Checking task 5c2c9af4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2802.6 = 2811.6
DL output with Mo: L = 9.0 + 114957.2 = 114966.1
DL input+output M: L = 17.9 + 117759.8 = 117777.7

# learning a model for train pairs
2.000	
1.723	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.541	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.396	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.272	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.200	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.157	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.110	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.054	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.029	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
1.009	OUT OBJECT at ^.layer_0111111: ^.layer_0.shape at ?
1.002	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
  _0111111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?

DL input  with Mi: L = 46.8 + 2354.6 = 2401.5
DL output with Mo: L = 130.4 + 16898.8 = 17029.1
DL input+output M: L = 177.2 + 19253.4 = 19430.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (2,11)
  _01: a point with color cyan at (5,14)
  _011: a point with color cyan at (8,17)
diff: 
delta:
   (78.5 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (18,21) and color cyan and mask x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|xxxxxxxxxxxxxxxxxxxxx at (0,2)
  _01: a rectangle with size (12,13) and color cyan and mask x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|xxxxxxxxxxxxx at (0,8)
  _011: a rectangle with size (7,7) and color cyan and mask Border at (2,11)
  _0111: a rectangle with size (1,23) and color cyan and mask Full at (20,0)
  _01111: a rectangle with size (1,18) and color cyan and mask Full at (14,5)
  _011111: a rectangle with size (15,1) and color cyan and mask Full at (0,5)
  _0111111: a point with color cyan at (5,14)
diff: 
delta:
   (776.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (2,11)
  _01: a point with color cyan at (5,14)
  _011: a point with color cyan at (8,17)
diff: 
delta:
! 157 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a point with color red at (11,13)
  _01: a point with color red at (13,11)
  _011: a point with color red at (15,9)
diff: 
delta:
   (78.5 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask Border at (5,3)
  _01: a rectangle with size (20,21) and color red and mask xxxxxxxxxxxxxxxxxxxxx|x...................x|x.xxxxxxxxxxxxxxxxx.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.x...............x.x|x.xxxxxxxxxxxxxxxxx.x|x...................x at (3,1)
  _011: a rectangle with size (13,13) and color red and mask Border at (7,5)
  _0111: a rectangle with size (9,9) and color red and mask Border at (9,7)
  _01111: a rectangle with size (1,23) and color red and mask Full at (1,0)
  _011111: a rectangle with size (5,5) and color red and mask Border at (11,9)
  _0111111: a point with color red at (13,11)
diff: 
delta:
   (679.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color red at (11,13)
  _01: a point with color red at (13,11)
  _011: a point with color red at (15,9)
diff: 
delta:
! 245 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a point with color green at (4,12)
  _01: a point with color green at (8,8)
  _011: a point with color green at (12,4)
diff: 
delta:
   (78.5 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (17,17) and color green and mask Border at (0,0)
  _01: a rectangle with size (1,21) and color green and mask Full at (20,0)
  _011: a rectangle with size (21,1) and color green and mask Full at (0,20)
  _0111: a rectangle with size (1,9) and color green and mask Full at (4,4)
  _01111: a rectangle with size (1,9) and color green and mask Full at (12,4)
  _011111: a rectangle with size (9,9) and color green and mask Border at (4,4)
  _0111111: a point with color green at (8,8)
diff: 
delta:
   (234.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color green at (4,12)
  _01: a point with color green at (8,8)
  _011: a point with color green at (12,4)
diff: 
delta:
! 139 wrong pixels (generated / expected)

TRAIN 5c2c9af4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color black and layers
  _0: a point with color yellow at (12,7)
  _01: a point with color yellow at (18,13)
  _011: a point with color yellow at (24,19)
diff: 
delta:
! 146 wrong pixels (generated / expected)

TEST 5c2c9af4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.4 sec (24.4 sec/task)
bits-train-error = 16898.8 bits (16898.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-263] Checking task 5daaa586.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 48326.7 = 48335.7
DL output with Mo: L = 9.0 + 30217.5 = 30226.5
DL input+output M: L = 17.9 + 78544.2 = 78562.2

# learning a model for train pairs
2.000	
1.638	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.445	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.266	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.101	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.939	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.788	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.634	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.514	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.503	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.497	IN  OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 122.2 + 13626.1 = 13748.2
DL output with Mo: L = 85.3 + 6341.5 = 6426.8
DL input+output M: L = 207.5 + 19967.6 = 20175.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (22,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (22,1) and color cyan and mask Full at (0,16)
  _011: a rectangle with size (1,22) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,22) and color red and mask Full at (15,0)
  _01111: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011111: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,18)
diff: 
delta: (0,9)=2  (5,15)=2  (6,3)=2  (7,9)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
   (509.0 bits)
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (11,10) and color red and mask .........x|.........x|...x.....x|...x....xx|...x....xx|...x....xx|...x....xx|.x.x....xx|.x.x....xx|xx.x....xx|xxxxxxxxxx at (4,1)
  _01: a rectangle with size (15,1) and color green and mask Full at (0,0)
  _011: a rectangle with size (15,1) and color cyan and mask Full at (0,11)
  _0111: a rectangle with size (1,10) and color blue and mask Full at (0,1)
diff: 
delta:
   (266.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (22,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (22,1) and color cyan and mask Full at (0,16)
  _011: a rectangle with size (1,22) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,22) and color red and mask Full at (15,0)
  _01111: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011111: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,18)
diff: 
delta: (0,9)=2  (5,15)=2  (6,3)=2  (7,9)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
! size mismatch, 10x10 instead of 15x12

TRAIN 5daaa586.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,12) and color pink and mask Full at (9,0)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,2)
  _0111: a rectangle with size (1,12) and color cyan and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (5,6)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (10,6)
diff: 
delta: (5,11)=8  (6,3)=8  (8,7)=8  (8,11)=8  (11,1)=8 
   (307.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (7,6) and color cyan and mask xxxxxx|x..xx.|x..xx.|x..xx.|x..xx.|....x.|....x. at (0,1)
  _01: a rectangle with size (8,1) and color blue and mask Full at (0,7)
  _011: a rectangle with size (1,7) and color pink and mask Full at (7,0)
  _0111: a rectangle with size (7,1) and color yellow and mask Full at (0,0)
diff: 
delta:
   (181.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,12) and color pink and mask Full at (9,0)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,2)
  _0111: a rectangle with size (1,12) and color cyan and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (5,6)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (10,6)
diff: 
delta: (5,11)=8  (6,3)=8  (8,7)=8  (8,11)=8  (11,1)=8 
! size mismatch, 10x10 instead of 8x8

TRAIN 5daaa586.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (14,3) and color yellow and mask .x.|.x.|.x.|.x.|xxx|.x.|.x.|.x.|xx.|xx.|.x.|xx.|.x.|.x. at (0,10)
  _01: a rectangle with size (14,1) and color green and mask Full at (0,3)
  _011: a rectangle with size (1,15) and color red and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color cyan and mask Full at (10,0)
  _01111: a rectangle with size (3,2) and color yellow and mask Even Checkboard at (1,5)
  _011111: a rectangle with size (1,2) and color yellow and mask Full at (6,4)
diff: 
delta: (0,2)=4  (0,7)=4  (4,14)=4  (6,0)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
   (546.1 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (6,8) and color yellow and mask .......x|xxxxxxxx|.......x|....xxxx|..xxxxxx|.......x at (0,1)
  _01: a rectangle with size (1,7) and color red and mask Full at (0,1)
  _011: a rectangle with size (1,7) and color cyan and mask Full at (5,1)
  _0111: a rectangle with size (6,1) and color green and mask Full at (0,0)
diff: 
delta:
   (185.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (14,3) and color yellow and mask .x.|.x.|.x.|.x.|xxx|.x.|.x.|.x.|xx.|xx.|.x.|xx.|.x.|.x. at (0,10)
  _01: a rectangle with size (14,1) and color green and mask Full at (0,3)
  _011: a rectangle with size (1,15) and color red and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color cyan and mask Full at (10,0)
  _01111: a rectangle with size (3,2) and color yellow and mask Even Checkboard at (1,5)
  _011111: a rectangle with size (1,2) and color yellow and mask Full at (6,4)
diff: 
delta: (0,2)=4  (0,7)=4  (4,14)=4  (6,0)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
! size mismatch, 10x10 instead of 6x9

TRAIN 5daaa586.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
  _0: a rectangle with size (1,15) and color cyan and mask Full at (13,0)
  _01: a rectangle with size (16,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (16,1) and color red and mask Full at (0,12)
  _0111: a rectangle with size (1,15) and color green and mask Full at (2,0)
  _01111: a rectangle with size (1,3) and color blue and mask Full at (10,5)
  _011111: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (7,9)
diff: 
delta: (0,5)=1  (0,9)=1  (1,7)=1  (3,0)=1  (4,5)=1  (4,10)=1  (5,0)=1  (6,8)=1  (6,14)=1  (9,1)=1  (9,4)=1  (10,6)=0  (11,1)=1  (14,4)=1  (15,6)=1 
! size mismatch, 10x10 instead of 12x10

TEST 5daaa586.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.6 sec (15.6 sec/task)
bits-train-error = 6341.5 bits (6341.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-262] Checking task 60b61512.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5200.6 = 5209.5
DL output with Mo: L = 9.0 + 7265.6 = 7274.6
DL input+output M: L = 17.9 + 12466.2 = 12484.1

# learning a model for train pairs
2.000	
1.647	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.315	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.056	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.800	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.694	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.642	OUT DEF: ^.size=^.size
0.613	OUT DEF: ^.layer_0=^.layer_0
0.584	OUT DEF: ^.layer_01=^.layer_01
0.567	IN  DEF: ^.layer_0.shape.color=yellow
0.549	IN  DEF: ^.layer_01.shape.color=yellow
0.537	OUT DEF: ^.layer_011.shape.color=orange
0.524	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.512	OUT DEF: ^.layer_0111.shape.color=orange
0.505	OUT DEF: ^.layer_011.shape.mask=Full
0.499	IN  DEF: ^.color=black
0.495	OUT DEF: ^.color=black
0.491	IN  DEF: ^.size=(?,?)
0.459	IN  DEF: ^.size.i=9
0.426	IN  DEF: ^.size.j=9
0.422	IN  DEF: ^.layer_0.pos=(?,?)
0.405	IN  DEF: ^.layer_0.pos.j=(0)
0.388	IN  DEF: ^.layer_0.pos.i=1
0.384	IN  DEF: ^.layer_0.shape.size=(?,?)
0.363	IN  DEF: ^.layer_0.shape.size.i=3
0.343	IN  DEF: ^.layer_0.shape.size.j=3
0.338	IN  DEF: ^.layer_01.pos=(?,?)
0.321	IN  DEF: ^.layer_01.pos.i=4
0.304	IN  DEF: ^.layer_01.pos.j=5
0.300	IN  DEF: ^.layer_01.shape.size=(?,?)
0.279	IN  DEF: ^.layer_01.shape.size.i=3
0.259	IN  DEF: ^.layer_01.shape.size.j=3
0.256	OUT DEF: ^.layer_011.pos=(?,?)
0.253	OUT DEF: ^.layer_011.shape.size=(?,?)
0.241	OUT DEF: ^.layer_011.shape.size.i=2
0.238	OUT DEF: ^.layer_0111.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (2,?) and color orange and mask Full at (?,?)
  _0111: a point with color orange at (?,?)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ? at (1,(0))
  _01: a rectangle with size (3,3) and color yellow and mask ? at (4,5)

DL input  with Mi: L = 95.4 + 482.4 = 577.7
DL output with Mo: L = 64.2 + 861.1 = 925.2
DL input+output M: L = 159.5 + 1343.4 = 1502.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
diff: 
delta:
   (24.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
  _011: a rectangle with size (2,2) and color orange and mask Full at (2,0)
  _0111: a point with color orange at (4,7)
diff: 
delta: (5,5)=7# (6,6)=7#
   (62.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 60b61512.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta:
   (24.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
  _011: a rectangle with size (2,3) and color orange and mask Full at (5,5)
  _0111: a point with color orange at (2,0)
diff: 
delta:
   (23.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta: (2,0)=0 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,5)
diff:   ^.layer_01.shape.size.i
delta: (5,6)=4  (6,6)=4 
! 9 wrong pixels (generated / expected)

TRAIN 60b61512.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (6,5)
diff:   ^.layer_01.pos.i  ^.layer_0.pos.j
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.. at (1,2)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (7,5)
diff:   ^.layer_01.shape.size.i  ^.layer_01.pos.i  ^.layer_0.pos.j
delta: (6,5)=4  (8,6)=4 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (6,5)
diff:   ^.layer_01.pos.i  ^.layer_0.pos.j
delta: (6,6)=0  (6,7)=0  (8,5)=0  (8,7)=0 
! 13 wrong pixels (generated / expected)

TEST 60b61512.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.7 sec (7.7 sec/task)
bits-train-error = 861.1 bits (861.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-261] Checking task 6150a2bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1985.3 = 1994.2
DL output with Mo: L = 9.0 + 1985.3 = 1994.2
DL input+output M: L = 17.9 + 3970.6 = 3988.5

# learning a model for train pairs
2.000	
1.807	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.613	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.448	OUT DEF: ^.layer_0.shape=^.layer_0.shape
1.324	OUT DEF: ^.size=^.size
1.284	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.237	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.197	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.149	OUT DEF: ^.layer_01.shape=^.layer_01.shape
1.103	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.055	OUT DEF: ^.layer_011.shape=^.layer_011.shape
1.032	IN  DEF: ^.layer_0.shape.mask=Full
1.016	IN  DEF: ^.color=black
1.000	OUT DEF: ^.color=black
0.990	OUT DEF: ^.layer_0.pos=(?,?)
0.962	OUT DEF: ^.layer_0.pos.j=1
0.939	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i + 1
0.928	OUT DEF: ^.layer_01.pos=(?,?)
0.900	OUT DEF: ^.layer_01.pos.j=^.layer_011.pos.j
0.872	OUT DEF: ^.layer_01.pos.i=^.layer_0.shape.size.i
0.861	OUT DEF: ^.layer_011.pos=(?,?)
0.833	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j
0.806	OUT DEF: ^.layer_011.pos.i=^.layer_011.pos.j
0.795	IN  DEF: ^.size=(?,?)
0.741	IN  DEF: ^.size.i=3
0.687	IN  DEF: ^.size.j=3
0.676	IN  DEF: ^.layer_0.pos=(?,?)
0.647	IN  DEF: ^.layer_0.pos.i=0
0.617	IN  DEF: ^.layer_0.pos.j=0
0.606	IN  DEF: ^.layer_0.shape.size=(?,?)
0.563	IN  DEF: ^.layer_0.shape.size.j=2
0.552	IN  DEF: ^.layer_01.pos=(?,?)
0.542	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_01.pos.i + 1,1)
  _01: ^.layer_01.shape at (^.layer_0.shape.size.i,^.layer_011.pos.j)
  _011: ^.layer_011.shape at (^.layer_011.pos.j,^.layer_01.pos.j)
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,2) and color ? and mask Full at (0,0)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 78.3 + 751.9 = 830.2
DL output with Mo: L = 75.5 + 174.2 = 249.8
DL input+output M: L = 153.9 + 926.1 = 1080.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a point with color cyan at (0,2)
  _011: a point with color grey at (2,0)
diff: 
delta: (1,1)=7#
   (47.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
  _01: a point with color cyan at (2,0)
  _011: a point with color grey at (0,2)
diff: 
delta: (1,1)=7#
   (17.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a point with color cyan at (0,2)
  _011: a point with color grey at (2,0)
diff: 
delta: (1,1)=7#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a point with color grey at (2,0)
  _011: a point with color cyan at (0,2)
diff: 
delta: (1,1)=7#
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (0,0)
  _01: a point with color cyan at (0,2)
  _011: a point with color orange at (1,1)
diff:   ^.layer_0.shape.mask
delta: (2,0)=5#
! 4 wrong pixels (generated / expected)

TRAIN 6150a2bd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
  _01: a point with color blue at (1,0)
  _011: a point with color red at (0,2)
diff: 
delta:
   (27.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (2,1)
  _01: a point with color blue at (1,2)
  _011: a point with color red at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
  _01: a point with color red at (0,2)
  _011: a point with color blue at (1,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
  _01: a point with color blue at (1,0)
  _011: a point with color red at (0,2)
diff: 
delta:
correct output grid

TRAIN 6150a2bd.json/2: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01: a point with color green at (0,1)
  _011: a point with color grey at (0,2)
diff:   ^.layer_0.shape.size.j
delta: (1,1)=8  (2,0)=4 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01: a point with color green at (0,1)
  _011: a point with color cyan at (1,1)
diff:   ^.layer_0.shape.size.j
delta: (0,2)=5# (2,0)=4 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01: a point with color grey at (0,2)
  _011: a point with color green at (0,1)
diff:   ^.layer_0.shape.size.j
delta: (1,1)=8  (2,0)=4 
! 6 wrong pixels (generated / expected)

TEST 6150a2bd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.3 sec (4.3 sec/task)
bits-train-error = 174.2 bits (174.2 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-260] Checking task 623ea044.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1287.6 = 1296.6
DL output with Mo: L = 9.0 + 11291.4 = 11300.4
DL input+output M: L = 17.9 + 12579.0 = 12596.9

# learning a model for train pairs
2.000	
1.571	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.451	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.397	OUT DEF: ^.size=^.size
1.362	IN  DEF: ^.color=black
1.335	IN  DEF: ^.size=(?,?)
1.308	IN  DEF: ^.layer_0.pos=(?,?)
1.296	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.292	OUT DEF: ^.color=black
1.288	OUT DEF: ^.layer_0.pos=(?,?)
1.276	OUT DEF: ^.layer_0.pos.i=(0)
1.264	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.i - 3
1.261	OUT DEF: ^.layer_0.shape.size=(?,?)
1.236	OUT DEF: ^.layer_0.shape.size.i=^.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color ^.layer_0.shape.color and mask ? at ((0),^.layer_0.pos.i - 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 995.2 = 1024.9
DL output with Mo: L = 46.9 + 4985.3 = 5032.2
DL input+output M: L = 76.6 + 5980.5 = 6057.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (3,3)
diff: 
delta:
   (35.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,15) and color red and mask x.....x........|.x...x.........|..x.x..........|...x...........|..x.x..........|.x...x.........|x.....x........|.......x.......|........x......|.........x.....|..........x....|...........x...|............x..|.............x.|..............x at (0,0)
diff: 
delta:
   (238.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (3,3)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN 623ea044.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (5,11)
diff: 
delta:
   (35.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,13) and color orange and mask ....x........|.....x.......|......x.....x|.......x...x.|........x.x..|.........x...|........x.x..|.......x...x.|......x.....x|.....x.......|....x........|...x.........|..x..........|.x...........|x............ at (0,2)
diff: 
delta:
   (207.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (5,11)
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN 623ea044.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta:
   (28.8 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,6) and color cyan and mask .....x|x...x.|.x.x..|..x...|.x.x..|x...x.|.....x at (0,0)
diff: 
delta:
   (52.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 623ea044.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a point with color pink at (7,12)
diff: 
delta:
! 53 wrong pixels (generated / expected)

TEST 623ea044.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 4985.3 bits (4985.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-259] Checking task 62c24649.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3329.0 = 3338.0
DL output with Mo: L = 9.0 + 12784.6 = 12793.6
DL input+output M: L = 17.9 + 16113.6 = 16131.6

# learning a model for train pairs
2.000	
1.753	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.628	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.565	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.483	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.424	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.383	IN  DEF: ^.layer_0.shape.color=green
1.342	IN  DEF: ^.layer_01.shape.color=red
1.300	IN  DEF: ^.layer_011.shape.color=blue
1.280	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.259	IN  DEF: ^.layer_01.shape.mask=Full
1.246	IN  DEF: ^.color=black
1.235	IN  DEF: ^.size=(?,?)
1.186	IN  DEF: ^.size.i=3
1.138	IN  DEF: ^.size.j=3
1.127	IN  DEF: ^.layer_00.pos=(?,?)
1.101	IN  DEF: ^.layer_00.pos.j=0
1.091	IN  DEF: ^.layer_0.pos=(?,?)
1.080	IN  DEF: ^.layer_0.shape.size=(?,?)
1.070	IN  DEF: ^.layer_01.pos=(?,?)
1.043	IN  DEF: ^.layer_01.pos.j=1
1.033	IN  DEF: ^.layer_01.shape.size=(?,?)
1.012	IN  DEF: ^.layer_01.shape.size.i=1
1.001	IN  DEF: ^.layer_011.pos=(?,?)
0.996	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.993	OUT DEF: ^.size=(?,?)
0.976	OUT DEF: ^.size.i=6
0.958	OUT DEF: ^.size.j=6
0.956	OUT DEF: ^.layer_0.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (6,6) and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at (?,?)
  _01: a rectangle with size ? and color ? and mask ^.layer_01.shape.mask at ?
WHERE (Mi)
a background with size (3,3) and color black and layers
  _00: a point with color ? at (?,0)
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (1,?) and color red and mask Full at (?,1)
  _011: a point with color blue at (?,?)

DL input  with Mi: L = 108.2 + 1136.1 = 1244.3
DL output with Mo: L = 64.5 + 7393.0 = 7457.6
DL input+output M: L = 172.7 + 8529.1 = 8701.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (2,0)
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _011: a point with color blue at (2,1)
diff: 
delta:
   (36.5 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (2,6) and color blue and mask Full at (2,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
diff: 
delta: (1,0)=0  (1,5)=0  (2,2)=0  (2,3)=0  (3,2)=0  (3,3)=0  (4,0)=0  (4,5)=0 
   (209.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (2,0)
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _011: a point with color blue at (2,1)
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN 62c24649.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (1,0)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,1)
  _011: a point with color blue at (0,2)
diff: 
delta:
   (37.4 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (2,4) and color red and mask Full at (2,1)
  _01: a rectangle with size (6,2) and color blue and mask Full at (0,2)
diff: 
delta: (1,0)=1  (1,2)=0  (1,3)=0  (1,5)=1  (2,0)=0  (2,5)=0  (3,0)=0  (3,5)=0  (4,0)=1  (4,2)=0  (4,3)=0  (4,5)=1 
   (278.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (1,0)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,1)
  _011: a point with color blue at (0,2)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN 62c24649.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _011: a point with color blue at (0,1)
diff: 
delta:
   (39.7 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|x..x|x..x|.xx. at (1,1)
  _01: a rectangle with size (1,4) and color red and mask Full at (1,1)
diff: 
delta: (0,0)=2  (0,1)=1  (0,4)=1  (0,5)=2  (4,1)=2  (4,4)=2  (5,0)=2  (5,1)=1  (5,4)=1  (5,5)=2 
   (251.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _011: a point with color blue at (0,1)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 62c24649.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _011: a point with color blue at (0,1)
diff:   ^.layer_01.pos.j
delta:
! 25 wrong pixels (generated / expected)

TEST 62c24649.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.5 sec (25.5 sec/task)
bits-train-error = 7393.0 bits (7393.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-258] Checking task 63613498.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15455.7 = 15464.7
DL output with Mo: L = 9.0 + 15455.7 = 15464.7
DL input+output M: L = 17.9 + 30911.4 = 30929.3

# learning a model for train pairs
2.000	
1.837	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.673	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.506	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.412	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.285	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
1.203	IN  OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
1.080	OUT OBJECT at ^.layer_001: ^.layer_001.shape at ?
0.998	IN  OBJECT at ^.layer_0011: a rectangle with size ? and color ? and mask ? at ?
0.916	IN  OBJECT at ^.layer_0010: a rectangle with size ? and color ? and mask ? at ?
0.786	OUT OBJECT at ^.layer_0010: ^.layer_0010.shape at ?
0.748	OUT DEF: ^.size=^.size
0.713	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.692	OUT DEF: ^.layer_00=^.layer_00
0.671	OUT DEF: ^.layer_0010=^.layer_0010
0.650	OUT DEF: ^.layer_001=^.layer_001
0.630	OUT DEF: ^.layer_01=^.layer_0
0.594	IN  DEF: ^.layer_00.shape.mask=...x|...x|...x|xxxx
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00
  _0010: ^.layer_0010
  _001: ^.layer_001
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a rectangle with size ? and color ? and mask ...x|...x|...x|xxxx at ?
  _0010: a rectangle with size ? and color ? and mask ? at ?
  _001: a rectangle with size ? and color ? and mask ? at ?
  _0011: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 119.5 + 7084.5 = 7204.0
DL output with Mo: L = 70.0 + 1906.8 = 1976.8
DL input+output M: L = 189.5 + 8991.3 = 9180.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _001: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0011: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
  _0: a rectangle with size (3,3) and color orange and mask .x.|xxx|.x. at (0,6)
diff: 
delta: (6,0)=7# (6,1)=7# (6,2)=7# (7,2)=7#
   (287.3 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _001: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0: a rectangle with size (3,3) and color grey and mask xx.|.xx|..x at (5,5)
  _01: a rectangle with size (3,3) and color orange and mask .x.|xxx|.x. at (0,6)
  _011: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
diff: 
delta:
   (76.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _001: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0011: a rectangle with size (3,3) and color orange and mask .x.|xxx|.x. at (0,6)
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
diff: 
delta: (6,0)=7# (6,1)=7# (6,2)=7# (7,2)=7#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _001: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0011: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
  _0: a rectangle with size (3,3) and color orange and mask .x.|xxx|.x. at (0,6)
diff: 
delta: (6,0)=7# (6,1)=7# (6,2)=7# (7,2)=7#
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _001: a rectangle with size (3,3) and color orange and mask .x.|xxx|.x. at (0,6)
  _0011: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
diff: 
delta: (6,0)=7# (6,1)=7# (6,2)=7# (7,2)=7#
! 15 wrong pixels (generated / expected)

TRAIN 63613498.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _001: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0011: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
diff: 
delta: (7,8)=9# (8,7)=9# (8,8)=9#
   (229.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _001: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _01: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (7,7)
diff: 
delta:
   (60.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _001: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0011: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
diff: 
delta: (7,8)=9# (8,7)=9# (8,8)=9#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,2) and color cyan and mask Full at (8,0)
  _001: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0011: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
diff: 
delta: (7,8)=9# (8,7)=9# (8,8)=9#
! 7 wrong pixels (generated / expected)

TRAIN 63613498.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _001: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0011: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
diff: 
delta:
   (191.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _001: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,6)
  _01: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (53.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _001: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0011: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _001: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0011: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _0: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _001: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0011: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 63613498.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _001: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0011: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
  _0: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (0,7)
diff: 
delta: (3,5)=3  (4,5)=3  (5,5)=3  (5,6)=3  (6,8)=4  (7,8)=4  (8,8)=4 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _001: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0011: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
  _0: a rectangle with size (3,2) and color green and mask x.|x.|xx at (3,5)
diff: 
delta: (0,7)=6  (1,7)=6  (1,8)=6  (2,7)=6  (6,8)=4  (7,8)=4  (8,8)=4 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _0010: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _001: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0011: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (0,7)
  _0: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
diff: 
delta: (3,5)=3  (4,5)=3  (5,5)=3  (5,6)=3  (6,8)=4  (7,8)=4  (8,8)=4 
! 17 wrong pixels (generated / expected)

TEST 63613498.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.8 sec (26.8 sec/task)
bits-train-error = 1906.8 bits (1906.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-257] Checking task 6430c8c4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14825.0 = 14833.9
DL output with Mo: L = 9.0 + 3733.8 = 3742.8
DL input+output M: L = 17.9 + 18558.8 = 18576.7

# learning a model for train pairs
2.000	
1.721	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.510	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.321	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.172	OUT DEF: ^.size=^.layer_0.shape.size
1.069	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.020	OUT DEF: ^.layer_0.shape.color=green
1.003	OUT DEF: ^.color=black
0.991	OUT DEF: ^.layer_0.pos=(?,?)
0.955	OUT DEF: ^.layer_0.pos.i=(0)
0.923	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.i - ^.layer_0.shape.size.j
0.911	OUT DEF: ^.layer_0.shape.size=(?,?)
0.907	IN  DEF: ^.layer_0.pos=(?,?)
0.898	IN  DEF: ^.layer_0.pos.j=(0)
0.894	IN  DEF: ^.color=black
0.891	IN  DEF: ^.size=(?,?)
0.868	IN  DEF: ^.size.i=9
0.851	IN  DEF: ^.size.j=4
0.848	IN  DEF: ^.layer_0.shape.size=(?,?)
0.831	IN  DEF: ^.layer_0.shape.size.i=4
0.814	IN  DEF: ^.layer_0.shape.size.j=4
0.811	IN  DEF: ^.layer_01.pos=(?,?)
0.802	IN  DEF: ^.layer_01.pos.j=0
0.799	IN  DEF: ^.layer_01.shape.size=(?,?)
0.782	IN  DEF: ^.layer_01.shape.size.j=4
0.779	IN  DEF: ^.layer_011.pos=(?,?)
0.776	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at ((0),^.layer_01.pos.i - ^.layer_0.shape.size.j)
WHERE (Mi)
a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color ? and mask ? at (?,(0))
  _01: a rectangle with size (?,4) and color ? and mask ? at (?,0)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.2 + 4238.5 = 4353.8
DL output with Mo: L = 53.1 + 1751.0 = 1804.1
DL input+output M: L = 168.3 + 5989.6 = 6157.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (81.3 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,2)
diff: 
delta: (1,0)=3 
   (25.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
diff: 
delta:
   (86.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask .x|x.|x. at (0,0)
diff: 
delta: (2,3)=3  (3,3)=3 
   (54.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _01: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
diff: 
delta: (8,3)=2 
   (100.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (0,0)
diff: 
delta: (2,2)=3  (2,3)=3  (3,0)=3 
   (68.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
diff: 
delta: (8,3)=2 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _011: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
diff:   ^.layer_0.shape.size.i
delta: (8,3)=2 
! size mismatch, 1x4 instead of 4x4
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
  _01: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta: (8,3)=2 
! size mismatch, 4x3 instead of 4x4

TRAIN 6430c8c4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (5,2)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
   (155.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask .x.|xx.|.x.|..x at (0,0)
diff: 
delta:
   (26.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (5,2)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
! 3 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,4) and color red and mask x.xx|.x.. at (7,0)
diff: 
delta: (3,2)=7# (5,1)=2  (5,2)=2  (5,3)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _01: a rectangle with size (2,4) and color red and mask x.xx|.x.. at (7,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (3,2)=7# (5,1)=2  (5,2)=2  (5,3)=2 
! 5 wrong pixels (generated / expected)

TEST 6430c8c4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 1751.0 bits (1751.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-256] Checking task 6455b5f5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 35044.8 = 35053.8
DL output with Mo: L = 9.0 + 94989.8 = 94998.8
DL input+output M: L = 17.9 + 130034.6 = 130052.5

# learning a model for train pairs
2.000	
1.299	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.755	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.402	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.357	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.348	OUT DEF: ^.size=^.size
0.343	OUT DEF: ^.layer_00=^.layer_0
0.338	IN  DEF: ^.layer_0.shape.color=red
0.335	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.333	OUT DEF: ^.layer_0.shape.color=blue
0.331	OUT DEF: ^.layer_01.shape.color=cyan
0.330	IN  DEF: ^.color=black
0.328	IN  DEF: ^.size=(?,?)
0.327	IN  DEF: ^.layer_0.pos=(?,?)
0.321	IN  DEF: ^.layer_0.pos.j=(0)
0.315	IN  DEF: ^.layer_0.pos.i=(0)
0.314	IN  DEF: ^.layer_0.shape.size=(?,?)
0.313	OUT DEF: ^.layer_0.shape.mask=Full
0.312	OUT DEF: ^.layer_01.shape.mask=Full
0.311	OUT DEF: ^.layer_011.shape.mask=Full
0.310	OUT DEF: ^.color=black
0.310	OUT DEF: ^.layer_0.pos=(?,?)
0.309	OUT DEF: ^.layer_0.shape.size=(?,?)
0.309	OUT DEF: ^.layer_01.pos=(?,?)
0.307	OUT DEF: ^.layer_01.pos.i=(0)
0.306	OUT DEF: ^.layer_01.shape.size=(?,?)
0.306	OUT DEF: ^.layer_011.pos=(?,?)
0.305	OUT DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at ((0),?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at ((0),(0))

DL input  with Mi: L = 43.3 + 9639.7 = 9683.0
DL output with Mo: L = 95.4 + 2653.1 = 2748.5
DL input+output M: L = 138.7 + 12292.9 = 12431.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
diff: 
delta:
   (277.8 bits)
data: a background with size (18,13) and color black and layers
  _00: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
  _0: a rectangle with size (8,10) and color blue and mask Full at (10,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (8,12)
diff: 
delta:
   (57.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
diff: 
delta:
! 82 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
diff: 
delta:
   (184.0 bits)
data: a background with size (11,13) and color black and layers
  _00: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
  _0: a rectangle with size (9,8) and color blue and mask Full at (2,5)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (0,5)
  _011: a rectangle with size (5,4) and color black and mask Full at (0,0)
diff: 
delta:
   (70.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,1) and color red and mask Full at (0,4)
diff:   ^.layer_0.pos.j
delta: (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=2  (1,12)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2 
! 96 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,9) and color red and mask Full at (1,4)
diff:   ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (0,4)=2  (2,4)=2  (3,4)=2  (4,4)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (6,4)=2  (7,4)=2  (8,4)=2  (9,4)=2  (10,4)=2 
! 98 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
diff: 
delta:
   (218.2 bits)
data: a background with size (11,16) and color black and layers
  _00: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
  _0: a rectangle with size (7,8) and color blue and mask Full at (0,8)
  _01: a rectangle with size (5,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,2) and color cyan and mask Full at (8,8)
diff: 
delta:
   (68.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
diff: 
delta:
! 78 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (11,1) and color red and mask Full at (0,7)
diff:   ^.layer_0.pos.j
delta: (0,3)=2  (1,3)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (3,3)=2  (4,3)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (7,8)=2  (7,9)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,14)=2  (7,15)=2  (8,10)=2  (9,10)=2  (10,10)=2 
! 104 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (1,9) and color red and mask Full at (7,7)
diff:   ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (0,3)=2  (0,7)=2  (1,3)=2  (1,7)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (3,3)=2  (3,7)=2  (4,3)=2  (4,7)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=2  (6,7)=2  (8,7)=2  (8,10)=2  (9,7)=2  (9,10)=2  (10,7)=2  (10,10)=2 
! 106 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
diff: 
delta:
   (284.0 bits)
data: a background with size (15,16) and color black and layers
  _00: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
  _0: a rectangle with size (10,9) and color blue and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color cyan and mask Full at (0,13)
  _011: a rectangle with size (4,2) and color black and mask Full at (5,0)
diff: 
delta:
   (69.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
diff: 
delta:
! 100 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,1) and color red and mask Full at (0,12)
diff:   ^.layer_0.pos.j
delta: (0,3)=2  (1,3)=2  (2,3)=2  (2,13)=2  (2,14)=2  (2,15)=2  (3,3)=2  (4,0)=2  (4,1)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (5,2)=2  (6,2)=2  (7,2)=2  (8,2)=2  (9,0)=2  (9,1)=2  (9,2)=2  (10,2)=2  (10,13)=2  (10,14)=2  (10,15)=2  (11,2)=2  (12,2)=2  (13,2)=2  (14,2)=2 
! 134 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,13) and color red and mask Full at (4,0)
diff:   ^.layer_0.pos.i
delta: (0,3)=2  (0,12)=2  (1,3)=2  (1,12)=2  (2,3)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,15)=2  (3,3)=2  (3,12)=2  (5,2)=2  (5,12)=2  (6,2)=2  (6,12)=2  (7,2)=2  (7,12)=2  (8,2)=2  (8,12)=2  (9,0)=2  (9,1)=2  (9,2)=2  (9,12)=2  (10,2)=2  (10,12)=2  (10,13)=2  (10,14)=2  (10,15)=2  (11,2)=2  (11,12)=2  (12,2)=2  (12,12)=2  (13,2)=2  (13,12)=2  (14,2)=2  (14,12)=2 
! 136 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color red and mask ..........x.....|..........x.....|xxxxxxxxxxx.....|..........x.....|..........xxxxxx|..........x.....|..........x.....|..........x.....|..........x.....|xxxxxxxxxxxxxxxx|...x......x.x...|xxxx......x.x...|...x......x.x... at (0,0)
diff: 
delta:
! 73 wrong pixels (generated / expected)

TEST 6455b5f5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.7 sec (6.7 sec/task)
bits-train-error = 2653.1 bits (2653.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-255] Checking task 662c240a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15238.6 = 15247.6
DL output with Mo: L = 9.0 + 3143.0 = 3152.0
DL input+output M: L = 17.9 + 18381.6 = 18399.5

# learning a model for train pairs
2.000	
1.675	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.513	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.358	OUT DEF: ^.size=^.layer_0.shape.size
1.206	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.111	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.970	OUT DEF: ^.layer_0.shape.size=^.layer_011.shape.size
0.906	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.843	OUT DEF: ^.layer_0.shape.mask=^.layer_011.shape.mask
0.828	OUT DEF: ^.layer_0.pos=(?,?)
0.792	OUT DEF: ^.layer_0.pos.j=^.layer_011.pos.j
0.756	OUT DEF: ^.layer_0.pos.i=^.layer_011.pos.j
0.750	IN  DEF: ^.layer_0.shape.mask=Full
0.744	IN  DEF: ^.layer_0111.shape.mask=Full
0.741	IN  DEF: ^.size=(?,?)
0.719	IN  DEF: ^.size.i=9
0.704	IN  DEF: ^.size.j=3
0.701	IN  DEF: ^.layer_0.pos=(?,?)
0.694	IN  DEF: ^.layer_0.pos.j=0
0.690	IN  DEF: ^.layer_01.pos=(?,?)
0.683	IN  DEF: ^.layer_01.pos.j=0
0.680	IN  DEF: ^.layer_011.pos=(?,?)
0.676	IN  DEF: ^.layer_011.shape.size=(?,?)
0.673	IN  DEF: ^.layer_0.shape.size=(?,?)
0.659	IN  DEF: ^.layer_0.shape.size.i=3
0.645	IN  DEF: ^.layer_0.shape.size.j=3
0.642	IN  DEF: ^.layer_01.shape.size=(?,?)
0.627	IN  DEF: ^.layer_01.shape.size.i=3
0.613	IN  DEF: ^.layer_01.shape.size.j=3
0.610	IN  DEF: ^.layer_0111.pos=(?,?)
0.602	IN  DEF: ^.layer_0111.pos.j=0
0.599	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size ^.layer_011.shape.size and color ? and mask ^.layer_011.shape.mask at (^.layer_011.pos.j,^.layer_011.pos.j)
WHERE (Mi)
a background with size (9,3) and color ? and layers
  _0: a rectangle with size (3,3) and color ? and mask Full at (?,0)
  _01: a rectangle with size (3,3) and color ? and mask ? at (?,0)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,0)

DL input  with Mi: L = 140.1 + 5503.4 = 5643.5
DL output with Mo: L = 42.9 + 678.6 = 721.5
DL input+output M: L = 183.0 + 6182.0 = 6365.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (3,0)
  _011: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (6,0)
  _0111: a rectangle with size (2,3) and color green and mask Full at (7,0)
diff: 
delta: (0,1)=9# (1,0)=9#
   (125.3 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (0,0)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (3,0)
  _011: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (6,0)
  _0111: a rectangle with size (2,3) and color green and mask Full at (7,0)
diff: 
delta: (0,1)=9# (1,0)=9#
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (3,0)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (3,0)
diff: 
delta: (0,1)=9# (1,0)=9# (7,2)=3 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,3) and color grey and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.xx|.xx at (0,0)
  _011: a rectangle with size (2,2) and color red and mask Full at (7,1)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (6,0)
diff: 
delta: (4,1)=6  (5,1)=6  (5,2)=6 
   (136.4 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (1,1)
diff: 
delta: (1,2)=3 
   (30.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color grey and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.xx|.xx at (0,0)
  _011: a rectangle with size (2,2) and color red and mask Full at (7,1)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (6,0)
diff: 
delta: (4,1)=6  (5,1)=6  (5,2)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.xx|.xx at (0,0)
  _011: a rectangle with size (3,3) and color orange and mask xxx|x..|x.. at (6,0)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (0,0)
diff: 
delta: (4,1)=6  (5,1)=6  (5,2)=6 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _011: a rectangle with size (3,2) and color cyan and mask xx|.x|.x at (6,0)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (3,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=3 
   (144.4 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,2) and color cyan and mask xx|.x|.x at (0,0)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _011: a rectangle with size (3,2) and color cyan and mask xx|.x|.x at (6,0)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (3,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (6,1)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (3,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=3  (6,0)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,0)
  _0111: a rectangle with size (3,2) and color cyan and mask xx|.x|.x at (6,0)
diff:   ^.layer_0111.shape.mask
delta: (1,2)=3  (2,1)=3  (2,2)=3 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,0)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|xx. at (3,0)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta: (2,2)=8  (6,0)=6  (8,2)=6 
   (144.2 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,0)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
  _011: a rectangle with size (2,2) and color blue and mask xx|x. at (3,0)
  _0111: a rectangle with size (3,3) and color green and mask Full at (3,0)
diff: 
delta: (5,2)=1  (6,0)=6  (8,2)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,0)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
  _011: a rectangle with size (3,3) and color green and mask ..x|.xx|xx. at (3,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta: (2,2)=8  (6,0)=6  (8,2)=6 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,0)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|xx. at (3,0)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta: (2,2)=8  (6,0)=6  (8,2)=6 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (3,0)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (6,0)
diff: 
delta: (0,0)=5# (1,1)=5# (2,1)=5#
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (3,0)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x..|x.. at (6,0)
  _0111: a rectangle with size (3,3) and color red and mask Full at (3,0)
diff: 
delta: (0,0)=5# (1,1)=5# (2,1)=5#
! 9 wrong pixels (generated / expected)

TEST 662c240a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.6 sec (6.6 sec/task)
bits-train-error = 678.6 bits (678.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-254] Checking task 67385a82.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5645.4 = 5654.3
DL output with Mo: L = 9.0 + 5905.7 = 5914.7
DL input+output M: L = 17.9 + 11551.1 = 11569.0

# learning a model for train pairs
2.000	
1.647	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.413	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.316	OUT DEF: ^.size=^.size
1.257	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.202	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.169	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.137	IN  DEF: ^.layer_0.shape.color=green
1.105	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
1.074	OUT DEF: ^.layer_0.shape.color=cyan
1.063	IN  DEF: ^.color=black
1.053	OUT DEF: ^.color=black
1.044	IN  DEF: ^.size=(?,?)
1.036	IN  DEF: ^.layer_0.pos=(?,?)
1.013	IN  DEF: ^.layer_0.pos.i=(0)
1.004	IN  DEF: ^.layer_0.shape.size=(?,?)
0.996	OUT DEF: ^.layer_0.shape.size=(?,?)
0.967	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.pos.j + 2
0.955	OUT DEF: ^.layer_0.shape.size.i=2
0.947	OUT DEF: ^.layer_01.pos=(?,?)
0.939	OUT DEF: ^.layer_01.shape.size=(?,?)
0.931	OUT DEF: ^.layer_011.pos=(?,?)
0.909	OUT DEF: ^.layer_011.pos.j=^.size.j - 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (2,^.layer_0.pos.j + 2) and color cyan and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ^.layer_0.shape.color at (?,^.size.j - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at ((0),?)

DL input  with Mi: L = 42.8 + 3092.4 = 3135.2
DL output with Mo: L = 99.2 + 1996.9 = 2096.1
DL input+output M: L = 142.0 + 5089.3 = 5231.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|.x.|x.x at (0,0)
diff: 
delta:
   (36.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,0)
  _011: a point with color green at (2,2)
diff: 
delta:
   (27.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|.x.|x.x at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,1)
diff: 
delta: (0,0)=3  (2,0)=3  (2,2)=3 
! 6 wrong pixels (generated / expected)

TRAIN 67385a82.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask x...|xxx.|...x at (0,1)
diff: 
delta: (0,5)=3  (3,1)=3 
   (81.4 bits)
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask x..|xxx at (0,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,4)
  _011: a point with color green at (0,5)
diff: 
delta: (3,1)=3 
   (50.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask x...|xxx.|...x at (0,1)
diff: 
delta: (0,5)=3  (3,1)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (1,1)
diff:   ^.layer_0.pos.i
delta: (0,1)=3  (0,5)=3  (2,4)=3  (3,1)=3 
! 8 wrong pixels (generated / expected)

TRAIN 67385a82.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|xx|x. at (0,0)
diff: 
delta: (0,3)=3  (2,3)=3  (3,2)=3  (3,3)=3 
   (104.5 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,2)
  _011: a point with color green at (0,3)
diff: 
delta: (2,0)=8 
   (50.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|xx|x. at (0,0)
diff: 
delta: (0,3)=3  (2,3)=3  (3,2)=3  (3,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN 67385a82.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|.x.|x..|.xx|.xx at (0,0)
diff: 
delta: (1,4)=3  (4,5)=3 
   (86.4 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (3,1)
  _011: a point with color green at (4,5)
diff: 
delta: (1,4)=3  (2,0)=3 
   (71.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|.x.|x..|.xx|.xx at (0,0)
diff: 
delta: (1,4)=3  (4,5)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,1)
diff:   ^.layer_0.pos.i
delta: (0,0)=3  (0,1)=3  (1,1)=3  (1,4)=3  (2,0)=3  (4,5)=3 
! 10 wrong pixels (generated / expected)

TRAIN 67385a82.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask x.x|xxx at (0,0)
diff: 
delta: (0,4)=3  (2,4)=3  (3,1)=3  (3,2)=3  (4,1)=3  (4,2)=3 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,1)
diff:   ^.layer_0.pos.i
delta: (0,0)=3  (0,2)=3  (0,4)=3  (1,0)=3  (1,1)=3  (1,2)=3  (2,4)=3 
! 9 wrong pixels (generated / expected)

TEST 67385a82.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.9 sec (5.9 sec/task)
bits-train-error = 1996.9 bits (1996.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-253] Checking task 673ef223.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8021.3 = 8030.3
DL output with Mo: L = 9.0 + 23391.4 = 23400.4
DL input+output M: L = 17.9 + 31412.7 = 31430.6

# learning a model for train pairs
2.000	
1.736	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.466	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.218	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.069	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.956	OUT OBJECT at ^.layer_010: ^.layer_0.shape at ?
0.851	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.764	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.734	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_0.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 3695.8 = 3743.8
DL output with Mo: L = 102.6 + 6165.1 = 6267.7
DL input+output M: L = 150.6 + 9860.9 = 10011.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (11,7)
diff: 
delta: (3,4)=8 
   (99.7 bits)
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (13,0)
  _010: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (3,4)
  _01111: a rectangle with size (9,6) and color black and mask Full at (4,1)
diff: 
delta:
   (161.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (11,7)
diff: 
delta: (3,4)=8 
! size mismatch, 10x10 instead of 19x8

TRAIN 673ef223.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
diff: 
delta: (2,7)=8  (4,5)=8 
   (124.0 bits)
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (12,0)
  _010: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (14,0)
  _011: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _0111: a rectangle with size (1,6) and color cyan and mask Full at (2,1)
  _01111: a rectangle with size (1,4) and color cyan and mask Full at (4,1)
diff: 
delta: (2,7)=4  (4,5)=4 
   (208.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
diff: 
delta: (2,7)=8  (4,5)=8 
! size mismatch, 10x10 instead of 20x10

TRAIN 673ef223.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
diff: 
delta: (4,6)=8  (5,2)=8  (7,4)=8 
   (145.8 bits)
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (2,9) and color cyan and mask Full at (14,1)
  _010: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (17,1)
  _011: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _0111: a rectangle with size (2,6) and color cyan and mask ....xx|xxxxxx at (4,3)
  _01111: a rectangle with size (1,4) and color cyan and mask Full at (7,5)
diff: 
delta: (4,6)=4  (5,2)=4  (7,4)=4 
   (246.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
diff: 
delta: (4,6)=8  (5,2)=8  (7,4)=8 
! size mismatch, 10x10 instead of 20x10

TRAIN 673ef223.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,12) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (14,11)
diff: 
delta: (2,8)=8  (3,7)=8  (5,4)=8 
! size mismatch, 10x10 instead of 21x12

TEST 673ef223.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.2 sec (25.2 sec/task)
bits-train-error = 6165.1 bits (6165.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-252] Checking task 6773b310.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 40802.7 = 40811.6
DL output with Mo: L = 9.0 + 2236.3 = 2245.3
DL input+output M: L = 17.9 + 43038.9 = 43056.9

# learning a model for train pairs
2.000	
1.401	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.282	IN  DEF: ^.layer_0.shape.mask=...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
1.186	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.103	OUT DEF: ^.layer_0.shape.color=blue
1.049	OUT OBJECT at ^.layer_01: a point with color ? at ?
0.967	OUT DEF: ^.layer_01.shape.color=blue
0.925	OUT DEF: ^.layer_0.shape.mask=Full
0.898	OUT DEF: ^.color=black
0.877	OUT DEF: ^.size=(?,?)
0.780	OUT DEF: ^.size.i=3
0.683	OUT DEF: ^.size.j=3
0.662	OUT DEF: ^.layer_0.pos=(?,?)
0.640	OUT DEF: ^.layer_0.shape.size=(?,?)
0.619	OUT DEF: ^.layer_01.pos=(?,?)
0.567	OUT DEF: ^.layer_01.pos.j=2
0.559	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.515	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.i - 1
0.510	IN  DEF: ^.layer_0.shape.color=cyan
0.506	IN  DEF: ^.layer_01.shape.color=pink
0.504	IN  DEF: ^.color=black
0.503	IN  DEF: ^.size=(?,?)
0.494	IN  DEF: ^.size.i=11
0.485	IN  DEF: ^.size.j=11
0.484	IN  DEF: ^.layer_0.pos=(?,?)
0.479	IN  DEF: ^.layer_0.pos.i=(0)
0.475	IN  DEF: ^.layer_0.pos.j=(0)
0.474	IN  DEF: ^.layer_0.shape.size=(?,?)
0.465	IN  DEF: ^.layer_0.shape.size.i=11
0.456	IN  DEF: ^.layer_0.shape.size.j=11
0.455	IN  DEF: ^.layer_01.pos=(?,?)
0.453	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,^.layer_01.shape.size.i - 1)
  _01: a point with color blue at (?,2)
WHERE (Mi)
a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at ((0),(0))
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)

DL input  with Mi: L = 217.4 + 8610.3 = 8827.7
DL output with Mo: L = 74.1 + 458.3 = 532.4
DL input+output M: L = 291.6 + 9068.6 = 9360.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,0)
diff: 
delta: (1,5)=6  (1,10)=6  (2,2)=6  (2,9)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
   (234.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,0)
  _01: a point with color blue at (0,2)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
diff: 
delta: (1,0)=6  (1,5)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,0)
diff: 
delta: (1,5)=6  (1,10)=6  (2,2)=6  (2,9)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! 2 wrong pixels (generated / expected)

TRAIN 6773b310.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (6,6)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (5,9)=6  (9,0)=6  (10,1)=6  (10,5)=6  (10,10)=6 
   (198.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _01: a point with color blue at (1,2)
diff: 
delta:
   (10.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (6,6)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (5,9)=6  (9,0)=6  (10,1)=6  (10,5)=6  (10,10)=6 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (5,8)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (6,6)=6  (9,0)=6  (10,1)=6  (10,5)=6  (10,10)=6 
! 4 wrong pixels (generated / expected)

TRAIN 6773b310.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
diff: 
delta: (0,5)=6  (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
   (223.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _01: a point with color blue at (2,2)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
diff: 
delta: (0,5)=6  (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,5)
diff: 
delta: (0,10)=6  (1,9)=6  (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
! 4 wrong pixels (generated / expected)

TRAIN 6773b310.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
diff: 
delta: (0,10)=6  (1,2)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
   (204.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _01: a point with color blue at (0,2)
diff: 
delta:
   (10.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
diff: 
delta: (0,10)=6  (1,2)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,10)
diff: 
delta: (1,2)=6  (1,8)=6  (2,5)=6  (4,5)=6  (5,0)=6  (5,6)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
! 3 wrong pixels (generated / expected)

TRAIN 6773b310.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (5,4)
diff: 
delta: (0,8)=6  (0,10)=6  (1,1)=6  (1,6)=6  (4,9)=6  (5,2)=6  (6,10)=6  (8,2)=6  (9,0)=6  (9,9)=6  (10,5)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,8)
diff: 
delta: (0,10)=6  (1,1)=6  (1,6)=6  (4,9)=6  (5,2)=6  (5,5)=6  (6,4)=6  (6,10)=6  (8,2)=6  (9,0)=6  (9,9)=6  (10,5)=6 
! 5 wrong pixels (generated / expected)

TEST 6773b310.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.7 sec (3.7 sec/task)
bits-train-error = 458.3 bits (458.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-251] Checking task 67a3c6ac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12860.5 = 12869.4
DL output with Mo: L = 9.0 + 12860.5 = 12869.4
DL input+output M: L = 17.9 + 25720.9 = 25738.8

# learning a model for train pairs
2.000	
1.795	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.591	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.488	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.386	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.349	OUT DEF: ^.size=^.size
1.317	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.269	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.240	OUT DEF: ^.layer_00.shape.size=^.layer_01.shape.size
1.220	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
1.207	OUT DEF: ^.color=^.color
1.178	IN  DEF: ^.layer_0.shape.color=orange
1.152	OUT DEF: ^.layer_01.shape.size=^.layer_010.shape.size
1.131	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.112	OUT DEF: ^.color=^.color
1.102	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.091	OUT DEF: ^.layer_00.shape.color=^.layer_01.shape.color
1.080	OUT DEF: ^.layer_01.shape.color=^.layer_010.shape.color
1.071	IN  DEF: ^.color=red
1.061	IN  DEF: ^.layer_01.shape.color=blue
1.055	OUT DEF: ^.layer_00.shape=^.layer_01.shape
1.049	OUT DEF: ^.layer_011.shape.mask=Full
1.044	IN  DEF: ^.layer_01.shape.mask=Full
1.041	OUT DEF: ^.layer_00.pos=(?,?)
1.033	OUT DEF: ^.layer_00.pos.j=^.layer_0.pos.i - ^.layer_0.pos.j
1.026	OUT DEF: ^.layer_00.pos.i=^.layer_0.shape.size.j - ^.layer_0.shape.size.i
1.023	OUT DEF: ^.layer_0.pos=(?,?)
1.014	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
1.006	OUT DEF: ^.layer_0.pos.j=^.layer_0.shape.size.j - ^.layer_0.shape.size.i
1.004	OUT DEF: ^.layer_01.pos=(?,?)
0.995	OUT DEF: ^.layer_01.pos.i=^.layer_010.pos.i
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_01.shape at (^.layer_0.shape.size.j - ^.layer_0.shape.size.i,^.layer_0.pos.i - ^.layer_0.pos.j)
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,^.layer_0.shape.size.j - ^.layer_0.shape.size.i)
  _01: a rectangle with size ^.layer_010.shape.size and color ^.layer_010.shape.color and mask ? at (^.layer_010.pos.i,?)
  _011: a rectangle with size ? and color ? and mask Full at ?
WHERE (Mi)
a background with size ? and color red and layers
  _0: a rectangle with size ? and color orange and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color blue and mask Full at ?

DL input  with Mi: L = 73.0 + 7769.1 = 7842.1
DL output with Mo: L = 136.6 + 4828.1 = 4964.6
DL input+output M: L = 209.6 + 12597.1 = 12806.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color red and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (2,0)
  _010: a rectangle with size (2,3) and color pink and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (3,0)
diff: 
delta: (1,1)=1 
   (98.0 bits)
data: a background with size (4,4) and color red and layers
  _00: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (2,1)
  _01: a rectangle with size (2,3) and color pink and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color blue and mask Full at (3,3)
diff: 
delta:
   (30.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color orange and layers
  _0: a rectangle with size (2,3) and color pink and mask Full at (0,0)
  _010: a rectangle with size (4,3) and color red and mask xxx|xxx|x.x|.xx at (0,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (3,0)
diff:   ^.color  ^.layer_0.shape.color
delta: (1,1)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (2,0)
  _010: a rectangle with size (4,3) and color red and mask ..x|..x|xxx|xxx at (0,1)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,0)
diff:   ^.color  ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 8 wrong pixels (generated / expected)

TRAIN 67a3c6ac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,6) and color orange and mask xxx...|.x....|xx....|..xxx.|..x..x at (0,0)
  _010: a rectangle with size (2,7) and color pink and mask xxx....|x.xxxxx at (5,0)
  _01: a rectangle with size (1,5) and color blue and mask Full at (1,2)
diff: 
delta: (0,3)=6  (0,4)=6  (0,5)=6  (1,0)=6  (1,4)=7# (1,5)=7# (2,3)=1  (2,5)=6  (2,6)=6  (4,0)=7# (4,3)=1  (5,5)=1  (5,6)=1 
   (380.6 bits)
data: a background with size (7,7) and color red and layers
  _00: a rectangle with size (1,5) and color blue and mask Full at (1,0)
  _0: a rectangle with size (5,6) and color orange and mask ...xxx|xxxxx.|....xx|.xxx..|x..x.. at (0,1)
  _01: a rectangle with size (2,7) and color pink and mask ....xxx|xxxxx.x at (5,0)
  _011: a rectangle with size (1,3) and color pink and mask Full at (0,1)
diff: 
delta: (1,1)=7# (1,2)=7# (1,6)=6  (2,0)=6  (2,1)=6  (2,3)=1  (4,3)=1  (4,6)=7# (5,0)=1  (5,1)=1 
   (263.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,6) and color orange and mask xxx...|.x....|xx....|..xxx.|..x..x at (0,0)
  _010: a rectangle with size (2,7) and color pink and mask xxx....|x.xxxxx at (5,0)
  _01: a rectangle with size (1,5) and color blue and mask Full at (1,2)
diff: 
delta: (0,3)=6  (0,4)=6  (0,5)=6  (1,0)=6  (1,4)=7# (1,5)=7# (2,3)=1  (2,5)=6  (2,6)=6  (4,0)=7# (4,3)=1  (5,5)=1  (5,6)=1 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,6) and color orange and mask xxx...|.x....|xx....|..xxx.|..x..x at (0,0)
  _010: a rectangle with size (2,7) and color pink and mask xxx....|x.xxxxx at (5,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (0,3)
diff:   ^.layer_01.shape.color
delta: (1,0)=6  (1,2)=1  (1,3)=1  (1,4)=7# (1,5)=7# (1,6)=1  (2,3)=1  (2,5)=6  (2,6)=6  (4,0)=7# (4,3)=1  (5,5)=1  (5,6)=1 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color pink and layers
  _0: a rectangle with size (5,6) and color orange and mask xxx...|.x....|xx....|..xxx.|..x..x at (0,0)
  _010: a rectangle with size (4,4) and color red and mask .x..|xxxx|.xxx|xx.. at (2,3)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,0)
diff:   ^.color  ^.layer_01.shape.color
delta: (0,6)=2  (1,2)=1  (1,3)=1  (1,4)=7# (1,5)=7# (1,6)=1  (2,3)=1  (4,0)=7# (4,3)=1  (5,5)=1  (5,6)=1  (6,1)=2 
! 23 wrong pixels (generated / expected)

TRAIN 67a3c6ac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (3,3) and color orange and mask x..|.x.|.xx at (3,3)
  _010: a rectangle with size (6,3) and color blue and mask x..|.x.|.x.|x.x|..x|.x. at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (0,3)
diff: 
delta: (0,2)=7# (1,2)=7# (1,3)=7# (1,5)=6  (2,3)=6  (2,5)=1  (3,4)=6  (4,1)=7# (4,5)=1  (5,2)=6 
   (298.4 bits)
data: a background with size (6,6) and color red and layers
  _00: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0: a rectangle with size (3,3) and color orange and mask ..x|.x.|xx. at (3,0)
  _01: a rectangle with size (6,3) and color blue and mask ..x|.x.|.x.|x.x|x..|.x. at (0,3)
  _011: a rectangle with size (2,2) and color orange and mask Full at (0,2)
diff: 
delta: (1,0)=6  (2,0)=1  (2,2)=6  (3,1)=6  (4,0)=1  (4,4)=7# (5,3)=6 
   (188.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (3,3) and color orange and mask x..|.x.|.xx at (3,3)
  _010: a rectangle with size (1,6) and color blue and mask Full at (0,0)
  _01: a rectangle with size (6,3) and color blue and mask xxx|.x.|.x.|x.x|..x|.x. at (0,0)
diff:   ^.layer_01.shape.mask
delta: (0,1)=2  (0,2)=7# (1,2)=7# (1,3)=7# (1,5)=6  (2,3)=6  (2,5)=1  (3,4)=6  (4,1)=7# (4,5)=1  (5,2)=6 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (0,0)
  _010: a rectangle with size (3,3) and color orange and mask x..|.x.|.xx at (3,3)
  _01: a rectangle with size (6,3) and color blue and mask xxx|.x.|.x.|x.x|..x|.x. at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.color
delta: (0,1)=2  (0,2)=7# (1,2)=7# (1,3)=7# (1,5)=6  (2,3)=6  (2,5)=1  (3,4)=6  (4,1)=7# (4,5)=1  (5,2)=6 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (0,0)
  _010: a rectangle with size (6,3) and color blue and mask xxx|.x.|.x.|x.x|..x|.x. at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask x..|.x.|.xx at (3,3)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color  ^.layer_0.shape.color
delta: (0,1)=2  (0,2)=7# (1,2)=7# (1,3)=7# (1,5)=6  (2,3)=6  (2,5)=1  (3,4)=6  (4,1)=7# (4,5)=1  (5,2)=6 
! 22 wrong pixels (generated / expected)

TRAIN 67a3c6ac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color orange and mask Even Checkboard at (0,0)
  _010: a rectangle with size (3,3) and color pink and mask xx.|xxx|x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color pink and mask .x.|x.x|x.. at (0,0)
  _010: a rectangle with size (2,2) and color orange and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff:   ^.layer_0.shape.color
delta:
! 4 wrong pixels (generated / expected)

TEST 67a3c6ac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.4 sec (26.4 sec/task)
bits-train-error = 4828.1 bits (4828.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-250] Checking task 67a423a3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6530.2 = 6539.1
DL output with Mo: L = 9.0 + 8203.0 = 8211.9
DL input+output M: L = 17.9 + 14733.1 = 14751.1

# learning a model for train pairs
2.000	
1.635	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.279	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.980	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.823	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.711	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.652	OUT DEF: ^.size=^.size
0.635	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.618	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.602	OUT DEF: ^.layer_0.shape.color=yellow
0.585	OUT DEF: ^.layer_0.shape.mask=Border
0.574	IN  DEF: ^.layer_0.shape.mask=Full
0.565	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.555	IN  DEF: ^.layer_01.shape.mask=Full
0.546	OUT DEF: ^.layer_011.shape.mask=Full
0.539	IN  DEF: ^.color=black
0.533	OUT DEF: ^.color=black
0.528	IN  DEF: ^.size=(?,?)
0.523	IN  DEF: ^.layer_0.pos=(?,?)
0.517	IN  DEF: ^.layer_0.shape.size=(?,?)
0.512	IN  DEF: ^.layer_01.pos=(?,?)
0.507	IN  DEF: ^.layer_01.shape.size=(?,?)
0.502	OUT DEF: ^.layer_0.pos=(?,?)
0.498	OUT DEF: ^.layer_0.shape.size=(?,?)
0.478	OUT DEF: ^.layer_0.shape.size.i=3
0.459	OUT DEF: ^.layer_0.shape.size.j=3
0.454	OUT DEF: ^.layer_01.pos=(?,?)
0.440	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i
0.428	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j + ^.layer_01.pos.j
0.423	OUT DEF: ^.layer_01.shape.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ^.layer_01.shape.mask at (^.layer_0.pos.i,^.layer_0.pos.j + ^.layer_01.pos.j)
  _011: a rectangle with size ? and color ^.layer_01.shape.color and mask Full at ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 67.4 + 1765.4 = 1832.8
DL output with Mo: L = 100.4 + 1075.1 = 1175.5
DL input+output M: L = 167.8 + 2840.5 = 3008.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color green and mask Full at (0,1)
diff: 
delta:
   (52.5 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
   (28.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color green and mask Full at (0,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,4) and color red and mask Full at (1,0)
diff: 
delta: (0,1)=3 
! 2 wrong pixels (generated / expected)

TRAIN 67a423a3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
   (64.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (3,3)
  _01: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
   (41.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (8,1) and color pink and mask Full at (0,4)
diff: 
delta: (4,4)=6 
! 28 wrong pixels (generated / expected)

TRAIN 67a423a3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
   (59.5 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _01: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _011: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
   (37.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,6) and color brown and mask Full at (2,0)
  _01: a rectangle with size (6,1) and color blue and mask Full at (0,2)
diff: 
delta: (2,2)=1 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,3) and color brown and mask Full at (2,3)
diff: 
delta: (2,0)=9# (2,1)=9#
! 18 wrong pixels (generated / expected)

TRAIN 67a423a3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color grey and mask Full at (0,8)
  _01: a rectangle with size (1,12) and color green and mask Full at (6,0)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,12) and color green and mask Full at (6,0)
  _01: a rectangle with size (12,1) and color grey and mask Full at (0,8)
diff: 
delta: (6,8)=5#
! 36 wrong pixels (generated / expected)

TEST 67a423a3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.1 sec (26.1 sec/task)
bits-train-error = 1075.1 bits (1075.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-249] Checking task 67e8384a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3940.9 = 3949.8
DL output with Mo: L = 9.0 + 14555.2 = 14564.2
DL input+output M: L = 17.9 + 18496.1 = 18514.0

# learning a model for train pairs
2.000	
1.750	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.666	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.584	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.540	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.521	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.500	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
1.474	OUT DEF: ^.layer_011=^.layer_01
1.446	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
1.422	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ^.layer_01.shape.color and mask ? at ?
  _011: ^.layer_01
  _0111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 41.4 + 3403.2 = 3444.5
DL output with Mo: L = 79.2 + 7936.2 = 8015.3
DL input+output M: L = 120.5 + 11339.4 = 11459.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,1)
  _01: a point with color grey at (0,0)
diff: 
delta: (1,2)=5#
   (81.4 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (4,1) and color green and mask Full at (1,0)
  _010: a rectangle with size (6,4) and color yellow and mask .xx.|x..x|xxxx|xxxx|x..x|.xx. at (0,1)
  _01: a rectangle with size (4,2) and color grey and mask Full at (1,2)
  _011: a point with color grey at (0,0)
  _0111: a point with color grey at (0,5)
diff: 
delta: (5,0)=5# (5,5)=5#
   (176.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,1)
  _01: a point with color grey at (0,0)
diff: 
delta: (1,2)=5#
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,1)
  _01: a point with color grey at (1,2)
diff: 
delta: (0,0)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (0,0)
  _01: a point with color grey at (0,2)
diff: 
delta: (2,0)=5# (2,1)=3 
   (94.9 bits)
data: a background with size (6,6) and color orange and layers
  _0: a rectangle with size (6,4) and color blue and mask x..x|.xx.|.xx.|.xx.|.xx.|x..x at (0,1)
  _010: a rectangle with size (2,4) and color green and mask Full at (2,1)
  _01: a rectangle with size (2,6) and color grey and mask Full at (2,0)
  _011: a point with color grey at (0,2)
  _0111: a point with color grey at (0,3)
diff: 
delta: (5,2)=5# (5,3)=5#
   (180.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (0,0)
  _01: a point with color grey at (0,2)
diff: 
delta: (2,0)=5# (2,1)=3 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (0,0)
  _01: a point with color grey at (2,0)
diff: 
delta: (0,2)=5# (2,1)=3 
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (0,0)
  _01: a point with color green at (2,1)
diff: 
delta: (0,2)=5# (2,0)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _01: a point with color pink at (1,1)
diff: 
delta: (1,2)=4 
   (69.5 bits)
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (2,6) and color red and mask Full at (2,0)
  _010: a rectangle with size (4,2) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,4) and color pink and mask Full at (4,1)
  _011: a point with color pink at (1,1)
  _0111: a point with color pink at (1,4)
diff: 
delta: (0,1)=5# (0,4)=5# (5,1)=5# (5,4)=5#
   (186.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _01: a point with color pink at (1,1)
diff: 
delta: (1,2)=4 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _01: a point with color yellow at (1,2)
diff: 
delta: (1,1)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
  _01: a point with color cyan at (1,1)
diff: 
delta: (2,0)=8  (2,2)=6 
   (94.5 bits)
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (6,4) and color blue and mask .xx.|.xx.|x..x|x..x|.xx.|.xx. at (0,1)
  _010: a rectangle with size (2,2) and color pink and mask Full at (2,2)
  _01: a rectangle with size (2,6) and color cyan and mask Full at (2,0)
  _011: a point with color cyan at (1,1)
  _0111: a point with color cyan at (1,4)
diff: 
delta: (0,0)=1  (0,5)=1  (4,1)=8  (4,4)=8  (5,0)=1  (5,5)=1 
   (250.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
  _01: a point with color cyan at (1,1)
diff: 
delta: (2,0)=8  (2,2)=6 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
  _01: a point with color cyan at (2,0)
diff: 
delta: (1,1)=8  (2,2)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN 67e8384a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,1)
  _01: a point with color blue at (0,0)
diff: 
delta: (1,0)=5#
! size mismatch, 10x10 instead of 6x6

TEST 67e8384a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.8 sec (25.8 sec/task)
bits-train-error = 7936.2 bits (7936.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-248] Checking task 681b3aeb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5922.9 = 5931.9
DL output with Mo: L = 9.0 + 2437.6 = 2446.6
DL input+output M: L = 17.9 + 8360.5 = 8378.5

# learning a model for train pairs
2.000	
1.639	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.308	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.012	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.817	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.719	OUT DEF: ^.color=^.layer_01.shape.color
0.705	OUT DEF: ^.size=(?,?)
0.638	OUT DEF: ^.size.i=3
0.572	OUT DEF: ^.size.j=3
0.558	OUT DEF: ^.layer_0.pos=(?,?)
0.522	OUT DEF: ^.layer_0.pos.i=0
0.486	OUT DEF: ^.layer_0.pos.j=0
0.478	IN  DEF: ^.color=black
0.472	IN  DEF: ^.size=(?,?)
0.428	IN  DEF: ^.size.i=10
0.384	IN  DEF: ^.size.j=10
0.378	IN  DEF: ^.layer_01.pos=(?,?)
0.372	IN  DEF: ^.layer_0.pos=(?,?)
0.366	IN  DEF: ^.layer_0.shape.size=(?,?)
0.360	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ^.layer_01.shape.color and layers
  _0: ^.layer_0.shape at (0,0)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.6 + 1978.3 = 2058.9
DL output with Mo: L = 31.7 + 0.0 = 31.7
DL input+output M: L = 112.3 + 1978.3 = 2090.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
  _01: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
diff: 
delta:
   (65.6 bits)
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
  _01: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
  _01: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (2,3)
  _01: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,8)
diff: 
delta:
   (66.6 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (2,3)
  _01: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,8)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (8,1)
  _01: a rectangle with size (2,3) and color green and mask .x.|xxx at (4,3)
diff: 
delta:
   (65.6 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (8,1)
  _01: a rectangle with size (2,3) and color green and mask .x.|xxx at (4,3)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|x..|xxx at (6,7)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (2,3)
diff: 
delta:
correct output grid

TEST 681b3aeb.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-247] Checking task 6855a6e4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14408.6 = 14417.6
DL output with Mo: L = 9.0 + 14408.6 = 14417.6
DL input+output M: L = 17.9 + 28817.2 = 28835.2

# learning a model for train pairs
2.000	
1.770	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.550	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.333	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.109	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.890	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.778	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.687	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
0.605	IN  OBJECT at ^.layer_0101: a rectangle with size ? and color ? and mask ? at ?
0.560	OUT DEF: ^.size=^.size
0.535	OUT DEF: ^.layer_010=^.layer_010
0.510	OUT DEF: ^.layer_011=^.layer_0
0.501	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.491	IN  DEF: ^.layer_0.shape.color=red
0.481	IN  DEF: ^.layer_010.shape.color=red
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_010
  _01: a rectangle with size ? and color ^.layer_01.shape.color and mask ? at ?
  _011: ^.layer_0
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color red and mask ? at ?
  _010: a rectangle with size ? and color red and mask ? at ?
  _0101: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 88.0 + 4948.8 = 5036.8
DL output with Mo: L = 58.9 + 1845.2 = 1904.2
DL input+output M: L = 146.9 + 6794.1 = 6941.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _010: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _0101: a rectangle with size (1,3) and color grey and mask Full at (13,3)
  _01: a rectangle with size (2,1) and color grey and mask Full at (0,4)
diff: 
delta:
   (152.5 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (5,4)
  _010: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _01: a rectangle with size (1,3) and color grey and mask Full at (9,3)
  _011: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
diff: 
delta:
   (51.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _010: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _0101: a rectangle with size (1,3) and color grey and mask Full at (13,3)
  _01: a rectangle with size (2,1) and color grey and mask Full at (0,4)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _010: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _0101: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _01: a rectangle with size (2,2) and color grey and mask Full at (7,0)
diff: 
delta:
   (171.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,2) and color grey and mask .x|xx|xx|.x at (6,8)
  _010: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _01: a rectangle with size (2,2) and color grey and mask Full at (7,5)
  _011: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
diff: 
delta:
   (65.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _010: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _0101: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _01: a rectangle with size (2,2) and color grey and mask Full at (7,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _010: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _0101: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _01: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
   (171.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _010: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _01: a rectangle with size (3,4) and color grey and mask x..x|xxxx|x.x. at (5,5)
  _011: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
diff: 
delta:
   (68.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _010: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _0101: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _01: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (3,3)
  _010: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,3)
  _0101: a rectangle with size (2,5) and color grey and mask .xxx.|xx.xx at (0,4)
  _01: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (13,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TEST 6855a6e4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.1 sec (25.1 sec/task)
bits-train-error = 1845.2 bits (1845.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-246] Checking task 68b16354.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13855.6 = 13864.6
DL output with Mo: L = 9.0 + 13855.6 = 13864.6
DL input+output M: L = 17.9 + 27711.2 = 27729.1

# learning a model for train pairs
2.000	
1.920	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.840	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.766	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.705	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.664	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.624	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.590	OUT DEF: ^.size=^.size
1.565	OUT DEF: ^.layer_0.shape.size=^.layer_00.shape.size
1.537	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_00.shape.size and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 11469.8 = 11536.5
DL output with Mo: L = 77.1 + 9702.9 = 9780.0
DL input+output M: L = 143.9 + 21172.7 = 21316.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _0: a rectangle with size (3,2) and color orange and mask Full at (2,1)
  _01: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
   (235.2 bits)
data: a background with size (5,5) and color yellow and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _010: a rectangle with size (4,2) and color cyan and mask .x|x.|.x|.x at (0,3)
  _01: a rectangle with size (3,2) and color orange and mask Full at (0,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta: (0,0)=8  (1,0)=2  (1,4)=7# (2,0)=3  (4,0)=8 
   (182.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _0: a rectangle with size (3,2) and color orange and mask Full at (2,1)
  _01: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,2) and color orange and mask x.|xx|xx at (2,1)
  _0: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,2) and color orange and mask x.|xx|xx at (2,1)
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! 25 wrong pixels (generated / expected)

TRAIN 68b16354.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color blue and layers
  _00: a rectangle with size (3,4) and color orange and mask .x..|xx..|..xx at (2,0)
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,1)
diff: 
delta: (0,0)=7# (0,4)=2  (1,2)=2  (1,3)=4  (2,0)=2  (2,3)=7# (2,4)=2  (3,2)=4  (3,4)=8  (4,0)=8 
   (289.6 bits)
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (3,4) and color orange and mask ..xx|xx..|.x.. at (0,0)
  _010: a rectangle with size (1,2) and color green and mask Full at (4,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (1,5) and color red and mask Full at (2,0)
diff: 
delta: (0,0)=8  (1,2)=4  (1,4)=8  (2,3)=7# (3,2)=2  (3,3)=4  (4,0)=7# (4,4)=2 
   (236.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color blue and layers
  _00: a rectangle with size (3,4) and color orange and mask .x..|xx..|..xx at (2,0)
  _0: a rectangle with size (1,2) and color green and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta: (0,0)=7# (0,4)=2  (1,2)=2  (1,3)=4  (2,0)=2  (2,3)=7# (2,4)=2  (3,2)=4  (3,4)=8  (4,0)=8 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color blue and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (0,1)
  _0: a rectangle with size (3,4) and color orange and mask .x..|xx..|..xx at (2,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta: (0,0)=7# (0,4)=2  (1,2)=2  (1,3)=4  (2,0)=2  (2,3)=7# (2,4)=2  (3,2)=4  (3,4)=8  (4,0)=8 
! 24 wrong pixels (generated / expected)

TRAIN 68b16354.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color red and layers
  _00: a rectangle with size (5,4) and color yellow and mask ...x|.xx.|..x.|xx..|x... at (2,3)
  _0: a rectangle with size (1,4) and color blue and mask Full at (4,3)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,5)
diff: 
delta: (0,1)=7# (0,2)=4  (0,3)=3  (0,4)=4  (0,5)=8  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,2)=4  (2,3)=3  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=7# (4,1)=4  (4,2)=3  (5,0)=4  (5,1)=8  (5,2)=7# (5,5)=8  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,6)=8 
   (622.1 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (5,4) and color yellow and mask x...|xx..|..x.|.xx.|...x at (0,3)
  _010: a rectangle with size (2,2) and color red and mask xx|x. at (4,4)
  _01: a rectangle with size (1,4) and color blue and mask Full at (2,3)
  _011: a rectangle with size (5,1) and color red and mask Full at (2,0)
diff: 
delta: (0,0)=7# (0,2)=8  (0,5)=2  (0,6)=8  (1,0)=4  (1,1)=8  (1,2)=7# (1,5)=8  (1,6)=2  (2,1)=4  (3,0)=1  (3,1)=1  (3,2)=2  (3,3)=1  (3,6)=7# (4,0)=8  (4,1)=7# (4,2)=4  (5,2)=7# (5,3)=1  (6,1)=7# (6,2)=4  (6,4)=4  (6,5)=8 
   (551.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color red and layers
  _00: a rectangle with size (5,4) and color yellow and mask ...x|.xx.|..x.|xx..|x... at (2,3)
  _0: a rectangle with size (1,4) and color blue and mask Full at (4,3)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,5)
diff: 
delta: (0,1)=7# (0,2)=4  (0,3)=3  (0,4)=4  (0,5)=8  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,2)=4  (2,3)=3  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=7# (4,1)=4  (4,2)=3  (5,0)=4  (5,1)=8  (5,2)=7# (5,5)=8  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,6)=8 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color red and layers
  _00: a rectangle with size (2,2) and color green and mask Full at (0,5)
  _0: a rectangle with size (5,4) and color yellow and mask ...x|.xx.|..x.|xx..|x... at (2,3)
  _01: a rectangle with size (1,4) and color blue and mask Full at (4,3)
diff: 
delta: (0,1)=7# (0,2)=4  (0,3)=3  (0,4)=4  (0,5)=8  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,2)=4  (2,3)=3  (3,0)=1  (3,1)=1  (3,3)=1  (3,6)=7# (4,1)=4  (4,2)=3  (5,0)=4  (5,1)=8  (5,2)=7# (5,5)=8  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,6)=8 
! 48 wrong pixels (generated / expected)

TRAIN 68b16354.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
  _00: a rectangle with size (7,5) and color blue and mask ..x..|..xx.|xxxx.|xx...|.xxx.|....x|...x. at (0,0)
  _0: a rectangle with size (6,1) and color yellow and mask Full at (1,6)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (3,4)
diff: 
delta: (0,0)=2  (0,1)=8  (0,3)=3  (0,4)=2  (0,6)=1  (1,5)=3  (2,5)=7# (2,6)=3  (3,2)=2  (3,3)=3  (3,5)=1  (3,6)=3  (4,4)=7# (5,0)=3  (5,1)=2  (5,2)=8  (6,0)=1  (6,2)=7# (6,4)=2  (6,5)=3 
! 49 wrong pixels (generated / expected)

TEST 68b16354.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.0 sec (28.0 sec/task)
bits-train-error = 9702.9 bits (9702.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-245] Checking task 694f12f3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15177.3 = 15186.3
DL output with Mo: L = 9.0 + 15177.3 = 15186.3
DL input+output M: L = 17.9 + 30354.6 = 30372.5

# learning a model for train pairs
2.000	
1.431	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.045	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.729	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.467	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.292	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.248	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.223	OUT DEF: ^.size=^.size
0.209	OUT DEF: ^.layer_0=^.layer_0
0.194	OUT DEF: ^.layer_01=^.layer_01
0.188	OUT DEF: ^.layer_00.shape.color=red
0.182	OUT DEF: ^.layer_010.shape.color=blue
0.176	IN  DEF: ^.layer_0.shape.color=yellow
0.170	IN  DEF: ^.layer_01.shape.color=yellow
0.167	OUT DEF: ^.layer_00.shape.mask=Full
0.164	OUT DEF: ^.layer_010.shape.mask=Full
0.161	IN  DEF: ^.layer_0.shape.mask=Full
0.158	IN  DEF: ^.layer_01.shape.mask=Full
0.156	OUT DEF: ^.color=black
0.154	IN  DEF: ^.color=black
0.152	OUT DEF: ^.layer_00.pos=(?,?)
0.147	OUT DEF: ^.layer_00.pos.i=^.layer_0.pos.i + 1
0.141	OUT DEF: ^.layer_00.pos.j=^.layer_0.pos.j + 1
0.140	OUT DEF: ^.layer_00.shape.size=(?,?)
0.132	OUT DEF: ^.layer_00.shape.size.j=^.layer_01.shape.size.i
0.127	OUT DEF: ^.layer_00.shape.size.i=^.layer_0.shape.size.i - 2
0.125	OUT DEF: ^.layer_010.pos=(?,?)
0.120	OUT DEF: ^.layer_010.pos.i=^.layer_01.pos.i + 1
0.115	OUT DEF: ^.layer_010.pos.j=^.layer_01.pos.j + 1
0.113	OUT DEF: ^.layer_010.shape.size=(?,?)
0.108	OUT DEF: ^.layer_010.shape.size.j=2
0.104	OUT DEF: ^.layer_010.shape.size.i=^.layer_01.shape.size.i - 2
0.102	IN  DEF: ^.size=(?,?)
0.091	IN  DEF: ^.size.i=10
0.080	IN  DEF: ^.size.j=10
0.078	IN  DEF: ^.layer_0.pos=(?,?)
0.077	IN  DEF: ^.layer_0.shape.size=(?,?)
0.075	IN  DEF: ^.layer_01.pos=(?,?)
0.074	IN  DEF: ^.layer_01.shape.size=(?,?)
0.066	IN  DEF: ^.layer_01.shape.size.j=4

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (^.layer_0.shape.size.i - 2,^.layer_01.shape.size.i) and color red and mask Full at (^.layer_0.pos.i + 1,^.layer_0.pos.j + 1)
  _0: ^.layer_0
  _010: a rectangle with size (^.layer_01.shape.size.i - 2,2) and color blue and mask Full at (^.layer_01.pos.i + 1,^.layer_01.pos.j + 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _01: a rectangle with size (?,4) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 84.3 + 767.1 = 851.4
DL output with Mo: L = 145.6 + 0.0 = 145.6
DL input+output M: L = 229.9 + 767.1 = 997.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
   (38.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,4) and color red and mask Full at (7,4)
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _010: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
   (38.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (2,2)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _010: a rectangle with size (1,2) and color blue and mask Full at (8,6)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,6) and color yellow and mask Full at (7,4)
diff:   ^.layer_01.shape.size.j
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color yellow and mask Full at (7,4)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (0,0)
diff:   ^.layer_01.shape.size.j
delta:
! 21 wrong pixels (generated / expected)

TEST 694f12f3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.1 sec (3.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-244] Checking task 6a1e5592.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21709.8 = 21718.7
DL output with Mo: L = 9.0 + 21709.8 = 21718.7
DL input+output M: L = 17.9 + 43419.5 = 43437.5

# learning a model for train pairs
2.000	
1.403	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.847	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.615	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.484	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.443	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.398	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.379	OUT DEF: ^.size=^.size
0.369	OUT DEF: ^.layer_00=^.layer_0
0.362	OUT DEF: ^.color=blue
0.357	OUT DEF: ^.layer_0.shape.color=^.color
0.353	IN  DEF: ^.layer_0.shape.color=red
0.349	IN  DEF: ^.layer_01.shape.color=grey
0.345	IN  DEF: ^.layer_011.shape.color=grey
0.341	IN  DEF: ^.layer_0111.shape.color=grey
0.338	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.334	IN  DEF: ^.layer_01111.shape.color=grey
0.331	IN  DEF: ^.layer_01111.shape.mask=Full
0.330	IN  DEF: ^.color=black
0.329	OUT DEF: ^.layer_0.pos=(?,?)
0.325	OUT DEF: ^.layer_0.pos.i=^.layer_0.shape.size.i
0.320	OUT DEF: ^.layer_0.pos.j=(0)
0.319	OUT DEF: ^.layer_0.shape.size=(?,?)
0.310	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.303	OUT DEF: ^.layer_0.shape.size.i=7
0.302	IN  DEF: ^.size=(?,?)
0.293	IN  DEF: ^.size.j=15
0.285	IN  DEF: ^.size.i=10
0.284	IN  DEF: ^.layer_0.shape.size=(?,?)
0.275	IN  DEF: ^.layer_0.shape.size.j=15
0.270	IN  DEF: ^.layer_0.shape.size.i=3
0.269	IN  DEF: ^.layer_0.pos=(?,?)
0.264	IN  DEF: ^.layer_0.pos.j=(0)
0.260	IN  DEF: ^.layer_0.pos.i=(0)
0.259	IN  DEF: ^.layer_01.pos=(?,?)
0.258	IN  DEF: ^.layer_01.shape.size=(?,?)
0.257	IN  DEF: ^.layer_011.pos=(?,?)
0.253	IN  DEF: ^.layer_011.pos.i=8
0.248	IN  DEF: ^.layer_011.pos.j=6
0.243	IN  DEF: ^.layer_01.shape.size.i=4
0.238	IN  DEF: ^.layer_01.pos.i=6
0.237	IN  DEF: ^.layer_0111.pos=(?,?)
0.236	IN  DEF: ^.layer_011.shape.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color blue and layers
  _00: ^.layer_0
  _0: a rectangle with size (7,^.layer_0.shape.size.j) and color ^.color and mask ? at (^.layer_0.shape.size.i,(0))
WHERE (Mi)
a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask ? at ((0),(0))
  _01: a rectangle with size (4,?) and color grey and mask ? at (6,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (8,6)
  _0111: a rectangle with size ? and color grey and mask ? at (?,?)
  _01111: a rectangle with size ? and color grey and mask Full at ?

DL input  with Mi: L = 174.7 + 2734.0 = 2908.7
DL output with Mo: L = 62.4 + 2161.2 = 2223.6
DL input+output M: L = 237.1 + 4895.2 = 5132.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (4,1) and color grey and mask Full at (6,13)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,6)
  _0111: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (7,6)
  _01111: a rectangle with size (2,3) and color grey and mask Full at (8,1)
diff: 
delta:
   (125.5 bits)
data: a background with size (10,15) and color blue and layers
  _00: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _0: a rectangle with size (7,15) and color black and mask x...xx...xxxxx.|xxxxxxxxxxxxxx.|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx at (3,0)
diff: 
delta:
   (108.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full at (8,1)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,6)
  _0111: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (7,6)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (6,13)
diff:   ^.layer_01.shape.size.i  ^.layer_01.pos.i
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _011: a rectangle with size (2,3) and color grey and mask .x.|xxx at (8,6)
  _0111: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
diff: 
delta:
   (147.9 bits)
data: a background with size (10,15) and color blue and layers
  _00: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _0: a rectangle with size (7,15) and color black and mask ...x.xxxxx....x|xxxxxxxxxxx..xx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx at (3,0)
diff: 
delta:
   (108.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _011: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _0111: a rectangle with size (2,3) and color grey and mask .x.|xxx at (8,6)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
diff:   ^.layer_011.pos.j
delta:
! 10 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxx.x.xx.xxx|x..xxx...xx...x at (0,0)
  _01: a rectangle with size (4,3) and color grey and mask x.x|xxx|xxx|xxx at (6,11)
  _011: a rectangle with size (2,3) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (4,2) and color grey and mask x.|xx|x.|xx at (6,7)
  _01111: a rectangle with size (3,4) and color grey and mask x...|xxx.|xxxx at (7,1)
diff:   ^.layer_01111.shape.mask  ^.layer_011.pos.j
delta:
! 13 wrong pixels (generated / expected)

TEST 6a1e5592.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.9 sec (26.9 sec/task)
bits-train-error = 2161.2 bits (2161.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-243] Checking task 6aa20dc0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12504.0 = 12513.0
DL output with Mo: L = 9.0 + 31217.3 = 31226.2
DL input+output M: L = 17.9 + 43721.3 = 43739.2

# learning a model for train pairs
2.000	
1.577	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.511	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.463	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.441	OUT DEF: ^.size=^.size
1.428	OUT DEF: ^.layer_00=^.layer_0
1.421	OUT DEF: ^.color=^.color
1.414	IN  DEF: ^.layer_0.shape.mask=Full
1.412	IN  DEF: ^.size=(?,?)
1.409	IN  DEF: ^.layer_0.pos=(?,?)
1.406	IN  DEF: ^.layer_0.shape.size=(?,?)
1.405	OUT DEF: ^.layer_0.pos=(?,?)
1.404	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 41.8 + 11475.2 = 11517.0
DL output with Mo: L = 40.1 + 15053.9 = 15094.0
DL input+output M: L = 81.9 + 26529.1 = 26610.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (20,2) and color blue and mask Full at (0,11)
diff: 
delta: (1,13)=2  (3,15)=3  (4,5)=2  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (6,5)=8  (6,7)=3  (11,9)=2  (11,10)=2  (12,9)=2  (12,10)=2  (15,5)=3  (15,6)=3  (16,5)=3  (16,6)=3 
   (423.2 bits)
data: a background with size (20,19) and color blue and layers
  _00: a rectangle with size (20,2) and color blue and mask Full at (0,11)
  _0: a rectangle with size (6,6) and color cyan and mask xxxx..|xxxx..|..xxxx|..xxxx|....xx|....xx at (11,5)
diff: 
delta: (1,13)=2  (1,14)=8  (1,15)=8  (2,13)=8  (2,14)=8  (3,13)=8  (3,15)=3  (4,5)=2  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (6,5)=8  (6,7)=3  (11,9)=2  (11,10)=2  (12,9)=2  (12,10)=2  (15,5)=3  (15,6)=3  (16,5)=3  (16,6)=3 
   (537.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (20,2) and color blue and mask Full at (0,11)
diff: 
delta: (1,13)=2  (3,15)=3  (4,5)=2  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (6,5)=8  (6,7)=3  (11,9)=2  (11,10)=2  (12,9)=2  (12,10)=2  (15,5)=3  (15,6)=3  (16,5)=3  (16,6)=3 
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (4,13) and color blue and mask Full at (0,0)
diff: 
delta: (1,13)=2  (3,15)=3  (4,5)=2  (4,6)=8  (4,7)=8  (5,5)=8  (5,6)=8  (6,5)=8  (6,7)=3  (11,9)=2  (11,10)=2  (12,9)=2  (12,10)=2  (15,5)=3  (15,6)=3  (16,5)=3  (16,6)=3 
! 42 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (7,11)
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1  (13,5)=6  (13,6)=6  (13,7)=6  (14,5)=6  (14,6)=6  (14,7)=6  (15,5)=6  (15,6)=6  (15,7)=6 
   (421.8 bits)
data: a background with size (20,21) and color yellow and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _0: a rectangle with size (9,9) and color blue and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxx...xxx|xxx...xxx|xxx...xxx|...xxxxxx|...xxxxxx|...xxxxxx at (7,5)
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1  (13,5)=6  (13,6)=6  (13,7)=6  (14,5)=6  (14,6)=6  (14,7)=6  (15,5)=6  (15,6)=6  (15,7)=6 
   (482.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (7,11)
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1  (13,5)=6  (13,6)=6  (13,7)=6  (14,5)=6  (14,6)=6  (14,7)=6  (15,5)=6  (15,6)=6  (15,7)=6 
! 75 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (13,5)
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1  (7,11)=2  (7,12)=2  (7,13)=2  (8,11)=2  (8,12)=2  (8,13)=2  (9,11)=2  (9,12)=2  (9,13)=2 
! 75 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (2,21) and color yellow and mask Full at (0,0)
diff: 
delta: (2,3)=1  (2,4)=1  (2,5)=6  (3,3)=1  (3,5)=1  (4,3)=2  (4,4)=1  (4,5)=1  (7,11)=2  (7,12)=2  (7,13)=2  (8,11)=2  (8,12)=2  (8,13)=2  (9,11)=2  (9,12)=2  (9,13)=2  (13,5)=6  (13,6)=6  (13,7)=6  (14,5)=6  (14,6)=6  (14,7)=6  (15,5)=6  (15,6)=6  (15,7)=6 
! 80 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (13,5) and color cyan and mask Full at (8,8)
diff: 
delta: (5,6)=2  (5,7)=3  (6,6)=3  (6,7)=3  (6,8)=3  (7,7)=3  (7,8)=4  (10,13)=4  (12,15)=2  (14,7)=2  (16,5)=4 
   (302.5 bits)
data: a background with size (21,22) and color cyan and layers
  _00: a rectangle with size (13,5) and color cyan and mask Full at (8,8)
  _0: a rectangle with size (2,22) and color cyan and mask Full at (8,0)
diff: 
delta: (5,6)=2  (5,7)=3  (6,6)=3  (6,7)=3  (6,8)=3  (7,7)=3  (7,8)=4  (10,13)=4  (10,14)=3  (11,13)=3  (11,14)=3  (11,15)=3  (12,14)=3  (12,15)=2  (14,6)=3  (14,7)=2  (15,5)=3  (15,6)=3  (15,7)=3  (16,5)=4  (16,6)=3 
   (486.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (10,7) and color cyan and mask Full at (11,8)
diff: 
delta: (5,6)=2  (5,7)=3  (6,6)=3  (6,7)=3  (6,8)=3  (7,7)=3  (7,8)=4  (10,13)=4  (12,15)=2  (14,7)=2  (16,5)=4 
! 25 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color green and layers
  _0: a rectangle with size (16,4) and color green and mask Full at (6,7)
diff: 
delta: (1,10)=4  (1,11)=4  (1,12)=4  (2,10)=4  (2,11)=4  (2,12)=4  (3,10)=4  (3,11)=4  (3,12)=4  (4,6)=8  (4,7)=4  (5,5)=8  (5,7)=8  (6,5)=1  (6,6)=8  (7,16)=1  (7,17)=1  (7,18)=1  (8,16)=1  (8,17)=1  (8,18)=1  (9,16)=1  (9,17)=1  (9,18)=1  (13,1)=1  (13,15)=1  (13,16)=1  (14,15)=1  (14,16)=1  (15,3)=4  (17,11)=4  (17,12)=4  (18,11)=4  (18,12)=4 
! 94 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,22) and color green and layers
  _0: a rectangle with size (13,5) and color green and mask Full at (0,0)
diff: 
delta: (1,10)=4  (1,11)=4  (1,12)=4  (2,10)=4  (2,11)=4  (2,12)=4  (3,10)=4  (3,11)=4  (3,12)=4  (4,6)=8  (4,7)=4  (5,5)=8  (5,7)=8  (6,5)=1  (6,6)=8  (7,16)=1  (7,17)=1  (7,18)=1  (8,16)=1  (8,17)=1  (8,18)=1  (9,16)=1  (9,17)=1  (9,18)=1  (13,1)=1  (13,15)=1  (13,16)=1  (14,15)=1  (14,16)=1  (15,3)=4  (17,11)=4  (17,12)=4  (18,11)=4  (18,12)=4 
! 90 wrong pixels (generated / expected)

TEST 6aa20dc0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 15053.9 bits (15053.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-242] Checking task 6b9890af.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21873.9 = 21882.8
DL output with Mo: L = 9.0 + 23728.2 = 23737.1
DL input+output M: L = 17.9 + 45602.1 = 45620.0

# learning a model for train pairs
2.000	
1.241	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.739	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.365	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.271	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.250	OUT DEF: ^.size=^.layer_0.shape.size
0.244	IN  DEF: ^.layer_0.shape.color=red
0.237	IN  DEF: ^.layer_0.shape.mask=Border
0.235	IN  DEF: ^.color=black
0.234	IN  DEF: ^.size=(?,?)
0.232	IN  DEF: ^.layer_0.pos=(?,?)
0.230	IN  DEF: ^.layer_0.shape.size=(?,?)
0.229	IN  DEF: ^.layer_01.pos=(?,?)
0.227	IN  DEF: ^.layer_01.shape.size=(?,?)
0.220	IN  DEF: ^.layer_01.shape.size.i=3
0.212	IN  DEF: ^.layer_01.shape.size.j=3
0.211	OUT DEF: ^.layer_01.pos=(?,?)
0.206	OUT DEF: ^.layer_01.pos.i=1
0.200	OUT DEF: ^.layer_01.pos.j=1
0.199	OUT DEF: ^.layer_0.pos=(?,?)
0.193	OUT DEF: ^.layer_0.pos.i=(0)
0.188	OUT DEF: ^.layer_0.pos.j=(0)
0.187	OUT DEF: ^.layer_01.shape.size=(?,?)
0.178	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.i - 2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: ^.layer_0.shape at ((0),(0))
  _01: a rectangle with size (^.layer_0.shape.size.i - 2,?) and color ? and mask ? at (1,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (3,3) and color ? and mask ? at (?,?)

DL input  with Mi: L = 76.3 + 2339.5 = 2415.8
DL output with Mo: L = 69.4 + 1534.7 = 1604.1
DL input+output M: L = 145.7 + 3874.1 = 4019.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,21) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (7,6)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (2,5)
diff: 
delta:
   (77.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask ..xx..|..xx..|xxxxxx|xxxxxx|..xx..|..xx.. at (1,1)
diff: 
delta:
   (52.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,21) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (7,6)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (2,5)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN 6b9890af.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (9,10)
diff: 
delta:
   (75.4 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (1,1)
diff: 
delta:
   (23.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (9,10)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6b9890af.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,24) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|..x at (15,13)
diff: 
delta:
   (81.0 bits)
data: a background with size (11,11) and color yellow and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (0,0)
  _01: a rectangle with size (9,6) and color black and mask xxx...|xxx...|xxx...|...xxx|...xxx|...xxx|xxxxxx|xxxxxx|xxxxxx at (1,1)
diff: 
delta:
   (77.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,24) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|..x at (15,13)
diff: 
delta:
! 57 wrong pixels (generated / expected)

TRAIN 6b9890af.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,26) and color black and layers
  _0: a rectangle with size (14,14) and color red and mask Border at (4,2)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (4,20)
diff: 
delta:
! 80 wrong pixels (generated / expected)

TEST 6b9890af.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 1534.7 bits (1534.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-241] Checking task 6c434453.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11381.0 = 11390.0
DL output with Mo: L = 9.0 + 9100.2 = 9109.2
DL input+output M: L = 17.9 + 20481.2 = 20499.2

# learning a model for train pairs
2.000	
1.736	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.525	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.406	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.285	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.164	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.048	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 5936.9 = 5984.9
DL output with Mo: L = 85.3 + 4674.9 = 4760.2
DL input+output M: L = 133.3 + 10611.7 = 10745.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask .x....|xxx...|.x.xxx|...x.x|...xxx at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (0,0)
diff: 
delta: (1,7)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,7)=1  (7,8)=1  (7,9)=1 
   (255.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (1,6)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (4,0)
  _0111: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (6,3)
diff: 
delta: (7,8)=1  (7,9)=1 
   (220.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask .x....|xxx...|.x.xxx|...x.x|...xxx at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (0,0)
diff: 
delta: (1,7)=1  (2,6)=1  (2,7)=1  (2,8)=1  (3,7)=1  (7,8)=1  (7,9)=1 
! 23 wrong pixels (generated / expected)

TRAIN 6c434453.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask Border at (5,1)
diff: 
delta: (1,0)=1  (1,1)=1  (2,0)=1  (2,1)=1  (3,8)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,8)=1  (7,6)=1  (8,6)=1  (8,7)=1  (8,8)=1 
   (338.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (3,7)
  _011: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (5,1)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (1,0)
diff: 
delta: (7,6)=1  (8,6)=1  (8,7)=1  (8,8)=1 
   (247.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask Border at (5,1)
diff: 
delta: (1,0)=1  (1,1)=1  (2,0)=1  (2,1)=1  (3,8)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,8)=1  (7,6)=1  (8,6)=1  (8,7)=1  (8,8)=1 
! 25 wrong pixels (generated / expected)

TRAIN 6c434453.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,3) and color blue and mask Border at (7,1)
diff: 
delta: (0,8)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,8)=1  (6,6)=1  (6,7)=1  (8,8)=1  (8,9)=1  (9,8)=1  (9,9)=1 
! 25 wrong pixels (generated / expected)

TEST 6c434453.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.4 sec (25.4 sec/task)
bits-train-error = 4674.9 bits (4674.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-240] Checking task 6cdd2623.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 24675.8 = 24684.7
DL output with Mo: L = 9.0 + 21851.8 = 21860.8
DL input+output M: L = 17.9 + 46527.6 = 46545.5

# learning a model for train pairs
2.000	
1.485	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.125	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.093	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.063	OUT DEF: ^.size=^.size
1.040	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.027	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.021	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.018	OUT DEF: ^.layer_0.shape.mask=Full
1.014	OUT DEF: ^.layer_01.shape.mask=Full
1.012	OUT DEF: ^.color=black
1.010	IN  DEF: ^.color=black
1.009	OUT DEF: ^.layer_0.pos=(?,?)
1.001	OUT DEF: ^.layer_0.pos.j=(0)
1.000	OUT DEF: ^.layer_0.shape.size=(?,?)
0.985	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.982	OUT DEF: ^.layer_0.shape.size.i=1
0.980	OUT DEF: ^.layer_01.pos=(?,?)
0.978	OUT DEF: ^.layer_01.shape.size=(?,?)
0.977	IN  DEF: ^.size=(?,?)
0.976	IN  DEF: ^.layer_0.pos=(?,?)
0.974	IN  DEF: ^.layer_0.shape.size=(?,?)
0.973	IN  DEF: ^.layer_01.pos=(?,?)
0.971	IN  DEF: ^.layer_01.shape.size=(?,?)
0.970	IN  DEF: ^.layer_011.pos=(?,?)
0.968	IN  DEF: ^.layer_011.shape.size=(?,?)
0.967	IN  DEF: ^.layer_0111.pos=(?,?)
0.966	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.j) and color ? and mask Full at (?,(0))
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 125.3 + 22370.2 = 22495.5
DL output with Mo: L = 65.7 + 1120.7 = 1186.4
DL input+output M: L = 190.9 + 23490.9 = 23681.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,5)
  _01: a rectangle with size (1,5) and color grey and mask Full at (8,3)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (3,2) and color red and mask .x|.x|x. at (4,2)
diff: 
delta: (0,11)=3  (0,17)=2  (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,5)=2  (4,14)=2  (5,7)=2  (5,10)=2  (5,18)=2  (5,20)=5# (6,9)=5# (6,10)=5# (6,13)=5# (6,19)=2  (6,20)=5# (7,13)=2  (7,18)=2  (8,0)=3  (8,5)=0  (8,6)=2  (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
   (951.1 bits)
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (1,22) and color green and mask Full at (8,0)
  _01: a rectangle with size (11,1) and color green and mask Full at (0,11)
diff: 
delta:
   (36.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,5)
  _01: a rectangle with size (1,5) and color grey and mask Full at (8,3)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (3,2) and color red and mask .x|.x|x. at (4,2)
diff: 
delta: (0,11)=3  (0,17)=2  (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,5)=2  (4,14)=2  (5,7)=2  (5,10)=2  (5,18)=2  (5,20)=5# (6,9)=5# (6,10)=5# (6,13)=5# (6,19)=2  (6,20)=5# (7,13)=2  (7,18)=2  (8,0)=3  (8,5)=0  (8,6)=2  (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
! 55 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
diff: 
delta: (2,8)=1  (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
   (514.0 bits)
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (1,20) and color red and mask Full at (3,0)
  _01: a rectangle with size (1,20) and color red and mask Full at (11,0)
diff: 
delta:
   (38.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
diff: 
delta: (2,8)=1  (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
! 62 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _01: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _011: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (13,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (14,0)=4  (14,2)=4  (14,4)=4  (14,9)=5# (14,13)=8 
   (772.0 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,17) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (15,1) and color cyan and mask Full at (0,13)
diff: 
delta:
   (37.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _01: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _011: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (13,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (14,0)=4  (14,2)=4  (14,4)=4  (14,9)=5# (14,13)=8 
! 49 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color black and layers
  _0: a rectangle with size (6,1) and color orange and mask Full at (5,10)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,15)
  _011: a rectangle with size (1,2) and color orange and mask Full at (5,16)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (1,6)
diff: 
delta: (0,3)=6  (0,12)=7# (0,16)=7# (0,17)=8  (1,0)=7# (1,9)=8  (1,15)=7# (2,1)=7# (4,11)=8  (5,0)=6  (5,18)=6  (6,1)=7# (6,8)=7# (6,12)=8  (7,3)=8  (7,6)=7# (7,8)=7# (7,10)=0  (8,12)=8  (8,14)=8  (8,18)=7# (9,4)=7# (9,10)=0  (10,15)=7# (10,18)=7# (11,9)=7# (11,17)=8  (12,18)=7# (14,12)=7# (14,13)=8  (15,0)=7# (15,3)=6  (15,4)=7# (15,6)=8  (15,7)=7#
! 54 wrong pixels (generated / expected)

TEST 6cdd2623.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.6 sec (11.6 sec/task)
bits-train-error = 1120.7 bits (1120.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-239] Checking task 6cf79266.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 107539.1 = 107548.1
DL output with Mo: L = 9.0 + 107539.1 = 107548.1
DL input+output M: L = 17.9 + 215078.2 = 215096.1

# learning a model for train pairs
2.000	
1.155	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.261	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.217	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.192	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.181	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.175	OUT DEF: ^.size=^.size
0.171	OUT DEF: ^.layer_0=^.layer_0
0.169	OUT OBJECT at ^.layer_0110: ^.layer_01.shape at ?
0.165	OUT DEF: ^.layer_0110=^.layer_01
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size ? and color ? and mask ? at ?
  _0110: ^.layer_01
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 15551.6 = 15599.6
DL output with Mo: L = 56.3 + 2132.8 = 2189.1
DL input+output M: L = 104.3 + 17684.4 = 17788.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (1,16) and color grey and mask Full at (2,0)
  _01: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
diff: 
delta:
   (501.8 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (1,16) and color grey and mask Full at (2,0)
  _01: a rectangle with size (1,13) and color grey and mask Full at (18,0)
  _0110: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
  _011: a rectangle with size (3,3) and color blue and mask Full at (6,16)
diff: 
delta:
   (66.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
  _01: a rectangle with size (3,3) and color black and mask Full at (6,16)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (1,16) and color grey and mask Full at (2,0)
  _01: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 6cf79266.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
  _01: a rectangle with size (3,4) and color green and mask .xxx|xx.x|xxx. at (17,5)
diff: 
delta: (14,0)=3 
   (536.6 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (6,3)
  _0110: a rectangle with size (3,4) and color green and mask .xxx|xx.x|xxx. at (17,5)
  _011: a rectangle with size (1,1) and color green and mask Full at (14,0)
diff: 
delta:
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
  _01: a rectangle with size (3,4) and color green and mask .xxx|xx.x|xxx. at (17,5)
diff: 
delta: (14,0)=3 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
  _01: a rectangle with size (3,4) and color green and mask Full at (17,5)
diff: 
delta: (14,0)=3  (17,5)=0  (18,7)=0  (19,8)=0 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (18,5)
diff: 
delta: (14,0)=3  (17,6)=3  (17,7)=3  (17,8)=3  (18,8)=3  (19,7)=3 
! 17 wrong pixels (generated / expected)

TRAIN 6cf79266.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
  _01: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta: (3,0)=7#
   (516.7 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (5,14)
  _0110: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _011: a rectangle with size (3,3) and color blue and mask Full at (16,3)
diff: 
delta: (3,0)=7#
   (88.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
  _01: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta: (3,0)=7#
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
  _01: a rectangle with size (1,1) and color orange and mask Full at (3,0)
diff: 
delta: (0,0)=7#
! 22 wrong pixels (generated / expected)

TRAIN 6cf79266.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color yellow and mask .x.xx.xxx.....xxxxx.|..xx..x.xx....xxxxx.|xxx..x.x.x.xxxxxx.x.|xx.x..x......xxx.x..|x..xx.xxxxxxx.xx.x.x|xx..x..xxxxxx..xx.x.|...x....xxxxx.x.xx.x|x.xx...xx....xx.....|.xxx...xxx..x.xxx...|x...xx..x..x.xxx.x.x|...x.x.xxx..x.xxx.xx|.xx..xxxx...xxxxx.x.|..x..x..x..x.xx...xx|x.xx.x..xxx....xxx..|.xxxx..x.x..xx.xxxxx|x..xx.x.x..x.x.x.x..|xx.x.x.xx..xxx....xx|x....xx.xx.x.x...xxx|.....xxxx.x..x......|.......xx...x.x..... at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (19,0)
diff: 
delta: (0,12)=4  (19,16)=4  (19,18)=4  (19,19)=4 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color yellow and mask .x.xx.xxx.....xxxxx.|..xx..x.xx....xxxxx.|xxx..x.x.x.xxxxxx.x.|xx.x..x......xxx.x..|x..xx.xxxxxxx.xx.x.x|xx..x..xxxxxx..xx.x.|...x....xxxxx.x.xx.x|x.xx...xx....xx.....|.xxx...xxx..x.xxx...|x...xx..x..x.xxx.x.x|...x.x.xxx..x.xxx.xx|.xx..xxxx...xxxxx.x.|..x..x..x..x.xx...xx|x.xx.x..xxx....xxx..|.xxxx..x.x..xx.xxxxx|x..xx.x.x..x.x.x.x..|xx.x.x.xx..xxx....xx|x....xx.xx.x.x...xxx|.....xxxx.x..x......|.......xx...x.x..... at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (19,18)
diff: 
delta: (0,12)=4  (19,0)=4  (19,1)=4  (19,16)=4 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color yellow and mask .x.xx.xxx.....xxxxx.|..xx..x.xx....xxxxx.|xxx..x.x.x.xxxxxx.x.|xx.x..x......xxx.x..|x..xx.xxxxxxx.xx.x.x|xx..x..xxxxxx..xx.x.|...x....xxxxx.x.xx.x|x.xx...xx....xx.....|.xxx...xxx..x.xxx...|x...xx..x..x.xxx.x.x|...x.x.xxx..x.xxx.xx|.xx..xxxx...xxxxx.x.|..x..x..x..x.xx...xx|x.xx.x..xxx....xxx..|.xxxx..x.x..xx.xxxxx|x..xx.x.x..x.x.x.x..|xx.x.x.xx..xxx....xx|x....xx.xx.x.x...xxx|.....xxxx.x..x......|.......xx...x.x..... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,12)
diff: 
delta: (19,0)=4  (19,1)=4  (19,16)=4  (19,18)=4  (19,19)=4 
! 35 wrong pixels (generated / expected)

TEST 6cf79266.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.0 sec (29.0 sec/task)
bits-train-error = 2132.8 bits (2132.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-238] Checking task 6d0160f0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 50094.1 = 50103.1
DL output with Mo: L = 9.0 + 34648.4 = 34657.4
DL input+output M: L = 17.9 + 84742.5 = 84760.5

# learning a model for train pairs
2.000	
1.292	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.850	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.710	OUT DEF: ^.layer_0.shape.mask=...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.687	OUT DEF: ^.size=^.size
0.664	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.652	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.646	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.642	OUT OBJECT at ^.layer_01: a point with color ? at ?
0.636	OUT DEF: ^.layer_01.shape.color=yellow
0.631	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.626	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.620	OUT DEF: ^.layer_0111.shape.color=orange
0.617	IN  DEF: ^.layer_0.shape.color=grey
0.614	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.611	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.608	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.606	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.603	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.600	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
0.597	IN  OBJECT at ^.layer_01111111: a point with color ? at ?
0.595	IN  OBJECT at ^.layer_011111111: a point with color ? at ?
0.592	IN  OBJECT at ^.layer_0111111111: a point with color ? at ?
0.586	OUT DEF: ^.layer_011.shape=^.layer_0111111111.shape
0.585	OUT DEF: ^.color=black
0.583	OUT DEF: ^.layer_01.pos=(?,?)
0.582	OUT DEF: ^.layer_011.pos=(?,?)
0.580	OUT DEF: ^.layer_0111.pos=(?,?)
0.579	IN  DEF: ^.color=black
0.578	IN  DEF: ^.size=(?,?)
0.571	IN  DEF: ^.size.i=11
0.564	IN  DEF: ^.size.j=11
0.563	IN  DEF: ^.layer_0.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at ^.layer_0.pos
  _01: a point with color yellow at (?,?)
  _011: ^.layer_0111111111.shape at (?,?)
  _0111: a point with color orange at (?,?)
WHERE (Mi)
a background with size (11,11) and color black and layers
  _0: a rectangle with size ? and color grey and mask ? at (?,?)
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?
  _011111: a point with color ? at ?
  _0111111: a point with color ? at ?
  _01111111: a point with color ? at ?
  _011111111: a point with color ? at ?
  _0111111111: a point with color ? at ?

DL input  with Mi: L = 156.0 + 25477.9 = 25633.9
DL output with Mo: L = 203.1 + 1571.0 = 1774.1
DL input+output M: L = 359.1 + 27048.9 = 27407.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...xx..x...|...xx..x...|xxxxxxxxxxx|.x.x..xxx..|...xx..x.x.|...x...x...|xxxxxxxxxxx|...xx..x.x.|.xxx.x.xxx.|...xx..x... at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color orange at (0,4)
  _0111: a point with color pink at (0,6)
  _01111: a point with color cyan at (0,8)
  _011111: a point with color grey at (0,9)
  _0111111: a point with color orange at (0,10)
  _01111111: a point with color brown at (1,2)
  _011111111: a point with color pink at (1,9)
  _0111111111: a point with color green at (1,5)
diff: 
delta: (2,0)=7# (2,1)=2  (2,6)=2  (2,9)=3  (4,0)=7# (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,0)=7# (9,4)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
   (839.7 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (0,10)
  _011: a point with color green at (0,9)
  _0111: a point with color orange at (1,8)
diff: 
delta: (2,10)=2 
   (49.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...xx..x...|...xx..x...|xxxxxxxxxxx|.x.x..xxx..|...xx..x.x.|...x...x...|xxxxxxxxxxx|...xx..x.x.|.xxx.x.xxx.|...xx..x... at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color orange at (0,4)
  _0111: a point with color pink at (0,6)
  _01111: a point with color cyan at (0,8)
  _011111: a point with color grey at (0,9)
  _0111111: a point with color orange at (0,10)
  _01111111: a point with color brown at (1,2)
  _011111111: a point with color green at (1,5)
  _0111111111: a point with color pink at (1,9)
diff: 
delta: (2,0)=7# (2,1)=2  (2,6)=2  (2,9)=3  (4,0)=7# (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,0)=7# (9,4)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
! 5 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,5)
  _0111: a point with color pink at (0,9)
  _01111: a point with color orange at (1,2)
  _011111: a point with color brown at (1,10)
  _0111111: a point with color pink at (2,1)
  _01111111: a point with color blue at (2,5)
  _011111111: a point with color green at (4,1)
  _0111111111: a point with color brown at (5,2)
diff: 
delta: (5,0)=1  (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
   (511.2 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (5,10)
  _011: a point with color brown at (4,9)
  _0111: a point with color orange at (6,8)
diff: 
delta:
   (28.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,5)
  _0111: a point with color pink at (0,9)
  _01111: a point with color orange at (1,2)
  _011111: a point with color brown at (1,10)
  _0111111: a point with color pink at (2,1)
  _01111111: a point with color blue at (2,5)
  _011111111: a point with color green at (4,1)
  _0111111111: a point with color blue at (5,0)
diff: 
delta: (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
! 4 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color pink at (0,5)
  _0111: a point with color orange at (0,8)
  _01111: a point with color cyan at (1,0)
  _011111: a point with color green at (1,1)
  _0111111: a point with color pink at (1,2)
  _01111111: a point with color cyan at (1,9)
  _011111111: a point with color green at (2,5)
  _0111111111: a point with color cyan at (4,1)
diff: 
delta: (4,2)=7# (4,5)=3  (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
   (646.8 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (5,0)
  _011: a point with color cyan at (5,2)
  _0111: a point with color orange at (6,2)
diff: 
delta: (6,1)=6 
   (49.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color pink at (0,5)
  _0111: a point with color orange at (0,8)
  _01111: a point with color cyan at (1,0)
  _011111: a point with color green at (1,1)
  _0111111: a point with color pink at (1,2)
  _01111111: a point with color cyan at (1,9)
  _011111111: a point with color green at (2,5)
  _0111111111: a point with color cyan at (4,1)
diff: 
delta: (4,2)=7# (4,5)=3  (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
! 5 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color blue at (0,5)
  _0111: a point with color red at (0,10)
  _01111: a point with color red at (1,1)
  _011111: a point with color green at (1,5)
  _0111111: a point with color pink at (1,9)
  _01111111: a point with color blue at (4,1)
  _011111111: a point with color orange at (5,0)
  _0111111111: a point with color green at (4,9)
diff: 
delta: (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
   (550.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (0,5)
  _011: a point with color green at (2,5)
  _0111: a point with color orange at (1,5)
diff: 
delta:
   (28.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color blue at (0,5)
  _0111: a point with color red at (0,10)
  _01111: a point with color red at (1,1)
  _011111: a point with color green at (1,5)
  _0111111: a point with color pink at (1,9)
  _01111111: a point with color blue at (4,1)
  _011111111: a point with color green at (4,9)
  _0111111111: a point with color orange at (5,0)
diff: 
delta: (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
! 4 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color red at (0,0)
  _011: a point with color green at (0,2)
  _0111: a point with color red at (0,4)
  _01111: a point with color green at (0,9)
  _011111: a point with color orange at (1,0)
  _0111111: a point with color pink at (1,1)
  _01111111: a point with color orange at (1,5)
  _011111111: a point with color pink at (1,8)
  _0111111111: a point with color orange at (1,9)
diff: 
delta: (2,4)=6  (2,6)=3  (2,10)=2  (4,0)=7# (4,8)=6  (4,10)=4  (5,1)=6  (5,5)=2  (5,6)=7# (5,9)=2  (6,0)=6  (6,2)=2  (6,5)=3  (6,9)=7# (8,0)=7# (8,5)=6  (8,8)=2  (8,9)=3  (9,2)=6  (9,5)=2  (10,0)=2  (10,5)=7# (10,9)=6  (10,10)=7#
! 5 wrong pixels (generated / expected)

TEST 6d0160f0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.4 sec (26.4 sec/task)
bits-train-error = 1571.0 bits (1571.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-237] Checking task 6d0aefbc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3623.9 = 3632.8
DL output with Mo: L = 9.0 + 6734.2 = 6743.2
DL input+output M: L = 17.9 + 10358.1 = 10376.0

# learning a model for train pairs
2.000	
1.663	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.465	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.361	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.331	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.293	OUT DEF: ^.color=^.layer_01.shape.color
1.266	OUT DEF: ^.layer_0.shape.color=^.color
1.252	IN  DEF: ^.size=(?,?)
1.192	IN  DEF: ^.size.i=3
1.133	IN  DEF: ^.size.j=3
1.119	IN  DEF: ^.layer_0.pos=(?,?)
1.087	IN  DEF: ^.layer_0.pos.j=0
1.074	IN  DEF: ^.layer_0.shape.size=(?,?)
1.061	IN  DEF: ^.layer_01.pos=(?,?)
1.053	OUT DEF: ^.size=(?,?)
1.010	OUT DEF: ^.size.j=6
0.977	OUT DEF: ^.size.i=^.size.i
0.970	OUT DEF: ^.layer_0.pos=(?,?)
0.947	OUT DEF: ^.layer_0.pos.j=(0)
0.940	OUT DEF: ^.layer_0.shape.size=(?,?)
0.896	OUT DEF: ^.layer_0.shape.size.j=6
0.889	OUT DEF: ^.layer_01.pos=(?,?)
0.882	OUT DEF: ^.layer_01.shape.size=(?,?)
0.876	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.i - 1
0.859	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,6) and color ^.layer_01.shape.color and layers
  _0: a rectangle with size (?,6) and color ^.color and mask ? at (?,(0))
  _01: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,^.layer_01.pos.i - 1)
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,0)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 63.9 + 2031.1 = 2094.9
DL output with Mo: L = 93.6 + 1810.1 = 1903.7
DL input+output M: L = 157.5 + 3841.1 = 3998.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a point with color blue at (1,0)
diff: 
delta: (1,2)=1 
   (52.4 bits)
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (3,6) and color pink and mask xxxxxx|.x..x.|..xx.. at (0,0)
  _01: a rectangle with size (1,6) and color cyan and mask Full at (2,0)
diff: 
delta:
   (46.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a point with color blue at (1,0)
diff: 
delta: (1,2)=1 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.x.|..x at (0,0)
  _01: a point with color blue at (1,0)
diff: 
delta: (1,2)=1 
! 18 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01: a point with color pink at (2,2)
diff: 
delta: (0,1)=8 
   (52.4 bits)
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (3,6) and color blue and mask ..xx..|.xxxx.|xx..xx at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (0,1)
diff: 
delta:
   (45.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01: a point with color pink at (2,2)
diff: 
delta: (0,1)=8 
! 10 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (2,0)=6 
   (62.3 bits)
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (2,6) and color cyan and mask x....x|.xxxx. at (1,0)
  _01: a rectangle with size (2,6) and color blue and mask xxxxxx|xx..xx at (0,0)
diff: 
delta:
   (53.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (2,0)=6 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,3) and color cyan and mask x..|.xx at (1,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (2,0)=6 
! 9 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a point with color blue at (1,0)
diff: 
delta:
   (36.1 bits)
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (2,6) and color pink and mask .xxxx.|xxxxxx at (1,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (35.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a point with color blue at (1,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color cyan and mask Odd Checkboard at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta: (2,2)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color pink and mask x.x|.x.|.x. at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta: (2,2)=1 
! 8 wrong pixels (generated / expected)

TEST 6d0aefbc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.1 sec (12.1 sec/task)
bits-train-error = 1810.1 bits (1810.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-236] Checking task 6d58a25d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15433.7 = 15442.7
DL output with Mo: L = 9.0 + 30118.3 = 30127.2
DL input+output M: L = 17.9 + 45552.0 = 45569.9

# learning a model for train pairs
2.000	
1.672	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.388	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.188	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.041	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.018	OUT DEF: ^.size=^.size
1.005	OUT DEF: ^.layer_00=^.layer_0
0.946	IN  DEF: ^.layer_0.shape.mask=...x...|..xxx..|.xx.xx.|x.....x
0.940	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.931	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.923	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
0.915	OUT OBJECT at ^.layer_01111: ^.layer_01.shape at ?
0.906	OUT OBJECT at ^.layer_011111: ^.layer_01.shape at ?
0.898	OUT OBJECT at ^.layer_0111111: ^.layer_01.shape at ?
0.889	OUT OBJECT at ^.layer_01111111: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_01.shape at ?
  _0111: ^.layer_01.shape at ?
  _01111: ^.layer_01.shape at ?
  _011111: ^.layer_01.shape at ?
  _0111111: ^.layer_01.shape at ?
  _01111111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ...x...|..xxx..|.xx.xx.|x.....x at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 69.1 + 9982.6 = 10051.7
DL output with Mo: L = 103.4 + 7059.4 = 7162.7
DL input+output M: L = 172.5 + 17042.0 = 17214.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
diff: 
delta: (3,16)=8  (4,3)=8  (10,1)=8  (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
   (227.1 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _0: a rectangle with size (13,1) and color cyan and mask Full at (7,9)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
  _011111: a point with color cyan at (10,18)
  _0111111: a point with color cyan at (18,15)
  _01111111: a point with color cyan at (19,1)
diff: 
delta:
   (135.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
diff: 
delta: (3,16)=8  (4,3)=8  (10,1)=8  (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
! 24 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
diff: 
delta: (2,2)=2  (4,13)=2  (4,16)=2  (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
   (290.7 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _0: a rectangle with size (12,1) and color red and mask Full at (8,6)
  _01: a rectangle with size (12,1) and color red and mask Full at (8,9)
  _011: a point with color red at (1,8)
  _0111: a point with color red at (2,2)
  _01111: a point with color red at (4,13)
  _011111: a point with color red at (4,16)
  _0111111: a point with color red at (9,17)
  _01111111: a point with color red at (10,1)
diff: 
delta: (14,16)=2  (17,14)=2  (18,1)=2 
   (209.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
diff: 
delta: (2,2)=2  (4,13)=2  (4,16)=2  (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! 37 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
diff: 
delta: (2,5)=3  (2,10)=3  (4,1)=3  (5,7)=3  (5,18)=3  (7,4)=3  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
   (480.5 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _0: a rectangle with size (14,2) and color green and mask Full at (6,12)
  _01: a rectangle with size (13,1) and color green and mask Full at (7,10)
  _011: a point with color green at (1,14)
  _0111: a point with color green at (2,5)
  _01111: a point with color green at (2,10)
  _011111: a point with color green at (4,1)
  _0111111: a point with color green at (5,7)
  _01111111: a point with color green at (5,18)
diff: 
delta: (7,4)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,18)=3  (15,4)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,19)=3 
   (361.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
diff: 
delta: (2,5)=3  (2,10)=3  (4,1)=3  (5,7)=3  (5,18)=3  (7,4)=3  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! 60 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ...x...|..xxx..|.xx.xx.|x.....x at (3,3)
  _01: a point with color pink at (1,4)
diff: 
delta: (1,10)=6  (1,18)=6  (2,11)=6  (3,2)=6  (5,13)=6  (5,18)=6  (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! 62 wrong pixels (generated / expected)

TEST 6d58a25d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.4 sec (21.4 sec/task)
bits-train-error = 7059.4 bits (7059.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-235] Checking task 6d75e8bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11517.9 = 11526.9
DL output with Mo: L = 9.0 + 17740.4 = 17749.4
DL input+output M: L = 17.9 + 29258.3 = 29276.3

# learning a model for train pairs
2.000	
1.221	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.634	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.340	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.308	OUT DEF: ^.size=^.size
0.290	OUT DEF: ^.layer_0=^.layer_0
0.278	IN  DEF: ^.layer_0.shape.color=cyan
0.270	OUT DEF: ^.layer_01.shape.color=red
0.266	OUT DEF: ^.layer_01.shape.mask=Full
0.263	IN  DEF: ^.color=black
0.260	IN  DEF: ^.size=(?,?)
0.256	IN  DEF: ^.layer_0.pos=(?,?)
0.245	IN  DEF: ^.layer_0.pos.j=1
0.242	IN  DEF: ^.layer_0.shape.size=(?,?)
0.240	OUT DEF: ^.color=black
0.238	OUT DEF: ^.layer_01.pos=(?,?)
0.230	OUT DEF: ^.layer_01.pos.i=2
0.223	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.i
0.221	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (2,^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,1)

DL input  with Mi: L = 45.2 + 2083.3 = 2128.5
DL output with Mo: L = 44.8 + 594.9 = 639.7
DL input+output M: L = 90.0 + 2678.2 = 2768.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
diff: 
delta:
   (78.1 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
  _01: a rectangle with size (9,3) and color red and mask Full at (2,2)
diff: 
delta:
   (14.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
diff: 
delta:
   (61.3 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
  _01: a rectangle with size (3,5) and color red and mask Full at (2,1)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
diff: 
delta:
   (69.0 bits)
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
  _01: a rectangle with size (5,3) and color red and mask Full at (2,1)
diff: 
delta: (2,4)=2 
   (32.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,7) and color cyan and mask x......|x...xx.|x.x..x.|xxx..x.|xxxx.xx|xxxxxxx at (2,2)
diff:   ^.layer_0.pos.j
delta:
! 16 wrong pixels (generated / expected)

TEST 6d75e8bb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 594.9 bits (594.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-234] Checking task 6e02f1e3.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3161.2 = 3170.2
DL output with Mo: L = 9.0 + 3201.7 = 3210.7
DL input+output M: L = 17.9 + 6362.9 = 6380.8

# learning a model for train pairs
2.000	
1.706	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.514	OUT DEF: ^.size=^.size
1.415	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.310	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.238	OUT DEF: ^.layer_0.shape.color=grey
1.215	OUT DEF: ^.color=black
1.196	IN  DEF: ^.size=(?,?)
1.110	IN  DEF: ^.size.i=3
1.024	IN  DEF: ^.size.j=3
1.004	IN  DEF: ^.layer_0.pos=(?,?)
0.958	IN  DEF: ^.layer_0.pos.i=0
0.912	IN  DEF: ^.layer_0.pos.j=0
0.893	IN  DEF: ^.layer_0.shape.size=(?,?)
0.807	IN  DEF: ^.layer_0.shape.size.j=3
0.788	OUT DEF: ^.layer_0.shape.size=(?,?)
0.703	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.693	IN  DEF: ^.layer_0.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color grey and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,3) and color ? and mask Full at (0,0)

DL input  with Mi: L = 47.5 + 1506.9 = 1554.4
DL output with Mo: L = 32.0 + 619.4 = 651.4
DL input+output M: L = 79.5 + 2126.3 = 2205.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (1,1)=2 
   (32.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff:   ^.layer_0.shape.mask
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color green and mask x.x|xxx at (1,0)
diff:   ^.layer_0.shape.mask  ^.layer_0.pos.i
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
diff: 
delta: (1,1)=2  (1,2)=2  (2,2)=2 
   (65.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
diff: 
delta: (1,1)=2  (1,2)=2  (2,2)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.i
delta: (1,1)=2  (1,2)=2  (2,2)=2 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (1,0)=4  (2,0)=4  (2,1)=4 
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta:
   (18.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (18.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color yellow and mask Full at (0,0)
diff: 
delta:
   (16.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color yellow and mask Full at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff:   ^.layer_0.pos.i
delta:
! 4 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
diff: 
delta: (1,0)=2  (1,2)=2  (2,1)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color red and mask Even Checkboard at (1,0)
diff:   ^.layer_0.shape.mask  ^.layer_0.pos.i
delta: (1,1)=3  (2,0)=3  (2,2)=3 
! 5 wrong pixels (generated / expected)

TEST 6e02f1e3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 619.4 bits (619.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-233] Checking task 6e19193c.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2794.2 = 2803.2
DL output with Mo: L = 9.0 + 5479.7 = 5488.7
DL input+output M: L = 17.9 + 8273.9 = 8291.8

# learning a model for train pairs
2.000	
1.821	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.625	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.457	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.287	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.167	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.096	OUT DEF: ^.size=^.size
1.045	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.005	OUT DEF: ^.layer_0=^.layer_0
0.956	IN  DEF: ^.layer_0.shape.mask=x.|xx
0.907	IN  DEF: ^.layer_01.shape.mask=xx|.x
0.868	OUT DEF: ^.layer_01=^.layer_01
0.851	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.834	OUT DEF: ^.layer_0111.shape.color=^.layer_0.shape.color
0.823	IN  DEF: ^.color=black
0.815	IN  DEF: ^.size=(?,?)
0.753	IN  DEF: ^.size.i=10
0.691	IN  DEF: ^.size.j=10
0.683	IN  DEF: ^.layer_0.pos=(?,?)
0.676	IN  DEF: ^.layer_0.shape.size=(?,?)
0.645	IN  DEF: ^.layer_0.shape.size.i=2
0.615	IN  DEF: ^.layer_0.shape.size.j=2
0.607	IN  DEF: ^.layer_01.pos=(?,?)
0.599	IN  DEF: ^.layer_01.shape.size=(?,?)
0.569	IN  DEF: ^.layer_01.shape.size.i=2
0.538	IN  DEF: ^.layer_01.shape.size.j=2
0.532	OUT DEF: ^.color=black
0.529	OUT DEF: ^.layer_011.pos=(?,?)
0.512	OUT DEF: ^.layer_011.pos.i=^.layer_01.pos.j
0.508	OUT DEF: ^.layer_011.shape.size=(?,?)
0.504	OUT DEF: ^.layer_0111.pos=(?,?)
0.489	OUT DEF: ^.layer_0111.pos.j=^.layer_0.pos.j + 2
0.485	OUT DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_01.pos.j,?)
  _0111: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j + 2)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color ? and mask x.|xx at (?,?)
  _01: a rectangle with size (2,2) and color ? and mask xx|.x at (?,?)

DL input  with Mi: L = 92.1 + 557.3 = 649.4
DL output with Mo: L = 87.1 + 1306.0 = 1393.1
DL input+output M: L = 179.3 + 1863.3 = 2042.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _011: a rectangle with size (4,4) and color orange and mask ...x|..x.|.x..|x... at (6,2)
  _0111: a rectangle with size (2,2) and color orange and mask Odd Checkboard at (0,3)
diff: 
delta:
   (56.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.mask
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask Full at (4,6)
diff:   ^.layer_01.shape.mask
delta: (5,6)=0 
! 11 wrong pixels (generated / expected)

TRAIN 6e19193c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
  _011: a rectangle with size (3,3) and color brown and mask ..x|.x.|x.. at (3,0)
  _0111: a rectangle with size (5,5) and color brown and mask ....x|...x.|..x..|.x...|x.... at (1,5)
diff: 
delta:
   (74.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (2,2) and color brown and mask Full at (1,3)
diff:   ^.layer_01.shape.mask
delta: (2,3)=0 
! 15 wrong pixels (generated / expected)

TRAIN 6e19193c.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (6,2)
diff:   ^.layer_0.shape.mask
delta: (4,7)=8  (4,8)=8  (5,7)=8 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (4,7)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (6,2)
diff:   ^.layer_0.shape.mask
delta: (2,4)=8  (3,3)=8  (3,4)=8 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (4,7)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.mask
delta: (6,2)=8  (6,3)=8  (7,3)=8 
! 14 wrong pixels (generated / expected)

TEST 6e19193c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.2 sec (5.2 sec/task)
bits-train-error = 1306.0 bits (1306.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-232] Checking task 6e82a1ae.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9363.6 = 9372.5
DL output with Mo: L = 9.0 + 9363.6 = 9372.5
DL input+output M: L = 17.9 + 18727.1 = 18745.1

# learning a model for train pairs
2.000	
1.854	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.708	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.595	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.482	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.403	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.324	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.254	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.184	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 5461.0 = 5546.3
DL output with Mo: L = 85.3 + 5461.0 = 5546.3
DL input+output M: L = 170.7 + 10922.0 = 11092.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
diff: 
delta: (6,5)=5# (6,6)=5# (7,1)=5# (8,1)=5#
   (222.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color blue and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,9)
diff: 
delta: (6,5)=3  (6,6)=3  (7,1)=3  (8,1)=3 
   (222.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
diff: 
delta: (6,5)=5# (6,6)=5# (7,1)=5# (8,1)=5#
! 22 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,1)
  _01: a rectangle with size (2,3) and color grey and mask .x.|xxx at (7,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
diff: 
delta: (2,7)=5# (3,7)=5#
   (183.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (8,1)
  _01: a rectangle with size (2,3) and color blue and mask .x.|xxx at (7,6)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color red and mask xx|x. at (5,3)
diff: 
delta: (2,7)=3  (3,7)=3 
   (183.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,1)
  _01: a rectangle with size (2,3) and color grey and mask .x.|xxx at (7,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
diff: 
delta: (2,7)=5# (3,7)=5#
! 20 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask x.|xx|x. at (6,0)
  _01: a rectangle with size (2,2) and color grey and mask xx|.x at (1,6)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
diff: 
delta:
   (139.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,0)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (1,6)
  _011: a rectangle with size (1,2) and color green and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color green and mask Full at (1,2)
diff: 
delta:
   (139.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask x.|xx|x. at (6,0)
  _01: a rectangle with size (2,2) and color grey and mask xx|.x at (1,6)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|xx. at (2,1)
  _01: a rectangle with size (4,1) and color grey and mask Full at (0,9)
  _011: a rectangle with size (2,2) and color grey and mask xx|.x at (2,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,0)
diff: 
delta: (7,3)=5# (7,4)=5# (7,7)=5# (8,7)=5#
! 22 wrong pixels (generated / expected)

TEST 6e82a1ae.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.3 sec (24.3 sec/task)
bits-train-error = 5461.0 bits (5461.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-231] Checking task 6ecd11f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 80764.1 = 80773.1
DL output with Mo: L = 9.0 + 3928.5 = 3937.4
DL input+output M: L = 17.9 + 84692.6 = 84710.5

# learning a model for train pairs
2.000	
1.187	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.160	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.132	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.102	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.072	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.038	OUT OBJECT at ^.layer_01111: a point with color ? at ?
1.003	OUT DEF: ^.layer_01111.shape.color=pink
0.991	OUT DEF: ^.color=black
0.982	OUT DEF: ^.size=(?,?)
0.973	OUT DEF: ^.layer_0.pos=(?,?)
0.950	OUT DEF: ^.layer_0.pos.i=(0)
0.927	OUT DEF: ^.layer_0.pos.j=(0)
0.918	OUT DEF: ^.layer_01.pos=(?,?)
0.895	OUT DEF: ^.layer_01.pos.i=(0)
0.873	OUT DEF: ^.layer_01.pos.j=2
0.864	OUT DEF: ^.layer_011.pos=(?,?)
0.841	OUT DEF: ^.layer_011.pos.j=(0)
0.832	OUT DEF: ^.layer_0111.pos=(?,?)
0.823	OUT DEF: ^.layer_01111.pos=(?,?)
0.818	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.796	OUT DEF: ^.layer_0111.pos.j=^.layer_01.shape.size.j
0.776	OUT DEF: ^.layer_01111.pos.j=^.layer_01.shape.size.i - 1
0.775	IN  OBJECT at ^.layer_010: a point with color ? at ?
0.773	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.738	OUT DEF: ^.layer_01.shape=^.layer_011.shape
0.719	OUT DEF: ^.layer_0111.pos.i=^.layer_011.pos.j - ^.layer_010.pos.j
0.717	IN  OBJECT at ^.layer_0110: a point with color ? at ?
0.717	IN  DEF: ^.color=black
0.716	IN  DEF: ^.size=(?,?)
0.716	IN  DEF: ^.layer_0.pos=(?,?)
0.716	IN  DEF: ^.layer_0.shape.size=(?,?)
0.715	IN  DEF: ^.layer_010.pos=(?,?)
0.715	IN  DEF: ^.layer_01.pos=(?,?)
0.714	IN  DEF: ^.layer_01.shape.size=(?,?)
0.714	IN  DEF: ^.layer_0110.pos=(?,?)
0.713	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a point with color ? at ((0),(0))
  _01: ^.layer_011.shape at ((0),2)
  _011: a point with color ? at (?,(0))
  _0111: a point with color ? at (^.layer_011.pos.j - ^.layer_010.pos.j,^.layer_01.shape.size.j)
  _01111: a point with color pink at (?,^.layer_01.shape.size.i - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 119.1 + 14020.4 = 14139.6
DL output with Mo: L = 134.5 + 1985.4 = 2119.9
DL input+output M: L = 253.6 + 16005.8 = 16259.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a point with color blue at (19,8)
  _01: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _0110: a point with color cyan at (20,8)
  _011: a point with color orange at (19,9)
diff: 
delta: (20,7)=2  (20,9)=9# (21,8)=4  (21,9)=6 
   (453.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color orange at (0,2)
  _011: a point with color green at (2,0)
  _0111: a point with color cyan at (1,1)
  _01111: a point with color pink at (2,2)
diff: 
delta:
   (30.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a point with color blue at (19,8)
  _01: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _0110: a point with color orange at (19,9)
  _011: a point with color cyan at (20,8)
diff: 
delta: (20,7)=2  (20,9)=9# (21,8)=4  (21,9)=6 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a point with color blue at (19,8)
  _01: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _0110: a point with color orange at (19,9)
  _011: a point with color brown at (20,9)
diff: 
delta: (20,7)=2  (20,8)=8  (21,8)=4  (21,9)=6 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a point with color blue at (19,8)
  _01: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _0110: a point with color cyan at (20,8)
  _011: a point with color orange at (19,9)
diff: 
delta: (20,7)=2  (20,9)=9# (21,8)=4  (21,9)=6 
! size mismatch, 10x10 instead of 3x3

TRAIN 6ecd11f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a point with color red at (19,8)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _0110: a point with color blue at (19,9)
  _011: a point with color orange at (19,10)
diff: 
delta: (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
   (314.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color orange at (0,2)
  _011: a point with color yellow at (1,0)
  _0111: a point with color blue at (2,2)
  _01111: a point with color pink at (2,1)
diff: 
delta: (1,1)=8 
   (48.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a point with color red at (19,8)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _0110: a point with color blue at (19,9)
  _011: a point with color orange at (19,10)
diff: 
delta: (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a point with color red at (19,8)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _0110: a point with color blue at (19,9)
  _011: a point with color yellow at (20,8)
diff: 
delta: (19,10)=7# (20,10)=9# (21,9)=6  (21,10)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a point with color red at (19,8)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _0110: a point with color orange at (19,10)
  _011: a point with color blue at (19,9)
diff: 
delta: (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN 6ecd11f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a point with color yellow at (16,17)
  _01: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _0110: a point with color blue at (16,18)
  _011: a point with color brown at (16,19)
diff: 
delta: (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,18)=5# (18,19)=7# (18,20)=5# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
   (633.4 bits)
data: a background with size (4,4) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color brown at (0,2)
  _011: a point with color green at (2,0)
  _0111: a point with color grey at (2,3)
  _01111: a point with color pink at (1,0)
diff: 
delta: (0,3)=4  (1,2)=6  (3,0)=2  (3,1)=4  (3,2)=2 
   (119.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a point with color yellow at (16,17)
  _01: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _0110: a point with color blue at (16,18)
  _011: a point with color brown at (16,19)
diff: 
delta: (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,18)=5# (18,19)=7# (18,20)=5# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
! size mismatch, 10x10 instead of 4x4
>> Trial 2
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a point with color yellow at (16,17)
  _01: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _0110: a point with color blue at (16,18)
  _011: a point with color yellow at (16,20)
diff: 
delta: (16,19)=9# (17,18)=3  (17,20)=1  (18,17)=3  (18,18)=5# (18,19)=7# (18,20)=5# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
! size mismatch, 10x10 instead of 4x4
>> Trial 3
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a point with color yellow at (16,17)
  _01: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _0110: a point with color brown at (16,19)
  _011: a point with color blue at (16,18)
diff: 
delta: (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,18)=5# (18,19)=7# (18,20)=5# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
! size mismatch, 10x10 instead of 4x4

TRAIN 6ecd11f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
negative integer

TEST 6ecd11f4.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 10.3 sec (10.3 sec/task)
bits-train-error = 1985.4 bits (1985.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-230] Checking task 6f8cd79b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 616.6 = 625.6
DL output with Mo: L = 9.0 + 4583.6 = 4592.5
DL input+output M: L = 17.9 + 5200.2 = 5218.1

# learning a model for train pairs
2.000	
1.406	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.284	OUT DEF: ^.size=^.size
1.168	OUT DEF: ^.layer_0.shape.size=^.size
1.072	IN  DEF: ^.color=black
0.995	IN  DEF: ^.size=(?,?)
0.955	OUT DEF: ^.layer_0.shape.color=cyan
0.915	OUT DEF: ^.layer_0.shape.mask=Border
0.902	OUT DEF: ^.color=black
0.891	OUT DEF: ^.layer_0.pos=(?,?)
0.862	OUT DEF: ^.layer_0.pos.i=(0)
0.834	OUT DEF: ^.layer_0.pos.j=(0)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color cyan and mask Border at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 11.7 + 505.4 = 517.2
DL output with Mo: L = 31.7 + 0.0 = 31.7
DL input+output M: L = 43.4 + 505.4 = 548.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
diff: 
delta:
   (11.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (4,3) and color black and layers
diff: 
delta:
   (11.8 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,4) and color black and layers
diff: 
delta:
   (13.3 bits)
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (5,6) and color black and layers
diff: 
delta:
   (14.5 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,6) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
diff: 
delta:
correct output grid

TEST 6f8cd79b.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-229] Checking task 6fa7a44f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4261.0 = 4270.0
DL output with Mo: L = 9.0 + 8070.3 = 8079.2
DL input+output M: L = 17.9 + 12331.3 = 12349.2

# learning a model for train pairs
2.000	
1.730	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.593	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.482	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.441	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.401	OUT DEF: ^.layer_01.pos=^.layer_01.pos
1.378	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.358	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.318	OUT DEF: ^.color=^.color
1.295	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.284	OUT DEF: ^.layer_01.shape.mask=Full
1.272	IN  DEF: ^.size=(?,?)
1.221	IN  DEF: ^.size.i=3
1.170	IN  DEF: ^.size.j=3
1.159	IN  DEF: ^.layer_0.pos=(?,?)
1.148	IN  DEF: ^.layer_0.shape.size=(?,?)
1.137	IN  DEF: ^.layer_01.pos=(?,?)
1.131	OUT DEF: ^.size=(?,?)
1.094	OUT DEF: ^.size.i=6
1.067	OUT DEF: ^.size.j=^.size.j
1.061	OUT DEF: ^.layer_0.shape.size=(?,?)
1.039	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
1.033	OUT DEF: ^.layer_01.shape.size=(?,?)
1.022	OUT DEF: ^.layer_01.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size (6,^.size.j) and color ^.color and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 64.3 + 2815.7 = 2880.0
DL output with Mo: L = 63.3 + 2742.8 = 2806.1
DL input+output M: L = 127.6 + 5558.5 = 5686.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color brown and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
diff: 
delta: (1,2)=4  (2,0)=2 
   (71.9 bits)
data: a background with size (6,3) and color blue and layers
  _0: a rectangle with size (6,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (2,0)=2  (3,0)=2  (4,2)=4  (5,2)=4 
   (84.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color brown and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
diff: 
delta: (1,2)=4  (2,0)=2 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color brown and mask Full at (0,0)
  _01: a point with color yellow at (1,2)
diff: 
delta: (0,2)=4  (2,0)=2 
! 8 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a point with color pink at (1,1)
diff: 
delta: (0,0)=4  (0,2)=4 
   (79.4 bits)
data: a background with size (6,3) and color cyan and layers
  _0: a rectangle with size (4,3) and color orange and mask x.x|.x.|.x.|x.x at (1,0)
  _01: a rectangle with size (4,1) and color pink and mask Full at (1,1)
diff: 
delta: (0,0)=4  (0,2)=4  (5,0)=4  (5,2)=4 
   (98.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a point with color yellow at (0,0)
diff: 
delta: (0,2)=4  (1,1)=6 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a point with color yellow at (0,2)
diff: 
delta: (0,0)=4  (1,1)=6 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a point with color pink at (1,1)
diff: 
delta: (0,0)=4  (0,2)=4 
! 11 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|x.. at (1,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (1,0)=9#
   (65.2 bits)
data: a background with size (6,3) and color orange and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|x..|.xx at (1,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (2,1)
diff: 
delta: (1,0)=9# (4,0)=9#
   (61.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|x.. at (1,0)
  _01: a point with color brown at (1,0)
diff: 
delta: (2,1)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|x.. at (1,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (1,0)=9#
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,1)
  _01: a point with color brown at (1,0)
diff: 
delta: (2,0)=5# (2,1)=1 
! 8 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|.x|x. at (0,1)
  _01: a point with color pink at (0,1)
diff: 
delta: (1,1)=6 
   (65.2 bits)
data: a background with size (6,3) and color red and layers
  _0: a rectangle with size (6,2) and color brown and mask .x|.x|x.|x.|.x|.x at (0,1)
  _01: a rectangle with size (6,1) and color pink and mask Full at (0,1)
diff: 
delta:
   (30.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|.x|x. at (0,1)
  _01: a point with color pink at (0,1)
diff: 
delta: (1,1)=6 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|.x|x. at (0,1)
  _01: a point with color pink at (1,1)
diff: 
delta: (0,1)=6 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,1)
  _01: a point with color brown at (0,2)
diff: 
delta: (1,2)=9# (2,1)=9#
! 6 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (0,1)
  _01: a point with color cyan at (1,0)
diff: 
delta: (1,1)=5# (2,2)=8 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (0,1)
  _01: a point with color grey at (1,1)
diff: 
delta: (1,0)=8  (2,2)=8 
! 8 wrong pixels (generated / expected)

TEST 6fa7a44f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.8 sec (7.8 sec/task)
bits-train-error = 2742.8 bits (2742.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-228] Checking task 72322fa7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7774.2 = 7783.2
DL output with Mo: L = 9.0 + 12460.8 = 12469.8
DL input+output M: L = 17.9 + 20235.0 = 20252.9

# learning a model for train pairs
2.000	
1.910	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.808	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.707	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.605	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
1.536	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.450	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.398	OUT DEF: ^.size=^.size
1.369	OUT DEF: ^.layer_0=^.layer_0
1.340	OUT DEF: ^.layer_0111=^.layer_01
1.324	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.310	IN  OBJECT at ^.layer_010: a point with color ? at ?
1.296	IN  OBJECT at ^.layer_0101: a point with color ? at ?
1.280	IN  OBJECT at ^.layer_01011: a point with color ? at ?
1.264	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.243	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
1.214	OUT DEF: ^.layer_00=^.layer_00
1.194	OUT OBJECT at ^.layer_0110: ^.layer_00.shape at ?
1.183	OUT OBJECT at ^.layer_010: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00
  _0: ^.layer_0
  _010: a point with color ? at ?
  _01: ^.layer_0.shape at ?
  _0110: ^.layer_00.shape at ?
  _011: ^.layer_0.shape at ?
  _0111: ^.layer_01
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a point with color ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a point with color ? at ?
  _0101: a point with color ? at ?
  _01011: a point with color ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 95.6 + 5968.3 = 6063.9
DL output with Mo: L = 89.0 + 4952.7 = 5041.7
DL input+output M: L = 184.6 + 10921.0 = 11105.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _010: a point with color pink at (4,6)
  _0101: a point with color pink at (5,19)
  _01011: a point with color blue at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
   (269.5 bits)
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _010: a point with color blue at (0,12)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (4,18)
  _0110: a point with color green at (10,2)
  _011: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,8)
  _0111: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (0,14)
diff: 
delta: (2,12)=1  (2,14)=1  (4,6)=6  (5,19)=6  (9,1)=1  (9,3)=1  (10,9)=6  (10,16)=6  (11,1)=1  (11,3)=1 
   (290.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _010: a point with color pink at (4,6)
  _0101: a point with color pink at (5,19)
  _01011: a point with color blue at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 27 wrong pixels (generated / expected)

TRAIN 72322fa7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _010: a point with color cyan at (4,10)
  _0101: a point with color yellow at (9,0)
  _01011: a point with color yellow at (9,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (10,7)
diff: 
delta:
   (137.1 bits)
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _010: a point with color cyan at (4,10)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,9)
  _0110: a point with color cyan at (9,1)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (9,0)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (10,7)
  _01111: a rectangle with size (1,3) and color yellow and mask Full at (10,6)
diff: 
delta:
   (78.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _010: a point with color cyan at (4,10)
  _0101: a point with color yellow at (9,0)
  _01011: a point with color yellow at (9,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (10,7)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _010: a point with color cyan at (4,10)
  _0101: a point with color yellow at (9,0)
  _01011: a point with color cyan at (10,7)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (9,2)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 72322fa7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _010: a point with color cyan at (3,8)
  _0101: a point with color cyan at (3,10)
  _01011: a point with color green at (5,3)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
diff: 
delta: (11,5)=2  (12,12)=3 
   (190.2 bits)
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _010: a point with color red at (3,9)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,8)
  _0110: a point with color red at (11,5)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (11,4)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _01111: a rectangle with size (3,1) and color blue and mask Full at (11,12)
diff: 
delta: (5,3)=3  (12,12)=3 
   (126.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _010: a point with color cyan at (3,8)
  _0101: a point with color cyan at (3,10)
  _01011: a point with color green at (5,3)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
diff: 
delta: (11,5)=2  (12,12)=3 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,19) and color black and layers
  _00: a point with color cyan at (1,15)
  _0: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _010: a point with color red at (1,16)
  _0101: a point with color cyan at (1,17)
  _01011: a point with color cyan at (3,8)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,10)
diff: 
delta: (5,3)=3  (11,5)=2  (12,12)=3 
! 16 wrong pixels (generated / expected)

TRAIN 72322fa7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _00: a point with color green at (1,12)
  _0: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,15)
  _010: a point with color orange at (1,13)
  _0101: a point with color green at (1,14)
  _01011: a point with color cyan at (2,8)
  _01: a rectangle with size (3,3) and color red and mask Odd Checkboard at (14,10)
diff: 
delta: (3,3)=4  (6,5)=3  (6,7)=3  (8,16)=4  (10,1)=8  (10,9)=7# (15,17)=1  (16,5)=4  (16,17)=8  (17,17)=1 
! 35 wrong pixels (generated / expected)

TEST 72322fa7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.2 sec (26.2 sec/task)
bits-train-error = 4952.7 bits (4952.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-227] Checking task 72ca375d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10508.8 = 10517.8
DL output with Mo: L = 9.0 + 1251.5 = 1260.5
DL input+output M: L = 17.9 + 11760.3 = 11778.2

# learning a model for train pairs
2.000	
1.721	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.521	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.076	OUT OBJECT at ^.layer_0: ^.layer_01.shape at ?
0.807	OUT DEF: ^.size=^.layer_01.shape.size
0.648	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.620	OUT DEF: ^.layer_0.pos=(?,?)
0.549	OUT DEF: ^.layer_0.pos.j=(0)
0.494	OUT DEF: ^.layer_0.pos.i=(0)
0.490	IN  DEF: ^.color=black
0.487	IN  DEF: ^.size=(?,?)
0.462	IN  DEF: ^.size.i=10
0.437	IN  DEF: ^.size.j=10
0.433	IN  DEF: ^.layer_0.pos=(?,?)
0.430	IN  DEF: ^.layer_0.shape.size=(?,?)
0.418	IN  DEF: ^.layer_0.shape.size.i=2
0.414	IN  DEF: ^.layer_01.pos=(?,?)
0.411	IN  DEF: ^.layer_01.shape.size=(?,?)
0.399	IN  DEF: ^.layer_01.shape.size.i=2
0.396	IN  DEF: ^.layer_011.pos=(?,?)
0.392	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color ? and layers
  _0: ^.layer_01.shape at ((0),(0))
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (2,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 110.7 + 2886.4 = 2997.1
DL output with Mo: L = 26.3 + 108.8 = 135.2
DL input+output M: L = 137.0 + 2995.2 = 3132.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _01: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _011: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
diff: 
delta:
   (95.4 bits)
data: a background with size (2,4) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (0,0)
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _01: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _011: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _01: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
  _011: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
diff: 
delta:
! size mismatch, 2x3 instead of 2x4
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _01: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _011: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
diff: 
delta:
correct output grid

TRAIN 72ca375d.json/1: 1 3rd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,2)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
diff: 
delta:
   (90.2 bits)
data: a background with size (2,2) and color brown and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (0,0)
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (1,2)
diff: 
delta:
! size mismatch, 2x4 instead of 2x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
  _01: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (1,2)
diff: 
delta:
! size mismatch, 2x5 instead of 2x2
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,2)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
diff: 
delta:
correct output grid

TRAIN 72ca375d.json/2: 1 3rd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,7) and color cyan and mask ...xxx.|xxxx.xx at (7,0)
  _01: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (2,5)
  _011: a rectangle with size (3,2) and color green and mask xx|.x|.x at (1,1)
diff: 
delta:
   (103.0 bits)
data: a background with size (2,4) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (0,0)
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,7) and color cyan and mask ...xxx.|xxxx.xx at (7,0)
  _01: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (2,5)
  _011: a rectangle with size (3,2) and color green and mask xx|.x|.x at (1,1)
diff: 
delta:
correct output grid

TRAIN 72ca375d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color yellow and mask xxxxx|x..xx at (7,4)
  _01: a rectangle with size (3,4) and color brown and mask .xx.|.xx.|xxxx at (2,0)
  _011: a rectangle with size (3,4) and color green and mask x..x|xxxx|...x at (1,5)
diff:   ^.layer_01.shape.size.i
delta:
correct output grid

TEST 72ca375d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 108.8 bits (108.8 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.56
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-226] Checking task 73251a56.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 158998.8 = 159007.8
DL output with Mo: L = 9.0 + 137527.3 = 137536.3
DL input+output M: L = 17.9 + 296526.1 = 296544.0

# learning a model for train pairs
2.000	
1.614	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.322	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.229	OUT DEF: ^.layer_0.shape.mask=x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x
1.151	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.096	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.056	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.013	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.986	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.964	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.947	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 86177.3 = 86281.1
DL output with Mo: L = 526.1 + 55140.7 = 55666.8
DL input+output M: L = 629.9 + 141318.0 = 141947.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color pink and mask .x...................|x.xx.................|.x.xxx...............|.xx.xxxx.............|..xx.xxxxx...........|..xxx.xxxxx..........|...xxx.xxxxxxx.......|...xxxx....xxxxx.....|....xxxx...xxxxxxx...|....xxxx...xxxxxxxxx.|.....xxxxx.xxxxxxxxxx|.....xxxxx.......xxxx|......xxxx.......xxxx|......xxxxxx.....xxxx|.......xxxxx.....xxxx|.......xxxxxxxx.xxxxx|........xxxxxxxx.xxxx|........xxxxxxxxx.xxx|.........x....xxxx.xx|.........x....xxxxx.x|..........xxxxxxxxxx. at (0,0)
  _01: a rectangle with size (21,13) and color blue and mask xxxx.........|xxxxxxx......|xxxxxxxxxx...|xxxxxxxxxxxxx|.xxxxxxxxxx..|.xxxxxxxxxx..|.xxxxxxxxxxxx|..xxxxxx...xx|..xxxxxx...xx|..xxxxxx...xx|...xxxxxxx.xx|...xxxxxxx...|...xxxxxxx...|....xxxxxxxx.|....xxxxxxxx.|....xxxxxxxxx|.....xxxxxxxx|.....xxxxxxxx|.....xxxxx...|......xxxx...|......xxxxxxx at (0,0)
  _011: a rectangle with size (5,14) and color red and mask xxx...........|xxxxxxx.......|xxxxxxxxxxx...|xxxx.....xxxxx|xxxx........xx at (1,7)
  _0111: a rectangle with size (6,7) and color blue and mask Full at (4,14)
  _01111: a rectangle with size (14,5) and color red and mask Full at (7,1)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,12)=6  (0,13)=6  (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (1,19)=6  (1,20)=6  (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (5,0)=2  (6,0)=3  (7,0)=3  (8,0)=4  (9,0)=4  (10,0)=5# (10,1)=3  (10,10)=1  (11,0)=5# (11,1)=3  (12,0)=6  (12,1)=3  (13,0)=6  (13,1)=4  (14,0)=1  (14,1)=4  (14,2)=3  (15,0)=1  (15,1)=4  (15,2)=3  (15,15)=1  (16,0)=2  (16,1)=5# (16,2)=3  (16,16)=1  (17,0)=2  (17,1)=5# (17,2)=3  (17,17)=1  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,18)=1  (19,0)=3  (19,1)=6  (19,2)=4  (19,3)=3  (19,19)=1  (20,0)=4  (20,1)=6  (20,2)=4  (20,3)=3  (20,20)=1 
   (2767.6 bits)
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (21,21) and color blue and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (21,21) and color pink and mask xxxx.................|xxxxxxx..............|xxxxxxxxxx...........|xxxxxxxxxxxxx........|.xxxxxxxxxxxxxxx.....|.xxxxxxxxxxxxxxxxxx..|.xxxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|......xxxxxxxxxxxxxxx|......xxxxxxxxxxxxxxx at (0,0)
  _011: a rectangle with size (5,14) and color red and mask xxx...........|xxxxxxx.......|xxxxxxxxxxx...|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (1,7)
  _0111: a rectangle with size (14,5) and color red and mask xxxxx|xxxxx|xxxxx|.xxxx|.xxxx|.xxxx|.xxxx|..xxx|..xxx|..xxx|..xxx|...xx|...xx|...xx at (7,1)
diff: 
delta: (0,4)=2  (0,5)=2  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,12)=6  (0,13)=6  (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,20)=4  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (1,19)=6  (1,20)=6  (2,18)=4  (2,19)=4  (2,20)=4  (4,0)=2  (5,0)=2  (8,0)=4  (9,0)=4  (10,0)=5# (11,0)=5# (12,0)=6  (13,0)=6  (13,1)=4  (14,0)=1  (14,1)=4  (15,0)=1  (15,1)=4  (16,0)=2  (16,1)=5# (17,0)=2  (17,1)=5# (18,1)=5# (18,2)=4  (19,1)=6  (19,2)=4  (20,0)=4  (20,1)=6  (20,2)=4 
   (1795.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color pink and mask .x...................|x.xx.................|.x.xxx...............|.xx.xxxx.............|..xx.xxxxx...........|..xxx.xxxxx..........|...xxx.xxxxxxx.......|...xxxx....xxxxx.....|....xxxx...xxxxxxx...|....xxxx...xxxxxxxxx.|.....xxxxx.xxxxxxxxxx|.....xxxxx.......xxxx|......xxxx.......xxxx|......xxxxxx.....xxxx|.......xxxxx.....xxxx|.......xxxxxxxx.xxxxx|........xxxxxxxx.xxxx|........xxxxxxxxx.xxx|.........x....xxxx.xx|.........x....xxxxx.x|..........xxxxxxxxxx. at (0,0)
  _01: a rectangle with size (21,13) and color blue and mask xxxx.........|xxxxxxx......|xxxxxxxxxx...|xxxxxxxxxxxxx|.xxxxxxxxxx..|.xxxxxxxxxx..|.xxxxxxxxxxxx|..xxxxxx...xx|..xxxxxx...xx|..xxxxxx...xx|...xxxxxxx.xx|...xxxxxxx...|...xxxxxxx...|....xxxxxxxx.|....xxxxxxxx.|....xxxxxxxxx|.....xxxxxxxx|.....xxxxxxxx|.....xxxxx...|......xxxx...|......xxxxxxx at (0,0)
  _011: a rectangle with size (5,14) and color red and mask xxx...........|xxxxxxx.......|xxxxxxxxxxx...|xxxx.....xxxxx|xxxx........xx at (1,7)
  _0111: a rectangle with size (6,7) and color blue and mask Full at (4,14)
  _01111: a rectangle with size (14,5) and color red and mask Full at (7,1)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,12)=6  (0,13)=6  (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (1,19)=6  (1,20)=6  (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (5,0)=2  (6,0)=3  (7,0)=3  (8,0)=4  (9,0)=4  (10,0)=5# (10,1)=3  (10,10)=1  (11,0)=5# (11,1)=3  (12,0)=6  (12,1)=3  (13,0)=6  (13,1)=4  (14,0)=1  (14,1)=4  (14,2)=3  (15,0)=1  (15,1)=4  (15,2)=3  (15,15)=1  (16,0)=2  (16,1)=5# (16,2)=3  (16,16)=1  (17,0)=2  (17,1)=5# (17,2)=3  (17,17)=1  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,18)=1  (19,0)=3  (19,1)=6  (19,2)=4  (19,3)=3  (19,19)=1  (20,0)=4  (20,1)=6  (20,2)=4  (20,3)=3  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color grey and mask .x...................|x.xx.................|.x.xxx...............|.xx...xx.............|..x...xxxx...........|..x...xxxxxx.........|.......xx...xx.......|......x.x...xxxx.....|....xxxx.........x...|....xxxxx.xx.....xxx.|.....xxxxx.xxxxxxxxxx|.....xxxxxx.xxxxxxxxx|......xxxxxx.xxxxxxxx|......xxxxxxx.xxxxxxx|.......xxxxxxx.xxxxxx|.......xxxxxxxx.xxxxx|........xxxxxxxx.xxxx|............xxxxx.xxx|............xxxxxx.xx|.........xxxxxxxxxx.x|..........xxxxxxxxxx. at (0,0)
  _01: a rectangle with size (21,21) and color pink and mask xxxx.................|xxxxxxx..............|xxxxxxxxxx...........|xxx...xxxxxxx........|.xx...xxxxxxxxxx.....|.xx...xxxxxxxxxxxxx..|.xx....xx...xxxxxxxxx|..x...x.x...xxxxxxxxx|..xxxxxx.........xxxx|..xxxxxxx.xx.....xxxx|...xxxxxxx.xxxxxxxxxx|...xxxxxxxx.xxxxxxxxx|...xxxxxxxxx.xxxxxxxx|....xxxxxxxxx.xxxxxxx|......xxxxxxxx.xxxxxx|......xxxxxxxxx.xxxxx|.....xxxxxxxxxxx.xxxx|.....xxx....xxxxx.xxx|.....xxx....xxxxxx.xx|......xxxxxxxxxxxxx.x|......xxxxxxxxxxxxxx. at (0,0)
  _011: a rectangle with size (5,14) and color orange and mask Full at (1,7)
  _0111: a rectangle with size (15,15) and color pink and mask xxx...xxxxxxxxx|xxx...xxxxxxxxx|xxx........xxxx|xxxxxx.....xxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xx....xxxxxxxxx|xx....xxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx at (6,6)
  _01111: a rectangle with size (5,3) and color orange and mask Full at (16,3)
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,14)=5# (0,15)=5# (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (5,0)=7# (6,0)=1  (7,0)=1  (7,1)=7# (8,0)=2  (8,1)=7# (9,0)=2  (9,1)=7# (10,0)=3  (10,1)=1  (10,2)=7# (11,0)=3  (11,1)=1  (11,2)=7# (12,0)=4  (12,1)=1  (12,2)=7# (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (14,0)=5# (14,1)=2  (15,0)=5# (15,1)=2  (16,0)=6  (16,1)=3  (16,2)=1  (17,0)=6  (17,1)=3  (17,2)=1  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1 
   (3071.3 bits)
data: a background with size (21,21) and color blue and layers
  _0: a rectangle with size (21,21) and color pink and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (21,21) and color grey and mask xxxx.................|xxxxxxx..............|xxxxxxxxxx...........|xxxxxxxxxxxxx........|.xxxxxxxxxxxxxxx.....|.xxxxxxxxxxxxxxxxxx..|.xxxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|......xxxxxxxxxxxxxxx|......xxxxxxxxxxxxxxx at (0,0)
  _011: a rectangle with size (5,14) and color orange and mask xxx...........|xxxxxxx.......|xxxxxxxxxxx...|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (1,7)
  _0111: a rectangle with size (14,5) and color orange and mask xxxxx|xxxxx|xxxxx|.xxxx|.xxxx|.xxxx|.xxxx|..xxx|..xxx|..xxx|..xxx|...xx|...xx|...xx at (7,1)
diff: 
delta: (0,4)=7# (0,5)=7# (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,14)=5# (0,15)=5# (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,18)=2  (2,19)=2  (2,20)=2  (4,0)=7# (5,0)=7# (8,0)=2  (9,0)=2  (10,0)=3  (11,0)=3  (12,0)=4  (13,0)=4  (13,1)=2  (14,0)=5# (14,1)=2  (15,0)=5# (15,1)=2  (16,0)=6  (16,1)=3  (17,0)=6  (17,1)=3  (18,0)=7# (18,1)=3  (18,2)=2  (19,0)=7# (19,1)=4  (19,2)=2  (20,1)=4  (20,2)=2 
   (1838.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color grey and mask .x...................|x.xx.................|.x.xxx...............|.xx...xx.............|..x...xxxx...........|..x...xxxxxx.........|.......xx...xx.......|......x.x...xxxx.....|....xxxx.........x...|....xxxxx.xx.....xxx.|.....xxxxx.xxxxxxxxxx|.....xxxxxx.xxxxxxxxx|......xxxxxx.xxxxxxxx|......xxxxxxx.xxxxxxx|.......xxxxxxx.xxxxxx|.......xxxxxxxx.xxxxx|........xxxxxxxx.xxxx|............xxxxx.xxx|............xxxxxx.xx|.........xxxxxxxxxx.x|..........xxxxxxxxxx. at (0,0)
  _01: a rectangle with size (21,21) and color pink and mask xxxx.................|xxxxxxx..............|xxxxxxxxxx...........|xxx...xxxxxxx........|.xx...xxxxxxxxxx.....|.xx...xxxxxxxxxxxxx..|.xx....xx...xxxxxxxxx|..x...x.x...xxxxxxxxx|..xxxxxx.........xxxx|..xxxxxxx.xx.....xxxx|...xxxxxxx.xxxxxxxxxx|...xxxxxxxx.xxxxxxxxx|...xxxxxxxxx.xxxxxxxx|....xxxxxxxxx.xxxxxxx|......xxxxxxxx.xxxxxx|......xxxxxxxxx.xxxxx|.....xxxxxxxxxxx.xxxx|.....xxx....xxxxx.xxx|.....xxx....xxxxxx.xx|......xxxxxxxxxxxxx.x|......xxxxxxxxxxxxxx. at (0,0)
  _011: a rectangle with size (5,14) and color orange and mask Full at (1,7)
  _0111: a rectangle with size (15,15) and color pink and mask xxx...xxxxxxxxx|xxx...xxxxxxxxx|xxx........xxxx|xxxxxx.....xxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xx....xxxxxxxxx|xx....xxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx at (6,6)
  _01111: a rectangle with size (5,3) and color orange and mask Full at (16,3)
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,14)=5# (0,15)=5# (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (5,0)=7# (6,0)=1  (7,0)=1  (7,1)=7# (8,0)=2  (8,1)=7# (9,0)=2  (9,1)=7# (10,0)=3  (10,1)=1  (10,2)=7# (11,0)=3  (11,1)=1  (11,2)=7# (12,0)=4  (12,1)=1  (12,2)=7# (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (14,0)=5# (14,1)=2  (15,0)=5# (15,1)=2  (16,0)=6  (16,1)=3  (16,2)=1  (17,0)=6  (17,1)=3  (17,2)=1  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color yellow and mask .x...................|x.xx.................|.x.xxx...............|.xx.xxxx.............|..xx.xxxxx...........|..xxx.xxxxxx.........|...xxx.xxxxxxx.......|...xxxx.xxxxxxxx.....|....xxxx.xxxxxxxxx...|....xxxxx.xxxxxxxxxx.|.....xxxxx...xxxxxxxx|.....xxxxxx..xxxxxxxx|......xxxxx..xxxxxxxx|......xxxx.....xxxxxx|.......xx......xxxxxx|.......xx.......xxxxx|........x...xxxx.xxxx|........x...xxxxx.xxx|............xxxxxx.xx|.........xxxxxxxxxx.x|..........xxxxxxxxxx. at (0,0)
  _01: a rectangle with size (21,21) and color grey and mask xxxx.................|xxxxxxx..............|xxxxxxxxxx...........|xxxxxxxxxxxxx........|.xxxxxxxxxxxxxxx.....|.xxxxxxxxxxxxxxx..x..|.xxxxxxxxxxxxxxx..xxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|...xxxxxxxx..xxxxxxxx|...xxxxxxxx..xxxxxxxx|...xxxxxxxx..xxxxxxxx|....xxxxxx.....xxxxxx|....xxxxx......xxxxxx|....xxxxx.......xxxxx|.....xxxx...xxxx.xxxx|.....xxxx...xxxxx.xxx|.....xxxx...xxxxxx.xx|......xxxxxxxxxxxxx.x|......xxxxxxxxxxxxxx. at (0,0)
  _011: a rectangle with size (14,5) and color pink and mask Full at (7,1)
  _0111: a rectangle with size (3,9) and color pink and mask Full at (1,7)
  _01111: a rectangle with size (6,6) and color grey and mask Full at (15,15)
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,16)=4  (0,17)=4  (0,18)=5# (0,19)=5# (0,20)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,14)=7# (2,15)=7# (2,18)=8  (2,19)=8  (2,20)=8  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,19)=6  (5,20)=6  (6,0)=7# (7,0)=7# (8,0)=8  (9,0)=8  (10,0)=1  (10,1)=7# (11,0)=1  (11,1)=7# (12,0)=2  (12,1)=7# (13,0)=2  (13,1)=8  (14,0)=3  (14,1)=8  (14,2)=7# (15,0)=3  (15,1)=8  (15,2)=7# (16,0)=4  (16,1)=1  (16,2)=7# (17,0)=4  (17,1)=1  (17,2)=7# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7#
   (2778.8 bits)
data: a background with size (21,21) and color orange and layers
  _0: a rectangle with size (21,21) and color grey and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (21,21) and color yellow and mask xxxx.................|xxxxxxx..............|xxxxxxxxxx...........|xxxxxxxxxxxxx........|.xxxxxxxxxxxxxxx.....|.xxxxxxxxxxxxxxxxxx..|.xxxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|.....xxxxxxxxxxxxxxxx|......xxxxxxxxxxxxxxx|......xxxxxxxxxxxxxxx at (0,0)
  _011: a rectangle with size (5,14) and color pink and mask xxx...........|xxxxxxx.......|xxxxxxxxxxx...|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (1,7)
  _0111: a rectangle with size (14,5) and color pink and mask xxxxx|xxxxx|xxxxx|.xxxx|.xxxx|.xxxx|.xxxx|..xxx|..xxx|..xxx|..xxx|...xx|...xx|...xx at (7,1)
diff: 
delta: (0,4)=6  (0,5)=6  (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,16)=4  (0,17)=4  (0,18)=5# (0,19)=5# (0,20)=6  (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,18)=8  (2,19)=8  (2,20)=8  (4,0)=6  (5,0)=6  (8,0)=8  (9,0)=8  (10,0)=1  (11,0)=1  (12,0)=2  (13,0)=2  (13,1)=8  (14,0)=3  (14,1)=8  (15,0)=3  (15,1)=8  (16,0)=4  (16,1)=1  (17,0)=4  (17,1)=1  (18,0)=5# (18,1)=1  (18,2)=8  (19,0)=5# (19,1)=2  (19,2)=8  (20,0)=6  (20,1)=2  (20,2)=8 
   (1880.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color yellow and mask .x...................|x.xx.................|.x.xxx...............|.xx.xxxx.............|..xx.xxxxx...........|..xxx.xxxxxx.........|...xxx.xxxxxxx.......|...xxxx.xxxxxxxx.....|....xxxx.xxxxxxxxx...|....xxxxx.xxxxxxxxxx.|.....xxxxx...xxxxxxxx|.....xxxxxx..xxxxxxxx|......xxxxx..xxxxxxxx|......xxxx.....xxxxxx|.......xx......xxxxxx|.......xx.......xxxxx|........x...xxxx.xxxx|........x...xxxxx.xxx|............xxxxxx.xx|.........xxxxxxxxxx.x|..........xxxxxxxxxx. at (0,0)
  _01: a rectangle with size (21,21) and color grey and mask xxxx.................|xxxxxxx..............|xxxxxxxxxx...........|xxxxxxxxxxxxx........|.xxxxxxxxxxxxxxx.....|.xxxxxxxxxxxxxxx..x..|.xxxxxxxxxxxxxxx..xxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|..xxxxxxxxxxxxxxxxxxx|...xxxxxxxx..xxxxxxxx|...xxxxxxxx..xxxxxxxx|...xxxxxxxx..xxxxxxxx|....xxxxxx.....xxxxxx|....xxxxx......xxxxxx|....xxxxx.......xxxxx|.....xxxx...xxxx.xxxx|.....xxxx...xxxxx.xxx|.....xxxx...xxxxxx.xx|......xxxxxxxxxxxxx.x|......xxxxxxxxxxxxxx. at (0,0)
  _011: a rectangle with size (14,5) and color pink and mask Full at (7,1)
  _0111: a rectangle with size (3,9) and color pink and mask Full at (1,7)
  _01111: a rectangle with size (6,6) and color grey and mask Full at (15,15)
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,16)=4  (0,17)=4  (0,18)=5# (0,19)=5# (0,20)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,14)=7# (2,15)=7# (2,18)=8  (2,19)=8  (2,20)=8  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,19)=6  (5,20)=6  (6,0)=7# (7,0)=7# (8,0)=8  (9,0)=8  (10,0)=1  (10,1)=7# (11,0)=1  (11,1)=7# (12,0)=2  (12,1)=7# (13,0)=2  (13,1)=8  (14,0)=3  (14,1)=8  (14,2)=7# (15,0)=3  (15,1)=8  (15,2)=7# (16,0)=4  (16,1)=1  (16,2)=7# (17,0)=4  (17,1)=1  (17,2)=7# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7#
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color green and mask .x...................|x.xx.................|.x.xxx...............|.xx.xxxx.............|..xx.xxxxx...........|..xxx.xxxx...........|...xxx.xxxxxxx.......|...xxxx.xxxxxxxx.....|.....xxx.xxxxxxxxx...|.....xxxx.xxxxxxxxxx.|.....xxxxx.xxxxxxxxxx|.....xxxxxx.xxxxxxxxx|......xxxxxx.xxxxxxxx|......xxxxxxx.xxxxxxx|.......xxxxxxx.xxxxxx|.........xxxxxx.....x|.........xxxxxx.....x|.........xxxxxxxx.xxx|.........xxx.....x.xx|.........xxx.....xx.x|..........xxxxxxxxxx. at (0,0)
  _01: a rectangle with size (15,15) and color yellow and mask xxxx...........|xxxxxxx........|xxxxxxxxxx.....|xxxxxxxxxx.....|.xxxxxxxxx.....|.xxxxxxxxx.....|.xxxxxxxxxxxxx.|..xxxxxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|......xxxxxxxxx|......xxxxxxxxx|.......xxxxxxxx at (0,0)
  _011: a rectangle with size (4,9) and color grey and mask xx.......|.xxxxx...|....xxxxx|.......xx at (2,12)
  _0111: a rectangle with size (7,9) and color yellow and mask Full at (3,12)
  _01111: a rectangle with size (11,4) and color grey and mask x..x|x..x|x...|xx..|.x..|.x..|.x..|.x..|..x.|..xx|..xx at (10,2)
diff: 
delta: (0,4)=5# (0,5)=5# (0,6)=6  (0,7)=6  (0,8)=7# (0,9)=7# (0,10)=8  (0,11)=8  (0,12)=9# (0,13)=9# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,7)=5# (1,8)=5# (1,9)=5# (1,12)=6  (1,13)=7# (1,14)=7# (1,15)=7# (1,16)=8  (1,17)=8  (1,18)=8  (1,19)=9# (1,20)=9# (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,18)=7# (2,19)=7# (2,20)=7# (3,18)=6  (3,19)=6  (3,20)=6  (4,0)=5# (5,0)=5# (6,0)=6  (7,0)=6  (7,1)=5# (10,0)=8  (10,1)=6  (10,3)=4  (10,4)=4  (11,0)=8  (11,1)=6  (11,3)=4  (11,4)=4  (12,0)=9# (12,1)=6  (12,3)=4  (12,4)=4  (12,5)=4  (13,0)=9# (13,1)=7# (13,4)=4  (13,5)=4  (14,0)=1  (14,1)=7# (14,2)=6  (14,4)=4  (14,5)=4  (14,6)=4  (15,0)=1  (15,1)=7# (15,2)=6  (16,0)=2  (16,1)=8  (16,2)=6  (17,0)=2  (17,1)=8  (17,2)=6  (17,17)=4  (18,0)=3  (18,1)=8  (18,2)=7# (18,3)=6  (18,5)=4  (18,6)=4  (18,7)=4  (18,8)=4  (18,18)=4  (19,0)=3  (19,1)=9# (19,2)=7# (19,3)=6  (19,6)=4  (19,7)=4  (19,8)=4  (19,19)=4  (20,0)=4  (20,1)=9# (20,2)=7# (20,3)=6  (20,6)=4  (20,7)=4  (20,8)=4  (20,9)=4  (20,20)=4 
! size mismatch, 10x10 instead of 21x21

TEST 73251a56.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.3 sec (29.3 sec/task)
bits-train-error = 55140.7 bits (55140.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-225] Checking task 7447852a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8399.3 = 8408.2
DL output with Mo: L = 9.0 + 13756.9 = 13765.9
DL input+output M: L = 17.9 + 22156.2 = 22174.2

# learning a model for train pairs
2.000	
1.342	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.805	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.709	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.622	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.586	OUT DEF: ^.size=^.size
0.559	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.538	OUT DEF: ^.layer_0=^.layer_0
0.522	IN  DEF: ^.layer_0.shape.color=red
0.512	OUT DEF: ^.layer_01.shape.color=yellow
0.502	OUT DEF: ^.layer_011.shape.color=yellow
0.492	OUT DEF: ^.layer_0111.shape.color=yellow
0.486	IN  DEF: ^.color=black
0.481	OUT DEF: ^.layer_01.shape.mask=Full
0.476	OUT DEF: ^.layer_011.shape.mask=Full
0.471	OUT DEF: ^.layer_0111.shape.mask=Full
0.467	IN  DEF: ^.size=(?,?)
0.447	IN  DEF: ^.size.i=3
0.443	IN  DEF: ^.layer_0.pos=(?,?)
0.425	IN  DEF: ^.layer_0.pos.j=(0)
0.415	IN  DEF: ^.layer_0.pos.i=0
0.410	IN  DEF: ^.layer_0.shape.size=(?,?)
0.391	IN  DEF: ^.layer_0.shape.size.i=3
0.388	OUT DEF: ^.color=black
0.385	OUT DEF: ^.layer_01.pos=(?,?)
0.379	OUT DEF: ^.layer_01.pos.i=1
0.368	OUT DEF: ^.layer_01.pos.j=(0)
0.365	OUT DEF: ^.layer_01.shape.size=(?,?)
0.356	OUT DEF: ^.layer_01.shape.size.i=2
0.347	OUT DEF: ^.layer_01.shape.size.j=2
0.344	OUT DEF: ^.layer_011.pos=(?,?)
0.334	OUT DEF: ^.layer_011.pos.j=^.size.i + 2
0.328	OUT DEF: ^.layer_011.pos.i=(0)
0.325	OUT DEF: ^.layer_011.shape.size=(?,?)
0.313	OUT DEF: ^.layer_011.shape.size.j=3
0.311	OUT DEF: ^.layer_0111.pos=(?,?)
0.308	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.299	OUT DEF: ^.layer_0111.shape.size.j=^.layer_0.shape.size.i
0.289	OUT DEF: ^.layer_0111.shape.size.i=2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,(0))
  _011: a rectangle with size (?,3) and color yellow and mask Full at ((0),^.size.i + 2)
  _0111: a rectangle with size (2,^.layer_0.shape.size.i) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (3,?) and color black and layers
  _0: a rectangle with size (3,?) and color red and mask ? at (0,(0))

DL input  with Mi: L = 46.7 + 1977.0 = 2023.7
DL output with Mo: L = 120.6 + 550.6 = 671.2
DL input+output M: L = 167.3 + 2527.6 = 2695.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
diff: 
delta:
   (51.0 bits)
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (0,5)
  _0111: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
diff: 
delta:
   (9.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 7447852a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
diff: 
delta:
   (68.3 bits)
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _0111: a rectangle with size (2,3) and color yellow and mask Full at (1,11)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 7447852a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
diff: 
delta:
   (78.4 bits)
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _0111: a rectangle with size (2,3) and color yellow and mask Full at (1,11)
diff: 
delta: (0,17)=4 
   (32.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 7447852a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,25) and color black and layers
  _0: a rectangle with size (3,25) and color red and mask x...x...x...x...x...x...x|.x.x.x.x.x.x.x.x.x.x.x.x.|..x...x...x...x...x...x.. at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 7447852a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.8 sec (18.8 sec/task)
bits-train-error = 550.6 bits (550.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-224] Checking task 7468f01a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17020.1 = 17029.1
DL output with Mo: L = 9.0 + 3579.9 = 3588.9
DL input+output M: L = 17.9 + 20600.0 = 20617.9

# learning a model for train pairs
2.000	
1.298	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.883	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.754	OUT DEF: ^.size=^.layer_0.shape.size
0.645	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.541	OUT DEF: ^.layer_0.shape.size=^.layer_00.shape.size
0.475	OUT DEF: ^.color=^.layer_0.shape.color
0.436	OUT DEF: ^.layer_0.shape.color=^.layer_00.shape.color
0.426	OUT DEF: ^.layer_0.pos=(?,?)
0.400	OUT DEF: ^.layer_0.pos.i=^.layer_00.pos.i - ^.layer_0.pos.i
0.396	IN  DEF: ^.layer_0.shape.mask=Full
0.394	IN  DEF: ^.color=black
0.392	IN  DEF: ^.size=(?,?)
0.390	IN  DEF: ^.layer_00.pos=(?,?)
0.387	IN  DEF: ^.layer_00.shape.size=(?,?)
0.385	IN  DEF: ^.layer_0.pos=(?,?)
0.383	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.layer_00.shape.size and color ^.layer_00.shape.color and mask ? at (^.layer_00.pos.i - ^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 68.4 + 2863.8 = 2932.2
DL output with Mo: L = 44.9 + 713.0 = 757.9
DL input+output M: L = 113.2 + 3576.8 = 3690.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (2,3) and color red and mask xx.|.xx at (6,3)
  _0: a rectangle with size (4,8) and color cyan and mask Full at (5,2)
diff: 
delta: (5,8)=2 
   (103.1 bits)
data: a background with size (4,8) and color cyan and layers
  _0: a rectangle with size (2,3) and color red and mask .xx|xx. at (1,4)
diff: 
delta: (0,1)=2 
   (32.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (2,3) and color red and mask xx.|.xx at (6,3)
  _0: a rectangle with size (4,8) and color cyan and mask Full at (5,2)
diff: 
delta: (5,8)=2 
! 11 wrong pixels (generated / expected)

TRAIN 7468f01a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,16) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask xx.|.xx|.x. at (3,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,3)
diff: 
delta:
   (86.5 bits)
data: a background with size (5,5) and color yellow and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xx.|.x. at (2,1)
diff: 
delta:
   (15.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask xx.|.xx|.x. at (3,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,16) and color black and layers
  _00: a rectangle with size (3,1) and color blue and mask Full at (3,5)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,3)
diff: 
delta: (3,4)=1  (4,6)=1 
! 8 wrong pixels (generated / expected)

TRAIN 7468f01a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (4,4) and color green and mask ..x.|xxx.|...x|...x at (7,3)
  _0: a rectangle with size (4,6) and color pink and mask Full at (7,2)
diff: 
delta:
   (96.7 bits)
data: a background with size (4,6) and color pink and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|x...|x... at (0,1)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (4,4) and color green and mask ..x.|xxx.|...x|...x at (7,3)
  _0: a rectangle with size (4,6) and color pink and mask Full at (7,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (4,6) and color pink and mask xxx.xx|x...xx|xxxx.x|xxxx.x at (7,2)
  _0: a rectangle with size (4,4) and color green and mask Full at (7,3)
diff: 
delta:
! size mismatch, 4x4 instead of 4x6
>> Trial 3
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (8,3)
  _0: a rectangle with size (4,6) and color pink and mask Full at (7,2)
diff: 
delta: (7,5)=3  (9,6)=3  (10,6)=3 
! 7 wrong pixels (generated / expected)

TRAIN 7468f01a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _00: a rectangle with size (7,8) and color blue and mask xxxx.xxx|xxxxx..x|xxxxxxxx|...xxxxx|xxxxxxxx|xx...xxx|xxxxxxxx at (3,3)
  _0: a rectangle with size (2,3) and color cyan and mask Full at (3,7)
diff: 
delta: (6,3)=8  (6,4)=8  (6,5)=8  (8,5)=8  (8,6)=8  (8,7)=8 
! size mismatch, 2x3 instead of 7x8

TEST 7468f01a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 713.0 bits (713.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-223] Checking task 746b3537.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7490.8 = 7499.8
DL output with Mo: L = 9.0 + 2582.2 = 2591.2
DL input+output M: L = 17.9 + 10073.0 = 10091.0

# learning a model for train pairs
2.000	
1.741	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.630	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.541	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.387	OUT DEF: ^.color=^.color
1.298	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
1.274	OUT DEF: ^.layer_0.pos=(?,?)
1.233	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i - ^.layer_0.pos.i
1.199	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.i - 1
1.175	OUT DEF: ^.size=(?,?)
1.106	OUT DEF: ^.size.j=^.layer_01.pos.j + 1
1.091	IN  DEF: ^.layer_0.shape.mask=Full
1.075	IN  DEF: ^.layer_01.shape.mask=Full
1.067	IN  DEF: ^.size=(?,?)
1.059	IN  DEF: ^.layer_0.pos=(?,?)
1.038	IN  DEF: ^.layer_0.pos.j=(0)
1.030	IN  DEF: ^.layer_0.shape.size=(?,?)
1.022	IN  DEF: ^.layer_01.pos=(?,?)
1.014	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.layer_01.pos.j + 1) and color ^.color and layers
  _0: a point with color ^.layer_01.shape.color at (^.layer_01.pos.i - ^.layer_0.pos.i,^.layer_01.shape.size.i - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,(0))
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 69.7 + 3960.9 = 4030.6
DL output with Mo: L = 64.8 + 1169.8 = 1234.6
DL input+output M: L = 134.5 + 5130.7 = 5265.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta:
   (52.6 bits)
data: a background with size (3,1) and color blue and layers
  _0: a point with color red at (1,0)
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta:
! size mismatch, 10x1 instead of 3x1
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
! size mismatch, 10x1 instead of 3x1

TRAIN 746b3537.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
   (52.6 bits)
data: a background with size (1,3) and color yellow and layers
  _0: a point with color pink at (0,2)
diff: 
delta: (0,0)=3 
   (18.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
! size mismatch, 10x2 instead of 1x3
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
! size mismatch, 10x3 instead of 1x3
>> Trial 3
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,0)
diff:   ^.layer_0.pos.j
delta:
! size mismatch, 10x1 instead of 1x3

TRAIN 746b3537.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
   (107.3 bits)
data: a background with size (1,4) and color green and layers
  _0: a point with color cyan at (0,2)
diff: 
delta: (0,0)=2  (0,3)=1 
   (34.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
! size mismatch, 10x4 instead of 1x4
>> Trial 2
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,4)
diff: 
delta: (0,3)=8  (1,3)=8  (2,3)=8 
! size mismatch, 10x5 instead of 1x4
>> Trial 3
data: a background with size (3,5) and color cyan and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,2) and color green and mask Full at (0,1)
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
! size mismatch, 10x2 instead of 1x4

TRAIN 746b3537.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,2) and color cyan and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (1,0)
diff: 
delta:
   (50.2 bits)
data: a background with size (3,1) and color cyan and layers
  _0: a point with color pink at (1,0)
diff: 
delta: (0,0)=2 
   (21.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,2) and color cyan and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (1,0)
diff: 
delta:
! size mismatch, 10x1 instead of 3x1

TRAIN 746b3537.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (6,4) and color yellow and layers
  _0: a rectangle with size (2,4) and color red and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
   (133.5 bits)
data: a background with size (4,1) and color yellow and layers
  _0: a point with color cyan at (2,0)
diff: 
delta: (1,0)=2  (3,0)=3 
   (38.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! size mismatch, 10x1 instead of 4x1
>> Trial 2
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (5,0)
diff: 
delta: (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8 
! size mismatch, 10x1 instead of 4x1
>> Trial 3
data: a background with size (6,4) and color yellow and layers
  _0: a rectangle with size (2,4) and color red and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! size mismatch, 10x1 instead of 4x1

TRAIN 746b3537.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,9) and color green and layers
  _0: a rectangle with size (4,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,2) and color cyan and mask Full at (0,6)
diff: 
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 10x7 instead of 1x5
>> Trial 2
data: a background with size (4,9) and color cyan and layers
  _0: a rectangle with size (4,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,3) and color green and mask Full at (0,3)
diff: 
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 10x4 instead of 1x5
>> Trial 3
data: a background with size (4,9) and color green and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (0,6)
  _01: a rectangle with size (4,2) and color blue and mask Full at (0,0)
diff:   ^.layer_0.pos.j
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 10x1 instead of 1x5

TEST 746b3537.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 1169.8 bits (1169.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-222] Checking task 74dd1130.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4102.3 = 4111.3
DL output with Mo: L = 9.0 + 4102.3 = 4111.3
DL input+output M: L = 17.9 + 8204.7 = 8222.6

# learning a model for train pairs
2.000	
1.847	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.694	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.574	OUT DEF: ^.size=^.size
1.496	OUT DEF: ^.color=^.color
1.451	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.407	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.394	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.317	OUT DEF: ^.color=^.color
1.305	IN  DEF: ^.size=(?,?)
1.252	IN  DEF: ^.size.i=3
1.199	IN  DEF: ^.size.j=3
1.187	OUT DEF: ^.layer_0.pos=(?,?)
1.159	OUT DEF: ^.layer_0.pos.j=(0)
1.132	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.j
1.120	OUT DEF: ^.layer_0.shape.size=(?,?)
1.078	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j
1.038	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
1.027	OUT DEF: ^.layer_01.pos=(?,?)
0.999	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.j
0.971	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.i
0.960	IN  DEF: ^.layer_0.pos=(?,?)
0.931	IN  DEF: ^.layer_0.pos.i=0
0.919	IN  DEF: ^.layer_0.shape.size=(?,?)
0.908	IN  DEF: ^.layer_01.pos=(?,?)
0.879	IN  DEF: ^.layer_01.pos.i=1
0.874	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.863	IN  DEF: ^.layer_011.pos=(?,?)
0.834	IN  DEF: ^.layer_011.pos.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.j,^.layer_0.shape.size.i) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j,(0))
  _01: ^.layer_01.shape at (^.layer_01.pos.j,^.layer_01.pos.i)
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (0,?)
  _01: a point with color ? at (1,?)
  _011: a point with color ? at (?,1)

DL input  with Mi: L = 79.8 + 2171.7 = 2251.4
DL output with Mo: L = 66.7 + 1112.2 = 1178.9
DL input+output M: L = 146.5 + 3283.8 = 3430.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,2)
  _01: a point with color blue at (1,0)
  _011: a point with color grey at (1,1)
diff: 
delta: (2,0)=5#
   (57.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (2,0)
  _01: a point with color blue at (0,1)
diff: 
delta: (0,2)=5# (1,1)=5#
   (36.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,2)
  _01: a point with color blue at (1,0)
  _011: a point with color red at (0,1)
diff: 
delta: (1,1)=5# (2,0)=5#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a point with color grey at (1,1)
  _011: a point with color red at (2,1)
diff: 
delta: (2,0)=5# (2,2)=2 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,2)
  _01: a point with color red at (0,0)
  _011: a point with color grey at (1,1)
diff:   ^.layer_01.pos.i
delta: (1,0)=1  (2,0)=5#
! 3 wrong pixels (generated / expected)

TRAIN 74dd1130.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
  _01: a point with color pink at (1,0)
  _011: a point with color grey at (2,1)
diff: 
delta:
   (49.5 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,2) and color red and mask x.|xx|.x at (0,0)
  _01: a point with color pink at (0,1)
diff: 
delta:
   (9.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
  _01: a point with color pink at (1,0)
  _011: a point with color grey at (2,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a point with color pink at (1,0)
  _011: a point with color red at (1,1)
diff: 
delta: (1,2)=2 
! 2 wrong pixels (generated / expected)

TRAIN 74dd1130.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xx.|x.. at (0,0)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (2,1)
diff: 
delta:
   (53.7 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask .xx|.x.|x.. at (0,0)
  _01: a point with color cyan at (2,1)
diff: 
delta: (1,2)=8 
   (29.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xx.|x.. at (0,0)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (2,1)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 74dd1130.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,1)
  _01: a point with color blue at (1,1)
  _011: a point with color pink at (2,1)
diff: 
delta: (1,2)=1 
   (57.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _01: a point with color blue at (1,1)
diff: 
delta: (1,2)=6  (2,1)=1 
   (36.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,1)
  _01: a point with color blue at (1,2)
  _011: a point with color blue at (1,1)
diff: 
delta: (2,1)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a point with color blue at (1,2)
  _011: a point with color blue at (1,1)
diff: 
delta: (2,2)=2 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,1)
  _01: a point with color blue at (1,1)
  _011: a point with color blue at (1,2)
diff:   ^.layer_011.pos.j
delta: (2,1)=6 
! 2 wrong pixels (generated / expected)

TRAIN 74dd1130.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a point with color green at (0,1)
  _011: a point with color green at (2,1)
diff:   ^.layer_01.pos.i
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a point with color green at (2,1)
  _011: a point with color green at (0,1)
diff:   ^.layer_01.pos.i
delta:
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a point with color yellow at (1,1)
  _011: a point with color green at (0,1)
diff: 
delta: (2,1)=3 
! 2 wrong pixels (generated / expected)

TEST 74dd1130.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.7 sec (4.7 sec/task)
bits-train-error = 1112.2 bits (1112.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-221] Checking task 75b8110e.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 27193.2 = 27202.1
DL output with Mo: L = 9.0 + 8906.6 = 8915.5
DL input+output M: L = 17.9 + 36099.7 = 36117.7

# learning a model for train pairs
2.000	
1.783	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.621	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.470	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.393	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.317	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.265	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.228	OUT DEF: ^.color=^.layer_011.shape.color
1.202	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
1.195	OUT DEF: ^.size=(?,?)
1.160	OUT DEF: ^.size.i=4
1.125	OUT DEF: ^.size.j=4
1.118	OUT DEF: ^.layer_0.pos=(?,?)
1.100	OUT DEF: ^.layer_0.pos.j=0
1.083	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i - ^.layer_0.shape.size.i
1.076	OUT DEF: ^.layer_0.shape.size=(?,?)
1.069	OUT DEF: ^.layer_01.pos=(?,?)
1.062	OUT DEF: ^.layer_01.shape.size=(?,?)
1.059	IN  OBJECT at ^.layer_0110: a point with color ? at ?
1.043	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.040	OUT DEF: ^.layer_01.pos.j=^.layer_011.shape.size.i - 2
1.037	IN  DEF: ^.color=black
1.035	IN  DEF: ^.size=(?,?)
1.020	IN  DEF: ^.size.i=8
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (4,4) and color ^.layer_011.shape.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_0.pos.i - ^.layer_0.shape.size.i,0)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_011.shape.size.i - 2)
WHERE (Mi)
a background with size (8,?) and color black and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _0110: a point with color ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 123.3 + 12165.9 = 12289.2
DL output with Mo: L = 105.6 + 4957.7 = 5063.3
DL input+output M: L = 228.9 + 17123.6 = 17352.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _01111: a rectangle with size (2,2) and color brown and mask Even Checkboard at (4,6)
diff: 
delta:
   (211.0 bits)
data: a background with size (4,4) and color grey and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,4) and color pink and mask xxx.|x..x|..x. at (1,0)
diff: 
delta: (0,3)=0  (1,3)=9# (2,1)=9# (3,3)=0 
   (113.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _01111: a rectangle with size (2,2) and color brown and mask Even Checkboard at (4,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _0111: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _01111: a rectangle with size (2,2) and color brown and mask Even Checkboard at (4,6)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 75b8110e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,4) and color yellow and mask xx.x|x.xx at (2,0)
  _01: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,4)
  _0110: a point with color yellow at (0,0)
  _011: a rectangle with size (4,2) and color pink and mask .x|x.|.x|xx at (4,2)
  _0111: a rectangle with size (3,1) and color brown and mask Full at (4,5)
  _01111: a rectangle with size (2,1) and color brown and mask Full at (6,7)
diff: 
delta: (0,3)=4  (4,7)=9# (6,0)=6 
   (255.6 bits)
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,0)
  _01: a rectangle with size (3,1) and color black and mask Full at (0,2)
diff: 
delta: (1,0)=0  (1,1)=9# (3,0)=4 
   (102.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,4) and color yellow and mask xx.x|x.xx at (2,0)
  _01: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,4)
  _0110: a point with color yellow at (0,0)
  _011: a rectangle with size (4,2) and color pink and mask .x|x.|.x|xx at (4,2)
  _0111: a rectangle with size (3,1) and color brown and mask Full at (4,5)
  _01111: a rectangle with size (2,1) and color brown and mask Full at (6,7)
diff: 
delta: (0,3)=4  (4,7)=9# (6,0)=6 
! 12 wrong pixels (generated / expected)

TRAIN 75b8110e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _0110: a point with color yellow at (0,3)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _0111: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (6,2)
diff: 
delta: (1,0)=4  (3,1)=4 
   (224.9 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (0,0)
diff: 
delta: (0,1)=9# (0,2)=9# (1,2)=0  (1,3)=9# (2,1)=9# (3,1)=4 
   (135.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _0110: a point with color yellow at (0,3)
  _011: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (6,2)
diff: 
delta: (1,0)=4  (3,1)=4 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _0110: a point with color yellow at (0,3)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _0111: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (6,2)
diff: 
delta: (1,0)=4  (3,1)=4 
! 10 wrong pixels (generated / expected)

TRAIN 75b8110e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _0110: a point with color yellow at (0,0)
  _011: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
  _01111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,4)
diff: 
delta: (3,0)=4  (3,4)=5#
   (261.5 bits)
data: a background with size (4,4) and color grey and layers
  _0: a rectangle with size (4,3) and color pink and mask x.x|.xx|x..|.x. at (0,0)
  _01: a rectangle with size (1,1) and color brown and mask Full at (3,2)
diff: 
delta: (2,1)=9#
   (60.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _0110: a point with color yellow at (0,0)
  _011: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
  _01111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,4)
diff: 
delta: (3,0)=4  (3,4)=5#
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _0110: a point with color yellow at (0,0)
  _011: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
  _0111: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _01111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,4)
diff: 
delta: (3,0)=4  (3,4)=5#
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _01: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _0110: a point with color yellow at (0,0)
  _011: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
  _01111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,4)
diff: 
delta: (3,0)=4  (3,4)=5#
! 12 wrong pixels (generated / expected)

TRAIN 75b8110e.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _01: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0110: a point with color yellow at (0,1)
  _011: a rectangle with size (4,1) and color pink and mask Full at (4,3)
  _0111: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _01111: a rectangle with size (1,2) and color pink and mask Full at (4,0)
diff: 
delta: (3,0)=4  (7,0)=6  (7,1)=6 
   (263.6 bits)
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,0)
  _01: a rectangle with size (2,1) and color brown and mask Full at (1,2)
diff: 
delta: (2,1)=0  (3,2)=0 
   (84.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _01: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0110: a point with color yellow at (0,1)
  _011: a rectangle with size (4,1) and color pink and mask Full at (4,3)
  _0111: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _01111: a rectangle with size (1,2) and color pink and mask Full at (4,0)
diff: 
delta: (3,0)=4  (7,0)=6  (7,1)=6 
! 10 wrong pixels (generated / expected)

TRAIN 75b8110e.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
negative integer

TEST 75b8110e.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 26.2 sec (26.2 sec/task)
bits-train-error = 4957.7 bits (4957.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-220] Checking task 760b3cac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6360.2 = 6369.2
DL output with Mo: L = 9.0 + 9274.5 = 9283.5
DL input+output M: L = 17.9 + 15634.8 = 15652.7

# learning a model for train pairs
2.000	
1.533	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.228	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.994	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.719	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.662	OUT DEF: ^.size=^.size
0.631	OUT DEF: ^.layer_01=^.layer_01
0.609	IN  DEF: ^.layer_0.shape.color=cyan
0.587	IN  DEF: ^.layer_01.shape.color=yellow
0.572	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.565	IN  DEF: ^.color=black
0.559	IN  DEF: ^.layer_0.pos=(?,?)
0.539	IN  DEF: ^.layer_0.pos.j=3
0.520	IN  DEF: ^.layer_0.pos.i=(0)
0.515	IN  DEF: ^.size=(?,?)
0.475	IN  DEF: ^.size.j=9
0.440	IN  DEF: ^.size.i=6
0.435	IN  DEF: ^.layer_0.shape.size=(?,?)
0.409	IN  DEF: ^.layer_0.shape.size.i=3
0.384	IN  DEF: ^.layer_0.shape.size.j=3
0.378	IN  DEF: ^.layer_01.pos=(?,?)
0.357	IN  DEF: ^.layer_01.pos.j=3
0.339	IN  DEF: ^.layer_01.pos.i=3
0.333	IN  DEF: ^.layer_01.shape.size=(?,?)
0.308	IN  DEF: ^.layer_01.shape.size.i=3
0.282	IN  DEF: ^.layer_01.shape.size.j=3
0.277	OUT DEF: ^.color=black
0.274	OUT DEF: ^.layer_0.pos=(?,?)
0.261	OUT DEF: ^.layer_0.pos.i=(0)
0.257	OUT DEF: ^.layer_0.shape.size=(?,?)
0.240	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.216	OUT DEF: ^.layer_0.shape.size.j=^.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.size.i) and color ^.layer_0.shape.color and mask ? at ((0),?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ? at ((0),3)
  _01: a rectangle with size (3,3) and color yellow and mask ? at (3,3)

DL input  with Mi: L = 93.6 + 723.5 = 817.1
DL output with Mo: L = 45.5 + 766.5 = 812.0
DL input+output M: L = 139.1 + 1490.1 = 1629.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (24.1 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x.xx.x|xx..xx|x....x at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (25.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff:   ^.layer_01.shape.size.i  ^.layer_01.pos.i
delta: (3,3)=4  (5,4)=4 
! 10 wrong pixels (generated / expected)

TRAIN 760b3cac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
   (24.1 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x.xx.x|xxxxxx|xx..xx at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
   (25.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff:   ^.layer_01.shape.size.i  ^.layer_01.pos.i
delta: (3,5)=4  (5,4)=4 
! 20 wrong pixels (generated / expected)

TRAIN 760b3cac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (24.1 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask ..xx..|xx..xx|..xx.. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (25.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff:   ^.layer_01.shape.size.i  ^.layer_01.pos.i
delta: (3,3)=4  (5,4)=4 
! 12 wrong pixels (generated / expected)

TRAIN 760b3cac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|x.. at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff:   ^.layer_01.shape.size.i  ^.layer_01.pos.i
delta: (3,5)=4  (5,4)=4 
! 20 wrong pixels (generated / expected)

TEST 760b3cac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.6 sec (9.6 sec/task)
bits-train-error = 766.5 bits (766.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-219] Checking task 776ffc46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 55385.1 = 55394.0
DL output with Mo: L = 9.0 + 55385.1 = 55394.0
DL input+output M: L = 17.9 + 110770.1 = 110788.1

# learning a model for train pairs
2.000	
1.665	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.331	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.196	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.066	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.964	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.878	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.792	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.707	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.638	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.562	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0.shape at ?
  _011: ^.layer_01.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 16652.7 = 16756.5
DL output with Mo: L = 87.1 + 14265.1 = 14352.2
DL input+output M: L = 190.9 + 30917.8 = 31108.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (7,10)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (15,13)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (1,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
   (308.8 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _01: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _011: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (2,2)
  _0111: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (7,10)
  _01111: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (15,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
   (253.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (7,10)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (15,13)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (1,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _011: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (2,2)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (7,10)
  _01111: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (15,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
diff: 
delta: (11,11)=1  (12,11)=1  (13,11)=1 
   (275.2 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (9,15)
  _01: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _011: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _0111: a rectangle with size (3,3) and color green and mask Full at (12,3)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
diff: 
delta: (11,11)=1  (12,11)=1  (13,11)=1 
   (229.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
diff: 
delta: (11,11)=1  (12,11)=1  (13,11)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _011: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _0111: a rectangle with size (2,3) and color blue and mask Full at (11,10)
  _01111: a rectangle with size (2,3) and color blue and mask Full at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1  (15,8)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,8)=1 
   (465.6 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _01: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _011: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _0111: a rectangle with size (2,3) and color red and mask Full at (11,10)
  _01111: a rectangle with size (2,3) and color red and mask Full at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1  (15,8)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,8)=1 
   (421.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _011: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _0111: a rectangle with size (2,3) and color blue and mask Full at (11,10)
  _01111: a rectangle with size (2,3) and color blue and mask Full at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1  (15,8)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,8)=1 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (2,3) and color blue and mask Full at (11,10)
  _011: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _0111: a rectangle with size (2,3) and color red and mask Full at (2,15)
  _01111: a rectangle with size (2,3) and color blue and mask Full at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1  (15,8)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,8)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (8,16)=1  (8,17)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (615.7 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (9,10)
  _01: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _011: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _0111: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (8,16)=1  (8,17)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (522.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (8,16)=1  (8,17)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _011: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _0111: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (8,16)=1  (8,17)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! size mismatch, 10x10 instead of 20x20

TRAIN 776ffc46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (13,12)
  _01: a rectangle with size (6,8) and color grey and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (0,12)
  _011: a rectangle with size (7,7) and color grey and mask xxxxxxx|......x|......x|......x|......x|......x|......x at (13,0)
  _0111: a rectangle with size (4,4) and color blue and mask .xx.|xxxx|xxxx|.xx. at (8,6)
  _01111: a rectangle with size (4,4) and color red and mask .xx.|xxxx|xxxx|.xx. at (15,1)
diff: 
delta: (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (4,3)=1  (5,3)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (7,3)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (15,15)=2  (16,14)=2  (16,15)=2  (16,16)=2  (17,15)=2 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (13,12)
  _01: a rectangle with size (7,7) and color grey and mask xxxxxxx|......x|......x|......x|......x|......x|......x at (13,0)
  _011: a rectangle with size (6,8) and color grey and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (0,12)
  _0111: a rectangle with size (4,4) and color blue and mask .xx.|xxxx|xxxx|.xx. at (8,6)
  _01111: a rectangle with size (4,4) and color red and mask .xx.|xxxx|xxxx|.xx. at (15,1)
diff: 
delta: (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (4,3)=1  (5,3)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (7,3)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (15,15)=2  (16,14)=2  (16,15)=2  (16,16)=2  (17,15)=2 
! size mismatch, 10x10 instead of 20x20

TEST 776ffc46.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.3 sec (27.3 sec/task)
bits-train-error = 14265.1 bits (14265.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-218] Checking task 77fdfe62.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16981.7 = 16990.7
DL output with Mo: L = 9.0 + 4178.7 = 4187.6
DL input+output M: L = 17.9 + 21160.4 = 21178.3

# learning a model for train pairs
2.000	
1.567	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.415	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.324	OUT DEF: ^.size=^.layer_01.shape.size
1.242	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.156	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.103	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.056	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.023	OUT DEF: ^.layer_011.shape.color=yellow
1.012	OUT DEF: ^.color=black
1.004	OUT DEF: ^.layer_0.shape.size=(?,?)
0.995	OUT DEF: ^.layer_01.pos=(?,?)
0.987	OUT DEF: ^.layer_01.shape.size=(?,?)
0.979	OUT DEF: ^.layer_011.pos=(?,?)
0.970	IN  DEF: ^.layer_0.shape.color=blue
0.962	IN  DEF: ^.layer_01.shape.color=cyan
0.956	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.922	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.916	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.895	OUT DEF: ^.layer_01.pos.j=^.layer_0111.pos.j
0.887	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.879	IN  OBJECT at ^.layer_01110: a point with color ? at ?
0.876	IN  DEF: ^.color=black
0.874	IN  DEF: ^.size=(?,?)
0.872	IN  DEF: ^.layer_0.pos=(?,?)
0.865	IN  DEF: ^.layer_0.pos.i=(0)
0.857	IN  DEF: ^.layer_0.pos.j=(0)
0.855	IN  DEF: ^.layer_0.shape.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_0111.pos.j)
  _011: a point with color yellow at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at ((0),(0))
  _01: a rectangle with size ? and color cyan and mask ? at ?
  _011: a point with color ? at ?
  _01110: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?

DL input  with Mi: L = 111.3 + 5741.1 = 5852.4
DL output with Mo: L = 83.7 + 2054.8 = 2138.5
DL input+output M: L = 195.0 + 7795.9 = 7990.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _01110: a point with color green at (0,7)
  _0111: a point with color cyan at (5,2)
  _01111: a point with color yellow at (7,0)
diff: 
delta: (7,7)=6 
   (222.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask x.|xx at (2,2)
  _011: a point with color yellow at (3,0)
diff: 
delta: (1,3)=3 
   (64.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _01110: a point with color green at (0,7)
  _0111: a point with color cyan at (5,2)
  _01111: a point with color yellow at (7,0)
diff: 
delta: (7,7)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _01110: a point with color green at (0,7)
  _0111: a point with color yellow at (7,0)
  _01111: a point with color cyan at (5,2)
diff: 
delta: (7,7)=6 
! 6 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _01110: a point with color yellow at (0,5)
  _0111: a point with color red at (5,0)
  _01111: a point with color green at (5,5)
diff: 
delta:
   (150.3 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _011: a point with color yellow at (0,1)
diff: 
delta:
   (25.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _01110: a point with color yellow at (0,5)
  _0111: a point with color red at (5,0)
  _01111: a point with color green at (5,5)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _01110: a point with color red at (0,7)
  _0111: a point with color orange at (7,0)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
   (201.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,0)
  _011: a point with color yellow at (2,2)
diff: 
delta: (0,3)=2  (1,2)=2  (2,3)=4  (3,2)=4 
   (115.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _01110: a point with color red at (0,7)
  _0111: a point with color orange at (7,0)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .x......x.|xxxxxxxxxx|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|xxxxxxxxxx|.x......x. at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask .xx...|xxx.x.|..x.x.|.x.xx.|xx.x.x|.x..x. at (2,2)
  _011: a point with color green at (0,0)
  _01110: a point with color yellow at (0,9)
  _0111: a point with color orange at (9,0)
  _01111: a point with color grey at (9,9)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST 77fdfe62.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 2054.8 bits (2054.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-217] Checking task 780d0b14.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 156580.3 = 156589.3
DL output with Mo: L = 9.0 + 2311.7 = 2320.7
DL input+output M: L = 17.9 + 158892.0 = 158909.9

# learning a model for train pairs
2.000	
1.760	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.574	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.400	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.255	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.152	OUT DEF: ^.color=^.layer_0.shape.color
1.080	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.015	IN  OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
1.000	OUT DEF: ^.size=(?,?)
0.999	IN  DEF: ^.color=black
0.999	IN  DEF: ^.size=(?,?)
0.999	IN  DEF: ^.layer_0.pos=(?,?)
0.999	IN  DEF: ^.layer_0.shape.size=(?,?)
0.998	IN  DEF: ^.layer_011111.pos=(?,?)
0.997	IN  DEF: ^.layer_011111.pos.i=(0)
0.997	IN  DEF: ^.layer_01.pos=(?,?)
0.997	IN  DEF: ^.layer_01.shape.size=(?,?)
0.996	IN  DEF: ^.layer_011.pos=(?,?)
0.996	IN  DEF: ^.layer_011.shape.size=(?,?)
0.996	IN  DEF: ^.layer_0111.pos=(?,?)
0.995	IN  DEF: ^.layer_0111.pos.i=(0)
0.994	IN  DEF: ^.layer_0111.pos.j=(0)
0.994	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.993	IN  DEF: ^.layer_01111.pos=(?,?)
0.992	IN  DEF: ^.layer_011.pos.j=(0)
0.992	IN  DEF: ^.layer_01111.shape.size=(?,?)
0.992	IN  DEF: ^.layer_011111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,(0))
  _0111: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at ((0),?)

DL input  with Mi: L = 182.7 + 16939.8 = 17122.5
DL output with Mo: L = 14.7 + 2033.1 = 2047.8
DL input+output M: L = 197.4 + 18972.9 = 19170.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _01: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _011: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _0111: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (7,19)
  _011111: a rectangle with size (1,1) and color black and mask Full at (0,16)
diff: 
delta:
   (552.4 bits)
data: a background with size (2,2) and color blue and layers
diff: 
delta: (0,1)=8  (1,0)=6 
   (40.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _01: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _011: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _0111: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (7,19)
  _011111: a rectangle with size (5,5) and color black and mask Full at (0,2)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _01: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _011: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _0111: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (7,19)
  _011111: a rectangle with size (5,5) and color black and mask Full at (0,2)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 780d0b14.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _011: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _0111: a rectangle with size (7,6) and color yellow and mask xxxxx.|xxx..x|xxxx..|xx..xx|xxxxxx|..xxxx|xx.xx. at (0,0)
  _01111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
  _011111: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
diff: 
delta:
   (550.5 bits)
data: a background with size (2,3) and color cyan and layers
diff: 
delta: (0,0)=4  (0,2)=3  (1,0)=1  (1,1)=2 
   (73.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _011: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _0111: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _01111: a rectangle with size (7,6) and color yellow and mask xxxxx.|xxx..x|xxxx..|xx..xx|xxxxxx|..xxxx|xx.xx. at (0,0)
  _011111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
diff:   ^.layer_0111.pos.j
delta:
! size mismatch, 10x10 instead of 2x3

TRAIN 780d0b14.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _011: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _0111: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
  _01111: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
  _011111: a rectangle with size (6,9) and color orange and mask ...x..x..|x.x.xxxx.|.xx..xx.x|..xxxxxx.|.x.xxx...|xx.xx.... at (0,8)
diff: 
delta: (5,15)=7# (5,16)=7#
   (591.1 bits)
data: a background with size (3,2) and color cyan and layers
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=4  (2,0)=1  (2,1)=6 
   (89.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _011: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _0111: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
  _01111: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
  _011111: a rectangle with size (6,9) and color orange and mask ...x..x..|x.x.xxxx.|.xx..xx.x|..xxxxxx.|.x.xxx...|xx.xx.... at (0,8)
diff: 
delta: (5,15)=7# (5,16)=7#
! size mismatch, 10x10 instead of 3x2

TRAIN 780d0b14.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,28) and color black and layers
  _0: a rectangle with size (14,12) and color cyan and mask xxx.xxxxx.x.|xxxxxx.x.xx.|xxxxxxx.xxxx|xxx.xxxxxx.x|..xxx.xx.xxx|xxxxxx.x.xx.|xxxxx...xxxx|xxxx.xxxxx.x|.xxxxxxxxxxx|xxxxxxxxx.x.|x.x.xxxxxxxx|xxxxxx.x.xxx|x.xxxxxxxx.x|x.xxxxx.xxxx at (5,16)
  _01: a rectangle with size (14,7) and color blue and mask xx..xxx|xxxx.xx|xxxxxxx|xxxxx.x|x..xxxx|.xxx.xx|xxxxx.x|xxxxx..|.xxxx.x|xxxxxxx|xx.xxxx|.x.xxxx|xxxxx.x|xxx.xx. at (5,8)
  _011: a rectangle with size (14,7) and color blue and mask xxxxx.x|xxx.x.x|x.xxxxx|xx.xxx.|...xx.x|xxx.xx.|xxx...x|xxxxxxx|xxx..xx|x.xx.xx|xxx.x.x|xxxxxxx|x.xxxxx|.x.xxxx at (5,0)
  _0111: a rectangle with size (4,12) and color yellow and mask ..xxxx.xxxxx|x.xxxxxxxxxx|xxxxxxxxxxxx|x..xxxxxxxxx at (0,16)
  _01111: a rectangle with size (3,12) and color red and mask x.xxxx.xx.xx|xxxxx.xxxxx.|xxxxxxxxxxxx at (20,16)
  _011111: a rectangle with size (4,7) and color red and mask xxxxxxx|xx.xxxx|xx..xxx|x.xxxxx at (0,8)
diff:   ^.layer_0111.pos.j
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,4)=3  (0,5)=3  (0,6)=3  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (2,1)=3  (2,4)=3  (2,5)=3  (3,0)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (20,0)=7# (20,1)=7# (20,3)=7# (20,4)=7# (20,6)=7# (20,8)=3  (20,9)=3  (20,12)=3  (20,13)=3  (20,14)=3  (21,0)=7# (21,1)=7# (21,2)=7# (21,4)=7# (21,5)=7# (21,6)=7# (21,9)=3  (21,10)=3  (21,12)=3  (22,0)=7# (22,1)=7# (22,2)=7# (22,3)=7# (22,4)=7# (22,5)=7# (22,6)=7# (22,8)=3  (22,9)=3  (22,10)=3  (22,11)=3  (22,12)=3  (22,13)=3  (22,14)=3 
! size mismatch, 10x10 instead of 3x3

TEST 780d0b14.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.9 sec (9.9 sec/task)
bits-train-error = 2033.1 bits (2033.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-216] Checking task 7837ac64.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 308695.0 = 308704.0
DL output with Mo: L = 9.0 + 3267.9 = 3276.9
DL input+output M: L = 17.9 + 311963.0 = 311980.9

# learning a model for train pairs
2.000	
1.150	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.912	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.849	OUT OBJECT at ^.layer_00: a point with color ? at ?
0.788	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.773	OUT DEF: ^.size=(?,?)
0.707	OUT DEF: ^.size.i=3
0.640	OUT DEF: ^.size.j=3
0.625	OUT DEF: ^.layer_00.pos=(?,?)
0.611	OUT DEF: ^.layer_0.shape.size=(?,?)
0.605	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.599	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.597	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.540	OUT DEF: ^.layer_00.shape.color=^.layer_0111.shape.color
0.522	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.503	OUT DEF: ^.color=black
0.501	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.501	IN  DEF: ^.layer_01.shape.mask=Full
0.500	IN  DEF: ^.layer_011.shape.mask=Full
0.500	IN  DEF: ^.layer_01111.shape.mask=Full
0.500	IN  DEF: ^.layer_0111.shape.mask=Full
0.500	IN  DEF: ^.color=black
0.499	IN  DEF: ^.size=(?,?)
0.499	IN  DEF: ^.layer_0.pos=(?,?)
0.499	IN  DEF: ^.layer_0.pos.i=(0)
0.498	IN  DEF: ^.layer_0.pos.j=(0)
0.498	IN  DEF: ^.layer_0.shape.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _00: a point with color ^.layer_0111.shape.color at (?,?)
  _0: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))
  _01: a rectangle with size ? and color ? and mask Full at ?
  _011: a rectangle with size ? and color ? and mask Full at ?
  _0111: a rectangle with size ? and color ? and mask Full at ?
  _01111: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 112.9 + 39773.4 = 39886.3
DL output with Mo: L = 60.0 + 1147.0 = 1207.0
DL input+output M: L = 172.9 + 40920.4 = 41093.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (10,1) and color blue and mask Full at (5,5)
  _011: a rectangle with size (10,1) and color blue and mask Full at (5,8)
  _0111: a rectangle with size (1,4) and color green and mask Full at (5,11)
  _01111: a rectangle with size (1,4) and color green and mask Full at (8,11)
diff: 
delta:
   (1015.3 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,2)
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (15.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (10,1) and color blue and mask Full at (5,5)
  _011: a rectangle with size (10,1) and color blue and mask Full at (5,8)
  _0111: a rectangle with size (1,4) and color green and mask Full at (5,11)
  _01111: a rectangle with size (1,4) and color green and mask Full at (8,11)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (10,1) and color blue and mask Full at (5,5)
  _011: a rectangle with size (1,4) and color green and mask Full at (5,11)
  _0111: a rectangle with size (10,1) and color blue and mask Full at (5,8)
  _01111: a rectangle with size (1,4) and color green and mask Full at (8,11)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 7837ac64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color red and mask Full at (11,3)
  _011: a rectangle with size (1,5) and color red and mask Full at (7,7)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (15,11)
  _01111: a rectangle with size (1,5) and color red and mask Full at (15,3)
diff: 
delta: (19,11)=8  (19,15)=8 
   (947.3 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color cyan at (2,2)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (21.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color red and mask Full at (11,3)
  _011: a rectangle with size (1,5) and color red and mask Full at (7,7)
  _0111: a rectangle with size (1,5) and color red and mask Full at (15,3)
  _01111: a rectangle with size (1,5) and color cyan and mask Full at (15,11)
diff: 
delta: (19,11)=8  (19,15)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,9) and color red and mask Full at (11,3)
  _011: a rectangle with size (1,5) and color red and mask Full at (7,7)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (15,11)
  _01111: a rectangle with size (1,5) and color red and mask Full at (15,3)
diff: 
delta: (19,11)=8  (19,15)=8 
! 3 wrong pixels (generated / expected)

TRAIN 7837ac64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (1,10) and color green and mask Full at (17,14)
  _011: a rectangle with size (1,7) and color pink and mask Full at (11,14)
  _0111: a rectangle with size (1,10) and color green and mask Full at (20,14)
  _01111: a rectangle with size (1,7) and color pink and mask Full at (14,14)
diff: 
delta:
   (1018.5 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (2,0)
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,0)
diff: 
delta: (2,1)=3  (2,2)=3 
   (48.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (1,10) and color green and mask Full at (17,14)
  _011: a rectangle with size (1,10) and color green and mask Full at (20,14)
  _0111: a rectangle with size (1,7) and color pink and mask Full at (11,14)
  _01111: a rectangle with size (1,7) and color pink and mask Full at (14,14)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (1,10) and color green and mask Full at (17,14)
  _011: a rectangle with size (1,7) and color pink and mask Full at (11,14)
  _0111: a rectangle with size (1,10) and color green and mask Full at (20,14)
  _01111: a rectangle with size (1,7) and color pink and mask Full at (14,14)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 7837ac64.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (15,7)
  _011: a rectangle with size (1,13) and color red and mask Full at (19,7)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (7,7)
  _01111: a rectangle with size (1,5) and color red and mask Full at (7,15)
diff: 
delta: (11,7)=1  (11,11)=1  (11,15)=2  (11,19)=2 
   (996.2 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (3,3) and color red and mask x.x|..x|xxx at (0,0)
diff: 
delta:
   (28.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (15,7)
  _011: a rectangle with size (1,13) and color red and mask Full at (19,7)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (7,7)
  _01111: a rectangle with size (1,5) and color red and mask Full at (7,15)
diff: 
delta: (11,7)=1  (11,11)=1  (11,15)=2  (11,19)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (15,7)
  _011: a rectangle with size (1,13) and color red and mask Full at (19,7)
  _0111: a rectangle with size (1,5) and color red and mask Full at (7,15)
  _01111: a rectangle with size (1,5) and color blue and mask Full at (7,7)
diff: 
delta: (11,7)=1  (11,11)=1  (11,15)=2  (11,19)=2 
! 9 wrong pixels (generated / expected)

TRAIN 7837ac64.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color red and mask ....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x.... at (0,0)
  _01: a rectangle with size (1,16) and color cyan and mask Full at (14,4)
  _011: a rectangle with size (1,16) and color cyan and mask Full at (19,4)
  _0111: a rectangle with size (1,6) and color blue and mask Full at (4,4)
  _01111: a rectangle with size (1,6) and color yellow and mask Full at (4,14)
diff: 
delta: (9,4)=1  (9,9)=1  (9,14)=4  (9,19)=4 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color red and mask ....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x.... at (0,0)
  _01: a rectangle with size (1,16) and color cyan and mask Full at (14,4)
  _011: a rectangle with size (1,16) and color cyan and mask Full at (19,4)
  _0111: a rectangle with size (1,6) and color yellow and mask Full at (4,14)
  _01111: a rectangle with size (1,6) and color blue and mask Full at (4,4)
diff: 
delta: (9,4)=1  (9,9)=1  (9,14)=4  (9,19)=4 
! 8 wrong pixels (generated / expected)

TEST 7837ac64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 1147.0 bits (1147.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-215] Checking task 794b24be.json: 10 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5740.9 = 5749.8
DL output with Mo: L = 9.0 + 5740.9 = 5749.8
DL input+output M: L = 17.9 + 11481.7 = 11499.7

# learning a model for train pairs
2.000	
1.677	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.463	OUT DEF: ^.size=^.size
1.293	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.213	OUT DEF: ^.layer_0.shape.color=red
1.132	IN  DEF: ^.layer_0.shape.color=blue
1.107	OUT DEF: ^.color=black
1.081	IN  DEF: ^.color=black
1.059	IN  DEF: ^.size=(?,?)
0.964	IN  DEF: ^.size.i=3
0.868	IN  DEF: ^.size.j=3
0.846	OUT DEF: ^.layer_0.pos=(?,?)
0.796	OUT DEF: ^.layer_0.pos.i=(0)
0.745	OUT DEF: ^.layer_0.pos.j=(0)
0.723	OUT DEF: ^.layer_0.shape.size=(?,?)
0.701	IN  DEF: ^.layer_0.pos=(?,?)
0.679	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at ((0),(0))
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 46.6 + 2641.1 = 2687.7
DL output with Mo: L = 37.7 + 1177.2 = 1214.9
DL input+output M: L = 84.4 + 3818.3 = 3902.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta:
   (12.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (21.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta: (2,0)=1 
   (30.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta: (2,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,1)
diff: 
delta:
   (21.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (12.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1 
   (32.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta:
   (10.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
   (21.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta:
   (10.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1  (2,2)=1 
   (48.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1  (2,2)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/8: 0 - (FAILURE)

## instance 9

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask .x|xx|x. at (0,0)
diff: 
delta:
   (24.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask .x|xx|x. at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/9: 0 - (FAILURE)

## instance 10

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,1)
diff: 
delta: (0,0)=1 
   (38.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,1)
diff: 
delta: (0,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/10: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
diff: 
delta: (2,1)=1 
! 2 wrong pixels (generated / expected)

TEST 794b24be.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST 794b24be.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 1177.2 bits (1177.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-214] Checking task 7b6016b9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 69525.3 = 69534.2
DL output with Mo: L = 9.0 + 112337.0 = 112345.9
DL input+output M: L = 17.9 + 181862.2 = 181880.2

# learning a model for train pairs
2.000	
1.232	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.626	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.412	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.339	OUT DEF: ^.layer_01.shape.mask=Full
0.333	OUT DEF: ^.size=^.size
0.329	OUT DEF: ^.layer_0=^.layer_0
0.327	OUT DEF: ^.color=green
0.326	OUT DEF: ^.layer_01.shape.color=red
0.304	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.302	OUT DEF: ^.color=green
0.302	OUT DEF: ^.layer_010.shape.mask=Full
0.301	IN  DEF: ^.color=black
0.301	IN  DEF: ^.size=(?,?)
0.300	IN  DEF: ^.layer_0.pos=(?,?)
0.300	IN  DEF: ^.layer_0.shape.size=(?,?)
0.299	OUT DEF: ^.layer_010.pos=(?,?)
0.299	OUT DEF: ^.layer_010.shape.size=(?,?)
0.299	OUT DEF: ^.layer_01.pos=(?,?)
0.298	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: ^.layer_0
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 41.0 + 15924.7 = 15965.7
DL output with Mo: L = 73.2 + 7641.6 = 7714.8
DL input+output M: L = 114.2 + 23566.3 = 23680.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
diff: 
delta:
   (548.6 bits)
data: a background with size (23,23) and color green and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
  _010: a rectangle with size (6,9) and color red and mask Full at (9,7)
  _01: a rectangle with size (3,3) and color red and mask Full at (5,7)
diff: 
delta: (16,14)=2  (16,15)=2  (17,14)=2  (17,15)=2  (18,14)=2  (18,15)=2 
   (188.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
diff: 
delta:
! 71 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
diff: 
delta:
   (539.7 bits)
data: a background with size (22,25) and color green and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
  _010: a rectangle with size (5,8) and color green and mask Full at (17,17)
  _01: a rectangle with size (8,5) and color red and mask Full at (4,5)
diff: 
delta: (4,11)=2  (4,12)=2  (4,13)=2  (4,14)=2  (4,15)=2  (5,11)=2  (5,12)=2  (5,13)=2  (5,14)=2  (5,15)=2  (6,11)=2  (6,12)=2  (6,13)=2  (6,14)=2  (6,15)=2 
   (387.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
diff: 
delta:
! 57 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,21) and color black and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
diff: 
delta:
   (504.1 bits)
data: a background with size (24,21) and color green and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
  _010: a rectangle with size (9,8) and color red and mask Full at (6,5)
  _01: a rectangle with size (2,4) and color red and mask Full at (16,14)
diff: 
delta: (16,5)=2  (16,6)=2  (17,5)=2  (17,6)=2  (18,5)=2  (18,6)=2 
   (188.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,21) and color black and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
diff: 
delta:
! 84 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (21,22) and color orange and mask ...x..........x.......|...x.....x....x.....x.|...x.....x....x.....x.|xxxxxxxxxxxxxxxxxxxxxx|...x.....x....x.....x.|...x.....x....x.....x.|...x.....x....x.....x.|...x.....x....x.....x.|...x....xxxxxxxxxxxxxx|...x.....x....x.....x.|...x.....x....x.....x.|...x..........x.....x.|...x..........x.......|.xxxxxxxxxxxxxxxxx....|...x..........x.......|...x..........x.......|...x......xxxxxxxxx...|.xxxxx........x.......|...x..........x.......|...x..................|...x.................. at (1,2)
diff: 
delta:
! 102 wrong pixels (generated / expected)

TEST 7b6016b9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 7641.6 bits (7641.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-213] Checking task 7b7f7511.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6557.4 = 6566.3
DL output with Mo: L = 9.0 + 3439.6 = 3448.5
DL input+output M: L = 17.9 + 9996.9 = 10014.9

# learning a model for train pairs
2.000	
1.675	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.436	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.376	OUT DEF: ^.color=^.color
1.313	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.272	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.255	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.237	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.227	OUT DEF: ^.size=(?,?)
1.183	OUT DEF: ^.size.j=^.layer_011.pos.j + 1
1.173	OUT DEF: ^.layer_0.shape.size=(?,?)
1.129	OUT DEF: ^.layer_0.shape.size.j=^.layer_011.pos.j + 1
1.091	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
1.081	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.995	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.925	OUT DEF: ^.color=^.color
0.861	OUT DEF: ^.layer_011=^.layer_011
0.851	OUT DEF: ^.layer_01.pos=(?,?)
0.828	OUT DEF: ^.layer_01.pos.i=^.layer_0.shape.size.i - 1
0.807	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.i + ^.layer_01.pos.i
0.802	IN  DEF: ^.size=(?,?)
0.797	IN  DEF: ^.layer_0.pos=(?,?)
0.781	IN  DEF: ^.layer_0.pos.j=(0)
0.775	IN  DEF: ^.layer_0.shape.size=(?,?)
0.770	IN  DEF: ^.layer_01.pos=(?,?)
0.765	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.layer_011.pos.j + 1) and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_011.pos.j + 1) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: ^.layer_01.shape at (^.layer_0.shape.size.i - 1,^.layer_01.pos.i + ^.layer_01.pos.i)
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,(0))
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 77.2 + 3838.7 = 3915.9
DL output with Mo: L = 103.1 + 477.5 = 580.5
DL input+output M: L = 180.3 + 4316.2 = 4496.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,8) and color green and layers
  _0: a rectangle with size (4,8) and color blue and mask xx..xx..|xx..xx..|..xx..xx|..xx..xx at (0,0)
  _01: a point with color red at (0,7)
  _011: a point with color red at (0,3)
diff: 
delta: (3,0)=2  (3,4)=2 
   (142.5 bits)
data: a background with size (4,4) and color green and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|xx..|..xx|..xx at (0,0)
  _01: a point with color red at (3,0)
  _011: a point with color red at (0,3)
diff: 
delta:
   (25.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color green and layers
  _0: a rectangle with size (4,8) and color blue and mask xx..xx..|xx..xx..|..xx..xx|..xx..xx at (0,0)
  _01: a point with color red at (0,3)
  _011: a point with color red at (0,7)
diff: 
delta: (3,0)=2  (3,4)=2 
! size mismatch, 10x8 instead of 4x4
>> Trial 2
data: a background with size (4,8) and color green and layers
  _0: a rectangle with size (4,8) and color blue and mask xx..xx..|xx..xx..|..xx..xx|..xx..xx at (0,0)
  _01: a point with color red at (0,7)
  _011: a point with color red at (0,3)
diff: 
delta: (3,0)=2  (3,4)=2 
! size mismatch, 10x4 instead of 4x4

TRAIN 7b7f7511.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (2,6) and color yellow and mask xxxxxx|.x..x. at (0,0)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (2,2)
diff: 
delta: (1,5)=8  (2,5)=8 
   (114.3 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,0)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (2,2)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (2,6) and color yellow and mask xxxxxx|.x..x. at (0,0)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,5)
diff: 
delta: (2,2)=8  (2,5)=8 
! size mismatch, 10x6 instead of 3x3
>> Trial 2
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (2,6) and color yellow and mask xxxxxx|.x..x. at (0,0)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (1,2)
diff: 
delta: (2,2)=8  (2,5)=8 
! size mismatch, 10x3 instead of 3x3
>> Trial 3
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (2,6) and color yellow and mask xxxxxx|.x..x. at (0,0)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (2,2)
diff: 
delta: (1,5)=8  (2,5)=8 
! size mismatch, 10x3 instead of 3x3

TRAIN 7b7f7511.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,2) and color green and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a point with color red at (0,0)
  _011: a point with color red at (1,1)
diff: 
delta: (3,0)=2  (4,1)=2  (5,0)=4  (5,1)=4 
   (127.0 bits)
data: a background with size (3,2) and color green and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a point with color red at (0,0)
  _011: a point with color red at (1,1)
diff: 
delta:
   (7.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color green and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a point with color red at (0,0)
  _011: a point with color red at (1,1)
diff: 
delta: (3,0)=2  (4,1)=2  (5,0)=4  (5,1)=4 
! size mismatch, 10x2 instead of 3x2
>> Trial 2
data: a background with size (6,2) and color red and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a point with color green at (0,1)
  _011: a point with color green at (1,0)
diff: 
delta: (3,1)=3  (4,0)=3  (5,0)=4  (5,1)=4 
! size mismatch, 10x1 instead of 3x2
>> Trial 3
data: a background with size (6,2) and color green and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a point with color red at (0,0)
  _011: a point with color red at (3,0)
diff: 
delta: (1,1)=2  (4,1)=2  (5,0)=4  (5,1)=4 
! size mismatch, 10x1 instead of 3x2

TRAIN 7b7f7511.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask xx|.x at (2,0)
  _01: a point with color grey at (0,0)
  _011: a point with color grey at (0,2)
diff: 
delta: (1,1)=5# (3,0)=2  (3,2)=2  (4,0)=5# (4,2)=5# (5,1)=5# (6,0)=6  (6,1)=6  (7,0)=2  (7,1)=6  (7,2)=2 
! size mismatch, 10x3 instead of 4x3
>> Trial 2
data: a background with size (8,3) and color yellow and layers
  _0: a rectangle with size (6,1) and color pink and mask Full at (2,1)
  _01: a point with color grey at (0,0)
  _011: a point with color grey at (0,2)
diff:   ^.layer_0.pos.j
delta: (1,1)=5# (2,0)=6  (3,0)=2  (3,2)=2  (4,0)=5# (4,1)=4  (4,2)=5# (5,1)=5# (6,0)=6  (7,0)=2  (7,2)=2 
! size mismatch, 10x3 instead of 4x3
>> Trial 3
data: a background with size (8,3) and color yellow and layers
  _0: a rectangle with size (6,1) and color pink and mask Full at (2,1)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (0,0)
diff:   ^.layer_0.pos.j
delta: (1,1)=5# (2,0)=6  (3,0)=2  (3,2)=2  (4,0)=5# (4,1)=4  (4,2)=5# (5,1)=5# (6,0)=6  (7,0)=2  (7,2)=2 
! size mismatch, 10x1 instead of 4x3

TEST 7b7f7511.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 477.5 bits (477.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-212] Checking task 7c008303.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21929.7 = 21938.7
DL output with Mo: L = 9.0 + 9492.0 = 9501.0
DL input+output M: L = 17.9 + 31421.7 = 31439.7

# learning a model for train pairs
2.000	
1.680	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.472	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.335	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.197	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.103	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.018	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.961	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 8439.7 = 8506.5
DL output with Mo: L = 85.3 + 5359.0 = 5444.3
DL input+output M: L = 152.1 + 13798.7 = 13950.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
diff: 
delta: (0,0)=2  (0,1)=4  (1,0)=1  (1,1)=6 
   (228.6 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (0,3)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (3,0)
  _0111: a rectangle with size (3,3) and color pink and mask .x.|xxx|.x. at (3,3)
diff: 
delta:
   (170.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
diff: 
delta: (0,0)=2  (0,1)=4  (1,0)=1  (1,1)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN 7c008303.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask ......x..|......x..|xxxxxxxxx|......x..|......x..|......x..|......x..|......x..|......x.. at (0,0)
  _01: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _011: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.x at (3,0)
diff: 
delta: (0,7)=1  (0,8)=2  (1,7)=4  (1,8)=1  (3,5)=3 
   (336.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|xx. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.x. at (3,3)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,3)
diff: 
delta: (0,5)=2  (2,3)=2  (2,5)=2 
   (197.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask ......x..|......x..|xxxxxxxxx|......x..|......x..|......x..|......x..|......x..|......x.. at (0,0)
  _01: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _011: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.x at (3,0)
diff: 
delta: (0,7)=1  (0,8)=2  (1,7)=4  (1,8)=1  (3,5)=3 
! size mismatch, 10x10 instead of 6x6

TRAIN 7c008303.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
diff: 
delta: (4,4)=3  (5,4)=3  (5,8)=3  (7,0)=2  (7,1)=4  (8,0)=6  (8,1)=5#
   (279.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|..x|xx. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|..x|xx. at (0,3)
  _011: a rectangle with size (2,1) and color pink and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (3,3)
diff: 
delta: (5,5)=5#
   (167.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
diff: 
delta: (4,4)=3  (5,4)=3  (5,8)=3  (7,0)=2  (7,1)=4  (8,0)=6  (8,1)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 7c008303.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,4) and color green and mask ...x|xx.x|.x.x|.xxx|.x..|..x. at (0,0)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,6)
diff: 
delta: (1,5)=3  (2,5)=3  (4,5)=3  (7,7)=2  (7,8)=1  (8,7)=4  (8,8)=7#
! size mismatch, 10x10 instead of 6x6

TEST 7c008303.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 5359.0 bits (5359.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-211] Checking task 7ddcd7ec.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3997.9 = 4006.9
DL output with Mo: L = 9.0 + 6689.6 = 6698.6
DL input+output M: L = 17.9 + 10687.5 = 10705.4

# learning a model for train pairs
2.000	
1.490	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.038	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.951	OUT DEF: ^.size=^.size
0.930	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.919	IN  DEF: ^.color=black
0.910	IN  DEF: ^.size=(?,?)
0.844	IN  DEF: ^.size.i=10
0.779	IN  DEF: ^.size.j=10
0.770	IN  DEF: ^.layer_0.pos=(?,?)
0.761	IN  DEF: ^.layer_0.shape.size=(?,?)
0.754	OUT DEF: ^.color=black
0.749	OUT DEF: ^.layer_0.pos=(?,?)
0.744	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 52.3 + 1234.1 = 1286.4
DL output with Mo: L = 34.3 + 2798.2 = 2832.5
DL input+output M: L = 86.5 + 4032.3 = 4118.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,2)
diff: 
delta:
   (37.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xx......|xx......|..x.....|...x....|....x...|.....x..|......x.|.......x at (2,2)
diff: 
delta:
   (93.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask ..x|xx.|xx.|..x at (1,4)
diff: 
delta:
   (40.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color yellow and mask ...x..|..x...|xx....|xx....|..x...|...x..|....x.|.....x at (0,4)
diff: 
delta:
   (76.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask ..x|xx.|xx.|..x at (1,4)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ...x|.xx.|.xx.|x... at (2,3)
diff: 
delta:
   (45.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask ........x|.......x.|......x..|....xx...|....xx...|...x.....|..x......|.x.......|x........ at (0,0)
diff: 
delta:
   (110.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ...x|.xx.|.xx.|x... at (2,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ...x|.xx.|.xx.|x..x at (3,2)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST 7ddcd7ec.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 2798.2 bits (2798.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-210] Checking task 7df24a62.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 42578.8 = 42587.8
DL output with Mo: L = 9.0 + 67125.3 = 67134.3
DL input+output M: L = 17.9 + 109704.1 = 109722.1

# learning a model for train pairs
2.000	
1.716	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.510	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.302	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.215	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.200	OUT DEF: ^.size=^.size
1.187	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 29907.4 = 29955.4
DL output with Mo: L = 66.4 + 32428.1 = 32494.5
DL input+output M: L = 114.4 + 62335.5 = 62450.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (435.7 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (5,5) and color blue and mask Full at (12,10)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (446.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! 65 wrong pixels (generated / expected)

TRAIN 7df24a62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (6,15)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (14,15)=4  (15,14)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
   (607.9 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (6,15)
  _01: a rectangle with size (4,4) and color blue and mask Full at (13,13)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (14,15)=4  (15,14)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
   (617.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (6,15)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (14,15)=4  (15,14)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
! 57 wrong pixels (generated / expected)

TRAIN 7df24a62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,14)=4  (12,15)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (1039.1 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask xxxxxxx|x..xx.x|xxxxx.x|....xxx at (11,13)
  _01: a rectangle with size (4,7) and color blue and mask ....xxx|xxxxx.x|x..xx.x|xxxxxxx at (13,5)
  _011: a rectangle with size (8,4) and color blue and mask xxx.|x.x.|x.x.|xxx.|.xxx|.x.x|.x.x|.xxx at (2,13)
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,14)=4  (12,15)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,4)=4  (15,6)=4  (15,7)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (1211.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,14)=4  (12,15)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
! 111 wrong pixels (generated / expected)

TRAIN 7df24a62.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
diff: 
delta: (0,2)=4  (1,2)=4  (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (908.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (4,15)
  _01: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _011: a rectangle with size (3,5) and color blue and mask Full at (0,1)
diff: 
delta: (0,2)=4  (1,2)=4  (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (7,16)=4  (7,17)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (967.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
diff: 
delta: (0,2)=4  (1,2)=4  (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
! 88 wrong pixels (generated / expected)

TRAIN 7df24a62.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,5)
diff: 
delta: (1,10)=4  (3,6)=4  (3,10)=4  (3,12)=4  (4,3)=4  (5,14)=4  (8,10)=4  (9,5)=4  (9,19)=4  (10,8)=4  (10,13)=4  (11,3)=4  (11,5)=4  (11,18)=4  (12,12)=4  (16,0)=4  (16,7)=4  (16,18)=4  (18,19)=4  (20,6)=4  (20,8)=4  (21,21)=4  (22,1)=4  (22,6)=4 
! 90 wrong pixels (generated / expected)

TEST 7df24a62.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.8 sec (28.8 sec/task)
bits-train-error = 32428.1 bits (32428.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-209] Checking task 7e0986d6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 38455.1 = 38464.0
DL output with Mo: L = 9.0 + 36070.3 = 36079.3
DL input+output M: L = 17.9 + 74525.4 = 74543.3

# learning a model for train pairs
2.000	
1.653	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.341	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.056	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.790	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.572	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.393	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.361	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.342	OUT DEF: ^.layer_01=^.layer_010
0.331	OUT DEF: ^.size=^.size
0.321	OUT DEF: ^.layer_0.shape.size=^.layer_00.shape.size
0.315	OUT DEF: ^.layer_011=^.layer_0
0.308	OUT DEF: ^.layer_0.pos=^.layer_00.pos
0.306	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.304	IN  OBJECT at ^.layer_0101: a point with color ? at ?
0.303	IN  DEF: ^.layer_0.shape.mask=Full
0.301	IN  OBJECT at ^.layer_01011: a point with color ? at ?
0.299	IN  OBJECT at ^.layer_010111: a point with color ? at ?
0.298	IN  OBJECT at ^.layer_0101111: a point with color ? at ?
0.296	IN  OBJECT at ^.layer_0100: a point with color ? at ?
0.295	IN  DEF: ^.layer_010.shape.mask=Full
0.294	IN  DEF: ^.layer_01.shape.mask=Full
0.293	OUT DEF: ^.color=black
0.292	IN  DEF: ^.color=black
0.291	IN  DEF: ^.size=(?,?)
0.286	IN  DEF: ^.size.i=13
0.286	IN  DEF: ^.layer_00.pos=(?,?)
0.285	IN  DEF: ^.layer_00.shape.size=(?,?)
0.285	IN  DEF: ^.layer_0.pos=(?,?)
0.284	IN  DEF: ^.layer_0.shape.size=(?,?)
0.281	IN  DEF: ^.layer_0.shape.size.i=5
0.280	IN  DEF: ^.layer_0100.pos=(?,?)
0.279	IN  DEF: ^.layer_010.pos=(?,?)
0.279	IN  DEF: ^.layer_010.shape.size=(?,?)
0.278	IN  DEF: ^.layer_01.pos=(?,?)
0.278	IN  DEF: ^.layer_0101.pos=(?,?)
0.277	IN  DEF: ^.layer_01011.pos=(?,?)
0.277	IN  DEF: ^.layer_010111.pos=(?,?)
0.274	IN  DEF: ^.layer_010111.pos.j=1
0.273	IN  DEF: ^.layer_01.shape.size=(?,?)
0.273	IN  DEF: ^.layer_0101111.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_00.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_00.pos
  _01: ^.layer_010
  _011: ^.layer_0
WHERE (Mi)
a background with size (13,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (5,?) and color ? and mask Full at (?,?)
  _0100: a point with color ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0101: a point with color ? at (?,?)
  _01011: a point with color ? at (?,?)
  _010111: a point with color ? at (?,1)
  _0101111: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 216.9 + 7693.3 = 7910.2
DL output with Mo: L = 45.8 + 2378.8 = 2424.6
DL input+output M: L = 262.7 + 10072.1 = 10334.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,14) and color black and layers
  _00: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _0100: a point with color cyan at (0,0)
  _010: a rectangle with size (4,5) and color green and mask Full at (6,9)
  _0101: a point with color cyan at (0,4)
  _01011: a point with color cyan at (0,11)
  _010111: a point with color cyan at (7,1)
  _0101111: a point with color cyan at (5,4)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,2)
diff: 
delta: (2,8)=8  (2,10)=8  (4,7)=8  (7,6)=8  (7,12)=8  (8,4)=8  (10,4)=8  (10,8)=8  (12,1)=8  (12,4)=8  (12,13)=8 
   (460.6 bits)
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask ...xxxxx|...xxxxx|...xxxxx|xxxxxxxx|xxx.....|xxx..... at (7,0)
  _01: a rectangle with size (4,5) and color green and mask Full at (6,9)
  _011: a rectangle with size (5,5) and color green and mask Full at (0,6)
diff: 
delta: (3,2)=3  (3,3)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=3  (5,2)=3  (5,3)=3  (5,4)=3 
   (235.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  _00: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _0100: a point with color cyan at (0,0)
  _010: a rectangle with size (4,5) and color green and mask Full at (6,9)
  _0101: a point with color cyan at (0,4)
  _01011: a point with color cyan at (0,11)
  _010111: a point with color cyan at (5,4)
  _0101111: a point with color cyan at (7,1)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,2)
diff:   ^.layer_010111.pos.j
delta: (2,8)=8  (2,10)=8  (4,7)=8  (7,6)=8  (7,12)=8  (8,4)=8  (10,4)=8  (10,8)=8  (12,1)=8  (12,4)=8  (12,13)=8 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,14) and color black and layers
  _00: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _0100: a point with color cyan at (0,0)
  _010: a rectangle with size (4,5) and color green and mask xxxxx|xxx.x|xxxxx|xxxxx at (6,9)
  _0101: a point with color cyan at (0,4)
  _01011: a point with color cyan at (0,11)
  _010111: a point with color cyan at (7,1)
  _0101111: a point with color cyan at (5,4)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,2)
diff:   ^.layer_010.shape.mask
delta: (2,8)=8  (2,10)=8  (4,7)=8  (7,6)=8  (7,12)=8  (8,4)=8  (10,4)=8  (10,8)=8  (12,1)=8  (12,4)=8  (12,13)=8 
! 29 wrong pixels (generated / expected)

TRAIN 7e0986d6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _00: a rectangle with size (4,10) and color red and mask Full at (9,3)
  _0: a rectangle with size (5,7) and color red and mask Full at (2,9)
  _0100: a point with color blue at (3,3)
  _010: a rectangle with size (5,4) and color red and mask Full at (1,1)
  _0101: a point with color blue at (1,6)
  _01011: a point with color blue at (5,5)
  _010111: a point with color blue at (9,1)
  _0101111: a point with color blue at (8,12)
  _01: a rectangle with size (1,1) and color blue and mask Full at (10,15)
diff: 
delta: (2,10)=1  (5,14)=1  (9,9)=1  (10,3)=1  (11,9)=1  (11,12)=1 
   (308.7 bits)
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (4,10) and color red and mask Full at (9,3)
  _01: a rectangle with size (5,4) and color red and mask Full at (1,1)
  _011: a rectangle with size (5,7) and color red and mask Full at (2,9)
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _00: a rectangle with size (4,10) and color red and mask xxxxxx.xxx|.xxxxxxxxx|xxxxxx.xx.|xxxxxxxxxx at (9,3)
  _0: a rectangle with size (5,7) and color red and mask Full at (2,9)
  _0100: a point with color blue at (1,6)
  _010: a rectangle with size (5,4) and color red and mask Full at (1,1)
  _0101: a point with color blue at (5,5)
  _01011: a point with color blue at (8,12)
  _010111: a point with color blue at (9,1)
  _0101111: a point with color blue at (9,9)
  _01: a rectangle with size (1,4) and color blue and mask Full at (11,9)
diff: 
delta: (2,10)=1  (3,3)=1  (5,14)=1  (10,3)=1  (10,15)=1 
correct output grid

TRAIN 7e0986d6.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _00: a rectangle with size (6,8) and color grey and mask Full at (2,1)
  _0: a rectangle with size (7,4) and color grey and mask Full at (0,12)
  _0100: a point with color yellow at (1,1)
  _010: a rectangle with size (2,6) and color grey and mask Full at (10,6)
  _0101: a point with color yellow at (1,6)
  _01011: a point with color yellow at (3,16)
  _010111: a point with color yellow at (7,12)
  _0101111: a point with color yellow at (9,15)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (11,3)
diff:   ^.size.i  ^.layer_010111.pos.j  ^.layer_0.shape.size.i
delta: (0,14)=4  (2,2)=4  (5,7)=4  (6,14)=4  (7,5)=4  (10,11)=4  (11,9)=4 
correct output grid

TEST 7e0986d6.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 17.6 sec (17.6 sec/task)
bits-train-error = 2378.8 bits (2378.8 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-208] Checking task 7f4411dc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21866.8 = 21875.8
DL output with Mo: L = 9.0 + 17525.9 = 17534.9
DL input+output M: L = 17.9 + 39392.8 = 39410.7

# learning a model for train pairs
2.000	
1.584	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.248	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.056	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.968	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.929	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.894	OUT DEF: ^.size=^.size
0.887	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.883	OUT DEF: ^.layer_0.shape.mask=Full
0.879	IN  DEF: ^.layer_0111.shape.mask=Full
0.877	OUT DEF: ^.color=black
0.875	IN  DEF: ^.color=black
0.873	OUT DEF: ^.layer_0.pos=(?,?)
0.864	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.862	OUT DEF: ^.layer_0.shape.size=(?,?)
0.853	OUT DEF: ^.layer_0.shape.size.i=3
0.852	IN  DEF: ^.size=(?,?)
0.850	IN  DEF: ^.layer_0.pos=(?,?)
0.848	IN  DEF: ^.layer_0.shape.size=(?,?)
0.847	IN  DEF: ^.layer_01.pos=(?,?)
0.845	IN  DEF: ^.layer_01.shape.size=(?,?)
0.844	IN  DEF: ^.layer_011.pos=(?,?)
0.842	IN  DEF: ^.layer_011.shape.size=(?,?)
0.840	IN  DEF: ^.layer_0111.pos=(?,?)
0.839	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,?) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 124.3 + 6987.8 = 7112.0
DL output with Mo: L = 40.2 + 8966.6 = 9006.8
DL input+output M: L = 164.4 + 15954.3 = 16118.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _01: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta: (5,10)=7# (8,1)=7# (12,4)=7#
   (219.2 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
diff: 
delta: (3,2)=7# (3,3)=7# (3,4)=7# (3,5)=7# (4,2)=7# (4,3)=7# (4,4)=7# (4,5)=7# (5,2)=7# (5,3)=7# (5,4)=7# (5,5)=7# (8,8)=7# (8,9)=7# (8,10)=7# (9,8)=7# (9,9)=7# (9,10)=7#
   (374.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _01: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta: (5,10)=7# (8,1)=7# (12,4)=7#
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _01: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta: (5,10)=7# (8,1)=7# (12,4)=7#
! 39 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (10,9)
  _01: a rectangle with size (4,4) and color pink and mask .x..|xxxx|xxxx|xxxx at (4,3)
  _011: a rectangle with size (3,3) and color pink and mask .x.|xxx|xxx at (1,11)
  _0111: a rectangle with size (3,2) and color pink and mask Full at (12,2)
diff: 
delta: (2,1)=6  (2,6)=6  (3,16)=6  (6,12)=6  (9,13)=6  (10,3)=6  (12,7)=6  (15,13)=6  (16,10)=6 
   (352.7 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (10,9)
diff: 
delta: (2,11)=6  (2,12)=6  (2,13)=6  (3,11)=6  (3,12)=6  (3,13)=6  (5,3)=6  (5,4)=6  (5,5)=6  (5,6)=6  (6,3)=6  (6,4)=6  (6,5)=6  (6,6)=6  (7,3)=6  (7,4)=6  (7,5)=6  (7,6)=6  (12,2)=6  (12,3)=6  (13,2)=6  (13,3)=6  (14,2)=6  (14,3)=6 
   (511.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (10,9)
  _01: a rectangle with size (4,4) and color pink and mask .x..|xxxx|xxxx|xxxx at (4,3)
  _011: a rectangle with size (3,3) and color pink and mask .x.|xxx|xxx at (1,11)
  _0111: a rectangle with size (3,2) and color pink and mask Full at (12,2)
diff: 
delta: (2,1)=6  (2,6)=6  (3,16)=6  (6,12)=6  (9,13)=6  (10,3)=6  (12,7)=6  (15,13)=6  (16,10)=6 
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask ....x|xxxxx|xxxxx|xxxxx at (9,9)
  _01: a rectangle with size (4,4) and color pink and mask .x..|xxxx|xxxx|xxxx at (4,3)
  _011: a rectangle with size (3,3) and color pink and mask .x.|xxx|xxx at (1,11)
  _0111: a rectangle with size (3,2) and color pink and mask Full at (12,2)
diff: 
delta: (2,1)=6  (2,6)=6  (3,16)=6  (6,12)=6  (10,3)=6  (12,7)=6  (15,13)=6  (16,10)=6 
! 45 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask .xxxx.|.xxxx.|.xxxxx|x..... at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (6,5)
diff: 
delta:
   (126.9 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (10.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask .xxxx.|.xxxx.|.xxxxx|x..... at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (6,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xxxxxx|xxxxx.|xxxxx. at (5,4)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|.xxx|.xxx|x... at (1,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,7)
diff: 
delta: (3,7)=8  (7,0)=8  (8,2)=8  (9,4)=8  (9,9)=8 
! 27 wrong pixels (generated / expected)

TEST 7f4411dc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.0 sec (6.0 sec/task)
bits-train-error = 8966.6 bits (8966.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-207] Checking task 7fe24cdd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3328.4 = 3337.4
DL output with Mo: L = 9.0 + 12783.8 = 12792.8
DL input+output M: L = 17.9 + 16112.3 = 16130.2

# learning a model for train pairs
2.000	
1.851	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.723	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.636	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.561	OUT OBJECT at ^.layer_001: ^.layer_0.shape at ?
1.492	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.434	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.409	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.382	OUT DEF: ^.layer_00=^.layer_0
1.361	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.356	OUT DEF: ^.layer_01.shape.mask=Full
1.350	OUT DEF: ^.layer_011.shape.mask=Full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_0.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask Full at ?
  _011: a rectangle with size ? and color ? and mask Full at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a point with color ? at ?

DL input  with Mi: L = 60.1 + 2586.3 = 2646.5
DL output with Mo: L = 79.0 + 7051.0 = 7130.0
DL input+output M: L = 139.1 + 9637.4 = 9776.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _011: a point with color green at (1,2)
diff: 
delta: (2,1)=3  (2,2)=2 
   (103.7 bits)
data: a background with size (6,6) and color grey and layers
  _00: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _001: a rectangle with size (2,1) and color cyan and mask Full at (4,5)
  _0: a rectangle with size (4,4) and color green and mask .xx.|x..x|x..x|.xx. at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,2)
  _011: a rectangle with size (2,6) and color black and mask Full at (2,0)
diff: 
delta: (0,2)=0  (0,3)=0  (0,4)=8  (0,5)=8  (5,0)=8  (5,1)=8  (5,2)=0  (5,3)=0 
   (276.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _011: a point with color green at (1,2)
diff: 
delta: (2,1)=3  (2,2)=2 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _011: a point with color green at (1,2)
diff: 
delta: (2,1)=3  (2,2)=2 
! size mismatch, 10x10 instead of 6x6

TRAIN 7fe24cdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (0,1)
  _011: a point with color grey at (2,1)
diff: 
delta:
   (86.1 bits)
data: a background with size (6,6) and color cyan and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _001: a rectangle with size (2,1) and color green and mask Full at (4,5)
  _0: a rectangle with size (6,6) and color red and mask x.x...|xxx.x.|..xxxx|xxxx..|.x.xxx|...x.x at (0,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,4)
  _011: a rectangle with size (1,2) and color green and mask Full at (5,0)
diff: 
delta: (1,3)=5# (2,1)=5# (3,4)=5# (4,2)=5#
   (220.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,2) and color red and mask .x|xx|.x at (0,1)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _011: a point with color grey at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (0,1)
  _011: a point with color grey at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _011: a point with color red at (1,1)
diff: 
delta: (2,1)=5#
! size mismatch, 10x10 instead of 6x6

TRAIN 7fe24cdd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _011: a point with color green at (2,1)
diff: 
delta:
   (68.8 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _001: a rectangle with size (1,3) and color pink and mask Full at (4,3)
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (3,1) and color pink and mask Full at (3,1)
  _011: a rectangle with size (1,3) and color green and mask Full at (1,3)
diff: 
delta: (0,1)=3  (2,1)=3  (3,4)=3  (4,0)=3  (4,2)=3  (5,4)=3 
   (208.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _011: a point with color green at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _011: a point with color green at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 7fe24cdd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a point with color green at (2,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _011: a point with color green at (2,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 6x6

TEST 7fe24cdd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 7051.0 bits (7051.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-206] Checking task 80af3007.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 32301.7 = 32310.7
DL output with Mo: L = 9.0 + 16203.6 = 16212.6
DL input+output M: L = 17.9 + 48505.3 = 48523.2

# learning a model for train pairs
2.000	
1.134	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.526	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.473	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.438	OUT DEF: ^.size=^.layer_0.shape.size
0.430	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.425	IN  DEF: ^.layer_0.shape.color=grey
0.423	OUT DEF: ^.color=black
0.414	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.412	OUT DEF: ^.layer_0.pos=(?,?)
0.402	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.i - 1
0.396	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.j - 1
0.393	OUT DEF: ^.layer_01.shape.size=(?,?)
0.391	OUT DEF: ^.layer_0.shape.size=(?,?)
0.389	OUT DEF: ^.layer_01.pos=(?,?)
0.381	OUT DEF: ^.layer_01.pos.i=(0)
0.372	OUT DEF: ^.layer_01.pos.j=(0)
0.371	IN  DEF: ^.color=black
0.370	IN  DEF: ^.size=(?,?)
0.360	IN  DEF: ^.size.j=18
0.351	IN  DEF: ^.size.i=16
0.350	IN  DEF: ^.layer_0.pos=(?,?)
0.349	IN  DEF: ^.layer_0.shape.size=(?,?)
0.341	IN  DEF: ^.layer_0.shape.size.i=9
0.333	IN  DEF: ^.layer_0.shape.size.j=9
0.333	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.324	OUT DEF: ^.layer_00.shape.color=^.layer_0.shape.color
0.320	OUT DEF: ^.color=black
0.318	OUT DEF: ^.layer_00.pos=(?,?)
0.316	OUT DEF: ^.layer_00.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _00: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j - 1,^.layer_0.pos.i - 1)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask ? at (?,?)

DL input  with Mi: L = 67.3 + 2846.2 = 2913.5
DL output with Mo: L = 115.2 + 3547.1 = 3662.3
DL input+output M: L = 182.5 + 6393.2 = 6575.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx...xxx|xxx...xxx|xxx...xxx at (1,1)
diff: 
delta:
   (94.9 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (1,1) and color grey and mask Full at (0,2)
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (9,9) and color grey and mask x.x...x.x|.x.....x.|x.x...x.x|...x.x...|....x....|...x.x...|x.x...x.x|.x.....x.|x.x...x.x at (0,0)
diff: 
delta:
   (124.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx...xxx|xxx...xxx|xxx...xxx at (1,1)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 80af3007.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxx...|xxxxxx...|xxxxxx...|......xxx|......xxx|......xxx|xxxxxx...|xxxxxx...|xxxxxx... at (1,7)
diff: 
delta:
   (94.9 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color grey and mask xx.|..x|xx. at (3,6)
  _0: a rectangle with size (3,6) and color grey and mask xx.xx.|..x..x|xx.xx. at (6,0)
  _01: a rectangle with size (3,6) and color grey and mask xx.xx.|..x..x|xx.xx. at (0,0)
diff: 
delta:
   (100.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxx...|xxxxxx...|xxxxxx...|......xxx|......xxx|......xxx|xxxxxx...|xxxxxx...|xxxxxx... at (1,7)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 80af3007.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|...xxxxxx|...xxxxxx|...xxxxxx|xxx...xxx|xxx...xxx|xxx...xxx at (4,3)
diff: 
delta:
   (94.9 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (2,2) and color grey and mask Full at (0,1)
  _0: a rectangle with size (2,1) and color grey and mask Full at (2,3)
  _01: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|.xx.xx.xx|x.xx.xx.x|...xxxxxx|....xx.xx|...x.xx.x|xxx...xxx|.xx....xx|x.x...x.x at (0,0)
diff: 
delta:
   (130.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|...xxxxxx|...xxxxxx|...xxxxxx|xxx...xxx|xxx...xxx|xxx...xxx at (4,3)
diff: 
delta:
! 45 wrong pixels (generated / expected)

TRAIN 80af3007.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|...xxx...|...xxx...|...xxx...|xxx...xxx|xxx...xxx|xxx...xxx at (3,7)
diff:   ^.size.j  ^.size.i
delta:
! 36 wrong pixels (generated / expected)

TEST 80af3007.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.6 sec (3.6 sec/task)
bits-train-error = 3547.1 bits (3547.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-205] Checking task 810b9b61.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 19348.3 = 19357.2
DL output with Mo: L = 9.0 + 19348.3 = 19357.2
DL input+output M: L = 17.9 + 38696.5 = 38714.5

# learning a model for train pairs
2.000	
1.724	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.448	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.273	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.099	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.998	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.896	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 8608.9 = 8675.6
DL output with Mo: L = 66.8 + 8608.9 = 8675.6
DL input+output M: L = 133.5 + 17217.7 = 17351.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color blue and mask Border at (12,10)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (10,0)=1  (10,1)=1  (10,2)=1  (11,0)=1  (11,2)=1  (12,0)=1  (12,2)=1  (13,0)=1  (13,1)=1  (13,2)=1  (13,5)=1  (13,6)=1 
   (597.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color green and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color green and mask Border at (12,10)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (10,0)=3  (10,1)=3  (10,2)=3  (11,0)=3  (11,2)=3  (12,0)=3  (12,2)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,5)=1  (13,6)=1 
   (597.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color blue and mask Border at (12,10)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (10,0)=1  (10,1)=1  (10,2)=1  (11,0)=1  (11,2)=1  (12,0)=1  (12,2)=1  (13,0)=1  (13,1)=1  (13,2)=1  (13,5)=1  (13,6)=1 
! size mismatch, 10x10 instead of 15x15

TRAIN 810b9b61.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _01: a rectangle with size (3,3) and color blue and mask Border at (3,4)
  _011: a rectangle with size (2,1) and color blue and mask Full at (3,10)
diff: 
delta: (8,4)=1 
   (149.8 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _01: a rectangle with size (3,3) and color green and mask Border at (3,4)
  _011: a rectangle with size (2,1) and color blue and mask Full at (3,10)
diff: 
delta: (8,4)=1 
   (149.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _01: a rectangle with size (3,3) and color blue and mask Border at (3,4)
  _011: a rectangle with size (2,1) and color blue and mask Full at (3,10)
diff: 
delta: (8,4)=1 
! size mismatch, 10x10 instead of 15x15

TRAIN 810b9b61.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,2) and color blue and mask xx|.x|.x at (6,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,4)
diff: 
delta:
   (113.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask Border at (2,1)
  _01: a rectangle with size (3,2) and color blue and mask xx|.x|.x at (6,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,4)
diff: 
delta:
   (113.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,2) and color blue and mask xx|.x|.x at (6,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,4)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN 810b9b61.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xxxxx|x...x|x...x|x...x|xx.xx at (0,7)
  _01: a rectangle with size (4,5) and color blue and mask Border at (7,4)
  _011: a rectangle with size (3,4) and color blue and mask Border at (1,1)
diff: 
delta: (6,1)=1  (6,2)=1  (8,1)=1  (8,11)=1 
! size mismatch, 10x10 instead of 12x12

TEST 810b9b61.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 8608.9 bits (8608.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-204] Checking task 82819916.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10900.1 = 10909.0
DL output with Mo: L = 9.0 + 18960.3 = 18969.2
DL input+output M: L = 17.9 + 29860.4 = 29878.3

# learning a model for train pairs
2.000	
1.797	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.642	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.526	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.419	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.365	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.313	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.274	OUT DEF: ^.size=^.size
1.241	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 8015.2 = 8063.2
DL output with Mo: L = 83.6 + 9426.9 = 9510.6
DL input+output M: L = 131.6 + 17442.2 = 17573.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
diff: 
delta: (1,2)=2  (1,5)=2  (4,2)=4  (6,0)=1  (6,1)=1  (6,2)=6 
   (191.6 bits)
data: a background with size (10,8) and color black and layers
  _00: a rectangle with size (1,8) and color blue and mask Full at (6,0)
  _0: a rectangle with size (1,2) and color cyan and mask Full at (4,3)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,2)
  _011: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (1,8) and color green and mask Full at (1,0)
diff: 
delta: (1,2)=2  (1,5)=2  (6,2)=6  (6,5)=6 
   (186.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
diff: 
delta: (1,2)=2  (1,5)=2  (4,2)=4  (6,0)=1  (6,1)=1  (6,2)=6 
! 32 wrong pixels (generated / expected)

TRAIN 82819916.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,6)
diff: 
delta: (1,2)=1  (1,4)=1  (3,0)=3  (3,1)=3  (3,2)=1  (7,0)=8  (7,1)=8  (7,2)=2 
   (228.6 bits)
data: a background with size (10,8) and color black and layers
  _00: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _0: a rectangle with size (1,6) and color red and mask Full at (7,2)
  _01: a rectangle with size (1,6) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,6)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (3,6)
diff: 
delta: (1,2)=1  (1,4)=1  (3,2)=1  (3,4)=1  (7,0)=8  (7,1)=8  (7,3)=8  (7,5)=8 
   (259.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,6)
diff: 
delta: (1,2)=1  (1,4)=1  (3,0)=3  (3,1)=3  (3,2)=1  (7,0)=8  (7,1)=8  (7,2)=2 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (1,2)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
diff: 
delta: (1,3)=2  (1,5)=2  (3,0)=3  (3,1)=3  (3,2)=1  (7,0)=8  (7,1)=8  (7,2)=2 
! 30 wrong pixels (generated / expected)

TRAIN 82819916.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
diff: 
delta: (1,1)=4  (1,6)=4  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
   (232.6 bits)
data: a background with size (12,8) and color black and layers
  _00: a rectangle with size (1,6) and color green and mask Full at (4,1)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _01: a rectangle with size (1,6) and color red and mask Full at (6,1)
  _011: a rectangle with size (1,6) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (1,8) and color blue and mask Full at (1,0)
diff: 
delta: (1,1)=4  (1,6)=4  (4,0)=2  (4,2)=2  (4,5)=2  (4,7)=2  (6,0)=8  (6,2)=8  (6,5)=8  (6,7)=8  (8,0)=6  (8,2)=6  (8,5)=6  (8,7)=6 
   (380.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
diff: 
delta: (1,1)=4  (1,6)=4  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 40 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,6) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
diff: 
delta: (1,2)=1  (1,5)=1  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 40 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,6) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta: (1,2)=1  (1,5)=1  (1,7)=1  (4,0)=2  (4,1)=3  (6,0)=8  (6,1)=2  (8,0)=6  (8,1)=5#
! 38 wrong pixels (generated / expected)

TRAIN 82819916.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
diff: 
delta: (1,6)=4  (4,0)=8  (4,1)=8  (4,2)=2 
   (148.7 bits)
data: a background with size (6,8) and color black and layers
  _00: a rectangle with size (1,3) and color red and mask Full at (4,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,6)
  _0111: a rectangle with size (1,8) and color green and mask Full at (1,0)
diff: 
delta: (4,6)=2 
   (117.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
diff: 
delta: (1,6)=4  (4,0)=8  (4,1)=8  (4,2)=2 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
diff: 
delta: (1,5)=3  (4,0)=8  (4,1)=8  (4,2)=2 
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,2) and color green and mask Full at (1,0)
diff: 
delta: (1,5)=3  (1,7)=3  (4,0)=8  (4,1)=8  (4,2)=2 
! 21 wrong pixels (generated / expected)

TRAIN 82819916.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (1,2)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
diff: 
delta: (1,3)=2  (1,5)=2  (1,8)=2  (3,0)=8  (3,1)=8  (3,2)=3  (6,0)=1  (6,1)=1  (6,2)=4  (9,0)=6  (9,1)=6  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 58 wrong pixels (generated / expected)

TEST 82819916.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.3 sec (27.3 sec/task)
bits-train-error = 9426.9 bits (9426.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-203] Checking task 83302e8f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 101069.3 = 101078.3
DL output with Mo: L = 9.0 + 207231.6 = 207240.5
DL input+output M: L = 17.9 + 308300.9 = 308318.8

# learning a model for train pairs
2.000	
1.327	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.909	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.615	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.518	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.468	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.437	OUT OBJECT at ^.layer_0110: ^.layer_01.shape at ?
0.409	OUT OBJECT at ^.layer_01100: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _01100: a rectangle with size ? and color ? and mask ? at ?
  _0110: ^.layer_01.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 28267.4 = 28315.4
DL output with Mo: L = 84.0 + 26657.6 = 26741.5
DL input+output M: L = 132.0 + 54925.0 = 55056.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (4,8) and color cyan and mask ....x...|xxxxxxxx|....x...|....x... at (8,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (14,21)=8  (14,22)=8 
   (1045.1 bits)
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (14,4) and color yellow and mask Full at (0,15)
  _01100: a rectangle with size (4,24) and color green and mask Full at (20,0)
  _0110: a rectangle with size (4,8) and color cyan and mask ....x...|xxxxxxxx|....x...|....x... at (8,0)
  _011: a rectangle with size (4,24) and color green and mask Full at (0,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,17)=4  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (14,21)=8  (14,22)=8  (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=3  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,0)=3  (16,1)=3  (16,2)=3  (16,3)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,0)=3  (17,1)=3  (17,2)=3  (17,3)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,0)=3  (18,1)=3  (18,2)=3  (18,3)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
   (1214.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (8,6) and color cyan and mask .x....|.x....|.x....|.x....|xxxxxx|.x....|.x....|.x.... at (0,18)
diff: 
delta: (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (4,8) and color cyan and mask ....x...|xxxxxxxx|....x...|....x... at (8,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24
>> Trial 3
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (9,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (8,4)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24

TRAIN 83302e8f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (1,29) and color blue and mask Full at (11,0)
diff: 
delta: (9,5)=1  (10,5)=1  (11,8)=0  (11,24)=0  (12,5)=1  (17,26)=1  (17,27)=1  (17,28)=1 
   (1133.1 bits)
data: a background with size (29,29) and color green and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (17,23) and color yellow and mask xxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxx|xxxxx.xxxxxxxxxxxxxxxxx|xxxxx.xxxxxxxxxxxxxxxxx|........xxxxxxxxxxxxxxx|xxxxx.xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....xxxxxxxxxxxx|.....x.....xxxxxxxxxxxx|.....x.....xxxxxxxxxxxx|.....x.....xxxxxxxxxxxx|.....x.....xxxxxxxxxxxx at (6,0)
  _01100: a rectangle with size (11,5) and color yellow and mask Full at (18,0)
  _0110: a rectangle with size (1,29) and color blue and mask Full at (11,0)
  _011: a rectangle with size (17,5) and color yellow and mask Full at (6,24)
diff: 
delta: (9,5)=1  (10,5)=1  (11,24)=4  (12,5)=1  (17,26)=1  (17,27)=1  (17,28)=1 
   (733.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (1,29) and color blue and mask Full at (11,0)
diff: 
delta: (9,5)=1  (10,5)=1  (11,8)=0  (11,24)=0  (12,5)=1  (17,26)=1  (17,27)=1  (17,28)=1 
! size mismatch, 10x10 instead of 29x29
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (1,29) and color blue and mask Full at (11,0)
  _01: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
diff: 
delta: (9,5)=1  (10,5)=1  (11,8)=0  (11,24)=0  (12,5)=1  (17,26)=1  (17,27)=1  (17,28)=1 
! size mismatch, 10x10 instead of 29x29
>> Trial 3
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (4,8) and color blue and mask .....x..|.....x..|xxxxxxxx|.....x.. at (9,0)
diff: 
delta: (11,25)=1  (11,26)=1  (11,27)=1  (11,28)=1  (17,26)=1  (17,27)=1  (17,28)=1 
! size mismatch, 10x10 instead of 29x29

TRAIN 83302e8f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
   (648.6 bits)
data: a background with size (19,19) and color green and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (4,19) and color yellow and mask Full at (15,0)
  _01100: a rectangle with size (9,4) and color yellow and mask Full at (5,10)
  _0110: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
  _011: a rectangle with size (9,14) and color yellow and mask Full at (0,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (10,15)=4  (10,16)=4  (10,17)=4  (10,18)=4  (11,15)=4  (11,16)=4  (11,17)=4  (11,18)=4  (12,15)=4  (12,16)=4  (12,17)=4  (12,18)=4  (13,15)=4  (13,16)=4  (13,17)=4  (13,18)=4  (14,18)=4  (15,14)=4  (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
   (717.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (1,7) and color brown and mask Full at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (5,4)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (1,19) and color brown and mask Full at (4,0)
  _01: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|xxxxxxxxxxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (4,7)=0  (5,4)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19

TRAIN 83302e8f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (26,27) and color grey and mask ...........x...x...x...x...|...........x...x...x...x...|...........x...x...x...x...|........xxxxxxxxxxxxxxxxxx.|.......x...x...x...x...x...|...x...x...........x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxx.xxxxxxxxxxxxx|...x...x...x...x...x...x...|...x.......x...x...x...x...|...x...x...x...x...x...x...|xxxxx..xxx.x.xxxxxxxxxxxxxx|.......x.......x.......x...|.......x...x...x...x...x...|...x...x...x...x...x...x...|...xxxxxxxxxxxxxxxxxx.xxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x.......x...x...x...|xxxxxxxxxxxxxxxxxxxxxx.xxxx|...x...x...x...........x...|...x...x...x...............|...x...x.......x...........|xxxxx.xxxxxxxxxxxx.........|...x...x.......x...........|.......x.......x........... at (0,0)
  _01: a rectangle with size (6,8) and color grey and mask x.......|x.......|xxxxxxxx|x...x...|x...x...|x...x... at (21,19)
diff: 
delta: (0,3)=5# (0,7)=5# (1,3)=5# (1,7)=5# (2,3)=5# (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (15,0)=5# (15,1)=5# (25,11)=5# (26,3)=5# (26,11)=5#
! size mismatch, 10x10 instead of 27x27
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (26,27) and color grey and mask ...........x...x...x...x...|...........x...x...x...x...|...........x...x...x...x...|........xxxxxxxxxxxxxxxxxx.|.......x...x...x...x...x...|...x...x...........x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxx.xxxxxxxxxxxxx|...x...x...x...x...x...x...|...x.......x...x...x...x...|...x...x...x...x...x...x...|xxxxx..xxx.x.xxxxxxxxxxxxxx|.......x.......x.......x...|.......x...x...x...x...x...|...x...x...x...x...x...x...|...xxxxxxxxxxxxxxxxxx.xxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x.......x...x...x...|xxxxxxxxxxxxxxxxxxxxxx.xxxx|...x...x...x...........x...|...x...x...x...............|...x...x.......x...........|xxxxx.xxxxxxxxxxxx.........|...x...x.......x...........|.......x.......x........... at (0,0)
  _01: a rectangle with size (1,8) and color grey and mask Full at (23,19)
diff: 
delta: (0,3)=5# (0,7)=5# (1,3)=5# (1,7)=5# (2,3)=5# (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (15,0)=5# (15,1)=5# (21,19)=5# (22,19)=5# (24,19)=5# (24,23)=5# (25,11)=5# (25,19)=5# (25,23)=5# (26,3)=5# (26,11)=5# (26,19)=5# (26,23)=5#
! size mismatch, 10x10 instead of 27x27
>> Trial 3
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (26,27) and color grey and mask ...........x...x...x...x...|...........x...x...x...x...|...........x...x...x...x...|........xxxxxxxxxxxxxxxxxx.|.......x...x...x...x...x...|...x...x...........x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxx.xxxxxxxxxxxxx|...x...x...x...x...x...x...|...x.......x...x...x...x...|...x...x...x...x...x...x...|xxxxx..xxx.x.xxxxxxxxxxxxxx|.......x.......x.......x...|.......x...x...x...x...x...|...x...x...x...x...x...x...|...xxxxxxxxxxxxxxxxxx.xxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x.......x...x...x...|xxxxxxxxxxxxxxxxxxxxxx.xxxx|...x...x...x...........x...|...x...x...x...............|...x...x.......x...........|xxxxx.xxxxxxxxxxxx.........|...x...x.......x...........|.......x.......x........... at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask ...x..|...x..|...x..|xxxxxx at (0,0)
diff: 
delta: (0,7)=5# (1,7)=5# (15,0)=5# (15,1)=5# (21,19)=5# (22,19)=5# (23,19)=5# (23,20)=5# (23,21)=5# (23,22)=5# (23,23)=5# (23,24)=5# (23,25)=5# (23,26)=5# (24,19)=5# (24,23)=5# (25,11)=5# (25,19)=5# (25,23)=5# (26,3)=5# (26,11)=5# (26,19)=5# (26,23)=5#
! size mismatch, 10x10 instead of 27x27

TEST 83302e8f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.6 sec (28.6 sec/task)
bits-train-error = 26657.6 bits (26657.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-202] Checking task 834ec97d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1074.9 = 1083.9
DL output with Mo: L = 9.0 + 7534.2 = 7543.2
DL input+output M: L = 17.9 + 8609.2 = 8627.1

# learning a model for train pairs
2.000	
1.856	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.741	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.623	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.562	OUT DEF: ^.size=^.size
1.520	IN  DEF: ^.color=black
1.487	IN  DEF: ^.size=(?,?)
1.455	IN  DEF: ^.layer_0.pos=(?,?)
1.437	OUT DEF: ^.layer_0.shape.color=yellow
1.427	OUT DEF: ^.layer_0.shape.mask=Full
1.418	OUT DEF: ^.layer_01.shape.mask=Full
1.412	OUT DEF: ^.color=black
1.407	OUT DEF: ^.layer_0.pos=(?,?)
1.393	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
1.378	OUT DEF: ^.layer_0.pos.i=(0)
1.373	OUT DEF: ^.layer_0.shape.size=(?,?)
1.355	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.i + 1
1.346	OUT DEF: ^.layer_0.shape.size.j=1
1.341	OUT DEF: ^.layer_01.pos=(?,?)
1.327	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.i + ^.layer_0.pos.j
1.323	OUT DEF: ^.layer_01.shape.size=(?,?)
1.304	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.pos.i + 1
1.295	OUT DEF: ^.layer_01.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.pos.i + 1,1) and color yellow and mask Full at ((0),^.layer_0.pos.j)
  _01: a rectangle with size (^.layer_0.pos.i + 1,1) and color ? and mask Full at (?,^.layer_0.pos.i + ^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 782.6 = 812.2
DL output with Mo: L = 86.5 + 4028.8 = 4115.3
DL input+output M: L = 116.2 + 4811.3 = 4927.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta:
   (21.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 834ec97d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (2,2)
diff: 
delta:
   (25.9 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,4)
diff: 
delta: (0,0)=4  (1,0)=4  (2,0)=4  (3,2)=6 
   (80.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (2,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 834ec97d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color brown at (4,2)
diff: 
delta:
   (31.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (0,6)
diff: 
delta: (0,0)=4  (0,4)=4  (0,8)=4  (1,0)=4  (1,4)=4  (1,8)=4  (2,0)=4  (2,4)=4  (2,8)=4  (3,0)=4  (3,4)=4  (3,8)=4  (4,0)=4  (4,4)=4  (4,8)=4  (5,2)=9#
   (314.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color brown at (4,2)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 834ec97d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (3,5)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TEST 834ec97d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 4028.8 bits (4028.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-201] Checking task 8403a5d5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1248.3 = 1257.2
DL output with Mo: L = 9.0 + 22734.5 = 22743.4
DL input+output M: L = 17.9 + 23982.7 = 24000.7

# learning a model for train pairs
2.000	
1.761	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.574	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.383	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.259	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.200	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.140	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?

DL input  with Mi: L = 22.3 + 1078.9 = 1101.2
DL output with Mo: L = 103.8 + 5894.7 = 5998.4
DL input+output M: L = 126.0 + 6973.6 = 7099.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (9,1)
diff: 
delta:
   (36.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (0,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,5)
  _0111: a rectangle with size (10,1) and color red and mask Full at (0,7)
  _01111: a rectangle with size (10,1) and color red and mask Full at (0,9)
diff: 
delta: (0,2)=5# (0,6)=5# (9,4)=5# (9,8)=5#
   (251.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (9,1)
diff: 
delta:
! 56 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (9,5)
diff: 
delta:
   (36.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,7)
  _011: a rectangle with size (10,1) and color green and mask Full at (0,9)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,6)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (9,8)
diff: 
delta:
   (158.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (9,5)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (9,4)
diff: 
delta:
   (36.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color yellow and mask Full at (0,4)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,6)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,5)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta: (9,7)=5#
   (179.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (9,4)
diff: 
delta:
! 37 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (9,2)
diff: 
delta:
! 48 wrong pixels (generated / expected)

TEST 8403a5d5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.8 sec (19.8 sec/task)
bits-train-error = 5894.7 bits (5894.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-200] Checking task 846bdb03.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 18739.4 = 18748.4
DL output with Mo: L = 9.0 + 16753.4 = 16762.4
DL input+output M: L = 17.9 + 35492.9 = 35510.8

# learning a model for train pairs
2.000	
1.678	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.427	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.240	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.121	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.033	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.943	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.874	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.850	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 9125.7 = 9229.5
DL output with Mo: L = 66.8 + 5925.0 = 5991.8
DL input+output M: L = 170.6 + 15050.7 = 15221.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
diff: 
delta: (7,12)=4  (12,12)=4 
   (235.3 bits)
data: a background with size (6,8) and color yellow and layers
  _0: a rectangle with size (4,4) and color red and mask xxx.|x.x.|x.xx|x..x at (1,0)
  _01: a rectangle with size (4,4) and color blue and mask x..x|xxxx|x..x|...x at (1,4)
  _011: a rectangle with size (6,6) and color black and mask Full at (0,1)
diff: 
delta:
   (152.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
diff: 
delta: (7,12)=4  (12,12)=4 
! size mismatch, 10x10 instead of 6x8

TRAIN 846bdb03.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (5,1) and color green and mask Full at (7,8)
  _01111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
diff: 
delta: (6,8)=4  (12,8)=4 
   (244.6 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask xx.x|xxxx|xx.x|xxxx|xx.x at (1,0)
  _01: a rectangle with size (5,4) and color green and mask .x.x|xxxx|.x.x|xx.x|...x at (1,4)
  _011: a rectangle with size (7,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,7)=4  (6,7)=4 
   (190.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (5,1) and color green and mask Full at (7,8)
  _01111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
diff: 
delta: (6,8)=4  (12,8)=4 
! size mismatch, 10x10 instead of 7x8

TRAIN 846bdb03.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
  _01111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
diff: 
delta: (1,7)=4  (4,7)=4 
   (211.7 bits)
data: a background with size (4,6) and color yellow and layers
  _0: a rectangle with size (2,3) and color red and mask x.x|xxx at (1,0)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (1,3)
  _011: a rectangle with size (4,4) and color black and mask Full at (0,1)
diff: 
delta:
   (119.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
  _01111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
diff: 
delta: (1,7)=4  (4,7)=4 
! size mismatch, 10x10 instead of 4x6

TRAIN 846bdb03.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (3,1) and color green and mask Full at (2,10)
  _01111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
diff: 
delta: (1,10)=4  (5,10)=4 
   (221.0 bits)
data: a background with size (5,6) and color yellow and layers
  _0: a rectangle with size (3,3) and color orange and mask xxx|xxx|x.x at (1,0)
  _01: a rectangle with size (3,3) and color green and mask .xx|xxx|.xx at (1,3)
  _011: a rectangle with size (5,4) and color black and mask Full at (0,1)
diff: 
delta:
   (130.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (3,1) and color green and mask Full at (2,10)
  _01111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
diff: 
delta: (1,10)=4  (5,10)=4 
! size mismatch, 10x10 instead of 5x6

TRAIN 846bdb03.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask x.x|xxx|x..|x.. at (9,1)
  _01: a rectangle with size (4,3) and color red and mask x..|xxx|.x.|.xx at (9,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (2,1)
  _0111: a rectangle with size (4,1) and color cyan and mask Full at (2,8)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (1,1)
diff: 
delta: (1,8)=4  (6,8)=4 
! size mismatch, 10x10 instead of 6x8

TEST 846bdb03.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 5925.0 bits (5925.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-199] Checking task 855e0971.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 96774.3 = 96783.3
DL output with Mo: L = 9.0 + 103405.7 = 103414.7
DL input+output M: L = 17.9 + 200180.1 = 200198.0

# learning a model for train pairs
2.000	
1.342	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.758	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.482	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.215	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.181	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.152	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.134	OUT OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
0.126	OUT DEF: ^.size=^.size
0.122	OUT DEF: ^.layer_0=^.layer_0
0.117	OUT DEF: ^.layer_01.shape.color=black
0.112	OUT DEF: ^.layer_011=^.layer_01
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _001: a rectangle with size ? and color ? and mask ? at ?
  _0: ^.layer_0
  _01: a rectangle with size ? and color black and mask ? at ?
  _011: ^.layer_01
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 6624.8 = 6672.8
DL output with Mo: L = 76.1 + 4414.7 = 4490.8
DL input+output M: L = 124.1 + 11039.5 = 11163.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,19) and color yellow and layers
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (3,13)=0  (5,4)=0  (12,9)=0 
   (169.7 bits)
data: a background with size (15,19) and color yellow and layers
  _00: a rectangle with size (7,1) and color black and mask Full at (2,4)
  _001: a rectangle with size (6,1) and color black and mask Full at (9,9)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (7,1) and color black and mask Full at (2,13)
  _011: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta:
   (94.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color yellow and layers
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (3,13)=0  (5,4)=0  (12,9)=0 
! 129 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,19) and color cyan and layers
  _0: a rectangle with size (7,19) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (3,13)=0  (5,4)=0  (12,9)=0 
! 126 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,19) and color grey and layers
  _0: a rectangle with size (7,19) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
diff: 
delta: (3,13)=0  (5,4)=0  (12,9)=0 
! 58 wrong pixels (generated / expected)

TRAIN 855e0971.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,13) and color blue and layers
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (12,5)
diff: 
delta: (3,2)=0  (11,8)=0 
   (140.7 bits)
data: a background with size (14,13) and color brown and layers
  _00: a rectangle with size (11,8) and color blue and mask Full at (0,5)
  _001: a rectangle with size (1,5) and color black and mask Full at (3,0)
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,8) and color black and mask Full at (11,5)
  _011: a rectangle with size (2,8) and color blue and mask Full at (12,5)
diff: 
delta:
   (100.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color blue and layers
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color black and mask Full at (11,8)
diff: 
delta: (3,2)=0 
! 113 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,13) and color red and layers
  _0: a rectangle with size (14,8) and color blue and mask Full at (0,5)
  _01: a rectangle with size (1,1) and color black and mask Full at (3,2)
diff: 
delta: (11,8)=0 
! 73 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,13) and color blue and layers
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (12,5)
diff: 
delta: (3,2)=0  (11,8)=0 
! 97 wrong pixels (generated / expected)

TRAIN 855e0971.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,15) and color red and layers
  _0: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,15) and color green and mask Full at (10,0)
diff: 
delta: (2,3)=0  (3,11)=0  (7,5)=0  (11,7)=0 
   (185.7 bits)
data: a background with size (13,15) and color red and layers
  _00: a rectangle with size (5,1) and color black and mask Full at (0,3)
  _001: a rectangle with size (5,1) and color black and mask Full at (0,11)
  _0: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (5,1) and color black and mask Full at (5,5)
  _011: a rectangle with size (3,15) and color green and mask Full at (10,0)
diff: 
delta: (10,7)=0  (11,7)=0  (12,7)=0 
   (154.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color cyan and layers
  _0: a rectangle with size (5,15) and color red and mask Full at (5,0)
  _01: a rectangle with size (3,15) and color green and mask Full at (10,0)
diff: 
delta: (2,3)=0  (3,11)=0  (7,5)=0  (11,7)=0 
! 73 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color red and layers
  _0: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,15) and color green and mask Full at (10,0)
diff: 
delta: (2,3)=0  (3,11)=0  (7,5)=0  (11,7)=0 
! 87 wrong pixels (generated / expected)

TRAIN 855e0971.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,15) and color yellow and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (2,12)=0  (6,6)=0  (12,10)=0 
   (166.4 bits)
data: a background with size (14,15) and color yellow and layers
  _00: a rectangle with size (1,6) and color black and mask Full at (2,9)
  _001: a rectangle with size (1,5) and color black and mask Full at (6,4)
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (1,6) and color black and mask Full at (12,9)
  _011: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta:
   (92.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color yellow and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (2,12)=0  (6,6)=0  (12,10)=0 
! 81 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color grey and layers
  _0: a rectangle with size (14,6) and color yellow and mask Full at (0,9)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (2,12)=0  (6,6)=0  (12,10)=0 
! 81 wrong pixels (generated / expected)

TRAIN 855e0971.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color yellow and layers
  _0: a rectangle with size (4,15) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,15) and color red and mask Full at (13,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,4)=0  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=0  (2,13)=8  (2,14)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (6,6)=0  (10,10)=0  (15,1)=0 
! 130 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,15) and color red and layers
  _0: a rectangle with size (5,15) and color yellow and mask Full at (8,0)
  _01: a rectangle with size (4,15) and color blue and mask Full at (4,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,4)=0  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=0  (2,13)=8  (2,14)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (6,6)=0  (10,10)=0  (15,1)=0 
! 117 wrong pixels (generated / expected)

TEST 855e0971.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.6 sec (23.6 sec/task)
bits-train-error = 4414.7 bits (4414.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-198] Checking task 85c4e7cd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 42373.2 = 42382.2
DL output with Mo: L = 9.0 + 42373.2 = 42382.2
DL input+output M: L = 17.9 + 84746.4 = 84764.4

# learning a model for train pairs
2.000	
1.606	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.213	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.954	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.695	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.563	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.431	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.387	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 9071.9 = 9138.7
DL output with Mo: L = 85.3 + 7175.0 = 7260.3
DL input+output M: L = 152.1 + 16246.9 = 16399.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color red and layers
  _0: a rectangle with size (12,12) and color yellow and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color green and mask Full at (3,3)
  _011: a rectangle with size (8,8) and color blue and mask Full at (2,2)
diff: 
delta: (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5#
   (458.4 bits)
data: a background with size (12,12) and color green and layers
  _0: a rectangle with size (12,12) and color cyan and mask Border at (0,0)
  _01: a rectangle with size (10,10) and color grey and mask Border at (1,1)
  _011: a rectangle with size (6,6) and color blue and mask Border at (3,3)
  _0111: a rectangle with size (4,4) and color red and mask Full at (4,4)
diff: 
delta: (5,5)=4  (5,6)=4  (6,5)=4  (6,6)=4 
   (259.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color red and layers
  _0: a rectangle with size (12,12) and color yellow and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color green and mask Full at (3,3)
  _011: a rectangle with size (8,8) and color blue and mask Full at (2,2)
diff: 
delta: (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5#
! size mismatch, 10x10 instead of 12x12

TRAIN 85c4e7cd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (6,6) and color red and mask Border at (0,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color pink and mask Full at (2,2)
diff: 
delta:
   (111.1 bits)
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (6,6) and color pink and mask Border at (0,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,4) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (2,2)
diff: 
delta:
   (137.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (6,6) and color red and mask Border at (0,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color pink and mask Full at (2,2)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 85c4e7cd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (8,8) and color cyan and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color blue and mask Border at (1,1)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (3,3)
diff: 
delta:
   (125.6 bits)
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color yellow and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color red and mask Border at (1,1)
  _011: a rectangle with size (1,4) and color blue and mask Full at (2,2)
  _0111: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
diff: 
delta:
   (152.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (8,8) and color cyan and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color blue and mask Border at (1,1)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 8x8

TRAIN 85c4e7cd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,10) and color orange and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color blue and mask Full at (3,3)
  _011: a rectangle with size (6,6) and color yellow and mask Full at (2,2)
diff: 
delta: (4,4)=3  (4,5)=3  (5,4)=3  (5,5)=3 
   (212.0 bits)
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,10) and color green and mask Border at (0,0)
  _01: a rectangle with size (8,8) and color blue and mask Border at (1,1)
  _011: a rectangle with size (6,6) and color yellow and mask Border at (2,2)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (4,4)
diff: 
delta:
   (168.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,10) and color orange and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color blue and mask Full at (3,3)
  _011: a rectangle with size (6,6) and color yellow and mask Full at (2,2)
diff: 
delta: (4,4)=3  (4,5)=3  (5,4)=3  (5,5)=3 
! 100 wrong pixels (generated / expected)

TRAIN 85c4e7cd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color cyan and layers
  _0: a rectangle with size (12,12) and color red and mask Border at (1,1)
  _01: a rectangle with size (8,8) and color green and mask Border at (3,3)
  _011: a rectangle with size (10,10) and color yellow and mask Full at (2,2)
diff: 
delta: (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7# (4,8)=7# (4,9)=7# (5,4)=7# (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (5,9)=7# (6,4)=7# (6,5)=6  (6,6)=5# (6,7)=5# (6,8)=6  (6,9)=7# (7,4)=7# (7,5)=6  (7,6)=5# (7,7)=5# (7,8)=6  (7,9)=7# (8,4)=7# (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (8,9)=7# (9,4)=7# (9,5)=7# (9,6)=7# (9,7)=7# (9,8)=7# (9,9)=7#
! size mismatch, 10x10 instead of 14x14

TEST 85c4e7cd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.8 sec (26.8 sec/task)
bits-train-error = 7175.0 bits (7175.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-197] Checking task 868de0fa.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 50376.3 = 50385.3
DL output with Mo: L = 9.0 + 86022.7 = 86031.7
DL input+output M: L = 17.9 + 136399.1 = 136417.0

# learning a model for train pairs
2.000	
1.598	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.338	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.084	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.875	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.720	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.609	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.525	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.474	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
0.446	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.408	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.384	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.361	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
0.350	OUT DEF: ^.size=^.size
0.338	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _0: ^.layer_0.shape at ?
  _010: ^.layer_010.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_01.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 9830.8 = 9934.6
DL output with Mo: L = 133.2 + 11957.8 = 12091.0
DL input+output M: L = 237.0 + 21788.6 = 22025.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (2,6)
  _011: a rectangle with size (1,1) and color black and mask Full at (3,7)
  _0111: a rectangle with size (2,2) and color black and mask Full at (1,1)
diff: 
delta:
   (173.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,5) and color blue and mask Full at (5,0)
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,6)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (6,1)
  _01111: a rectangle with size (2,2) and color red and mask Full at (1,1)
  _011111: a rectangle with size (1,1) and color orange and mask Full at (3,7)
diff: 
delta:
   (169.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,6)
  _0111: a rectangle with size (1,1) and color black and mask Full at (3,7)
diff: 
delta:
! 50 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Border at (2,6)
  _011: a rectangle with size (1,1) and color black and mask Full at (3,7)
  _0111: a rectangle with size (2,2) and color black and mask Full at (1,1)
diff: 
delta:
! 50 wrong pixels (generated / expected)

TRAIN 868de0fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (163.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,6) and color blue and mask Full at (0,4)
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,5)
  _011: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
  _01111: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _011111: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (170.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN 868de0fa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _010: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _01: a rectangle with size (6,6) and color blue and mask Border at (3,12)
  _011: a rectangle with size (4,4) and color blue and mask Border at (1,6)
  _0111: a rectangle with size (5,5) and color blue and mask Border at (0,0)
diff: 
delta:
   (214.9 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (5,5) and color blue and mask Full at (0,0)
  _0: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _010: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _01: a rectangle with size (6,6) and color red and mask Full at (13,13)
  _011: a rectangle with size (6,6) and color blue and mask Border at (3,12)
  _0111: a rectangle with size (5,5) and color orange and mask Full at (10,3)
  _01111: a rectangle with size (4,4) and color red and mask Full at (4,13)
  _011111: a rectangle with size (4,4) and color blue and mask Full at (1,6)
diff: 
delta: (1,1)=7# (1,2)=7# (1,3)=7# (2,1)=7# (2,2)=7# (2,3)=7# (2,7)=2  (2,8)=2  (3,1)=7# (3,2)=7# (3,3)=7# (3,7)=2  (3,8)=2 
   (491.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _010: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _01: a rectangle with size (6,6) and color blue and mask Border at (3,12)
  _011: a rectangle with size (4,4) and color blue and mask Border at (1,6)
  _0111: a rectangle with size (5,5) and color blue and mask Border at (0,0)
diff: 
delta:
! 209 wrong pixels (generated / expected)

TRAIN 868de0fa.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _010: a rectangle with size (1,3) and color blue and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color blue and mask Border at (1,1)
  _011: a rectangle with size (2,2) and color black and mask Full at (3,6)
  _0111: a rectangle with size (1,1) and color black and mask Full at (2,2)
diff: 
delta:
   (250.6 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,5) and color blue and mask Full at (6,0)
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _010: a rectangle with size (1,3) and color blue and mask Full at (1,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (3,1)
  _011: a rectangle with size (3,3) and color blue and mask Border at (1,1)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (7,1)
  _01111: a rectangle with size (2,2) and color red and mask Full at (3,6)
  _011111: a rectangle with size (1,1) and color orange and mask Full at (2,2)
diff: 
delta:
   (171.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _010: a rectangle with size (1,3) and color blue and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color blue and mask Border at (1,1)
  _011: a rectangle with size (2,2) and color black and mask Full at (3,6)
  _0111: a rectangle with size (1,1) and color black and mask Full at (2,2)
diff: 
delta:
! 56 wrong pixels (generated / expected)

TRAIN 868de0fa.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _010: a rectangle with size (1,6) and color blue and mask Full at (9,6)
  _01: a rectangle with size (1,6) and color blue and mask Full at (14,6)
  _011: a rectangle with size (6,1) and color blue and mask Full at (9,6)
  _0111: a rectangle with size (6,1) and color blue and mask Full at (9,11)
diff: 
delta:
   (180.8 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (1,7) and color blue and mask Full at (1,1)
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _010: a rectangle with size (1,6) and color blue and mask Full at (9,6)
  _01: a rectangle with size (4,4) and color red and mask Full at (10,7)
  _011: a rectangle with size (1,6) and color blue and mask Full at (14,6)
  _0111: a rectangle with size (5,5) and color orange and mask Full at (2,2)
  _01111: a rectangle with size (6,1) and color blue and mask Full at (9,6)
  _011111: a rectangle with size (6,1) and color blue and mask Full at (9,11)
diff: 
delta:
   (193.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _010: a rectangle with size (1,6) and color blue and mask Full at (9,6)
  _01: a rectangle with size (1,6) and color blue and mask Full at (14,6)
  _011: a rectangle with size (6,1) and color blue and mask Full at (9,6)
  _0111: a rectangle with size (6,1) and color blue and mask Full at (9,11)
diff: 
delta:
! 96 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (9,6)
  _010: a rectangle with size (1,7) and color blue and mask Full at (1,1)
  _01: a rectangle with size (1,7) and color blue and mask Full at (7,1)
  _011: a rectangle with size (7,1) and color blue and mask Full at (1,1)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (1,7)
diff: 
delta:
! 95 wrong pixels (generated / expected)

TRAIN 868de0fa.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask Border at (7,10)
  _010: a rectangle with size (8,8) and color blue and mask Border at (2,1)
  _01: a rectangle with size (7,7) and color blue and mask Border at (11,1)
  _011: a rectangle with size (1,5) and color blue and mask Full at (0,12)
  _0111: a rectangle with size (5,5) and color blue and mask Border at (0,12)
diff: 
delta:
! 257 wrong pixels (generated / expected)

TEST 868de0fa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.3 sec (24.3 sec/task)
bits-train-error = 11957.8 bits (11957.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-196] Checking task 8731374e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 207619.0 = 207627.9
DL output with Mo: L = 9.0 + 14761.1 = 14770.0
DL input+output M: L = 17.9 + 222380.0 = 222398.0

# learning a model for train pairs
2.000	
1.247	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.231	OUT DEF: ^.color=^.color
1.225	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.223	OUT DEF: ^.size=(?,?)
1.221	OUT DEF: ^.layer_0.pos=(?,?)
1.212	OUT DEF: ^.layer_0.pos.j=(0)
1.203	OUT DEF: ^.layer_0.pos.i=(0)
1.201	OUT DEF: ^.layer_0.shape.size=(?,?)
1.201	IN  DEF: ^.size=(?,?)
1.201	IN  DEF: ^.layer_0.pos=(?,?)
1.201	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 42.8 + 206335.5 = 206378.4
DL output with Mo: L = 42.7 + 3008.5 = 3051.2
DL input+output M: L = 85.5 + 209344.0 = 209429.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,23) and color blue and layers
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
diff: 
delta: (0,0)=6  (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,12)=6  (1,13)=6  (1,14)=6  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,12)=6  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,15)=8  (4,16)=4  (4,17)=6  (4,18)=8  (4,19)=8  (4,20)=9# (4,21)=8  (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,12)=4  (12,13)=7# (12,14)=6  (12,15)=4  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,8)=8  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,13)=4  (13,14)=4  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,7)=8  (14,9)=8  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,8)=8  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
   (6411.0 bits)
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (7,6) and color red and mask .x..x.|.x..x.|xxxxxx|.x..x.|xxxxxx|.x..x.|.x..x. at (0,0)
diff: 
delta:
   (80.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,23) and color blue and layers
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
diff: 
delta: (0,0)=6  (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,12)=6  (1,13)=6  (1,14)=6  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,12)=6  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,15)=8  (4,16)=4  (4,17)=6  (4,18)=8  (4,19)=8  (4,20)=9# (4,21)=8  (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,12)=4  (12,13)=7# (12,14)=6  (12,15)=4  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,8)=8  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,13)=4  (13,14)=4  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,7)=8  (14,9)=8  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,8)=8  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
! size mismatch, 10x10 instead of 7x6
>> Trial 2
data: a background with size (17,23) and color pink and layers
  _0: a rectangle with size (9,7) and color blue and mask Full at (4,7)
diff: 
delta: (0,1)=1  (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,1)=0  (1,2)=1  (1,3)=0  (1,4)=4  (1,5)=8  (1,7)=1  (1,8)=1  (1,9)=2  (1,10)=1  (1,11)=2  (1,15)=5# (1,16)=8  (1,17)=7# (1,18)=4  (1,19)=1  (1,20)=7# (1,21)=5# (2,1)=8  (2,2)=3  (2,3)=1  (2,4)=9# (2,5)=8  (2,6)=7# (2,7)=1  (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,13)=2  (2,14)=1  (2,15)=0  (2,16)=5# (2,17)=7# (2,18)=7# (2,19)=7# (2,20)=8  (2,21)=1  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,7)=9# (3,8)=3  (3,9)=8  (3,11)=2  (3,12)=4  (3,13)=1  (3,14)=8  (3,15)=3  (3,16)=5# (3,17)=7# (3,18)=5# (3,19)=5# (3,21)=1  (4,0)=1  (4,1)=7# (4,3)=4  (4,4)=7# (4,5)=0  (4,6)=1  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,15)=8  (4,16)=4  (4,18)=8  (4,19)=8  (4,20)=9# (4,21)=8  (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,19)=1  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,5)=5# (6,7)=8  (6,14)=3  (6,15)=0  (6,16)=1  (6,17)=3  (6,18)=1  (6,20)=3  (6,21)=5# (6,22)=1  (7,0)=0  (7,1)=7# (7,2)=2  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,20)=1  (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,1)=1  (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (10,1)=8  (10,2)=2  (10,4)=8  (10,5)=4  (10,7)=7# (10,14)=8  (10,15)=2  (10,16)=1  (10,17)=7# (10,18)=9# (10,19)=1  (10,20)=2  (10,21)=9# (10,22)=1  (11,0)=1  (11,1)=1  (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,12)=4  (12,13)=7# (12,15)=4  (12,16)=1  (12,17)=1  (12,18)=8  (12,19)=5# (12,21)=2  (12,22)=2  (13,0)=1  (13,1)=1  (13,2)=4  (13,3)=7# (13,4)=9# (13,5)=1  (13,6)=5# (13,8)=8  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,13)=4  (13,14)=4  (13,15)=8  (13,17)=5# (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,4)=1  (14,5)=7# (14,6)=4  (14,7)=8  (14,8)=1  (14,9)=8  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,14)=1  (14,15)=8  (14,16)=5# (14,17)=3  (14,18)=1  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,4)=1  (15,5)=5# (15,6)=2  (15,7)=2  (15,8)=8  (15,10)=9# (15,11)=3  (15,12)=9# (15,15)=3  (15,17)=2  (15,18)=2  (15,20)=1  (15,21)=4  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,6)=1  (16,7)=3  (16,8)=2  (16,10)=5# (16,11)=0  (16,13)=1  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,18)=1  (16,19)=4  (16,20)=8  (16,21)=4  (16,22)=1 
! size mismatch, 10x10 instead of 7x6

TRAIN 8731374e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,23) and color yellow and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (12,9)
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,16)=8  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,15)=8  (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,15)=8  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,16)=8  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,16)=8  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,17)=8  (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,1)=6  (17,3)=6  (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,2)=6  (18,3)=6  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,4)=6  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,5)=6  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,9)=6  (21,10)=6  (21,11)=6  (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,12)=6  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,12)=6  (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
   (10265.1 bits)
data: a background with size (10,9) and color yellow and layers
  _0: a rectangle with size (10,9) and color blue and mask ..x.x.x..|..x.x.x..|xxxxxxxxx|..x.x.x..|..x.x.x..|xxxxxxxxx|..x.x.x..|xxxxxxxxx|..x.x.x..|..x.x.x.. at (0,0)
diff: 
delta:
   (133.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,23) and color yellow and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (12,9)
diff: 
delta: (0,0)=3  (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,16)=8  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,15)=8  (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,15)=8  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,16)=8  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,16)=8  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,17)=8  (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,1)=6  (17,3)=6  (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,2)=6  (18,3)=6  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,4)=6  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,5)=6  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,9)=6  (21,10)=6  (21,11)=6  (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,12)=6  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,12)=6  (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
! size mismatch, 10x10 instead of 10x9

TRAIN 8731374e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color cyan and layers
  _0: a rectangle with size (4,2) and color green and mask Full at (4,2)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,3)=5# (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,7)=0  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,6)=0  (9,7)=9# (9,8)=0  (9,9)=4  (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,4)=2  (10,5)=0  (10,7)=4  (10,8)=4  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,7)=4  (11,9)=4  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,3)=5# (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,1)=9# (13,2)=9# (13,3)=9# (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=2  (14,6)=2  (14,7)=4  (14,8)=0  (14,9)=9# (14,10)=2  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
   (3957.4 bits)
data: a background with size (6,8) and color cyan and layers
  _0: a rectangle with size (6,8) and color red and mask ...x....|...x....|...x....|xxxxxxxx|...x....|...x.... at (0,0)
diff: 
delta:
   (87.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color cyan and layers
  _0: a rectangle with size (4,2) and color green and mask Full at (4,2)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,3)=5# (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,7)=0  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,6)=0  (9,7)=9# (9,8)=0  (9,9)=4  (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,4)=2  (10,5)=0  (10,7)=4  (10,8)=4  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,7)=4  (11,9)=4  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,3)=5# (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,1)=9# (13,2)=9# (13,3)=9# (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=2  (14,6)=2  (14,7)=4  (14,8)=0  (14,9)=9# (14,10)=2  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
! size mismatch, 10x10 instead of 6x8

TRAIN 8731374e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color cyan and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|.x.|xxx at (12,7)
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,10)=1  (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,3)=7# (1,4)=0  (1,5)=7# (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,14)=5# (1,15)=3  (1,16)=2  (2,1)=7# (2,2)=9# (2,11)=7# (2,12)=6  (2,13)=1  (2,14)=5# (2,15)=2  (2,16)=1  (3,0)=6  (3,1)=9# (3,2)=3  (3,11)=7# (3,12)=7# (3,14)=1  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,13)=1  (4,14)=9# (4,15)=4  (4,16)=1  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,14)=7# (5,15)=9# (5,16)=5# (6,1)=4  (6,2)=4  (6,12)=7# (6,13)=1  (6,14)=7# (6,15)=3  (6,16)=7# (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,13)=1  (7,14)=1  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,12)=4  (8,13)=0  (8,14)=6  (8,15)=7# (8,16)=6  (9,0)=6  (9,1)=7# (9,2)=7# (9,11)=4  (9,12)=7# (9,13)=1  (9,14)=5# (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,11)=4  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,1)=7# (11,2)=7# (11,11)=4  (11,13)=7# (11,14)=7# (11,15)=1  (12,0)=6  (12,1)=6  (12,2)=4  (12,3)=7# (12,4)=6  (12,6)=1  (12,8)=1  (12,10)=2  (12,11)=6  (12,13)=7# (12,14)=2  (13,0)=7# (13,1)=3  (13,2)=5# (13,3)=1  (13,4)=4  (13,5)=1  (13,6)=6  (13,7)=4  (13,9)=6  (13,10)=7# (13,11)=7# (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,6)=3  (14,10)=5# (14,11)=9# (14,12)=6  (14,13)=1  (14,14)=4  (14,15)=6  (14,16)=9# (15,0)=6  (15,1)=1  (15,2)=9# (15,3)=6  (15,4)=3  (15,5)=1  (15,6)=6  (15,7)=6  (15,9)=6  (15,10)=0  (15,11)=1  (15,12)=3  (15,13)=4  (15,15)=7# (15,16)=7# (16,0)=2  (16,1)=1  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,6)=1  (16,7)=5# (16,8)=1  (16,9)=7# (16,10)=0  (16,11)=7# (16,12)=9# (16,13)=3  (16,15)=2  (16,16)=1  (17,0)=7# (17,1)=1  (17,2)=9# (17,3)=4  (17,4)=2  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,11)=0  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,0)=1  (18,1)=2  (18,2)=5# (18,3)=7# (18,5)=7# (18,6)=1  (18,7)=6  (18,8)=5# (18,10)=0  (18,11)=9# (18,12)=2  (18,14)=9# (18,15)=1  (18,16)=5#
! size mismatch, 10x10 instead of 10x8
>> Trial 2
data: a background with size (19,17) and color orange and layers
  _0: a rectangle with size (12,10) and color cyan and mask x.........|.xxxxxxxx.|.xxxxxxxx.|.xxxxxx.x.|.xxxxxxxxx|.xxxxxxxxx|.xx.xxxxx.|.xxxxxxxx.|.xxxxxxxx.|.xxxxxxxx.|.xxxxxxxx.|...x.x.... at (1,2)
diff: 
delta: (0,0)=2  (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,10)=1  (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,4)=0  (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,13)=8  (1,14)=5# (1,15)=3  (1,16)=2  (2,0)=8  (2,2)=9# (2,12)=6  (2,13)=1  (2,14)=5# (2,15)=2  (2,16)=1  (3,0)=6  (3,1)=9# (3,2)=3  (3,13)=8  (3,14)=1  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,13)=1  (4,14)=9# (4,15)=4  (4,16)=1  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,15)=9# (5,16)=5# (6,0)=8  (6,1)=4  (6,2)=4  (6,13)=1  (6,15)=3  (7,0)=8  (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,13)=1  (7,14)=1  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,12)=4  (8,13)=0  (8,14)=6  (8,16)=6  (9,0)=6  (9,11)=4  (9,13)=1  (9,14)=5# (9,15)=8  (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,11)=4  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,11)=4  (11,12)=8  (11,15)=1  (11,16)=8  (12,0)=6  (12,1)=6  (12,2)=4  (12,4)=6  (12,6)=1  (12,8)=1  (12,9)=9# (12,10)=2  (12,11)=6  (12,12)=8  (12,14)=2  (12,15)=8  (12,16)=8  (13,1)=3  (13,2)=5# (13,3)=1  (13,4)=4  (13,5)=1  (13,6)=6  (13,7)=4  (13,8)=9# (13,9)=6  (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=8  (14,6)=3  (14,7)=9# (14,8)=9# (14,9)=9# (14,10)=5# (14,11)=9# (14,12)=6  (14,13)=1  (14,14)=4  (14,15)=6  (14,16)=9# (15,0)=6  (15,1)=1  (15,2)=9# (15,3)=6  (15,4)=3  (15,5)=1  (15,6)=6  (15,7)=6  (15,8)=8  (15,9)=6  (15,10)=0  (15,11)=1  (15,12)=3  (15,13)=4  (15,14)=8  (16,0)=2  (16,1)=1  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,6)=1  (16,7)=5# (16,8)=1  (16,10)=0  (16,12)=9# (16,13)=3  (16,14)=8  (16,15)=2  (16,16)=1  (17,1)=1  (17,2)=9# (17,3)=4  (17,4)=2  (17,5)=8  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,10)=8  (17,11)=0  (17,12)=8  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,0)=1  (18,1)=2  (18,2)=5# (18,4)=8  (18,6)=1  (18,7)=6  (18,8)=5# (18,9)=8  (18,10)=0  (18,11)=9# (18,12)=2  (18,13)=8  (18,14)=9# (18,15)=1  (18,16)=5#
! size mismatch, 10x10 instead of 10x8
>> Trial 3
data: a background with size (19,17) and color blue and layers
  _0: a rectangle with size (12,10) and color cyan and mask Full at (1,2)
diff: 
delta: (0,0)=2  (0,1)=7# (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,3)=7# (1,4)=0  (1,5)=7# (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,13)=8  (1,14)=5# (1,15)=3  (1,16)=2  (2,0)=8  (2,1)=7# (2,2)=9# (2,11)=7# (2,12)=6  (2,14)=5# (2,15)=2  (3,0)=6  (3,1)=9# (3,2)=3  (3,11)=7# (3,12)=7# (3,13)=8  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,14)=9# (4,15)=4  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,14)=7# (5,15)=9# (5,16)=5# (6,0)=8  (6,1)=4  (6,2)=4  (6,12)=7# (6,14)=7# (6,15)=3  (6,16)=7# (7,0)=8  (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,12)=4  (8,13)=0  (8,14)=6  (8,15)=7# (8,16)=6  (9,0)=6  (9,1)=7# (9,2)=7# (9,11)=4  (9,12)=7# (9,14)=5# (9,15)=8  (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,11)=4  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,1)=7# (11,2)=7# (11,11)=4  (11,12)=8  (11,13)=7# (11,14)=7# (11,16)=8  (12,0)=6  (12,1)=6  (12,2)=4  (12,3)=7# (12,4)=6  (12,6)=1  (12,8)=1  (12,9)=9# (12,10)=2  (12,11)=6  (12,12)=8  (12,13)=7# (12,14)=2  (12,15)=8  (12,16)=8  (13,0)=7# (13,1)=3  (13,2)=5# (13,4)=4  (13,6)=6  (13,7)=4  (13,8)=9# (13,9)=6  (13,10)=7# (13,11)=7# (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=8  (14,6)=3  (14,7)=9# (14,8)=9# (14,9)=9# (14,10)=5# (14,11)=9# (14,12)=6  (14,14)=4  (14,15)=6  (14,16)=9# (15,0)=6  (15,2)=9# (15,3)=6  (15,4)=3  (15,6)=6  (15,7)=6  (15,8)=8  (15,9)=6  (15,10)=0  (15,12)=3  (15,13)=4  (15,14)=8  (15,15)=7# (15,16)=7# (16,0)=2  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,7)=5# (16,9)=7# (16,10)=0  (16,11)=7# (16,12)=9# (16,13)=3  (16,14)=8  (16,15)=2  (17,0)=7# (17,2)=9# (17,3)=4  (17,4)=2  (17,5)=8  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,10)=8  (17,11)=0  (17,12)=8  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,1)=2  (18,2)=5# (18,3)=7# (18,4)=8  (18,5)=7# (18,7)=6  (18,8)=5# (18,9)=8  (18,10)=0  (18,11)=9# (18,12)=2  (18,13)=8  (18,14)=9# (18,16)=5#
! size mismatch, 10x10 instead of 10x8

TEST 8731374e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 3008.5 bits (3008.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-195] Checking task 88a10436.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4827.3 = 4836.3
DL output with Mo: L = 9.0 + 7817.3 = 7826.3
DL input+output M: L = 17.9 + 12644.6 = 12662.6

# learning a model for train pairs
2.000	
1.839	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.665	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.489	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.416	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.311	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
1.205	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.135	OUT DEF: ^.size=^.size
1.096	OUT DEF: ^.layer_011=^.layer_01
1.056	OUT DEF: ^.layer_0=^.layer_0
1.030	IN  OBJECT at ^.layer_010: a point with color ? at ?
0.996	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
0.959	OUT OBJECT at ^.layer_01110: ^.layer_010.shape at ?
0.928	IN  OBJECT at ^.layer_0101: a point with color ? at ?
0.900	IN  DEF: ^.layer_0101.shape.color=grey
0.871	IN  DEF: ^.layer_01.shape.color=blue
0.857	IN  DEF: ^.layer_01.shape.mask=Full
0.847	IN  DEF: ^.color=black
0.840	IN  DEF: ^.size=(?,?)
0.833	IN  DEF: ^.layer_0101.pos=(?,?)
0.825	IN  DEF: ^.layer_0.pos=(?,?)
0.818	IN  DEF: ^.layer_0.shape.size=(?,?)
0.811	IN  DEF: ^.layer_010.pos=(?,?)
0.804	IN  DEF: ^.layer_01.pos=(?,?)
0.796	IN  DEF: ^.layer_01.shape.size=(?,?)
0.791	OUT DEF: ^.color=black
0.786	OUT DEF: ^.layer_010.pos=(?,?)
0.769	OUT DEF: ^.layer_010.pos.i=^.layer_010.pos.j
0.765	OUT DEF: ^.layer_01.pos=(?,?)
0.750	OUT DEF: ^.layer_01.pos.i=^.layer_010.pos.j + ^.layer_01.shape.size.j
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010.shape at (^.layer_010.pos.j,?)
  _01: ^.layer_0.shape at (^.layer_010.pos.j + ^.layer_01.shape.size.j,?)
  _011: ^.layer_01
  _01110: ^.layer_010.shape at ?
  _0111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color grey at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 104.3 + 2683.8 = 2788.2
DL output with Mo: L = 85.9 + 1269.4 = 1355.3
DL input+output M: L = 190.3 + 3953.2 = 4143.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _010: a point with color green at (2,2)
  _0101: a point with color grey at (5,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
diff: 
delta:
   (86.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _010: a point with color green at (2,2)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (4,4)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _01110: a point with color green at (6,6)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
diff: 
delta:
   (29.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _010: a point with color green at (2,2)
  _0101: a point with color grey at (5,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _010: a point with color blue at (1,2)
  _0101: a point with color grey at (5,5)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,1)
diff: 
delta: (2,2)=3 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _010: a point with color blue at (2,1)
  _0101: a point with color grey at (5,5)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,2)
diff: 
delta: (2,2)=3 
! 11 wrong pixels (generated / expected)

TRAIN 88a10436.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _010: a point with color pink at (0,4)
  _0101: a point with color grey at (5,1)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,4)
diff: 
delta:
   (76.1 bits)
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _010: a point with color pink at (4,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (6,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _01110: a point with color pink at (0,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (5,0)
diff: 
delta:
   (27.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _010: a point with color pink at (0,4)
  _0101: a point with color grey at (5,1)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,4)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _010: a point with color grey at (5,1)
  _0101: a point with color pink at (0,4)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,4)
diff:   ^.layer_0101.shape.color
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _010: a point with color pink at (0,4)
  _0101: a point with color grey at (5,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,4)
diff:   ^.layer_01.shape.color
delta:
! 11 wrong pixels (generated / expected)

TRAIN 88a10436.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _010: a point with color red at (6,1)
  _0101: a point with color grey at (2,4)
  _01: a rectangle with size (2,1) and color blue and mask Full at (7,3)
diff: 
delta: (6,2)=2 
   (105.4 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _010: a point with color red at (1,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (2,3)
  _011: a rectangle with size (2,1) and color blue and mask Full at (7,3)
  _01110: a point with color red at (1,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (2,5)
diff: 
delta: (6,1)=2  (6,2)=2 
   (69.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _010: a point with color red at (6,1)
  _0101: a point with color grey at (2,4)
  _01: a rectangle with size (2,1) and color blue and mask Full at (7,3)
diff: 
delta: (6,2)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _010: a point with color red at (6,2)
  _0101: a point with color grey at (2,4)
  _01: a rectangle with size (2,1) and color blue and mask Full at (7,3)
diff: 
delta: (6,1)=2 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _010: a point with color grey at (2,4)
  _0101: a point with color red at (6,1)
  _01: a rectangle with size (2,1) and color blue and mask Full at (7,3)
diff:   ^.layer_0101.shape.color
delta: (6,2)=2 
! 14 wrong pixels (generated / expected)

TRAIN 88a10436.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (4,3)
  _010: a point with color red at (2,3)
  _0101: a point with color red at (2,4)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
diff:   ^.layer_0101.shape.color
delta: (8,6)=5#
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _010: a point with color blue at (3,2)
  _0101: a point with color grey at (8,6)
  _01: a rectangle with size (1,2) and color green and mask Full at (4,3)
diff:   ^.layer_01.shape.color
delta: (3,3)=1 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (4,3)
  _010: a point with color red at (2,4)
  _0101: a point with color red at (2,3)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
diff:   ^.layer_0101.shape.color
delta: (8,6)=5#
! 13 wrong pixels (generated / expected)

TEST 88a10436.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.7 sec (24.7 sec/task)
bits-train-error = 1269.4 bits (1269.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-194] Checking task 88a62173.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6120.6 = 6129.6
DL output with Mo: L = 9.0 + 1179.8 = 1188.8
DL input+output M: L = 17.9 + 7300.4 = 7318.4

# learning a model for train pairs
2.000	
1.821	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.707	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.468	OUT DEF: ^.size=^.layer_0.shape.size
1.380	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.351	OUT DEF: ^.layer_0.pos=(?,?)
1.295	OUT DEF: ^.layer_0.pos.j=1
1.239	OUT DEF: ^.layer_0.pos.i=^.layer_00.pos.j
1.231	IN  DEF: ^.color=black
1.226	IN  DEF: ^.size=(?,?)
1.192	IN  DEF: ^.size.i=5
1.159	IN  DEF: ^.size.j=5
1.153	IN  DEF: ^.layer_00.pos=(?,?)
1.147	IN  DEF: ^.layer_00.shape.size=(?,?)
1.142	IN  DEF: ^.layer_0.pos=(?,?)
1.124	IN  DEF: ^.layer_0.pos.i=0
1.113	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.106	IN  DEF: ^.color=black
1.100	IN  DEF: ^.layer_0.shape.size=(?,?)
1.079	IN  DEF: ^.layer_0.shape.size.i=2
1.058	IN  DEF: ^.layer_0.shape.size.j=2
1.014	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.991	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.984	IN  DEF: ^.color=black
0.978	IN  DEF: ^.layer_010.pos=(?,?)
0.960	IN  DEF: ^.layer_010.pos.j=3
0.943	IN  DEF: ^.layer_010.pos.i=3
0.925	IN  DEF: ^.layer_0.pos.j=3
0.919	IN  DEF: ^.layer_010.shape.size=(?,?)
0.898	IN  DEF: ^.layer_010.shape.size.i=2
0.877	IN  DEF: ^.layer_010.shape.size.j=2
0.871	IN  DEF: ^.layer_01.pos=(?,?)
0.860	IN  DEF: ^.layer_01.pos.j=0
0.855	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a point with color ? at (^.layer_00.pos.j,1)
WHERE (Mi)
a background with size (5,5) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (2,2) and color ? and mask ? at (0,3)
  _010: a rectangle with size (2,2) and color ? and mask ? at (3,3)
  _01: a point with color ? at (?,0)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 143.3 + 2462.3 = 2605.7
DL output with Mo: L = 34.9 + 475.7 = 510.6
DL input+output M: L = 178.2 + 2938.1 = 3116.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (5,1) and color red and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,3)
  _010: a rectangle with size (2,2) and color red and mask xx|x. at (3,3)
  _01: a point with color red at (1,0)
  _011: a point with color red at (4,0)
diff: 
delta: (2,1)=0 
   (86.1 bits)
data: a background with size (2,2) and color red and layers
  _0: a point with color black at (1,1)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (1,5) and color red and mask Full at (1,0)
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (3,0)
  _010: a rectangle with size (2,2) and color red and mask xx|x. at (3,3)
  _01: a point with color red at (0,1)
  _011: a point with color red at (0,4)
diff:   ^.layer_01.pos.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (1,2)=0 
! 3 wrong pixels (generated / expected)

TRAIN 88a62173.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,2) and color blue and mask x.|xx at (3,0)
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,3)
  _010: a rectangle with size (2,2) and color blue and mask Even Checkboard at (3,3)
  _01: a point with color blue at (0,0)
  _011: a point with color blue at (1,1)
diff: 
delta:
   (70.4 bits)
data: a background with size (2,2) and color blue and layers
  _0: a point with color black at (0,1)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,2) and color blue and mask x.|xx at (3,0)
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,3)
  _010: a rectangle with size (2,2) and color blue and mask Even Checkboard at (3,3)
  _01: a point with color blue at (0,0)
  _011: a point with color blue at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 88a62173.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask xx|x. at (0,0)
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,3)
  _010: a rectangle with size (2,2) and color cyan and mask xx|x. at (3,3)
  _01: a point with color cyan at (3,0)
  _011: a point with color cyan at (3,1)
diff: 
delta: (4,0)=8 
   (89.7 bits)
data: a background with size (2,2) and color black and layers
  _0: a point with color cyan at (0,1)
diff: 
delta: (1,0)=8 
   (22.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask xx|x. at (0,0)
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (3,0)
  _010: a rectangle with size (2,2) and color cyan and mask xx|x. at (3,3)
  _01: a point with color cyan at (0,4)
  _011: a point with color cyan at (1,3)
diff:   ^.layer_01.pos.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta:
! 2 wrong pixels (generated / expected)

TRAIN 88a62173.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,2) and color grey and mask xx|.x at (0,0)
  _0: a rectangle with size (2,2) and color grey and mask xx|.x at (3,0)
  _010: a rectangle with size (2,2) and color grey and mask xx|.x at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (1,4)
diff:   ^.layer_01.pos.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (5,1) and color grey and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color grey and mask xx|.x at (3,3)
  _010: a rectangle with size (2,2) and color grey and mask Even Checkboard at (0,3)
  _01: a point with color grey at (0,0)
  _011: a point with color grey at (3,0)
diff:   ^.layer_010.pos.i  ^.layer_0.pos.i
delta: (2,1)=0 
! 2 wrong pixels (generated / expected)

TEST 88a62173.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.5 sec (12.5 sec/task)
bits-train-error = 475.7 bits (475.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-193] Checking task 890034e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 147565.6 = 147574.6
DL output with Mo: L = 9.0 + 151986.4 = 151995.4
DL input+output M: L = 17.9 + 299552.1 = 299570.0

# learning a model for train pairs
2.000	
1.812	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.637	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.531	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.414	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.347	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 94458.8 = 94525.6
DL output with Mo: L = 38.4 + 107318.9 = 107357.3
DL input+output M: L = 105.2 + 201777.7 = 201882.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x..xx..x.x.xx.|xxxxxx...x..xx.xx.x.x|...xxxx.xx..xx.xxxx.x|...x....xx..xxxx.x.x.|...xxxxxxxxx.xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
  _01: a rectangle with size (5,4) and color red and mask Border at (2,6)
  _011: a rectangle with size (5,2) and color blue and mask xx|x.|xx|xx|x. at (16,0)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,4)=8  (16,7)=8  (17,1)=8  (17,2)=8  (18,2)=8  (19,4)=8  (19,16)=8  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
   (1547.5 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x......x.x.xx.|xxxxxx.......x.xx.x.x|...xxxx.x....x.xxxx.x|...x....x....xxx.x.x.|...xxxxxx....xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
  _01: a rectangle with size (5,4) and color red and mask Border at (2,6)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,9)=2  (13,10)=2  (13,11)=2  (13,12)=2  (13,13)=8  (13,20)=8  (14,8)=8  (14,9)=2  (14,12)=2  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,9)=2  (15,12)=2  (16,0)=1  (16,1)=1  (16,4)=8  (16,7)=8  (16,9)=2  (16,12)=2  (17,0)=1  (17,1)=8  (17,2)=8  (17,9)=2  (17,10)=2  (17,11)=2  (17,12)=2  (18,0)=1  (18,1)=1  (18,2)=8  (19,0)=1  (19,1)=1  (19,4)=8  (19,16)=8  (20,0)=1  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
   (1944.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x..xx..x.x.xx.|xxxxxx...x..xx.xx.x.x|...xxxx.xx..xx.xxxx.x|...x....xx..xxxx.x.x.|...xxxxxxxxx.xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
  _01: a rectangle with size (5,4) and color red and mask Border at (2,6)
  _011: a rectangle with size (5,2) and color blue and mask xx|x.|xx|xx|x. at (16,0)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,4)=8  (16,7)=8  (17,1)=8  (17,2)=8  (18,2)=8  (19,4)=8  (19,16)=8  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x..xx..x.x.xx.|xxxxxx...x..xx.xx.x.x|...xxxx.xx..xx.xxxx.x|...x....xx..xxxx.x.x.|...xxxxxxxxx.xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
  _01: a rectangle with size (5,2) and color blue and mask xx|x.|xx|xx|x. at (16,0)
  _011: a rectangle with size (5,4) and color red and mask Border at (2,6)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,4)=8  (16,7)=8  (17,1)=8  (17,2)=8  (18,2)=8  (19,4)=8  (19,16)=8  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
! size mismatch, 10x10 instead of 21x21
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask Border at (2,6)
  _01: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x..xxxxxxxxx.xxxx.|.xxxxxx..xxxxxxxx.x.x|xxxxx.x..xx..xx.x.xx.|x....xx..xx.xxxxx.xxx|..xx.xxxxxx.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x..xx..x.x.xx.|xxxxxx...x..xx.xx.x.x|...xxxx.xx..xx.xxxx.x|...x....xx..xxxx.x.x.|...xxxxxxxxx.xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
  _011: a rectangle with size (5,2) and color blue and mask xx|x.|xx|xx|x. at (16,0)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,15)=8  (3,17)=8  (5,11)=8  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,4)=8  (16,7)=8  (17,1)=8  (17,2)=8  (18,2)=8  (19,4)=8  (19,16)=8  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
! size mismatch, 10x10 instead of 21x21

TRAIN 890034e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (12,9) and color green and mask ...x.....|..x.xx...|.x.......|.xx.xx...|..x.x....|...x.....|...x.....|..x.x....|.x.x.....|xx..xxx..|x...x..xx|.x.x...x. at (9,7)
  _01: a rectangle with size (9,9) and color green and mask ....xxxx.|....xxx..|...x.x.x.|....x.xxx|xx..xx...|.x..x....|.x..x....|.xxx.....|...x..... at (0,0)
  _011: a rectangle with size (10,10) and color green and mask .....x....|.....xx...|.....x....|......x...|....x.x...|..xxxx.x.x|...x....xx|xxx..x.xxx|....x.xx..|........xx at (0,11)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,10)=3  (3,12)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,3)=4  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (5,7)=3  (5,9)=3  (5,17)=4  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,14)=4  (8,0)=4  (8,2)=4  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
   (4213.5 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (12,9) and color green and mask ...x.....|..x......|.x.......|.xx.xx...|..x.x....|...x.....|...x.....|..x.x....|.x.x.....|xx..xxx..|x...x..xx|.x.x...x. at (9,7)
  _01: a rectangle with size (9,9) and color green and mask ....xxxx.|....xxx..|...x.x.x.|....x.xxx|xx..xx...|.x..x....|.x..x....|.xxx.....|...x..... at (0,0)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,16)=3  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,16)=3  (1,17)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,16)=3  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,10)=3  (3,12)=3  (3,17)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,3)=4  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=3  (4,17)=3  (5,7)=3  (5,9)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=4  (5,18)=3  (5,20)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,14)=3  (6,15)=4  (6,19)=3  (6,20)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=3  (7,18)=3  (7,19)=3  (7,20)=3  (8,0)=4  (8,2)=4  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (8,11)=8  (8,15)=8  (8,17)=3  (8,18)=3  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,11)=8  (9,15)=8  (9,18)=4  (9,19)=3  (9,20)=3  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
   (4661.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (12,9) and color green and mask ...x.....|..x.xx...|.x.......|.xx.xx...|..x.x....|...x.....|...x.....|..x.x....|.x.x.....|xx..xxx..|x...x..xx|.x.x...x. at (9,7)
  _01: a rectangle with size (10,10) and color green and mask .....x....|.....xx...|.....x....|......x...|....x.x...|..xxxx.x.x|...x....xx|xxx..x.xxx|....x.xx..|........xx at (0,11)
  _011: a rectangle with size (9,9) and color green and mask ....xxxx.|....xxx..|...x.x.x.|....x.xxx|xx..xx...|.x..x....|.x..x....|.xxx.....|...x..... at (0,0)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,10)=3  (3,12)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,3)=4  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (5,7)=3  (5,9)=3  (5,17)=4  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,14)=4  (8,0)=4  (8,2)=4  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (12,9) and color green and mask ...x.....|..x.xx...|.x.......|.xx.xx...|..x.x....|...x.....|...x.....|..x.x....|.x.x.....|xx..xxx..|x...x..xx|.x.x...x. at (9,7)
  _01: a rectangle with size (9,9) and color green and mask ....xxxx.|....xxx..|...x.x.x.|....x.xxx|xx..xx...|.x..x....|.x..x....|.xxx.....|...x..... at (0,0)
  _011: a rectangle with size (10,10) and color green and mask .....x....|.....xx...|.....x....|......x...|....x.x...|..xxxx.x.x|...x....xx|xxx..x.xxx|....x.xx..|........xx at (0,11)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,10)=3  (3,12)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,3)=4  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (5,7)=3  (5,9)=3  (5,17)=4  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,14)=4  (8,0)=4  (8,2)=4  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
! size mismatch, 10x10 instead of 21x21
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (10,10) and color green and mask .....x....|.....xx...|.....x....|......x...|....x.x...|..xxxx.x.x|...x....xx|xxx..x.xxx|....x.xx..|........xx at (0,11)
  _01: a rectangle with size (12,9) and color green and mask ...x.....|..x.xx...|.x.......|.xx.xx...|..x.x....|...x.....|...x.....|..x.x....|.x.x.....|xx..xxx..|x...x..xx|.x.x...x. at (9,7)
  _011: a rectangle with size (9,9) and color green and mask ....xxxx.|....xxx..|...x.x.x.|....x.xxx|xx..xx...|.x..x....|.x..x....|.xxx.....|...x..... at (0,0)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,10)=3  (3,12)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,3)=4  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (5,7)=3  (5,9)=3  (5,17)=4  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,14)=4  (8,0)=4  (8,2)=4  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
! size mismatch, 10x10 instead of 21x21

TRAIN 890034e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (13,14) and color red and mask ..........x...|..........xx..|......x.x..x..|......x.xxx.x.|....x..xx...x.|x...xxxxx....x|.xx.x.xx..xxxx|...x.x.x..xxx.|..xxx.x..x.x..|xxxxx.x...x...|xxxx.....x....|x..xxx........|xx............ at (6,0)
  _01: a rectangle with size (10,14) and color red and mask x...xxxxxxxx..|xxxxxxxx.xx...|xxxx.xxxx.....|......x.xxx...|.....xx.x..xx.|.....xx.xx..x.|...x...xxx.xxx|...xx.x.x..xxx|.x..x...x...xx|.xxx.x...xx.x. at (0,7)
  _011: a rectangle with size (8,6) and color red and mask x....x|.xxxxx|.xx.xx|xx.xx.|x..x..|.xx.x.|.x..x.|..xx.. at (11,15)
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (1,20)=2  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (2,20)=2  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,10)=2  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,0)=2  (6,2)=2  (6,4)=4  (6,9)=4  (7,1)=2  (7,3)=2  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,10)=3  (8,12)=3  (8,13)=3  (9,1)=2  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,2)=2  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,17)=3  (12,0)=3  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,18)=3  (14,5)=3  (14,10)=3  (14,13)=3  (14,17)=3  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,18)=3  (17,2)=3  (17,6)=3  (17,7)=2  (17,8)=3  (17,9)=3  (17,10)=3  (17,20)=3  (18,9)=3  (18,10)=2  (18,11)=3  (18,12)=2  (18,13)=2  (18,14)=3  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
   (3684.9 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (13,14) and color red and mask ..........x...|..........xx..|......x.x..x..|......x.xxx.x.|....x..xx...x.|x...xxxxx....x|.xx.x.xx..xxxx|...x.x.x..xxx.|..xxx.x..x....|xxxxx.x.......|xxxx..........|x..xxx........|xx............ at (6,0)
  _01: a rectangle with size (10,14) and color red and mask x...xxxxxxxx..|xxxxxxxx.xx...|xxxx.xxxx.....|......x.xxx...|.....xx.x..xx.|.....xx.xx..x.|...x...xxx.xxx|...xx.x.x..xxx|.x..x...x...xx|.xxx.x...xx.x. at (0,7)
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (1,20)=2  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (2,20)=2  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,10)=2  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,0)=2  (6,2)=2  (6,4)=4  (6,9)=4  (7,1)=2  (7,3)=2  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,10)=3  (8,12)=3  (8,13)=3  (9,1)=2  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,2)=2  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,15)=2  (11,17)=3  (11,20)=2  (12,0)=3  (12,9)=3  (12,14)=3  (12,16)=2  (12,17)=2  (12,18)=2  (12,19)=2  (12,20)=2  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,16)=2  (13,17)=2  (13,18)=3  (13,19)=2  (13,20)=2  (14,5)=3  (14,10)=4  (14,11)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,15)=4  (14,16)=2  (14,17)=3  (14,18)=2  (14,19)=2  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=4  (15,15)=4  (15,18)=2  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,9)=2  (16,10)=4  (16,15)=4  (16,16)=2  (16,17)=2  (16,18)=3  (16,19)=2  (17,2)=3  (17,6)=3  (17,7)=2  (17,8)=3  (17,9)=3  (17,10)=4  (17,15)=4  (17,16)=2  (17,19)=2  (17,20)=3  (18,9)=3  (18,10)=4  (18,11)=4  (18,12)=4  (18,13)=4  (18,14)=4  (18,15)=4  (18,17)=2  (18,18)=2  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
   (4126.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (13,14) and color red and mask ..........x...|..........xx..|......x.x..x..|......x.xxx.x.|....x..xx...x.|x...xxxxx....x|.xx.x.xx..xxxx|...x.x.x..xxx.|..xxx.x..x.x..|xxxxx.x...x...|xxxx.....x....|x..xxx........|xx............ at (6,0)
  _01: a rectangle with size (10,14) and color red and mask x...xxxxxxxx..|xxxxxxxx.xx...|xxxx.xxxx.....|......x.xxx...|.....xx.x..xx.|.....xx.xx..x.|...x...xxx.xxx|...xx.x.x..xxx|.x..x...x...xx|.xxx.x...xx.x. at (0,7)
  _011: a rectangle with size (8,6) and color red and mask x....x|.xxxxx|.xx.xx|xx.xx.|x..x..|.xx.x.|.x..x.|..xx.. at (11,15)
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (1,20)=2  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (2,20)=2  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,10)=2  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,0)=2  (6,2)=2  (6,4)=4  (6,9)=4  (7,1)=2  (7,3)=2  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,10)=3  (8,12)=3  (8,13)=3  (9,1)=2  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,2)=2  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,17)=3  (12,0)=3  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,18)=3  (14,5)=3  (14,10)=3  (14,13)=3  (14,17)=3  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,18)=3  (17,2)=3  (17,6)=3  (17,7)=2  (17,8)=3  (17,9)=3  (17,10)=3  (17,20)=3  (18,9)=3  (18,10)=2  (18,11)=3  (18,12)=2  (18,13)=2  (18,14)=3  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (13,14) and color red and mask ..........x...|..........xx..|......x.x..x..|......x.xxx.x.|....x..xx...x.|x...xxxxx....x|.xx.x.xx..xxxx|...x.x.x..xxx.|..xxx.x..x.x..|xxxxx.x...x...|xxxx.....x....|x..xxx........|xx............ at (6,0)
  _01: a rectangle with size (8,6) and color red and mask x....x|.xxxxx|.xx.xx|xx.xx.|x..x..|.xx.x.|.x..x.|..xx.. at (11,15)
  _011: a rectangle with size (10,14) and color red and mask x...xxxxxxxx..|xxxxxxxx.xx...|xxxx.xxxx.....|......x.xxx...|.....xx.x..xx.|.....xx.xx..x.|...x...xxx.xxx|...xx.x.x..xxx|.x..x...x...xx|.xxx.x...xx.x. at (0,7)
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (1,20)=2  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (2,20)=2  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,10)=2  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,0)=2  (6,2)=2  (6,4)=4  (6,9)=4  (7,1)=2  (7,3)=2  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,10)=3  (8,12)=3  (8,13)=3  (9,1)=2  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,2)=2  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,17)=3  (12,0)=3  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,18)=3  (14,5)=3  (14,10)=3  (14,13)=3  (14,17)=3  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,18)=3  (17,2)=3  (17,6)=3  (17,7)=2  (17,8)=3  (17,9)=3  (17,10)=3  (17,20)=3  (18,9)=3  (18,10)=2  (18,11)=3  (18,12)=2  (18,13)=2  (18,14)=3  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
! size mismatch, 10x10 instead of 21x21
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (10,14) and color red and mask x...xxxxxxxx..|xxxxxxxx.xx...|xxxx.xxxx.....|......x.xxx...|.....xx.x..xx.|.....xx.xx..x.|.......xxx.xxx|......x.x..xxx|........x...xx|.........xx.x. at (0,7)
  _01: a rectangle with size (13,14) and color red and mask ..........x...|..........xx.x|......x.x..x..|......x.xxx.x.|....x..xx...x.|x...xxxxx....x|.xx.x.xx..xxxx|...x.x.x..xxx.|..xxx.x..x.x..|xxxxx.x...x...|xxxx.....x....|x..xxx........|xx............ at (6,0)
  _011: a rectangle with size (8,6) and color red and mask x....x|.xxxxx|.xx.xx|xx.xx.|x..x..|.xx.x.|.x..x.|..xx.. at (11,15)
diff: 
delta: (0,2)=3  (0,4)=3  (0,5)=2  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,1)=2  (1,2)=2  (1,4)=3  (1,5)=2  (1,15)=3  (1,19)=3  (1,20)=2  (2,0)=3  (2,1)=3  (2,3)=3  (2,6)=3  (2,11)=3  (2,16)=3  (2,19)=3  (2,20)=2  (3,0)=2  (3,1)=2  (3,2)=3  (3,3)=2  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,2)=2  (4,4)=4  (4,9)=4  (4,10)=2  (4,16)=3  (5,0)=3  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=4  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (6,0)=2  (6,2)=2  (6,4)=4  (6,9)=4  (7,1)=2  (7,3)=2  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,0)=2  (8,2)=2  (8,3)=2  (8,4)=2  (8,10)=3  (8,12)=3  (8,13)=3  (9,1)=2  (9,2)=3  (9,4)=3  (9,7)=3  (9,18)=3  (10,0)=3  (10,2)=2  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,3)=3  (11,17)=3  (12,0)=3  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,15)=3  (13,18)=3  (14,5)=3  (14,10)=3  (14,13)=3  (14,17)=3  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,19)=3  (16,4)=3  (16,7)=3  (16,8)=3  (16,18)=3  (17,2)=3  (17,6)=3  (17,7)=2  (17,8)=3  (17,9)=3  (17,10)=3  (17,20)=3  (18,9)=3  (18,10)=2  (18,11)=3  (18,12)=2  (18,13)=2  (18,14)=3  (19,1)=3  (19,3)=2  (19,4)=2  (19,5)=2  (19,9)=2  (19,10)=2  (19,11)=2  (19,12)=2  (19,13)=3  (19,15)=2  (19,19)=3  (19,20)=2  (20,0)=2  (20,1)=3  (20,2)=2  (20,3)=2  (20,4)=2  (20,7)=3  (20,8)=2  (20,10)=3  (20,11)=2  (20,13)=2  (20,14)=2  (20,15)=2  (20,16)=3  (20,19)=2  (20,20)=2 
! size mismatch, 10x10 instead of 21x21

TRAIN 890034e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..x.xxxx..x.x..xxx.x.|xxx..x.x.xxxx.xxx..xx|xxx...xxxxx.xxx.xx.xx|..xxxxxxxxx.xxx..xxxx|..x.xx..xx.xx..x.xxx.|x..xx.xxxxx.x..xx....|.xx...xx.xx.x..xx.xxx|xxx..x.x..xx...x.xxx.|x.x.x...xxx....xxx.x.|.x..xx.xxxxxxxxx.xx.x|.xxx.x.xxxx.xxxx.xxxx|.xxx..x.x.xxxxx..xxx.|.x..xxxxxxxxx...xxxxx|x....x...xx.x..x..xxx|.....x.x.x.xxxxxxxxx.|.....xx..xxx..xxx.xxx|.....x....x.xxx.x.x.x|.....xx.x.x.x.xxxxxxx|.....x...xxxx.xx..xxx|.....xxxxxxxxxxx..xx.|....x.x.x.xxxxxx.xxxx at (0,0)
  _01: a rectangle with size (7,4) and color green and mask Border at (13,1)
  _011: a rectangle with size (6,1) and color blue and mask Full at (15,0)
diff: 
delta: (0,1)=2  (0,13)=2  (0,20)=2  (1,4)=2  (1,6)=2  (1,18)=2  (2,4)=2  (2,5)=2  (2,18)=2  (3,0)=2  (3,1)=2  (3,15)=2  (4,1)=2  (4,6)=2  (4,7)=2  (4,20)=2  (5,19)=2  (7,3)=2  (7,4)=2  (7,8)=2  (7,9)=2  (7,12)=2  (7,20)=2  (8,7)=2  (12,15)=2  (13,6)=2  (13,8)=2  (14,0)=2  (15,7)=2  (15,13)=2  (16,6)=2  (16,11)=2  (16,15)=2  (18,0)=0  (18,7)=2  (18,17)=2  (20,1)=1  (20,2)=1  (20,3)=2 
! size mismatch, 10x10 instead of 21x21

TEST 890034e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.6 sec (29.6 sec/task)
bits-train-error = 107318.9 bits (107318.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-192] Checking task 8a004b2b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16736.0 = 16744.9
DL output with Mo: L = 9.0 + 21581.2 = 21590.2
DL input+output M: L = 17.9 + 38317.2 = 38335.1

# learning a model for train pairs
2.000	
1.515	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.332	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.177	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.034	OUT OBJECT at ^.layer_00: ^.layer_01.shape at ?
0.906	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.795	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.746	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.730	OUT OBJECT at ^.layer_010: ^.layer_011.shape at ?
0.721	IN  OBJECT at ^.layer_00: a point with color ? at ?
0.709	OUT OBJECT at ^.layer_0101: ^.layer_00.shape at ?
0.696	OUT OBJECT at ^.layer_01011: ^.layer_00.shape at ?
0.682	OUT OBJECT at ^.layer_001: ^.layer_00.shape at ?
0.678	IN  OBJECT at ^.layer_000: a point with color ? at ?
0.669	IN  DEF: ^.layer_000.shape.color=yellow
0.661	IN  DEF: ^.layer_00.shape.color=yellow
0.654	IN  OBJECT at ^.layer_001: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_01.shape at ?
  _001: ^.layer_00.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_011.shape at ?
  _0101: ^.layer_00.shape at ?
  _01011: ^.layer_00.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _000: a point with color yellow at ?
  _00: a point with color yellow at ?
  _001: a point with color ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 123.2 + 7395.5 = 7518.7
DL output with Mo: L = 100.8 + 4324.6 = 4425.4
DL input+output M: L = 224.0 + 11720.1 = 11944.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _000: a point with color yellow at (0,2)
  _00: a point with color yellow at (8,2)
  _001: a point with color yellow at (0,15)
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,11)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (6,7)
diff: 
delta: (8,15)=4  (12,2)=3  (12,6)=2 
   (259.8 bits)
data: a background with size (9,14) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Full at (2,1)
  _001: a point with color yellow at (0,0)
  _0: a rectangle with size (4,10) and color blue and mask xxxx..xxxx|xxxx..xxxx|..xxxxxx..|..xxxxxx.. at (4,1)
  _010: a rectangle with size (2,2) and color red and mask Full at (2,9)
  _0101: a point with color yellow at (0,13)
  _01011: a point with color yellow at (8,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (8,13)
diff: 
delta:
   (175.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _000: a point with color yellow at (0,2)
  _00: a point with color yellow at (0,15)
  _001: a point with color green at (2,3)
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (6,7)
  _0111: a rectangle with size (2,2) and color green and mask Full at (2,3)
diff: 
delta: (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
! size mismatch, 10x10 instead of 9x14
>> Trial 2
data: a background with size (17,17) and color black and layers
  _000: a point with color yellow at (0,2)
  _00: a point with color yellow at (0,15)
  _001: a point with color green at (2,3)
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (6,7)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,11)
  _0111: a rectangle with size (2,2) and color green and mask Full at (2,3)
diff: 
delta: (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
! size mismatch, 10x10 instead of 9x14

TRAIN 8a004b2b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  _000: a point with color yellow at (1,2)
  _00: a point with color yellow at (7,2)
  _001: a point with color yellow at (1,8)
  _0: a rectangle with size (2,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
diff: 
delta: (13,10)=2  (14,11)=8 
   (226.4 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _001: a point with color yellow at (0,0)
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (0,6)
  _0101: a point with color yellow at (6,0)
  _01011: a point with color yellow at (6,6)
  _01: a rectangle with size (4,4) and color green and mask Full at (1,1)
diff: 
delta:
   (123.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _000: a point with color yellow at (1,2)
  _00: a point with color yellow at (1,8)
  _001: a point with color red at (2,3)
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,3)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (7,2)
diff: 
delta: (7,8)=4  (13,10)=2  (14,11)=8 
! size mismatch, 10x10 instead of 7x7

TRAIN 8a004b2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _000: a point with color yellow at (0,3)
  _00: a point with color yellow at (0,13)
  _001: a point with color yellow at (10,3)
  _0: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _01: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta: (10,13)=4  (13,6)=2  (14,7)=3 
   (253.4 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (3,1)
  _001: a point with color yellow at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,10)
  _010: a rectangle with size (3,3) and color green and mask Full at (6,4)
  _0101: a point with color yellow at (10,0)
  _01011: a point with color yellow at (10,10)
  _01: a rectangle with size (6,6) and color blue and mask Full at (3,4)
diff: 
delta:
   (133.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _000: a point with color yellow at (0,3)
  _00: a point with color yellow at (0,13)
  _001: a point with color yellow at (10,3)
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta: (10,13)=4  (13,6)=2  (14,7)=3 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (16,18) and color black and layers
  _000: a point with color yellow at (0,3)
  _00: a point with color yellow at (0,13)
  _001: a point with color yellow at (10,3)
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta: (10,13)=4  (13,6)=2  (14,7)=3 
! size mismatch, 10x10 instead of 11x11
>> Trial 3
data: a background with size (16,18) and color black and layers
  _000: a point with color yellow at (0,3)
  _00: a point with color yellow at (0,13)
  _001: a point with color yellow at (10,3)
  _0: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _01: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta: (10,13)=4  (13,6)=2  (14,7)=3 
! size mismatch, 10x10 instead of 11x11

TRAIN 8a004b2b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  _000: a point with color yellow at (0,0)
  _00: a point with color yellow at (0,17)
  _001: a point with color yellow at (13,0)
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (16,8)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (2,4)
  _011: a rectangle with size (4,4) and color green and mask Full at (2,12)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (13,17)
diff: 
delta: (15,8)=8  (15,10)=3 
! size mismatch, 10x10 instead of 14x18
>> Trial 2
data: a background with size (19,18) and color black and layers
  _000: a point with color yellow at (0,0)
  _00: a point with color yellow at (0,17)
  _001: a point with color yellow at (13,0)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (2,4)
  _01: a rectangle with size (4,4) and color green and mask Full at (2,12)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (16,8)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (13,17)
diff: 
delta: (15,8)=8  (15,10)=3 
! size mismatch, 10x10 instead of 14x18

TEST 8a004b2b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.6 sec (24.6 sec/task)
bits-train-error = 4324.6 bits (4324.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-191] Checking task 8be77c9e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2144.9 = 2153.9
DL output with Mo: L = 9.0 + 3995.9 = 4004.9
DL input+output M: L = 17.9 + 6140.8 = 6158.7

# learning a model for train pairs
2.000	
1.462	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.066	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.002	IN  DEF: ^.layer_0.shape.color=blue
0.981	IN  DEF: ^.color=black
0.965	IN  DEF: ^.size=(?,?)
0.889	IN  DEF: ^.size.i=3
0.814	IN  DEF: ^.size.j=3
0.798	IN  DEF: ^.layer_0.pos=(?,?)
0.781	IN  DEF: ^.layer_0.shape.size=(?,?)
0.722	IN  DEF: ^.layer_0.shape.size.i=2
0.713	OUT DEF: ^.size=(?,?)
0.658	OUT DEF: ^.size.i=6
0.617	OUT DEF: ^.size.j=^.size.j
0.608	OUT DEF: ^.layer_0.pos=(?,?)
0.581	OUT DEF: ^.layer_0.pos.i=^.layer_0.shape.size.i - ^.layer_0.pos.i
0.560	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.551	OUT DEF: ^.layer_0.shape.size=(?,?)
0.518	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size (6,^.size.j) and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (^.layer_0.shape.size.i - ^.layer_0.pos.i,^.layer_0.pos.j)
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 47.6 + 511.9 = 559.5
DL output with Mo: L = 59.9 + 975.0 = 1034.9
DL input+output M: L = 107.5 + 1486.9 = 1594.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xx.|xxx at (0,0)
diff: 
delta:
   (20.4 bits)
data: a background with size (6,3) and color blue and layers
  _0: a rectangle with size (2,3) and color black and mask Full at (2,0)
diff: 
delta: (0,2)=0  (5,2)=0 
   (55.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xx.|xxx at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
diff: 
delta: (1,2)=1 
! 14 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask x.x|xx. at (1,0)
diff: 
delta:
   (20.4 bits)
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask x.x|xx.|xx.|x.x at (1,0)
diff: 
delta:
   (27.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask x.x|xx. at (1,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,0)
diff: 
delta: (1,2)=1  (2,1)=1 
! 8 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta:
   (10.5 bits)
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (1,2)
diff: 
delta:
   (14.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
diff:   ^.layer_0.shape.size.i
delta: (2,0)=1 
! 5 wrong pixels (generated / expected)

TEST 8be77c9e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 975.0 bits (975.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-190] Checking task 8d5021e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1428.3 = 1437.3
DL output with Mo: L = 9.0 + 7092.4 = 7101.4
DL input+output M: L = 17.9 + 8520.7 = 8538.7

# learning a model for train pairs
2.000	
1.600	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.509	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.399	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.345	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.321	IN  DEF: ^.size=(?,?)
1.208	IN  DEF: ^.size.i=3
1.118	IN  DEF: ^.size.j=2
1.094	IN  DEF: ^.layer_0.pos=(?,?)
1.033	IN  DEF: ^.layer_0.pos.i=2
1.009	IN  DEF: ^.layer_01.pos=(?,?)
0.959	IN  DEF: ^.layer_01.pos.j=1
0.940	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.933	OUT DEF: ^.color=black
0.928	OUT DEF: ^.layer_0.pos=(?,?)
0.909	OUT DEF: ^.layer_0.pos.i=(0)
0.895	OUT DEF: ^.layer_0.pos.j=(0)
0.891	OUT DEF: ^.size=(?,?)
0.855	OUT DEF: ^.size.i=9
0.828	OUT DEF: ^.size.j=4
0.823	OUT DEF: ^.layer_0.shape.size=(?,?)
0.819	OUT DEF: ^.layer_01.pos=(?,?)
0.814	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (9,4) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (3,2) and color ? and layers
  _0: a point with color ? at (2,?)
  _01: a point with color ? at (?,1)

DL input  with Mi: L = 50.4 + 544.3 = 594.7
DL output with Mo: L = 78.1 + 2761.4 = 2839.4
DL input+output M: L = 128.5 + 3305.7 = 3434.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,2) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color cyan at (0,1)
diff: 
delta:
   (16.0 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (9,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,3)
diff: 
delta: (1,0)=0  (1,3)=0  (4,0)=0  (4,3)=0  (7,0)=0  (7,3)=0 
   (149.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color cyan at (0,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,2) and color red and layers
  _0: a point with color black at (2,1)
  _01: a point with color black at (0,1)
diff: 
delta:
   (22.5 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (9,4) and color red and mask .xx.|xxxx|.xx.|.xx.|xxxx|.xx.|.xx.|xxxx|.xx. at (0,0)
  _01: a rectangle with size (1,1) and color black and mask Full at (0,0)
diff: 
delta:
   (73.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color red and layers
  _0: a point with color black at (2,1)
  _01: a point with color black at (0,1)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,2) and color black and layers
  _0: a point with color grey at (2,0)
  _01: a point with color grey at (1,1)
diff: 
delta:
   (16.0 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|x..x at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask x-cross at (4,0)
diff: 
delta:
   (53.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a point with color grey at (2,0)
  _01: a point with color grey at (1,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color green and layers
  _0: a point with color green at (2,0)
  _01: a point with color black at (1,1)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TEST 8d5021e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.3 sec (4.3 sec/task)
bits-train-error = 2761.4 bits (2761.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-189] Checking task 8d510a79.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7577.5 = 7586.5
DL output with Mo: L = 9.0 + 12140.1 = 12149.1
DL input+output M: L = 17.9 + 19717.6 = 19735.5

# learning a model for train pairs
2.000	
1.578	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.284	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.205	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.127	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.062	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.031	OUT DEF: ^.size=^.size
1.011	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 4359.7 = 4388.6
DL output with Mo: L = 92.1 + 5161.7 = 5253.8
DL input+output M: L = 121.0 + 9521.3 = 9642.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
diff: 
delta: (0,2)=1  (1,6)=1  (2,1)=2  (2,9)=2  (8,1)=1  (8,5)=2  (8,8)=1 
   (189.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,9)
  _0111: a rectangle with size (3,1) and color red and mask Full at (6,5)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (0,6)
diff: 
delta: (0,2)=1  (8,1)=1  (8,8)=1  (9,1)=1  (9,8)=1 
   (217.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
diff: 
delta: (0,2)=1  (1,6)=1  (2,1)=2  (2,9)=2  (8,1)=1  (8,5)=2  (8,8)=1 
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta: (1,6)=1  (2,1)=2  (2,9)=2  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (8,1)=1  (8,5)=2  (8,8)=1 
! 30 wrong pixels (generated / expected)

TRAIN 8d510a79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
diff: 
delta: (0,1)=2  (0,3)=1  (1,5)=2  (1,7)=1  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
   (246.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (4,6)
  _011: a rectangle with size (6,1) and color red and mask Full at (0,1)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (6,4)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (0,7)
diff: 
delta: (0,3)=1  (1,5)=2  (2,5)=2  (4,9)=2  (5,9)=2  (8,2)=1  (8,8)=1  (9,2)=1  (9,8)=1 
   (298.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
diff: 
delta: (0,1)=2  (0,3)=1  (1,5)=2  (1,7)=1  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (0,3)=1  (1,5)=2  (1,7)=1  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 37 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,1)=2  (1,5)=2  (1,7)=1  (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 37 wrong pixels (generated / expected)

TRAIN 8d510a79.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (4,0)
diff: 
delta: (1,1)=2  (1,3)=1  (1,8)=2  (2,6)=1  (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta: (1,3)=1  (1,8)=2  (2,6)=1  (4,0)=5# (4,1)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,3)
diff: 
delta: (1,1)=2  (1,8)=2  (2,6)=1  (4,0)=5# (4,1)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5# (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 35 wrong pixels (generated / expected)

TEST 8d510a79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.6 sec (26.6 sec/task)
bits-train-error = 5161.7 bits (5161.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-188] Checking task 8e1813be.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 41151.1 = 41160.0
DL output with Mo: L = 9.0 + 8996.8 = 9005.8
DL input+output M: L = 17.9 + 50147.9 = 50165.8

# learning a model for train pairs
2.000	
1.714	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.551	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.393	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.232	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.082	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.972	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.863	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.787	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 8727.8 = 8831.6
DL output with Mo: L = 66.8 + 5090.7 = 5157.5
DL input+output M: L = 170.6 + 13818.5 = 13989.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask Full at (10,1)
  _01: a rectangle with size (1,15) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,15) and color blue and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color green and mask Full at (8,0)
  _01111: a rectangle with size (1,15) and color pink and mask Full at (17,0)
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8 
   (482.5 bits)
data: a background with size (6,6) and color cyan and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,6) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,6) and color green and mask Full at (2,0)
diff: 
delta: (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (5,0)=6  (5,1)=6  (5,2)=6  (5,3)=6  (5,4)=6  (5,5)=6 
   (322.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask Full at (10,1)
  _01: a rectangle with size (1,15) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,15) and color blue and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color green and mask Full at (8,0)
  _01111: a rectangle with size (1,15) and color pink and mask Full at (17,0)
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8 
! size mismatch, 10x10 instead of 6x6

TRAIN 8e1813be.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
  _01111: a rectangle with size (8,2) and color black and mask Full at (4,0)
diff: 
delta:
   (174.6 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (90.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
  _01111: a rectangle with size (8,2) and color black and mask Full at (4,0)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN 8e1813be.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (1,6)
  _01: a rectangle with size (1,12) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (1,12) and color blue and mask Full at (10,0)
  _0111: a rectangle with size (1,5) and color red and mask Full at (1,0)
  _01111: a rectangle with size (1,5) and color cyan and mask Full at (4,0)
diff: 
delta: (1,11)=2  (4,11)=8 
   (215.7 bits)
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (2,0)
diff: 
delta:
   (96.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (1,6)
  _01: a rectangle with size (1,12) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (1,12) and color blue and mask Full at (10,0)
  _0111: a rectangle with size (1,5) and color red and mask Full at (1,0)
  _01111: a rectangle with size (1,5) and color cyan and mask Full at (4,0)
diff: 
delta: (1,11)=2  (4,11)=8 
! size mismatch, 10x10 instead of 4x4

TRAIN 8e1813be.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Full at (1,8)
  _01: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (1,19) and color pink and mask Full at (12,0)
  _0111: a rectangle with size (1,19) and color blue and mask Full at (15,0)
  _01111: a rectangle with size (1,19) and color orange and mask Full at (18,0)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,16)=2  (0,17)=2  (0,18)=2  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,16)=3  (3,17)=3  (3,18)=3  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,16)=8  (6,17)=8  (6,18)=8 
! size mismatch, 10x10 instead of 7x7

TEST 8e1813be.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.7 sec (17.7 sec/task)
bits-train-error = 5090.7 bits (5090.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-187] Checking task 8e5a5113.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8549.4 = 8558.4
DL output with Mo: L = 9.0 + 10316.3 = 10325.3
DL input+output M: L = 17.9 + 18865.8 = 18883.7

# learning a model for train pairs
2.000	
1.793	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.698	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.573	OUT OBJECT at ^.layer_0: ^.layer_01.shape at ?
1.448	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.351	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.258	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
1.166	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
1.057	OUT OBJECT at ^.layer_0101: ^.layer_010.shape at ?
1.010	OUT DEF: ^.size=^.size
0.984	OUT DEF: ^.layer_0=^.layer_01
0.910	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.883	OUT DEF: ^.layer_010=^.layer_010
0.856	OUT DEF: ^.layer_01=^.layer_011
0.833	OUT DEF: ^.color=^.layer_0.shape.color
0.820	OUT DEF: ^.layer_011.shape.color=^.layer_010.shape.color
0.812	IN  DEF: ^.layer_011.shape.mask=Full
0.806	IN  DEF: ^.color=black
0.802	IN  DEF: ^.size=(?,?)
0.771	IN  DEF: ^.size.j=11
0.752	IN  DEF: ^.size.i=3
0.747	IN  DEF: ^.layer_0.pos=(?,?)
0.743	IN  DEF: ^.layer_01.pos=(?,?)
0.733	IN  DEF: ^.layer_01.pos.i=0
0.729	IN  DEF: ^.layer_0.shape.size=(?,?)
0.710	IN  DEF: ^.layer_0.shape.size.i=3
0.693	IN  DEF: ^.layer_01.pos.j=3
0.677	IN  DEF: ^.layer_01.shape.color=grey
0.661	IN  DEF: ^.layer_011.shape.color=grey
0.646	IN  DEF: ^.layer_0.pos.j=(0)
0.634	IN  OBJECT at ^.layer_0100: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: ^.layer_01
  _010: ^.layer_010
  _0101: ^.layer_010.shape at ?
  _01: ^.layer_011
  _011: a rectangle with size ? and color ^.layer_010.shape.color and mask ? at ?
WHERE (Mi)
a background with size (3,11) and color ? and layers
  _0: a rectangle with size (3,?) and color ? and mask ? at (?,(0))
  _0100: a point with color ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color grey and mask ? at (0,3)
  _011: a rectangle with size ? and color grey and mask Full at ?

DL input  with Mi: L = 129.2 + 2755.4 = 2884.6
DL output with Mo: L = 58.8 + 3002.8 = 3061.5
DL input+output M: L = 187.9 + 5758.2 = 5946.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0100: a point with color red at (0,2)
  _010: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (95.8 bits)
data: a background with size (3,11) and color blue and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _0101: a rectangle with size (2,2) and color yellow and mask Full at (0,4)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,9)
diff: 
delta: (0,2)=2  (1,1)=1  (1,5)=1  (2,6)=2  (2,8)=2 
   (126.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0100: a point with color red at (0,2)
  _010: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0100: a point with color red at (0,2)
  _010: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff:   ^.layer_011.shape.color
delta:
! 14 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _0100: a point with color red at (2,2)
  _010: a rectangle with size (3,2) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (84.0 bits)
data: a background with size (3,11) and color pink and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (3,2) and color green and mask Full at (0,1)
  _0101: a rectangle with size (3,2) and color green and mask Full at (0,8)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,3) and color green and mask Full at (1,4)
diff: 
delta: (0,8)=2  (2,2)=2  (2,4)=2 
   (87.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _0100: a point with color green at (0,1)
  _010: a rectangle with size (3,2) and color green and mask xx|xx|x. at (0,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (2,2)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (0,1)
  _0100: a point with color grey at (0,3)
  _010: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff:   ^.layer_0.pos.j
delta: (2,2)=2 
! 11 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (2,2) and color orange and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (95.8 bits)
data: a background with size (3,11) and color cyan and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,2) and color orange and mask Full at (0,0)
  _0101: a rectangle with size (2,2) and color orange and mask Full at (0,5)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,2) and color orange and mask Full at (1,9)
diff: 
delta: (0,0)=2  (0,6)=2  (2,10)=2 
   (86.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (2,2) and color orange and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask .x|xx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff:   ^.layer_0.shape.size.i
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (0,0)
  _0100: a point with color red at (0,0)
  _010: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color orange and mask Full at (0,0)
diff:   ^.layer_011.shape.color
delta:
! 11 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.xx at (0,0)
  _0100: a point with color green at (0,0)
  _010: a rectangle with size (1,1) and color red and mask Full at (2,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (0,1)=3 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.xx at (0,0)
  _0100: a point with color green at (0,0)
  _010: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (2,0)=2 
! 9 wrong pixels (generated / expected)

TEST 8e5a5113.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 3002.8 bits (3002.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-186] Checking task 8eb1be9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10337.2 = 10346.1
DL output with Mo: L = 9.0 + 34320.6 = 34329.6
DL input+output M: L = 17.9 + 44657.8 = 44675.7

# learning a model for train pairs
2.000	
1.206	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.892	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.779	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.668	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.556	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 2103.1 = 2132.0
DL output with Mo: L = 85.3 + 11926.5 = 12011.8
DL input+output M: L = 114.2 + 14029.6 = 14143.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
diff: 
delta:
   (118.2 bits)
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (1,0)
  _01: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
  _011: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (7,0)
  _0111: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (10,0)
diff: 
delta: (0,5)=8  (0,11)=8  (0,17)=8  (13,2)=8  (13,8)=8  (13,14)=8  (14,0)=8  (14,1)=8  (14,2)=8  (14,3)=8  (14,4)=8  (14,5)=8  (14,6)=8  (14,7)=8  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=8  (14,16)=8  (14,17)=8  (14,18)=8 
   (921.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
diff: 
delta:
! size mismatch, 10x10 instead of 15x19

TRAIN 8eb1be9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x. at (3,0)
diff: 
delta:
   (92.1 bits)
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (10,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x. at (0,0)
  _01: a rectangle with size (2,11) and color black and mask Full at (2,1)
  _011: a rectangle with size (1,11) and color black and mask Full at (0,1)
  _0111: a rectangle with size (5,1) and color black and mask Full at (5,1)
diff: 
delta:
   (271.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x. at (3,0)
diff: 
delta:
! size mismatch, 10x10 instead of 10x12

TRAIN 8eb1be9a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (3,13) and color blue and mask .x..x..x..x..|x.xx.xx.xx.xx|x.xx.xx.xx.xx at (3,0)
diff: 
delta:
! size mismatch, 10x10 instead of 14x13

TEST 8eb1be9a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.9 sec (27.9 sec/task)
bits-train-error = 11926.5 bits (11926.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-185] Checking task 8efcae92.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 106845.6 = 106854.5
DL output with Mo: L = 9.0 + 5530.2 = 5539.2
DL input+output M: L = 17.9 + 112375.8 = 112393.7

# learning a model for train pairs
2.000	
1.687	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.411	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.106	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.914	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.818	OUT DEF: ^.size=^.layer_01.shape.size
0.725	OUT DEF: ^.layer_0.shape.size=^.layer_01.shape.size
0.683	OUT DEF: ^.color=red
0.657	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.651	OUT DEF: ^.layer_0.pos=(?,?)
0.626	OUT DEF: ^.layer_0.pos.j=(0)
0.605	OUT DEF: ^.layer_0.pos.i=(0)
0.604	IN  DEF: ^.layer_0.shape.color=blue
0.602	IN  DEF: ^.layer_01.shape.color=blue
0.601	IN  DEF: ^.layer_011.shape.color=blue
0.601	IN  DEF: ^.layer_0.shape.mask=Full
0.537	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.536	IN  DEF: ^.layer_011.shape.mask=Full
0.535	IN  OBJECT at ^.layer_00: a point with color ? at ?
0.534	IN  DEF: ^.layer_00.shape.color=red
0.533	IN  OBJECT at ^.layer_001: a point with color ? at ?
0.531	IN  DEF: ^.layer_001.shape.color=red
0.531	IN  OBJECT at ^.layer_0010: a point with color ? at ?
0.529	IN  DEF: ^.layer_0010.shape.color=red
0.528	IN  OBJECT at ^.layer_000: a point with color ? at ?
0.527	IN  DEF: ^.layer_000.shape.color=red
0.526	IN  DEF: ^.layer_0111.shape.mask=Full
0.525	IN  OBJECT at ^.layer_0001: a point with color ? at ?
0.524	IN  DEF: ^.layer_0001.shape.color=red
0.523	IN  OBJECT at ^.layer_00010: a point with color ? at ?
0.522	IN  DEF: ^.layer_00010.shape.color=red
0.521	IN  OBJECT at ^.layer_000100: a point with color ? at ?
0.520	IN  DEF: ^.layer_000100.shape.color=red
0.519	OUT DEF: ^.color=^.layer_000.shape.color
0.519	IN  DEF: ^.color=black
0.518	IN  DEF: ^.size=(?,?)
0.515	IN  DEF: ^.size.i=20
0.512	IN  DEF: ^.size.j=20
0.512	IN  DEF: ^.layer_000.pos=(?,?)
0.512	IN  DEF: ^.layer_000100.pos=(?,?)
0.511	IN  DEF: ^.layer_00010.pos=(?,?)
0.511	IN  DEF: ^.layer_0.pos=(?,?)
0.511	IN  DEF: ^.layer_0001.pos=(?,?)
0.510	IN  DEF: ^.layer_00.pos=(?,?)
0.510	IN  DEF: ^.layer_0010.pos=(?,?)
0.510	IN  DEF: ^.layer_001.pos=(?,?)
0.509	IN  DEF: ^.layer_0.shape.size=(?,?)
0.509	IN  DEF: ^.layer_01.pos=(?,?)
0.509	IN  DEF: ^.layer_01.shape.size=(?,?)
0.508	IN  DEF: ^.layer_011.pos=(?,?)
0.508	IN  DEF: ^.layer_011.shape.size=(?,?)
0.508	IN  DEF: ^.layer_0111.pos=(?,?)
0.507	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color ^.layer_000.shape.color and layers
  _0: a rectangle with size ^.layer_01.shape.size and color ^.layer_0.shape.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (20,20) and color black and layers
  _000: a point with color red at (?,?)
  _000100: a point with color red at (?,?)
  _00010: a point with color red at (?,?)
  _0001: a point with color red at (?,?)
  _00: a point with color red at (?,?)
  _0010: a point with color red at (?,?)
  _001: a point with color red at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 264.8 + 13587.1 = 13852.0
DL output with Mo: L = 40.8 + 2051.8 = 2092.6
DL input+output M: L = 305.6 + 15638.9 = 15944.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _000: a point with color red at (2,14)
  _000100: a point with color red at (4,5)
  _00010: a point with color red at (4,11)
  _0001: a point with color red at (4,16)
  _00: a point with color red at (5,4)
  _0010: a point with color red at (6,13)
  _001: a point with color red at (7,3)
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _01: a rectangle with size (5,6) and color blue and mask xxxxxx|x.x.xx|xx.x.x|x.xxxx|xxx.xx at (13,6)
  _011: a rectangle with size (6,5) and color blue and mask Full at (3,2)
  _0111: a rectangle with size (3,4) and color red and mask Full at (14,7)
diff: 
delta: (17,9)=2 
   (242.1 bits)
data: a background with size (5,6) and color red and layers
  _0: a rectangle with size (5,6) and color blue and mask xxxxxx|x.x.xx|xx.x.x|x.xxxx|xxx.xx at (0,0)
diff: 
delta:
   (33.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _000: a point with color red at (2,14)
  _000100: a point with color red at (4,5)
  _00010: a point with color red at (4,11)
  _0001: a point with color red at (4,16)
  _00: a point with color red at (5,4)
  _0010: a point with color red at (6,13)
  _001: a point with color red at (7,3)
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _01: a rectangle with size (5,6) and color blue and mask xxxxxx|x.x.xx|xx.x.x|x.xxxx|xxx.xx at (13,6)
  _011: a rectangle with size (6,5) and color blue and mask Full at (3,2)
  _0111: a rectangle with size (3,4) and color red and mask Full at (14,7)
diff: 
delta: (17,9)=2 
! 6 wrong pixels (generated / expected)

TRAIN 8efcae92.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _000: a point with color red at (2,6)
  _000100: a point with color red at (3,3)
  _00010: a point with color red at (3,10)
  _0001: a point with color red at (3,19)
  _00: a point with color red at (4,7)
  _0010: a point with color red at (4,16)
  _001: a point with color red at (5,5)
  _0: a rectangle with size (7,9) and color blue and mask Full at (13,0)
  _01: a rectangle with size (9,9) and color blue and mask Full at (2,2)
  _011: a rectangle with size (9,6) and color blue and mask Full at (3,14)
  _0111: a rectangle with size (4,6) and color blue and mask Full at (15,11)
diff: 
delta: (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (8,15)=2  (9,3)=2  (9,18)=2  (10,5)=2  (10,10)=2  (10,15)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
   (579.7 bits)
data: a background with size (9,9) and color red and layers
  _0: a rectangle with size (9,9) and color blue and mask xxxx.xxxx|x.xxxxxx.|xxxxx.xxx|xxx.xxx.x|.xxxxxxxx|xxxxxxxxx|xxxxx.xxx|x.xxxxxxx|xxx.xxxx. at (0,0)
diff: 
delta:
   (84.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _000: a point with color red at (2,6)
  _000100: a point with color red at (3,3)
  _00010: a point with color red at (3,10)
  _0001: a point with color red at (3,19)
  _00: a point with color red at (4,7)
  _0010: a point with color blue at (4,8)
  _001: a point with color blue at (4,9)
  _0: a rectangle with size (9,9) and color blue and mask Full at (2,2)
  _01: a rectangle with size (7,9) and color blue and mask Full at (13,0)
  _011: a rectangle with size (9,6) and color blue and mask xxxxxx|xx.xxx|xxxxxx|xxx.xx|xxxxxx|x.xxxx|xxxx.x|x.xxxx|xxxxxx at (3,14)
  _0111: a rectangle with size (4,6) and color blue and mask Full at (15,11)
diff:   ^.layer_011.shape.mask  ^.layer_001.shape.color  ^.layer_0010.shape.color
delta: (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (8,15)=2  (9,3)=2  (9,18)=2  (10,5)=2  (10,10)=2  (10,15)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
! size mismatch, 7x9 instead of 9x9

TRAIN 8efcae92.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _000: a point with color red at (0,1)
  _000100: a point with color red at (1,4)
  _00010: a point with color red at (2,3)
  _0001: a point with color red at (3,17)
  _00: a point with color red at (4,2)
  _0010: a point with color red at (4,5)
  _001: a point with color red at (4,11)
  _0: a rectangle with size (12,9) and color blue and mask Full at (2,9)
  _01: a rectangle with size (5,17) and color blue and mask Full at (15,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (0,1)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (10,3)
diff: 
delta: (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
   (536.9 bits)
data: a background with size (5,17) and color red and layers
  _0: a rectangle with size (5,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxx.xxxxx.xxx|xxx.xxxxx.xxxxxxx|x.xxxx.xxxxxxxxxx|xxxxxxxxxx.xx.xxx at (0,0)
diff: 
delta:
   (88.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _000: a point with color red at (0,1)
  _000100: a point with color blue at (0,2)
  _00010: a point with color blue at (0,3)
  _0001: a point with color blue at (1,1)
  _00: a point with color red at (1,4)
  _0010: a point with color red at (2,3)
  _001: a point with color red at (3,17)
  _0: a rectangle with size (12,9) and color blue and mask Full at (2,9)
  _01: a rectangle with size (5,17) and color blue and mask Full at (15,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (0,1)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (10,3)
diff:   ^.layer_0001.shape.color  ^.layer_00010.shape.color  ^.layer_000100.shape.color
delta: (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _000: a point with color red at (0,1)
  _000100: a point with color blue at (0,2)
  _00010: a point with color blue at (0,3)
  _0001: a point with color blue at (1,1)
  _00: a point with color red at (1,4)
  _0010: a point with color red at (2,3)
  _001: a point with color red at (3,17)
  _0: a rectangle with size (5,17) and color blue and mask Full at (15,2)
  _01: a rectangle with size (12,9) and color blue and mask Full at (2,9)
  _011: a rectangle with size (6,6) and color blue and mask Full at (0,1)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (10,3)
diff:   ^.layer_0001.shape.color  ^.layer_00010.shape.color  ^.layer_000100.shape.color
delta: (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 12x9 instead of 5x17

TRAIN 8efcae92.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _000: a point with color blue at (1,9)
  _000100: a point with color blue at (2,9)
  _00010: a point with color red at (2,14)
  _0001: a point with color red at (3,2)
  _00: a point with color blue at (3,9)
  _0010: a point with color red at (3,10)
  _001: a point with color red at (4,4)
  _0: a rectangle with size (18,5) and color blue and mask Full at (1,1)
  _01: a rectangle with size (9,10) and color blue and mask Full at (6,8)
  _011: a rectangle with size (3,9) and color blue and mask Full at (17,11)
  _0111: a rectangle with size (3,8) and color blue and mask Full at (1,9)
diff:   ^.layer_00.shape.color  ^.layer_000100.shape.color  ^.layer_000.shape.color
delta: (6,12)=2  (6,15)=2  (8,3)=2  (8,10)=2  (9,13)=2  (9,16)=2  (11,2)=2  (11,9)=2  (11,11)=2  (12,15)=2  (13,4)=2  (13,10)=2  (13,12)=2  (17,2)=2  (18,13)=2  (18,17)=2  (19,15)=2  (19,18)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _000: a point with color blue at (1,9)
  _000100: a point with color blue at (2,9)
  _00010: a point with color red at (2,14)
  _0001: a point with color red at (3,2)
  _00: a point with color blue at (3,9)
  _0010: a point with color red at (3,10)
  _001: a point with color red at (4,4)
  _0: a rectangle with size (9,10) and color blue and mask Full at (6,8)
  _01: a rectangle with size (18,5) and color blue and mask Full at (1,1)
  _011: a rectangle with size (3,9) and color blue and mask Full at (17,11)
  _0111: a rectangle with size (3,8) and color blue and mask Full at (1,9)
diff:   ^.layer_00.shape.color  ^.layer_000100.shape.color  ^.layer_000.shape.color
delta: (6,12)=2  (6,15)=2  (8,3)=2  (8,10)=2  (9,13)=2  (9,16)=2  (11,2)=2  (11,9)=2  (11,11)=2  (12,15)=2  (13,4)=2  (13,10)=2  (13,12)=2  (17,2)=2  (18,13)=2  (18,17)=2  (19,15)=2  (19,18)=2 
! size mismatch, 18x5 instead of 9x10

TEST 8efcae92.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 2051.8 bits (2051.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-184] Checking task 8f2ea7aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3164.8 = 3173.8
DL output with Mo: L = 9.0 + 11458.8 = 11467.8
DL input+output M: L = 17.9 + 14623.6 = 14641.6

# learning a model for train pairs
2.000	
1.583	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.205	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.156	OUT DEF: ^.size=^.size
1.113	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.066	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.051	IN  DEF: ^.color=black
1.039	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.027	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
1.015	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
1.004	IN  DEF: ^.size=(?,?)
0.924	IN  DEF: ^.size.i=9
0.843	IN  DEF: ^.size.j=9
0.832	IN  DEF: ^.layer_0.pos=(?,?)
0.821	IN  DEF: ^.layer_0.shape.size=(?,?)
0.770	IN  DEF: ^.layer_0.shape.size.j=3
0.766	OUT DEF: ^.color=black
0.763	OUT DEF: ^.layer_0.pos=(?,?)
0.760	OUT DEF: ^.layer_0.shape.size=(?,?)
0.757	OUT DEF: ^.layer_01.pos=(?,?)
0.754	OUT DEF: ^.layer_01.shape.size=(?,?)
0.751	OUT DEF: ^.layer_011.pos=(?,?)
0.740	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j - ^.layer_0.pos.i
0.727	OUT DEF: ^.layer_011.pos.i=(0)
0.713	OUT DEF: ^.layer_01.pos.j=6
0.702	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.i
0.699	OUT DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.i)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,6)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ((0),^.layer_0.pos.j - ^.layer_0.pos.i)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask ? at (?,?)

DL input  with Mi: L = 53.8 + 1099.6 = 1153.4
DL output with Mo: L = 105.0 + 3739.6 = 3844.6
DL input+output M: L = 158.8 + 4839.2 = 4998.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|..x at (0,0)
diff: 
delta: (2,0)=8 
   (47.6 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|..x at (6,0)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|..x at (3,6)
  _011: a rectangle with size (3,6) and color cyan and mask xx.xx.|..x..x|...x.. at (0,0)
diff: 
delta: (2,0)=8  (5,6)=8  (8,0)=8 
   (140.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|..x at (0,0)
diff: 
delta: (2,0)=8 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,2)
diff:   ^.layer_0.shape.size.j
delta: (0,0)=8  (0,1)=8  (2,0)=8 
! 20 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|.xx|x.. at (3,3)
diff: 
delta:
   (31.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (5,3)
  _01: a rectangle with size (1,1) and color orange and mask Full at (2,6)
  _011: a rectangle with size (9,9) and color orange and mask ........x|.......xx|......x..|.....x..x|....xx.xx|...x..x..|..x......|.xx......|x........ at (0,0)
diff: 
delta:
   (124.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|.xx|x.. at (3,3)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (4,4)
diff:   ^.layer_0.shape.size.j
delta: (3,5)=7# (5,3)=7#
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color orange and mask Full at (3,5)
diff:   ^.layer_0.shape.size.j
delta: (4,4)=7# (5,3)=7#
! 24 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (0,3)
diff: 
delta:
   (31.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color pink and mask .x....|x.x...|xx....|.x..x.|x.xx.x|xx.xx. at (3,0)
  _01: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (3,6)
  _011: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (0,3)
diff: 
delta:
   (109.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (0,3)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (2,3)
diff:   ^.layer_0.shape.size.j
delta: (0,4)=6  (1,3)=6  (1,5)=6 
! 33 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
negative integer

TEST 8f2ea7aa.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 16.1 sec (16.1 sec/task)
bits-train-error = 3739.6 bits (3739.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-183] Checking task 90c28cc7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 154592.4 = 154601.4
DL output with Mo: L = 9.0 + 2820.3 = 2829.2
DL input+output M: L = 17.9 + 157412.7 = 157430.6

# learning a model for train pairs
2.000	
1.724	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.525	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.341	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.185	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.101	OUT DEF: ^.color=^.layer_0.shape.color
1.089	OUT DEF: ^.size=(?,?)
1.088	IN  DEF: ^.layer_0111.shape.color=red
1.087	IN  DEF: ^.layer_0.shape.mask=Full
1.087	IN  DEF: ^.layer_01.shape.mask=Full
1.086	IN  DEF: ^.layer_011.shape.mask=Full
1.086	IN  DEF: ^.layer_0111.shape.mask=Full
1.086	IN  DEF: ^.color=black
1.085	IN  DEF: ^.size=(?,?)
1.083	IN  DEF: ^.size.i=21
1.081	IN  DEF: ^.size.j=21
1.081	IN  DEF: ^.layer_0.pos=(?,?)
1.081	IN  DEF: ^.layer_0.shape.size=(?,?)
1.080	IN  DEF: ^.layer_01.pos=(?,?)
1.080	IN  DEF: ^.layer_01.shape.size=(?,?)
1.080	IN  DEF: ^.layer_011.pos=(?,?)
1.080	IN  DEF: ^.layer_011.shape.size=(?,?)
1.080	IN  DEF: ^.layer_0111.pos=(?,?)
1.079	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (21,21) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 138.2 + 27067.1 = 27205.2
DL output with Mo: L = 14.3 + 2541.6 = 2555.9
DL input+output M: L = 152.4 + 29608.7 = 29761.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (5,8) and color red and mask Full at (11,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
   (1819.9 bits)
data: a background with size (3,3) and color orange and layers
diff: 
delta: (0,0)=8  (1,0)=3  (1,1)=4  (1,2)=1  (2,0)=2  (2,1)=5# (2,2)=5#
   (124.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (5,8) and color red and mask Full at (11,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _01: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _011: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (5,8) and color red and mask Full at (11,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN 90c28cc7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (7,7) and color blue and mask Full at (9,1)
  _0111: a rectangle with size (8,7) and color red and mask Full at (1,1)
diff: 
delta:
   (124.7 bits)
data: a background with size (2,2) and color cyan and layers
diff: 
delta: (0,0)=2  (1,0)=1  (1,1)=4 
   (55.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (7,7) and color blue and mask Full at (9,1)
  _0111: a rectangle with size (8,7) and color red and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _01: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _011: a rectangle with size (7,7) and color blue and mask Full at (9,1)
  _0111: a rectangle with size (8,7) and color red and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 90c28cc7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (13,8)
  _0111: a rectangle with size (5,6) and color red and mask Full at (2,8)
diff: 
delta: (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8 
   (762.1 bits)
data: a background with size (3,2) and color green and layers
diff: 
delta: (0,0)=8  (0,1)=2  (2,0)=4  (2,1)=1 
   (73.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (13,8)
  _0111: a rectangle with size (5,6) and color red and mask Full at (2,8)
diff: 
delta: (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8 
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _01: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (13,8)
  _0111: a rectangle with size (5,6) and color red and mask Full at (2,8)
diff: 
delta: (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8 
! size mismatch, 10x10 instead of 3x2

TRAIN 90c28cc7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (7,6)
  _01: a rectangle with size (8,18) and color cyan and mask Full at (7,1)
  _011: a rectangle with size (18,8) and color yellow and mask Full at (1,6)
  _0111: a rectangle with size (18,5) and color red and mask Full at (1,1)
diff: 
delta: (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,18)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (3,18)=1  (4,14)=1  (4,15)=1  (4,16)=1  (4,17)=1  (4,18)=1  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,14)=2  (18,15)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 3x3

TEST 90c28cc7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.7 sec (3.7 sec/task)
bits-train-error = 2541.6 bits (2541.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-182] Checking task 90f3ed37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11431.7 = 11440.7
DL output with Mo: L = 9.0 + 20444.1 = 20453.0
DL input+output M: L = 17.9 + 31875.8 = 31893.7

# learning a model for train pairs
2.000	
1.601	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.331	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.167	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.032	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.905	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.796	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
0.720	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.647	OUT OBJECT at ^.layer_01111: ^.layer_011.shape at ?
0.617	OUT DEF: ^.size=^.size
0.597	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
0.581	OUT DEF: ^.layer_0=^.layer_0
0.564	OUT DEF: ^.layer_0111=^.layer_01
0.547	OUT DEF: ^.layer_01111=^.layer_011
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_01
  _01111: ^.layer_011
  _011111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 4393.5 = 4460.2
DL output with Mo: L = 81.0 + 3141.2 = 3222.2
DL input+output M: L = 147.8 + 7534.6 = 7682.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
  _011: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
diff: 
delta:
   (161.5 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (12,3)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
  _01111: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _011111: a rectangle with size (1,6) and color blue and mask Full at (8,4)
diff: 
delta:
   (84.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
  _011: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
diff: 
delta: (13,0)=8  (13,1)=8 
   (150.2 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,8) and color blue and mask Full at (13,2)
  _011: a rectangle with size (1,7) and color blue and mask Full at (6,3)
  _0111: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
  _011111: a rectangle with size (1,6) and color blue and mask Full at (11,4)
diff: 
delta: (13,0)=8  (13,1)=8 
   (132.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
diff: 
delta: (13,0)=8  (13,1)=8 
! 27 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _011: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
diff: 
delta:
   (127.7 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,7) and color blue and mask Odd Checkboard at (6,3)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (6,0)
  _0111: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _01111: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
  _011111: a rectangle with size (2,5) and color blue and mask Odd Checkboard at (10,5)
diff: 
delta:
   (96.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _011: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _01: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _011: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask ..xxxxxxxx|xx........|..xxxxxxxx at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (8,3)
  _011: a rectangle with size (3,5) and color cyan and mask ...xx|xxx..|...xx at (8,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 90f3ed37.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.5 sec (25.5 sec/task)
bits-train-error = 3141.2 bits (3141.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-181] Checking task 913fb3ed.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2255.1 = 2264.1
DL output with Mo: L = 9.0 + 13147.3 = 13156.3
DL input+output M: L = 17.9 + 15402.4 = 15420.3

# learning a model for train pairs
2.000	
1.629	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.436	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.351	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.294	OUT DEF: ^.size=^.size
1.241	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.215	IN  DEF: ^.color=black
1.193	IN  DEF: ^.size=(?,?)
1.172	IN  DEF: ^.layer_0.pos=(?,?)
1.163	OUT DEF: ^.layer_01.shape.mask=Full
1.156	OUT DEF: ^.layer_0.shape.mask=Full
1.149	OUT DEF: ^.layer_011.shape.mask=Full
1.144	OUT DEF: ^.color=black
1.141	OUT DEF: ^.layer_0.pos=(?,?)
1.128	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i - 1
1.115	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - 1
1.111	OUT DEF: ^.layer_0.shape.size=(?,?)
1.095	OUT DEF: ^.layer_0.shape.size.j=3
1.091	OUT DEF: ^.layer_01.pos=(?,?)
1.087	OUT DEF: ^.layer_01.shape.size=(?,?)
1.084	OUT DEF: ^.layer_011.pos=(?,?)
1.080	OUT DEF: ^.layer_011.shape.size=(?,?)
1.063	OUT DEF: ^.layer_011.shape.size.i=3
1.047	OUT DEF: ^.layer_011.shape.size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask Full at (^.layer_0.pos.i - 1,^.layer_0.pos.j - 1)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (3,3) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1885.3 = 1914.9
DL output with Mo: L = 115.7 + 2529.6 = 2645.3
DL input+output M: L = 145.4 + 4414.9 = 4560.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (4,5)
diff: 
delta: (5,1)=3  (6,8)=2 
   (75.5 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color pink and mask Full at (4,0)
  _011: a rectangle with size (3,3) and color blue and mask Full at (5,7)
diff: 
delta: (4,5)=8  (5,1)=3  (6,8)=2 
   (112.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (4,5)
diff: 
delta: (5,1)=3  (6,8)=2 
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (5,1)
diff: 
delta: (4,5)=8  (6,8)=2 
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a point with color red at (6,8)
diff: 
delta: (4,5)=8  (5,1)=3 
! 36 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
   (27.4 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (0,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,3)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,2)
diff: 
delta:
   (36.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (3,12)
diff: 
delta: (10,3)=2 
   (58.2 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (2,11)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,3)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,2)
diff: 
delta: (3,12)=3 
   (67.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (3,12)
diff: 
delta: (10,3)=2 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a point with color red at (10,3)
diff: 
delta: (3,12)=3 
! 27 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (2,2)
diff: 
delta:
   (27.4 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (36.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (2,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (1,1)
diff: 
delta: (10,13)=2  (14,2)=8 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a point with color red at (10,13)
diff: 
delta: (1,1)=3  (14,2)=8 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a point with color cyan at (14,2)
diff: 
delta: (1,1)=3  (10,13)=2 
! 27 wrong pixels (generated / expected)

TEST 913fb3ed.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.0 sec (8.0 sec/task)
bits-train-error = 2529.6 bits (2529.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-180] Checking task 91413438.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3012.9 = 3021.8
DL output with Mo: L = 9.0 + 17850.2 = 17859.2
DL input+output M: L = 17.9 + 20863.1 = 20881.0

# learning a model for train pairs
2.000	
1.232	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.881	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.855	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.835	IN  DEF: ^.color=black
0.819	IN  DEF: ^.size=(?,?)
0.747	IN  DEF: ^.size.i=3
0.675	IN  DEF: ^.size.j=3
0.659	IN  DEF: ^.layer_0.pos=(?,?)
0.621	IN  DEF: ^.layer_0.pos.i=0
0.582	IN  DEF: ^.layer_0.pos.j=0
0.566	IN  DEF: ^.layer_0.shape.size=(?,?)
0.494	IN  DEF: ^.layer_0.shape.size.j=3
0.484	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.480	OUT DEF: ^.color=black
0.478	OUT DEF: ^.size=(?,?)
0.475	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,3) and color ? and mask ? at (0,0)

DL input  with Mi: L = 46.6 + 821.9 = 868.6
DL output with Mo: L = 34.1 + 3312.4 = 3346.5
DL input+output M: L = 80.7 + 4134.4 = 4215.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (0,0)
diff: 
delta:
   (22.2 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (6,12) and color pink and mask xx.xx.xx.xx.|.xx.xx.xx.xx|..x..x..x..x|xx..........|.xx.........|..x......... at (0,0)
diff: 
delta:
   (111.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,2) and color black and mask x.|xx at (1,0)
diff:   ^.color  ^.layer_0.shape.size.j  ^.layer_0.pos.i
delta: (0,2)=0 
! size mismatch, 10x10 instead of 12x12

TRAIN 91413438.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
   (22.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,12) and color yellow and mask .x..x..x..x.|.xx.xx.xx.xx|x..x..x..x.. at (0,0)
diff: 
delta:
   (74.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,1)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta: (1,2)=4  (2,0)=4 
! size mismatch, 10x10 instead of 15x15

TRAIN 91413438.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|x.x|.xx at (0,0)
diff: 
delta:
   (22.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,9) and color green and mask x.xx.xx.x|x.xx.xx.x|.xx.xx.xx|x.xx.xx.x|x.xx.xx.x|.xx.xx.xx at (0,0)
diff: 
delta:
   (90.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|x.x|.xx at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,2) and color black and mask .x|.x|x. at (0,0)
diff:   ^.color  ^.layer_0.shape.size.j
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN 91413438.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
   (15.6 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (2,9) and color red and mask x.xx.xx.x|.x..x..x. at (0,0)
diff: 
delta:
   (55.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 18x18

TRAIN 91413438.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,1)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta:
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta: (1,1)=8 
! size mismatch, 10x10 instead of 21x21
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (0,2)=8 
! size mismatch, 10x10 instead of 21x21

TEST 91413438.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 3312.4 bits (3312.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-179] Checking task 91714a58.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 56182.3 = 56191.3
DL output with Mo: L = 9.0 + 8010.0 = 8019.0
DL input+output M: L = 17.9 + 64192.4 = 64210.3

# learning a model for train pairs
2.000	
1.211	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.100	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.980	OUT DEF: ^.layer_0=^.layer_0
0.898	OUT DEF: ^.size=^.size
0.876	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.871	OUT DEF: ^.color=black
0.869	IN  DEF: ^.layer_0.shape.mask=Full
0.869	IN  DEF: ^.color=black
0.868	IN  DEF: ^.size=(?,?)
0.863	IN  DEF: ^.size.i=16
0.857	IN  DEF: ^.size.j=16
0.857	IN  DEF: ^.layer_0.pos=(?,?)
0.856	IN  DEF: ^.layer_0.shape.size=(?,?)
0.855	IN  DEF: ^.layer_01.pos=(?,?)
0.855	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
WHERE (Mi)
a background with size (16,16) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 82.4 + 47863.0 = 47945.4
DL output with Mo: L = 12.2 + 0.0 = 12.2
DL input+output M: L = 94.6 + 47863.0 = 47957.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
  _01: a rectangle with size (2,3) and color orange and mask Full at (7,7)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,3)=2  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
   (1809.2 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask Full at (7,7)
  _01: a rectangle with size (5,3) and color red and mask x..|xxx|xxx|xxx|xxx at (2,3)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
  _01: a rectangle with size (2,3) and color orange and mask Full at (7,7)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,3)=2  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
correct output grid

TRAIN 91714a58.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
  _01: a rectangle with size (2,4) and color red and mask xx.x|..x. at (3,0)
diff: 
delta: (0,2)=7# (0,5)=6  (0,7)=6  (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,0)=4  (5,1)=4  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
   (1697.5 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
  _01: a rectangle with size (2,4) and color red and mask xx.x|..x. at (3,0)
diff: 
delta: (0,2)=7# (0,5)=6  (0,7)=6  (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,0)=4  (5,1)=4  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
correct output grid

TRAIN 91714a58.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
  _01: a rectangle with size (4,1) and color grey and mask Full at (12,10)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (4,7)=7# (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
   (1279.6 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (12,10)
  _01: a rectangle with size (3,4) and color orange and mask .xxx|.xxx|xxxx at (2,7)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
  _01: a rectangle with size (4,1) and color grey and mask Full at (12,10)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (4,7)=7# (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
correct output grid

TRAIN 91714a58.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (6,1)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|xxxxxx|x..... at (10,5)
diff: 
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,10)=3  (4,11)=8  (4,14)=5# (5,1)=8  (5,10)=3  (5,11)=7# (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,6)=7# (14,7)=7# (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (14,6)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|xxxxxx|x..... at (10,5)
diff: 
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,10)=3  (4,11)=8  (4,14)=5# (5,1)=8  (5,10)=3  (5,11)=7# (6,1)=1  (6,2)=1  (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (4,10)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|xxxxxx|x..... at (10,5)
diff: 
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,11)=8  (4,14)=5# (5,1)=8  (5,11)=7# (6,1)=1  (6,2)=1  (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,6)=7# (14,7)=7# (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 14 wrong pixels (generated / expected)

TEST 91714a58.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-178] Checking task 9172f3a0.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1921.0 = 1930.0
DL output with Mo: L = 9.0 + 17357.0 = 17366.0
DL input+output M: L = 17.9 + 19278.0 = 19296.0

# learning a model for train pairs
2.000	
1.576	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.259	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.117	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.035	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.993	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.946	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.931	OUT DEF: ^.layer_011.shape.size=^.size
0.922	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.908	OUT DEF: ^.layer_01.shape.size=^.size
0.896	OUT DEF: ^.layer_0111.pos=^.size
0.880	IN  DEF: ^.color=black
0.869	IN  DEF: ^.size=(?,?)
0.813	IN  DEF: ^.size.i=3
0.757	IN  DEF: ^.size.j=3
0.746	IN  DEF: ^.layer_0.pos=(?,?)
0.715	IN  DEF: ^.layer_0.pos.i=0
0.704	IN  DEF: ^.layer_0.shape.size=(?,?)
0.660	IN  DEF: ^.layer_0.shape.size.j=2
0.649	IN  DEF: ^.layer_01.pos=(?,?)
0.618	IN  DEF: ^.layer_01.pos.j=0
0.607	IN  DEF: ^.layer_011.pos=(?,?)
0.577	IN  DEF: ^.layer_011.pos.i=2
0.546	IN  DEF: ^.layer_011.pos.j=2
0.541	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.536	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.530	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
0.527	OUT DEF: ^.layer_0.shape.mask=Full
0.525	OUT DEF: ^.layer_01.shape.mask=Full
0.522	OUT DEF: ^.layer_011.shape.mask=Full
0.519	OUT DEF: ^.layer_0111.shape.mask=Full
0.517	OUT DEF: ^.color=black
0.516	OUT DEF: ^.size=(?,?)
0.507	OUT DEF: ^.size.i=9
0.497	OUT DEF: ^.size.j=9
0.496	OUT DEF: ^.layer_0.pos=(?,?)
0.490	OUT DEF: ^.layer_0.pos.i=(0)
0.489	OUT DEF: ^.layer_0.shape.size=(?,?)
0.488	OUT DEF: ^.layer_01.pos=(?,?)
0.483	OUT DEF: ^.layer_01.pos.j=(0)
0.482	OUT DEF: ^.layer_011.pos=(?,?)
0.476	OUT DEF: ^.layer_011.pos.i=6
0.471	OUT DEF: ^.layer_011.pos.j=6
0.470	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.464	OUT DEF: ^.layer_0111.shape.size.i=^.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at ((0),?)
  _01: a rectangle with size ^.size and color ^.layer_01.shape.color and mask Full at (?,(0))
  _011: a rectangle with size ^.size and color ^.layer_011.shape.color and mask Full at (6,6)
  _0111: a rectangle with size (^.size.i,?) and color ? and mask Full at ^.size
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,2) and color ? and mask ? at (0,?)
  _01: a point with color ? at (?,0)
  _011: a point with color ? at (2,2)

DL input  with Mi: L = 78.5 + 729.4 = 807.9
DL output with Mo: L = 124.0 + 662.1 = 786.1
DL input+output M: L = 202.5 + 1391.5 = 1594.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color orange at (1,0)
  _011: a point with color yellow at (2,2)
diff: 
delta: (1,1)=4 
   (41.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,6) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask Full at (3,0)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (6,6)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta:
   (32.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color orange at (1,0)
  _011: a point with color yellow at (2,2)
diff: 
delta: (1,1)=4 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (2,2)
diff:   ^.layer_01.pos.j
delta: (1,0)=7#
! 32 wrong pixels (generated / expected)

TRAIN 9172f3a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color green at (2,2)
diff: 
delta:
   (31.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,3) and color red and mask Full at (0,6)
  _01: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,6)
  _0111: a rectangle with size (3,6) and color red and mask Full at (3,3)
diff: 
delta:
   (34.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color green at (2,2)
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,1)
  _01: a point with color black at (1,0)
  _011: a point with color green at (2,2)
diff: 
delta: (0,0)=3 
! 36 wrong pixels (generated / expected)

TRAIN 9172f3a0.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a point with color pink at (2,0)
  _011: a point with color pink at (1,2)
diff:   ^.layer_011.pos.i  ^.layer_0.shape.size.j
delta: (2,1)=1 
! 60 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a point with color pink at (2,0)
  _011: a point with color blue at (2,1)
diff:   ^.layer_011.pos.j  ^.layer_0.shape.size.j
delta: (1,2)=6 
! 60 wrong pixels (generated / expected)

TEST 9172f3a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.7 sec (8.7 sec/task)
bits-train-error = 662.1 bits (662.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-177] Checking task 928ad970.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9222.3 = 9231.3
DL output with Mo: L = 9.0 + 29120.2 = 29129.2
DL input+output M: L = 17.9 + 38342.6 = 38360.5

# learning a model for train pairs
2.000	
1.358	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.817	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.622	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.601	OUT DEF: ^.size=^.size
0.586	IN  DEF: ^.layer_0.shape.mask=Border
0.573	IN  OBJECT at ^.layer_00: a point with color ? at ?
0.560	IN  OBJECT at ^.layer_001: a point with color ? at ?
0.546	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.528	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.516	OUT DEF: ^.layer_01=^.layer_0
0.508	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.499	OUT OBJECT at ^.layer_001: ^.layer_001.shape at ?
0.489	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.479	OUT OBJECT at ^.layer_0111: ^.layer_00.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00.shape at ?
  _001: ^.layer_001.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_0
  _011: ^.layer_011.shape at ?
  _0111: ^.layer_00.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a point with color ? at ?
  _001: a point with color ? at ?
  _0: a rectangle with size ? and color ? and mask Border at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?

DL input  with Mi: L = 78.5 + 3490.7 = 3569.3
DL output with Mo: L = 74.0 + 2612.7 = 2686.7
DL input+output M: L = 152.6 + 6103.4 = 6256.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _00: a point with color grey at (1,4)
  _001: a point with color grey at (6,1)
  _0: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _01: a point with color grey at (6,11)
  _011: a point with color grey at (11,4)
diff: 
delta:
   (114.6 bits)
data: a background with size (12,13) and color black and layers
  _00: a point with color grey at (1,4)
  _001: a point with color grey at (6,1)
  _0: a rectangle with size (9,9) and color blue and mask Border at (2,2)
  _01: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _011: a point with color grey at (6,11)
  _0111: a point with color grey at (11,4)
diff: 
delta:
   (85.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _00: a point with color grey at (1,4)
  _001: a point with color grey at (6,1)
  _0: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _01: a point with color grey at (6,11)
  _011: a point with color grey at (11,4)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TRAIN 928ad970.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,13) and color black and layers
  _00: a point with color grey at (1,5)
  _001: a point with color grey at (5,1)
  _0: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _01: a point with color grey at (8,10)
  _011: a point with color grey at (12,5)
diff: 
delta:
   (116.0 bits)
data: a background with size (15,13) and color black and layers
  _00: a point with color grey at (1,5)
  _001: a point with color grey at (5,1)
  _0: a rectangle with size (10,8) and color green and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _011: a point with color grey at (8,10)
  _0111: a point with color grey at (12,5)
diff: 
delta:
   (87.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _00: a point with color grey at (1,5)
  _001: a point with color grey at (5,1)
  _0: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _01: a point with color grey at (8,10)
  _011: a point with color grey at (12,5)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TRAIN 928ad970.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _00: a point with color grey at (2,6)
  _001: a point with color grey at (6,12)
  _0: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _01: a point with color grey at (8,1)
  _011: a point with color grey at (13,7)
diff: 
delta:
   (118.4 bits)
data: a background with size (15,14) and color black and layers
  _00: a point with color grey at (2,6)
  _001: a point with color grey at (6,12)
  _0: a rectangle with size (10,10) and color yellow and mask Border at (3,2)
  _01: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _011: a point with color grey at (8,1)
  _0111: a point with color grey at (13,7)
diff: 
delta:
   (88.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _00: a point with color grey at (2,6)
  _001: a point with color grey at (6,12)
  _0: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _01: a point with color grey at (8,1)
  _011: a point with color grey at (13,7)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TRAIN 928ad970.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a point with color grey at (1,7)
  _001: a point with color grey at (6,2)
  _0: a rectangle with size (3,4) and color cyan and mask Border at (5,5)
  _01: a point with color grey at (9,12)
  _011: a point with color grey at (13,5)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TEST 928ad970.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.4 sec (25.4 sec/task)
bits-train-error = 2612.7 bits (2612.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-176] Checking task 93b581b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2763.0 = 2772.0
DL output with Mo: L = 9.0 + 10019.2 = 10028.1
DL input+output M: L = 17.9 + 12782.2 = 12800.1

# learning a model for train pairs
2.000	
1.869	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.771	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.672	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.588	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.539	OUT DEF: ^.size=^.size
1.497	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.454	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.406	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.349	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.323	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
1.297	OUT OBJECT at ^.layer_011111: ^.layer_01.shape at ?
1.270	OUT OBJECT at ^.layer_0111111: ^.layer_011.shape at ?
1.240	OUT OBJECT at ^.layer_01111111: ^.layer_0111.shape at ?
1.212	OUT DEF: ^.layer_01111=^.layer_0
1.184	OUT DEF: ^.layer_011111=^.layer_01
1.157	OUT DEF: ^.layer_0111111=^.layer_011
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_0
  _011111: ^.layer_01
  _0111111: ^.layer_011
  _01111111: ^.layer_0111.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?

DL input  with Mi: L = 58.8 + 2186.5 = 2245.2
DL output with Mo: L = 109.7 + 3365.9 = 3475.6
DL input+output M: L = 168.4 + 5552.3 = 5720.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color orange at (3,2)
  _0111: a point with color cyan at (3,3)
diff: 
delta:
   (72.9 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color orange and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color green and mask Full at (4,0)
  _0111: a rectangle with size (2,2) and color brown and mask Full at (4,4)
  _01111: a point with color brown at (2,2)
  _011111: a point with color green at (2,3)
  _0111111: a point with color orange at (3,2)
  _01111111: a point with color cyan at (3,3)
diff: 
delta:
   (114.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color orange at (3,2)
  _0111: a point with color cyan at (3,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color cyan at (3,3)
  _0111: a point with color orange at (3,2)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 93b581b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color red at (2,1)
  _0111: a point with color blue at (2,2)
diff: 
delta:
   (72.9 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color pink and mask Full at (3,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01111: a point with color yellow at (1,1)
  _011111: a point with color pink at (1,2)
  _0111111: a point with color red at (2,1)
  _01111111: a point with color blue at (2,2)
diff: 
delta:
   (106.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color red at (2,1)
  _0111: a point with color blue at (2,2)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color blue at (2,2)
  _0111: a point with color red at (2,1)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 93b581b8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color grey at (3,2)
  _0111: a point with color red at (3,3)
diff: 
delta:
   (72.9 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color pink and mask Full at (4,0)
  _0111: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _01111: a point with color green at (2,2)
  _011111: a point with color pink at (2,3)
  _0111111: a point with color grey at (3,2)
  _01111111: a point with color red at (3,3)
diff: 
delta:
   (114.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color grey at (3,2)
  _0111: a point with color red at (3,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color red at (3,3)
  _0111: a point with color grey at (3,2)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 93b581b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color blue at (3,3)
  _011: a point with color red at (4,2)
  _0111: a point with color grey at (4,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color blue at (3,3)
  _011: a point with color grey at (4,3)
  _0111: a point with color red at (4,2)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST 93b581b8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.5 sec (23.5 sec/task)
bits-train-error = 3365.9 bits (3365.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-175] Checking task 941d9a10.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 26024.8 = 26033.7
DL output with Mo: L = 9.0 + 30195.7 = 30204.6
DL input+output M: L = 17.9 + 56220.4 = 56238.4

# learning a model for train pairs
2.000	
1.184	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.486	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.369	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.319	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.298	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.279	OUT DEF: ^.size=^.size
0.269	OUT DEF: ^.layer_0=^.layer_0
0.258	OUT DEF: ^.layer_0111.pos=^.layer_0.pos
0.253	IN  DEF: ^.layer_0.shape.color=grey
0.248	OUT DEF: ^.layer_0111.shape.color=blue
0.244	OUT DEF: ^.layer_01.shape.color=red
0.239	OUT DEF: ^.layer_011.shape.color=green
0.237	OUT DEF: ^.layer_01.shape.mask=Full
0.234	OUT DEF: ^.layer_011.shape.mask=Full
0.232	OUT DEF: ^.layer_0111.shape.mask=Full
0.230	IN  DEF: ^.color=black
0.229	OUT DEF: ^.color=black
0.227	IN  DEF: ^.layer_0.shape.size=(?,?)
0.217	IN  DEF: ^.layer_0.shape.size.i=10
0.207	IN  DEF: ^.layer_0.shape.size.j=10
0.206	IN  DEF: ^.layer_0.pos=(?,?)
0.200	IN  DEF: ^.layer_0.pos.i=(0)
0.195	IN  DEF: ^.layer_0.pos.j=(0)
0.194	IN  DEF: ^.size=(?,?)
0.184	IN  DEF: ^.size.i=10
0.174	IN  DEF: ^.size.j=10
0.172	OUT DEF: ^.layer_01.pos=(?,?)
0.168	OUT DEF: ^.layer_01.pos.i=4
0.167	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.166	OUT DEF: ^.layer_01.shape.size=(?,?)
0.164	OUT DEF: ^.layer_011.pos=(?,?)
0.163	OUT DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (4,?)
  _011: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask Full at ^.layer_0.pos
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ? at ((0),(0))

DL input  with Mi: L = 65.9 + 3091.8 = 3157.6
DL output with Mo: L = 93.6 + 1174.4 = 1267.9
DL input+output M: L = 159.4 + 4266.2 = 4425.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
diff: 
delta:
   (103.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (4,3)
  _011: a rectangle with size (2,2) and color green and mask Full at (8,8)
  _0111: a rectangle with size (3,2) and color blue and mask Full at (0,0)
diff: 
delta:
   (44.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 941d9a10.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
diff: 
delta:
   (103.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
  _01: a rectangle with size (2,4) and color red and mask Full at (4,4)
  _011: a rectangle with size (1,1) and color green and mask Full at (9,9)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (37.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 941d9a10.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
diff: 
delta:
   (103.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,5)
  _011: a rectangle with size (3,1) and color green and mask Full at (7,9)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (36.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 941d9a10.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x. at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TEST 941d9a10.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.9 sec (2.9 sec/task)
bits-train-error = 1174.4 bits (1174.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-174] Checking task 94f9d214.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12652.4 = 12661.4
DL output with Mo: L = 9.0 + 2549.4 = 2558.4
DL input+output M: L = 17.9 + 15201.8 = 15219.8

# learning a model for train pairs
2.000	
1.593	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.351	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.160	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.088	OUT DEF: ^.layer_0.shape.color=red
1.064	OUT DEF: ^.color=black
1.046	OUT DEF: ^.size=(?,?)
0.947	OUT DEF: ^.size.j=^.size.j
0.850	OUT DEF: ^.size.i=^.size.j
0.831	OUT DEF: ^.layer_0.pos=(?,?)
0.812	OUT DEF: ^.layer_0.shape.size=(?,?)
0.797	IN  DEF: ^.layer_0.shape.color=blue
0.783	IN  DEF: ^.layer_01.shape.color=green
0.778	IN  DEF: ^.color=black
0.774	IN  DEF: ^.size=(?,?)
0.748	IN  DEF: ^.size.i=8
0.729	IN  DEF: ^.size.j=4
0.725	IN  DEF: ^.layer_0.pos=(?,?)
0.711	IN  DEF: ^.layer_0.pos.i=4
0.707	IN  DEF: ^.layer_0.shape.size=(?,?)
0.689	IN  DEF: ^.layer_0.shape.size.i=4
0.685	IN  DEF: ^.layer_01.pos=(?,?)
0.682	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.j,^.size.j) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,?) and color blue and mask ? at (4,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 84.0 + 3352.3 = 3436.3
DL output with Mo: L = 46.8 + 1002.6 = 1049.4
DL input+output M: L = 130.8 + 4354.9 = 4485.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|x.xx|xxxx|.x.x at (4,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (1,1)
diff: 
delta: (3,0)=3  (3,3)=3 
   (83.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (3,2)=2 
   (35.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|x.xx|xxxx|.x.x at (4,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (1,1)
diff: 
delta: (3,0)=3  (3,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN 94f9d214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (4,3)
  _01: a rectangle with size (3,4) and color green and mask xxxx|.xx.|..xx at (0,0)
diff: 
delta: (3,0)=3  (6,1)=1  (6,3)=0  (7,0)=1 
   (116.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|.xx at (1,0)
diff: 
delta:
   (29.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (4,3)
  _01: a rectangle with size (3,4) and color green and mask xxxx|.xx.|..xx at (0,0)
diff: 
delta: (3,0)=3  (6,1)=1  (6,3)=0  (7,0)=1 
! 6 wrong pixels (generated / expected)

TRAIN 94f9d214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|xx..|xx..|.xx. at (4,0)
  _01: a rectangle with size (4,4) and color green and mask .xx.|.x.x|..x.|xxxx at (0,0)
diff: 
delta:
   (68.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Even Checkboard at (1,2)
diff: 
delta:
   (21.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|xx..|xx..|.xx. at (4,0)
  _01: a rectangle with size (4,4) and color green and mask .xx.|.x.x|..x.|xxxx at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 94f9d214.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.xxx|x.xx|.xxx at (4,0)
  _01: a rectangle with size (4,4) and color green and mask xxxx|x...|x.xx|xx.x at (0,0)
diff: 
delta:
   (68.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,1)
diff: 
delta:
   (13.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.xxx|x.xx|.xxx at (4,0)
  _01: a rectangle with size (4,4) and color green and mask xxxx|x...|x.xx|xx.x at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 94f9d214.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ..xx|..xx|.x..|xx.. at (4,0)
  _01: a rectangle with size (4,4) and color green and mask .x.x|xxx.|...x|xxx. at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TEST 94f9d214.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.9 sec (4.9 sec/task)
bits-train-error = 1002.6 bits (1002.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-173] Checking task 952a094c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12984.0 = 12992.9
DL output with Mo: L = 9.0 + 12984.0 = 12992.9
DL input+output M: L = 17.9 + 25967.9 = 25985.8

# learning a model for train pairs
2.000	
1.317	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.634	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.551	OUT DEF: ^.layer_0=^.layer_0
0.507	OUT DEF: ^.size=^.size
0.496	IN  DEF: ^.layer_0.shape.mask=Border
0.487	OUT OBJECT at ^.layer_01: a point with color ? at ?
0.477	OUT DEF: ^.layer_01.shape.color=green
0.467	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.457	OUT DEF: ^.layer_011.shape.color=red
0.446	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.434	OUT OBJECT at ^.layer_01111: a point with color ? at ?
0.425	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.414	OUT DEF: ^.layer_01111.shape=^.layer_01.shape
0.405	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.395	IN  DEF: ^.layer_011.shape.color=red
0.384	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.372	IN  OBJECT at ^.layer_01110: a point with color ? at ?
0.361	OUT DEF: ^.layer_0111.shape=^.layer_0111.shape
0.351	IN  DEF: ^.layer_01110.shape.color=green
0.347	OUT DEF: ^.color=black
0.344	IN  DEF: ^.color=black
0.341	IN  DEF: ^.size=(?,?)
0.321	IN  DEF: ^.size.i=10
0.301	IN  DEF: ^.size.j=10
0.298	IN  DEF: ^.layer_0.pos=(?,?)
0.295	OUT DEF: ^.layer_01.pos=(?,?)
0.285	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j - 2
0.283	OUT DEF: ^.layer_011.pos=(?,?)
0.273	OUT DEF: ^.layer_011.pos.j=^.layer_01110.pos.j + 2
0.270	OUT DEF: ^.layer_0111.pos=(?,?)
0.261	OUT DEF: ^.layer_0111.pos.j=^.layer_0.pos.j - 1
0.258	OUT DEF: ^.layer_01111.pos=(?,?)
0.248	OUT DEF: ^.layer_01111.pos.j=^.layer_01110.pos.j + 2
0.245	IN  DEF: ^.layer_0.shape.size=(?,?)
0.243	IN  DEF: ^.layer_01110.pos=(?,?)
0.240	IN  DEF: ^.layer_01.pos=(?,?)
0.237	IN  DEF: ^.layer_011.pos=(?,?)
0.235	IN  DEF: ^.layer_0111.pos=(?,?)
0.234	OUT DEF: ^.layer_011.shape=^.layer_011.shape
0.234	OUT DEF: ^.layer_01.shape=^.layer_01110.shape

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01110.shape at (?,^.layer_01.pos.j - 2)
  _011: ^.layer_011.shape at (?,^.layer_01110.pos.j + 2)
  _0111: ^.layer_0111.shape at (?,^.layer_0.pos.j - 1)
  _01111: ^.layer_01.shape at (?,^.layer_01110.pos.j + 2)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color red at (?,?)
  _01110: a point with color green at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 123.1 + 2238.4 = 2361.5
DL output with Mo: L = 122.8 + 557.3 = 680.0
DL input+output M: L = 245.9 + 2795.7 = 3041.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color red at (5,4)
  _01110: a point with color green at (3,5)
  _0111: a point with color pink at (5,5)
diff: 
delta:
   (73.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color green at (7,2)
  _011: a point with color red at (1,7)
  _0111: a point with color pink at (1,2)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
   (18.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color red at (5,4)
  _01110: a point with color green at (3,5)
  _0111: a point with color pink at (5,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color red at (5,4)
  _01110: a point with color pink at (5,5)
  _0111: a point with color green at (3,5)
diff:   ^.layer_01110.shape.color
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color pink at (5,5)
  _01110: a point with color green at (3,5)
  _0111: a point with color red at (5,4)
diff:   ^.layer_011.shape.color
delta:
! 6 wrong pixels (generated / expected)

TRAIN 952a094c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color brown at (6,3)
  _011: a point with color red at (3,3)
  _01110: a point with color green at (6,6)
  _0111: a point with color cyan at (3,6)
diff: 
delta:
   (75.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color red at (8,8)
  _0111: a point with color cyan at (8,1)
  _01111: a point with color brown at (1,8)
diff: 
delta:
   (18.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color cyan at (3,6)
  _011: a point with color red at (3,3)
  _01110: a point with color green at (6,6)
  _0111: a point with color brown at (6,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color brown at (6,3)
  _011: a point with color red at (3,3)
  _01110: a point with color green at (6,6)
  _0111: a point with color cyan at (3,6)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color red at (3,3)
  _011: a point with color cyan at (3,6)
  _01110: a point with color green at (6,6)
  _0111: a point with color brown at (6,3)
diff:   ^.layer_011.shape.color
delta:
! 6 wrong pixels (generated / expected)

TRAIN 952a094c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color pink at (4,2)
  _011: a point with color red at (2,2)
  _01110: a point with color green at (4,5)
  _0111: a point with color grey at (2,5)
diff: 
delta:
   (74.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color green at (0,0)
  _011: a point with color red at (6,7)
  _0111: a point with color grey at (6,0)
  _01111: a point with color pink at (0,7)
diff: 
delta:
   (18.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color grey at (2,5)
  _011: a point with color red at (2,2)
  _01110: a point with color green at (4,5)
  _0111: a point with color pink at (4,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color pink at (4,2)
  _011: a point with color red at (2,2)
  _01110: a point with color green at (4,5)
  _0111: a point with color grey at (2,5)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color red at (2,2)
  _011: a point with color grey at (2,5)
  _01110: a point with color green at (4,5)
  _0111: a point with color pink at (4,2)
diff:   ^.layer_011.shape.color
delta:
! 3 wrong pixels (generated / expected)

TRAIN 952a094c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask Border at (3,2)
  _01: a point with color pink at (4,3)
  _011: a point with color red at (6,6)
  _01110: a point with color yellow at (4,6)
  _0111: a point with color cyan at (6,3)
diff:   ^.layer_01110.shape.color
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask Border at (3,2)
  _01: a point with color pink at (4,3)
  _011: a point with color red at (6,6)
  _01110: a point with color cyan at (6,3)
  _0111: a point with color yellow at (4,6)
diff:   ^.layer_01110.shape.color
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask Border at (3,2)
  _01: a point with color yellow at (4,6)
  _011: a point with color red at (6,6)
  _01110: a point with color pink at (4,3)
  _0111: a point with color cyan at (6,3)
diff:   ^.layer_01110.shape.color
delta:
! 7 wrong pixels (generated / expected)

TEST 952a094c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 557.3 bits (557.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-172] Checking task 9565186b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3618.8 = 3627.8
DL output with Mo: L = 9.0 + 2980.5 = 2989.4
DL input+output M: L = 17.9 + 6599.3 = 6617.2

# learning a model for train pairs
2.000	
1.620	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.455	OUT DEF: ^.size=^.size
1.305	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.189	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.093	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.067	IN  DEF: ^.layer_0.shape.mask=Full
1.054	IN  DEF: ^.size=(?,?)
0.994	IN  DEF: ^.size.i=3
0.934	IN  DEF: ^.size.j=3
0.920	IN  DEF: ^.layer_0.pos=(?,?)
0.907	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 46.2 + 2406.4 = 2452.6
DL output with Mo: L = 26.1 + 664.6 = 690.7
DL input+output M: L = 72.2 + 3071.0 = 3143.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta: (1,1)=1 
   (44.5 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta: (1,1)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,1)
diff: 
delta: (1,1)=1  (1,2)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color blue and mask Full at (0,0)
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
   (78.5 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,0)
diff: 
delta:
   (21.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,1)
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff: 
delta: (1,2)=3  (2,1)=2  (2,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color blue and mask Full at (0,0)
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,0)
diff: 
delta:
   (25.1 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|..x|xxx at (0,0)
diff:   ^.layer_0.shape.mask
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (1,0)=8  (1,1)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=3  (0,1)=3  (2,1)=1  (2,2)=1 
   (92.6 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=8  (2,0)=8  (2,1)=1  (2,2)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (2,1)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=8  (2,0)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=3  (0,1)=3  (2,1)=1  (2,2)=1 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta: (0,0)=1  (2,0)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (0,0)
diff: 
delta: (0,0)=1  (2,0)=1 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta: (0,0)=1  (1,0)=3  (2,0)=1 
! 9 wrong pixels (generated / expected)

TEST 9565186b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 664.6 bits (664.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-171] Checking task 95990924.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6314.8 = 6323.7
DL output with Mo: L = 9.0 + 11847.7 = 11856.6
DL input+output M: L = 17.9 + 18162.4 = 18180.4

# learning a model for train pairs
2.000	
1.758	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.589	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.509	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.458	OUT DEF: ^.size=^.size
1.423	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.387	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.359	OUT DEF: ^.layer_0=^.layer_0
1.348	OUT OBJECT at ^.layer_01111: a point with color ? at ?
1.327	IN  DEF: ^.layer_0.shape.color=grey
1.315	IN  DEF: ^.layer_0.shape.mask=Full
1.308	IN  DEF: ^.color=black
1.302	OUT DEF: ^.layer_01.shape.mask=^.layer_0.shape.mask
1.296	OUT DEF: ^.layer_011.shape.mask=^.layer_0.shape.mask
1.290	OUT DEF: ^.layer_0111.shape.mask=^.layer_0.shape.mask
1.285	IN  DEF: ^.size=(?,?)
1.279	IN  DEF: ^.layer_0.pos=(?,?)
1.273	IN  DEF: ^.layer_0.shape.size=(?,?)
1.253	IN  DEF: ^.layer_0.shape.size.i=2
1.233	IN  DEF: ^.layer_0.shape.size.j=2
1.229	OUT DEF: ^.color=black
1.226	OUT DEF: ^.layer_01111.pos=(?,?)
1.215	OUT DEF: ^.layer_01111.pos.j=^.layer_0.pos.j + ^.layer_0.shape.size.j
1.203	OUT DEF: ^.layer_01111.shape.color=yellow
1.192	OUT DEF: ^.layer_01111.pos.i=^.layer_0.pos.i + ^.layer_0.shape.size.i
1.189	OUT DEF: ^.layer_01.pos=(?,?)
1.177	OUT DEF: ^.layer_01.pos.i=^.layer_0.shape.size.i
1.174	OUT DEF: ^.layer_01.shape.size=(?,?)
1.171	OUT DEF: ^.layer_011.pos=(?,?)
1.168	OUT DEF: ^.layer_011.shape.size=(?,?)
1.165	OUT DEF: ^.layer_0111.pos=(?,?)
1.162	OUT DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask at (^.layer_0.shape.size.i,?)
  _011: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask at (?,?)
  _01111: a point with color yellow at (^.layer_0.pos.i + ^.layer_0.shape.size.i,^.layer_0.pos.j + ^.layer_0.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (?,?)

DL input  with Mi: L = 43.3 + 4136.1 = 4179.4
DL output with Mo: L = 130.5 + 5808.4 = 5938.9
DL input+output M: L = 173.8 + 9944.5 = 10118.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
   (27.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,6)
  _0111: a rectangle with size (1,1) and color green and mask Full at (5,3)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
   (51.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 95990924.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (6,6)
diff: 
delta: (2,2)=5# (2,3)=5# (3,2)=5# (3,3)=5#
   (107.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (6,6)
  _01: a rectangle with size (2,2) and color grey and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color yellow at (8,8)
diff: 
delta: (4,1)=3  (4,4)=4  (5,5)=1  (5,8)=2  (8,5)=3 
   (154.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,2)
diff: 
delta: (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (6,6)
diff: 
delta: (2,2)=5# (2,3)=5# (3,2)=5# (3,3)=5#
! 18 wrong pixels (generated / expected)

TRAIN 95990924.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (4,8)
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
   (278.9 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (4,8)
  _01: a rectangle with size (2,2) and color grey and mask Full at (2,3)
  _011: a rectangle with size (2,2) and color grey and mask Full at (8,4)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (11,9)
  _01111: a point with color yellow at (6,10)
diff: 
delta: (1,2)=1  (1,5)=2  (3,7)=1  (3,10)=2  (4,2)=3  (4,5)=4  (6,7)=3  (7,3)=1  (7,6)=2  (10,3)=3  (10,6)=4  (10,8)=1  (10,11)=2  (13,8)=3  (13,11)=4 
   (375.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,3)
diff: 
delta: (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (4,8)
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (8,4)=5# (8,5)=5# (9,4)=5# (9,5)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,4)
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 35 wrong pixels (generated / expected)

TRAIN 95990924.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
diff: 
delta: (1,11)=5# (1,12)=5# (2,11)=5# (2,12)=5# (4,5)=5# (4,6)=5# (5,5)=5# (5,6)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,11)
diff: 
delta: (1,1)=5# (1,2)=5# (2,1)=5# (2,2)=5# (4,5)=5# (4,6)=5# (5,5)=5# (5,6)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 47 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (4,5)
diff: 
delta: (1,1)=5# (1,2)=5# (1,11)=5# (1,12)=5# (2,1)=5# (2,2)=5# (2,11)=5# (2,12)=5# (6,12)=5# (6,13)=5# (7,12)=5# (7,13)=5# (10,2)=5# (10,3)=5# (11,2)=5# (11,3)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 47 wrong pixels (generated / expected)

TEST 95990924.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.6 sec (6.6 sec/task)
bits-train-error = 5808.4 bits (5808.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-170] Checking task 963e52fc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6833.7 = 6842.7
DL output with Mo: L = 9.0 + 13738.0 = 13747.0
DL input+output M: L = 17.9 + 20571.7 = 20589.7

# learning a model for train pairs
2.000	
1.503	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.112	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.991	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.896	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.874	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.852	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.841	IN  DEF: ^.layer_01.shape.mask=Full
0.831	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.821	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.812	OUT OBJECT at ^.layer_00: a point with color ? at ?
0.802	OUT DEF: ^.layer_00.shape.color=^.layer_01.shape.color
0.795	IN  DEF: ^.color=black
0.790	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.785	IN  DEF: ^.size=(?,?)
0.755	IN  DEF: ^.size.i=5
0.749	IN  DEF: ^.layer_0.pos=(?,?)
0.744	IN  DEF: ^.layer_0.shape.size=(?,?)
0.739	IN  DEF: ^.layer_01.pos=(?,?)
0.721	IN  DEF: ^.layer_01.pos.j=(0)
0.716	IN  DEF: ^.layer_01.shape.size=(?,?)
0.713	OUT DEF: ^.color=black
0.710	OUT DEF: ^.size=(?,?)
0.689	OUT DEF: ^.size.j=^.size.j + ^.size.j
0.674	OUT DEF: ^.size.i=^.size.i
0.672	OUT DEF: ^.layer_00.pos=(?,?)
0.664	OUT DEF: ^.layer_00.pos.i=^.layer_0.pos.i
0.661	OUT DEF: ^.layer_0.shape.size=(?,?)
0.654	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.651	OUT DEF: ^.layer_01.shape.size=(?,?)
0.643	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j + ^.size.j) and color black and layers
  _00: a point with color ^.layer_01.shape.color at (^.layer_0.pos.i,?)
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (5,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,(0))

DL input  with Mi: L = 72.5 + 2649.7 = 2722.2
DL output with Mo: L = 90.2 + 3281.6 = 3371.8
DL input+output M: L = 162.7 + 5931.3 = 6094.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2  (1,4)=2  (2,2)=2  (2,4)=2 
   (121.5 bits)
data: a background with size (5,12) and color black and layers
  _00: a point with color red at (1,2)
  _0: a rectangle with size (2,11) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (2,2)=2  (2,4)=2  (2,6)=2  (2,8)=2  (2,10)=2 
   (188.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2  (1,4)=2  (2,2)=2  (2,4)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,0)
diff: 
delta: (1,1)=8  (1,5)=8  (2,1)=8  (2,5)=8 
! 20 wrong pixels (generated / expected)

TRAIN 963e52fc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,7) and color red and mask Full at (2,0)
diff: 
delta: (2,3)=2 
   (69.9 bits)
data: a background with size (5,14) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (1,13) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta: (2,6)=2  (2,9)=2  (2,12)=2 
   (78.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,7) and color red and mask Full at (2,0)
diff: 
delta: (2,3)=2 
! 11 wrong pixels (generated / expected)

TRAIN 963e52fc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,8) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask .xx.xx.x|x.xx.xx. at (2,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (2,0)
diff: 
delta:
   (73.6 bits)
data: a background with size (5,16) and color black and layers
  _00: a point with color blue at (2,15)
  _0: a rectangle with size (2,16) and color red and mask .xx.xx.xx.xx.xxx|x.xx.xx.xx.xx.xx at (2,0)
  _01: a rectangle with size (2,14) and color blue and mask Full at (2,0)
diff: 
delta:
   (60.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,8) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask .xx.xx.x|x.xx.xx. at (2,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (2,0)
diff: 
delta:
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,8) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask .xx.xx.x|x.xx.xx. at (2,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (3,1)
diff:   ^.layer_01.pos.j
delta: (2,0)=1  (2,3)=1  (2,6)=1 
! 29 wrong pixels (generated / expected)

TRAIN 963e52fc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color green and mask Full at (1,0)
diff: 
delta: (1,3)=3  (1,6)=3  (2,3)=3  (2,6)=3 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (1,1)
diff:   ^.layer_01.pos.j
delta: (1,3)=3  (1,6)=3  (2,3)=3  (2,6)=3 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,3)
  _01: a rectangle with size (2,8) and color blue and mask Full at (1,1)
diff:   ^.layer_01.pos.j
delta: (1,0)=3  (1,6)=3  (2,0)=3  (2,6)=3 
! 30 wrong pixels (generated / expected)

TEST 963e52fc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.0 sec (24.0 sec/task)
bits-train-error = 3281.6 bits (3281.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-169] Checking task 97999447.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1822.1 = 1831.0
DL output with Mo: L = 9.0 + 8942.6 = 8951.6
DL input+output M: L = 17.9 + 10764.7 = 10782.6

# learning a model for train pairs
2.000	
1.843	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.727	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.652	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.587	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.525	OUT DEF: ^.size=^.size
1.490	OUT DEF: ^.layer_011.pos=^.layer_0.pos
1.465	IN  DEF: ^.color=black
1.446	IN  DEF: ^.size=(?,?)
1.427	IN  DEF: ^.layer_0.pos=(?,?)
1.411	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
1.396	OUT DEF: ^.layer_0.shape.color=grey
1.388	OUT DEF: ^.layer_01.shape.mask=Full
1.380	OUT DEF: ^.layer_011.shape.mask=Full
1.375	OUT DEF: ^.color=black
1.371	OUT DEF: ^.layer_0.pos=(?,?)
1.356	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
1.341	OUT DEF: ^.layer_01.shape.color=grey
1.326	OUT DEF: ^.layer_0.pos.j=6
1.322	OUT DEF: ^.layer_0.shape.size=(?,?)
1.318	OUT DEF: ^.layer_01.pos=(?,?)
1.314	OUT DEF: ^.layer_01.shape.size=(?,?)
1.306	OUT DEF: ^.layer_01.shape.size.i=1
1.302	OUT DEF: ^.layer_011.shape.size=(?,?)
1.277	OUT DEF: ^.layer_011.shape.size.j=^.size.j - ^.layer_0.pos.j
1.270	OUT DEF: ^.layer_011.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (^.layer_0.pos.i,6)
  _01: a rectangle with size (1,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (1,^.size.j - ^.layer_0.pos.j) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 29.7 + 1549.7 = 1579.4
DL output with Mo: L = 96.0 + 3547.7 = 3643.7
DL input+output M: L = 125.6 + 5097.4 = 5223.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a point with color pink at (5,3)
diff: 
delta: (2,2)=2 
   (51.5 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (5,6)
  _01: a rectangle with size (1,5) and color grey and mask Full at (2,3)
  _011: a rectangle with size (1,5) and color pink and mask Full at (5,3)
diff: 
delta: (2,2)=2  (2,4)=2  (2,6)=2  (5,4)=5#
   (101.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (5,3)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a point with color pink at (5,3)
diff: 
delta: (2,2)=2 
! 12 wrong pixels (generated / expected)

TRAIN 97999447.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a point with color green at (4,1)
diff: 
delta: (1,2)=2  (5,6)=6 
   (74.1 bits)
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (2,6) and color grey and mask Even Checkboard at (4,6)
  _01: a rectangle with size (1,9) and color grey and mask Full at (1,3)
  _011: a rectangle with size (1,11) and color green and mask Full at (4,1)
diff: 
delta: (1,2)=2  (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (4,2)=5# (4,4)=5# (5,6)=6  (5,8)=6  (5,10)=6 
   (235.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (4,1)=3  (5,6)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  _0: a point with color green at (4,1)
diff: 
delta: (1,2)=2  (5,6)=6 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,12) and color black and layers
  _0: a point with color pink at (5,6)
diff: 
delta: (1,2)=2  (4,1)=3 
! 28 wrong pixels (generated / expected)

TRAIN 97999447.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (3,3)
diff: 
delta:
   (29.4 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (3,6)
  _01: a rectangle with size (1,1) and color grey and mask Full at (3,4)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (3,3)
diff: 
delta:
   (17.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (3,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 97999447.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta: (2,2)=4  (4,4)=8  (6,3)=2 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color black and layers
  _0: a point with color yellow at (2,2)
diff: 
delta: (1,3)=3  (4,4)=8  (6,3)=2 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (4,4)
diff: 
delta: (1,3)=3  (2,2)=4  (6,3)=2 
! 22 wrong pixels (generated / expected)

TEST 97999447.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.7 sec (8.7 sec/task)
bits-train-error = 3547.7 bits (3547.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-168] Checking task 97a05b5b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 69617.5 = 69626.4
DL output with Mo: L = 9.0 + 7899.2 = 7908.2
DL input+output M: L = 17.9 + 77516.7 = 77534.6

# learning a model for train pairs
2.000	
1.287	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.215	OUT DEF: ^.size=^.layer_0.shape.size
1.179	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.148	OUT DEF: ^.color=^.layer_0.shape.color
1.127	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.100	OUT OBJECT at ^.layer_0: ^.layer_011.shape at ?
1.035	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.005	OUT DEF: ^.color=^.layer_0.shape.color
0.987	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.970	OUT DEF: ^.layer_00.shape.color=^.layer_0111.shape.color
0.960	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.951	OUT DEF: ^.layer_00.shape.mask=Full
0.946	OUT DEF: ^.layer_00.pos=(?,?)
0.942	OUT DEF: ^.layer_00.shape.size=(?,?)
0.937	OUT DEF: ^.layer_0.pos=(?,?)
0.922	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.j + ^.layer_01.shape.size.j
0.920	IN  DEF: ^.layer_01111.shape.mask=Full
0.918	IN  DEF: ^.layer_0.shape.color=red
0.918	IN  DEF: ^.color=black
0.917	IN  DEF: ^.layer_0.pos=(?,?)
0.917	IN  DEF: ^.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_0.shape.color and layers
  _00: a rectangle with size (?,?) and color ^.layer_0111.shape.color and mask Full at (?,?)
  _0: ^.layer_011.shape at (?,^.layer_01.shape.size.j + ^.layer_01.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size ? and color red and mask ? at (?,?)
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 111.5 + 13551.1 = 13662.7
DL output with Mo: L = 71.3 + 5627.4 = 5698.7
DL input+output M: L = 182.9 + 19178.5 = 19361.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (17,9) and color red and mask xxxxxxxxx|x.xxxxx.x|x..xxxx.x|xxxxxxx.x|xxxxxxxxx|xxxxxxxxx|xxxx.xxxx|xxx...xxx|xxxx.xxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx.xx|xx.xxx.xx|x..xx...x|xxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (20,3)
  _011: a rectangle with size (3,3) and color green and mask Full at (7,14)
  _0111: a rectangle with size (2,3) and color red and mask Full at (18,14)
  _01111: a rectangle with size (3,3) and color red and mask Full at (2,13)
diff: 
delta: (2,13)=1  (2,15)=1  (4,13)=1  (4,15)=1  (8,14)=2  (8,15)=2  (8,16)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,15)=8  (20,8)=5# (20,9)=5# (20,10)=2  (21,4)=2  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,8)=5# (22,9)=5# (22,10)=2 
   (829.3 bits)
data: a background with size (17,9) and color red and layers
  _00: a rectangle with size (13,1) and color red and mask Full at (0,7)
  _0: a rectangle with size (3,3) and color green and mask Full at (1,6)
diff: 
delta: (1,2)=4  (1,3)=4  (2,3)=4  (3,1)=4  (3,2)=4  (3,3)=4  (6,3)=1  (6,5)=1  (8,3)=1  (8,5)=1  (13,0)=8  (13,5)=5# (13,7)=5# (14,0)=8  (14,1)=8  (14,5)=5# (14,7)=5# (15,0)=8 
   (387.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (17,9) and color red and mask xxxxxxxxx|x.xxxxx.x|x..xxxx.x|xxxxxxx.x|xxxxxxxxx|xxxxxxxxx|xxxx.xxxx|xxx...xxx|xxxx.xxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx.xx|xx.xxx.xx|x..xx...x|xxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color green and mask Full at (7,14)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (20,3)
  _0111: a rectangle with size (2,3) and color red and mask Full at (18,14)
  _01111: a rectangle with size (3,3) and color red and mask Full at (2,13)
diff: 
delta: (2,13)=1  (2,15)=1  (4,13)=1  (4,15)=1  (8,14)=2  (8,15)=2  (8,16)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,15)=8  (20,8)=5# (20,9)=5# (20,10)=2  (21,4)=2  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,8)=5# (22,9)=5# (22,10)=2 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (17,9) and color red and mask xxxxxxxxx|x.xxxxx.x|x..xxxx.x|xxxxxxx.x|xxxxxxxxx|xxxxxxxxx|xxxx.xxxx|xxx...xxx|xxxx.xxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx.xx|xx.xxx.xx|x..xx...x|xxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (20,3)
  _011: a rectangle with size (3,3) and color green and mask Full at (7,14)
  _0111: a rectangle with size (2,3) and color red and mask x.x|xxx at (18,14)
  _01111: a rectangle with size (3,3) and color red and mask Full at (2,13)
diff: 
delta: (2,13)=1  (2,15)=1  (4,13)=1  (4,15)=1  (8,14)=2  (8,15)=2  (8,16)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,15)=8  (20,8)=5# (20,9)=5# (20,10)=2  (21,4)=2  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,8)=5# (22,9)=5# (22,10)=2 
! 25 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xxxxxxxx|xx.xxxxx|x...xxxx|xxxxxxxx|xxxx..xx|xxxx.x.x|xxxxx..x|xxxxxxxx at (1,1)
  _01: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (13,5)
  _011: a rectangle with size (3,2) and color red and mask Full at (11,1)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (11,3)
  _01111: a rectangle with size (3,3) and color green and mask Full at (13,5)
diff: 
delta: (11,1)=4  (13,1)=4 
   (284.8 bits)
data: a background with size (8,8) and color red and layers
  _00: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _0: a rectangle with size (3,2) and color red and mask Full at (5,6)
diff: 
delta: (1,1)=4  (1,3)=4  (4,6)=3  (5,5)=3  (6,4)=3 
   (117.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xxxxxxxx|xx.xxxxx|x...xxxx|xxxxxxxx|xxxx..xx|xxxx.x.x|xxxxx..x|xxxxxxxx at (1,1)
  _01: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (13,5)
  _011: a rectangle with size (3,2) and color red and mask Full at (11,1)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (11,3)
  _01111: a rectangle with size (3,3) and color green and mask Full at (13,5)
diff: 
delta: (11,1)=4  (13,1)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xxxxxxxx|xx.xxxxx|x...xxxx|xxxxxxxx|xxxx..xx|xxxx.x.x|xxxxx..x|xxxxxxxx at (1,1)
  _01: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (13,5)
  _011: a rectangle with size (3,2) and color red and mask Full at (11,1)
  _0111: a rectangle with size (3,3) and color green and mask Full at (13,5)
  _01111: a rectangle with size (3,1) and color yellow and mask Full at (11,3)
diff: 
delta: (11,1)=4  (13,1)=4 
! 11 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (1,6)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (3,5)
  _01111: a rectangle with size (1,3) and color red and mask Full at (2,5)
diff: 
delta:
   (241.0 bits)
data: a background with size (9,9) and color red and layers
  _00: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (4,2)
diff: 
delta: (2,4)=8  (4,3)=2 
   (58.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (1,6)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,3) and color red and mask Full at (2,5)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (3,5)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (1,6)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (3,5)
  _01111: a rectangle with size (1,3) and color red and mask Full at (2,5)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,5)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (1,6)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (1,7)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,15) and color black and layers
  _0: a rectangle with size (8,12) and color red and mask xxxxxxxxxxxx|x.xxxx.xxx.x|x..xx..xxxxx|xx..xx.xxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxx...xx|xxxxxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color blue and mask Full at (11,1)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (16,3)
  _0111: a rectangle with size (3,2) and color green and mask Full at (11,9)
  _01111: a rectangle with size (3,3) and color red and mask Full at (15,11)
diff: 
delta: (11,8)=2  (12,2)=2  (12,8)=2  (12,9)=2  (13,8)=2  (15,11)=8  (15,12)=8  (16,4)=2  (16,11)=8  (17,4)=2  (17,13)=8  (18,4)=2 
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,15) and color black and layers
  _0: a rectangle with size (8,12) and color red and mask xxxxxxxxxxxx|x.xxxx.xxx.x|x..xx..xxxxx|xx..xx.xxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxx...xx|xxxxxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color blue and mask Border at (11,1)
  _011: a rectangle with size (3,2) and color green and mask Full at (11,9)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (16,3)
  _01111: a rectangle with size (3,3) and color red and mask Full at (15,11)
diff: 
delta: (11,8)=2  (12,2)=2  (12,8)=2  (12,9)=2  (13,8)=2  (15,11)=8  (15,12)=8  (16,4)=2  (16,11)=8  (17,4)=2  (17,13)=8  (18,4)=2 
! 33 wrong pixels (generated / expected)

TEST 97a05b5b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.4 sec (27.4 sec/task)
bits-train-error = 5627.4 bits (5627.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-167] Checking task 98cf29f8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 33428.3 = 33437.3
DL output with Mo: L = 9.0 + 31195.8 = 31204.7
DL input+output M: L = 17.9 + 64624.1 = 64642.0

# learning a model for train pairs
2.000	
1.265	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.579	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.380	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.189	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.168	OUT DEF: ^.size=^.size
0.155	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.136	OUT DEF: ^.layer_0.shape=^.layer_01.shape
0.134	IN  DEF: ^.layer_011.shape.mask=Full
0.122	OUT DEF: ^.layer_0=^.layer_01
0.120	IN  DEF: ^.layer_01.shape.mask=Full
0.118	OUT DEF: ^.color=black
0.117	IN  DEF: ^.color=black
0.116	OUT DEF: ^.layer_01.pos=(?,?)
0.115	IN  DEF: ^.size=(?,?)
0.114	IN  DEF: ^.layer_0.pos=(?,?)
0.112	IN  DEF: ^.layer_0.shape.mask=Full
0.111	IN  DEF: ^.layer_0.shape.size=(?,?)
0.110	IN  DEF: ^.layer_01.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_01
  _01: ^.layer_0.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size ? and color ? and mask Full at (?,?)
  _011: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 80.5 + 3215.8 = 3296.3
DL output with Mo: L = 28.5 + 318.5 = 347.0
DL input+output M: L = 108.9 + 3534.3 = 3643.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (8,2)
  _01: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (7,1) and color grey and mask Full at (4,3)
diff: 
delta:
   (105.4 bits)
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color grey and mask Full at (4,2)
diff: 
delta:
   (10.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color grey and mask Full at (8,2)
  _011: a rectangle with size (7,1) and color grey and mask Full at (4,3)
diff: 
delta:
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (7,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (3,4) and color grey and mask Full at (8,2)
diff: 
delta:
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (8,2)
  _01: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (7,1) and color grey and mask Full at (4,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 98cf29f8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
diff: 
delta:
   (106.5 bits)
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,4)
diff: 
delta:
   (10.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
diff: 
delta:
! 104 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
diff: 
delta:
! 98 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 98cf29f8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Full at (7,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
  _011: a rectangle with size (10,1) and color green and mask Full at (3,7)
diff: 
delta:
   (109.6 bits)
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask Full at (1,6)
  _01: a rectangle with size (6,8) and color green and mask Full at (3,3)
diff: 
delta:
   (10.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (3,7)
  _01: a rectangle with size (6,8) and color green and mask Full at (7,3)
  _011: a rectangle with size (2,5) and color red and mask Full at (1,6)
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask Full at (1,6)
  _01: a rectangle with size (6,8) and color green and mask Full at (7,3)
  _011: a rectangle with size (10,1) and color green and mask Full at (3,7)
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Full at (7,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
  _011: a rectangle with size (10,1) and color green and mask Full at (3,7)
diff: 
delta:
! 62 wrong pixels (generated / expected)

TRAIN 98cf29f8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (8,5) and color green and mask Full at (3,1)
  _01: a rectangle with size (3,4) and color orange and mask Full at (4,11)
  _011: a rectangle with size (1,9) and color orange and mask Full at (4,6)
diff: 
delta:
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (8,5) and color green and mask Full at (3,1)
  _01: a rectangle with size (1,9) and color orange and mask Full at (4,6)
  _011: a rectangle with size (3,4) and color orange and mask Full at (4,11)
diff: 
delta:
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (3,4) and color orange and mask Full at (4,11)
  _01: a rectangle with size (8,5) and color green and mask Full at (3,1)
  _011: a rectangle with size (1,9) and color orange and mask Full at (4,6)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TEST 98cf29f8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 318.5 bits (318.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-166] Checking task 995c5fa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12177.6 = 12186.6
DL output with Mo: L = 9.0 + 4258.2 = 4267.2
DL input+output M: L = 17.9 + 16435.8 = 16453.8

# learning a model for train pairs
2.000	
1.768	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.599	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.468	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.372	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.080	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.013	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.991	OUT DEF: ^.layer_0.shape.mask=Full
0.969	OUT DEF: ^.layer_01.shape.mask=Full
0.954	IN  DEF: ^.layer_0.shape.color=grey
0.939	IN  DEF: ^.layer_01.shape.color=grey
0.923	IN  DEF: ^.layer_011.shape.color=grey
0.912	OUT DEF: ^.size=(?,?)
0.863	OUT DEF: ^.size.i=^.size.i - 1
0.812	OUT DEF: ^.size.j=3
0.800	OUT DEF: ^.layer_0.shape.size=(?,?)
0.751	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j - 1
0.729	OUT DEF: ^.layer_0.shape.size.i=1
0.717	OUT DEF: ^.layer_01.pos=(?,?)
0.690	OUT DEF: ^.layer_01.pos.j=(0)
0.664	OUT DEF: ^.layer_01.pos.i=1
0.652	OUT DEF: ^.layer_01.shape.size=(?,?)
0.603	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j - 1
0.581	OUT DEF: ^.layer_01.shape.size.i=1
0.576	IN  DEF: ^.color=black
0.572	IN  DEF: ^.layer_0.pos=(?,?)
0.555	IN  DEF: ^.layer_0.pos.j=(0)
0.544	IN  DEF: ^.layer_0.pos.i=(0)
0.540	IN  DEF: ^.layer_0.shape.size=(?,?)
0.520	IN  DEF: ^.layer_0.shape.size.i=4
0.499	IN  DEF: ^.layer_0.shape.size.j=4
0.495	IN  DEF: ^.size=(?,?)
0.463	IN  DEF: ^.size.j=14
0.443	IN  DEF: ^.size.i=4
0.439	IN  DEF: ^.layer_01.pos=(?,?)
0.422	IN  DEF: ^.layer_01.pos.j=5
0.411	IN  DEF: ^.layer_01.pos.i=0
0.407	IN  DEF: ^.layer_01.shape.size=(?,?)
0.387	IN  DEF: ^.layer_01.shape.size.i=4
0.366	IN  DEF: ^.layer_01.shape.size.j=4
0.362	IN  DEF: ^.layer_011.pos=(?,?)
0.346	IN  DEF: ^.layer_011.pos.j=10
0.335	IN  DEF: ^.layer_011.pos.i=0
0.331	IN  DEF: ^.layer_011.shape.size=(?,?)
0.310	IN  DEF: ^.layer_011.shape.size.i=4
0.290	IN  DEF: ^.layer_011.shape.size.j=4

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i - 1,3) and color ? and layers
  _0: a rectangle with size (1,^.layer_0.shape.size.j - 1) and color ? and mask Full at ^.layer_0.pos
  _01: a rectangle with size (1,^.layer_01.shape.size.j - 1) and color ? and mask Full at (1,(0))
WHERE (Mi)
a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ? at ((0),(0))
  _01: a rectangle with size (4,4) and color grey and mask ? at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask ? at (0,10)

DL input  with Mi: L = 133.6 + 1161.9 = 1295.5
DL output with Mo: L = 92.6 + 690.1 = 782.8
DL input+output M: L = 226.2 + 1852.1 = 2078.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,10)
diff: 
delta:
   (26.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (1,0)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,10)
diff:   ^.layer_01.pos.j  ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Full at (0,10)
diff: 
delta:
   (40.4 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Full at (0,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (0,10)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,0)
diff:   ^.layer_011.pos.j  ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,10)
diff: 
delta:
   (26.0 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,0)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,10)
diff:   ^.layer_01.pos.j  ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Full at (0,10)
diff: 
delta:
   (23.7 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Full at (0,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (0,10)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Full at (0,0)
diff:   ^.layer_011.pos.j  ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Border at (0,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|.xx.|.xx.|xxxx at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,0)
  _011: a rectangle with size (4,4) and color grey and mask Border at (0,10)
diff:   ^.layer_01.pos.j  ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)

TEST 995c5fa3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.0 sec (19.0 sec/task)
bits-train-error = 690.1 bits (690.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-165] Checking task 99b1bc43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15832.6 = 15841.5
DL output with Mo: L = 9.0 + 5371.2 = 5380.2
DL input+output M: L = 17.9 + 21203.8 = 21221.8

# learning a model for train pairs
2.000	
1.562	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.251	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.096	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.992	OUT DEF: ^.size=^.layer_0.shape.size
0.895	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.861	OUT DEF: ^.layer_0.shape.color=green
0.838	IN  DEF: ^.layer_01.shape.color=yellow
0.826	OUT DEF: ^.color=black
0.818	OUT DEF: ^.layer_0.pos=(?,?)
0.794	OUT DEF: ^.layer_0.pos.i=^.layer_011.pos.j
0.773	OUT DEF: ^.layer_0.pos.j=(0)
0.764	OUT DEF: ^.layer_0.shape.size=(?,?)
0.717	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.711	IN  DEF: ^.layer_01.shape.mask=Full
0.708	IN  DEF: ^.size=(?,?)
0.687	IN  DEF: ^.size.i=9
0.671	IN  DEF: ^.size.j=4
0.668	IN  DEF: ^.layer_0.pos=(?,?)
0.659	IN  DEF: ^.layer_0.pos.j=0
0.656	IN  DEF: ^.layer_0.shape.size=(?,?)
0.641	IN  DEF: ^.layer_0.shape.size.i=4
0.625	IN  DEF: ^.layer_0.shape.size.j=4
0.622	IN  DEF: ^.layer_01.pos=(?,?)
0.610	IN  DEF: ^.layer_01.pos.i=4
0.602	IN  DEF: ^.layer_01.pos.j=0
0.599	IN  DEF: ^.layer_01.shape.size=(?,?)
0.583	IN  DEF: ^.layer_01.shape.size.j=4
0.577	IN  DEF: ^.layer_01.shape.size.i=1
0.574	IN  DEF: ^.layer_011.pos=(?,?)
0.571	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color green and mask ? at (^.layer_011.pos.j,(0))
WHERE (Mi)
a background with size (9,4) and color ? and layers
  _0: a rectangle with size (4,4) and color ? and mask ? at (?,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 117.1 + 4127.5 = 4244.6
DL output with Mo: L = 44.6 + 1587.0 = 1631.6
DL input+output M: L = 161.7 + 5714.5 = 5876.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
diff: 
delta: (0,1)=1  (2,0)=1  (5,1)=2 
   (120.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask ..xx|xxxx at (2,0)
diff: 
delta:
   (15.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
diff: 
delta: (0,1)=1  (2,0)=1  (5,1)=2 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.j
delta: (0,1)=1  (2,0)=1  (5,1)=2 
! size mismatch, 4x2 instead of 4x4
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,1)=1  (2,0)=1  (2,2)=1  (3,3)=1  (5,1)=2 
! 2 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|x.x.|xxxx|xxxx at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|.xx. at (0,0)
diff: 
delta:
   (73.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color green and mask Full at (0,0)
diff: 
delta: (0,1)=0  (2,2)=3  (3,0)=3  (3,3)=3 
   (74.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|x.x.|xxxx|xxxx at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|.xx. at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (6,0)
diff: 
delta: (6,3)=2  (7,3)=2 
   (99.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|xxx.|..xx|..x. at (0,0)
diff: 
delta: (3,0)=3 
   (43.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (6,0)
diff: 
delta: (6,3)=2  (7,3)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,1)
diff: 
delta: (6,3)=2  (7,0)=2  (7,3)=2 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask .x|xx|.x at (6,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i
delta: (6,3)=2  (7,3)=2 
! size mismatch, 3x2 instead of 4x4

TRAIN 99b1bc43.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color blue and layers
  _0: a rectangle with size (4,4) and color black and mask .x..|xxx.|..xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask Full at (5,0)
diff: 
delta: (5,0)=0  (6,0)=0  (7,1)=0 
   (119.9 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xx..|.xx.|.xxx|xx.. at (0,0)
diff: 
delta:
   (25.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|.xxx|x.xx|xxxx at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,4) and color blue and mask xx..|..xx at (2,0)
diff: 
delta: (0,0)=1  (0,2)=1  (0,3)=1  (1,3)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|.xxx|x.xx|xxxx at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,2) and color blue and mask xx|.x at (0,2)
diff: 
delta: (0,0)=1  (2,0)=1  (2,1)=1  (3,2)=1  (3,3)=1 
! 7 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.xx|.xxx|..x.|..xx at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask xx.x|..x.|...x|...x at (5,0)
diff: 
delta: (3,0)=1  (7,0)=2  (8,1)=2 
! 10 wrong pixels (generated / expected)

TEST 99b1bc43.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.1 sec (8.1 sec/task)
bits-train-error = 1587.0 bits (1587.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-164] Checking task 99fa7670.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2165.8 = 2174.8
DL output with Mo: L = 9.0 + 7661.4 = 7670.4
DL input+output M: L = 17.9 + 9827.2 = 9845.2

# learning a model for train pairs
2.000	
1.702	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.551	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.467	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.387	OUT DEF: ^.size=^.size
1.341	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.314	IN  DEF: ^.color=black
1.289	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.267	IN  DEF: ^.size=(?,?)
1.245	IN  DEF: ^.layer_0.pos=(?,?)
1.178	IN  DEF: ^.layer_0.pos.i=1
1.170	OUT DEF: ^.color=black
1.164	OUT DEF: ^.layer_0.shape.size=(?,?)
1.135	OUT DEF: ^.layer_0.shape.size.j=^.size.j - ^.layer_0.pos.j
1.129	OUT DEF: ^.layer_01.pos=(?,?)
1.123	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.size.j - ^.layer_0.pos.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (1,?)

DL input  with Mi: L = 32.6 + 1655.8 = 1688.3
DL output with Mo: L = 65.5 + 2589.8 = 2655.2
DL input+output M: L = 98.0 + 4245.5 = 4343.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (3,1)=3 
   (43.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask xxxx|...x at (1,2)
  _01: a rectangle with size (3,5) and color green and mask xxxxx|....x|....x at (3,1)
diff: 
delta:
   (58.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (3,1)=3 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,1)
diff:   ^.layer_0.pos.i
delta: (1,2)=2 
! 14 wrong pixels (generated / expected)

TRAIN 99fa7670.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (1,1)
diff: 
delta:
   (18.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,2)
diff: 
delta:
   (24.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 99fa7670.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (4,3)=5#
   (43.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxxx|....x|....x at (1,1)
  _01: a rectangle with size (2,3) and color grey and mask xxx|..x at (4,3)
diff: 
delta:
   (54.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (4,3)=5#
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,3)
diff:   ^.layer_0.pos.i
delta: (1,1)=8 
! 12 wrong pixels (generated / expected)

TRAIN 99fa7670.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,5) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (3,1)=7# (5,2)=6 
   (61.1 bits)
data: a background with size (7,5) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (1,2)
  _01: a rectangle with size (2,4) and color orange and mask xxxx|...x at (3,1)
diff: 
delta: (5,2)=6  (5,3)=6  (5,4)=6  (6,4)=6 
   (121.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,5) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (3,1)=7# (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,5) and color black and layers
  _0: a point with color orange at (3,1)
diff:   ^.layer_0.pos.i
delta: (1,2)=8  (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,5) and color black and layers
  _0: a point with color pink at (5,2)
diff:   ^.layer_0.pos.i
delta: (1,2)=8  (3,1)=7#
! 15 wrong pixels (generated / expected)

TRAIN 99fa7670.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (0,3)
diff:   ^.layer_0.pos.i
delta: (2,2)=7# (4,5)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color black and layers
  _0: a point with color orange at (2,2)
diff:   ^.layer_0.pos.i
delta: (0,3)=8  (4,5)=2 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  _0: a point with color red at (4,5)
diff:   ^.layer_0.pos.i
delta: (0,3)=8  (2,2)=7#
! 20 wrong pixels (generated / expected)

TEST 99fa7670.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 2589.8 bits (2589.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-163] Checking task 9aec4887.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15038.6 = 15047.5
DL output with Mo: L = 9.0 + 12899.2 = 12908.2
DL input+output M: L = 17.9 + 27937.8 = 27955.7

# learning a model for train pairs
2.000	
1.744	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.614	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.509	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.403	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.301	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 11172.2 = 11201.1
DL output with Mo: L = 85.3 + 7104.0 = 7189.3
DL input+output M: L = 114.2 + 18276.2 = 18390.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
diff: 
delta: (7,7)=4  (7,8)=4  (7,9)=4  (7,10)=4  (8,6)=2  (8,11)=1  (9,6)=2  (9,11)=1  (10,6)=2  (10,11)=1  (11,6)=2  (11,11)=1  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=3 
   (403.5 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,2) and color blue and mask Full at (1,4)
  _01: a rectangle with size (2,4) and color green and mask .x.x|xxxx at (4,1)
  _011: a rectangle with size (4,2) and color red and mask x.|x.|xx|x. at (1,0)
  _0111: a rectangle with size (1,4) and color yellow and mask Full at (0,1)
diff: 
delta: (1,1)=8  (1,4)=8  (2,2)=8  (3,2)=8  (3,3)=8  (4,4)=8 
   (255.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
diff: 
delta: (7,7)=4  (7,8)=4  (7,9)=4  (7,10)=4  (8,6)=2  (8,11)=1  (9,6)=2  (9,11)=1  (10,6)=2  (10,11)=1  (11,6)=2  (11,11)=1  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=3 
! size mismatch, 10x10 instead of 6x6

TRAIN 9aec4887.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
diff: 
delta: (6,2)=3  (6,3)=3  (6,4)=3  (7,1)=6  (7,5)=4  (8,1)=6  (8,5)=4  (9,1)=6  (9,5)=4  (10,2)=2  (10,3)=2  (10,4)=2 
   (312.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask xxx|.x. at (0,1)
  _01: a rectangle with size (2,3) and color red and mask .x.|xxx at (3,1)
  _011: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (1,0)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|xx|.x at (1,3)
diff: 
delta: (2,2)=8  (3,3)=8 
   (187.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
diff: 
delta: (6,2)=3  (6,3)=3  (6,4)=3  (7,1)=6  (7,5)=4  (8,1)=6  (8,5)=4  (9,1)=6  (9,5)=4  (10,2)=2  (10,3)=2  (10,4)=2 
! size mismatch, 10x10 instead of 5x5

TRAIN 9aec4887.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
diff: 
delta: (1,3)=7# (1,4)=7# (1,5)=7# (1,6)=7# (2,2)=4  (2,7)=6  (3,2)=4  (3,7)=6  (4,2)=4  (4,7)=6  (5,2)=4  (5,7)=6  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1 
   (401.8 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.xx.|.x..|x... at (1,1)
  _01: a rectangle with size (2,4) and color orange and mask xxxx|xx.x at (0,1)
  _011: a rectangle with size (2,4) and color blue and mask xx..|xxxx at (4,1)
  _0111: a rectangle with size (4,2) and color pink and mask xx|.x|xx|.x at (1,4)
diff: 
delta: (1,0)=4  (2,0)=4  (3,0)=4  (4,0)=4  (4,4)=8 
   (267.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
diff: 
delta: (1,3)=7# (1,4)=7# (1,5)=7# (1,6)=7# (2,2)=4  (2,7)=6  (3,2)=4  (3,7)=6  (4,2)=4  (4,7)=6  (5,2)=4  (5,7)=6  (6,3)=1  (6,4)=1  (6,5)=1  (6,6)=1 
! size mismatch, 10x10 instead of 6x6

TRAIN 9aec4887.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|x.xx.|.xxxx|..x..|xx.xx at (9,2)
diff: 
delta: (0,6)=1  (0,7)=1  (0,8)=1  (0,9)=1  (0,10)=1  (1,5)=2  (1,11)=4  (2,5)=2  (2,11)=4  (3,5)=2  (3,11)=4  (4,5)=2  (4,11)=4  (5,5)=2  (5,11)=4  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3 
! size mismatch, 10x10 instead of 7x7

TEST 9aec4887.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 7104.0 bits (7104.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-162] Checking task 9af7a82c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4680.7 = 4689.7
DL output with Mo: L = 9.0 + 8425.1 = 8434.0
DL input+output M: L = 17.9 + 13105.8 = 13123.7

# learning a model for train pairs
2.000	
1.679	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.420	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.256	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.191	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.153	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.131	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
1.108	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.086	OUT DEF: ^.layer_01.shape.color=^.color
1.075	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
1.055	IN  DEF: ^.layer_01.shape.mask=Full
1.044	OUT DEF: ^.layer_0.shape.mask=Full
1.033	OUT DEF: ^.layer_011.shape.mask=Full
1.023	IN  DEF: ^.size=(?,?)
1.012	IN  DEF: ^.layer_0.pos=(?,?)
1.001	IN  DEF: ^.layer_0.pos.i=1
0.991	IN  DEF: ^.layer_0.shape.size=(?,?)
0.980	IN  DEF: ^.layer_01.pos=(?,?)
0.970	IN  DEF: ^.layer_01.shape.size=(?,?)
0.963	OUT DEF: ^.color=black
0.957	OUT DEF: ^.size=(?,?)
0.950	OUT DEF: ^.size.j=^.layer_0.shape.size.j + ^.layer_01.shape.size.i
0.938	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.927	IN  DEF: ^.layer_011.pos=(?,?)
0.922	OUT DEF: ^.layer_0.pos=(?,?)
0.904	OUT DEF: ^.layer_0.pos.i=(0)
0.898	OUT DEF: ^.layer_0.shape.size=(?,?)
0.887	OUT DEF: ^.layer_0.shape.size.j=1
0.881	OUT DEF: ^.layer_01.pos=(?,?)
0.863	OUT DEF: ^.layer_01.pos.i=(0)
0.858	OUT DEF: ^.layer_01.shape.size=(?,?)
0.846	OUT DEF: ^.layer_01.shape.size.j=1
0.841	OUT DEF: ^.layer_011.pos=(?,?)
0.823	OUT DEF: ^.layer_011.pos.i=(0)
0.810	OUT DEF: ^.layer_011.pos.j=^.size.i - ^.layer_01.shape.size.i
0.804	OUT DEF: ^.layer_011.shape.size=(?,?)
0.784	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.pos.j + 2
0.773	OUT DEF: ^.layer_011.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.layer_0.shape.size.j + ^.layer_01.shape.size.i) and color black and layers
  _0: a rectangle with size (?,1) and color ^.layer_0.shape.color and mask Full at ((0),?)
  _01: a rectangle with size (?,1) and color ^.color and mask ^.layer_01.shape.mask at ((0),?)
  _011: a rectangle with size (^.layer_0.pos.j + 2,1) and color ^.layer_01.shape.color and mask Full at ((0),^.size.i - ^.layer_01.shape.size.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (1,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 89.9 + 2677.4 = 2767.3
DL output with Mo: L = 133.8 + 1406.2 = 1540.0
DL input+output M: L = 223.7 + 4083.6 = 4307.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta:
   (61.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,2)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (0,1)
diff: 
delta:
   (22.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,2)
  _011: a point with color green at (1,1)
diff:   ^.layer_0.pos.i
delta:
! size mismatch, 10x6 instead of 5x3
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask xx|x. at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _011: a point with color blue at (0,2)
diff:   ^.layer_0.pos.i
delta:
! size mismatch, 10x3 instead of 5x3

TRAIN 9af7a82c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _011: a point with color green at (0,0)
diff: 
delta:
   (66.3 bits)
data: a background with size (6,4) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _01: a rectangle with size (6,1) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color blue and mask Full at (0,2)
diff: 
delta: (0,3)=3 
   (46.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _011: a point with color green at (0,0)
diff: 
delta:
! size mismatch, 10x4 instead of 6x4
>> Trial 2
data: a background with size (3,4) and color red and layers
  _0: a rectangle with size (3,4) and color yellow and mask ...x|...x|xxxx at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _011: a point with color green at (0,0)
diff:   ^.layer_0.pos.i
delta:
! size mismatch, 10x5 instead of 6x4
>> Trial 3
data: a background with size (3,4) and color blue and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (3,4) and color yellow and mask ...x|xxxx|xxxx at (0,0)
  _011: a point with color green at (0,0)
diff:   ^.layer_01.shape.mask
delta:
! size mismatch, 10x6 instead of 6x4

TRAIN 9af7a82c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,3) and color cyan and layers
  _0: a rectangle with size (3,2) and color green and mask x.|xx|xx at (1,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
  _011: a point with color red at (0,2)
diff: 
delta:
   (74.6 bits)
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color cyan and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,3)=2 
   (45.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color green and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
  _011: a point with color red at (0,2)
diff:   ^.layer_0.pos.i
delta:
! size mismatch, 10x5 instead of 5x4
>> Trial 2
data: a background with size (4,3) and color cyan and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
  _011: a point with color red at (0,2)
diff: 
delta: (1,1)=8 
! size mismatch, 10x4 instead of 5x4
>> Trial 3
data: a background with size (4,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _01: a rectangle with size (3,2) and color green and mask Full at (1,0)
  _011: a point with color red at (0,2)
diff:   ^.layer_0.pos.i
delta:
! size mismatch, 10x6 instead of 5x4

TRAIN 9af7a82c.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
  _011: a point with color red at (1,1)
diff: 
delta:
   (65.9 bits)
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (0,1)
  _01: a rectangle with size (6,1) and color blue and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,2)
diff: 
delta:
   (27.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (3,2) and color red and mask xx|x.|x. at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
  _011: a point with color blue at (0,0)
diff: 
delta:
! size mismatch, 10x4 instead of 6x3

TRAIN 9af7a82c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (3,4) and color blue and mask x...|x...|xxxx at (1,0)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (0,2)
  _011: a point with color green at (2,1)
diff:   ^.layer_01.shape.mask
delta: (2,2)=3  (2,3)=4 
! size mismatch, 10x6 instead of 6x5
>> Trial 2
data: a background with size (4,4) and color red and layers
  _0: a rectangle with size (3,4) and color blue and mask x...|x...|xxxx at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (0,0)
  _011: a point with color green at (2,1)
diff:   ^.layer_01.shape.mask
delta: (2,2)=3  (2,3)=4 
! size mismatch, 10x6 instead of 6x5

TEST 9af7a82c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.6 sec (11.6 sec/task)
bits-train-error = 1406.2 bits (1406.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-161] Checking task 9d9215db.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3574.5 = 3583.4
DL output with Mo: L = 9.0 + 22620.3 = 22629.3
DL input+output M: L = 17.9 + 26194.7 = 26212.7

# learning a model for train pairs
2.000	
1.968	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.935	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.899	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.857	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.819	IN  DEF: ^.layer_0111.shape.color=blue
1.788	OUT DEF: ^.size=^.size
1.775	IN  DEF: ^.color=black
1.765	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.748	OUT DEF: ^.layer_0=^.layer_0
1.737	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.721	OUT DEF: ^.layer_01=^.layer_01
1.710	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
1.699	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
1.689	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
1.678	OUT OBJECT at ^.layer_011111: ^.layer_0.shape at ?
1.667	OUT OBJECT at ^.layer_0111111: ^.layer_0.shape at ?
1.657	OUT OBJECT at ^.layer_01111111: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011.shape at ?
  _0111: ^.layer_0111.shape at ?
  _01111: ^.layer_0.shape at ?
  _011111: ^.layer_0.shape at ?
  _0111111: ^.layer_0.shape at ?
  _01111111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color black and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color blue at ?

DL input  with Mi: L = 58.2 + 2829.6 = 2887.8
DL output with Mo: L = 77.3 + 19172.2 = 19249.5
DL input+output M: L = 135.5 + 22001.8 = 22137.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a point with color blue at (1,3)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
   (86.7 bits)
data: a background with size (19,19) and color black and layers
  _0: a point with color blue at (1,3)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (1,5)
  _01111: a point with color blue at (1,7)
  _011111: a point with color blue at (1,9)
  _0111111: a point with color blue at (1,11)
  _01111111: a point with color blue at (1,13)
diff: 
delta: (1,15)=1  (1,17)=8  (3,1)=1  (3,15)=2  (3,17)=1  (5,1)=1  (5,17)=1  (7,1)=1  (7,17)=1  (9,1)=1  (9,17)=1  (11,1)=1  (11,17)=1  (13,1)=1  (13,17)=1  (15,1)=1  (15,3)=2  (15,15)=2  (15,17)=1  (17,1)=8  (17,3)=1  (17,5)=1  (17,7)=1  (17,9)=1  (17,11)=1  (17,13)=1  (17,15)=1  (17,17)=8 
   (666.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (3,1)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (1,3)
diff: 
delta:
! 35 wrong pixels (generated / expected)

TRAIN 9d9215db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a point with color blue at (3,13)
  _01: a point with color green at (1,17)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta:
   (86.7 bits)
data: a background with size (19,19) and color black and layers
  _0: a point with color blue at (3,13)
  _01: a point with color green at (1,17)
  _011: a point with color yellow at (3,3)
  _0111: a point with color blue at (3,5)
  _01111: a point with color blue at (3,7)
  _011111: a point with color blue at (3,9)
  _0111111: a point with color blue at (3,11)
  _01111111: a point with color blue at (5,3)
diff: 
delta: (1,1)=3  (3,15)=4  (5,15)=1  (7,3)=1  (7,15)=1  (9,3)=1  (9,15)=1  (11,3)=1  (11,15)=1  (13,3)=1  (13,15)=1  (15,3)=4  (15,5)=1  (15,7)=1  (15,9)=1  (15,11)=1  (15,13)=1  (15,15)=4  (17,1)=3  (17,17)=3 
   (500.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color blue at (3,13)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color yellow at (3,15)
  _011: a point with color blue at (3,13)
  _0111: a point with color blue at (5,15)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN 9d9215db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,3)
  _01: a point with color yellow at (1,1)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
   (109.5 bits)
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,3)
  _01: a point with color yellow at (1,1)
  _011: a point with color green at (1,5)
  _0111: a point with color blue at (3,3)
  _01111: a point with color green at (1,7)
  _011111: a point with color green at (1,9)
  _0111111: a point with color green at (1,11)
  _01111111: a point with color green at (1,13)
diff: 
delta: (1,15)=3  (1,17)=4  (3,1)=3  (3,15)=1  (3,17)=3  (5,1)=3  (5,5)=8  (5,13)=8  (5,17)=3  (7,1)=3  (7,17)=3  (9,1)=3  (9,17)=3  (11,1)=3  (11,17)=3  (13,1)=3  (13,5)=8  (13,13)=8  (13,17)=3  (15,1)=3  (15,3)=1  (15,15)=1  (15,17)=3  (17,1)=4  (17,3)=3  (17,5)=3  (17,7)=3  (17,9)=3  (17,11)=3  (17,13)=3  (17,15)=3  (17,17)=4 
   (750.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (3,1)
  _011: a point with color green at (1,3)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
! 39 wrong pixels (generated / expected)

TRAIN 9d9215db.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color yellow at (13,5)
  _011: a point with color cyan at (13,7)
  _0111: a point with color blue at (17,1)
diff: 
delta: (15,1)=3  (15,3)=2  (17,3)=3 
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color yellow at (13,5)
  _011: a point with color green at (15,1)
  _0111: a point with color blue at (17,1)
diff: 
delta: (13,7)=8  (15,3)=2  (17,3)=3 
! 51 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color cyan at (13,7)
  _011: a point with color yellow at (13,5)
  _0111: a point with color blue at (17,1)
diff: 
delta: (15,1)=3  (15,3)=2  (17,3)=3 
! 51 wrong pixels (generated / expected)

TEST 9d9215db.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.7 sec (25.7 sec/task)
bits-train-error = 19172.2 bits (19172.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-160] Checking task 9dfd6313.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4079.0 = 4088.0
DL output with Mo: L = 9.0 + 4079.0 = 4088.0
DL input+output M: L = 17.9 + 8158.1 = 8176.0

# learning a model for train pairs
2.000	
1.849	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.698	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.355	OUT DEF: ^.layer_0=^.layer_0
1.254	OUT DEF: ^.size=^.size
1.208	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.164	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.129	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.096	IN  DEF: ^.layer_0.shape.color=grey
1.078	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
1.061	IN  DEF: ^.layer_01.shape.mask=Full
1.050	OUT DEF: ^.color=black
1.039	IN  DEF: ^.color=black
1.030	OUT DEF: ^.layer_01.pos=(?,?)
1.006	OUT DEF: ^.layer_01.pos.i=(0)
0.983	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.i
0.974	OUT DEF: ^.layer_01.shape.size=(?,?)
0.953	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.j
0.932	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.i
0.923	IN  DEF: ^.size=(?,?)
0.915	IN  DEF: ^.layer_0.pos=(?,?)
0.890	IN  DEF: ^.layer_0.pos.i=(0)
0.866	IN  DEF: ^.layer_0.pos.j=(0)
0.858	IN  DEF: ^.layer_0.shape.size=(?,?)
0.849	IN  DEF: ^.layer_01.pos=(?,?)
0.825	IN  DEF: ^.layer_01.pos.j=(0)
0.817	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_01.shape.size.j,^.layer_01.shape.size.i) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ((0),^.layer_01.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at ((0),(0))
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,(0))

DL input  with Mi: L = 71.2 + 2489.8 = 2560.9
DL output with Mo: L = 48.4 + 729.5 = 777.9
DL input+output M: L = 119.6 + 3219.2 = 3338.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,0)
diff: 
delta:
   (46.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN 9dfd6313.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (2,0)
diff: 
delta: (3,2)=4 
   (77.2 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (0,2)
diff: 
delta: (2,3)=4 
   (18.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (2,0)
diff: 
delta: (3,2)=4 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
diff:   ^.layer_01.pos.j
delta: (2,0)=6  (3,0)=6 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (2,0)
diff: 
delta: (1,1)=5# (2,2)=5# (3,2)=4  (3,3)=5#
! 4 wrong pixels (generated / expected)

TRAIN 9dfd6313.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
diff: 
delta: (3,1)=2  (4,1)=2  (4,3)=1 
   (125.5 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,2)
diff: 
delta: (1,3)=2  (1,4)=2  (3,4)=1 
   (54.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
diff: 
delta: (3,1)=2  (4,1)=2  (4,3)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (3,1)
diff:   ^.layer_01.pos.j
delta: (2,0)=8  (2,1)=8  (4,3)=1 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,3)
diff:   ^.layer_01.pos.j
delta: (2,0)=8  (2,1)=8  (3,1)=2  (4,1)=2 
! 6 wrong pixels (generated / expected)

TRAIN 9dfd6313.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,0)
diff: 
delta: (4,0)=2  (4,2)=8  (4,3)=8  (5,0)=2  (5,2)=6 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,0)
diff: 
delta: (2,0)=3  (2,1)=3  (4,2)=8  (4,3)=8  (5,2)=6 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
diff:   ^.layer_01.pos.j
delta: (2,0)=3  (2,1)=3  (4,0)=2  (5,0)=2  (5,2)=6 
! 8 wrong pixels (generated / expected)

TEST 9dfd6313.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 729.5 bits (729.5 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-159] Checking task 9ecd008a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 114365.2 = 114374.2
DL output with Mo: L = 9.0 + 2598.3 = 2607.2
DL input+output M: L = 17.9 + 116963.5 = 116981.4

# learning a model for train pairs
2.000	
1.830	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.749	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.696	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.654	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.626	OUT DEF: ^.layer_0.pos=^.layer_01.pos
1.572	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.559	OUT DEF: ^.size=(?,?)
1.497	OUT DEF: ^.size.i=3
1.434	OUT DEF: ^.size.j=3
1.421	OUT DEF: ^.layer_0.shape.size=(?,?)
1.373	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.i - 1
1.360	OUT DEF: ^.layer_01.pos=(?,?)
1.359	IN  DEF: ^.size=(?,?)
1.357	IN  DEF: ^.size.i=16
1.354	IN  DEF: ^.size.j=16
1.354	IN  DEF: ^.layer_0.pos=(?,?)
1.354	IN  DEF: ^.layer_0.shape.size=(?,?)
1.353	IN  DEF: ^.layer_01.pos=(?,?)
1.352	IN  DEF: ^.layer_01.pos.i=(0)
1.350	IN  DEF: ^.layer_01.pos.j=(0)
1.350	IN  DEF: ^.layer_01.shape.size=(?,?)
1.348	IN  DEF: ^.layer_01.shape.size.i=16
1.345	IN  DEF: ^.layer_01.shape.size.j=16
1.323	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.315	IN  DEF: ^.layer_011.shape.mask=Full
1.314	IN  DEF: ^.layer_011.pos=(?,?)
1.314	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (^.layer_0.pos.i - 1,?) and color ^.layer_0.shape.color and mask ? at ^.layer_01.pos
  _01: a point with color ? at (?,?)
WHERE (Mi)
a background with size (16,16) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (16,16) and color ? and mask ? at ((0),(0))
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 127.3 + 84693.2 = 84820.5
DL output with Mo: L = 69.6 + 1422.9 = 1492.4
DL input+output M: L = 196.9 + 86116.1 = 86312.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask ..xx|..xx|xx..|.x.. at (2,10)
  _01: a rectangle with size (16,16) and color cyan and mask .......xx.......|......xxxx......|.....x....x.xx..|....xx....xxxx..|...x......xxx...|..xx.......xxx..|.x............x.|xx............xx|xx............xx|.x............x.|..xx........xx..|...x........x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _011: a rectangle with size (12,4) and color yellow and mask Full at (2,2)
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,4)=1  (2,6)=2  (2,7)=9# (2,8)=9# (2,9)=2  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,6)=9# (3,7)=2  (3,8)=2  (3,9)=9# (3,14)=7# (3,15)=5# (4,2)=1  (5,1)=7# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=9# (5,8)=9# (5,10)=7# (5,14)=7# (6,2)=2  (6,3)=9# (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=3  (6,8)=3  (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,4)=0  (7,5)=0  (7,6)=0  (7,9)=3  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,4)=1  (8,5)=9# (8,6)=3  (8,9)=3  (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,4)=1  (9,5)=1  (9,7)=3  (9,8)=3  (9,12)=9# (9,13)=2  (10,1)=7# (10,5)=7# (10,7)=9# (10,8)=9# (10,10)=7# (10,11)=4  (10,14)=7# (11,2)=1  (11,10)=4  (11,11)=4  (12,0)=5# (12,1)=7# (12,6)=9# (12,7)=2  (12,8)=2  (12,9)=9# (12,12)=4  (12,13)=4  (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,4)=1  (13,6)=2  (13,7)=9# (13,8)=9# (13,9)=2  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
   (2794.0 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _01: a point with color orange at (0,1)
diff: 
delta: (2,1)=9# (2,2)=3 
   (57.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (8,8) and color blue and mask ..xxxx..|.....x..|.....xxx|...xx..x|x..xx..x|xxx..xxx|..x..x..|..xxxx.. at (4,4)
  _01: a rectangle with size (16,16) and color cyan and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x..xxxx..x...|..xx.....x..xx..|.x.......xxx..x.|xx.....xx..x..xx|xx..x..xx..x..xx|.x..xxx..xxx..x.|..xx..x..x..xx..|...x..xxxx..x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _011: a rectangle with size (4,12) and color yellow and mask Full at (10,2)
diff: 
delta: (0,0)=2  (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,2)=4  (2,3)=4  (2,6)=2  (2,7)=9# (2,8)=9# (2,9)=2  (2,12)=4  (2,13)=4  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,2)=4  (3,3)=4  (3,6)=9# (3,7)=2  (3,8)=2  (3,9)=9# (3,12)=4  (3,13)=4  (3,14)=7# (3,15)=5# (4,4)=4  (4,5)=4  (4,10)=4  (4,11)=4  (5,1)=7# (5,4)=0  (5,5)=0  (5,6)=0  (5,7)=9# (5,8)=9# (5,10)=7# (5,11)=4  (5,14)=7# (6,2)=2  (6,3)=9# (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=3  (6,8)=3  (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,4)=0  (7,5)=0  (7,6)=0  (7,9)=3  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,6)=3  (8,9)=3  (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,7)=3  (9,8)=3  (9,12)=9# (9,13)=2  (10,1)=7# (10,5)=7# (10,7)=9# (10,8)=9# (10,10)=7# (10,14)=7# (11,2)=1  (11,13)=1  (12,0)=5# (12,1)=7# (12,6)=9# (12,7)=2  (12,8)=2  (12,9)=9# (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,4)=1  (13,6)=2  (13,7)=9# (13,8)=9# (13,9)=2  (13,11)=1  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
! 6 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color orange and layers
  _0: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x.xx.x.|xxx..xxx|.....xxx|...xx.x.|...xxx..|...xx... at (4,4)
  _01: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx...xx...xx..|..x...xxxx...x..|xx...x.xx.x...xx|x...xxx..xxx...x|x........xxx...x|xx.....xx.x...xx|..x....xxx...x..|..xx...xx...xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _011: a rectangle with size (2,8) and color green and mask Full at (4,4)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=1  (0,12)=1  (0,13)=3  (0,14)=3  (0,15)=3  (1,0)=3  (1,1)=3  (1,2)=1  (1,3)=3  (1,7)=1  (1,8)=1  (1,12)=3  (1,13)=1  (1,14)=3  (1,15)=3  (2,0)=3  (2,1)=1  (2,2)=8  (2,3)=8  (2,6)=9# (2,9)=9# (2,12)=8  (2,13)=8  (2,14)=1  (2,15)=3  (3,0)=1  (3,1)=3  (3,2)=8  (3,3)=5# (3,5)=1  (3,7)=9# (3,8)=9# (3,10)=1  (3,12)=5# (3,13)=8  (3,14)=3  (3,15)=1  (4,6)=5# (4,9)=5# (5,3)=1  (5,12)=1  (6,2)=9# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,13)=9# (7,1)=1  (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,14)=1  (8,1)=1  (8,3)=9# (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=4  (8,8)=4  (8,12)=9# (8,14)=1  (9,2)=9# (9,4)=0  (9,5)=0  (9,6)=0  (9,9)=6  (9,11)=5# (9,13)=9# (10,3)=1  (10,4)=0  (10,5)=0  (10,6)=0  (10,10)=3  (10,11)=3  (10,12)=1  (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (12,0)=1  (12,1)=3  (12,2)=8  (12,3)=5# (12,5)=1  (12,7)=9# (12,8)=9# (12,10)=1  (12,12)=5# (12,13)=8  (12,14)=3  (12,15)=1  (13,0)=3  (13,1)=1  (13,2)=8  (13,3)=8  (13,6)=9# (13,9)=9# (13,12)=8  (13,13)=8  (13,14)=1  (13,15)=3  (14,0)=3  (14,1)=3  (14,2)=1  (14,3)=3  (14,7)=1  (14,8)=1  (14,12)=3  (14,13)=1  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=1  (15,12)=1  (15,13)=3  (15,14)=3  (15,15)=3 
   (2944.2 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,3) and color blue and mask xxx|.x.|..x at (0,0)
  _01: a point with color grey at (1,0)
diff: 
delta: (1,2)=6 
   (53.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color orange and layers
  _0: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x.xx.x.|xxx..xxx|.....xxx|...xx.x.|...xxx..|...xx... at (4,4)
  _01: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx...xx...xx..|..x...xxxx...x..|xx...x.xx.x...xx|x...xxx..xxx...x|x........xxx...x|xx.....xx.x...xx|..x....xxx...x..|..xx...xx...xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _011: a rectangle with size (2,8) and color green and mask Full at (4,4)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,3)=1  (0,12)=1  (0,13)=3  (0,14)=3  (0,15)=3  (1,0)=3  (1,1)=3  (1,2)=1  (1,3)=3  (1,7)=1  (1,8)=1  (1,12)=3  (1,13)=1  (1,14)=3  (1,15)=3  (2,0)=3  (2,1)=1  (2,2)=8  (2,3)=8  (2,6)=9# (2,9)=9# (2,12)=8  (2,13)=8  (2,14)=1  (2,15)=3  (3,0)=1  (3,1)=3  (3,2)=8  (3,3)=5# (3,5)=1  (3,7)=9# (3,8)=9# (3,10)=1  (3,12)=5# (3,13)=8  (3,14)=3  (3,15)=1  (4,6)=5# (4,9)=5# (5,3)=1  (5,12)=1  (6,2)=9# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,13)=9# (7,1)=1  (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,14)=1  (8,1)=1  (8,3)=9# (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=4  (8,8)=4  (8,12)=9# (8,14)=1  (9,2)=9# (9,4)=0  (9,5)=0  (9,6)=0  (9,9)=6  (9,11)=5# (9,13)=9# (10,3)=1  (10,4)=0  (10,5)=0  (10,6)=0  (10,10)=3  (10,11)=3  (10,12)=1  (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (12,0)=1  (12,1)=3  (12,2)=8  (12,3)=5# (12,5)=1  (12,7)=9# (12,8)=9# (12,10)=1  (12,12)=5# (12,13)=8  (12,14)=3  (12,15)=1  (13,0)=3  (13,1)=1  (13,2)=8  (13,3)=8  (13,6)=9# (13,9)=9# (13,12)=8  (13,13)=8  (13,14)=1  (13,15)=3  (14,0)=3  (14,1)=3  (14,2)=1  (14,3)=3  (14,7)=1  (14,8)=1  (14,12)=3  (14,13)=1  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,3)=1  (15,12)=1  (15,13)=3  (15,14)=3  (15,15)=3 
! 6 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color green and layers
  _0: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
  _01: a rectangle with size (16,16) and color grey and mask ......xxxx......|.....xx..xx.....|....xx....xx....|....x......x....|..xxxx.xx.xxxx..|.xx.x.x..x.x.xx.|xx...x....x...xx|x...x..........x|x...x..........x|xx...x........xx|.xx.x.x..x.x.xx.|..xxxx.xx.xxxx..|....x......x....|....xx....xx....|.....xx..xx.....|......xxxx...... at (0,0)
  _011: a rectangle with size (2,4) and color pink and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,2)=5# (0,5)=9# (0,10)=9# (0,13)=5# (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,14)=9# (2,0)=5# (2,15)=5# (3,1)=6  (3,3)=6  (3,5)=8  (3,10)=8  (3,12)=6  (3,14)=6  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (5,0)=9# (5,3)=8  (5,5)=8  (5,7)=6  (5,8)=6  (5,10)=8  (5,12)=8  (5,15)=9# (6,2)=6  (6,3)=6  (6,4)=2  (6,6)=9# (6,9)=9# (6,11)=2  (6,12)=6  (6,13)=6  (7,1)=8  (7,2)=6  (7,3)=6  (7,5)=6  (7,7)=9# (7,8)=9# (7,10)=0  (7,11)=0  (7,12)=0  (7,13)=6  (7,14)=8  (8,1)=8  (8,2)=6  (8,3)=6  (8,5)=6  (8,7)=9# (8,8)=9# (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,14)=8  (9,2)=6  (9,3)=6  (9,4)=2  (9,6)=9# (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=6  (10,0)=9# (10,3)=8  (10,5)=8  (10,7)=6  (10,8)=6  (10,10)=8  (10,12)=8  (10,15)=9# (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (12,1)=6  (12,3)=6  (12,5)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=8  (12,12)=6  (12,14)=6  (13,0)=5# (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,15)=5# (14,1)=9# (14,3)=6  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,14)=9# (15,0)=9# (15,2)=5# (15,5)=9# (15,10)=9# (15,13)=5# (15,15)=9#
   (2731.1 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,2) and color blue and mask .x|.x|x. at (0,0)
  _01: a point with color red at (2,1)
diff: 
delta:
   (31.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
  _01: a rectangle with size (16,16) and color grey and mask ......xxxx......|.....xx..xx.....|....xx....xx....|....x......x....|..xxxx.xx.xxxx..|.xx.x.x..x.x.xx.|xx...x....x...xx|x...x..........x|x...x..........x|xx...x........xx|.xx.x.x..x.x.xx.|..xxxx.xx.xxxx..|....x......x....|....xx....xx....|.....xx..xx.....|......xxxx...... at (0,0)
  _011: a rectangle with size (16,5) and color green and mask Full at (0,11)
diff: 
delta: (0,0)=9# (0,1)=3  (0,2)=5# (0,3)=3  (0,4)=3  (0,5)=9# (0,10)=9# (0,13)=5# (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=3  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,14)=9# (2,0)=5# (2,1)=3  (2,2)=3  (2,3)=3  (2,15)=5# (3,0)=3  (3,2)=3  (3,5)=8  (3,10)=8  (3,12)=6  (3,14)=6  (4,0)=3  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (5,0)=9# (5,3)=8  (5,5)=8  (5,10)=8  (5,12)=8  (5,15)=9# (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (6,12)=6  (6,13)=6  (7,1)=8  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,10)=0  (7,11)=0  (7,12)=0  (7,13)=6  (7,14)=8  (8,1)=8  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,14)=8  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=6  (10,0)=9# (10,3)=8  (10,5)=8  (10,10)=8  (10,12)=8  (10,15)=9# (11,0)=3  (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (12,0)=3  (12,2)=3  (12,5)=8  (12,10)=8  (12,12)=6  (12,14)=6  (13,0)=5# (13,1)=3  (13,2)=3  (13,3)=3  (13,15)=5# (14,0)=3  (14,1)=9# (14,2)=3  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,14)=9# (15,0)=9# (15,1)=3  (15,2)=5# (15,3)=3  (15,4)=3  (15,5)=9# (15,10)=9# (15,13)=5# (15,15)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (5,5) and color green and mask x....|x.x..|.xxx.|x.x..|.x.xx at (11,0)
  _01: a rectangle with size (16,16) and color grey and mask ......xxxx......|.....xx..xx.....|....xx....xx....|....x......x....|..xxxx....xxxx..|.xx.x......x.xx.|xx............xx|x..............x|x..............x|xx............xx|.xx.x......x.xx.|x.xxxx....xxxx..|x.x.x......x....|.xxxxx....xx....|x.x..xx..xx.....|.x.xx.xxxx...... at (0,0)
  _011: a rectangle with size (16,5) and color green and mask Full at (0,11)
diff: 
delta: (0,0)=9# (0,1)=3  (0,2)=5# (0,3)=3  (0,4)=3  (0,5)=9# (0,10)=9# (0,13)=5# (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=3  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,14)=9# (2,0)=5# (2,1)=3  (2,2)=3  (2,3)=3  (2,15)=5# (3,0)=3  (3,2)=3  (3,5)=8  (3,10)=8  (3,12)=6  (3,14)=6  (4,0)=3  (4,1)=9# (4,6)=2  (4,7)=1  (4,8)=1  (4,9)=2  (4,14)=9# (5,0)=9# (5,3)=8  (5,5)=8  (5,6)=1  (5,9)=1  (5,10)=8  (5,12)=8  (5,15)=9# (6,4)=2  (6,5)=1  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,10)=1  (6,11)=2  (6,12)=6  (6,13)=6  (7,1)=8  (7,4)=1  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,10)=0  (7,11)=0  (7,12)=0  (7,13)=6  (7,14)=8  (8,1)=8  (8,4)=1  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,14)=8  (9,4)=2  (9,5)=1  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=6  (10,0)=9# (10,3)=8  (10,5)=8  (10,6)=1  (10,9)=1  (10,10)=8  (10,12)=8  (10,15)=9# (11,1)=9# (11,6)=2  (11,7)=1  (11,8)=1  (11,9)=2  (11,14)=9# (12,5)=8  (12,10)=8  (12,12)=6  (12,14)=6  (13,0)=5# (13,15)=5# (14,1)=9# (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,14)=9# (15,0)=9# (15,2)=5# (15,5)=9# (15,10)=9# (15,13)=5# (15,15)=9#
! 9 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,8) and color grey and mask ..x..x..|.xx..xx.|x.xxxx.x|...xx...|..x..x.. at (11,4)
  _01: a rectangle with size (16,16) and color blue and mask .......xx.......|......x..x......|.....x....x.....|....x......x....|...xx......xx...|.............x..|..............x.|x..............x|x..............x|.x............x.|..x..........x..|...xx.x..x.xx...|....xxx..xxx....|....xxxxxxxx....|......xxxx......|......xxxx...... at (0,0)
  _011: a rectangle with size (4,16) and color brown and mask Full at (12,0)
diff: 
delta: (0,0)=4  (0,1)=8  (0,2)=9# (0,3)=9# (0,4)=6  (0,5)=6  (0,10)=6  (0,11)=6  (0,12)=9# (0,13)=9# (0,14)=8  (0,15)=4  (1,0)=8  (1,1)=6  (1,2)=9# (1,3)=9# (1,4)=6  (1,5)=7# (1,10)=7# (1,11)=6  (1,12)=9# (1,13)=9# (1,14)=6  (1,15)=8  (2,0)=9# (2,1)=9# (2,3)=2  (2,12)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=9# (3,2)=2  (3,3)=2  (3,7)=9# (3,8)=9# (3,12)=2  (3,13)=2  (3,14)=9# (3,15)=9# (4,0)=6  (4,1)=6  (4,5)=4  (4,7)=2  (4,8)=2  (4,10)=4  (4,14)=6  (4,15)=6  (5,0)=6  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=4  (5,5)=4  (5,6)=2  (5,7)=7# (5,8)=7# (5,9)=2  (5,10)=4  (5,11)=4  (5,14)=7# (5,15)=6  (6,1)=0  (6,2)=0  (6,3)=0  (6,5)=2  (6,6)=9# (6,9)=9# (6,10)=2  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=2  (7,5)=7# (7,7)=9# (7,8)=9# (7,10)=7# (7,11)=2  (7,12)=9# (8,3)=9# (8,4)=2  (8,5)=7# (8,7)=9# (8,8)=9# (8,10)=7# (8,11)=2  (8,12)=9# (9,5)=2  (9,6)=9# (9,9)=9# (9,10)=2  (10,0)=6  (10,1)=7# (10,4)=4  (10,5)=4  (10,6)=2  (10,7)=7# (10,8)=7# (10,9)=2  (10,10)=4  (10,11)=4  (10,14)=7# (10,15)=6  (11,0)=6  (11,1)=6  (11,5)=4  (11,7)=2  (11,8)=2  (11,10)=4  (11,14)=6  (11,15)=6  (12,2)=2  (12,3)=2  (12,7)=9# (12,8)=9# (12,12)=2  (12,13)=2  (13,2)=5# (13,3)=2  (13,12)=2  (13,13)=5# (14,0)=8  (14,1)=6  (14,4)=6  (14,5)=7# (14,10)=7# (14,11)=6  (14,14)=6  (14,15)=8  (15,0)=4  (15,1)=8  (15,4)=6  (15,5)=6  (15,10)=6  (15,11)=6  (15,14)=8  (15,15)=4 
! 6 wrong pixels (generated / expected)

TEST 9ecd008a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.9 sec (17.9 sec/task)
bits-train-error = 1422.9 bits (1422.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-158] Checking task 9edfc990.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 69909.9 = 69918.8
DL output with Mo: L = 9.0 + 73748.5 = 73757.5
DL input+output M: L = 17.9 + 143658.4 = 143676.3

# learning a model for train pairs
2.000	
1.982	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.954	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.940	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.915	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.904	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.884	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
1.873	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.864	OUT DEF: ^.size=^.size
1.858	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.844	OUT OBJECT at ^.layer_0110: ^.layer_01111.shape at ?
1.836	OUT OBJECT at ^.layer_01100: a rectangle with size ? and color ? and mask ? at ?
1.820	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: ^.layer_01.shape at ?
  _01100: a rectangle with size ? and color ? and mask ? at ?
  _0110: ^.layer_01111.shape at ?
  _011: ^.layer_011.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 65540.5 = 65644.3
DL output with Mo: L = 87.6 + 64871.6 = 64959.2
DL input+output M: L = 191.4 + 130412.0 = 130603.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _011: a rectangle with size (1,2) and color brown and mask Full at (8,0)
  _0111: a rectangle with size (1,2) and color brown and mask Full at (10,6)
  _01111: a rectangle with size (2,2) and color brown and mask Odd Checkboard at (0,11)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (1,0)=1  (1,3)=6  (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (1389.4 bits)
data: a background with size (13,13) and color cyan and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _01100: a rectangle with size (13,13) and color blue and mask .xxxx..x.x...|xxx.xxxxxxx..|.x...xx..x...|xx..x.xxxxx..|..xxx..xx....|..xxxxxxxx...|.xx.xxxx.xx..|xxx..xxxxxx.x|..xxxxxxx.xxx|.xx.x.xxxxx.x|.xx.x....x...|xxxxxxx..xxx.|xxx..x.xxxxx. at (0,0)
  _0110: a rectangle with size (2,2) and color brown and mask Odd Checkboard at (0,11)
  _011: a rectangle with size (1,2) and color brown and mask Full at (8,0)
  _0111: a rectangle with size (7,1) and color brown and mask Full at (0,0)
diff: 
delta: (0,5)=2  (0,8)=9# (0,10)=2  (0,11)=0  (1,3)=6  (1,12)=5# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,11)=0  (3,3)=6  (3,5)=6  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,0)=0  (5,11)=0  (5,12)=0  (6,3)=2  (6,8)=5# (6,12)=4  (7,4)=7# (7,11)=5# (8,9)=5# (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (1266.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _011: a rectangle with size (1,2) and color brown and mask Full at (8,0)
  _0111: a rectangle with size (1,2) and color brown and mask Full at (10,6)
  _01111: a rectangle with size (2,2) and color brown and mask Odd Checkboard at (0,11)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (1,0)=1  (1,3)=6  (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! 164 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _011: a rectangle with size (1,2) and color brown and mask Full at (8,0)
  _0111: a rectangle with size (1,2) and color brown and mask Full at (10,6)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (2,10)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,11)=0  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! 164 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _011: a rectangle with size (1,2) and color brown and mask Full at (8,0)
  _0111: a rectangle with size (1,2) and color brown and mask Full at (10,6)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (3,3)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,4)=0  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! 164 wrong pixels (generated / expected)

TRAIN 9edfc990.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,6)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (1,2)
  _01111: a rectangle with size (1,4) and color green and mask Full at (12,6)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (0,11)=1  (1,0)=3  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,7)=1  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
   (2143.5 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _01100: a rectangle with size (15,15) and color blue and mask ...........xxxx|.....xxx..xxx.x|...xxx..xxx.x.x|...x.xxx.x..x..|xxx.xx.x.xxx...|x...x.xxxx.xx..|......xxxx.x...|..xx.xxxxx.xxxx|..xx.xx.x..xxxx|xxxxx.xxx.x.x..|xx.x..x.xxx.xx.|..xx..xx.xx..xx|xxxx...x...xxx.|x.x.....xxxx..x|x......xxx.xxxx at (0,0)
  _0110: a rectangle with size (1,4) and color green and mask Full at (12,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,6)
  _0111: a rectangle with size (1,14) and color cyan and mask Full at (2,0)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,1)=9# (2,2)=2  (2,6)=6  (3,0)=6  (3,2)=4  (3,4)=4  (3,8)=6  (3,10)=6  (3,11)=9# (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,10)=2  (8,0)=3  (8,1)=3  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,4)=4  (10,5)=9# (10,7)=7# (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
   (2005.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,6)
  _0111: a rectangle with size (1,4) and color green and mask Full at (12,6)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (1,2)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (0,11)=1  (1,0)=3  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,7)=1  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
! 212 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,6)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (1,2)
  _01111: a rectangle with size (1,4) and color green and mask Full at (12,6)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (0,11)=1  (1,0)=3  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,7)=1  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
! 213 wrong pixels (generated / expected)

TRAIN 9edfc990.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _011: a rectangle with size (4,3) and color brown and mask ..x|.x.|xx.|x.. at (7,7)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (0,8)
  _01111: a rectangle with size (2,2) and color grey and mask x.|xx at (1,11)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
   (3021.1 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _01100: a rectangle with size (4,10) and color blue and mask Full at (12,1)
  _0110: a rectangle with size (2,2) and color grey and mask x.|xx at (1,11)
  _011: a rectangle with size (4,3) and color brown and mask ..x|.x.|xx.|x.. at (7,7)
  _0111: a rectangle with size (6,13) and color blue and mask Full at (2,0)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,11)=1  (0,12)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,12)=1  (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,1)=1  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,13)=8  (2,14)=5# (2,15)=8  (3,0)=0  (3,1)=2  (3,2)=6  (3,7)=3  (3,11)=8  (3,12)=0  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,1)=0  (7,2)=7# (7,3)=8  (7,11)=7# (7,12)=3  (7,14)=3  (7,15)=1  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,12)=1  (8,13)=7# (8,14)=1  (8,15)=1  (9,0)=7# (9,1)=5# (9,5)=8  (9,9)=1  (9,10)=1  (9,11)=7# (9,12)=1  (9,13)=1  (9,14)=1  (9,15)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (11,14)=1  (11,15)=1  (12,0)=9# (12,4)=6  (12,6)=8  (12,8)=3  (12,9)=3  (12,10)=0  (12,14)=1  (12,15)=4  (13,1)=4  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,8)=5# (14,9)=9# (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
   (3215.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _011: a rectangle with size (4,3) and color brown and mask ..x|.x.|xx.|x.. at (7,7)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (0,8)
  _01111: a rectangle with size (2,2) and color grey and mask x.|xx at (1,11)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
! 225 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,8)
  _0111: a rectangle with size (4,3) and color brown and mask ..x|.x.|xx.|x.. at (7,7)
  _01111: a rectangle with size (2,2) and color grey and mask x.|xx at (1,11)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
! 224 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (4,3) and color brown and mask ..x|.x.|xx.|x.. at (7,7)
  _011: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (0,8)
  _01111: a rectangle with size (2,2) and color grey and mask x.|xx at (1,11)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
! 225 wrong pixels (generated / expected)

TRAIN 9edfc990.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask xxx|.x. at (4,12)
  _01: a rectangle with size (3,2) and color red and mask xx|.x|.x at (3,7)
  _011: a rectangle with size (3,3) and color yellow and mask x..|.x.|.xx at (7,13)
  _0111: a rectangle with size (2,3) and color orange and mask xx.|..x at (14,4)
  _01111: a rectangle with size (3,3) and color pink and mask x..|.x.|..x at (0,10)
diff: 
delta: (0,3)=8  (0,5)=5# (0,8)=9# (0,15)=5# (1,0)=6  (1,1)=7# (1,2)=6  (1,4)=4  (1,6)=2  (1,9)=8  (1,10)=3  (1,12)=2  (2,3)=7# (2,6)=5# (2,7)=4  (2,8)=1  (2,10)=1  (2,11)=7# (3,1)=5# (3,2)=8  (3,4)=9# (3,10)=8  (3,12)=4  (3,15)=7# (4,0)=4  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=7# (4,7)=3  (4,10)=6  (4,11)=4  (5,1)=1  (5,2)=8  (5,4)=5# (5,11)=8  (5,14)=6  (5,15)=6  (6,0)=9# (6,1)=9# (6,3)=2  (6,4)=8  (6,7)=3  (6,10)=2  (6,13)=5# (6,14)=8  (7,0)=1  (7,1)=3  (7,3)=1  (7,4)=6  (7,5)=1  (7,9)=8  (8,2)=4  (8,4)=7# (8,5)=4  (8,8)=4  (8,11)=5# (8,12)=8  (9,3)=6  (9,5)=6  (9,11)=8  (9,13)=1  (10,1)=9# (10,4)=9# (10,10)=1  (10,11)=5# (10,13)=6  (11,0)=6  (11,2)=7# (11,3)=5# (11,4)=9# (11,6)=7# (11,10)=4  (11,11)=6  (11,13)=2  (11,14)=8  (12,0)=5# (12,4)=1  (12,6)=2  (12,7)=4  (12,8)=8  (12,11)=3  (12,13)=9# (12,15)=8  (13,0)=1  (13,3)=2  (13,4)=4  (13,8)=1  (13,9)=7# (13,14)=5# (14,0)=6  (14,1)=9# (14,6)=1  (14,8)=2  (14,11)=9# (14,12)=1  (14,14)=3  (15,0)=1  (15,1)=8  (15,2)=3  (15,5)=9# (15,8)=2  (15,9)=7# (15,10)=2  (15,12)=8  (15,13)=9#
! 216 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask xxx|.x. at (4,12)
  _01: a rectangle with size (3,2) and color red and mask xx|.x|.x at (3,7)
  _011: a rectangle with size (3,3) and color yellow and mask x..|.x.|.xx at (7,13)
  _0111: a rectangle with size (3,3) and color pink and mask x..|.x.|..x at (0,10)
  _01111: a rectangle with size (2,3) and color orange and mask xx.|..x at (14,4)
diff: 
delta: (0,3)=8  (0,5)=5# (0,8)=9# (0,15)=5# (1,0)=6  (1,1)=7# (1,2)=6  (1,4)=4  (1,6)=2  (1,9)=8  (1,10)=3  (1,12)=2  (2,3)=7# (2,6)=5# (2,7)=4  (2,8)=1  (2,10)=1  (2,11)=7# (3,1)=5# (3,2)=8  (3,4)=9# (3,10)=8  (3,12)=4  (3,15)=7# (4,0)=4  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=7# (4,7)=3  (4,10)=6  (4,11)=4  (5,1)=1  (5,2)=8  (5,4)=5# (5,11)=8  (5,14)=6  (5,15)=6  (6,0)=9# (6,1)=9# (6,3)=2  (6,4)=8  (6,7)=3  (6,10)=2  (6,13)=5# (6,14)=8  (7,0)=1  (7,1)=3  (7,3)=1  (7,4)=6  (7,5)=1  (7,9)=8  (8,2)=4  (8,4)=7# (8,5)=4  (8,8)=4  (8,11)=5# (8,12)=8  (9,3)=6  (9,5)=6  (9,11)=8  (9,13)=1  (10,1)=9# (10,4)=9# (10,10)=1  (10,11)=5# (10,13)=6  (11,0)=6  (11,2)=7# (11,3)=5# (11,4)=9# (11,6)=7# (11,10)=4  (11,11)=6  (11,13)=2  (11,14)=8  (12,0)=5# (12,4)=1  (12,6)=2  (12,7)=4  (12,8)=8  (12,11)=3  (12,13)=9# (12,15)=8  (13,0)=1  (13,3)=2  (13,4)=4  (13,8)=1  (13,9)=7# (13,14)=5# (14,0)=6  (14,1)=9# (14,6)=1  (14,8)=2  (14,11)=9# (14,12)=1  (14,14)=3  (15,0)=1  (15,1)=8  (15,2)=3  (15,5)=9# (15,8)=2  (15,9)=7# (15,10)=2  (15,12)=8  (15,13)=9#
! 216 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask xxx|.x. at (4,12)
  _01: a rectangle with size (3,2) and color red and mask xx|.x|.x at (3,7)
  _011: a rectangle with size (2,3) and color orange and mask xx.|..x at (14,4)
  _0111: a rectangle with size (3,3) and color yellow and mask x..|.x.|.xx at (7,13)
  _01111: a rectangle with size (3,3) and color pink and mask x..|.x.|..x at (0,10)
diff: 
delta: (0,3)=8  (0,5)=5# (0,8)=9# (0,15)=5# (1,0)=6  (1,1)=7# (1,2)=6  (1,4)=4  (1,6)=2  (1,9)=8  (1,10)=3  (1,12)=2  (2,3)=7# (2,6)=5# (2,7)=4  (2,8)=1  (2,10)=1  (2,11)=7# (3,1)=5# (3,2)=8  (3,4)=9# (3,10)=8  (3,12)=4  (3,15)=7# (4,0)=4  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=7# (4,7)=3  (4,10)=6  (4,11)=4  (5,1)=1  (5,2)=8  (5,4)=5# (5,11)=8  (5,14)=6  (5,15)=6  (6,0)=9# (6,1)=9# (6,3)=2  (6,4)=8  (6,7)=3  (6,10)=2  (6,13)=5# (6,14)=8  (7,0)=1  (7,1)=3  (7,3)=1  (7,4)=6  (7,5)=1  (7,9)=8  (8,2)=4  (8,4)=7# (8,5)=4  (8,8)=4  (8,11)=5# (8,12)=8  (9,3)=6  (9,5)=6  (9,11)=8  (9,13)=1  (10,1)=9# (10,4)=9# (10,10)=1  (10,11)=5# (10,13)=6  (11,0)=6  (11,2)=7# (11,3)=5# (11,4)=9# (11,6)=7# (11,10)=4  (11,11)=6  (11,13)=2  (11,14)=8  (12,0)=5# (12,4)=1  (12,6)=2  (12,7)=4  (12,8)=8  (12,11)=3  (12,13)=9# (12,15)=8  (13,0)=1  (13,3)=2  (13,4)=4  (13,8)=1  (13,9)=7# (13,14)=5# (14,0)=6  (14,1)=9# (14,6)=1  (14,8)=2  (14,11)=9# (14,12)=1  (14,14)=3  (15,0)=1  (15,1)=8  (15,2)=3  (15,5)=9# (15,8)=2  (15,9)=7# (15,10)=2  (15,12)=8  (15,13)=9#
! 216 wrong pixels (generated / expected)

TEST 9edfc990.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.1 sec (29.1 sec/task)
bits-train-error = 64871.6 bits (64871.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-157] Checking task 9f236235.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 95793.7 = 95802.7
DL output with Mo: L = 9.0 + 3005.2 = 3014.2
DL input+output M: L = 17.9 + 98798.9 = 98816.8

# learning a model for train pairs
2.000	
1.566	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.284	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.120	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.042	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.909	OUT DEF: ^.size=^.layer_011.shape.size
0.831	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.771	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 17692.8 = 17796.6
DL output with Mo: L = 30.2 + 1733.9 = 1764.1
DL input+output M: L = 134.0 + 19426.6 = 19560.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color red and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (15,0)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,0)
  _0111: a rectangle with size (4,4) and color green and mask Full at (5,5)
  _01111: a rectangle with size (4,4) and color green and mask Full at (10,10)
diff: 
delta:
   (565.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask ..x|.x.|x..|xxx at (0,1)
diff: 
delta:
   (42.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color red and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (15,0)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,0)
  _0111: a rectangle with size (4,4) and color green and mask Full at (5,5)
  _01111: a rectangle with size (4,4) and color green and mask Full at (10,10)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 9f236235.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color cyan and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color red and mask Full at (5,0)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (5,5)
  _01111: a rectangle with size (4,4) and color blue and mask Full at (10,10)
diff: 
delta: (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
   (902.3 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,2)
diff: 
delta: (1,2)=1  (2,1)=1  (3,0)=3 
   (83.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color cyan and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color red and mask Full at (5,0)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (5,5)
  _01111: a rectangle with size (4,4) and color blue and mask Full at (10,10)
diff: 
delta: (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
! 9 wrong pixels (generated / expected)

TRAIN 9f236235.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _01111: a rectangle with size (3,3) and color yellow and mask Full at (8,8)
diff: 
delta:
   (301.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (0,1)
diff: 
delta: (2,0)=4 
   (47.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _01111: a rectangle with size (3,3) and color yellow and mask Full at (8,8)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color red and mask Full at (3,0)
  _01: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,7) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _01111: a rectangle with size (3,3) and color yellow and mask Full at (8,8)
diff: 
delta:
! size mismatch, 3x7 instead of 3x3

TRAIN 9f236235.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color cyan and mask .....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (23,5) and color green and mask Full at (0,6)
  _011: a rectangle with size (5,23) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (5,5) and color red and mask Full at (12,0)
  _01111: a rectangle with size (5,5) and color red and mask Full at (12,18)
diff: 
delta:
! size mismatch, 5x23 instead of 4x4

TEST 9f236235.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.6 sec (19.6 sec/task)
bits-train-error = 1733.9 bits (1733.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-156] Checking task a1570a43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12718.3 = 12727.3
DL output with Mo: L = 9.0 + 12718.3 = 12727.3
DL input+output M: L = 17.9 + 25436.6 = 25454.5

# learning a model for train pairs
2.000	
1.493	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.986	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.834	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.777	OUT DEF: ^.size=^.size
0.762	IN  DEF: ^.layer_0.shape.color=red
0.750	OUT OBJECT at ^.layer_01: a point with color ? at ?
0.735	OUT DEF: ^.layer_01.shape.color=green
0.722	OUT OBJECT at ^.layer_010: a point with color ? at ?
0.707	OUT DEF: ^.layer_010.shape.color=green
0.693	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.676	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.662	OUT DEF: ^.layer_011.shape.color=green
0.647	OUT DEF: ^.layer_0111.shape.color=green
0.635	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.603	OUT DEF: ^.layer_01=^.layer_01
0.588	IN  DEF: ^.layer_01.shape.color=green
0.575	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.543	OUT DEF: ^.layer_010=^.layer_011
0.528	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.496	OUT DEF: ^.layer_011=^.layer_0111
0.479	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.447	OUT DEF: ^.layer_0111=^.layer_01111
0.433	IN  DEF: ^.layer_011.shape.color=green
0.418	IN  DEF: ^.layer_0111.shape.color=green
0.404	IN  DEF: ^.layer_01111.shape.color=green
0.399	OUT DEF: ^.color=black
0.394	IN  DEF: ^.color=black
0.390	IN  DEF: ^.size=(?,?)
0.386	IN  DEF: ^.layer_0.pos=(?,?)
0.383	OUT DEF: ^.layer_0.pos=(?,?)
0.370	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i + 1
0.357	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j + 1
0.353	IN  DEF: ^.layer_0.shape.size=(?,?)
0.332	IN  DEF: ^.layer_0.shape.size.i=5
0.310	IN  DEF: ^.layer_0.shape.size.j=5
0.306	IN  DEF: ^.layer_01.pos=(?,?)
0.302	IN  DEF: ^.layer_011.pos=(?,?)
0.299	IN  DEF: ^.layer_0111.pos=(?,?)
0.295	IN  DEF: ^.layer_01111.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_01.pos.i + 1,^.layer_01.pos.j + 1)
  _010: ^.layer_011
  _01: ^.layer_01
  _011: ^.layer_0111
  _0111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ? at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color green at (?,?)

DL input  with Mi: L = 121.8 + 3560.0 = 3681.8
DL output with Mo: L = 71.4 + 0.0 = 71.4
DL input+output M: L = 193.1 + 3560.0 = 3753.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (85.2 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (1,1)
  _010: a point with color green at (0,6)
  _01: a point with color green at (0,0)
  _011: a point with color green at (6,0)
  _0111: a point with color green at (6,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,0)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
   (90.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,2)
  _010: a point with color green at (1,7)
  _01: a point with color green at (1,1)
  _011: a point with color green at (7,1)
  _0111: a point with color green at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,0)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
   (91.4 bits)
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (2,2)
  _010: a point with color green at (1,7)
  _01: a point with color green at (1,1)
  _011: a point with color green at (7,1)
  _0111: a point with color green at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (89.1 bits)
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,1)
  _010: a point with color green at (0,6)
  _01: a point with color green at (0,0)
  _011: a point with color green at (6,0)
  _0111: a point with color green at (6,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask x....|xx...|xxx..|xxxxx|x.... at (2,0)
  _01: a point with color green at (1,0)
  _011: a point with color green at (1,6)
  _0111: a point with color green at (7,0)
  _01111: a point with color green at (7,6)
diff: 
delta:
correct output grid

TEST a1570a43.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 7.9 sec (7.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-155] Checking task a2fd1cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1954.1 = 1963.1
DL output with Mo: L = 9.0 + 11406.9 = 11415.9
DL input+output M: L = 17.9 + 13361.0 = 13379.0

# learning a model for train pairs
2.000	
1.442	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.335	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.268	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.189	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.133	OUT DEF: ^.size=^.size
1.109	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
1.079	OUT DEF: ^.layer_011=^.layer_0
1.052	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
0.982	IN  DEF: ^.layer_0.shape.color=red
0.912	IN  DEF: ^.layer_01.shape.color=green
0.881	OUT DEF: ^.layer_0111=^.layer_01
0.858	IN  DEF: ^.color=black
0.840	IN  DEF: ^.size=(?,?)
0.822	IN  DEF: ^.layer_0.pos=(?,?)
0.805	IN  DEF: ^.layer_01.pos=(?,?)
0.793	OUT DEF: ^.layer_0.shape.color=cyan
0.780	OUT DEF: ^.layer_01.shape.color=cyan
0.774	OUT DEF: ^.layer_0.shape.mask=Full
0.768	OUT DEF: ^.layer_01.shape.mask=Full
0.764	OUT DEF: ^.color=black
0.761	OUT DEF: ^.layer_0.pos=(?,?)
0.747	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j
0.744	OUT DEF: ^.layer_0.shape.size=(?,?)
0.738	OUT DEF: ^.layer_0.shape.size.j=1
0.735	OUT DEF: ^.layer_01.pos=(?,?)
0.722	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i
0.719	OUT DEF: ^.layer_01.shape.size=(?,?)
0.713	OUT DEF: ^.layer_01.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color cyan and mask Full at (?,^.layer_01.pos.j)
  _01: a rectangle with size (1,?) and color cyan and mask Full at (^.layer_0.pos.i,?)
  _011: ^.layer_0
  _0111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color green at (?,?)

DL input  with Mi: L = 49.4 + 1199.1 = 1248.5
DL output with Mo: L = 74.3 + 805.0 = 879.3
DL input+output M: L = 123.7 + 2004.1 = 2127.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color green at (13,10)
diff: 
delta:
   (41.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _01: a rectangle with size (1,6) and color cyan and mask Full at (1,5)
  _011: a point with color red at (1,4)
  _0111: a point with color green at (13,10)
diff: 
delta:
   (27.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color green at (13,10)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (13,10)
  _01: a point with color red at (1,4)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 21 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,16) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color green at (1,11)
diff: 
delta:
   (39.2 bits)
data: a background with size (10,16) and color black and layers
  _0: a rectangle with size (6,1) and color cyan and mask Full at (2,11)
  _01: a rectangle with size (1,10) and color cyan and mask Full at (7,2)
  _011: a point with color red at (7,1)
  _0111: a point with color green at (1,11)
diff: 
delta:
   (26.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color green at (1,11)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color black and layers
  _0: a point with color green at (1,11)
  _01: a point with color red at (7,1)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (1,11)
  _01: a point with color green at (10,4)
diff: 
delta:
   (39.5 bits)
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (9,1) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (1,4)
  _011: a point with color red at (1,11)
  _0111: a point with color green at (10,4)
diff: 
delta:
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (1,11)
  _01: a point with color green at (10,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a point with color green at (10,4)
  _01: a point with color red at (1,11)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 19 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (10,10)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a point with color green at (10,10)
  _01: a point with color red at (2,1)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 20 wrong pixels (generated / expected)

TEST a2fd1cf0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 805.0 bits (805.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-154] Checking task a3325580.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16993.2 = 17002.2
DL output with Mo: L = 9.0 + 5887.1 = 5896.1
DL input+output M: L = 17.9 + 22880.3 = 22898.3

# learning a model for train pairs
2.000	
1.683	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.491	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.314	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.198	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.150	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.127	OUT DEF: ^.layer_0.shape.mask=Full
1.114	OUT DEF: ^.size=(?,?)
1.050	OUT DEF: ^.size.i=^.layer_0.shape.size.j + ^.layer_01.shape.size.i
1.037	OUT DEF: ^.layer_0.pos=(?,?)
1.003	OUT DEF: ^.layer_0.pos.i=(0)
0.990	OUT DEF: ^.layer_0.shape.size=(?,?)
0.926	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j + ^.layer_01.shape.size.i
0.902	OUT DEF: ^.layer_0.shape.size.j=1
0.897	IN  DEF: ^.color=black
0.893	IN  DEF: ^.size=(?,?)
0.861	IN  DEF: ^.size.i=10
0.830	IN  DEF: ^.size.j=10
0.826	IN  DEF: ^.layer_011.pos=(?,?)
0.821	IN  DEF: ^.layer_0.shape.size=(?,?)
0.817	IN  DEF: ^.layer_011.shape.size=(?,?)
0.812	IN  DEF: ^.layer_0.pos=(?,?)
0.808	IN  DEF: ^.layer_01.pos=(?,?)
0.804	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.j + ^.layer_01.shape.size.i,?) and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.j + ^.layer_01.shape.size.i,1) and color ^.layer_0.shape.color and mask Full at ((0),?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 108.7 + 6973.0 = 7081.7
DL output with Mo: L = 67.9 + 2214.1 = 2282.0
DL input+output M: L = 176.6 + 9187.1 = 9363.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (1,7)
  _011: a rectangle with size (4,2) and color yellow and mask x.|x.|xx|x. at (2,2)
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
   (185.6 bits)
data: a background with size (5,3) and color cyan and layers
  _0: a rectangle with size (5,1) and color pink and mask Full at (0,1)
diff: 
delta: (0,0)=4  (1,0)=4  (2,0)=4  (3,0)=4  (4,0)=4 
   (102.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (1,7)
  _011: a rectangle with size (4,2) and color yellow and mask x.|x.|xx|x. at (2,2)
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 5x10 instead of 5x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
  _01: a rectangle with size (4,2) and color yellow and mask x.|x.|xx|x. at (2,2)
  _011: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (1,7)
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 6x10 instead of 5x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (1,7)
  _01: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
  _011: a rectangle with size (4,2) and color yellow and mask x.|x.|xx|x. at (2,2)
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 6x10 instead of 5x3

TRAIN a3325580.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
  _01: a rectangle with size (6,3) and color brown and mask .x.|.xx|xx.|.x.|.xx|.x. at (3,0)
  _011: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|..x at (3,4)
diff: 
delta:
   (133.2 bits)
data: a background with size (9,2) and color brown and layers
  _0: a rectangle with size (9,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
  _01: a rectangle with size (6,3) and color brown and mask .x.|.xx|xx.|.x.|.xx|.x. at (3,0)
  _011: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|..x at (3,4)
diff: 
delta:
! size mismatch, 9x10 instead of 9x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
  _01: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|..x at (3,4)
  _011: a rectangle with size (6,3) and color brown and mask .x.|.xx|xx.|.x.|.xx|.x. at (3,0)
diff: 
delta:
! size mismatch, 7x10 instead of 9x2
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color brown and mask .x.|.xx|xx.|.x.|.xx|.x. at (3,0)
  _01: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
  _011: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|..x at (3,4)
diff: 
delta:
! size mismatch, 8x10 instead of 9x2

TRAIN a3325580.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _01: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,9)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
   (155.4 bits)
data: a background with size (5,1) and color brown and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (0,0)
diff: 
delta:
   (11.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _01: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,9)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 5x10 instead of 5x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,9)
  _011: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 7x10 instead of 5x1
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
  _01: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,9)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 6x10 instead of 5x1

TRAIN a3325580.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color pink and mask Full at (4,6)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
diff: 
delta:
   (69.9 bits)
data: a background with size (3,1) and color brown and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (11.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
  _011: a rectangle with size (2,1) and color pink and mask Full at (4,6)
diff: 
delta:
! size mismatch, 2x10 instead of 3x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color pink and mask Full at (4,6)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
diff: 
delta:
! size mismatch, 3x10 instead of 3x1
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _011: a rectangle with size (2,1) and color pink and mask Full at (4,6)
diff: 
delta:
! size mismatch, 5x10 instead of 3x1

TRAIN a3325580.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
  _01: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,1)
diff: 
delta:
   (75.4 bits)
data: a background with size (3,2) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
  _01: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,1)
diff: 
delta:
! size mismatch, 3x10 instead of 3x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (5,1)
diff: 
delta:
! size mismatch, 4x10 instead of 3x2
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask x.|xx at (4,1)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,5)
  _011: a rectangle with size (2,1) and color green and mask Full at (2,6)
diff: 
delta:
! size mismatch, 3x10 instead of 3x2

TRAIN a3325580.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,1)
diff: 
delta:
   (77.8 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta: (0,0)=1  (1,0)=1  (2,0)=1 
   (66.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _01: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,1)
diff: 
delta:
! size mismatch, 5x10 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,1)
diff: 
delta:
! size mismatch, 3x10 instead of 3x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,1)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
diff: 
delta:
! size mismatch, 6x10 instead of 3x3

TRAIN a3325580.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,7)
  _01: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (1,1)
  _011: a rectangle with size (3,2) and color red and mask xx|x.|x. at (7,3)
diff: 
delta: (5,5)=9# (5,6)=9# (6,0)=8  (7,0)=8  (8,0)=8 
! size mismatch, 6x10 instead of 4x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (1,1)
  _01: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,7)
  _011: a rectangle with size (3,2) and color red and mask xx|x.|x. at (7,3)
diff: 
delta: (5,5)=9# (5,6)=9# (6,0)=8  (7,0)=8  (8,0)=8 
! size mismatch, 4x10 instead of 4x3

TEST a3325580.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.7 sec (3.7 sec/task)
bits-train-error = 2214.1 bits (2214.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-153] Checking task a3df8b1e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1086.8 = 1095.8
DL output with Mo: L = 9.0 + 5917.5 = 5926.5
DL input+output M: L = 17.9 + 7004.3 = 7022.3

# learning a model for train pairs
2.000	
1.379	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.236	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.110	IN  DEF: ^.layer_0.shape.color=blue
1.031	OUT DEF: ^.size=^.size
0.951	OUT DEF: ^.layer_0.shape.size=^.size
0.910	IN  DEF: ^.color=black
0.878	IN  DEF: ^.size=(?,?)
0.637	IN  DEF: ^.size.i=10
0.605	IN  DEF: ^.layer_0.pos=(?,?)
0.480	IN  DEF: ^.layer_0.pos.i=9
0.402	IN  DEF: ^.layer_0.pos.j=(0)
0.378	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.371	OUT DEF: ^.color=black
0.365	OUT DEF: ^.layer_0.pos=(?,?)
0.341	OUT DEF: ^.layer_0.pos.i=(0)
0.327	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at ((0),^.layer_0.pos.j)
WHERE (Mi)
a background with size (10,?) and color black and layers
  _0: a point with color blue at (9,(0))

DL input  with Mi: L = 38.5 + 161.4 = 199.8
DL output with Mo: L = 28.8 + 827.6 = 856.4
DL input+output M: L = 67.3 + 989.0 = 1056.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (4.3 bits)
data: a background with size (10,2) and color black and layers
  _0: a rectangle with size (10,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (5.5 bits)
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (10,3) and color blue and mask .x.|x..|.x.|..x|.x.|x..|.x.|..x|.x.|x.. at (0,0)
diff: 
delta:
   (33.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (6.3 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (10,4) and color blue and mask ...x|..x.|.x..|x...|.x..|..x.|...x|..x.|.x..|x... at (0,0)
diff: 
delta:
   (43.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST a3df8b1e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 827.6 bits (827.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-152] Checking task a416b8f3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4129.5 = 4138.4
DL output with Mo: L = 9.0 + 8196.8 = 8205.8
DL input+output M: L = 17.9 + 12326.3 = 12344.2

# learning a model for train pairs
2.000	
1.886	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.751	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.616	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.524	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.452	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.389	OUT OBJECT at ^.layer_0110: ^.layer_01.shape at ?
1.314	OUT OBJECT at ^.layer_01101: ^.layer_01.shape at ?
1.283	OUT DEF: ^.layer_0=^.layer_0
1.251	OUT DEF: ^.layer_0110=^.layer_01
1.221	IN  DEF: ^.layer_01.shape.color=red
1.204	IN  DEF: ^.layer_01.shape.mask=Full
1.193	IN  DEF: ^.color=black
1.184	OUT DEF: ^.layer_011.shape.mask=Full
1.176	IN  DEF: ^.size=(?,?)
1.167	IN  DEF: ^.layer_0.pos=(?,?)
1.157	IN  DEF: ^.layer_0.pos.i=(0)
1.135	IN  DEF: ^.layer_0.pos.j=(0)
1.127	IN  DEF: ^.layer_0.shape.size=(?,?)
1.096	IN  DEF: ^.layer_0.shape.size.j=2
1.087	IN  DEF: ^.layer_01.pos=(?,?)
1.079	IN  DEF: ^.layer_01.shape.size=(?,?)
1.073	OUT DEF: ^.color=black
1.069	OUT DEF: ^.size=(?,?)
1.042	OUT DEF: ^.size.j=^.size.j + ^.size.j
1.020	OUT DEF: ^.size.i=^.size.i
1.016	OUT DEF: ^.layer_01.pos=(?,?)
1.001	OUT DEF: ^.layer_01.pos.j=^.size.j
0.990	OUT DEF: ^.layer_01.pos.i=(0)
0.985	OUT DEF: ^.layer_01101.pos=(?,?)
0.972	OUT DEF: ^.layer_01101.pos.j=^.size.j + ^.layer_01.pos.j
0.961	OUT DEF: ^.layer_01101.pos.i=^.layer_01.pos.i
0.956	OUT DEF: ^.layer_011.pos=(?,?)
0.943	OUT DEF: ^.layer_011.pos.j=^.layer_01.shape.size.i - 1
0.933	OUT DEF: ^.layer_011.pos.i=^.layer_0.shape.size.j - ^.layer_01.pos.j
0.929	OUT DEF: ^.layer_011.shape.size=(?,?)
0.920	OUT DEF: ^.layer_011.shape.size.i=^.size.i - ^.layer_0.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j + ^.size.j) and color black and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at ((0),^.size.j)
  _0110: ^.layer_01
  _01101: ^.layer_01.shape at (^.layer_01.pos.i,^.size.j + ^.layer_01.pos.j)
  _011: a rectangle with size (^.size.i - ^.layer_0.shape.size.i,?) and color ? and mask Full at (^.layer_0.shape.size.j - ^.layer_01.pos.j,^.layer_01.shape.size.i - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,2) and color ? and mask ? at ((0),(0))
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 71.7 + 2616.0 = 2687.6
DL output with Mo: L = 144.4 + 2072.0 = 2216.4
DL input+output M: L = 216.1 + 4688.0 = 4904.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask .x|xx at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
diff: 
delta:
   (37.5 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask .x|xx at (0,3)
  _0110: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _01101: a rectangle with size (1,1) and color red and mask Full at (1,5)
  _011: a rectangle with size (1,1) and color black and mask Full at (0,0)
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask .x|xx at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
diff: 
delta: (0,0)=0 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
diff:   ^.layer_0.pos.i
delta: (0,1)=5#
! 5 wrong pixels (generated / expected)

TRAIN a416b8f3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (2,1)=1  (2,2)=8  (3,1)=1 
   (91.8 bits)
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,3)
  _0110: a rectangle with size (2,1) and color red and mask Full at (1,0)
  _01101: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _011: a rectangle with size (2,1) and color blue and mask Full at (2,1)
diff: 
delta: (2,2)=8  (2,4)=1  (2,5)=8  (3,4)=1 
   (79.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (2,1)=1  (2,2)=8  (3,1)=1 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (2,1)
diff:   ^.layer_01.shape.color
delta: (1,0)=2  (2,0)=2  (2,2)=8 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff:   ^.layer_0.shape.size.j
delta: (1,1)=3  (2,1)=1  (2,2)=8  (3,1)=1 
! 10 wrong pixels (generated / expected)

TRAIN a416b8f3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=3  (1,2)=3  (2,2)=8  (2,3)=8  (3,2)=6 
   (132.3 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,4)
  _0110: a rectangle with size (3,2) and color red and mask Full at (0,0)
  _01101: a rectangle with size (3,2) and color red and mask Full at (0,4)
  _011: a rectangle with size (1,6) and color cyan and mask Full at (2,2)
diff: 
delta: (0,2)=3  (0,6)=3  (1,2)=3  (1,6)=3  (3,2)=6  (3,6)=6 
   (121.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=3  (1,2)=3  (2,2)=8  (2,3)=8  (3,2)=6 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
diff: 
delta: (0,2)=3  (1,0)=2  (1,2)=3  (2,2)=8  (2,3)=8  (3,2)=6 
! 13 wrong pixels (generated / expected)

TRAIN a416b8f3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
diff:   ^.layer_01.shape.color  ^.layer_0.pos.i
delta: (1,1)=5# (2,1)=5# (2,2)=6  (3,2)=1  (4,3)=1 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color grey and mask Full at (1,1)
diff:   ^.layer_01.shape.color  ^.layer_0.pos.i
delta: (0,0)=4  (1,0)=4  (2,2)=6  (3,2)=1  (4,3)=1 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (3,0)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.size.j
delta: (1,1)=5# (2,1)=5# (2,2)=6  (3,2)=1  (4,3)=1 
! 11 wrong pixels (generated / expected)

TEST a416b8f3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.9 sec (19.9 sec/task)
bits-train-error = 2072.0 bits (2072.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-151] Checking task a48eeaf7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3372.2 = 3381.2
DL output with Mo: L = 9.0 + 3372.2 = 3381.2
DL input+output M: L = 17.9 + 6744.5 = 6762.4

# learning a model for train pairs
2.000	
1.711	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.422	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.254	OUT DEF: ^.layer_0=^.layer_0
1.140	OUT DEF: ^.size=^.size
1.113	IN  DEF: ^.layer_0.shape.color=red
1.091	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.064	OUT DEF: ^.layer_01.shape.color=grey
1.040	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.012	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.985	OUT DEF: ^.layer_011.shape.color=grey
0.958	OUT DEF: ^.layer_0111.shape.color=grey
0.936	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.912	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.885	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.876	OUT DEF: ^.color=black
0.870	OUT DEF: ^.layer_01.pos=(?,?)
0.846	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i - 1
0.839	OUT DEF: ^.layer_011.pos=(?,?)
0.813	OUT DEF: ^.layer_011.pos.i=^.layer_011.pos.i
0.789	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.i + 2
0.783	IN  DEF: ^.size=(?,?)
0.731	IN  DEF: ^.size.i=10
0.680	IN  DEF: ^.size.j=10
0.671	IN  DEF: ^.color=black
0.664	IN  DEF: ^.layer_0.pos=(?,?)
0.658	OUT DEF: ^.layer_0111.pos=(?,?)
0.634	OUT DEF: ^.layer_0111.pos.i=^.layer_0111.pos.i - 2
0.610	OUT DEF: ^.layer_0111.pos.j=^.layer_0.shape.size.j + 3
0.596	IN  DEF: ^.layer_0.shape.mask=Full
0.590	IN  DEF: ^.layer_0.shape.size=(?,?)
0.565	IN  DEF: ^.layer_0.shape.size.i=2
0.539	IN  DEF: ^.layer_0.shape.size.j=2
0.512	IN  DEF: ^.layer_01.shape.color=grey
0.506	IN  DEF: ^.layer_01.pos=(?,?)
0.479	IN  DEF: ^.layer_01.pos.i=(0)
0.452	IN  DEF: ^.layer_011.shape.color=grey
0.445	IN  DEF: ^.layer_011.pos=(?,?)
0.418	IN  DEF: ^.layer_011.pos.i=3
0.391	IN  DEF: ^.layer_0111.shape.color=grey
0.385	IN  DEF: ^.layer_0111.pos=(?,?)
0.383	OUT DEF: ^.layer_01.shape=^.layer_01.shape
0.382	OUT DEF: ^.layer_011.shape=^.layer_011.shape
0.381	OUT DEF: ^.layer_0111.shape=^.layer_0111.shape

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at (^.layer_0.pos.i - 1,?)
  _011: ^.layer_011.shape at (^.layer_011.pos.i,^.layer_0.pos.i + 2)
  _0111: ^.layer_0111.shape at (^.layer_0111.pos.i - 2,^.layer_0.shape.size.j + 3)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (?,?)
  _01: a point with color grey at ((0),?)
  _011: a point with color grey at (3,?)
  _0111: a point with color grey at (?,?)

DL input  with Mi: L = 110.8 + 766.2 = 877.0
DL output with Mo: L = 109.6 + 301.9 = 411.4
DL input+output M: L = 220.4 + 1068.1 = 1288.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (3,8)
  _0111: a point with color grey at (7,7)
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (3,5)
  _0111: a point with color grey at (5,5)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (3,8)
  _0111: a point with color grey at (7,7)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (7,7)
  _0111: a point with color grey at (3,8)
diff:   ^.layer_011.pos.i
delta:
! 6 wrong pixels (generated / expected)

TRAIN a48eeaf7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (6,9)
diff: 
delta: (8,5)=5#
   (48.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (3,4)
  _0111: a point with color grey at (4,5)
diff: 
delta: (4,7)=5#
   (25.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (6,9)
diff: 
delta: (8,5)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (8,5)
diff: 
delta: (6,9)=5#
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (6,9)
  _0111: a point with color grey at (3,1)
diff:   ^.layer_011.pos.i
delta: (8,5)=5#
! 7 wrong pixels (generated / expected)

TRAIN a48eeaf7.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,2)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (1,8)
  _0111: a point with color grey at (6,7)
diff:   ^.layer_011.pos.i
delta: (9,2)=5#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,2)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (1,8)
  _0111: a point with color grey at (9,2)
diff:   ^.layer_011.pos.i
delta: (6,7)=5#
! 7 wrong pixels (generated / expected)

TEST a48eeaf7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.4 sec (2.4 sec/task)
bits-train-error = 301.9 bits (301.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-150] Checking task a5313dff.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17518.1 = 17527.1
DL output with Mo: L = 9.0 + 24741.5 = 24750.4
DL input+output M: L = 17.9 + 42259.6 = 42277.5

# learning a model for train pairs
2.000	
1.261	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.645	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.434	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.401	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.378	OUT DEF: ^.size=^.size
0.366	OUT DEF: ^.layer_0=^.layer_0
0.358	IN  DEF: ^.layer_0.shape.color=red
0.350	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.342	IN  DEF: ^.layer_01.shape.color=red
0.336	OUT DEF: ^.layer_011.shape.color=blue
0.334	OUT DEF: ^.layer_01.shape.mask=Full
0.331	OUT DEF: ^.layer_011.shape.mask=Full
0.328	IN  DEF: ^.color=black
0.326	OUT OBJECT at ^.layer_0110: ^.layer_01.shape at ?
0.313	OUT DEF: ^.layer_0110=^.layer_01
0.311	IN  DEF: ^.layer_0.pos=(?,?)
0.309	IN  DEF: ^.size=(?,?)
0.307	IN  DEF: ^.layer_0.shape.size=(?,?)
0.305	IN  DEF: ^.layer_01.pos=(?,?)
0.303	OUT DEF: ^.color=black
0.302	OUT DEF: ^.layer_01.pos=(?,?)
0.297	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i + 1
0.292	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j + 1
0.291	OUT DEF: ^.layer_01.shape.size=(?,?)
0.286	OUT DEF: ^.layer_01.shape.size.j=^.size.j - ^.layer_0.shape.size.j
0.284	OUT DEF: ^.layer_011.pos=(?,?)
0.279	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j - 1
0.274	OUT DEF: ^.layer_011.pos.i=^.layer_0.shape.size.i - ^.layer_01.pos.j
0.273	OUT DEF: ^.layer_011.shape.size=(?,?)
0.266	OUT DEF: ^.layer_011.shape.size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.size.j - ^.layer_0.shape.size.j) and color ? and mask Full at (^.layer_0.pos.i + 1,^.layer_0.pos.j + 1)
  _0110: ^.layer_01
  _011: a rectangle with size (3,?) and color blue and mask Full at (^.layer_0.shape.size.i - ^.layer_01.pos.j,^.layer_01.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 60.7 + 3918.5 = 3979.2
DL output with Mo: L = 132.9 + 838.3 = 971.2
DL input+output M: L = 193.6 + 4756.8 = 4950.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a point with color red at (3,3)
diff: 
delta:
   (52.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,2)
  _0110: a point with color red at (3,3)
  _011: a rectangle with size (3,3) and color blue and mask Full at (2,2)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a point with color red at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a point with color black at (2,2)
diff:   ^.layer_01.shape.color
delta: (3,3)=2 
! 8 wrong pixels (generated / expected)

TRAIN a5313dff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (5,4)
diff: 
delta: (1,1)=2 
   (129.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _0110: a point with color red at (5,4)
  _011: a rectangle with size (3,3) and color blue and mask Full at (4,3)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta: (5,4)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (5,4)
diff: 
delta: (1,1)=2 
! 5 wrong pixels (generated / expected)

TRAIN a5313dff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (11,9)
diff: 
delta: (2,5)=2  (6,5)=2 
   (209.8 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a rectangle with size (7,3) and color blue and mask Full at (1,4)
  _0110: a point with color red at (11,9)
  _011: a rectangle with size (3,2) and color blue and mask Full at (3,8)
diff: 
delta: (2,5)=2  (6,5)=2 
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (2,5)
diff: 
delta: (6,5)=2  (11,9)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (6,5)
diff: 
delta: (2,5)=2  (11,9)=2 
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (11,9)
diff: 
delta: (2,5)=2  (6,5)=2 
! 18 wrong pixels (generated / expected)

TRAIN a5313dff.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask ..xxxxx..|..x...x..|..x...x..|xxxxxxx..|x...x....|x...x....|x...xxxxx|xxxxx....|....x.... at (0,0)
  _01: a point with color red at (5,2)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask ..xxxxx..|..x...x..|..x...x..|xxxxxxx..|x...x....|x...x....|x...xxxxx|xxxxx....|....x.... at (0,0)
  _01: a point with color black at (4,1)
diff:   ^.layer_01.shape.color
delta: (5,2)=2 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask ..xxxxx..|..x...x..|..x...x..|xxxxxxx..|x...x....|x...x....|x...xxxxx|xxxxx....|....x.... at (0,0)
  _01: a point with color black at (4,2)
diff:   ^.layer_01.shape.color
delta: (5,2)=2 
! 17 wrong pixels (generated / expected)

TEST a5313dff.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.1 sec (14.1 sec/task)
bits-train-error = 838.3 bits (838.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-149] Checking task a5f85a15.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4186.4 = 4195.4
DL output with Mo: L = 9.0 + 4186.4 = 4195.4
DL input+output M: L = 17.9 + 8372.8 = 8390.7

# learning a model for train pairs
2.000	
1.812	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.701	OUT DEF: ^.size=^.size
1.639	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.612	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.549	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.516	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.488	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.426	OUT DEF: ^.layer_01.pos=^.layer_01.pos
1.392	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.362	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.330	OUT DEF: ^.layer_011.shape.color=yellow
1.319	OUT DEF: ^.color=black
1.308	IN  DEF: ^.color=black
1.300	OUT DEF: ^.layer_011.pos=(?,?)
1.274	OUT DEF: ^.layer_011.pos.i=1
1.250	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j + 1
1.242	IN  DEF: ^.size=(?,?)
1.233	IN  DEF: ^.layer_0.pos=(?,?)
1.225	IN  DEF: ^.layer_0.shape.size=(?,?)
1.217	IN  DEF: ^.layer_01.pos=(?,?)
1.190	IN  DEF: ^.layer_01.pos.i=(0)
1.182	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos
  _01: a point with color ^.layer_01.shape.color at ^.layer_01.pos
  _011: a point with color yellow at (1,^.layer_01.pos.j + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at ((0),?)

DL input  with Mi: L = 69.9 + 2743.8 = 2813.7
DL output with Mo: L = 63.3 + 2081.1 = 2144.4
DL input+output M: L = 133.1 + 4824.9 = 4958.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color red and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (59.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color red at (0,0)
  _011: a point with color yellow at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|.x.|..x at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color red and mask x..|.x.|..x at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color red and mask x..|.x.|..x at (0,0)
diff: 
delta:
correct output grid

TRAIN a5f85a15.json/1: 1 3rd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
  _01: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
diff: 
delta:
   (124.6 bits)
data: a background with size (8,8) and color black and layers
  _0: a point with color brown at (4,0)
  _01: a point with color brown at (0,2)
  _011: a point with color yellow at (1,3)
diff: 
delta: (2,4)=9# (3,5)=4  (4,6)=9# (5,1)=4  (5,7)=4  (6,2)=9# (7,3)=4 
   (133.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
  _01: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
  _01: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
diff:   ^.layer_01.pos.i
delta:
! 9 wrong pixels (generated / expected)

TRAIN a5f85a15.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
  _01: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
diff: 
delta:
   (90.7 bits)
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,0)
  _01: a point with color green at (0,2)
  _011: a point with color yellow at (1,3)
diff: 
delta: (2,4)=3  (3,5)=4  (4,1)=4  (5,2)=3 
   (74.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
  _01: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
  _01: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
diff:   ^.layer_01.pos.i
delta:
! 6 wrong pixels (generated / expected)

TRAIN a5f85a15.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,11) and color pink and mask x..........|.x.........|..x........|...x.......|....x......|.....x.....|......x....|.......x...|........x..|.........x.|..........x at (1,0)
  _01: a rectangle with size (8,8) and color pink and mask x.......|.x......|..x.....|...x....|....x...|x....x..|.x....x.|..x....x at (0,4)
diff: 
delta: (8,0)=6  (9,1)=6  (10,2)=6  (11,3)=6 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (8,8) and color pink and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,4)
  _01: a rectangle with size (11,11) and color pink and mask x....x.....|.x....x....|..x....x...|...x....x..|....x....x.|.....x....x|......x....|.......x...|........x..|.........x.|..........x at (1,0)
diff:   ^.layer_01.pos.i
delta: (8,0)=6  (9,1)=6  (10,2)=6  (11,3)=6 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask x...|.x..|..x.|...x at (8,0)
  _01: a rectangle with size (8,8) and color pink and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,4)
diff: 
delta: (1,0)=6  (2,1)=6  (3,2)=6  (4,3)=6  (5,4)=6  (6,5)=6  (7,6)=6  (8,7)=6  (9,8)=6  (10,9)=6  (11,10)=6 
! 20 wrong pixels (generated / expected)

TEST a5f85a15.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 2081.1 bits (2081.1 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.11
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-148] Checking task a61ba2ce.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5309.6 = 5318.5
DL output with Mo: L = 9.0 + 4357.3 = 4366.3
DL input+output M: L = 17.9 + 9666.9 = 9684.8

# learning a model for train pairs
2.000	
1.903	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.715	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.618	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.428	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.328	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.136	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
1.027	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.824	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
0.788	OUT DEF: ^.layer_011.pos=^.layer_011.shape.size
0.762	IN  DEF: ^.layer_0111.shape.mask=x.|xx
0.736	IN  DEF: ^.layer_011.shape.mask=.x|xx
0.711	IN  DEF: ^.layer_0.shape.mask=xx|x.
0.685	IN  DEF: ^.layer_01.shape.mask=xx|.x
0.678	OUT DEF: ^.color=black
0.672	IN  DEF: ^.color=black
0.667	OUT DEF: ^.size=(?,?)
0.640	OUT DEF: ^.size.i=^.layer_0.shape.size.i + 2
0.614	OUT DEF: ^.size.j=^.layer_0.shape.size.j + 2
0.609	OUT DEF: ^.layer_0.pos=(?,?)
0.594	OUT DEF: ^.layer_0.pos.i=(0)
0.579	OUT DEF: ^.layer_0.pos.j=(0)
0.574	OUT DEF: ^.layer_01.pos=(?,?)
0.559	OUT DEF: ^.layer_01.pos.i=(0)
0.544	OUT DEF: ^.layer_01.pos.j=2
0.539	OUT DEF: ^.layer_0111.pos=(?,?)
0.524	OUT DEF: ^.layer_0111.pos.j=(0)
0.510	OUT DEF: ^.layer_0111.pos.i=2
0.505	IN  DEF: ^.layer_0.pos=(?,?)
0.501	IN  DEF: ^.size=(?,?)
0.466	IN  DEF: ^.size.i=13
0.431	IN  DEF: ^.size.j=13
0.427	IN  DEF: ^.layer_0.shape.size=(?,?)
0.411	IN  DEF: ^.layer_0.shape.size.i=2
0.394	IN  DEF: ^.layer_0.shape.size.j=2
0.390	IN  DEF: ^.layer_01.pos=(?,?)
0.386	IN  DEF: ^.layer_01.shape.size=(?,?)
0.370	IN  DEF: ^.layer_01.shape.size.i=2
0.354	IN  DEF: ^.layer_01.shape.size.j=2
0.350	IN  DEF: ^.layer_011.pos=(?,?)
0.331	IN  DEF: ^.layer_011.pos.j=7
0.327	IN  DEF: ^.layer_011.shape.size=(?,?)
0.311	IN  DEF: ^.layer_011.shape.size.i=2
0.295	IN  DEF: ^.layer_011.shape.size.j=2
0.291	IN  DEF: ^.layer_0111.pos=(?,?)
0.273	IN  DEF: ^.layer_0111.pos.i=9
0.268	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.252	IN  DEF: ^.layer_0111.shape.size.i=2
0.236	IN  DEF: ^.layer_0111.shape.size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i + 2,^.layer_0.shape.size.j + 2) and color black and layers
  _0: ^.layer_0.shape at ((0),(0))
  _01: ^.layer_01.shape at ((0),2)
  _011: ^.layer_011.shape at ^.layer_011.shape.size
  _0111: ^.layer_0111.shape at (2,(0))
WHERE (Mi)
a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color ? and mask xx|x. at (?,?)
  _01: a rectangle with size (2,2) and color ? and mask xx|.x at (?,?)
  _011: a rectangle with size (2,2) and color ? and mask .x|xx at (?,7)
  _0111: a rectangle with size (2,2) and color ? and mask x.|xx at (9,?)

DL input  with Mi: L = 164.4 + 974.2 = 1138.6
DL output with Mo: L = 97.2 + 0.0 = 97.2
DL input+output M: L = 261.6 + 974.2 = 1235.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,6)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (3,1)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (7,7)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (9,3)
diff: 
delta:
   (48.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (0,2)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,6)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (3,1)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (7,7)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (9,3)
diff: 
delta:
correct output grid

TRAIN a61ba2ce.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (3,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (1,8)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (5,7)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (9,4)
diff: 
delta:
   (48.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,2)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (3,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (1,8)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (5,7)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (9,4)
diff: 
delta:
correct output grid

TRAIN a61ba2ce.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (9,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (2,10)
  _011: a rectangle with size (2,2) and color pink and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color blue and mask x.|xx at (6,6)
diff:   ^.layer_0111.pos.i  ^.layer_011.pos.j
delta:
correct output grid

TEST a61ba2ce.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-147] Checking task a61f2674.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10260.6 = 10269.6
DL output with Mo: L = 9.0 + 4636.0 = 4645.0
DL input+output M: L = 17.9 + 14896.7 = 14914.6

# learning a model for train pairs
2.000	
1.435	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.184	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.921	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.821	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.721	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.641	OUT DEF: ^.size=^.size
0.580	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.528	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.484	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.464	OUT DEF: ^.layer_0.shape.color=blue
0.444	OUT DEF: ^.layer_01.shape.color=red
0.434	OUT DEF: ^.layer_0.shape.mask=Full
0.424	OUT DEF: ^.layer_01.shape.mask=Full
0.415	IN  DEF: ^.layer_0.shape.color=grey
0.406	IN  DEF: ^.layer_01.shape.color=grey
0.397	IN  DEF: ^.layer_011.shape.color=grey
0.388	IN  DEF: ^.layer_0111.shape.color=grey
0.381	OUT DEF: ^.color=black
0.377	OUT DEF: ^.layer_01.pos=(?,?)
0.358	OUT DEF: ^.layer_01.pos.i=^.layer_011.shape.size.i
0.354	OUT DEF: ^.layer_01.shape.size=(?,?)
0.333	OUT DEF: ^.layer_01.shape.size.i=^.layer_011.pos.i
0.323	OUT DEF: ^.layer_01.shape.size.j=1
0.318	IN  DEF: ^.layer_011.shape.mask=Full
0.314	IN  DEF: ^.layer_0.shape.mask=Full
0.309	IN  DEF: ^.layer_01.shape.mask=Full
0.307	IN  DEF: ^.layer_0.pos=(?,?)
0.305	IN  DEF: ^.layer_0.shape.size=(?,?)
0.300	IN  DEF: ^.layer_0.shape.size.j=1
0.296	IN  DEF: ^.layer_0111.shape.mask=Full
0.294	IN  DEF: ^.layer_01.pos=(?,?)
0.285	IN  DEF: ^.layer_01.pos.j=6
0.282	IN  DEF: ^.color=black
0.280	IN  DEF: ^.size=(?,?)
0.264	IN  DEF: ^.size.j=9
0.247	IN  DEF: ^.size.i=9
0.245	IN  DEF: ^.layer_01.shape.size=(?,?)
0.240	IN  DEF: ^.layer_01.shape.size.j=1
0.238	IN  DEF: ^.layer_011.pos=(?,?)
0.230	IN  DEF: ^.layer_011.pos.j=(0)
0.227	OUT DEF: ^.layer_01.pos=^.layer_0111.pos
0.210	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.207	IN  DEF: ^.color=black
0.205	IN  DEF: ^.layer_011.shape.size=(?,?)
0.200	IN  DEF: ^.layer_01111.shape.mask=Full
0.198	IN  DEF: ^.layer_0111.pos=(?,?)
0.193	IN  DEF: ^.layer_011.shape.size.j=1
0.192	OUT DEF: ^.layer_01.shape.size=^.layer_0111.shape.size

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_0111.shape.size and color red and mask Full at ^.layer_0111.pos
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (?,1) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,1) and color grey and mask Full at (?,6)
  _011: a rectangle with size (?,1) and color grey and mask Full at (?,(0))
  _0111: a rectangle with size ? and color grey and mask Full at (?,?)
  _01111: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 148.7 + 1706.7 = 1855.5
DL output with Mo: L = 51.3 + 0.0 = 51.3
DL input+output M: L = 200.0 + 1706.7 = 1906.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,0)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,8)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (5,4)
diff: 
delta:
   (84.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color blue and mask Full at (1,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (6,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,0)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,4)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (6,8)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,0)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,8)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (5,4)
diff: 
delta:
correct output grid

TRAIN a61f2674.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (6,1) and color grey and mask Full at (3,6)
  _011: a rectangle with size (7,1) and color grey and mask Full at (2,0)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,2)
  _01111: a rectangle with size (2,4) and color black and mask Full at (0,0)
diff: 
delta:
   (85.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (6,1) and color grey and mask Full at (3,6)
  _011: a rectangle with size (7,1) and color grey and mask Full at (2,0)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,2)
  _01111: a rectangle with size (7,3) and color black and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN a61f2674.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the grid could not be parsed with the given template

TEST a61f2674.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 7.6 sec (7.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.75
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-146] Checking task a64e4611.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 169442.7 = 169451.6
DL output with Mo: L = 9.0 + 346485.5 = 346494.5
DL input+output M: L = 17.9 + 515928.2 = 515946.1

# learning a model for train pairs
2.000	
1.549	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.334	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.159	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.018	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.895	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.787	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.686	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.605	OUT OBJECT at ^.layer_001: ^.layer_011.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_0.shape at ?
  _001: ^.layer_011.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 60959.8 = 61045.1
DL output with Mo: L = 58.6 + 84895.1 = 84953.7
DL input+output M: L = 143.9 + 145854.9 = 145998.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _01: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _0111: a rectangle with size (7,8) and color cyan and mask xx..xx.x|.xxxx..x|.xx.xxx.|x.xxx.xx|x.x.x.x.|.xx.....|xxx..... at (23,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,23)=8  (25,25)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
   (2254.0 bits)
data: a background with size (30,30) and color black and layers
  _00: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _001: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _0: a rectangle with size (25,30) and color green and mask .x...xxx.xxxxxxx..xxxx.x.x....|.xxxx..x.xxxxxxx.xxx.....x....|.xxxx..x.xxxxxxx...x...xxx....|x.xx.xxx.xxxxxxx........x.....|xxx.xx.x.xxxxxxx..............|x.xx..xx.xxxxxxxxxxxxxxxxxxxxx|.xx......xxxxxxxxxxxxxxxxxxxxx|.x..x....xxxxxxx..............|xxxxx....xxxxxxx..............|x.xx..xx.xxxxxxx..............|x.x..xx..xxxxxxx..............|..xxxx...xxxxxxx..............|..x..xxx.xxxxxxx..............|..xx.x.x.xxxxxxx..............|.........xxxxxxx..............|xxxxxxxxxxxxxxxx..............|xxxxxxxxxxxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx.............. at (5,0)
  _01: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (25,23)=8  (25,25)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
   (2974.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _01: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _0111: a rectangle with size (7,8) and color cyan and mask xx..xx.x|.xxxx..x|.xx.xxx.|x.xxx.xx|x.x.x.x.|.xx.....|xxx..... at (23,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,23)=8  (25,25)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _01: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _011: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _0111: a rectangle with size (7,8) and color cyan and mask xx..xx.x|.xxxx..x|.xx.xxx.|x.xxx.xx|x.x.x.x.|.xx.....|xxx..... at (23,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,23)=8  (25,25)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
! size mismatch, 10x10 instead of 30x30
>> Trial 3
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _01: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
  _0111: a rectangle with size (7,8) and color cyan and mask xx..xx.x|.xxxx..x|.xx.xxx.|x.xxx.xx|x.x.x.x.|.xx.....|xxx..... at (23,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,23)=8  (25,25)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _01: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
  _0111: a rectangle with size (6,11) and color blue and mask x.x...xxxx.|xxxx.x.xx..|xxx..x.x.x.|xx..xx.xxx.|.x.xxxx.xx.|..x...xx.xx at (0,14)
diff: 
delta: (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,26)=1  (2,28)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,26)=1  (4,29)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
   (1886.2 bits)
data: a background with size (30,30) and color black and layers
  _00: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _001: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
  _0: a rectangle with size (30,24) and color green and mask xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxx.................|xxxxxxx..x.xxx.x........|xxxxxxx...xxx..x........|xxxxxxx..x.x.x.x.......x|xxxxxxx.x.x...x.......xx|xxxxxxx.x.xx.xxxx....x.x|xxxxxxx.xx..x.xxxx..xxxx|xxxxxxx.x.xxx...x.xx.x.x|xxxxxxx.................|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxx.................|xxxxxxx........x..x..x..|xxxxxxx........x.x..xx..|xxxxxxx.....xxx.x...xxxx|xxxxxxx...xx..xx...x....|xxxxxxx...xx...xx..xxxx.|xxxxxxx.x.xxxxxx.x..xx..|xxxxxxx.xx....x..x..xxx.|xxxxxxx....xxxx..x...xxx|xxxxxxx........xx..xx..x|xxxxxxx........x.xx.xxx. at (0,6)
  _01: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
diff: 
delta: (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
   (2922.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _01: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
  _0111: a rectangle with size (6,11) and color blue and mask x.x...xxxx.|xxxx.x.xx..|xxx..x.x.x.|xx..xx.xxx.|.x.xxxx.xx.|..x...xx.xx at (0,14)
diff: 
delta: (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,26)=1  (2,28)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,26)=1  (4,29)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _01: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _011: a rectangle with size (6,11) and color blue and mask x.x...xxxx.|xxxx.x.xx..|xxx..x.x.x.|xx..xx.xxx.|.x.xxxx.xx.|..x...xx.xx at (0,14)
  _0111: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
diff: 
delta: (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,26)=1  (2,28)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,26)=1  (4,29)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
! size mismatch, 10x10 instead of 30x30
>> Trial 3
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _01: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
  _0111: a rectangle with size (6,11) and color blue and mask x.x...xxxx.|xxxx.x.xx..|xxx..x.x.x.|xx..xx.xxx.|.x.xxxx.xx.|..x...xx.xx at (0,14)
diff: 
delta: (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,26)=1  (2,28)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,26)=1  (4,29)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _01: a rectangle with size (8,13) and color red and mask ..x......xxx.|.x........x.x|x.x.........x|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _011: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
  _0111: a rectangle with size (10,7) and color red and mask ...xxxx|..x..x.|..xx.x.|.x...x.|x.x....|xx..x..|x...xxx|.x.x..x|x.xx...|x..xx.. at (20,0)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (8,19)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (23,21)=2 
   (1955.8 bits)
data: a background with size (30,30) and color black and layers
  _00: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _001: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
  _0: a rectangle with size (30,16) and color green and mask ........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx at (0,0)
  _01: a rectangle with size (8,13) and color red and mask ..x......xxx.|.x........x.x|x.x.........x|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (8,19)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (20,3)=2  (20,4)=2  (20,5)=2  (20,6)=2  (21,2)=2  (21,5)=2  (22,2)=2  (22,3)=2  (22,5)=2  (23,1)=2  (23,5)=2  (23,21)=2  (24,0)=2  (24,2)=2  (25,0)=2  (25,1)=2  (25,4)=2  (26,0)=2  (26,4)=2  (26,5)=2  (26,6)=2  (27,1)=2  (27,3)=2  (27,6)=2  (28,0)=2  (28,2)=2  (28,3)=2  (29,0)=2  (29,3)=2  (29,4)=2 
   (2592.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _01: a rectangle with size (8,13) and color red and mask ..x......xxx.|.x........x.x|x.x.........x|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _011: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
  _0111: a rectangle with size (10,7) and color red and mask ...xxxx|..x..x.|..xx.x.|.x...x.|x.x....|xx..x..|x...xxx|.x.x..x|x.xx...|x..xx.. at (20,0)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (8,19)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (23,21)=2 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _01: a rectangle with size (8,13) and color red and mask ..x......xxx.|.x........x.x|x.x.........x|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _011: a rectangle with size (10,7) and color red and mask ...xxxx|..x..x.|..xx.x.|.x...x.|x.x....|xx..x..|x...xxx|.x.x..x|x.xx...|x..xx.. at (20,0)
  _0111: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (8,19)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (23,21)=2 
! size mismatch, 10x10 instead of 30x30
>> Trial 3
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _01: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
  _011: a rectangle with size (8,13) and color red and mask ..x......xxx.|.x........x.x|x.x.........x|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _0111: a rectangle with size (10,7) and color red and mask ...xxxx|..x..x.|..xx.x.|.x...x.|x.x....|xx..x..|x...xxx|.x.x..x|x.xx...|x..xx.. at (20,0)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (8,19)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (23,21)=2 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (14,8) and color yellow and mask x.xx..xx|.xxx.x..|xxxxxxxx|..x...x.|..x..x..|..x.xx.x|.x.x..xx|.x..xxxx|x.x.xxx.|x.xx.x.x|.xx...x.|...x..xx|x.xxx.xx|.x.xx... at (16,22)
  _01: a rectangle with size (9,9) and color yellow and mask .xx......|xxx......|...x.....|....xxx..|..xxx.x..|..x.x....|x.xx..x..|.x.xxx.x.|..x...xxx at (0,0)
  _011: a rectangle with size (7,7) and color yellow and mask ..xx...|..xxx..|x.xx.x.|xx.x..x|x.xx...|x.x.xxx|..x.x.. at (21,14)
  _0111: a rectangle with size (9,5) and color yellow and mask xxxxx|.xx.x|.x.xx|x...x|...x.|...x.|..xx.|...x.|....x at (0,14)
diff: 
delta: (0,4)=4  (0,6)=4  (0,7)=4  (0,22)=4  (0,24)=4  (0,25)=4  (0,26)=4  (1,5)=4  (1,6)=4  (1,25)=4  (1,26)=4  (1,28)=4  (1,29)=4  (2,8)=4  (2,9)=4  (2,22)=4  (2,23)=4  (2,26)=4  (2,29)=4  (3,0)=4  (3,8)=4  (3,26)=4  (3,29)=4  (4,0)=4  (4,9)=4  (4,23)=4  (4,25)=4  (4,26)=4  (4,28)=4  (5,8)=4  (5,9)=4  (5,14)=4  (5,23)=4  (6,9)=4  (6,14)=4  (6,22)=4  (6,25)=4  (6,26)=4  (6,28)=4  (6,29)=4  (7,27)=4  (8,14)=4  (8,15)=4  (8,26)=4  (8,28)=4  (16,1)=4  (16,7)=4  (16,9)=4  (16,15)=4  (16,18)=4  (17,0)=4  (17,1)=4  (17,3)=4  (17,4)=4  (17,7)=4  (17,15)=4  (17,17)=4  (17,20)=4  (18,2)=4  (18,4)=4  (18,5)=4  (18,6)=4  (18,8)=4  (18,17)=4  (19,1)=4  (19,2)=4  (19,4)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,20)=4  (20,4)=4  (20,9)=4  (20,14)=4  (21,0)=4  (21,2)=4  (21,6)=4  (22,0)=4  (22,2)=4  (22,3)=4  (22,6)=4  (22,7)=4  (22,21)=4  (23,1)=4  (23,2)=4  (23,3)=4  (23,4)=4  (23,6)=4  (24,0)=4  (24,1)=4  (24,6)=4  (24,7)=4  (24,9)=4  (25,0)=4  (25,2)=4  (25,6)=4  (25,9)=4  (26,1)=4  (26,3)=4  (26,9)=4  (27,2)=4  (27,4)=4  (27,6)=4  (27,7)=4  (28,0)=4  (28,6)=4  (28,7)=4  (28,8)=4  (28,20)=4  (29,3)=4  (29,4)=4  (29,5)=4  (29,6)=4  (29,7)=4  (29,8)=4  (29,15)=4  (29,18)=4 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (14,8) and color yellow and mask x.xx..xx|.xxx.x..|xxxxxxxx|..x...x.|..x..x..|..x.xx.x|.x.x..xx|.x..xxxx|x.x.xxx.|x.xx.x.x|.xx...x.|...x..xx|x.xxx.xx|.x.xx... at (16,22)
  _01: a rectangle with size (9,9) and color yellow and mask .xx......|xxx......|...x.....|....xxx..|..xxx.x..|..x.x....|x.xx..x..|.x.xxx.x.|..x...xxx at (0,0)
  _011: a rectangle with size (9,5) and color yellow and mask xxxxx|.xx.x|.x.xx|x...x|...x.|...x.|..xx.|...x.|....x at (0,14)
  _0111: a rectangle with size (7,7) and color yellow and mask ..xx...|..xxx..|x.xx.x.|xx.x..x|x.xx...|x.x.xxx|..x.x.. at (21,14)
diff: 
delta: (0,4)=4  (0,6)=4  (0,7)=4  (0,22)=4  (0,24)=4  (0,25)=4  (0,26)=4  (1,5)=4  (1,6)=4  (1,25)=4  (1,26)=4  (1,28)=4  (1,29)=4  (2,8)=4  (2,9)=4  (2,22)=4  (2,23)=4  (2,26)=4  (2,29)=4  (3,0)=4  (3,8)=4  (3,26)=4  (3,29)=4  (4,0)=4  (4,9)=4  (4,23)=4  (4,25)=4  (4,26)=4  (4,28)=4  (5,8)=4  (5,9)=4  (5,14)=4  (5,23)=4  (6,9)=4  (6,14)=4  (6,22)=4  (6,25)=4  (6,26)=4  (6,28)=4  (6,29)=4  (7,27)=4  (8,14)=4  (8,15)=4  (8,26)=4  (8,28)=4  (16,1)=4  (16,7)=4  (16,9)=4  (16,15)=4  (16,18)=4  (17,0)=4  (17,1)=4  (17,3)=4  (17,4)=4  (17,7)=4  (17,15)=4  (17,17)=4  (17,20)=4  (18,2)=4  (18,4)=4  (18,5)=4  (18,6)=4  (18,8)=4  (18,17)=4  (19,1)=4  (19,2)=4  (19,4)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,20)=4  (20,4)=4  (20,9)=4  (20,14)=4  (21,0)=4  (21,2)=4  (21,6)=4  (22,0)=4  (22,2)=4  (22,3)=4  (22,6)=4  (22,7)=4  (22,21)=4  (23,1)=4  (23,2)=4  (23,3)=4  (23,4)=4  (23,6)=4  (24,0)=4  (24,1)=4  (24,6)=4  (24,7)=4  (24,9)=4  (25,0)=4  (25,2)=4  (25,6)=4  (25,9)=4  (26,1)=4  (26,3)=4  (26,9)=4  (27,2)=4  (27,4)=4  (27,6)=4  (27,7)=4  (28,0)=4  (28,6)=4  (28,7)=4  (28,8)=4  (28,20)=4  (29,3)=4  (29,4)=4  (29,5)=4  (29,6)=4  (29,7)=4  (29,8)=4  (29,15)=4  (29,18)=4 
! size mismatch, 10x10 instead of 30x30
>> Trial 3
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (14,8) and color yellow and mask x.xx..xx|.xxx.x..|xxxxxxxx|..x...x.|..x..x..|..x.xx.x|.x.x..xx|.x..xxxx|x.x.xxx.|x.xx.x.x|.xx...x.|...x..xx|x.xxx.xx|.x.xx... at (16,22)
  _01: a rectangle with size (7,7) and color yellow and mask ..xx...|..xxx..|x.xx.x.|xx.x..x|x.xx...|x.x.xxx|..x.x.. at (21,14)
  _011: a rectangle with size (9,9) and color yellow and mask .xx......|xxx......|...x.....|....xxx..|..xxx.x..|..x.x....|x.xx..x..|.x.xxx.x.|..x...xxx at (0,0)
  _0111: a rectangle with size (9,5) and color yellow and mask xxxxx|.xx.x|.x.xx|x...x|...x.|...x.|..xx.|...x.|....x at (0,14)
diff: 
delta: (0,4)=4  (0,6)=4  (0,7)=4  (0,22)=4  (0,24)=4  (0,25)=4  (0,26)=4  (1,5)=4  (1,6)=4  (1,25)=4  (1,26)=4  (1,28)=4  (1,29)=4  (2,8)=4  (2,9)=4  (2,22)=4  (2,23)=4  (2,26)=4  (2,29)=4  (3,0)=4  (3,8)=4  (3,26)=4  (3,29)=4  (4,0)=4  (4,9)=4  (4,23)=4  (4,25)=4  (4,26)=4  (4,28)=4  (5,8)=4  (5,9)=4  (5,14)=4  (5,23)=4  (6,9)=4  (6,14)=4  (6,22)=4  (6,25)=4  (6,26)=4  (6,28)=4  (6,29)=4  (7,27)=4  (8,14)=4  (8,15)=4  (8,26)=4  (8,28)=4  (16,1)=4  (16,7)=4  (16,9)=4  (16,15)=4  (16,18)=4  (17,0)=4  (17,1)=4  (17,3)=4  (17,4)=4  (17,7)=4  (17,15)=4  (17,17)=4  (17,20)=4  (18,2)=4  (18,4)=4  (18,5)=4  (18,6)=4  (18,8)=4  (18,17)=4  (19,1)=4  (19,2)=4  (19,4)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,20)=4  (20,4)=4  (20,9)=4  (20,14)=4  (21,0)=4  (21,2)=4  (21,6)=4  (22,0)=4  (22,2)=4  (22,3)=4  (22,6)=4  (22,7)=4  (22,21)=4  (23,1)=4  (23,2)=4  (23,3)=4  (23,4)=4  (23,6)=4  (24,0)=4  (24,1)=4  (24,6)=4  (24,7)=4  (24,9)=4  (25,0)=4  (25,2)=4  (25,6)=4  (25,9)=4  (26,1)=4  (26,3)=4  (26,9)=4  (27,2)=4  (27,4)=4  (27,6)=4  (27,7)=4  (28,0)=4  (28,6)=4  (28,7)=4  (28,8)=4  (28,20)=4  (29,3)=4  (29,4)=4  (29,5)=4  (29,6)=4  (29,7)=4  (29,8)=4  (29,15)=4  (29,18)=4 
! size mismatch, 10x10 instead of 30x30

TEST a64e4611.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.5 sec (29.5 sec/task)
bits-train-error = 84895.1 bits (84895.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-145] Checking task a65b410d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2335.4 = 2344.4
DL output with Mo: L = 9.0 + 11213.9 = 11222.9
DL input+output M: L = 17.9 + 13549.3 = 13567.3

# learning a model for train pairs
2.000	
1.501	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.091	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.968	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.880	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.821	IN  DEF: ^.layer_0.shape.color=red
0.773	OUT DEF: ^.size=^.size
0.743	IN  DEF: ^.layer_0.shape.mask=Full
0.716	OUT DEF: ^.layer_01=^.layer_0
0.697	IN  DEF: ^.color=black
0.682	IN  DEF: ^.size=(?,?)
0.667	IN  DEF: ^.layer_0.pos=(?,?)
0.611	IN  DEF: ^.layer_0.pos.j=(0)
0.596	IN  DEF: ^.layer_0.shape.size=(?,?)
0.566	IN  DEF: ^.layer_0.shape.size.i=1
0.554	OUT DEF: ^.layer_0.shape.color=green
0.542	OUT DEF: ^.layer_011.shape.color=blue
0.538	OUT DEF: ^.color=black
0.534	OUT DEF: ^.layer_0.pos=(?,?)
0.523	OUT DEF: ^.layer_0.pos.j=(0)
0.512	OUT DEF: ^.layer_0.pos.i=(0)
0.509	OUT DEF: ^.layer_011.pos=(?,?)
0.497	OUT DEF: ^.layer_011.pos.j=(0)
0.487	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i + ^.layer_0.shape.size.i
0.483	OUT DEF: ^.layer_0.shape.size=(?,?)
0.465	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.pos.i + ^.layer_0.shape.size.j
0.451	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.i
0.448	OUT DEF: ^.layer_011.shape.size=(?,?)
0.438	OUT DEF: ^.layer_011.shape.size.j=^.layer_0.shape.size.j - 1
0.428	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.shape.size.j - 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.pos.i,^.layer_0.pos.i + ^.layer_0.shape.size.j) and color green and mask ? at ((0),(0))
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_0.shape.size.j - 1,^.layer_0.shape.size.j - 1) and color blue and mask ? at (^.layer_0.pos.i + ^.layer_0.shape.size.i,(0))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (1,?) and color red and mask Full at (?,(0))

DL input  with Mi: L = 40.8 + 781.7 = 822.5
DL output with Mo: L = 111.8 + 756.2 = 867.9
DL input+output M: L = 152.6 + 1537.9 = 1690.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta:
   (24.3 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxxxx|xxxx.|xxx.. at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (4,0)
diff: 
delta:
   (20.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN a65b410d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,0)
diff: 
delta:
   (26.8 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (3,6) and color green and mask xxxxxx|xxxxx.|xxxx.. at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (3,0)
  _011: a rectangle with size (2,2) and color blue and mask xx|x. at (4,0)
diff: 
delta:
   (28.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a65b410d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,0)
diff: 
delta:
   (27.0 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (2,6) and color green and mask xxxxxx|xxxxx. at (0,0)
  _01: a rectangle with size (1,4) and color red and mask Full at (2,0)
  _011: a rectangle with size (3,3) and color blue and mask xxx|xx.|x.. at (3,0)
diff: 
delta:
   (27.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a65b410d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (2,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TEST a65b410d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 756.2 bits (756.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-144] Checking task a68b268e.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 54122.1 = 54131.1
DL output with Mo: L = 9.0 + 9163.9 = 9172.8
DL input+output M: L = 17.9 + 63286.0 = 63303.9

# learning a model for train pairs
2.000	
1.779	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.619	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.494	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.376	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.277	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.212	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.156	OUT DEF: ^.layer_0.shape.size=^.layer_0111.shape.size
1.086	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.071	OUT DEF: ^.layer_01.shape.mask=Full
1.061	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.053	OUT DEF: ^.size=(?,?)
1.012	OUT DEF: ^.size.i=4
0.971	OUT DEF: ^.size.j=4
0.962	OUT DEF: ^.layer_0.pos=(?,?)
0.942	OUT DEF: ^.layer_0.pos.j=^.layer_0111.shape.size.i - ^.layer_01.shape.size.j
0.934	OUT DEF: ^.layer_01.pos=(?,?)
0.926	OUT DEF: ^.layer_01.shape.size=(?,?)
0.918	OUT DEF: ^.layer_011.pos=(?,?)
0.896	OUT DEF: ^.layer_011.pos.i=0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (4,4) and color ? and layers
  _0: a rectangle with size ^.layer_0111.shape.size and color ? and mask ? at (?,^.layer_0111.shape.size.i - ^.layer_01.shape.size.j)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (0,?)
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 20052.4 = 20156.2
DL output with Mo: L = 105.9 + 4700.3 = 4806.2
DL input+output M: L = 209.7 + 24752.6 = 24962.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _011: a rectangle with size (2,4) and color orange and mask .xxx|xxx. at (0,0)
  _0111: a rectangle with size (3,2) and color cyan and mask xx|x.|.x at (6,2)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (5,5)
diff: 
delta: (0,6)=4  (0,8)=4  (1,5)=4  (1,6)=4  (2,8)=4  (3,0)=7# (7,0)=8  (7,5)=6  (7,8)=6 
   (352.8 bits)
data: a background with size (4,4) and color orange and layers
  _0: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,1)
  _011: a point with color pink at (0,0)
diff: 
delta: (2,0)=8  (2,3)=4 
   (86.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _011: a rectangle with size (2,4) and color orange and mask .xxx|xxx. at (0,0)
  _0111: a rectangle with size (3,2) and color cyan and mask xx|x.|.x at (6,2)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (5,5)
diff: 
delta: (0,6)=4  (0,8)=4  (1,5)=4  (1,6)=4  (2,8)=4  (3,0)=7# (7,0)=8  (7,5)=6  (7,8)=6 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _011: a rectangle with size (2,4) and color orange and mask .xxx|xxx. at (0,0)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (5,5)
  _01111: a rectangle with size (3,2) and color cyan and mask xx|x.|.x at (6,2)
diff: 
delta: (0,6)=4  (0,8)=4  (1,5)=4  (1,6)=4  (2,8)=4  (3,0)=7# (7,0)=8  (7,5)=6  (7,8)=6 
! 13 wrong pixels (generated / expected)

TRAIN a68b268e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _011: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color pink and mask x...|x...|xx.x|x.xx at (5,5)
  _01111: a rectangle with size (3,4) and color yellow and mask .x..|x.xx|x.xx at (0,5)
diff: 
delta: (5,2)=8  (5,8)=6  (8,0)=8  (8,1)=8  (8,2)=8 
   (316.5 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,0)
  _011: a point with color pink at (0,3)
diff: 
delta: (1,1)=0 
   (80.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask x...|x...|xx.x|x.xx at (5,5)
  _0111: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _01111: a rectangle with size (3,4) and color yellow and mask .x..|x.xx|x.xx at (0,5)
diff: 
delta: (5,2)=8  (5,8)=6  (8,0)=8  (8,1)=8  (8,2)=8 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _011: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color pink and mask x...|x...|xx.x|x.xx at (5,5)
  _01111: a rectangle with size (3,4) and color yellow and mask .x..|x.xx|x.xx at (0,5)
diff: 
delta: (5,2)=8  (5,8)=6  (8,0)=8  (8,1)=8  (8,2)=8 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _011: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color pink and mask .xxx|..x.|x.x.|xx.. at (5,5)
  _01111: a rectangle with size (4,3) and color yellow and mask xx.|.xx|..x|xx. at (0,6)
diff: 
delta: (5,2)=8  (5,3)=8  (7,3)=8  (8,0)=8 
   (297.4 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (1,2)
  _011: a point with color yellow at (0,1)
diff: 
delta: (3,0)=8 
   (73.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask .xxx|..x.|x.x.|xx.. at (5,5)
  _0111: a rectangle with size (4,3) and color yellow and mask xx.|.xx|..x|xx. at (0,6)
  _01111: a rectangle with size (9,1) and color blue and mask Full at (0,4)
diff: 
delta: (5,2)=8  (5,3)=8  (7,3)=8  (8,0)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask .xxx|..x.|x.x.|xx.. at (5,5)
  _0111: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _01111: a rectangle with size (4,3) and color yellow and mask xx.|.xx|..x|xx. at (0,6)
diff: 
delta: (5,2)=8  (5,3)=8  (7,3)=8  (8,0)=8 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _011: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color pink and mask .xxx|..x.|x.x.|xx.. at (5,5)
  _01111: a rectangle with size (4,3) and color yellow and mask xx.|.xx|..x|xx. at (0,6)
diff: 
delta: (5,2)=8  (5,3)=8  (7,3)=8  (8,0)=8 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _011: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color yellow and mask xx..|x...|xxx.|x.xx at (0,5)
  _01111: a rectangle with size (3,4) and color pink and mask xx..|.xxx|.xx. at (6,5)
diff: 
delta: (0,8)=4  (5,2)=8  (6,2)=8  (7,2)=8  (8,1)=8  (8,3)=8 
   (335.5 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,1)
  _011: a point with color cyan at (0,2)
diff: 
delta: (1,3)=0  (3,1)=8 
   (94.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask xx..|x...|xxx.|x.xx at (0,5)
  _0111: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _01111: a rectangle with size (3,4) and color pink and mask xx..|.xxx|.xx. at (6,5)
diff: 
delta: (0,8)=4  (5,2)=8  (6,2)=8  (7,2)=8  (8,1)=8  (8,3)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _011: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color yellow and mask xx..|x...|xxx.|x.xx at (0,5)
  _01111: a rectangle with size (3,4) and color pink and mask xx..|.xxx|.xx. at (6,5)
diff: 
delta: (0,8)=4  (5,2)=8  (6,2)=8  (7,2)=8  (8,1)=8  (8,3)=8 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color yellow and mask ...x|xxxx|x...|xxx. at (0,5)
  _011: a rectangle with size (4,4) and color pink and mask xxxx|..x.|.x.x|...x at (5,5)
  _0111: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
  _01111: a rectangle with size (9,1) and color blue and mask Full at (0,4)
diff: 
delta: (5,0)=8  (5,2)=8  (6,2)=8  (6,3)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8 
   (373.4 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (2,1)
  _011: a point with color cyan at (0,2)
diff: 
delta: (3,3)=8 
   (76.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color yellow and mask ...x|xxxx|x...|xxx. at (0,5)
  _011: a rectangle with size (4,4) and color pink and mask xxxx|..x.|.x.x|...x at (5,5)
  _0111: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _01111: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
diff: 
delta: (5,0)=8  (5,2)=8  (6,2)=8  (6,3)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color yellow and mask ...x|xxxx|x...|xxx. at (0,5)
  _011: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color pink and mask xxxx|..x.|.x.x|...x at (5,5)
  _01111: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
diff: 
delta: (5,0)=8  (5,2)=8  (6,2)=8  (6,3)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color yellow and mask ...x|xxxx|x...|xxx. at (0,5)
  _011: a rectangle with size (4,4) and color pink and mask xxxx|..x.|.x.x|...x at (5,5)
  _0111: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
  _01111: a rectangle with size (9,1) and color blue and mask Full at (0,4)
diff: 
delta: (5,0)=8  (5,2)=8  (6,2)=8  (6,3)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,3)=8 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask ....x....|....x....|....x....|....x....|xxxxxxxxx|....x....|....x....|....x....|....x.... at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask x..x|.xxx|xxx.|xxx. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask xx.x|.xxx|.x.x|xx.x at (5,0)
  _0111: a rectangle with size (4,4) and color yellow and mask xxx.|xx.x|xx.x|.x.. at (0,5)
  _01111: a rectangle with size (4,4) and color pink and mask xxxx|...x|..x.|.x.. at (5,5)
diff: 
delta:
   (329.7 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (4,4) and color orange and mask x..x|.xxx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,3)
  _011: a point with color yellow at (0,1)
diff: 
delta:
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask ....x....|....x....|....x....|....x....|xxxxxxxxx|....x....|....x....|....x....|....x.... at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask x..x|.xxx|xxx.|xxx. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask xx.x|.xxx|.x.x|xx.x at (5,0)
  _0111: a rectangle with size (4,4) and color yellow and mask xxx.|xx.x|xx.x|.x.. at (0,5)
  _01111: a rectangle with size (4,4) and color pink and mask xxxx|...x|..x.|.x.. at (5,5)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask ....x....|....x....|....x....|....x....|xxxxxxxxx|....x....|....x....|....x....|....x.... at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask xxx.|.xx.|xxxx|x... at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask .x.x|x..x|xxxx|.x.. at (5,5)
  _0111: a rectangle with size (4,4) and color yellow and mask ..x.|xx.x|.x.x|x.x. at (0,5)
  _01111: a rectangle with size (4,4) and color cyan and mask ...x|x..x|x.x.|.x.x at (5,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TEST a68b268e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 4700.3 bits (4700.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-143] Checking task a699fb00.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5413.0 = 5422.0
DL output with Mo: L = 9.0 + 8052.6 = 8061.6
DL input+output M: L = 17.9 + 13465.6 = 13483.5

# learning a model for train pairs
2.000	
1.895	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.829	OUT DEF: ^.size=^.size
1.789	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.767	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.743	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.724	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.703	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.682	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.659	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.642	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.624	OUT DEF: ^.layer_011.pos=^.layer_0111.pos
1.611	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
1.598	OUT OBJECT at ^.layer_011111: ^.layer_0.shape at ?
1.580	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
1.566	OUT DEF: ^.layer_011111=^.layer_011
1.540	IN  DEF: ^.layer_0.shape.color=blue
1.515	IN  DEF: ^.layer_01.shape.color=blue
1.498	OUT DEF: ^.layer_01.pos=^.layer_0.pos
1.472	IN  DEF: ^.layer_011.shape.color=blue
1.447	IN  DEF: ^.layer_0111.shape.color=blue
1.438	OUT DEF: ^.layer_0.shape.mask=Full
1.423	OUT DEF: ^.layer_01111=^.layer_01
1.414	OUT DEF: ^.layer_01.shape.mask=Full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask Full at ?
  _01: a rectangle with size ? and color ^.layer_01.shape.color and mask Full at ^.layer_0.pos
  _011: a rectangle with size ? and color ^.layer_011.shape.color and mask ? at ^.layer_0111.pos
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_01
  _011111: ^.layer_011
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color blue at ?
  _01: a point with color blue at ?
  _011: a point with color blue at ?
  _0111: a point with color blue at ?

DL input  with Mi: L = 64.0 + 4347.3 = 4411.4
DL output with Mo: L = 94.1 + 4744.7 = 4838.8
DL input+output M: L = 158.1 + 9092.0 = 9250.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta:
   (51.2 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (3,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (3,2)
  _01111: a point with color blue at (0,2)
  _011111: a point with color blue at (3,1)
diff: 
delta:
   (56.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN a699fb00.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (4,2)
diff: 
delta: (1,7)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
   (182.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (6,6)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (4,2)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (8,3)
  _01111: a point with color blue at (1,3)
  _011111: a point with color blue at (1,5)
diff: 
delta: (1,2)=2  (1,4)=2  (1,6)=2  (1,7)=1  (4,3)=2  (6,7)=2  (8,4)=2 
   (208.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (1,7)
diff: 
delta: (4,2)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (4,2)
diff: 
delta: (1,7)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,7)
  _0111: a point with color blue at (1,5)
diff: 
delta: (4,2)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 20 wrong pixels (generated / expected)

TRAIN a699fb00.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (5,3)
diff: 
delta: (2,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
   (201.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (7,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,6)
  _011: a rectangle with size (1,5) and color blue and mask Full at (5,3)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (9,1)
  _01111: a point with color blue at (1,8)
  _011111: a point with color blue at (2,1)
diff: 
delta: (1,7)=2  (2,2)=2  (2,3)=1  (5,4)=2  (5,6)=2  (7,5)=2  (9,2)=2 
   (209.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (2,3)
diff: 
delta: (5,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (5,3)
diff: 
delta: (2,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,3)
  _0111: a point with color blue at (2,1)
diff: 
delta: (5,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 21 wrong pixels (generated / expected)

TRAIN a699fb00.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,2)
  _0111: a point with color blue at (2,4)
diff: 
delta: (2,6)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,2)
  _0111: a point with color blue at (2,6)
diff: 
delta: (2,4)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,4)
  _0111: a point with color blue at (2,2)
diff: 
delta: (2,6)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 22 wrong pixels (generated / expected)

TEST a699fb00.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.6 sec (23.6 sec/task)
bits-train-error = 4744.7 bits (4744.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-142] Checking task a740d043.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3715.8 = 3724.8
DL output with Mo: L = 9.0 + 2216.6 = 2225.5
DL input+output M: L = 17.9 + 5932.4 = 5950.3

# learning a model for train pairs
2.000	
1.705	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.263	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.201	IN  DEF: ^.color=blue
1.180	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.165	OUT DEF: ^.size=(?,?)
1.149	OUT DEF: ^.layer_0.pos=(?,?)
1.112	OUT DEF: ^.layer_0.pos.i=(0)
1.076	OUT DEF: ^.layer_0.pos.j=(0)
1.060	OUT DEF: ^.layer_01.pos=(?,?)
1.024	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i
1.015	IN  DEF: ^.size=(?,?)
1.005	IN  DEF: ^.layer_0.pos=(?,?)
0.996	IN  DEF: ^.layer_0.shape.size=(?,?)
0.994	OUT DEF: ^.layer_01.pos.j=^.layer_0.shape.size.i - ^.layer_0.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0.shape at ((0),(0))
  _01: a point with color ? at (^.layer_0.pos.i,^.layer_0.shape.size.i - ^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 47.5 + 2239.3 = 2286.8
DL output with Mo: L = 58.7 + 787.7 = 846.4
DL input+output M: L = 106.1 + 3027.0 = 3133.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (1,1)
diff: 
delta: (2,3)=3 
   (69.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (0,0)
  _01: a point with color green at (1,2)
diff: 
delta:
   (17.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (1,1)
diff: 
delta: (2,3)=3 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (5,7) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta: (2,3)=3  (3,3)=2 
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (5,7) and color red and layers
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|x..xxxx|x...xxx|xxx.xxx|xxxxxxx at (0,0)
diff:   ^.color
delta: (2,3)=3 
! size mismatch, 10x10 instead of 3x3

TRAIN a740d043.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,2)
diff: 
delta: (1,4)=2  (2,4)=2 
   (76.6 bits)
data: a background with size (2,3) and color red and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a point with color black at (1,1)
diff: 
delta: (0,1)=0 
   (39.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,2)
diff: 
delta: (1,4)=2  (2,4)=2 
! size mismatch, 10x10 instead of 2x3
>> Trial 2
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,4)
diff: 
delta: (1,2)=3  (2,2)=3 
! size mismatch, 10x10 instead of 2x3
>> Trial 3
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (1,7) and color blue and mask Full at (0,0)
diff: 
delta: (1,2)=3  (1,4)=2  (2,2)=3  (2,4)=2 
! size mismatch, 10x10 instead of 2x3

TRAIN a740d043.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,1)
diff: 
delta: (4,1)=6  (4,2)=6 
   (77.5 bits)
data: a background with size (3,2) and color pink and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (0,0)
  _01: a point with color pink at (2,0)
diff: 
delta:
   (22.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (2,1)
diff: 
delta: (4,1)=6  (4,2)=6 
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (7,6) and color grey and layers
  _0: a rectangle with size (7,6) and color blue and mask xxxxxx|xxxxxx|x..xxx|x..xxx|x..xxx|xxxxxx|xxxxxx at (0,0)
diff:   ^.color
delta: (4,1)=6  (4,2)=6 
! size mismatch, 10x10 instead of 3x2

TRAIN a740d043.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,2)
diff: 
delta: (3,3)=3 
! size mismatch, 10x10 instead of 2x2

TEST a740d043.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 787.7 bits (787.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-141] Checking task a78176bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9555.2 = 9564.2
DL output with Mo: L = 9.0 + 10317.8 = 10326.7
DL input+output M: L = 17.9 + 19873.0 = 19890.9

# learning a model for train pairs
2.000	
1.664	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.509	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.372	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.964	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.908	OUT DEF: ^.size=^.size
0.877	OUT DEF: ^.layer_00=^.layer_0
0.862	IN  DEF: ^.layer_01.shape.color=grey
0.849	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.844	IN  DEF: ^.color=black
0.839	OUT DEF: ^.color=black
0.836	IN  DEF: ^.size=(?,?)
0.808	IN  DEF: ^.size.i=10
0.781	IN  DEF: ^.size.j=10
0.777	IN  DEF: ^.layer_0.pos=(?,?)
0.773	IN  DEF: ^.layer_0.shape.size=(?,?)
0.770	IN  DEF: ^.layer_01.pos=(?,?)
0.766	IN  DEF: ^.layer_01.shape.size=(?,?)
0.763	OUT DEF: ^.layer_0.pos=(?,?)
0.750	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j - ^.layer_0.pos.j
0.747	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_01.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 82.0 + 4072.1 = 4154.0
DL output with Mo: L = 50.9 + 3175.2 = 3226.1
DL input+output M: L = 132.9 + 7247.3 = 7380.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
   (155.2 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
  _0: a rectangle with size (6,6) and color orange and mask x.....|.x....|..x...|...x..|x...x.|.x...x at (0,4)
diff: 
delta:
   (58.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN a78176bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask xx..|xxx.|xxxx|xxxx at (1,5)
diff: 
delta:
   (96.9 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
  _0: a rectangle with size (9,9) and color brown and mask x.....x..|.x.....x.|..x.....x|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
diff: 
delta:
   (106.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask xx..|xxx.|xxxx|xxxx at (1,5)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|xx..|xxx.|xxxx at (1,5)
  _01: a rectangle with size (5,5) and color brown and mask x....|xx...|xxx..|xxxx.|xxxxx at (0,5)
diff:   ^.layer_01.shape.color
delta:
! 27 wrong pixels (generated / expected)

TRAIN a78176bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,3) and color grey and mask xx.|xx.|xx.|xxx|xxx at (3,3)
diff: 
delta:
   (155.1 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _0: a rectangle with size (7,7) and color red and mask x......|.x.....|..x....|...x...|x...x..|.x...x.|..x...x at (0,3)
diff: 
delta: (6,0)=2  (7,1)=2  (8,2)=2  (9,3)=2 
   (152.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,3) and color grey and mask xx.|xx.|xx.|xxx|xxx at (3,3)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN a78176bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (0,1)
  _01: a rectangle with size (5,5) and color grey and mask xx...|xxx..|xxxx.|xxxxx|xxxxx at (4,4)
diff: 
delta: (1,3)=5# (1,4)=5# (2,4)=5#
! 13 wrong pixels (generated / expected)

TEST a78176bb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.2 sec (6.2 sec/task)
bits-train-error = 3175.2 bits (3175.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-140] Checking task a79310a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1915.4 = 1924.3
DL output with Mo: L = 9.0 + 1915.4 = 1924.3
DL input+output M: L = 17.9 + 3830.7 = 3848.6

# learning a model for train pairs
2.000	
1.626	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.251	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.028	OUT DEF: ^.size=^.size
0.898	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.826	OUT DEF: ^.layer_0.shape.color=red
0.754	IN  DEF: ^.layer_0.shape.color=cyan
0.717	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.680	IN  DEF: ^.layer_0.shape.mask=Full
0.657	IN  DEF: ^.color=black
0.633	OUT DEF: ^.color=black
0.615	OUT DEF: ^.layer_0.pos=(?,?)
0.562	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.515	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i + 1
0.497	IN  DEF: ^.size=(?,?)
0.478	IN  DEF: ^.layer_0.pos=(?,?)
0.460	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color red and mask ^.layer_0.shape.mask at (^.layer_0.pos.i + 1,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 41.3 + 803.4 = 844.7
DL output with Mo: L = 41.1 + 0.0 = 41.1
DL input+output M: L = 82.3 + 803.4 = 885.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (29.9 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (21.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,1)
diff: 
delta:
   (29.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|.x at (0,1)
diff:   ^.layer_0.shape.mask
delta:
correct output grid

TEST a79310a0.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.0 sec (0.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-139] Checking task a85d4709.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2561.4 = 2570.3
DL output with Mo: L = 9.0 + 2797.8 = 2806.8
DL input+output M: L = 17.9 + 5359.2 = 5377.1

# learning a model for train pairs
2.000	
1.686	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.507	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.332	OUT DEF: ^.size=^.size
1.260	IN  DEF: ^.layer_0.shape.color=grey
1.226	OUT DEF: ^.layer_0.shape.mask=Full
1.203	IN  DEF: ^.color=black
1.184	IN  DEF: ^.size=(?,?)
1.100	IN  DEF: ^.size.i=3
1.015	IN  DEF: ^.size.j=3
0.996	IN  DEF: ^.layer_0.pos=(?,?)
0.951	IN  DEF: ^.layer_0.pos.i=0
0.932	IN  DEF: ^.layer_0.shape.size=(?,?)
0.847	IN  DEF: ^.layer_0.shape.size.i=3
0.830	OUT DEF: ^.layer_0.pos=(?,?)
0.789	OUT DEF: ^.layer_0.pos.j=(0)
0.752	OUT DEF: ^.layer_0.pos.i=^.layer_0.shape.size.j - 1
0.735	OUT DEF: ^.layer_0.shape.size=(?,?)
0.657	OUT DEF: ^.layer_0.shape.size.j=^.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.size.j) and color ? and mask Full at (^.layer_0.shape.size.j - 1,(0))
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,?) and color grey and mask ? at (0,?)

DL input  with Mi: L = 48.4 + 557.5 = 605.9
DL output with Mo: L = 51.5 + 1131.7 = 1183.2
DL input+output M: L = 99.9 + 1689.2 = 1789.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
   (20.5 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,0)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3 
   (65.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,2)
diff:   ^.layer_0.shape.size.i
delta: (1,1)=5# (2,0)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,2)
diff: 
delta:
   (7.6 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (18.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
diff: 
delta:
   (13.9 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
diff: 
delta: (1,0)=0  (1,1)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,1)
diff: 
delta:
   (13.9 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (1,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,1)
diff: 
delta: (1,1)=0  (1,2)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,0)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.i
delta: (0,2)=5#
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,2)
diff:   ^.layer_0.shape.size.i
delta: (1,0)=5# (2,1)=5#
! 9 wrong pixels (generated / expected)

TEST a85d4709.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 1131.7 bits (1131.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-138] Checking task a87f7484.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14531.5 = 14540.4
DL output with Mo: L = 9.0 + 2491.3 = 2500.3
DL input+output M: L = 17.9 + 17022.8 = 17040.7

# learning a model for train pairs
2.000	
1.750	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.541	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.132	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.936	OUT DEF: ^.size=^.layer_0.shape.size
0.824	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.709	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.652	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.628	OUT DEF: ^.color=black
0.609	OUT DEF: ^.layer_0.pos=(?,?)
0.562	OUT DEF: ^.layer_0.pos.i=(0)
0.516	OUT DEF: ^.layer_0.pos.j=(0)
0.512	IN  DEF: ^.color=black
0.509	IN  DEF: ^.size=(?,?)
0.505	IN  DEF: ^.layer_0.pos=(?,?)
0.502	IN  DEF: ^.layer_0.shape.size=(?,?)
0.487	IN  DEF: ^.layer_0.shape.size.i=3
0.472	IN  DEF: ^.layer_0.shape.size.j=3
0.469	IN  DEF: ^.layer_01.pos=(?,?)
0.458	IN  DEF: ^.layer_01.pos.j=(0)
0.454	IN  DEF: ^.layer_0111.pos=(?,?)
0.451	IN  DEF: ^.layer_01.shape.size=(?,?)
0.436	IN  DEF: ^.layer_01.shape.size.i=3
0.421	IN  DEF: ^.layer_01.shape.size.j=3
0.418	IN  DEF: ^.layer_011.pos=(?,?)
0.415	IN  DEF: ^.layer_011.shape.size=(?,?)
0.400	IN  DEF: ^.layer_011.shape.size.i=3
0.385	IN  DEF: ^.layer_011.shape.size.j=3
0.381	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (3,3) and color ? and mask ? at (?,?)
  _01: a rectangle with size (3,3) and color ? and mask ? at (?,(0))
  _011: a rectangle with size (3,3) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 138.8 + 5263.4 = 5402.2
DL output with Mo: L = 24.6 + 0.0 = 24.6
DL input+output M: L = 163.4 + 5263.4 = 5426.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,0)
  _01: a rectangle with size (3,3) and color pink and mask x.x|.xx|x.x at (0,0)
  _011: a rectangle with size (3,3) and color yellow and mask x.x|.xx|x.x at (3,0)
  _0111: a rectangle with size (1,1) and color black and mask Full at (0,1)
diff: 
delta:
   (95.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,0)
  _01: a rectangle with size (3,3) and color pink and mask x.x|.xx|x.x at (0,0)
  _011: a rectangle with size (3,3) and color yellow and mask x.x|.xx|x.x at (3,0)
  _0111: a rectangle with size (1,1) and color black and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN a87f7484.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x-cross at (0,6)
  _01: a rectangle with size (3,3) and color red and mask x..|x..|.xx at (0,0)
  _011: a rectangle with size (3,3) and color green and mask x..|x..|.xx at (0,3)
  _0111: a rectangle with size (3,3) and color blue and mask x..|x..|.xx at (0,9)
diff: 
delta:
   (113.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x-cross at (0,6)
  _01: a rectangle with size (3,3) and color red and mask x..|x..|.xx at (0,0)
  _011: a rectangle with size (3,3) and color green and mask x..|x..|.xx at (0,3)
  _0111: a rectangle with size (3,3) and color blue and mask x..|x..|.xx at (0,9)
diff: 
delta:
correct output grid

TRAIN a87f7484.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,3)
  _01: a rectangle with size (3,3) and color green and mask x..|.xx|.x. at (0,0)
  _011: a rectangle with size (3,3) and color red and mask x..|.xx|.x. at (0,6)
  _0111: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (0,9)
diff: 
delta: (0,12)=1  (1,13)=1  (1,14)=1  (2,13)=1 
   (196.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,3)
  _01: a rectangle with size (3,3) and color green and mask x..|.xx|.x. at (0,0)
  _011: a rectangle with size (3,3) and color red and mask x..|.xx|.x. at (0,6)
  _0111: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (0,9)
diff: 
delta: (0,12)=1  (1,13)=1  (1,14)=1  (2,13)=1 
correct output grid

TRAIN a87f7484.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (12,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
  _01: a rectangle with size (3,3) and color green and mask x..|.xx|x.. at (3,0)
  _011: a rectangle with size (3,3) and color red and mask x..|.xx|x.. at (6,0)
  _0111: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (9,0)
diff: 
delta:
   (121.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
  _01: a rectangle with size (3,3) and color green and mask x..|.xx|x.. at (3,0)
  _011: a rectangle with size (3,3) and color red and mask x..|.xx|x.. at (6,0)
  _0111: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (9,0)
diff: 
delta:
correct output grid

TRAIN a87f7484.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask x.x|xx.|x.x at (6,0)
  _01: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (0,0)
  _011: a rectangle with size (3,3) and color green and mask Odd Checkboard at (3,0)
  _0111: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (9,0)
diff: 
delta: (12,1)=8  (13,0)=8  (13,2)=8  (14,1)=8 
correct output grid

TEST a87f7484.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-137] Checking task a8c38be5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 33053.8 = 33062.7
DL output with Mo: L = 9.0 + 11138.8 = 11147.8
DL input+output M: L = 17.9 + 44192.6 = 44210.5

# learning a model for train pairs
2.000	
1.909	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.837	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.784	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.737	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.684	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.649	IN  OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
1.615	IN  OBJECT at ^.layer_0111111: a rectangle with size ? and color ? and mask ? at ?
1.578	IN  OBJECT at ^.layer_01111111: a rectangle with size ? and color ? and mask ? at ?
1.552	IN  OBJECT at ^.layer_011111111: a rectangle with size ? and color ? and mask ? at ?
1.504	OUT OBJECT at ^.layer_0: ^.layer_011111111.shape at ?
1.474	IN  OBJECT at ^.layer_0111111111: a rectangle with size ? and color ? and mask ? at ?
1.427	OUT OBJECT at ^.layer_00: ^.layer_0111111111.shape at ?
1.370	OUT OBJECT at ^.layer_000: a rectangle with size ? and color ? and mask ? at ?
1.288	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.237	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _000: a rectangle with size ? and color ? and mask ? at ?
  _00: ^.layer_0111111111.shape at ?
  _0: ^.layer_011111111.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
  _0111111: a rectangle with size ? and color ? and mask ? at ?
  _01111111: a rectangle with size ? and color ? and mask ? at ?
  _011111111: a rectangle with size ? and color ? and mask ? at ?
  _0111111111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 195.2 + 17050.5 = 17245.7
DL output with Mo: L = 88.9 + 7890.1 = 7979.0
DL input+output M: L = 284.1 + 24940.6 = 25224.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask xxx..|.xx..|..x..|...xx|....x|...xx at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask Full at (5,6)
  _011: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (7,1)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (11,0)
  _01111: a rectangle with size (3,3) and color grey and mask Full at (11,10)
  _011111: a rectangle with size (2,3) and color grey and mask x.x|xxx at (2,8)
  _0111111: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,10)
  _01111111: a rectangle with size (3,2) and color grey and mask xx|x.|xx at (9,6)
  _011111111: a rectangle with size (2,3) and color red and mask Full at (1,8)
  _0111111111: a rectangle with size (2,3) and color yellow and mask Full at (7,10)
diff: 
delta: (1,0)=8  (2,0)=8  (2,1)=8  (3,2)=2  (4,2)=2  (4,3)=2  (5,2)=2  (7,2)=1  (7,3)=1  (8,3)=1  (9,8)=3  (10,7)=3  (10,8)=3  (11,8)=3  (11,10)=6  (11,11)=6  (12,2)=9# (12,10)=6  (13,1)=9# (13,2)=9#
   (795.6 bits)
data: a background with size (9,9) and color green and layers
  _000: a rectangle with size (9,9) and color grey and mask ..x...x..|.xxx.xxx.|xxxxxxxxx|.xxxxxxx.|..xxxxx..|.xxxxxxx.|xxxxxxxxx|.xxx.xxx.|..x...x.. at (0,0)
  _00: a rectangle with size (2,3) and color yellow and mask Full at (7,3)
  _0: a rectangle with size (2,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (2,2) and color pink and mask Full at (0,0)
diff: 
delta: (0,7)=1  (0,8)=1  (1,8)=1  (7,0)=8  (7,8)=9# (8,0)=8  (8,1)=8  (8,7)=9# (8,8)=9#
   (394.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask xxx..|.xx..|..x..|...xx|....x|...xx at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask Full at (5,6)
  _011: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (7,1)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (11,0)
  _01111: a rectangle with size (3,3) and color grey and mask Full at (11,10)
  _011111: a rectangle with size (2,3) and color grey and mask x.x|xxx at (2,8)
  _0111111: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,10)
  _01111111: a rectangle with size (3,2) and color grey and mask xx|x.|xx at (9,6)
  _011111111: a rectangle with size (2,3) and color red and mask Full at (1,8)
  _0111111111: a rectangle with size (2,3) and color yellow and mask Full at (7,10)
diff: 
delta: (1,0)=8  (2,0)=8  (2,1)=8  (3,2)=2  (4,2)=2  (4,3)=2  (5,2)=2  (7,2)=1  (7,3)=1  (8,3)=1  (9,8)=3  (10,7)=3  (10,8)=3  (11,8)=3  (11,10)=6  (11,11)=6  (12,2)=9# (12,10)=6  (13,1)=9# (13,2)=9#
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (2,7) and color grey and mask Full at (13,5)
  _01: a rectangle with size (3,3) and color grey and mask Full at (8,6)
  _011: a rectangle with size (3,3) and color grey and mask xxx|.xx|..x at (1,1)
  _0111: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (2,5)
  _01111: a rectangle with size (3,3) and color grey and mask xxx|xx.|x.. at (5,10)
  _011111: a rectangle with size (2,3) and color grey and mask x.x|xxx at (9,1)
  _0111111: a rectangle with size (3,2) and color grey and mask xx|x.|xx at (0,11)
  _01111111: a rectangle with size (3,2) and color grey and mask xx|.x|xx at (9,11)
  _011111111: a rectangle with size (2,3) and color blue and mask Full at (8,1)
  _0111111111: a rectangle with size (3,2) and color yellow and mask Full at (0,12)
diff: 
delta: (2,1)=3  (2,6)=8  (2,7)=8  (3,1)=3  (3,2)=3  (3,7)=8  (6,12)=9# (7,11)=9# (7,12)=9# (9,10)=6  (10,10)=6  (10,11)=6  (11,10)=6  (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,7)=0  (13,8)=0  (14,4)=5# (14,7)=0  (14,8)=0  (14,10)=2  (15,9)=2  (15,10)=2  (15,11)=2 
   (909.4 bits)
data: a background with size (9,9) and color pink and layers
  _000: a rectangle with size (9,9) and color grey and mask ..x...x..|.xxx.xxx.|xxxxxxxxx|.xxxxxxx.|..xxxxx..|.xxxxxxx.|xxxxxxxxx|.xxx.xxx.|..x...x.. at (0,0)
  _00: a rectangle with size (3,2) and color yellow and mask Full at (3,7)
  _0: a rectangle with size (2,3) and color blue and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color red and mask Full at (7,3)
  _011: a rectangle with size (2,2) and color orange and mask Full at (0,0)
diff: 
delta: (0,7)=8  (0,8)=8  (1,8)=8  (7,0)=3  (7,8)=9# (8,0)=3  (8,1)=3  (8,7)=9# (8,8)=9#
   (394.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (2,7) and color grey and mask Full at (13,5)
  _01: a rectangle with size (3,3) and color grey and mask Full at (8,6)
  _011: a rectangle with size (3,3) and color grey and mask xxx|.xx|..x at (1,1)
  _0111: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (2,5)
  _01111: a rectangle with size (3,3) and color grey and mask xxx|xx.|x.. at (5,10)
  _011111: a rectangle with size (2,3) and color grey and mask x.x|xxx at (9,1)
  _0111111: a rectangle with size (3,2) and color grey and mask xx|x.|xx at (0,11)
  _01111111: a rectangle with size (3,2) and color grey and mask xx|.x|xx at (9,11)
  _011111111: a rectangle with size (2,3) and color blue and mask Full at (8,1)
  _0111111111: a rectangle with size (3,2) and color yellow and mask Full at (0,12)
diff: 
delta: (2,1)=3  (2,6)=8  (2,7)=8  (3,1)=3  (3,2)=3  (3,7)=8  (6,12)=9# (7,11)=9# (7,12)=9# (9,10)=6  (10,10)=6  (10,11)=6  (11,10)=6  (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,7)=0  (13,8)=0  (14,4)=5# (14,7)=0  (14,8)=0  (14,10)=2  (15,9)=2  (15,10)=2  (15,11)=2 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (2,7) and color grey and mask Full at (13,5)
  _01: a rectangle with size (3,3) and color grey and mask Full at (8,6)
  _011: a rectangle with size (3,3) and color grey and mask xxx|.xx|..x at (1,1)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (2,5)
  _01111: a rectangle with size (3,3) and color grey and mask Full at (5,10)
  _011111: a rectangle with size (12,2) and color grey and mask Full at (0,11)
  _0111111: a rectangle with size (2,3) and color grey and mask x.x|xxx at (9,1)
  _01111111: a rectangle with size (2,3) and color blue and mask Full at (8,1)
  _011111111: a rectangle with size (1,3) and color red and mask Full at (15,9)
  _0111111111: a rectangle with size (2,2) and color green and mask Full at (2,1)
diff: 
delta: (0,13)=4  (1,12)=4  (1,13)=4  (2,6)=8  (2,7)=8  (2,13)=4  (3,7)=8  (3,11)=0  (3,12)=0  (4,11)=0  (4,12)=0  (6,12)=9# (7,11)=9# (7,12)=9# (8,11)=0  (8,12)=0  (9,10)=6  (10,10)=6  (10,11)=6  (11,10)=6  (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,7)=0  (13,8)=0  (14,4)=5# (14,7)=0  (14,8)=0  (14,10)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
  _0: a rectangle with size (8,3) and color grey and mask Full at (0,10)
  _01: a rectangle with size (7,2) and color grey and mask Full at (7,6)
  _011: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (10,1)
  _0111: a rectangle with size (3,3) and color grey and mask ..x|.xx|xxx at (10,11)
  _01111: a rectangle with size (2,3) and color grey and mask x.x|xxx at (3,5)
  _011111: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,2)
  _0111111: a rectangle with size (3,2) and color grey and mask xx|.x|xx at (1,2)
  _01111111: a rectangle with size (2,3) and color red and mask Full at (2,5)
  _011111111: a rectangle with size (2,3) and color cyan and mask Full at (7,2)
  _0111111111: a rectangle with size (3,2) and color blue and mask Full at (1,1)
diff: 
delta: (1,10)=6  (2,10)=6  (2,11)=6  (3,10)=0  (3,11)=0  (3,12)=0  (4,10)=0  (4,11)=0  (4,12)=0  (7,8)=1  (8,7)=1  (8,8)=1  (9,8)=1  (10,2)=4  (10,3)=4  (10,6)=0  (10,7)=0  (10,11)=3  (10,12)=3  (11,3)=4  (11,6)=0  (11,7)=0  (11,11)=3  (12,8)=5# (13,8)=7# (14,6)=5# (14,7)=7# (14,8)=7#
! size mismatch, 10x10 instead of 9x9

TEST a8c38be5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 7890.1 bits (7890.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-136] Checking task a8d7556c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 79592.4 = 79601.4
DL output with Mo: L = 9.0 + 79592.4 = 79601.4
DL input+output M: L = 17.9 + 159184.8 = 159202.7

# learning a model for train pairs
2.000	
1.175	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.379	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.338	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.313	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.293	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.280	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 13900.2 = 13929.1
DL output with Mo: L = 93.0 + 8246.5 = 8339.5
DL input+output M: L = 121.9 + 22146.7 = 22268.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
diff: 
delta: (8,0)=5# (13,17)=5# (15,17)=5# (17,12)=5#
   (477.8 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (15,4)
  _011: a rectangle with size (2,2) and color red and mask Full at (5,5)
  _0111: a rectangle with size (2,2) and color red and mask Full at (6,0)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,15)
diff: 
delta: (8,0)=5# (13,17)=5# (15,13)=2  (15,14)=2  (15,17)=5# (16,13)=2  (16,14)=2  (17,12)=5#
   (325.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
diff: 
delta: (8,0)=5# (13,17)=5# (15,17)=5# (17,12)=5#
! size mismatch, 10x10 instead of 18x18

TRAIN a8d7556c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
diff: 
delta: (15,0)=5# (17,0)=5# (17,1)=5# (17,4)=5# (17,5)=5#
   (498.9 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a rectangle with size (2,3) and color red and mask Full at (3,6)
  _011: a rectangle with size (3,2) and color red and mask Full at (4,11)
  _0111: a rectangle with size (2,2) and color red and mask Full at (1,13)
  _01111: a rectangle with size (2,2) and color red and mask Full at (15,6)
diff: 
delta: (15,0)=5# (16,2)=2  (16,3)=2  (17,0)=5# (17,1)=5# (17,2)=2  (17,3)=2  (17,4)=5# (17,5)=5#
   (347.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
diff: 
delta: (15,0)=5# (17,0)=5# (17,1)=5# (17,4)=5# (17,5)=5#
! size mismatch, 10x10 instead of 18x18

TRAIN a8d7556c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
diff: 
delta: (1,0)=5#
   (413.4 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
  _01: a rectangle with size (4,2) and color red and mask Full at (7,10)
  _011: a rectangle with size (2,2) and color red and mask Full at (1,6)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,15)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (1,0)
diff: 
delta:
   (151.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
diff: 
delta: (1,0)=5#
! size mismatch, 10x10 instead of 18x18

TRAIN a8d7556c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ...x.x..xx.xxxxx..|..xx.x.x...xxxx.xx|x...xx.x..x.x.xx.x|.xxx.xx.xx...xx.xx|xxxxxxx..xx....xxx|.xxxx.xxx.x..xx.x.|xx.xxxxxx..x..x.xx|xxxx..xx.xxxxx.xx.|x.x..xxx...xxxx...|....x...xxxx..x.xx|..xx.xxx..x.xxxxx.|...xx.x..xx.xxxxxx|.xxxx..x...xxxxx.x|xxxxxxx.xxxxxxx..x|xx.xxx.x.xxxx.x..x|x.xxxx.xx...xxxx.x|.x..xxxxxxxxxxxxxx|x......x.x.xx.xx.. at (0,0)
diff: 
delta: (10,0)=5#
! size mismatch, 10x10 instead of 18x18

TEST a8d7556c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.2 sec (29.2 sec/task)
bits-train-error = 8246.5 bits (8246.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-135] Checking task a9f96cdd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1335.9 = 1344.9
DL output with Mo: L = 9.0 + 2531.7 = 2540.7
DL input+output M: L = 17.9 + 3867.6 = 3885.6

# learning a model for train pairs
2.000	
1.782	OUT DEF: ^.size=^.size
1.625	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.487	IN  DEF: ^.layer_0.shape.color=red
1.418	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.373	IN  DEF: ^.color=black
1.337	IN  DEF: ^.size=(?,?)
1.133	IN  DEF: ^.size.j=5
0.971	IN  DEF: ^.size.i=3
0.935	IN  DEF: ^.layer_0.pos=(?,?)
0.911	OUT DEF: ^.color=black
0.892	OUT DEF: ^.layer_0.pos=(?,?)
0.839	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at (?,^.layer_0.pos.j - 1)
WHERE (Mi)
a background with size (3,5) and color black and layers
  _0: a point with color red at (?,?)

DL input  with Mi: L = 36.8 + 262.0 = 298.8
DL output with Mo: L = 34.0 + 1533.3 = 1567.3
DL input+output M: L = 70.8 + 1795.3 = 1866.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (0,0)
diff: 
delta: (0,2)=6  (2,0)=8  (2,2)=7#
   (60.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (2,4)
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (2,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (1,3)=7#
   (25.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta:
   (6.6 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (0,4)=6  (2,2)=8  (2,4)=7#
   (60.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST a9f96cdd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.0 sec (0.0 sec/task)
bits-train-error = 1533.3 bits (1533.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-134] Checking task aabf363d.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5171.1 = 5180.1
DL output with Mo: L = 9.0 + 4809.5 = 4818.4
DL input+output M: L = 17.9 + 9980.5 = 9998.5

# learning a model for train pairs
2.000	
1.299	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.653	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.557	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.486	OUT DEF: ^.size=^.size
0.425	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.385	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.366	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.347	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.340	OUT DEF: ^.color=black
0.334	IN  DEF: ^.color=black
0.330	IN  DEF: ^.layer_0.pos=(?,?)
0.315	IN  DEF: ^.layer_0.pos.i=1
0.299	IN  DEF: ^.layer_0.pos.j=1
0.295	IN  DEF: ^.size=(?,?)
0.265	IN  DEF: ^.size.i=7
0.235	IN  DEF: ^.size.j=7
0.230	IN  DEF: ^.layer_0.shape.size=(?,?)
0.204	IN  DEF: ^.layer_0.shape.size.i=5
0.180	IN  DEF: ^.layer_0.shape.size.j=4
0.176	IN  DEF: ^.layer_01.pos=(?,?)
0.160	IN  DEF: ^.layer_01.pos.j=(0)
0.145	IN  DEF: ^.layer_01.pos.i=6

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_01.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color ? and mask ? at (1,1)
  _01: a point with color ? at (6,(0))

DL input  with Mi: L = 76.9 + 646.9 = 723.8
DL output with Mo: L = 23.2 + 0.0 = 23.2
DL input+output M: L = 100.1 + 646.9 = 747.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
  _01: a point with color yellow at (6,0)
diff: 
delta:
   (32.3 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
  _01: a point with color yellow at (6,0)
diff: 
delta:
correct output grid

TRAIN aabf363d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
  _01: a point with color pink at (6,0)
diff: 
delta:
   (32.3 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color pink and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
  _01: a point with color pink at (6,0)
diff: 
delta:
correct output grid

TRAIN aabf363d.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxx..|xxxxx|..xx.|.xx..|.xxx. at (1,1)
  _01: a point with color red at (6,0)
diff:   ^.layer_0.shape.size.j
delta:
correct output grid

TEST aabf363d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-133] Checking task aba27056.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8364.1 = 8373.1
DL output with Mo: L = 9.0 + 16955.1 = 16964.0
DL input+output M: L = 17.9 + 25319.2 = 25337.1

# learning a model for train pairs
2.000	
1.276	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.811	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.474	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.443	OUT DEF: ^.size=^.size
0.426	OUT DEF: ^.layer_00=^.layer_0
0.417	OUT DEF: ^.layer_0.shape.color=yellow
0.412	IN  DEF: ^.color=black
0.408	IN  DEF: ^.size=(?,?)
0.404	IN  DEF: ^.layer_0.pos=(?,?)
0.399	IN  DEF: ^.layer_0.shape.size=(?,?)
0.397	OUT DEF: ^.color=black
0.395	OUT DEF: ^.layer_0.pos=(?,?)
0.387	OUT DEF: ^.layer_0.pos.j=(0)
0.385	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,(0))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 41.0 + 2115.2 = 2156.2
DL output with Mo: L = 41.1 + 2125.7 = 2166.9
DL input+output M: L = 82.1 + 4240.9 = 4323.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
diff: 
delta:
   (59.3 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
  _0: a rectangle with size (6,7) and color yellow and mask ...x...|x..x..x|.x.x.x.|..xxx..|.xxxxx.|.xxxxx. at (0,0)
diff: 
delta:
   (64.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (4,1)
diff: 
delta: (4,3)=0  (5,2)=0  (5,3)=0  (5,4)=0 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,5) and color pink and mask Full at (6,1)
diff: 
delta: (4,1)=6  (4,2)=6  (4,4)=6  (4,5)=6  (5,1)=6  (5,5)=6 
! 22 wrong pixels (generated / expected)

TRAIN aba27056.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
diff: 
delta:
   (83.9 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
  _0: a rectangle with size (9,8) and color yellow and mask x.......|.x......|..x.xxxx|...xxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|...xxxxx|..x.xxxx at (0,0)
diff: 
delta:
   (96.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,1) and color orange and mask Full at (2,8)
diff: 
delta: (2,4)=7# (2,5)=7# (2,6)=7# (2,7)=7# (3,4)=7# (7,4)=7# (8,4)=7# (8,5)=7# (8,6)=7# (8,7)=7#
! 46 wrong pixels (generated / expected)

TRAIN aba27056.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
diff: 
delta:
   (68.3 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
  _0: a rectangle with size (5,6) and color yellow and mask xxxxxx|xxxxxx|xxxxxx|.xxxx.|x.xx.x at (1,0)
diff: 
delta:
   (51.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (5,6) and color black and mask .xxxx.|.xxxx.|..xx..|xxxxxx|xxxxxx at (1,0)
diff:   ^.color
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (0,0)
diff: 
delta: (1,0)=3  (1,5)=3  (2,0)=3  (2,5)=3  (3,0)=3  (3,1)=3  (3,4)=3  (3,5)=3 
! 25 wrong pixels (generated / expected)

TRAIN aba27056.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,4) and color red and mask xxxx|x..x|x...|x...|x...|x...|x...|x..x|xxxx at (0,1)
diff: 
delta:
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,1) and color red and mask Full at (0,1)
diff: 
delta: (0,2)=2  (0,3)=2  (0,4)=2  (1,4)=2  (7,4)=2  (8,2)=2  (8,3)=2  (8,4)=2 
! 59 wrong pixels (generated / expected)

TEST aba27056.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 2125.7 bits (2125.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-132] Checking task ac0a08a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2078.6 = 2087.6
DL output with Mo: L = 9.0 + 32406.5 = 32415.4
DL input+output M: L = 17.9 + 34485.1 = 34503.0

# learning a model for train pairs
2.000	
1.799	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.597	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.539	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.475	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.453	IN  DEF: ^.color=black
1.436	IN  DEF: ^.size=(?,?)
1.358	IN  DEF: ^.size.i=3
1.280	IN  DEF: ^.size.j=3
1.263	IN  DEF: ^.layer_0.pos=(?,?)
1.222	IN  DEF: ^.layer_0.pos.i=0
1.205	IN  DEF: ^.layer_01.pos=(?,?)
1.163	IN  DEF: ^.layer_01.pos.j=2
1.121	IN  DEF: ^.layer_01.pos.i=1
1.116	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.112	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.110	OUT DEF: ^.layer_0.shape.mask=Full
1.108	OUT DEF: ^.layer_01.shape.mask=Full
1.106	OUT DEF: ^.color=black
1.105	OUT DEF: ^.size=(?,?)
1.104	OUT DEF: ^.layer_0.pos=(?,?)
1.100	OUT DEF: ^.layer_0.pos.i=(0)
1.099	OUT DEF: ^.layer_0.shape.size=(?,?)
1.098	OUT DEF: ^.layer_01.pos=(?,?)
1.097	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at ((0),?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a point with color ? at (0,?)
  _01: a point with color ? at (1,2)

DL input  with Mi: L = 49.9 + 1042.8 = 1092.6
DL output with Mo: L = 66.6 + 18521.1 = 18587.6
DL input+output M: L = 116.5 + 19563.8 = 19680.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color orange at (1,2)
diff: 
delta:
   (12.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color orange and mask Full at (2,4)
diff: 
delta:
   (44.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color orange at (1,2)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN ac0a08a4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,2)
diff: 
delta: (2,0)=6 
   (29.6 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (3,6)
diff: 
delta: (6,0)=6  (6,1)=6  (6,2)=6  (7,0)=6  (7,1)=6  (7,2)=6  (8,0)=6  (8,1)=6  (8,2)=6 
   (226.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,2)
diff: 
delta: (2,0)=6 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (2,0)
  _01: a point with color cyan at (1,2)
diff:   ^.layer_0.pos.i
delta: (0,1)=4 
! size mismatch, 10x10 instead of 9x9

TRAIN ac0a08a4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,1)
  _01: a point with color red at (1,2)
diff: 
delta: (0,2)=9# (1,0)=3  (2,1)=7#
   (62.5 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask Full at (0,5)
  _01: a rectangle with size (5,5) and color red and mask Full at (5,10)
diff: 
delta: (0,10)=9# (0,11)=9# (0,12)=9# (0,13)=9# (0,14)=9# (1,10)=9# (1,11)=9# (1,12)=9# (1,13)=9# (1,14)=9# (2,10)=9# (2,11)=9# (2,12)=9# (2,13)=9# (2,14)=9# (3,10)=9# (3,11)=9# (3,12)=9# (3,13)=9# (3,14)=9# (4,10)=9# (4,11)=9# (4,12)=9# (4,13)=9# (4,14)=9# (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3  (6,0)=3  (6,1)=3  (6,2)=3  (6,3)=3  (6,4)=3  (7,0)=3  (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (8,0)=3  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (10,5)=7# (10,6)=7# (10,7)=7# (10,8)=7# (10,9)=7# (11,5)=7# (11,6)=7# (11,7)=7# (11,8)=7# (11,9)=7# (12,5)=7# (12,6)=7# (12,7)=7# (12,8)=7# (12,9)=7# (13,5)=7# (13,6)=7# (13,7)=7# (13,8)=7# (13,9)=7# (14,5)=7# (14,6)=7# (14,7)=7# (14,8)=7# (14,9)=7#
   (1581.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,1)
  _01: a point with color red at (1,2)
diff: 
delta: (0,2)=9# (1,0)=3  (2,1)=7#
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (0,2)
  _01: a point with color red at (1,2)
diff: 
delta: (0,1)=6  (1,0)=3  (2,1)=7#
! size mismatch, 10x10 instead of 15x15

TRAIN ac0a08a4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (1,1)=9# (2,0)=8 
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (1,1)
  _01: a point with color pink at (1,2)
diff:   ^.layer_0.pos.i
delta: (0,0)=1  (2,0)=8 
! size mismatch, 10x10 instead of 12x12

TEST ac0a08a4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 18521.1 bits (18521.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-131] Checking task ae3edfdc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5900.9 = 5909.9
DL output with Mo: L = 9.0 + 5900.9 = 5909.9
DL input+output M: L = 17.9 + 11801.9 = 11819.8

# learning a model for train pairs
2.000	
1.800	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.690	OUT DEF: ^.size=^.size
1.584	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.561	OUT DEF: ^.layer_0.shape.color=green
1.538	OUT DEF: ^.layer_01.shape.color=orange
1.515	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.489	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.465	OUT DEF: ^.layer_011.shape.color=blue
1.442	OUT DEF: ^.layer_0111.shape.color=red
1.424	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.406	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.387	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.368	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.348	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.328	IN  OBJECT at ^.layer_011111: a point with color ? at ?
1.305	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
1.281	IN  DEF: ^.layer_011111.shape.color=green
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color green and mask ? at ?
  _01: a rectangle with size ? and color orange and mask ? at ?
  _011: a point with color blue at ?
  _0111: a point with color red at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?
  _011111: a point with color green at ?
  _0111111: a point with color ? at ?

DL input  with Mi: L = 95.3 + 4863.8 = 4959.1
DL output with Mo: L = 77.1 + 2535.8 = 2612.9
DL input+output M: L = 172.4 + 7399.6 = 7572.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,3)
  _01: a point with color green at (4,0)
  _011: a point with color red at (4,3)
  _0111: a point with color green at (4,8)
  _01111: a point with color orange at (6,11)
  _011111: a point with color green at (9,3)
  _0111111: a point with color orange at (10,5)
diff: 
delta: (10,11)=1  (10,14)=7# (14,11)=7#
   (197.6 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (3,2)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (9,10)
  _011: a point with color blue at (10,11)
  _0111: a point with color red at (4,3)
diff: 
delta:
   (86.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,3)
  _01: a point with color green at (4,0)
  _011: a point with color red at (4,3)
  _0111: a point with color green at (4,8)
  _01111: a point with color orange at (6,11)
  _011111: a point with color green at (9,3)
  _0111111: a point with color orange at (10,5)
diff: 
delta: (10,11)=1  (10,14)=7# (14,11)=7#
! 14 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (0,3)
  _01: a point with color orange at (2,0)
  _011: a point with color blue at (2,3)
  _0111: a point with color orange at (2,9)
  _01111: a point with color orange at (8,3)
  _011111: a point with color green at (10,5)
  _0111111: a point with color red at (10,11)
diff: 
delta: (14,11)=3 
   (155.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (10,10)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (1,2)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (10,11)
diff: 
delta:
   (84.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (0,3)
  _01: a point with color orange at (2,0)
  _011: a point with color blue at (2,3)
  _0111: a point with color orange at (2,9)
  _01111: a point with color orange at (8,3)
  _011111: a point with color green at (10,5)
  _0111111: a point with color red at (10,11)
diff: 
delta: (14,11)=3 
! 12 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color orange at (6,1)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
  _01111: a point with color green at (11,14)
  _011111: a point with color green at (14,6)
  _0111111: a point with color orange at (14,10)
diff: 
delta:
   (133.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Even Checkboard at (10,6)
  _01: a rectangle with size (2,2) and color orange and mask Even Checkboard at (6,9)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
diff: 
delta:
   (83.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color orange at (6,1)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
  _01111: a point with color green at (11,14)
  _011111: a point with color green at (14,6)
  _0111111: a point with color orange at (14,10)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (0,11)
  _01: a point with color green at (3,0)
  _011: a point with color red at (3,11)
  _0111: a point with color orange at (6,0)
  _01111: a point with color blue at (6,5)
  _011111: a point with color green at (12,11)
  _0111111: a point with color orange at (6,14)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TEST ae3edfdc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.1 sec (21.1 sec/task)
bits-train-error = 2535.8 bits (2535.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-130] Checking task ae4f1146.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 27995.3 = 28004.3
DL output with Mo: L = 9.0 + 3303.7 = 3312.7
DL input+output M: L = 17.9 + 31299.0 = 31316.9

# learning a model for train pairs
2.000	
1.690	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.500	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.351	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.202	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.053	OUT DEF: ^.size=^.layer_0.shape.size
0.942	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.846	OUT DEF: ^.color=^.layer_0.shape.color
0.778	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.722	OUT DEF: ^.layer_0.shape.color=^.layer_0111.shape.color
0.707	OUT DEF: ^.layer_0.pos=(?,?)
0.673	OUT DEF: ^.layer_0.pos.i=(0)
0.638	OUT DEF: ^.layer_0.pos.j=(0)
0.631	IN  DEF: ^.layer_011.shape.mask=Full
0.595	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.589	IN  DEF: ^.layer_0.shape.color=cyan
0.582	IN  DEF: ^.layer_011.shape.color=cyan
0.576	IN  DEF: ^.layer_0111.shape.color=blue
0.572	IN  DEF: ^.layer_0.shape.mask=Full
0.569	IN  DEF: ^.layer_01111.shape.mask=Full
0.567	IN  DEF: ^.color=black
0.565	IN  DEF: ^.size=(?,?)
0.553	IN  DEF: ^.size.i=9
0.541	IN  DEF: ^.size.j=9
0.539	IN  DEF: ^.layer_01.pos=(?,?)
0.537	IN  DEF: ^.layer_0111.pos=(?,?)
0.535	IN  DEF: ^.layer_0.pos=(?,?)
0.534	IN  DEF: ^.layer_0.shape.size=(?,?)
0.526	IN  DEF: ^.layer_0.shape.size.i=3
0.518	IN  DEF: ^.layer_0.shape.size.j=3
0.514	IN  OBJECT at ^.layer_011110: a rectangle with size ? and color ? and mask ? at ?
0.510	IN  DEF: ^.layer_01.pos.i=1
0.505	IN  DEF: ^.layer_011110.shape.mask=Full
0.503	IN  DEF: ^.color=black
0.501	IN  DEF: ^.layer_01.shape.size=(?,?)
0.499	IN  DEF: ^.layer_011.pos=(?,?)
0.498	IN  DEF: ^.layer_011.shape.size=(?,?)
0.490	IN  DEF: ^.layer_011.shape.size.i=3
0.482	IN  DEF: ^.layer_011.shape.size.j=3
0.480	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.473	IN  DEF: ^.layer_0111.shape.size.i=3
0.465	IN  DEF: ^.layer_0111.shape.size.j=3
0.463	IN  DEF: ^.layer_011110.pos=(?,?)
0.461	IN  DEF: ^.layer_01111.pos=(?,?)
0.460	IN  DEF: ^.layer_01111.shape.size=(?,?)
0.458	IN  DEF: ^.layer_011110.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0111.shape.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (1,?)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (?,?)
  _0111: a rectangle with size (3,3) and color blue and mask ? at (?,?)
  _011110: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 205.5 + 8207.0 = 8412.5
DL output with Mo: L = 39.2 + 482.4 = 521.6
DL input+output M: L = 244.7 + 8689.3 = 8934.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask .x|xx at (1,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (4,1)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|x.x|x.x at (5,6)
  _011110: a rectangle with size (3,3) and color cyan and mask Full at (1,4)
  _01111: a rectangle with size (3,3) and color cyan and mask Full at (5,6)
diff: 
delta: (1,0)=1  (1,4)=8  (4,3)=1  (6,2)=1 
   (192.1 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|x.x|x.x at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask xx.|xxx|x.x at (4,1)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (1,4)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|x.x|x.x at (5,6)
  _011110: a rectangle with size (3,3) and color cyan and mask Full at (5,6)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (1,4)
diff:   ^.layer_011.shape.mask  ^.layer_01.pos.i
delta: (1,0)=1  (1,4)=8  (4,3)=1  (6,2)=1 
! 4 wrong pixels (generated / expected)

TRAIN ae4f1146.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (6,6)
  _01: a rectangle with size (6,6) and color cyan and mask ...x.x|....xx|...xx.|..x...|..x...|xx..xx at (1,2)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (0,1)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (4,2)
  _011110: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (3,7)
diff: 
delta: (0,3)=1  (1,2)=1  (4,2)=8  (8,6)=1 
   (212.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (6,6)
  _01: a rectangle with size (6,6) and color cyan and mask ...x.x|....xx|...xx.|..x...|..x...|xx..xx at (1,2)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (0,1)
  _0111: a rectangle with size (3,3) and color blue and mask .xx|xxx|xxx at (4,2)
  _011110: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (3,7)
diff: 
delta: (0,3)=1  (1,2)=1  (4,2)=8  (8,6)=1 
! 5 wrong pixels (generated / expected)

TRAIN ae4f1146.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (5,0)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|xx.|x.x at (4,6)
  _011110: a rectangle with size (3,2) and color cyan and mask Full at (4,7)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (4,6)
diff: 
delta: (2,4)=1  (5,1)=1  (6,2)=1  (7,0)=1 
   (182.2 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|x.x at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (3,3) and color cyan and mask x.x|xx.|.xx at (5,0)
  _0111: a rectangle with size (3,3) and color blue and mask .x.|xx.|x.x at (4,6)
  _011110: a rectangle with size (3,2) and color cyan and mask Full at (4,7)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (5,1)
diff:   ^.layer_011.shape.mask
delta: (2,4)=1  (4,6)=8  (7,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN ae4f1146.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask .xx|xxx|.x. at (1,6)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (5,4)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|..x|xx. at (0,2)
  _011110: a rectangle with size (3,3) and color cyan and mask Full at (0,2)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (3,6)
diff: 
delta: (1,6)=8  (5,2)=1  (5,5)=1  (6,0)=1  (6,4)=1  (7,6)=1 
   (234.4 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.x. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask .xx|xxx|.x. at (1,6)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (5,4)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|..x|xx. at (0,2)
  _011110: a rectangle with size (3,3) and color cyan and mask Full at (0,2)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (3,6)
diff: 
delta: (1,6)=8  (5,2)=1  (5,5)=1  (6,0)=1  (6,4)=1  (7,6)=1 
! 3 wrong pixels (generated / expected)

TRAIN ae4f1146.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (6,9) and color cyan and mask xxx...x.x|xxx....x.|.xx...x.x|...x.x...|...xx....|....xx... at (0,0)
  _011: a rectangle with size (3,3) and color blue and mask Full at (0,6)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|.xx|xx. at (6,6)
  _011110: a rectangle with size (2,2) and color blue and mask Full at (3,4)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (6,8)
diff:   ^.layer_011.shape.color  ^.layer_01.pos.i  ^.layer_0.shape.size.i
delta: (2,0)=1  (5,3)=1  (7,6)=8 
! size mismatch, 2x3 instead of 3x3
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (6,9) and color cyan and mask xxx...x.x|xxx....x.|.xx...x.x|...x.x...|...xx....|....xx... at (0,0)
  _011: a rectangle with size (3,3) and color blue and mask Full at (0,6)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|.xx|xx. at (6,6)
  _011110: a rectangle with size (2,2) and color blue and mask Full at (3,4)
  _01111: a rectangle with size (3,1) and color cyan and mask Full at (6,8)
diff:   ^.layer_011.shape.color  ^.layer_01.pos.i  ^.layer_0.shape.size.j
delta: (2,0)=1  (5,3)=1  (7,6)=8 
! size mismatch, 3x2 instead of 3x3

TEST ae4f1146.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.4 sec (12.4 sec/task)
bits-train-error = 482.4 bits (482.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-129] Checking task aedd82e4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4636.7 = 4645.6
DL output with Mo: L = 9.0 + 4890.6 = 4899.6
DL input+output M: L = 17.9 + 9527.3 = 9545.2

# learning a model for train pairs
2.000	
1.660	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.292	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.183	OUT DEF: ^.size=^.size
1.110	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.047	OUT DEF: ^.layer_0=^.layer_0
0.997	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.957	IN  DEF: ^.layer_0.shape.color=red
0.918	IN  DEF: ^.layer_01.shape.color=red
0.905	IN  DEF: ^.color=black
0.892	OUT DEF: ^.color=black
0.882	IN  DEF: ^.size=(?,?)
0.872	IN  DEF: ^.layer_0.pos=(?,?)
0.844	IN  DEF: ^.layer_0.pos.i=(0)
0.803	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.782	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.762	IN  DEF: ^.layer_01.shape.mask=Full
0.743	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.732	IN  DEF: ^.layer_0.shape.size=(?,?)
0.722	IN  DEF: ^.layer_01.pos=(?,?)
0.712	IN  DEF: ^.layer_01.shape.size=(?,?)
0.691	IN  DEF: ^.layer_01.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at ((0),?)
  _01: a rectangle with size (1,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 70.5 + 2265.7 = 2336.2
DL output with Mo: L = 29.6 + 894.2 = 923.8
DL input+output M: L = 100.1 + 3160.0 = 3260.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta:
   (33.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,1)
diff:   ^.layer_01.shape.size.i  ^.layer_0.pos.i
delta:
! 5 wrong pixels (generated / expected)

TRAIN aedd82e4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,3)
diff: 
delta: (3,1)=2 
   (62.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,3)
diff: 
delta: (3,1)=1 
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,3)
diff: 
delta: (3,1)=2 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,1)
diff: 
delta: (2,3)=2 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,3)
diff: 
delta: (1,1)=2  (3,1)=2 
! 3 wrong pixels (generated / expected)

TRAIN aedd82e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask xx|.x|xx at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (4,1)
diff: 
delta: (2,3)=2 
   (66.5 bits)
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask xx|.x|xx at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (4,1)
diff: 
delta: (2,3)=1 
   (23.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask xx|.x|xx at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (4,1)
diff: 
delta: (2,3)=2 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (4,1)
diff: 
delta: (1,0)=0  (2,3)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (4,1)
  _01: a rectangle with size (3,2) and color red and mask xx|.x|xx at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.i  ^.layer_0.pos.i
delta: (2,3)=2 
! 6 wrong pixels (generated / expected)

TRAIN aedd82e4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
diff: 
delta: (1,0)=2  (2,1)=2 
   (65.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,2)
diff: 
delta: (1,0)=2  (2,1)=1 
   (38.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask xx.|x.x|.x. at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.i
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask xx.|x.x|.x. at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.i
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
diff: 
delta: (1,0)=2  (2,1)=2 
! 3 wrong pixels (generated / expected)

TRAIN aedd82e4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (4,2)
diff: 
delta: (0,3)=2  (3,0)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,3)
diff: 
delta: (3,0)=2  (4,2)=2  (4,3)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,0)
diff: 
delta: (0,3)=2  (4,2)=2  (4,3)=2 
! 5 wrong pixels (generated / expected)

TEST aedd82e4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 894.2 bits (894.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-128] Checking task af902bf9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3801.2 = 3810.2
DL output with Mo: L = 9.0 + 8781.2 = 8790.1
DL input+output M: L = 17.9 + 12582.4 = 12600.3

# learning a model for train pairs
2.000	
1.554	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.488	OUT DEF: ^.size=^.size
1.458	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.422	IN  DEF: ^.layer_0.shape.color=yellow
1.392	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.355	IN  DEF: ^.layer_01.shape.color=yellow
1.323	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.285	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.256	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.227	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
1.196	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
1.164	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
1.127	OUT DEF: ^.layer_01111=^.layer_0111
1.091	OUT DEF: ^.layer_011=^.layer_011
1.054	OUT DEF: ^.layer_01=^.layer_01
1.017	OUT DEF: ^.layer_0111=^.layer_0
0.981	IN  DEF: ^.layer_011.shape.color=yellow
0.945	IN  DEF: ^.layer_0111.shape.color=yellow
0.929	OUT DEF: ^.layer_0.shape.color=red
0.917	IN  DEF: ^.color=black
0.908	IN  DEF: ^.size=(?,?)
0.839	IN  DEF: ^.size.i=10
0.770	IN  DEF: ^.size.j=10
0.761	IN  DEF: ^.layer_0.pos=(?,?)
0.751	IN  DEF: ^.layer_01.pos=(?,?)
0.742	IN  DEF: ^.layer_011.pos=(?,?)
0.733	IN  DEF: ^.layer_0111.pos=(?,?)
0.725	OUT DEF: ^.layer_0.shape.mask=Full
0.720	OUT DEF: ^.color=black
0.716	OUT DEF: ^.layer_0.pos=(?,?)
0.701	OUT DEF: ^.layer_0.pos.j=^.layer_0111.pos.j + 1
0.697	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,^.layer_0111.pos.j + 1)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a point with color yellow at (?,?)
  _01: a point with color yellow at (?,?)
  _011: a point with color yellow at (?,?)
  _0111: a point with color yellow at (?,?)

DL input  with Mi: L = 96.7 + 1916.9 = 2013.5
DL output with Mo: L = 69.8 + 1415.2 = 1485.0
DL input+output M: L = 166.5 + 3332.1 = 3498.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,5)
  _0111: a point with color yellow at (5,3)
diff: 
delta:
   (37.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (4,4)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,5)
  _0111: a point with color yellow at (3,3)
  _01111: a point with color yellow at (5,3)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,3)
  _0111: a point with color yellow at (5,5)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,5)
  _0111: a point with color yellow at (5,3)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN af902bf9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,6)
  _0111: a point with color yellow at (6,1)
diff: 
delta:
   (37.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (2,2)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,6)
  _0111: a point with color yellow at (1,1)
  _01111: a point with color yellow at (6,1)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,1)
  _0111: a point with color yellow at (6,6)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,6)
  _0111: a point with color yellow at (6,1)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN af902bf9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (6,4)
diff: 
delta: (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (117.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask Full at (7,5)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (1,1)
  _01111: a point with color yellow at (6,4)
diff: 
delta: (2,2)=2  (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (114.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (3,3)
diff: 
delta: (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (6,4)
diff: 
delta: (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color yellow at (3,1)
diff: 
delta: (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 17 wrong pixels (generated / expected)

TRAIN af902bf9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,5)
  _0111: a point with color yellow at (4,9)
diff: 
delta: (5,0)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,5)
  _0111: a point with color yellow at (5,0)
diff: 
delta: (4,9)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,9)
  _0111: a point with color yellow at (4,5)
diff: 
delta: (5,0)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 17 wrong pixels (generated / expected)

TEST af902bf9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.8 sec (6.8 sec/task)
bits-train-error = 1415.2 bits (1415.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-127] Checking task b0c4d837.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 26836.9 = 26845.8
DL output with Mo: L = 9.0 + 3349.2 = 3358.1
DL input+output M: L = 17.9 + 30186.1 = 30204.0

# learning a model for train pairs
2.000	
1.527	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.207	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.929	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.846	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.819	OUT DEF: ^.color=black
0.797	OUT DEF: ^.size=(?,?)
0.700	OUT DEF: ^.size.i=3
0.602	OUT DEF: ^.size.j=3
0.580	OUT DEF: ^.layer_0.pos=(?,?)
0.528	OUT DEF: ^.layer_0.pos.i=0
0.476	OUT DEF: ^.layer_0.pos.j=0
0.454	OUT DEF: ^.layer_0.shape.size=(?,?)
0.438	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.396	OUT DEF: ^.layer_0.shape.size.i=1
0.386	IN  DEF: ^.layer_0.shape.color=cyan
0.375	IN  DEF: ^.layer_01.shape.color=grey
0.370	IN  DEF: ^.layer_0.shape.mask=Full
0.367	IN  DEF: ^.color=black
0.364	IN  DEF: ^.size=(?,?)
0.361	IN  DEF: ^.layer_0.pos=(?,?)
0.358	IN  DEF: ^.layer_0.shape.size=(?,?)
0.356	IN  DEF: ^.layer_01.pos=(?,?)
0.353	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 71.0 + 5480.7 = 5551.7
DL output with Mo: L = 41.8 + 448.6 = 490.4
DL input+output M: L = 112.8 + 5929.4 = 6042.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|xxxx|xxxx at (1,1)
diff: 
delta:
   (73.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|xxxx|xxxx at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|x..x|xxxx at (1,1)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (5,1)
  _01: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|x..x|xxxx at (1,1)
diff:   ^.layer_0.shape.color
delta: (4,2)=8  (4,3)=8 
! 3 wrong pixels (generated / expected)

TRAIN b0c4d837.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|xxxxx|xxxxx|xxxxx|xxxxx at (1,2)
diff: 
delta:
   (104.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta: (1,2)=8 
   (22.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|xxxxx|xxxxx|xxxxx|xxxxx at (1,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN b0c4d837.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask Full at (5,2)
  _01: a rectangle with size (7,7) and color grey and mask x.....x|x.....x|x.....x|xxxxxxx|xxxxxxx|xxxxxxx|xxxxxxx at (2,1)
diff: 
delta:
   (115.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask Full at (5,2)
  _01: a rectangle with size (7,7) and color grey and mask x.....x|x.....x|x.....x|xxxxxxx|xxxxxxx|xxxxxxx|xxxxxxx at (2,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask x.....x|x.....x|x.....x|x.....x|x.....x|x.....x|xxxxxxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (5,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 3 wrong pixels (generated / expected)

TRAIN b0c4d837.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask Full at (4,3)
  _01: a rectangle with size (7,5) and color grey and mask x...x|x...x|xxxxx|xxxxx|xxxxx|xxxxx|xxxxx at (2,2)
diff: 
delta:
   (100.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (4.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask Full at (4,3)
  _01: a rectangle with size (7,5) and color grey and mask x...x|x...x|xxxxx|xxxxx|xxxxx|xxxxx|xxxxx at (2,2)
diff: 
delta:
correct output grid

TRAIN b0c4d837.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color grey and mask x..x|xxxx|xxxx|xxxx at (1,1)
diff: 
delta:
   (69.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color grey and mask x..x|xxxx|xxxx|xxxx at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x..x|x..x|x..x|xxxx at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 1 wrong pixels (generated / expected)

TRAIN b0c4d837.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,5) and color grey and mask x...x|x...x|xxxxx|xxxxx|xxxxx at (2,1)
diff: 
delta:
   (84.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (4.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,5) and color grey and mask x...x|x...x|xxxxx|xxxxx|xxxxx at (2,1)
diff: 
delta:
correct output grid

TRAIN b0c4d837.json/6: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,3) and color cyan and mask Full at (2,3)
  _01: a rectangle with size (8,5) and color grey and mask x...x|xxxxx|xxxxx|xxxxx|xxxxx|xxxxx|xxxxx|xxxxx at (1,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (1,2)
  _01: a rectangle with size (6,3) and color cyan and mask Full at (2,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 1 wrong pixels (generated / expected)

TEST b0c4d837.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 448.6 bits (448.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-126] Checking task b190f7f5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6079.4 = 6088.3
DL output with Mo: L = 9.0 + 18770.4 = 18779.4
DL input+output M: L = 17.9 + 24849.8 = 24867.7

# learning a model for train pairs
2.000	
1.767	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.677	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.586	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.494	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.439	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.390	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 4643.3 = 4672.2
DL output with Mo: L = 103.8 + 11587.3 = 11691.1
DL input+output M: L = 132.7 + 16230.6 = 16363.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (0,3)
diff: 
delta: (0,0)=2  (0,2)=4  (1,1)=3 
   (106.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.x. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (0,6)
  _011: a rectangle with size (1,3) and color green and mask Full at (4,3)
  _0111: a rectangle with size (3,1) and color green and mask Full at (3,4)
  _01111: a rectangle with size (1,1) and color black and mask Full at (0,0)
diff: 
delta:
   (174.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (0,3)
diff: 
delta: (0,0)=2  (0,2)=4  (1,1)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,0)
diff: 
delta: (0,2)=8  (0,4)=4  (1,3)=1  (1,4)=2  (1,5)=4  (2,4)=1 
   (149.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,3)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (4,0)
  _011: a rectangle with size (2,2) and color red and mask x.|xx at (4,3)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (4,6)
  _01111: a rectangle with size (2,2) and color blue and mask x.|xx at (7,3)
diff: 
delta: (0,5)=4  (3,2)=1  (3,5)=2  (3,8)=4  (6,5)=1 
   (278.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,0)
diff: 
delta: (0,2)=8  (0,4)=4  (1,3)=1  (1,4)=2  (1,5)=4  (2,4)=1 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ..x.|xxxx|..x.|..x. at (0,4)
diff: 
delta: (0,0)=2  (0,3)=4  (1,1)=2  (1,2)=4  (2,1)=4  (2,2)=2  (3,0)=4  (3,3)=2 
   (208.4 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..x.|xxxx|..x.|..x. at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (0,12)
  _011: a rectangle with size (4,4) and color red and mask ..x.|xxxx|..x.|..x. at (4,4)
  _0111: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (4,8)
  _01111: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (8,4)
diff: 
delta: (8,10)=2  (9,8)=2  (9,9)=2  (9,10)=2  (9,11)=2  (10,10)=2  (11,10)=2  (12,2)=4  (12,14)=2  (13,0)=4  (13,1)=4  (13,2)=4  (13,3)=4  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (14,2)=4  (14,14)=2  (15,2)=4  (15,14)=2 
   (705.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ..x.|xxxx|..x.|..x. at (0,4)
diff: 
delta: (0,0)=2  (0,3)=4  (1,1)=2  (1,2)=4  (2,1)=4  (2,2)=2  (3,0)=4  (3,3)=2 
! size mismatch, 10x10 instead of 16x16

TRAIN b190f7f5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask .xx.|xxxx|x..x|xxxx at (4,0)
diff: 
delta: (0,0)=3  (0,3)=1  (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2  (3,0)=3  (3,3)=3 
! size mismatch, 10x10 instead of 16x16

TEST b190f7f5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.1 sec (23.1 sec/task)
bits-train-error = 11587.3 bits (11587.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-125] Checking task b1948b0a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4972.4 = 4981.4
DL output with Mo: L = 9.0 + 4972.4 = 4981.4
DL input+output M: L = 17.9 + 9944.8 = 9962.7

# learning a model for train pairs
2.000	
1.428	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.856	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.564	OUT DEF: ^.layer_0=^.layer_0
0.479	OUT DEF: ^.size=^.size
0.432	IN  DEF: ^.color=pink
0.385	OUT DEF: ^.color=red
0.357	IN  DEF: ^.layer_0.shape.color=orange
0.350	IN  DEF: ^.size=(?,?)
0.343	IN  DEF: ^.layer_0.pos=(?,?)
0.322	IN  DEF: ^.layer_0.pos.j=(0)
0.302	IN  DEF: ^.layer_0.pos.i=(0)
0.295	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color red and layers
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color pink and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at ((0),(0))

DL input  with Mi: L = 49.8 + 1404.0 = 1453.8
DL output with Mo: L = 17.4 + 0.0 = 17.4
DL input+output M: L = 67.2 + 1404.0 = 1471.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color pink and layers
  _0: a rectangle with size (3,4) and color orange and mask ..x.|..xx|xx.x at (0,0)
diff: 
delta:
   (38.7 bits)
data: a background with size (3,4) and color red and layers
  _0: a rectangle with size (3,4) and color orange and mask ..x.|..xx|xx.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color pink and layers
  _0: a rectangle with size (3,4) and color orange and mask ..x.|..xx|xx.x at (0,0)
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,4) and color pink and layers
  _0: a rectangle with size (6,4) and color orange and mask xxx.|..x.|xx.x|x.xx|x.x.|...x at (0,0)
diff: 
delta:
   (54.7 bits)
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (6,4) and color orange and mask xxx.|..x.|xx.x|x.xx|x.x.|...x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color pink and layers
  _0: a rectangle with size (6,4) and color orange and mask xxx.|..x.|xx.x|x.xx|x.x.|...x at (0,0)
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (3,6) and color orange and mask xx....|.x.xxx|x.xx.x at (0,0)
diff: 
delta:
   (47.0 bits)
data: a background with size (3,6) and color red and layers
  _0: a rectangle with size (3,6) and color orange and mask xx....|.x.xxx|x.xx.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (3,6) and color orange and mask xx....|.x.xxx|x.xx.x at (0,0)
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color orange and mask .xx.|.x.x|xxx.|x.x. at (0,0)
diff: 
delta:
correct output grid

TEST b1948b0a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-124] Checking task b230c067.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10811.1 = 10820.0
DL output with Mo: L = 9.0 + 10811.1 = 10820.0
DL input+output M: L = 17.9 + 21622.1 = 21640.0

# learning a model for train pairs
2.000	
1.742	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.482	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.224	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.964	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.744	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.525	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.489	OUT DEF: ^.size=^.size
0.465	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.440	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.416	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.395	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.374	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.354	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.335	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.315	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.297	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.289	OUT DEF: ^.layer_0.shape.color=blue
0.280	OUT DEF: ^.layer_01.shape.color=blue
0.272	OUT DEF: ^.layer_011.shape.color=red
0.263	IN  DEF: ^.layer_0.shape.color=cyan
0.255	IN  DEF: ^.layer_01.shape.color=cyan
0.252	OUT DEF: ^.color=black
0.249	IN  DEF: ^.color=black
0.247	IN  DEF: ^.size=(?,?)
0.231	IN  DEF: ^.size.i=10
0.215	IN  DEF: ^.size.j=10
0.213	IN  DEF: ^.layer_0.pos=(?,?)
0.204	IN  DEF: ^.layer_0.pos.i=2
0.196	IN  DEF: ^.layer_0.pos.j=1
0.187	IN  DEF: ^.layer_011.shape.color=cyan
0.185	IN  DEF: ^.layer_011.pos=(?,?)
0.177	IN  DEF: ^.layer_011.pos.i=1
0.175	IN  DEF: ^.layer_011.shape.size=(?,?)
0.165	IN  DEF: ^.layer_011.shape.size.i=3
0.163	IN  DEF: ^.layer_0.shape.size=(?,?)
0.153	IN  DEF: ^.layer_0.shape.size.i=3
0.151	IN  DEF: ^.layer_01.pos=(?,?)
0.149	IN  DEF: ^.layer_01.shape.size=(?,?)
0.139	IN  DEF: ^.layer_01.shape.size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color blue and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color red and mask ^.layer_011.shape.mask at ^.layer_011.pos
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,?) and color cyan and mask ? at (2,1)
  _01: a rectangle with size (3,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (3,?) and color cyan and mask ? at (1,?)

DL input  with Mi: L = 123.1 + 1313.6 = 1436.7
DL output with Mo: L = 67.7 + 0.0 = 67.7
DL input+output M: L = 190.8 + 1313.6 = 1504.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color cyan and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (1,7)
diff: 
delta:
   (46.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color blue and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color red and mask Border at (1,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color cyan and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (1,7)
diff: 
delta:
correct output grid

TRAIN b230c067.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color cyan and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
   (85.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color red and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color cyan and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
correct output grid

TRAIN b230c067.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the grid could not be parsed with the given template

TEST b230c067.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 7.7 sec (7.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-123] Checking task b27ca6d3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6081.0 = 6090.0
DL output with Mo: L = 9.0 + 11984.0 = 11993.0
DL input+output M: L = 17.9 + 18065.0 = 18083.0

# learning a model for train pairs
2.000	
1.690	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.604	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.561	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.525	OUT DEF: ^.size=^.size
1.493	OUT OBJECT at ^.layer_010: ^.layer_0.shape at ?
1.472	OUT DEF: ^.layer_010=^.layer_0
1.460	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.429	OUT OBJECT at ^.layer_0101: ^.layer_01.shape at ?
1.400	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_0
  _0101: ^.layer_01.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 5703.8 = 5751.8
DL output with Mo: L = 69.7 + 5399.0 = 5468.7
DL input+output M: L = 117.7 + 11102.9 = 11220.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (2,1) and color red and mask Full at (2,7)
diff: 
delta: (4,13)=2  (8,17)=2  (11,4)=2  (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
   (223.8 bits)
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask Border at (1,6)
  _010: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _0101: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,17)
diff: 
delta: (11,4)=2  (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
   (191.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
diff: 
delta: (4,13)=2  (8,17)=2  (11,4)=2  (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (2,1) and color red and mask Full at (2,7)
diff: 
delta: (4,13)=2  (8,17)=2  (11,4)=2  (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
! 23 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,8)
diff: 
delta: (1,0)=2  (3,8)=2  (4,2)=2  (4,10)=2  (4,13)=2  (4,15)=2  (5,15)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
   (346.5 bits)
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (7,4) and color green and mask x.x.|x.x.|xxx.|..xx|..x.|..x.|..xx at (0,12)
  _010: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _0101: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,4) and color green and mask Full at (0,7)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,15)
diff: 
delta: (1,0)=2  (3,8)=2  (4,2)=2  (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
   (348.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,13)
diff: 
delta: (1,0)=2  (3,8)=2  (4,2)=2  (4,10)=2  (4,13)=2  (4,15)=2  (5,15)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,8)
diff: 
delta: (1,0)=2  (3,8)=2  (4,2)=2  (4,10)=2  (4,13)=2  (4,15)=2  (5,15)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
! 37 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,2)
diff: 
delta: (0,15)=2  (1,4)=2  (3,13)=2  (3,15)=2  (5,12)=2  (8,14)=2  (9,6)=2  (9,14)=2  (10,0)=2  (10,7)=2  (11,9)=2  (11,11)=2  (12,2)=2  (12,4)=2  (12,9)=2  (13,1)=2  (13,6)=2  (13,7)=2  (13,11)=2  (13,13)=2  (14,3)=2  (14,15)=2  (15,7)=2  (16,8)=2 
! 78 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (7,2)
  _01: a rectangle with size (1,2) and color red and mask Full at (4,8)
diff: 
delta: (0,15)=2  (1,4)=2  (3,13)=2  (3,15)=2  (5,12)=2  (8,14)=2  (9,6)=2  (9,14)=2  (10,0)=2  (10,7)=2  (11,9)=2  (11,11)=2  (12,2)=2  (12,4)=2  (12,9)=2  (13,1)=2  (13,6)=2  (13,7)=2  (13,11)=2  (13,13)=2  (14,3)=2  (14,15)=2  (15,7)=2  (16,8)=2 
! 78 wrong pixels (generated / expected)

TEST b27ca6d3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.7 sec (25.7 sec/task)
bits-train-error = 5399.0 bits (5399.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-122] Checking task b2862040.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 32465.3 = 32474.2
DL output with Mo: L = 9.0 + 32465.3 = 32474.2
DL input+output M: L = 17.9 + 64930.5 = 64948.5

# learning a model for train pairs
2.000	
1.376	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.857	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.666	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.640	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.615	OUT DEF: ^.size=^.size
0.590	OUT DEF: ^.layer_011.shape.color=^.color
0.577	OUT DEF: ^.layer_0=^.layer_0
0.567	IN  DEF: ^.color=blue
0.561	IN  DEF: ^.layer_0.shape.color=brown
0.558	OUT DEF: ^.layer_01.shape.mask=Full
0.555	OUT DEF: ^.layer_011.shape.mask=Full
0.554	OUT DEF: ^.layer_01.pos=(?,?)
0.552	IN  DEF: ^.size=(?,?)
0.551	OUT DEF: ^.layer_01.shape.size=(?,?)
0.549	OUT DEF: ^.layer_011.pos=(?,?)
0.548	OUT DEF: ^.layer_011.shape.size=(?,?)
0.546	IN  DEF: ^.layer_0.pos=(?,?)
0.540	IN  DEF: ^.layer_0.pos.j=(0)
0.534	IN  DEF: ^.layer_0.pos.i=(0)
0.533	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ^.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color brown and mask ? at ((0),(0))

DL input  with Mi: L = 49.8 + 11120.7 = 11170.5
DL output with Mo: L = 66.5 + 6065.0 = 6131.5
DL input+output M: L = 116.3 + 17185.7 = 17302.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,11) and color blue and layers
  _0: a rectangle with size (9,11) and color brown and mask xxxxxxxxxxx|xxxxxxxxxxx|x...xxx.xxx|x...xxx.xxx|x...xx....x|x...xxx.xxx|xxxxxxx.xxx|xxxxxxxxxxx|xxxxxxxxxxx at (0,0)
diff: 
delta: (3,2)=9# (4,2)=9#
   (178.8 bits)
data: a background with size (9,11) and color cyan and layers
  _0: a rectangle with size (9,11) and color brown and mask xxxxxxxxxxx|xxxxxxxxxxx|x...xxx.xxx|x...xxx.xxx|x...xx....x|x...xxx.xxx|xxxxxxx.xxx|xxxxxxxxxxx|xxxxxxxxxxx at (0,0)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,2)
  _011: a rectangle with size (5,4) and color blue and mask Full at (2,6)
diff: 
delta:
   (51.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color blue and layers
  _0: a rectangle with size (9,11) and color brown and mask xxxxxxxxxxx|xxxxxxxxxxx|x...xxx.xxx|x...xxx.xxx|x...xx....x|x...xxx.xxx|xxxxxxx.xxx|xxxxxxxxxxx|xxxxxxxxxxx at (0,0)
diff: 
delta: (3,2)=9# (4,2)=9#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (2,11) and color brown and mask Full at (0,0)
diff:   ^.color
delta: (2,1)=1  (2,2)=1  (2,3)=1  (2,7)=1  (3,1)=1  (3,3)=1  (3,7)=1  (4,1)=1  (4,3)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,7)=1  (6,7)=1 
! 77 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (4,3) and color brown and mask Full at (0,4)
diff:   ^.color  ^.layer_0.pos.j
delta: (2,1)=1  (2,2)=1  (2,3)=1  (2,7)=1  (3,1)=1  (3,3)=1  (3,7)=1  (4,1)=1  (4,3)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,1)=1  (5,2)=1  (5,3)=1  (5,7)=1  (6,7)=1 
! 87 wrong pixels (generated / expected)

TRAIN b2862040.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color blue and layers
  _0: a rectangle with size (12,11) and color brown and mask xxxxxxxxxxx|x.....xx.xx|x.....xx.x.|x.....xx...|xxxxxxxxxxx|xxxxxxxxxxx|xxx.xxxxxxx|xx.....xxxx|xxx...xxxxx|xxx...xx...|xxxxxxxx...|..xxxxxx... at (0,0)
diff: 
delta: (2,2)=9# (2,3)=9# (2,4)=9# (8,4)=9# (10,9)=9#
   (274.2 bits)
data: a background with size (12,11) and color cyan and layers
  _0: a rectangle with size (12,11) and color brown and mask xxxxxxxxxxx|x.....xx.xx|x.....xx.x.|x.....xx...|xxxxxxxxxxx|xxxxxxxxxxx|xxx.xxxxxxx|xx.....xxxx|xxx...xxxxx|xxx...xx...|xxxxxxxx...|..xxxxxx... at (0,0)
  _01: a rectangle with size (1,3) and color brown and mask Full at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (1,8)
diff: 
delta: (8,4)=9# (10,9)=9# (11,0)=1  (11,1)=1 
   (132.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color blue and layers
  _0: a rectangle with size (12,11) and color brown and mask xxxxxxxxxxx|x.....xx.xx|x.....xx.x.|x.....xx...|xxxxxxxxxxx|xxxxxxxxxxx|xxx.xxxxxxx|xx.....xxxx|xxx...xxxxx|xxx...xx...|xxxxxxxx...|..xxxxxx... at (0,0)
diff: 
delta: (2,2)=9# (2,3)=9# (2,4)=9# (8,4)=9# (10,9)=9#
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color brown and layers
  _0: a rectangle with size (1,11) and color brown and mask Full at (0,0)
diff:   ^.color
delta: (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,8)=1  (2,1)=1  (2,5)=1  (2,8)=1  (2,10)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,10)=1  (6,3)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (8,3)=1  (8,5)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,8)=1  (9,9)=1  (9,10)=1  (10,8)=1  (10,10)=1  (11,0)=1  (11,1)=1  (11,8)=1  (11,9)=1  (11,10)=1 
! 121 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,11) and color brown and layers
  _0: a rectangle with size (12,1) and color brown and mask Full at (0,7)
diff:   ^.color  ^.layer_0.pos.j
delta: (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,8)=1  (2,1)=1  (2,5)=1  (2,8)=1  (2,10)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,10)=1  (6,3)=1  (7,2)=1  (7,3)=1  (7,4)=1  (7,5)=1  (7,6)=1  (8,3)=1  (8,5)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,8)=1  (9,9)=1  (9,10)=1  (10,8)=1  (10,10)=1  (11,0)=1  (11,1)=1  (11,8)=1  (11,9)=1  (11,10)=1 
! 120 wrong pixels (generated / expected)

TRAIN b2862040.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color blue and layers
  _0: a rectangle with size (12,13) and color brown and mask xxxxx.xxxxxxx|xxxxxxxx.xxxx|xx.xxxx....xx|x....xxx.xxxx|x....xxx.xxxx|x....xxx...xx|xxxx.xxxxxxxx|xxxx.xxxxxxxx|x.xxxxx...xxx|...xxxxxx.xxx|..xxxx.x..xxx|..xxxx...xxxx at (0,0)
diff: 
delta: (4,2)=9# (4,3)=9# (10,0)=9#
   (260.1 bits)
data: a background with size (12,13) and color blue and layers
  _0: a rectangle with size (12,13) and color brown and mask xxxxx.xxxxxxx|xxxxxxxx.xxxx|xx.xxxx....xx|x....xxx.xxxx|x....xxx.xxxx|x....xxx...xx|xxxx.xxxxxxxx|xxxx.xxxxxxxx|x.xxxxx...xxx|...xxxxxx.xxx|..xxxx.x..xxx|..xxxx...xxxx at (0,0)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (5,8)
diff: 
delta: (4,2)=9# (4,3)=9# (10,0)=9#
   (116.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color blue and layers
  _0: a rectangle with size (12,13) and color brown and mask xxxxx.xxxxxxx|xxxxxxxx.xxxx|xx.xxxx....xx|x....xxx.xxxx|x....xxx.xxxx|x....xxx...xx|xxxx.xxxxxxxx|xxxx.xxxxxxxx|x.xxxxx...xxx|...xxxxxx.xxx|..xxxx.x..xxx|..xxxx...xxxx at (0,0)
diff: 
delta: (4,2)=9# (4,3)=9# (10,0)=9#
! 44 wrong pixels (generated / expected)

TRAIN b2862040.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,15) and color blue and layers
  _0: a rectangle with size (14,15) and color brown and mask xxxxxxxxxxxxxxx|x......xxxx....|xx.....xxxx.xx.|xx.....xxx...x.|xxxx...xxxxxxx.|xxxx.xxx...xxxx|xxxxxxxx....xxx|xxxxxxxx...xxxx|....xxxxxxxxxxx|....xxx.x.xxxxx|....xxx.....xxx|.xxxxxxxx.xxxxx|xxxxx.xxxxxxxxx|xxxx..xxxxxx..x at (0,0)
diff: 
delta: (2,3)=9# (2,4)=9# (2,5)=9# (3,5)=9# (6,9)=9# (9,1)=9# (9,2)=9#
   (399.0 bits)
data: a background with size (14,15) and color cyan and layers
  _0: a rectangle with size (14,15) and color brown and mask xxxxxxxxxxxxxxx|x......xxxx....|xx.....xxxx.xx.|xx.....xxx...x.|xxxx...xxxxxxx.|xxxx.xxx...xxxx|xxxxxxxx....xxx|xxxxxxxx...xxxx|....xxxxxxxxxxx|....xxx.x.xxxxx|....xxx.....xxx|.xxxxxxxx.xxxxx|xxxxx.xxxxxxxxx|xxxx..xxxxxx..x at (0,0)
  _01: a rectangle with size (4,5) and color blue and mask Full at (1,10)
  _011: a rectangle with size (3,5) and color blue and mask Full at (9,7)
diff: 
delta: (2,3)=9# (2,4)=9# (2,5)=9# (3,5)=9# (6,9)=9# (9,1)=9# (9,2)=9# (12,5)=1  (13,4)=1  (13,5)=1  (13,12)=1  (13,13)=1 
   (306.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color blue and layers
  _0: a rectangle with size (14,15) and color brown and mask xxxxxxxxxxxxxxx|x......xxxx....|xx.....xxxx.xx.|xx.....xxx...x.|xxxx...xxxxxxx.|xxxx.xxx...xxxx|xxxxxxxx....xxx|xxxxxxxx...xxxx|....xxxxxxxxxxx|....xxx.x.xxxxx|....xxx.....xxx|.xxxxxxxx.xxxxx|xxxxx.xxxxxxxxx|xxxx..xxxxxx..x at (0,0)
diff: 
delta: (2,3)=9# (2,4)=9# (2,5)=9# (3,5)=9# (6,9)=9# (9,1)=9# (9,2)=9#
! 67 wrong pixels (generated / expected)

TRAIN b2862040.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color blue and layers
  _0: a rectangle with size (16,15) and color brown and mask ..xxxxxxxxxxxxx|xxxxxxxxxxx.xxx|xxx.....xxx.xxx|xxxx....xxx.xxx|xxxx....xxx.xxx|xxxx....xxx.xx.|xxxxxxx.xxx....|....xxx.xxx.xx.|.xx.xxxxxxxxxx.|.xx.xxxxxxxxx..|..xxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxx......xxx..x|xxx......xxxx.x|xxx......xxxx.x|xxx.......xxx.x at (0,0)
diff: 
delta: (3,5)=9# (3,6)=9# (4,5)=9# (4,6)=9# (13,4)=9# (13,5)=9# (13,6)=9# (13,7)=9# (14,4)=9# (14,5)=9# (14,6)=9# (14,7)=9#
! 76 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,15) and color brown and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (3,0)
diff:   ^.color  ^.layer_0.pos.i
delta: (0,0)=1  (0,1)=1  (1,11)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (3,4)=1  (3,7)=1  (3,11)=1  (4,4)=1  (4,7)=1  (4,11)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,11)=1  (5,14)=1  (6,7)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,7)=1  (7,11)=1  (7,14)=1  (8,0)=1  (8,3)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,13)=1  (9,14)=1  (10,0)=1  (10,1)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (12,7)=1  (12,8)=1  (12,12)=1  (12,13)=1  (13,3)=1  (13,8)=1  (13,13)=1  (14,3)=1  (14,8)=1  (14,13)=1  (15,3)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,13)=1 
! 224 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,15) and color brown and layers
  _0: a rectangle with size (2,9) and color brown and mask Full at (0,2)
diff:   ^.color  ^.layer_0.pos.j
delta: (0,0)=1  (0,1)=1  (1,11)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (3,4)=1  (3,7)=1  (3,11)=1  (4,4)=1  (4,7)=1  (4,11)=1  (5,4)=1  (5,5)=1  (5,6)=1  (5,7)=1  (5,11)=1  (5,14)=1  (6,7)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,3)=1  (7,7)=1  (7,11)=1  (7,14)=1  (8,0)=1  (8,3)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,13)=1  (9,14)=1  (10,0)=1  (10,1)=1  (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1  (12,7)=1  (12,8)=1  (12,12)=1  (12,13)=1  (13,3)=1  (13,8)=1  (13,13)=1  (14,3)=1  (14,8)=1  (14,13)=1  (15,3)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,13)=1 
! 222 wrong pixels (generated / expected)

TEST b2862040.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.0 sec (6.0 sec/task)
bits-train-error = 6065.0 bits (6065.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-121] Checking task b527c5c6.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 64138.1 = 64147.0
DL output with Mo: L = 9.0 + 107314.0 = 107323.0
DL input+output M: L = 17.9 + 171452.1 = 171470.0

# learning a model for train pairs
2.000	
1.458	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.005	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.634	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.331	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.259	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.234	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.226	OUT DEF: ^.size=^.size
0.223	IN  OBJECT at ^.layer_00: a point with color ? at ?
0.221	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.220	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.218	OUT DEF: ^.layer_011.shape.color=^.layer_00.shape.color
0.216	OUT DEF: ^.layer_0111.shape.color=^.layer_00.shape.color
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask ? at ?
  _01: a rectangle with size ? and color ^.layer_01.shape.color and mask ? at ?
  _011: a rectangle with size ? and color ^.layer_00.shape.color and mask ? at ?
  _0111: a rectangle with size ? and color ^.layer_00.shape.color and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a point with color ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 60.1 + 5308.3 = 5368.4
DL output with Mo: L = 84.9 + 14142.9 = 14227.8
DL input+output M: L = 145.0 + 19451.1 = 19596.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (6,2) and color green and mask Full at (2,3)
  _01: a rectangle with size (2,4) and color green and mask Full at (4,6)
diff: 
delta: (5,8)=2 
   (117.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,5) and color green and mask ...xx|xxxxx|....x|xxxxx|...xx|...xx at (2,0)
  _01: a rectangle with size (6,4) and color green and mask xxxx|xx.x|.x.x|.x.x|.x.x|.x.x at (4,6)
  _011: a rectangle with size (5,1) and color red and mask Full at (5,8)
  _0111: a rectangle with size (1,4) and color red and mask Full at (4,0)
diff: 
delta:
   (160.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (6,2) and color green and mask Full at (2,3)
  _01: a rectangle with size (2,4) and color green and mask Full at (4,6)
diff: 
delta: (5,8)=2 
! 45 wrong pixels (generated / expected)

TRAIN b527c5c6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,14)
  _0: a rectangle with size (2,18) and color green and mask Full at (4,1)
  _01: a rectangle with size (10,3) and color green and mask Full at (10,7)
diff: 
delta: (15,9)=2 
   (136.1 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (10,13) and color green and mask xxx..........|xxx..........|xxx..........|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xx...........|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxx..........|xxx.......... at (10,7)
  _01: a rectangle with size (6,18) and color green and mask ............x.x...|............x.x...|............x.x...|............x.x...|xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx at (0,1)
  _011: a rectangle with size (1,11) and color red and mask Full at (15,9)
  _0111: a rectangle with size (5,1) and color red and mask Full at (0,14)
diff: 
delta:
   (363.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,14)
  _0: a rectangle with size (2,18) and color green and mask Full at (4,1)
  _01: a rectangle with size (10,3) and color green and mask Full at (10,7)
diff: 
delta: (15,9)=2 
! 132 wrong pixels (generated / expected)

TRAIN b527c5c6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (3,5)
  _0: a rectangle with size (11,5) and color green and mask Full at (9,10)
  _01: a rectangle with size (3,14) and color green and mask Full at (3,0)
diff: 
delta: (14,10)=2 
   (138.3 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,15) and color green and mask ..........xxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|...........xxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|..........xxxxx at (9,0)
  _01: a rectangle with size (6,14) and color green and mask ...xx.xx......|...xx.xx......|...xx.xx......|xxxxx.xxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (0,0)
  _011: a rectangle with size (1,11) and color red and mask Full at (14,0)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,5)
diff: 
delta:
   (374.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (3,5)
  _0: a rectangle with size (11,5) and color green and mask Full at (9,10)
  _01: a rectangle with size (3,14) and color green and mask Full at (3,0)
diff: 
delta: (14,10)=2 
! 206 wrong pixels (generated / expected)

TRAIN b527c5c6.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,4)
  _0: a rectangle with size (5,15) and color green and mask Full at (0,0)
  _01: a rectangle with size (11,4) and color green and mask Full at (6,12)
diff: 
delta: (12,15)=2 
   (139.3 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,15) and color green and mask xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxx.xxxxxxxxxx|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx......|xxxx.xxxx...... at (0,0)
  _01: a rectangle with size (11,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxx.... at (6,12)
  _011: a rectangle with size (16,1) and color red and mask Full at (4,4)
  _0111: a rectangle with size (1,5) and color red and mask Full at (12,15)
diff: 
delta:
   (516.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,4)
  _0: a rectangle with size (5,15) and color green and mask Full at (0,0)
  _01: a rectangle with size (11,4) and color green and mask Full at (6,12)
diff: 
delta: (12,15)=2 
! 278 wrong pixels (generated / expected)

TRAIN b527c5c6.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (5,4)
  _0: a rectangle with size (6,13) and color green and mask Full at (14,7)
  _01: a rectangle with size (11,3) and color green and mask Full at (0,4)
diff: 
delta: (14,13)=2 
! 289 wrong pixels (generated / expected)

TEST b527c5c6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.1 sec (26.1 sec/task)
bits-train-error = 14142.9 bits (14142.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-120] Checking task b548a754.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11311.2 = 11320.2
DL output with Mo: L = 9.0 + 23560.3 = 23569.3
DL input+output M: L = 17.9 + 34871.5 = 34889.5

# learning a model for train pairs
2.000	
1.431	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.916	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.545	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.391	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.365	OUT DEF: ^.size=^.size
0.351	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.337	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.324	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.317	IN  DEF: ^.layer_0.shape.mask=Full
0.311	IN  DEF: ^.layer_01.shape.mask=Full
0.299	IN  DEF: ^.layer_011.shape.color=cyan
0.293	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.287	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.283	IN  DEF: ^.color=black
0.280	IN  DEF: ^.layer_0.pos=(?,?)
0.267	IN  DEF: ^.layer_0.pos.i=2
0.264	IN  DEF: ^.size=(?,?)
0.261	IN  DEF: ^.layer_0.shape.size=(?,?)
0.258	IN  DEF: ^.layer_01.pos=(?,?)
0.245	IN  DEF: ^.layer_01.pos.i=1
0.242	IN  DEF: ^.layer_01.shape.size=(?,?)
0.239	IN  DEF: ^.layer_011.pos=(?,?)
0.236	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.233	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.231	OUT DEF: ^.color=black
0.230	OUT DEF: ^.layer_0.shape.size=(?,?)
0.228	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (2,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (1,?)
  _011: a point with color cyan at (?,?)

DL input  with Mi: L = 91.3 + 2067.0 = 2158.2
DL output with Mo: L = 52.3 + 834.5 = 886.8
DL input+output M: L = 143.6 + 2901.4 = 3045.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _011: a point with color cyan at (8,3)
diff: 
delta:
   (68.2 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (8,4) and color red and mask Full at (1,1)
diff: 
delta:
   (26.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _011: a point with color cyan at (8,3)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _011: a point with color cyan at (8,3)
diff:   ^.layer_01.pos.i  ^.layer_0.shape.mask  ^.layer_0.pos.i
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (8,3)
  _01: a rectangle with size (4,4) and color red and mask Border at (1,1)
  _011: a point with color blue at (2,2)
diff:   ^.layer_011.shape.color  ^.layer_01.shape.mask  ^.layer_0.pos.i
delta: (2,3)=1  (3,2)=1  (3,3)=1 
! 31 wrong pixels (generated / expected)

TRAIN b548a754.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,5) and color green and mask Full at (1,1)
  _011: a point with color cyan at (2,10)
diff: 
delta:
   (70.0 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,10) and color green and mask Full at (1,1)
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,5) and color green and mask Full at (1,1)
  _011: a point with color cyan at (2,10)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask Border at (1,1)
  _01: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _011: a point with color cyan at (2,10)
diff:   ^.layer_01.pos.i  ^.layer_0.shape.mask  ^.layer_0.pos.i
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (4,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (4,5) and color green and mask Full at (1,1)
  _011: a point with color cyan at (2,10)
diff:   ^.layer_0.pos.i
delta: (2,2)=2  (2,3)=2  (2,4)=2  (3,2)=2  (3,3)=2  (3,4)=2 
! 37 wrong pixels (generated / expected)

TRAIN b548a754.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,3) and color blue and mask Full at (1,2)
  _011: a point with color cyan at (5,10)
diff: 
delta:
   (68.5 bits)
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,7) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,9) and color blue and mask Full at (1,2)
diff: 
delta:
   (29.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,3) and color blue and mask Full at (1,2)
  _011: a point with color cyan at (5,10)
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (5,3) and color blue and mask Border at (1,2)
  _01: a rectangle with size (3,1) and color pink and mask Full at (2,3)
  _011: a point with color cyan at (5,10)
diff:   ^.layer_01.pos.i  ^.layer_0.shape.mask  ^.layer_0.pos.i
delta:
! 39 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (5,10)
  _01: a rectangle with size (5,3) and color blue and mask Border at (1,2)
  _011: a point with color pink at (2,3)
diff:   ^.layer_011.shape.color  ^.layer_01.shape.mask  ^.layer_0.pos.i
delta: (3,3)=6  (4,3)=6 
! 45 wrong pixels (generated / expected)

TRAIN b548a754.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask Full at (10,4)
  _01: a rectangle with size (4,5) and color pink and mask Full at (9,3)
  _011: a point with color cyan at (1,4)
diff:   ^.layer_01.pos.i  ^.layer_0.pos.i
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask Border at (9,3)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (10,4)
  _011: a point with color cyan at (1,4)
diff:   ^.layer_01.pos.i  ^.layer_0.shape.mask  ^.layer_0.pos.i
delta:
! 55 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,1) and color pink and mask Full at (9,3)
  _01: a rectangle with size (4,5) and color pink and mask Full at (9,3)
  _011: a point with color cyan at (1,4)
diff:   ^.layer_01.pos.i  ^.layer_0.pos.i
delta: (10,4)=4  (10,5)=4  (10,6)=4  (11,4)=4  (11,5)=4  (11,6)=4 
! 58 wrong pixels (generated / expected)

TEST b548a754.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 834.5 bits (834.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-119] Checking task b60334d2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1790.0 = 1799.0
DL output with Mo: L = 9.0 + 11008.1 = 11017.1
DL input+output M: L = 17.9 + 12798.2 = 12816.1

# learning a model for train pairs
2.000	
1.928	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.855	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.794	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.753	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.708	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.657	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.618	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.602	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.568	OUT DEF: ^.size=^.size
1.534	OUT DEF: ^.layer_011.shape.mask=Odd Checkboard
1.510	OUT OBJECT at ^.layer_0110: a rectangle with size ? and color ? and mask ? at ?
1.489	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.468	OUT OBJECT at ^.layer_01101: ^.layer_0.shape at ?
1.453	OUT OBJECT at ^.layer_011011: ^.layer_0.shape at ?
1.437	OUT OBJECT at ^.layer_011111: ^.layer_0.shape at ?
1.436	OUT OBJECT at ^.layer_0111111: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _0110: a rectangle with size ? and color ? and mask ? at ?
  _01101: ^.layer_0.shape at ?
  _011011: ^.layer_0.shape at ?
  _011: a rectangle with size ? and color ? and mask Odd Checkboard at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: ^.layer_0.shape at ?
  _0111111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?

DL input  with Mi: L = 46.8 + 1505.0 = 1551.8
DL output with Mo: L = 169.8 + 6151.6 = 6321.4
DL input+output M: L = 216.6 + 7656.6 = 7873.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (2,3)
  _01: a point with color grey at (5,6)
  _011: a point with color grey at (7,2)
diff: 
delta:
   (65.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (1,2)
  _0: a rectangle with size (3,3) and color blue and mask xx.|x.x|.x. at (1,2)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (4,5)
  _0110: a rectangle with size (1,3) and color grey and mask Full at (3,2)
  _01101: a point with color grey at (1,4)
  _011011: a point with color grey at (4,5)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (6,1)
  _0111: a rectangle with size (1,7) and color grey and mask Full at (6,1)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,7)
  _011111: a point with color grey at (8,1)
  _0111111: a point with color grey at (8,3)
diff: 
delta: (6,4)=0 
   (252.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (2,3)
  _01: a point with color grey at (5,6)
  _011: a point with color grey at (7,2)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN b60334d2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,2)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (5,2)
diff: 
delta: (7,6)=5#
   (85.5 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (3,3) and color blue and mask xx.|x.x|.x. at (0,1)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (0,6)
  _0110: a rectangle with size (1,8) and color grey and mask Full at (2,1)
  _01101: a point with color grey at (0,3)
  _011011: a point with color grey at (0,6)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (4,1)
  _0111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (6,5)
  _01111: a rectangle with size (1,7) and color grey and mask Full at (6,1)
  _011111: a point with color grey at (0,8)
  _0111111: a point with color grey at (4,1)
diff: 
delta: (2,4)=0  (2,5)=0  (4,3)=5# (6,4)=0  (8,5)=5# (8,7)=5#
   (362.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,2)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (5,2)
diff: 
delta: (7,6)=5#
! 34 wrong pixels (generated / expected)

TRAIN b60334d2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (3,4)
  _011: a point with color grey at (5,7)
diff: 
delta: (7,2)=5#
! 32 wrong pixels (generated / expected)

TEST b60334d2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.9 sec (26.9 sec/task)
bits-train-error = 6151.6 bits (6151.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-118] Checking task b6afb2da.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16190.4 = 16199.4
DL output with Mo: L = 9.0 + 17641.7 = 17650.6
DL input+output M: L = 17.9 + 33832.1 = 33850.0

# learning a model for train pairs
2.000	
1.545	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.109	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.918	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.730	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.575	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.464	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 1712.2 = 1760.2
DL output with Mo: L = 85.3 + 6194.9 = 6280.3
DL input+output M: L = 133.3 + 7907.1 = 8040.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask Full at (5,6)
  _01: a rectangle with size (4,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (84.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .xx.|x..x|x..x|.xx. at (2,1)
  _01: a rectangle with size (3,2) and color red and mask Full at (6,7)
  _011: a rectangle with size (5,4) and color yellow and mask Full at (5,6)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,2)
diff: 
delta: (2,1)=1  (2,4)=1  (5,1)=1  (5,4)=1  (5,6)=1  (5,9)=1  (9,6)=1  (9,9)=1 
   (314.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask Full at (5,6)
  _01: a rectangle with size (4,4) and color grey and mask Full at (2,1)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TRAIN b6afb2da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Full at (6,4)
diff: 
delta:
   (86.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,6) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,4) and color red and mask Full at (7,5)
  _0111: a rectangle with size (4,6) and color yellow and mask Full at (6,4)
diff: 
delta: (0,0)=1  (0,5)=1  (4,0)=1  (4,5)=1  (6,4)=1  (6,9)=1  (9,4)=1  (9,9)=1 
   (304.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Full at (6,4)
diff: 
delta:
! 54 wrong pixels (generated / expected)

TRAIN b6afb2da.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color grey and mask Full at (0,1)
  _01: a rectangle with size (3,6) and color grey and mask Full at (7,4)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TEST b6afb2da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.8 sec (26.8 sec/task)
bits-train-error = 6194.9 bits (6194.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-117] Checking task b7249182.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1918.8 = 1927.7
DL output with Mo: L = 9.0 + 13782.9 = 13791.9
DL input+output M: L = 17.9 + 15701.7 = 15719.6

# learning a model for train pairs
2.000	
1.672	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.332	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.264	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.183	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.138	OUT DEF: ^.size=^.size
1.115	IN  DEF: ^.color=black
1.097	IN  DEF: ^.size=(?,?)
1.078	IN  DEF: ^.layer_0.pos=(?,?)
1.060	IN  DEF: ^.layer_01.pos=(?,?)
1.050	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.040	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.037	OUT DEF: ^.color=black
1.034	OUT DEF: ^.layer_0.pos=(?,?)
1.032	OUT DEF: ^.layer_0.shape.size=(?,?)
1.017	OUT DEF: ^.layer_0.shape.size.i=5
1.014	OUT DEF: ^.layer_01.pos=(?,?)
1.012	OUT DEF: ^.layer_01.shape.size=(?,?)
0.997	OUT DEF: ^.layer_01.shape.size.i=5

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (5,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (5,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 46.8 + 1442.3 = 1489.1
DL output with Mo: L = 69.6 + 3022.9 = 3092.5
DL input+output M: L = 116.3 + 4465.2 = 4581.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color cyan at (10,4)
diff: 
delta:
   (47.7 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|..x..|..x..|xxxxx|x...x at (1,2)
  _01: a rectangle with size (5,5) and color cyan and mask x...x|xxxxx|..x..|..x..|..x.. at (6,2)
diff: 
delta:
   (89.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color cyan at (10,4)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (10,4)
  _01: a point with color red at (1,4)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN b7249182.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,13) and color black and layers
  _0: a point with color green at (6,1)
  _01: a point with color blue at (6,12)
diff: 
delta:
   (47.3 bits)
data: a background with size (10,13) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ....xx|....x.|xxxxx.|....x.|....xx at (4,1)
  _01: a rectangle with size (5,6) and color blue and mask xx....|.x....|.xxxxx|.x....|xx.... at (4,7)
diff: 
delta:
   (100.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,13) and color black and layers
  _0: a point with color green at (6,1)
  _01: a point with color blue at (6,12)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,13) and color black and layers
  _0: a point with color blue at (6,12)
  _01: a point with color green at (6,1)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN b7249182.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,18) and color black and layers
  _0: a point with color grey at (5,3)
  _01: a point with color cyan at (5,16)
diff: 
delta:
   (49.2 bits)
data: a background with size (10,18) and color black and layers
  _0: a rectangle with size (5,7) and color grey and mask .....xx|.....x.|xxxxxx.|.....x.|.....xx at (3,3)
  _01: a rectangle with size (5,7) and color cyan and mask xx.....|.x.....|.xxxxxx|.x.....|xx..... at (3,10)
diff: 
delta:
   (112.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,18) and color black and layers
  _0: a point with color grey at (5,3)
  _01: a point with color cyan at (5,16)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,18) and color black and layers
  _0: a point with color cyan at (5,16)
  _01: a point with color grey at (5,3)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN b7249182.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  _0: a point with color orange at (1,3)
  _01: a point with color pink at (16,3)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,9) and color black and layers
  _0: a point with color pink at (16,3)
  _01: a point with color orange at (1,3)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TEST b7249182.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 3022.9 bits (3022.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-116] Checking task b775ac94.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11996.9 = 12005.9
DL output with Mo: L = 9.0 + 29273.2 = 29282.1
DL input+output M: L = 17.9 + 41270.1 = 41288.0

# learning a model for train pairs
2.000	
1.715	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.562	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.446	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.330	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.218	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.115	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.081	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 7295.8 = 7343.8
DL output with Mo: L = 93.7 + 13642.9 = 13736.7
DL input+output M: L = 141.7 + 20938.8 = 21080.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
  _01: a rectangle with size (3,3) and color orange and mask .xx|.x.|x.x at (10,14)
diff: 
delta: (9,16)=2  (9,17)=1  (10,17)=4  (11,6)=3  (11,7)=4  (12,7)=2  (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
   (393.5 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
  _01: a rectangle with size (4,4) and color green and mask ..x.|...x|xx.x|.xxx at (8,3)
  _011: a rectangle with size (4,4) and color yellow and mask .x..|x...|x.xx|xxx. at (8,7)
  _0111: a rectangle with size (4,4) and color red and mask xxx.|x.xx|x...|.x.. at (12,7)
  _01111: a rectangle with size (3,3) and color red and mask x.x|.x.|.xx at (7,14)
diff: 
delta: (7,17)=1  (7,19)=1  (8,18)=1  (9,17)=1  (9,18)=1  (10,15)=7# (10,16)=7# (10,17)=4  (10,18)=4  (11,15)=7# (11,18)=4  (12,14)=7# (12,16)=7# (12,17)=4  (12,19)=4  (19,12)=8  (20,11)=8  (20,12)=8  (21,13)=8  (22,13)=2  (22,14)=3  (23,11)=2  (23,12)=2  (23,15)=3  (23,16)=3  (24,12)=2  (24,15)=3 
   (843.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
  _01: a rectangle with size (3,3) and color orange and mask .xx|.x.|x.x at (10,14)
diff: 
delta: (9,16)=2  (9,17)=1  (10,17)=4  (11,6)=3  (11,7)=4  (12,7)=2  (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|.x.|x.x at (10,14)
  _01: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
diff: 
delta: (9,16)=2  (9,17)=1  (10,17)=4  (11,6)=3  (11,7)=4  (12,7)=2  (21,13)=8  (22,13)=2  (22,14)=3  (23,15)=3  (23,16)=3  (24,15)=3 
! size mismatch, 10x10 instead of 30x30

TRAIN b775ac94.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (8,8)
diff: 
delta: (9,7)=4  (9,8)=3 
   (144.3 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
  _01: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxxx|xx... at (6,8)
  _011: a rectangle with size (3,5) and color yellow and mask ...xx|xxxxx|.x.x. at (9,3)
  _0111: a rectangle with size (2,1) and color green and mask Full at (10,11)
  _01111: a rectangle with size (3,5) and color green and mask xx...|xxxxx|.x.x. at (9,8)
diff: 
delta:
   (212.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (8,8)
diff: 
delta: (9,7)=4  (9,8)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN b775ac94.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _01: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
diff: 
delta: (3,10)=4  (4,10)=6  (7,5)=1  (8,5)=4 
   (191.8 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxxx|x... at (5,5)
  _011: a rectangle with size (3,4) and color yellow and mask x...|xxxx|.x.. at (8,5)
  _0111: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
  _01111: a rectangle with size (3,3) and color yellow and mask .xx|.xx|x.. at (1,10)
diff: 
delta: (4,10)=6  (5,11)=6  (5,12)=6  (6,11)=6  (6,12)=6 
   (308.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _01: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
diff: 
delta: (3,10)=4  (4,10)=6  (7,5)=1  (8,5)=4 
! size mismatch, 10x10 instead of 14x14
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
  _01: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
diff: 
delta: (3,10)=4  (4,10)=6  (7,5)=1  (8,5)=4 
! size mismatch, 10x10 instead of 14x14

TRAIN b775ac94.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask .x..|xxx.|.x.x|..xx at (3,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xxx|x.. at (17,11)
diff: 
delta: (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=8  (8,16)=1  (16,13)=1  (17,14)=4 
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|xxx|x.. at (17,11)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xxx.|.x.x|..xx at (3,4)
diff: 
delta: (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=8  (8,16)=1  (16,13)=1  (17,14)=4 
! size mismatch, 10x10 instead of 24x24

TEST b775ac94.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.2 sec (28.2 sec/task)
bits-train-error = 13642.9 bits (13642.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-115] Checking task b782dc8a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 45017.1 = 45026.1
DL output with Mo: L = 9.0 + 45017.1 = 45026.1
DL input+output M: L = 17.9 + 90034.2 = 90052.1

# learning a model for train pairs
2.000	
1.725	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.449	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.295	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.259	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.249	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.239	OUT DEF: ^.size=^.size
1.233	IN  OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
1.229	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.961	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.773	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.726	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.699	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.673	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0.shape at ?
  _01: ^.layer_01.shape at ?
  _011: ^.layer_011.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 122.2 + 10818.9 = 10941.0
DL output with Mo: L = 97.0 + 19275.2 = 19372.2
DL input+output M: L = 219.2 + 30094.1 = 30313.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,24) and color black and layers
  _0: a rectangle with size (10,10) and color cyan and mask ..xxx.....|xxx.x.xxxx|x...x.x..x|x.xxx.xx.x|x.x....x.x|x.xxxxxx.x|x........x|xx.xxx.xxx|.x.x.x.x..|.xxx.xxx.. at (1,0)
  _01: a rectangle with size (11,14) and color cyan and mask ........xx.xxx|........x..x.x|x.......xxxx.x|x............x|x........xxxxx|x........x....|x........xxxxx|x............x|x.xxxxxx.xxx.x|..x....x.x.x.x|xxx....xxx.xxx at (0,9)
  _011: a rectangle with size (7,11) and color cyan and mask xxxxxx.xxx.|.....x...x.|xxxx.xxx.x.|x..x...x.x.|xx.x.xxx.xx|.x.x.x....x|xx.x.xxxxxx at (0,6)
  _0111: a rectangle with size (3,3) and color green and mask Full at (6,16)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (10,13)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta: (7,17)=2 
   (577.4 bits)
data: a background with size (11,24) and color black and layers
  _0: a rectangle with size (10,10) and color cyan and mask ..xxx.....|xxx.x.xxxx|x...x.x..x|x.xxx.xx.x|x.x....x.x|x.xxxxxx.x|x........x|xx.xxx.xxx|.x.x.x.x..|.xxx.xxx.. at (1,0)
  _01: a rectangle with size (11,14) and color cyan and mask ........xx.xxx|........x..x.x|x.......xxxx.x|x............x|x........xxxxx|x........x....|x........xxxxx|x............x|x.xxxxxx.xxx.x|..x....x.x.x.x|xxx....xxx.xxx at (0,9)
  _011: a rectangle with size (7,11) and color cyan and mask xxxxxx.xxx.|.....x...x.|xxxx.xxx.x.|x..x...x.x.|xx.x.xxx.xx|.x.x.x....x|xx.x.xxxxxx at (0,6)
  _0111: a rectangle with size (6,3) and color green and mask Full at (3,16)
  _01111: a rectangle with size (1,11) and color red and mask Full at (7,11)
  _011111: a rectangle with size (9,1) and color green and mask Full at (1,10)
diff: 
delta: (0,0)=8  (0,1)=3  (0,2)=2  (0,3)=3  (0,4)=2  (0,5)=3  (0,16)=2  (1,0)=3  (1,1)=2  (1,5)=2  (1,6)=3  (1,7)=2  (1,8)=3  (1,9)=2  (1,16)=3  (1,21)=2  (2,5)=3  (2,10)=2  (2,16)=2  (2,21)=3  (3,5)=2  (3,11)=2  (3,12)=3  (3,17)=2  (3,19)=2  (3,20)=3  (3,21)=2  (4,5)=3  (4,10)=2  (5,3)=2  (5,4)=3  (5,5)=2  (5,6)=3  (5,17)=2  (6,10)=2  (7,12)=3  (7,14)=3  (7,17)=2  (7,20)=3  (8,10)=2  (8,21)=3  (9,8)=3  (9,9)=2  (9,17)=2  (9,21)=2  (10,8)=2  (10,13)=8  (10,14)=8 
   (1119.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,24) and color black and layers
  _0: a rectangle with size (10,10) and color cyan and mask ..xxx.....|xxx.x.xxxx|x...x.x..x|x.xxx.xx.x|x.x....x.x|x.xxxxxx.x|x........x|xx.xxx.xxx|.x.x.x.x..|.xxx.xxx.. at (1,0)
  _01: a rectangle with size (11,14) and color cyan and mask ........xx.xxx|........x..x.x|x.......xxxx.x|x............x|x........xxxxx|x........x....|x........xxxxx|x............x|x.xxxxxx.xxx.x|..x....x.x.x.x|xxx....xxx.xxx at (0,9)
  _011: a rectangle with size (7,11) and color cyan and mask xxxxxx.xxx.|.....x...x.|xxxx.xxx.x.|x..x...x.x.|xx.x.xxx.xx|.x.x.x....x|xx.x.xxxxxx at (0,6)
  _0111: a rectangle with size (3,3) and color green and mask Full at (6,16)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (10,13)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta: (7,17)=2 
! 154 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,24) and color black and layers
  _0: a rectangle with size (10,10) and color cyan and mask ..xxx.....|xxx.x.xxxx|x...x.x..x|x.xxx.xx.x|x.x....x.x|x.xxxxxx.x|x........x|xx.xxx.xxx|.x.x.x.x..|.xxx.xxx.. at (1,0)
  _01: a rectangle with size (7,11) and color cyan and mask xxxxxx.xxx.|.....x...x.|xxxx.xxx.x.|x..x...x.x.|xx.x.xxx.xx|.x.x.x....x|xx.x.xxxxxx at (0,6)
  _011: a rectangle with size (11,14) and color cyan and mask xxx.xxx.xx.xxx|..x...x.x..x.x|x.xxx.x.xxxx.x|x...x.x......x|x.xxx.xx.xxxxx|x.x....x.x....|x.xxxxxx.xxxxx|x............x|x.xxxxxx.xxx.x|..x....x.x.x.x|xxx....xxx.xxx at (0,9)
  _0111: a rectangle with size (3,3) and color green and mask Full at (6,16)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (10,13)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta: (7,17)=2 
! 150 wrong pixels (generated / expected)

TRAIN b782dc8a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (13,9) and color cyan and mask ..x.....x|..x.xxx.x|..x.x.xxx|..x.x....|..x.xxx..|x.x...x..|x.xxx.x..|x...x.x..|xxxxx.xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (4,13)
  _01111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
  _011111: a rectangle with size (3,2) and color blue and mask Full at (8,4)
diff: 
delta: (9,4)=4 
   (504.5 bits)
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (13,9) and color cyan and mask ..x.....x|..x.xxx.x|..x.x.xxx|..x.x....|..x.xxx..|x.x...x..|x.xxx.x..|x...x.x..|xxxxx.xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
  _01111: a rectangle with size (1,7) and color yellow and mask Full at (9,4)
  _011111: a rectangle with size (7,1) and color blue and mask Full at (6,4)
diff: 
delta: (0,8)=1  (0,9)=4  (0,10)=1  (0,11)=4  (0,12)=1  (1,8)=4  (1,12)=4  (2,8)=1  (3,8)=4  (4,8)=1  (4,13)=8  (5,8)=4  (5,9)=1  (5,10)=4  (5,13)=8  (6,1)=4  (6,2)=1  (6,3)=4  (6,10)=1  (6,13)=8  (7,4)=4  (7,10)=4  (8,10)=1  (9,5)=1  (9,7)=1  (9,9)=1  (9,11)=1  (10,0)=1  (11,0)=4  (11,4)=4  (12,0)=1  (12,1)=4  (12,2)=1  (12,3)=4 
   (808.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (13,9) and color cyan and mask ..x.....x|..x.xxx.x|..x.x.xxx|..x.x....|..x.xxx..|x.x...x..|x.xxx.x..|x...x.x..|xxxxx.xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (4,13)
  _01111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
  _011111: a rectangle with size (3,2) and color blue and mask Full at (8,4)
diff: 
delta: (9,4)=4 
! 94 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _011: a rectangle with size (13,9) and color cyan and mask ..x.....x|x.x.xxx.x|x.x.x.xxx|x.x.x....|..x.xxx..|x.x...x..|x.xxx.x..|x...x.x..|xxxxx.xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (4,13)
  _01111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
  _011111: a rectangle with size (3,2) and color blue and mask Full at (8,4)
diff: 
delta: (9,4)=4 
! 96 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _01: a rectangle with size (12,10) and color cyan and mask .......x..|.......x.x|.......x.x|.......x.x|.......x.x|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x.xxxxx|.xxx.x.... at (0,0)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (4,13)
  _01111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
  _011111: a rectangle with size (3,2) and color blue and mask Full at (8,4)
diff: 
delta: (9,4)=4 
! 80 wrong pixels (generated / expected)

TRAIN b782dc8a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (14,9) and color cyan and mask ..xxxxxxx|..x.....x|..xxx.xxx|....x.x..|....x.x.x|....x.x.x|....x.xxx|....x....|....xxx..|......x..|xxxxxxx..|x........|x........|x........ at (1,6)
  _01: a rectangle with size (10,9) and color cyan and mask xx.......|.x......x|.x......x|.xxxxxx.x|......x..|xxxxx.xxx|....x...x|....xxx.x|......x.x|......xxx at (0,0)
  _011: a rectangle with size (7,5) and color cyan and mask xxx.x|..x..|x.xxx|x...x|xxx.x|..x.x|..xxx at (7,0)
  _0111: a rectangle with size (6,7) and color cyan and mask x.xxx.x|....x.x|xxxxx.x|......x|xxxxxxx|x...... at (9,8)
  _01111: a rectangle with size (2,4) and color cyan and mask x..x|xxxx at (0,3)
  _011111: a rectangle with size (3,2) and color yellow and mask Full at (1,6)
diff: 
delta: (2,7)=3  (13,0)=8  (14,0)=8 
! 139 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (10,9) and color cyan and mask xx.......|.x.......|.x.......|.xxxxxx..|......x..|xxxxx.xxx|....x...x|....xxx.x|......x.x|......xxx at (0,0)
  _01: a rectangle with size (14,9) and color cyan and mask ..xxxxxxx|..x.....x|x.xxx.xxx|x...x.x..|xxx.x.x.x|..x.x.x.x|x.x.x.xxx|x.x.x....|xxx.xxx..|......x..|xxxxxxx..|x........|x........|x........ at (1,6)
  _011: a rectangle with size (7,5) and color cyan and mask xxx.x|..x..|x.xxx|x...x|xxx.x|..x.x|..xxx at (7,0)
  _0111: a rectangle with size (6,7) and color cyan and mask x.xxx.x|....x.x|xxxxx.x|......x|xxxxxxx|x...... at (9,8)
  _01111: a rectangle with size (2,4) and color cyan and mask x..x|xxxx at (0,3)
  _011111: a rectangle with size (3,2) and color yellow and mask Full at (1,6)
diff: 
delta: (2,7)=3  (13,0)=8  (14,0)=8 
! 139 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (14,9) and color cyan and mask ..xxxxxxx|..x.....x|..xxx.xxx|....x.x..|....x.x.x|....x.x.x|....x.xxx|....x....|....xxx..|......x..|xxxxxxx..|x........|x........|x........ at (1,6)
  _01: a rectangle with size (10,9) and color cyan and mask xx.......|.x......x|.x......x|.xxxxxx.x|......x..|xxxxx.xxx|....x...x|....xxx.x|......x.x|......xxx at (0,0)
  _011: a rectangle with size (6,7) and color cyan and mask x.xxx.x|....x.x|xxxxx.x|......x|xxxxxxx|x...... at (9,8)
  _0111: a rectangle with size (7,5) and color cyan and mask xxx.x|..x..|x.xxx|x...x|xxx.x|..x.x|..xxx at (7,0)
  _01111: a rectangle with size (2,4) and color cyan and mask x..x|xxxx at (0,3)
  _011111: a rectangle with size (3,2) and color yellow and mask Full at (1,6)
diff: 
delta: (2,7)=3  (13,0)=8  (14,0)=8 
! 138 wrong pixels (generated / expected)

TEST b782dc8a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.1 sec (29.1 sec/task)
bits-train-error = 19275.2 bits (19275.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-114] Checking task b8825c91.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 158972.8 = 158981.8
DL output with Mo: L = 9.0 + 154919.1 = 154928.1
DL input+output M: L = 17.9 + 313892.0 = 313909.9

# learning a model for train pairs
2.000	
1.835	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.697	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.615	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.536	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.483	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.440	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 115889.1 = 115955.9
DL output with Mo: L = 66.8 + 109955.5 = 110022.3
DL input+output M: L = 133.5 + 225844.6 = 225978.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,14) and color orange and mask ......xxxx....|......x..x....|....xx....xx..|....x......x..|..xx........xx|..x...........|xx............|x.............|x.............|xx............|..x...........|..xx..........|....x.........|....xx........|......x..x....|......xxxx.... at (0,0)
  _01: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x......|xx......|xx....xx|.x....x.|..xxxx..|...xx... at (4,4)
  _011: a rectangle with size (3,4) and color yellow and mask Full at (5,10)
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,14)=7# (6,15)=7# (7,2)=3  (7,3)=3  (7,6)=6  (7,7)=1  (7,8)=1  (7,9)=6  (7,15)=7# (8,2)=3  (8,3)=3  (8,6)=6  (8,7)=1  (8,8)=1  (8,9)=6  (8,12)=3  (8,13)=3  (8,15)=7# (9,2)=3  (9,3)=3  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=7# (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=7# (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
   (3298.9 bits)
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,16) and color orange and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _01: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x....x.|xx....xx|xx....xx|.x....x.|..xxxx..|...xx... at (4,4)
  _011: a rectangle with size (4,4) and color pink and mask Full at (6,6)
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,10)=3  (5,11)=8  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,12)=3  (6,13)=3  (7,2)=3  (7,3)=3  (7,7)=1  (7,8)=1  (7,12)=3  (7,13)=3  (8,2)=3  (8,3)=3  (8,7)=1  (8,8)=1  (8,12)=3  (8,13)=3  (9,2)=3  (9,3)=3  (9,12)=3  (9,13)=3  (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=3  (10,11)=8  (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=8  (11,11)=3  (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,12)=3  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
   (2906.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,14) and color orange and mask ......xxxx....|......x..x....|....xx....xx..|....x......x..|..xx........xx|..x...........|xx............|x.............|x.............|xx............|..x...........|..xx..........|....x.........|....xx........|......x..x....|......xxxx.... at (0,0)
  _01: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x......|xx......|xx....xx|.x....x.|..xxxx..|...xx... at (4,4)
  _011: a rectangle with size (3,4) and color yellow and mask Full at (5,10)
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,14)=7# (6,15)=7# (7,2)=3  (7,3)=3  (7,6)=6  (7,7)=1  (7,8)=1  (7,9)=6  (7,15)=7# (8,2)=3  (8,3)=3  (8,6)=6  (8,7)=1  (8,8)=1  (8,9)=6  (8,12)=3  (8,13)=3  (8,15)=7# (9,2)=3  (9,3)=3  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=7# (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=7# (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (16,16) and color pink and mask ......xxxx......|.....xx..xx.....|....xx....xx....|....x......x....|...x........xx..|.xx..........xx.|xx............xx|x..............x|x..............x|xx............xx|.xx..........xx.|..xx........xx..|....x......x....|....xx....xx....|.....xx..xx.....|......xxxx...... at (0,0)
  _01: a rectangle with size (8,8) and color grey and mask ..xxxx..|..xxxx..|xx.xx.xx|xxx..xxx|xxx..xx.|xx.xx.x.|..xxxx..|..xxxx.. at (4,4)
  _011: a rectangle with size (12,4) and color cyan and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,1)=9# (0,2)=6  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,13)=6  (0,14)=9# (0,15)=9# (1,0)=9# (1,1)=6  (1,3)=3  (1,4)=9# (1,11)=9# (1,12)=3  (1,14)=6  (1,15)=9# (2,0)=6  (2,1)=4  (2,2)=4  (2,3)=2  (2,12)=2  (2,13)=5# (2,15)=6  (3,1)=4  (3,2)=4  (3,3)=8  (3,7)=2  (3,8)=2  (3,12)=8  (3,13)=2  (3,14)=3  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,15)=9# (6,2)=8  (6,3)=8  (6,6)=9# (6,9)=9# (6,12)=8  (6,13)=8  (7,2)=8  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,13)=8  (8,2)=8  (8,3)=2  (8,7)=8  (8,8)=8  (8,11)=4  (8,12)=4  (8,13)=4  (9,2)=8  (9,3)=8  (9,6)=9# (9,9)=9# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,11)=7# (11,14)=9# (11,15)=8  (12,1)=3  (12,2)=2  (12,3)=8  (12,7)=2  (12,8)=2  (12,12)=8  (12,13)=2  (12,14)=3  (13,0)=6  (13,2)=5# (13,3)=2  (13,12)=2  (13,13)=5# (13,15)=6  (14,0)=9# (14,1)=6  (14,3)=3  (14,4)=9# (14,11)=9# (14,12)=3  (14,14)=6  (14,15)=9# (15,0)=9# (15,1)=9# (15,2)=6  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,13)=6  (15,14)=9# (15,15)=9#
   (2666.2 bits)
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (16,16) and color pink and mask ......xxxx......|.....xx..xx.....|....xx....xx....|....x......x....|..xx........xx..|.xx..........xx.|xx............xx|x..............x|x..............x|xx............xx|.xx..........xx.|..xx........xx..|....x......x....|....xx....xx....|.....xx..xx.....|......xxxx...... at (0,0)
  _01: a rectangle with size (8,8) and color grey and mask ..xxxx..|..xxxx..|xx.xx.xx|xxx..xxx|xxx..xxx|xx.xx.xx|..xxxx..|..xxxx.. at (4,4)
  _011: a rectangle with size (4,12) and color cyan and mask Full at (6,2)
diff: 
delta: (0,0)=9# (0,1)=9# (0,2)=6  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,13)=6  (0,14)=9# (0,15)=9# (1,0)=9# (1,1)=6  (1,3)=3  (1,4)=9# (1,11)=9# (1,12)=3  (1,14)=6  (1,15)=9# (2,0)=6  (2,2)=5# (2,3)=2  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,12)=2  (2,13)=5# (2,15)=6  (3,1)=3  (3,2)=2  (3,3)=8  (3,6)=8  (3,7)=2  (3,8)=2  (3,9)=8  (3,12)=8  (3,13)=2  (3,14)=3  (4,0)=8  (4,1)=9# (4,4)=7# (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,15)=9# (6,6)=9# (6,9)=9# (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (8,3)=2  (8,7)=8  (8,8)=8  (8,12)=2  (9,6)=9# (9,9)=9# (10,0)=9# (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,11)=7# (11,14)=9# (11,15)=8  (12,1)=3  (12,2)=2  (12,3)=8  (12,6)=8  (12,7)=2  (12,8)=2  (12,9)=8  (12,12)=8  (12,13)=2  (12,14)=3  (13,0)=6  (13,2)=5# (13,3)=2  (13,6)=8  (13,7)=8  (13,8)=8  (13,9)=8  (13,12)=2  (13,13)=5# (13,15)=6  (14,0)=9# (14,1)=6  (14,3)=3  (14,4)=9# (14,11)=9# (14,12)=3  (14,14)=6  (14,15)=9# (15,0)=9# (15,1)=9# (15,2)=6  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,13)=6  (15,14)=9# (15,15)=9#
   (2585.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (16,16) and color pink and mask ......xxxx......|.....xx..xx.....|....xx....xx....|....x......x....|...x........xx..|.xx..........xx.|xx............xx|x..............x|x..............x|xx............xx|.xx..........xx.|..xx........xx..|....x......x....|....xx....xx....|.....xx..xx.....|......xxxx...... at (0,0)
  _01: a rectangle with size (8,8) and color grey and mask ..xxxx..|..xxxx..|xx.xx.xx|xxx..xxx|xxx..xx.|xx.xx.x.|..xxxx..|..xxxx.. at (4,4)
  _011: a rectangle with size (12,4) and color cyan and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,1)=9# (0,2)=6  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,13)=6  (0,14)=9# (0,15)=9# (1,0)=9# (1,1)=6  (1,3)=3  (1,4)=9# (1,11)=9# (1,12)=3  (1,14)=6  (1,15)=9# (2,0)=6  (2,1)=4  (2,2)=4  (2,3)=2  (2,12)=2  (2,13)=5# (2,15)=6  (3,1)=4  (3,2)=4  (3,3)=8  (3,7)=2  (3,8)=2  (3,12)=8  (3,13)=2  (3,14)=3  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,15)=9# (6,2)=8  (6,3)=8  (6,6)=9# (6,9)=9# (6,12)=8  (6,13)=8  (7,2)=8  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,13)=8  (8,2)=8  (8,3)=2  (8,7)=8  (8,8)=8  (8,11)=4  (8,12)=4  (8,13)=4  (9,2)=8  (9,3)=8  (9,6)=9# (9,9)=9# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,11)=7# (11,14)=9# (11,15)=8  (12,1)=3  (12,2)=2  (12,3)=8  (12,7)=2  (12,8)=2  (12,12)=8  (12,13)=2  (12,14)=3  (13,0)=6  (13,2)=5# (13,3)=2  (13,12)=2  (13,13)=5# (13,15)=6  (14,0)=9# (14,1)=6  (14,3)=3  (14,4)=9# (14,11)=9# (14,12)=3  (14,14)=6  (14,15)=9# (15,0)=9# (15,1)=9# (15,2)=6  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,13)=6  (15,14)=9# (15,15)=9#
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,16) and color cyan and mask .....x.xx.x.....|....xxx..xxx....|...x.x....x.x...|..xxx......xxx..|.x.x........x.x.|xxx..........xxx|.x............x.|x..............x|x..............x|.x............x.|xxx..........xxx|.x..........x.x.|...........xxx..|..........x.x...|......x..xxx....|.....x.xx.x..... at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (11,2)
  _011: a rectangle with size (8,8) and color orange and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|xx.xx... at (4,4)
diff: 
delta: (0,1)=3  (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,14)=3  (1,0)=3  (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,15)=3  (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,7)=6  (5,8)=6  (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,7)=6  (10,8)=6  (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,1)=3  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (14,0)=3  (14,7)=5# (14,8)=5# (14,12)=3  (14,15)=3  (15,1)=3  (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,14)=3 
   (3007.7 bits)
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (8,8) and color orange and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|...xx... at (4,4)
  _01: a rectangle with size (4,4) and color blue and mask Full at (6,6)
  _011: a rectangle with size (16,16) and color cyan and mask .....x.xx.x.....|....xxx..xxx....|...x.x....x.x...|..xxx......xxx..|.x.x...xx...x.x.|xxx...x..x...xxx|.x...xxxxxx...x.|x...x.xxxx.x...x|x...x.xxxx.x...x|.x...xxxxxx...x.|xxx...x..x...xxx|.x.x...xx...x.x.|..xxx......xxx..|...x.x....x.x...|....xxx..xxx....|.....x.xx.x..... at (0,0)
diff: 
delta: (0,1)=3  (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,14)=3  (1,0)=3  (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,15)=3  (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,7)=6  (5,8)=6  (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,12)=2  (6,13)=2  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,5)=6  (7,7)=3  (7,8)=3  (7,10)=6  (7,12)=1  (7,13)=2  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,5)=6  (8,7)=3  (8,8)=3  (8,10)=6  (8,12)=1  (8,13)=2  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,12)=2  (9,13)=2  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,7)=6  (10,8)=6  (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,2)=7# (11,4)=2  (11,5)=5# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,1)=3  (12,5)=5# (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (13,2)=2  (13,4)=7# (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (14,0)=3  (14,3)=3  (14,7)=5# (14,8)=5# (14,12)=3  (14,15)=3  (15,1)=3  (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,14)=3 
   (2906.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,16) and color cyan and mask .....x.xx.x.....|....xxx..xxx....|...x.x....x.x...|..xxx......xxx..|.x.x........x.x.|xxx..........xxx|.x............x.|x..............x|x..............x|.x............x.|xxx..........xxx|.x..........x.x.|...........xxx..|..........x.x...|......x..xxx....|.....x.xx.x..... at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (11,2)
  _011: a rectangle with size (8,8) and color orange and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|xx.xx... at (4,4)
diff: 
delta: (0,1)=3  (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,14)=3  (1,0)=3  (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,15)=3  (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,7)=6  (5,8)=6  (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,7)=6  (10,8)=6  (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,1)=3  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (14,0)=3  (14,7)=5# (14,8)=5# (14,12)=3  (14,15)=3  (15,1)=3  (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,14)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (16,16) and color blue and mask .......xx.......|......xxxx......|.....x..........|....xx..........|...xx.xxxx.xx...|..xx..x..x..xx..|.x..xx....xx..x.|xx..x......x..xx|xx.........x..xx|.x...x....xx..x.|..x...x..x..xx..|...xx.xxxx.xx...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _01: a rectangle with size (6,6) and color green and mask Full at (5,5)
  _011: a rectangle with size (3,4) and color yellow and mask Full at (1,10)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=1  (1,3)=2  (1,4)=9# (1,5)=5# (1,14)=1  (1,15)=2  (2,0)=7# (2,2)=3  (2,3)=3  (2,4)=9# (2,15)=7# (3,1)=2  (3,2)=3  (3,3)=8  (3,14)=2  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,15)=9# (7,7)=2  (7,8)=2  (8,3)=4  (8,4)=4  (8,7)=2  (8,8)=2  (9,0)=9# (9,3)=4  (9,4)=4  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,1)=2  (12,2)=3  (12,3)=8  (12,12)=8  (12,13)=3  (12,14)=2  (13,0)=7# (13,2)=3  (13,3)=3  (13,4)=9# (13,11)=9# (13,12)=3  (13,13)=3  (13,15)=7# (14,0)=2  (14,1)=1  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,14)=1  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,13)=7# (15,14)=2  (15,15)=2 
   (2616.1 bits)
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (16,16) and color blue and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...xx.xxxx.xx...|..xx..x..x..xx..|.x..xx....xx..x.|xx..x......x..xx|xx..x......x..xx|.x..xx....xx..x.|..xx..x..x..xx..|...xx.xxxx.xx...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _01: a rectangle with size (6,6) and color green and mask Full at (5,5)
  _011: a rectangle with size (3,8) and color brown and mask Full at (0,4)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,4)=8  (0,11)=8  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=1  (1,3)=2  (1,5)=5# (1,10)=5# (1,12)=2  (1,14)=1  (1,15)=2  (2,0)=7# (2,2)=3  (2,3)=3  (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,12)=3  (2,13)=3  (2,15)=7# (3,1)=2  (3,2)=3  (3,3)=8  (3,12)=8  (3,13)=3  (3,14)=2  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,15)=9# (7,7)=2  (7,8)=2  (8,7)=2  (8,8)=2  (9,0)=9# (9,15)=9# (10,0)=9# (10,1)=5# (10,4)=7# (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,1)=2  (12,2)=3  (12,3)=8  (12,12)=8  (12,13)=3  (12,14)=2  (13,0)=7# (13,2)=3  (13,3)=3  (13,4)=9# (13,11)=9# (13,12)=3  (13,13)=3  (13,15)=7# (14,0)=2  (14,1)=1  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,14)=1  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,13)=7# (15,14)=2  (15,15)=2 
   (2597.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (16,16) and color blue and mask .......xx.......|......xxxx......|.....x..........|....xx..........|...xx.xxxx.xx...|..xx..x..x..xx..|.x..xx....xx..x.|xx..x......x..xx|xx.........x..xx|.x...x....xx..x.|..x...x..x..xx..|...xx.xxxx.xx...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _01: a rectangle with size (6,6) and color green and mask Full at (5,5)
  _011: a rectangle with size (3,4) and color yellow and mask Full at (1,10)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=1  (1,3)=2  (1,4)=9# (1,5)=5# (1,14)=1  (1,15)=2  (2,0)=7# (2,2)=3  (2,3)=3  (2,4)=9# (2,15)=7# (3,1)=2  (3,2)=3  (3,3)=8  (3,14)=2  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,15)=9# (7,7)=2  (7,8)=2  (8,3)=4  (8,4)=4  (8,7)=2  (8,8)=2  (9,0)=9# (9,3)=4  (9,4)=4  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,1)=2  (12,2)=3  (12,3)=8  (12,12)=8  (12,13)=3  (12,14)=2  (13,0)=7# (13,2)=3  (13,3)=3  (13,4)=9# (13,11)=9# (13,12)=3  (13,13)=3  (13,15)=7# (14,0)=2  (14,1)=1  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,14)=1  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,13)=7# (15,14)=2  (15,15)=2 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color cyan and layers
  _0: a rectangle with size (16,16) and color pink and mask .......xx.......|......xxxx......|.....x...xx.....|....xx....xx....|...x.....x......|..xx..x..x......|.xx.xx........x.|xx..x.........xx|xx..x......x..xx|.xx.xx....xx.xx.|..xx..x..x..xx..|...x..xxxx..x...|....xx....xx....|.....xx..xx.....|......xxxx......|.......xx....... at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (4,10)
  _011: a rectangle with size (6,6) and color grey and mask Full at (5,5)
diff: 
delta: (0,0)=7# (0,1)=7# (0,3)=1  (0,4)=9# (0,6)=2  (0,9)=2  (0,11)=9# (0,12)=1  (0,14)=7# (0,15)=7# (1,0)=7# (1,1)=1  (1,2)=1  (1,13)=1  (1,14)=1  (1,15)=7# (2,1)=1  (2,2)=6  (2,3)=9# (2,4)=2  (2,6)=4  (2,7)=4  (2,8)=4  (2,11)=2  (2,12)=9# (2,13)=6  (2,14)=1  (3,0)=1  (3,2)=9# (3,3)=1  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=1  (3,12)=1  (3,13)=9# (3,15)=1  (4,0)=9# (4,2)=2  (4,5)=7# (4,6)=4  (4,7)=4  (4,8)=4  (4,15)=9# (5,4)=7# (5,5)=7# (6,0)=2  (6,3)=1  (6,15)=2  (7,2)=1  (7,3)=1  (7,7)=7# (7,8)=7# (8,2)=1  (8,3)=1  (8,7)=7# (8,8)=7# (8,12)=1  (8,13)=1  (9,0)=2  (9,3)=1  (9,12)=1  (9,15)=2  (10,4)=7# (10,5)=7# (10,10)=7# (10,11)=7# (11,0)=9# (11,2)=2  (11,5)=7# (11,10)=7# (11,13)=2  (11,15)=9# (12,0)=1  (12,2)=9# (12,3)=1  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,12)=1  (12,13)=9# (12,15)=1  (13,1)=1  (13,2)=6  (13,3)=9# (13,4)=2  (13,7)=1  (13,8)=1  (13,11)=2  (13,12)=9# (13,13)=6  (13,14)=1  (14,0)=7# (14,1)=1  (14,2)=1  (14,13)=1  (14,14)=1  (14,15)=7# (15,0)=7# (15,1)=7# (15,3)=1  (15,4)=9# (15,6)=2  (15,9)=2  (15,11)=9# (15,12)=1  (15,14)=7# (15,15)=7#
! size mismatch, 10x10 instead of 16x16

TEST b8825c91.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.3 sec (29.3 sec/task)
bits-train-error = 109955.5 bits (109955.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-113] Checking task b8cdaf2b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5663.0 = 5671.9
DL output with Mo: L = 9.0 + 7802.6 = 7811.5
DL input+output M: L = 17.9 + 13465.5 = 13483.5

# learning a model for train pairs
2.000	
1.652	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.252	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.086	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.990	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.913	OUT DEF: ^.size=^.size
0.869	OUT DEF: ^.layer_0=^.layer_0
0.828	OUT DEF: ^.color=^.layer_01.shape.color
0.804	OUT DEF: ^.layer_01.shape.color=^.color
0.788	IN  DEF: ^.layer_01.shape.mask=Full
0.777	IN  DEF: ^.color=black
0.769	IN  DEF: ^.size=(?,?)
0.760	IN  DEF: ^.layer_0.pos=(?,?)
0.735	IN  DEF: ^.layer_0.pos.j=(0)
0.726	IN  DEF: ^.layer_0.shape.size=(?,?)
0.696	IN  DEF: ^.layer_0.shape.size.i=2
0.688	IN  DEF: ^.layer_01.pos=(?,?)
0.679	IN  DEF: ^.layer_01.shape.size=(?,?)
0.663	IN  DEF: ^.layer_01.shape.size.i=1
0.656	OUT DEF: ^.layer_01.pos=(?,?)
0.638	OUT DEF: ^.layer_01.pos.i=(0)
0.620	OUT DEF: ^.layer_01.pos.j=(0)
0.614	OUT DEF: ^.layer_01.shape.size=(?,?)
0.579	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.j
0.548	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_01.shape.color and layers
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_01.pos.i,^.layer_0.shape.size.j) and color ^.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (2,?) and color ? and mask ? at (?,(0))
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 68.9 + 2276.5 = 2345.4
DL output with Mo: L = 48.9 + 1002.4 = 1051.2
DL input+output M: L = 117.7 + 3278.9 = 3396.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta:
   (43.4 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (2,3) and color black and mask .x.|xxx at (0,0)
diff: 
delta:
   (9.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|x.x at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff:   ^.color
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,3) and color black and mask Full at (0,0)
diff: 
delta: (2,1)=4 
! 3 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,2)
diff: 
delta:
   (56.5 bits)
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (4,5) and color black and mask xxxxx|.xxx.|x.x.x|xxxxx at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,2)
diff:   ^.layer_0.shape.size.i
delta: (4,2)=3 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (4,0)
diff:   ^.layer_0.shape.size.i  ^.layer_0.pos.j
delta: (4,2)=3 
! 17 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
   (59.7 bits)
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (4,5) and color black and mask xxxxx|xxxxx|.xxx.|xxxxx at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (4,5) and color black and mask Full at (0,0)
diff:   ^.color  ^.layer_01.shape.size.i
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|xxxxx|xxxxx|x...x at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff:   ^.color  ^.layer_0.shape.size.i
delta:
! 4 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
diff: 
delta:
   (68.0 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (6,7) and color black and mask xxxxxxx|xxxxxxx|xxxxxxx|.xxxxx.|x.xxx.x|xxxxxxx at (0,0)
diff: 
delta:
   (45.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (6,7) and color black and mask Full at (0,0)
diff:   ^.color  ^.layer_01.shape.size.i
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (5,2)
diff:   ^.layer_0.shape.size.i
delta: (6,2)=4  (6,3)=4  (6,4)=4 
! 11 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,9) and color cyan and mask ...xxx...|xxx...xxx at (7,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (8,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color red and layers
  _0: a rectangle with size (2,9) and color cyan and mask ...xxx...|xxx...xxx at (7,0)
  _01: a rectangle with size (8,9) and color black and mask Full at (0,0)
diff:   ^.color  ^.layer_01.shape.size.i
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (7,3)
diff:   ^.layer_0.shape.size.i
delta: (8,3)=2  (8,4)=2  (8,5)=2 
! 15 wrong pixels (generated / expected)

TEST b8cdaf2b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.3 sec (6.3 sec/task)
bits-train-error = 1002.4 bits (1002.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-112] Checking task b91ae062.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4324.0 = 4333.0
DL output with Mo: L = 9.0 + 37654.8 = 37663.7
DL input+output M: L = 17.9 + 41978.8 = 41996.8

# learning a model for train pairs
2.000	
1.660	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.443	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.281	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.182	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.102	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.049	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.010	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.004	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.998	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.992	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
0.978	IN  DEF: ^.size=(?,?)
0.915	IN  DEF: ^.size.i=3
0.852	IN  DEF: ^.size.j=3
0.835	IN  DEF: ^.color=black
0.820	IN  DEF: ^.layer_0.pos=(?,?)
0.806	IN  DEF: ^.layer_0.shape.size=(?,?)
0.792	IN  DEF: ^.layer_01.pos=(?,?)
0.758	IN  DEF: ^.layer_01.pos.i=0
0.744	IN  DEF: ^.layer_011.pos=(?,?)
0.738	IN  DEF: ^.layer_0.shape.size.i=1
0.729	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.711	IN  DEF: ^.color=black
0.684	IN  DEF: ^.layer_0.shape.mask=Full
0.670	IN  DEF: ^.layer_0111.pos=(?,?)
0.667	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.664	OUT DEF: ^.layer_01.shape.mask=^.layer_0.shape.mask
0.661	OUT DEF: ^.layer_011.shape.mask=^.layer_0.shape.mask
0.658	OUT DEF: ^.layer_0111.shape.mask=^.layer_0.shape.mask
0.656	OUT DEF: ^.color=black
0.654	OUT DEF: ^.size=(?,?)
0.652	OUT DEF: ^.layer_0.pos=(?,?)
0.647	OUT DEF: ^.layer_0.pos.i=^.layer_011.pos.i + ^.layer_0111.pos.j
0.645	OUT DEF: ^.layer_0.shape.size=(?,?)
0.639	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j + ^.layer_0111.pos.j
0.637	OUT DEF: ^.layer_01.pos=(?,?)
0.632	OUT DEF: ^.layer_01.pos.i=(0)
0.630	OUT DEF: ^.layer_01.shape.size=(?,?)
0.623	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.j + ^.layer_0111.pos.j
0.617	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.j + ^.layer_0111.pos.j
0.615	OUT DEF: ^.layer_011.pos=(?,?)
0.614	OUT DEF: ^.layer_011.shape.size=(?,?)
0.607	OUT DEF: ^.layer_011.shape.size.j=^.layer_0.shape.size.j + ^.layer_0111.pos.j
0.600	OUT DEF: ^.layer_011.shape.size.i=^.layer_011.pos.i + ^.layer_0111.pos.j
0.599	OUT DEF: ^.layer_0111.pos=(?,?)
0.597	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.591	OUT DEF: ^.layer_0111.shape.size.j=^.layer_0.shape.size.j + ^.layer_0111.pos.j
0.584	OUT DEF: ^.layer_0111.shape.size.i=^.layer_0.shape.size.j + ^.layer_0111.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.j + ^.layer_0111.pos.j,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (^.layer_011.pos.i + ^.layer_0111.pos.j,?)
  _01: a rectangle with size (^.layer_0.shape.size.j + ^.layer_0111.pos.j,^.layer_0.shape.size.j + ^.layer_0111.pos.j) and color ^.layer_01.shape.color and mask ^.layer_0.shape.mask at ((0),?)
  _011: a rectangle with size (^.layer_011.pos.i + ^.layer_0111.pos.j,^.layer_0.shape.size.j + ^.layer_0111.pos.j) and color ^.layer_011.shape.color and mask ^.layer_0.shape.mask at (?,?)
  _0111: a rectangle with size (^.layer_0.shape.size.j + ^.layer_0111.pos.j,^.layer_0.shape.size.j + ^.layer_0111.pos.j) and color ? and mask ^.layer_0.shape.mask at (?,?)
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (0,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 93.3 + 2102.3 = 2195.6
DL output with Mo: L = 225.0 + 2689.9 = 2915.0
DL input+output M: L = 318.4 + 4792.2 = 5110.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color pink at (1,2)
  _0111: a point with color pink at (1,1)
diff: 
delta:
   (41.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color orange and mask Full at (0,2)
  _011: a rectangle with size (2,2) and color pink and mask Full at (0,0)
  _0111: a rectangle with size (2,2) and color black and mask Full at (0,4)
diff: 
delta:
   (49.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color pink at (1,1)
  _0111: a point with color pink at (1,2)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color pink at (1,2)
  _0111: a point with color pink at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,1)
  _01: a point with color pink at (0,0)
  _011: a point with color pink at (1,1)
  _0111: a point with color pink at (1,2)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN b91ae062.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
  _01: a point with color blue at (0,0)
  _011: a point with color yellow at (1,1)
  _0111: a point with color blue at (2,1)
diff: 
delta:
   (41.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (0,4)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (4,2)
diff: 
delta:
   (47.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color yellow at (1,1)
  _0111: a point with color blue at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color blue at (2,1)
  _0111: a point with color yellow at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
  _01: a point with color blue at (0,0)
  _011: a point with color yellow at (1,1)
  _0111: a point with color blue at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN b91ae062.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color orange at (1,1)
  _0111: a point with color green at (1,2)
diff: 
delta:
   (41.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,6)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,3)
  _0111: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (54.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color orange at (1,1)
  _0111: a point with color green at (1,2)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color green at (1,2)
  _0111: a point with color orange at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color orange at (1,1)
  _0111: a point with color green at (1,2)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN b91ae062.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color cyan at (0,1)
  _011: a point with color brown at (2,0)
  _0111: a point with color cyan at (2,1)
diff: 
delta:
   (43.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,6) and color pink and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask Full at (6,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (6,3)
diff: 
delta:
   (56.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color cyan at (0,1)
  _011: a point with color brown at (2,0)
  _0111: a point with color cyan at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color cyan at (0,1)
  _011: a point with color cyan at (2,1)
  _0111: a point with color brown at (2,0)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color brown at (2,0)
  _011: a point with color cyan at (0,1)
  _0111: a point with color cyan at (2,1)
diff:   ^.layer_01.pos.i
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN b91ae062.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a point with color yellow at (0,0)
  _011: a point with color cyan at (2,2)
  _0111: a point with color green at (0,2)
diff: 
delta:
   (43.2 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,8) and color red and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (8,8)
  _0111: a rectangle with size (4,4) and color green and mask Full at (0,8)
diff: 
delta:
   (61.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a point with color yellow at (0,0)
  _011: a point with color green at (0,2)
  _0111: a point with color cyan at (2,2)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a point with color yellow at (0,0)
  _011: a point with color cyan at (2,2)
  _0111: a point with color green at (0,2)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a point with color green at (0,2)
  _011: a point with color yellow at (0,0)
  _0111: a point with color cyan at (2,2)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TRAIN b91ae062.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a point with color blue at (0,1)
  _011: a point with color cyan at (1,1)
  _0111: a point with color orange at (1,2)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a point with color blue at (0,1)
  _011: a point with color orange at (1,2)
  _0111: a point with color cyan at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a point with color cyan at (1,1)
  _011: a point with color blue at (0,1)
  _0111: a point with color orange at (1,2)
diff:   ^.layer_01.pos.i
delta:
! size mismatch, 10x10 instead of 12x12

TEST b91ae062.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.3 sec (23.3 sec/task)
bits-train-error = 2689.9 bits (2689.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-111] Checking task b94a9452.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10645.0 = 10653.9
DL output with Mo: L = 9.0 + 1714.0 = 1723.0
DL input+output M: L = 17.9 + 12359.0 = 12376.9

# learning a model for train pairs
2.000	
1.272	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.031	OUT DEF: ^.size=^.layer_0.shape.size
0.814	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.732	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.688	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.549	OUT DEF: ^.color=^.layer_00.shape.color
0.423	OUT DEF: ^.layer_0.shape.size=^.layer_00.shape.size
0.381	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.361	OUT DEF: ^.layer_0.pos=(?,?)
0.310	OUT DEF: ^.layer_0.pos.i=^.layer_00.pos.i - ^.layer_0.pos.i
0.259	OUT DEF: ^.layer_0.pos.j=^.layer_00.pos.j - ^.layer_0.pos.j
0.252	IN  DEF: ^.layer_00.shape.mask=Full
0.246	IN  DEF: ^.layer_0.shape.mask=Full
0.241	IN  DEF: ^.color=black
0.238	IN  DEF: ^.size=(?,?)
0.212	IN  DEF: ^.size.i=12
0.209	IN  DEF: ^.layer_00.pos=(?,?)
0.205	IN  DEF: ^.layer_00.shape.size=(?,?)
0.202	IN  DEF: ^.layer_0.pos=(?,?)
0.199	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_00.shape.color and layers
  _0: a rectangle with size ^.layer_00.shape.size and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (^.layer_00.pos.i - ^.layer_0.pos.i,^.layer_00.pos.j - ^.layer_0.pos.j)
WHERE (Mi)
a background with size (12,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 73.5 + 1711.3 = 1784.9
DL output with Mo: L = 53.9 + 0.0 = 53.9
DL input+output M: L = 127.4 + 1711.3 = 1838.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,3)
diff: 
delta:
   (60.2 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,3)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,4)
diff: 
delta:
   (53.5 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,4)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (8,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (6,2)
diff: 
delta:
   (57.4 bits)
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (8,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (6,2)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (3,4)
  _0: a rectangle with size (6,6) and color green and mask Full at (1,2)
diff:   ^.size.i
delta:
correct output grid

TEST b94a9452.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-110] Checking task b9b7f026.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 56618.0 = 56626.9
DL output with Mo: L = 9.0 + 417.9 = 426.9
DL input+output M: L = 17.9 + 57035.9 = 57053.9

# learning a model for train pairs
2.000	
1.772	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.244	OUT DEF: ^.color=^.layer_0.shape.color
1.016	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.813	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.661	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.579	OUT DEF: ^.size=(?,?)
0.414	OUT DEF: ^.size.i=1
0.248	OUT DEF: ^.size.j=1
0.179	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.178	IN  DEF: ^.layer_01.shape.mask=Full
0.176	IN  DEF: ^.layer_011.shape.mask=Full
0.175	IN  DEF: ^.layer_00.shape.mask=Full
0.170	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.170	IN  DEF: ^.color=black
0.169	IN  DEF: ^.size=(?,?)
0.168	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size ? and color ? and mask Full at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask Full at ?
  _011: a rectangle with size ? and color ? and mask Full at (?,?)
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 126.6 + 7721.9 = 7848.5
DL output with Mo: L = 12.7 + 0.0 = 12.7
DL input+output M: L = 139.3 + 7721.9 = 7861.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,13) and color black and layers
  _00: a rectangle with size (3,5) and color red and mask Full at (7,3)
  _0: a rectangle with size (4,3) and color pink and mask Border at (1,1)
  _010: a rectangle with size (3,4) and color cyan and mask Full at (11,8)
  _01: a rectangle with size (3,3) and color green and mask Full at (1,8)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (11,0)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (5,9)
diff: 
delta: (3,5)=1  (3,6)=1  (4,5)=1  (4,6)=1 
   (285.0 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _00: a rectangle with size (3,5) and color red and mask Full at (7,3)
  _0: a rectangle with size (3,4) and color cyan and mask Full at (11,8)
  _010: a rectangle with size (4,3) and color pink and mask Border at (1,1)
  _01: a rectangle with size (3,3) and color green and mask Full at (1,8)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (11,0)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (5,9)
diff: 
delta: (3,5)=1  (3,6)=1  (4,5)=1  (4,6)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,13) and color black and layers
  _00: a rectangle with size (3,5) and color red and mask Full at (7,3)
  _0: a rectangle with size (4,3) and color pink and mask Border at (1,1)
  _010: a rectangle with size (3,4) and color cyan and mask Full at (11,8)
  _01: a rectangle with size (3,3) and color green and mask Full at (1,8)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (11,0)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (5,9)
diff: 
delta: (3,5)=1  (3,6)=1  (4,5)=1  (4,6)=1 
correct output grid

TRAIN b9b7f026.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (6,4) and color orange and mask Full at (0,13)
  _0: a rectangle with size (7,4) and color grey and mask xxxx|xxxx|xxxx|x..x|x..x|xxxx|xxxx at (3,7)
  _010: a rectangle with size (4,5) and color yellow and mask Full at (11,10)
  _01: a rectangle with size (6,3) and color red and mask Full at (6,3)
  _011: a rectangle with size (3,5) and color cyan and mask Full at (2,0)
  _0111: a rectangle with size (2,2) and color black and mask Full at (6,8)
diff: 
delta:
   (238.0 bits)
data: a background with size (1,1) and color grey and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (6,4) and color orange and mask Full at (0,13)
  _0: a rectangle with size (7,4) and color grey and mask xxxx|xxxx|xxxx|x..x|x..x|xxxx|xxxx at (3,7)
  _010: a rectangle with size (4,5) and color yellow and mask Full at (11,10)
  _01: a rectangle with size (6,3) and color red and mask Full at (6,3)
  _011: a rectangle with size (3,5) and color cyan and mask Full at (2,0)
  _0111: a rectangle with size (2,2) and color black and mask Full at (6,8)
diff: 
delta:
correct output grid

TRAIN b9b7f026.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _0: a rectangle with size (5,3) and color red and mask Full at (9,6)
  _010: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _01: a rectangle with size (4,5) and color orange and mask Full at (9,11)
  _011: a rectangle with size (5,1) and color red and mask Full at (9,2)
  _0111: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
diff: 
delta:
   (249.2 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _0: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _010: a rectangle with size (5,3) and color red and mask Full at (9,6)
  _01: a rectangle with size (4,5) and color orange and mask Full at (9,11)
  _011: a rectangle with size (5,1) and color red and mask Full at (9,2)
  _0111: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _0: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _010: a rectangle with size (5,3) and color red and mask Full at (9,6)
  _01: a rectangle with size (4,5) and color orange and mask Full at (9,11)
  _011: a rectangle with size (5,1) and color red and mask Full at (9,2)
  _0111: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _0: a rectangle with size (5,3) and color red and mask Full at (9,6)
  _010: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _01: a rectangle with size (4,5) and color orange and mask Full at (9,11)
  _011: a rectangle with size (5,1) and color red and mask Full at (9,2)
  _0111: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
diff: 
delta:
correct output grid

TRAIN b9b7f026.json/3: 1 3rd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _00: a rectangle with size (6,8) and color red and mask Full at (1,0)
  _0: a rectangle with size (5,4) and color green and mask Full at (0,10)
  _010: a rectangle with size (4,4) and color yellow and mask Full at (6,9)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (9,4)
  _011: a rectangle with size (3,3) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (3,4) and color orange and mask Border at (11,10)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST b9b7f026.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.6 sec (4.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.61
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-109] Checking task ba26e723.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11849.0 = 11857.9
DL output with Mo: L = 9.0 + 19583.5 = 19592.4
DL input+output M: L = 17.9 + 31432.4 = 31450.4

# learning a model for train pairs
2.000	
1.366	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.252	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.211	OUT DEF: ^.size=^.size
1.183	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.160	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.143	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
1.121	OUT DEF: ^.layer_0.shape.mask=x.|xx|.x
1.078	OUT OBJECT at ^.layer_0110: a rectangle with size ? and color ? and mask ? at ?
1.055	OUT DEF: ^.layer_01.shape.mask=.x|xx|x.
1.039	OUT OBJECT at ^.layer_01101: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask x.|xx|.x at ?
  _01: a rectangle with size ? and color ? and mask .x|xx|x. at ?
  _0110: a rectangle with size ? and color ? and mask ? at ?
  _01101: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ^.layer_0.shape.color and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 4306.6 = 4335.5
DL output with Mo: L = 113.5 + 13082.7 = 13196.2
DL input+output M: L = 142.4 + 17389.3 = 17531.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color yellow and mask x.x.x.x.x.|xxxxxxxxxx|.x.x.x.x.x at (0,0)
diff: 
delta:
   (79.6 bits)
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,1)
  _0110: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01101: a rectangle with size (2,1) and color pink and mask Full at (0,6)
  _011: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,7)
diff: 
delta: (1,3)=6  (1,9)=6  (2,3)=6  (2,9)=6 
   (200.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color yellow and mask x.x.x.x.x.|xxxxxxxxxx|.x.x.x.x.x at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN ba26e723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask .x.x.x.x.x.|xxxxxxxxxxx|x.x.x.x.x.x at (0,0)
diff: 
delta:
   (83.3 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,1)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,4)
  _0110: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,7)
  _01101: a rectangle with size (2,1) and color pink and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (1,10)
diff: 
delta: (0,9)=6  (1,0)=6  (1,6)=6  (1,9)=6  (2,0)=6  (2,6)=6 
   (237.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask .x.x.x.x.x.|xxxxxxxxxxx|x.x.x.x.x.x at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN ba26e723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask x.x.x.x.x.x|xxxxxxxxxxx|.x.x.x.x.x. at (0,0)
diff: 
delta:
   (83.3 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,1)
  _0110: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,7)
  _01101: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,10)
diff: 
delta: (0,6)=6  (1,3)=6  (1,6)=6  (1,9)=6  (2,3)=6  (2,9)=6 
   (237.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask x.x.x.x.x.x|xxxxxxxxxxx|.x.x.x.x.x. at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN ba26e723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask x.x.x.x.x.x.x|xxxxxxxxxxxxx|.x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (90.5 bits)
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,1)
  _0110: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,7)
  _01101: a rectangle with size (2,7) and color pink and mask Full at (1,3)
  _011: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,10)
diff: 
delta: (0,0)=6  (0,6)=6  (0,12)=6  (1,0)=6  (1,6)=6  (1,12)=6  (2,4)=0  (2,6)=0  (2,8)=0 
   (309.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask x.x.x.x.x.x.x|xxxxxxxxxxxxx|.x.x.x.x.x.x. at (0,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN ba26e723.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (3,14) and color yellow and mask .x.x.x.x.x.x.x|xxxxxxxxxxxxxx|x.x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (94.0 bits)
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,1)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,10)
  _0110: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (0,4)
  _01101: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,7)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,13)
diff: 
delta: (0,3)=6  (0,9)=6  (1,0)=6  (1,3)=6  (1,6)=6  (1,9)=6  (1,12)=6  (2,0)=6  (2,6)=6  (2,12)=6 
   (323.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (3,14) and color yellow and mask .x.x.x.x.x.x.x|xxxxxxxxxxxxxx|x.x.x.x.x.x.x. at (0,0)
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN ba26e723.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color yellow and mask .x.x.x.x.x.x.x.x.|xxxxxxxxxxxxxxxxx|x.x.x.x.x.x.x.x.x at (0,0)
diff: 
delta:
! 35 wrong pixels (generated / expected)

TEST ba26e723.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.4 sec (27.4 sec/task)
bits-train-error = 13082.7 bits (13082.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-108] Checking task ba97ae07.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21426.0 = 21435.0
DL output with Mo: L = 9.0 + 21426.0 = 21435.0
DL input+output M: L = 17.9 + 42852.1 = 42870.0

# learning a model for train pairs
2.000	
1.451	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.975	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.603	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.265	OUT OBJECT at ^.layer_00: ^.layer_01.shape at ?
0.209	OUT DEF: ^.layer_0=^.layer_0
0.175	OUT DEF: ^.size=^.size
0.155	OUT DEF: ^.layer_00=^.layer_01
0.151	IN  DEF: ^.layer_0.shape.mask=Full
0.147	IN  DEF: ^.layer_01.shape.mask=Full
0.144	IN  DEF: ^.color=black
0.141	OUT DEF: ^.color=black
0.139	IN  DEF: ^.size=(?,?)
0.137	IN  DEF: ^.layer_0.pos=(?,?)
0.134	IN  DEF: ^.layer_0.shape.size=(?,?)
0.132	IN  DEF: ^.layer_01.pos=(?,?)
0.130	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 67.4 + 2698.2 = 2765.6
DL output with Mo: L = 17.1 + 0.0 = 17.1
DL input+output M: L = 84.5 + 2698.2 = 2782.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,13) and color green and mask Full at (3,0)
diff: 
delta:
   (78.1 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,13) and color green and mask Full at (3,0)
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,13) and color green and mask Full at (3,0)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
  _01: a rectangle with size (7,2) and color pink and mask Full at (0,2)
diff: 
delta:
   (66.4 bits)
data: a background with size (7,9) and color black and layers
  _00: a rectangle with size (7,2) and color pink and mask Full at (0,2)
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
  _01: a rectangle with size (7,2) and color pink and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
  _01: a rectangle with size (8,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (63.4 bits)
data: a background with size (8,7) and color black and layers
  _00: a rectangle with size (8,1) and color blue and mask Full at (0,2)
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
  _01: a rectangle with size (8,1) and color blue and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,6) and color red and mask Full at (4,0)
diff: 
delta:
   (62.0 bits)
data: a background with size (8,6) and color black and layers
  _00: a rectangle with size (1,6) and color red and mask Full at (4,0)
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,6) and color red and mask Full at (4,0)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,6) and color black and layers
  _0: a rectangle with size (11,2) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (2,6) and color grey and mask Full at (2,0)
diff: 
delta:
correct output grid

TEST ba97ae07.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-107] Checking task bb43febb.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16125.5 = 16134.5
DL output with Mo: L = 9.0 + 16125.5 = 16134.5
DL input+output M: L = 17.9 + 32251.0 = 32268.9

# learning a model for train pairs
2.000	
1.394	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.008	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.722	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.476	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.264	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.234	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.210	OUT DEF: ^.size=^.size
0.197	OUT DEF: ^.layer_0=^.layer_0
0.183	OUT DEF: ^.layer_01=^.layer_01
0.178	OUT DEF: ^.layer_00.shape.color=red
0.172	OUT DEF: ^.layer_010.shape.color=red
0.166	IN  DEF: ^.layer_0.shape.color=grey
0.161	IN  DEF: ^.layer_01.shape.color=grey
0.158	IN  DEF: ^.layer_0.shape.mask=Full
0.155	IN  DEF: ^.layer_01.shape.mask=Full
0.152	OUT DEF: ^.layer_00.shape.mask=Full
0.149	OUT DEF: ^.layer_010.shape.mask=Full
0.147	OUT DEF: ^.color=black
0.145	IN  DEF: ^.color=black
0.144	OUT DEF: ^.layer_00.pos=(?,?)
0.139	OUT DEF: ^.layer_00.pos.i=^.layer_0.pos.i + 1
0.134	OUT DEF: ^.layer_00.pos.j=^.layer_0.pos.j + 1
0.132	IN  DEF: ^.size=(?,?)
0.122	IN  DEF: ^.size.i=10
0.111	IN  DEF: ^.size.j=10
0.109	IN  DEF: ^.layer_0.pos=(?,?)
0.108	OUT DEF: ^.layer_00.shape.size=(?,?)
0.101	OUT DEF: ^.layer_00.shape.size.j=^.layer_0.shape.size.j - 2
0.095	OUT DEF: ^.layer_00.shape.size.i=3
0.093	OUT DEF: ^.layer_010.pos=(?,?)
0.088	OUT DEF: ^.layer_010.pos.i=^.layer_01.pos.i + 1
0.083	OUT DEF: ^.layer_010.pos.j=^.layer_01.pos.j + 1
0.082	OUT DEF: ^.layer_010.shape.size=(?,?)
0.078	OUT DEF: ^.layer_010.shape.size.j=^.layer_01.shape.size.j - 2
0.074	OUT DEF: ^.layer_010.shape.size.i=^.layer_0.pos.i
0.072	IN  DEF: ^.layer_0.shape.size=(?,?)
0.064	IN  DEF: ^.layer_0.shape.size.i=5
0.063	IN  DEF: ^.layer_01.pos=(?,?)
0.061	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (3,^.layer_0.shape.size.j - 2) and color red and mask Full at (^.layer_0.pos.i + 1,^.layer_0.pos.j + 1)
  _0: ^.layer_0
  _010: a rectangle with size (^.layer_0.pos.i,^.layer_01.shape.size.j - 2) and color red and mask Full at (^.layer_01.pos.i + 1,^.layer_01.pos.j + 1)
  _01: ^.layer_01
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 84.9 + 758.8 = 843.7
DL output with Mo: L = 146.7 + 0.0 = 146.7
DL input+output M: L = 231.7 + 758.8 = 990.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
   (37.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (3,1)
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _010: a rectangle with size (2,1) and color red and mask Full at (4,7)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
correct output grid

TRAIN bb43febb.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
   (38.5 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,4) and color red and mask Full at (2,2)
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _010: a rectangle with size (1,3) and color red and mask Full at (8,5)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
correct output grid

TRAIN bb43febb.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,7) and color grey and mask Full at (4,3)
  _01: a rectangle with size (3,6) and color grey and mask Full at (0,0)
diff:   ^.layer_0.shape.size.i
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color grey and mask Full at (0,0)
  _01: a rectangle with size (6,7) and color grey and mask Full at (4,3)
diff:   ^.layer_0.shape.size.i
delta:
! 28 wrong pixels (generated / expected)

TEST bb43febb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-106] Checking task bbc9ae5d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2222.9 = 2231.9
DL output with Mo: L = 9.0 + 10511.2 = 10520.1
DL input+output M: L = 17.9 + 12734.1 = 12752.0

# learning a model for train pairs
2.000	
1.300	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.088	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.036	IN  DEF: ^.layer_0.shape.mask=Full
1.002	IN  DEF: ^.color=black
0.975	IN  DEF: ^.size=(?,?)
0.922	IN  DEF: ^.size.i=1
0.895	IN  DEF: ^.layer_0.pos=(?,?)
0.802	IN  DEF: ^.layer_0.pos.j=(0)
0.772	IN  DEF: ^.layer_0.pos.i=0
0.744	IN  DEF: ^.layer_0.shape.size=(?,?)
0.692	IN  DEF: ^.layer_0.shape.size.i=1
0.686	OUT DEF: ^.size=(?,?)
0.648	OUT DEF: ^.size.j=^.size.j
0.643	OUT DEF: ^.layer_0.pos=(?,?)
0.628	OUT DEF: ^.layer_0.pos.i=(0)
0.622	OUT DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.size.j) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),?)
WHERE (Mi)
a background with size (1,?) and color black and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at (0,(0))

DL input  with Mi: L = 36.5 + 837.6 = 874.1
DL output with Mo: L = 44.3 + 2377.5 = 2421.8
DL input+output M: L = 80.8 + 3215.1 = 3295.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta:
   (16.5 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask xx..|xxx.|xxxx at (0,0)
diff: 
delta:
   (42.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x6 instead of 3x6

TRAIN bbc9ae5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (1,8) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (15.3 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x...|xx..|xxx.|xxxx at (0,0)
diff: 
delta:
   (48.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,8) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x8 instead of 4x8

TRAIN bbc9ae5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (1,10) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (19.1 bits)
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,7) and color grey and mask xxx....|xxxx...|xxxxx..|xxxxxx.|xxxxxxx at (0,0)
diff: 
delta:
   (70.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,10) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 5x10

TRAIN bbc9ae5d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (0,0)
diff: 
delta:
   (18.5 bits)
data: a background with size (3,6) and color cyan and layers
  _0: a rectangle with size (2,2) and color black and mask xx|.x at (0,4)
diff: 
delta:
   (37.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x6 instead of 3x6

TRAIN bbc9ae5d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta:
   (14.5 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x..|xx.|xxx at (0,0)
diff: 
delta:
   (38.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x6 instead of 3x6

TRAIN bbc9ae5d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x12 instead of 6x12

TEST bbc9ae5d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 2377.5 bits (2377.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-105] Checking task bc1d5164.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7793.4 = 7802.4
DL output with Mo: L = 9.0 + 3781.5 = 3790.5
DL input+output M: L = 17.9 + 11574.9 = 11592.8

# learning a model for train pairs
2.000	
1.669	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.557	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.492	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.457	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.410	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.393	OUT DEF: ^.size=(?,?)
1.322	OUT DEF: ^.size.i=3
1.250	OUT DEF: ^.size.j=3
1.234	OUT DEF: ^.layer_0.shape.size=(?,?)
1.162	OUT DEF: ^.layer_0.shape.size.j=3
1.095	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j + 1
1.085	IN  DEF: ^.color=black
1.077	IN  DEF: ^.size=(?,?)
1.027	IN  DEF: ^.size.j=7
0.983	IN  DEF: ^.size.i=5
0.975	IN  DEF: ^.layer_01.pos=(?,?)
0.967	IN  DEF: ^.layer_00.pos=(?,?)
0.941	IN  DEF: ^.layer_00.pos.j=5
0.933	IN  DEF: ^.layer_00.shape.size=(?,?)
0.885	IN  DEF: ^.layer_00.shape.size.j=2
0.877	IN  DEF: ^.layer_0.pos=(?,?)
0.851	IN  DEF: ^.layer_0.pos.j=(0)
0.827	IN  DEF: ^.layer_0.pos.i=0
0.820	IN  DEF: ^.layer_0.shape.size=(?,?)
0.812	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.j + 1,3) and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (5,7) and color black and layers
  _00: a rectangle with size (?,2) and color ? and mask ? at (?,5)
  _0: a rectangle with size (?,?) and color ? and mask ? at (0,(0))
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 108.3 + 4171.2 = 4279.5
DL output with Mo: L = 54.3 + 943.1 = 997.5
DL input+output M: L = 162.6 + 5114.3 = 5276.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask x.|xx at (0,5)
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,0)
diff: 
delta: (3,5)=8  (3,6)=8  (4,5)=8 
   (124.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (18.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (5,2) and color cyan and mask Full at (0,5)
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,0)
diff: 
delta: (0,6)=0  (2,5)=0  (2,6)=0  (4,6)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (5,2) and color cyan and mask Full at (0,5)
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,0)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (0,0)
diff:   ^.layer_0.pos.i
delta: (0,6)=0  (2,5)=0  (2,6)=0  (4,6)=0 
! 5 wrong pixels (generated / expected)

TRAIN bc1d5164.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask xx|.x at (0,5)
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (3,0)
diff: 
delta: (3,5)=2  (4,6)=2 
   (98.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.xx|x.x at (0,0)
diff: 
delta:
   (18.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask xx|.x at (0,5)
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (3,0)
diff: 
delta: (3,5)=2  (4,6)=2 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,0)
diff: 
delta: (4,6)=4 
   (72.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (0,0)
diff: 
delta:
   (18.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,0)
diff: 
delta: (4,6)=4 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (4,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
diff:   ^.layer_0.pos.i
delta: (4,6)=4 
! 6 wrong pixels (generated / expected)

TRAIN bc1d5164.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,6)
diff: 
delta: (4,0)=4 
   (63.3 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color black and mask .x.|xxx at (0,0)
diff: 
delta:
   (21.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,6)
diff: 
delta: (4,0)=4 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (4,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff:   ^.layer_0.pos.i
delta: (0,6)=4 
! 5 wrong pixels (generated / expected)

TRAIN bc1d5164.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,5)
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,6)
diff: 
delta:
   (58.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,0)
diff: 
delta:
   (18.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,5)
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,6)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,5)
  _0: a rectangle with size (1,1) and color green and mask Full at (4,6)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
diff:   ^.layer_0.pos.j  ^.layer_0.pos.i
delta:
! 4 wrong pixels (generated / expected)

TRAIN bc1d5164.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color blue and mask Full at (0,5)
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,1)
diff:   ^.layer_0.pos.i
delta: (4,6)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color blue and mask Full at (0,5)
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff:   ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (4,6)=1 
! 5 wrong pixels (generated / expected)

TEST bc1d5164.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.7 sec (7.7 sec/task)
bits-train-error = 943.1 bits (943.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-104] Checking task bd4472b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3708.4 = 3717.4
DL output with Mo: L = 9.0 + 10350.8 = 10359.8
DL input+output M: L = 17.9 + 14059.2 = 14077.1

# learning a model for train pairs
2.000	
1.780	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.656	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.579	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.502	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.437	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.390	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.346	OUT DEF: ^.size=^.size
1.313	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.277	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.250	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size
1.224	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size
1.199	OUT DEF: ^.layer_0=^.layer_0
1.184	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
1.174	OUT OBJECT at ^.layer_0111111: ^.layer_01.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ?
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
  _0111111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?

DL input  with Mi: L = 53.5 + 2584.1 = 2637.6
DL output with Mo: L = 116.6 + 4698.2 = 4814.8
DL input+output M: L = 170.1 + 7282.3 = 7452.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color blue at (0,1)
diff: 
delta: (0,2)=4 
   (86.5 bits)
data: a background with size (8,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (3,0)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,0)
  _0111: a rectangle with size (4,3) and color red and mask Full at (2,0)
  _01111: a rectangle with size (1,3) and color blue and mask Full at (6,0)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _0111111: a point with color red at (0,0)
diff: 
delta:
   (122.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color blue at (0,1)
diff: 
delta: (0,2)=4 
! 21 wrong pixels (generated / expected)

TRAIN bd4472b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=1  (0,3)=4 
   (110.5 bits)
data: a background with size (10,4) and color yellow and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,0)
  _011: a rectangle with size (1,4) and color red and mask Full at (3,0)
  _0111: a rectangle with size (1,4) and color blue and mask Full at (4,0)
  _01111: a rectangle with size (1,4) and color green and mask Full at (6,0)
  _011111: a rectangle with size (1,4) and color red and mask Full at (7,0)
  _0111111: a point with color green at (0,0)
diff: 
delta: (0,1)=2  (0,2)=1  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=1 
   (239.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=1  (0,3)=4 
! 36 wrong pixels (generated / expected)

TRAIN bd4472b8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (0,1)
diff: 
delta:
   (61.5 bits)
data: a background with size (6,2) and color cyan and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _0111: a rectangle with size (1,2) and color green and mask Full at (5,0)
  _01111: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _011111: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _0111111: a point with color cyan at (4,0)
diff: 
delta:
   (108.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (0,1)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,2) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask Full at (2,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (0,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN bd4472b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (1,0)
  _01: a point with color blue at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=8 
! 55 wrong pixels (generated / expected)

TEST bd4472b8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.2 sec (24.2 sec/task)
bits-train-error = 4698.2 bits (4698.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-103] Checking task bda2d7a6.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12360.7 = 12369.6
DL output with Mo: L = 9.0 + 12360.7 = 12369.6
DL input+output M: L = 17.9 + 24721.3 = 24739.3

# learning a model for train pairs
2.000	
1.436	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.874	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.642	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.439	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.398	OUT DEF: ^.size=^.size
0.361	IN  DEF: ^.layer_0.shape.mask=Border
0.332	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.303	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.280	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.257	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.243	OUT DEF: ^.color=^.layer_01.shape.color
0.231	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.220	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.209	OUT DEF: ^.layer_0.shape.color=^.color
0.201	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.199	IN  DEF: ^.layer_0.pos=(?,?)
0.189	IN  DEF: ^.layer_0.pos.i=1
0.179	IN  DEF: ^.layer_0.pos.j=1
0.177	IN  DEF: ^.size=(?,?)
0.174	IN  DEF: ^.layer_0.shape.size=(?,?)
0.171	IN  DEF: ^.layer_01.pos=(?,?)
0.161	IN  DEF: ^.layer_01.pos.i=2
0.152	IN  DEF: ^.layer_01.pos.j=2
0.149	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_01.shape.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_0.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (1,1)
  _01: a rectangle with size (?,?) and color ? and mask ? at (2,2)

DL input  with Mi: L = 84.2 + 1713.5 = 1797.7
DL output with Mo: L = 44.2 + 0.0 = 44.2
DL input+output M: L = 128.3 + 1713.5 = 1841.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (4,4) and color red and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,2)
diff: 
delta:
   (55.8 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (4,4) and color red and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,2)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Full at (2,2)
diff: 
delta:
   (49.3 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (4,4) and color black and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color orange and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Full at (2,2)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (6,6) and color black and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,2)
diff: 
delta:
   (66.2 bits)
data: a background with size (8,8) and color grey and layers
  _0: a rectangle with size (6,6) and color cyan and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Border at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (6,6) and color black and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,2)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color brown and layers
  _0: a rectangle with size (4,4) and color black and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta:
correct output grid

TEST bda2d7a6.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color pink and mask Border at (2,2)
diff: 
delta:
correct output grid

TEST bda2d7a6.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-102] Checking task bdad9b1f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1842.0 = 1851.0
DL output with Mo: L = 9.0 + 4331.8 = 4340.8
DL input+output M: L = 17.9 + 6173.8 = 6191.8

# learning a model for train pairs
2.000	
1.722	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.433	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.312	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.171	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.096	OUT DEF: ^.size=^.size
1.054	OUT DEF: ^.layer_01.pos=^.layer_01.pos
1.031	OUT OBJECT at ^.layer_00: a point with color ? at ?
1.009	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.960	IN  DEF: ^.layer_0.shape.color=red
0.934	IN  DEF: ^.layer_0.shape.mask=Full
0.913	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.863	IN  DEF: ^.layer_01.shape.color=cyan
0.837	IN  DEF: ^.layer_01.shape.mask=Full
0.816	OUT DEF: ^.layer_00.shape.color=yellow
0.800	IN  DEF: ^.color=black
0.788	IN  DEF: ^.layer_0.pos=(?,?)
0.776	IN  DEF: ^.size=(?,?)
0.697	IN  DEF: ^.size.i=6
0.619	IN  DEF: ^.size.j=6
0.607	IN  DEF: ^.layer_0.shape.size=(?,?)
0.561	IN  DEF: ^.layer_0.shape.size.j=2
0.535	IN  DEF: ^.layer_0.shape.size.i=1
0.523	IN  DEF: ^.layer_01.pos=(?,?)
0.481	IN  DEF: ^.layer_01.pos.i=(0)
0.470	IN  DEF: ^.layer_01.shape.size=(?,?)
0.423	IN  DEF: ^.layer_01.shape.size.i=2
0.398	IN  DEF: ^.layer_01.shape.size.j=1
0.387	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.376	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.369	OUT DEF: ^.color=black
0.364	OUT DEF: ^.layer_00.pos=(?,?)
0.346	OUT DEF: ^.layer_00.pos.i=^.layer_0.pos.i
0.329	OUT DEF: ^.layer_00.pos.j=^.layer_01.pos.j
0.324	OUT DEF: ^.layer_0.pos=(?,?)
0.306	OUT DEF: ^.layer_0.pos.j=(0)
0.288	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.283	OUT DEF: ^.layer_0.shape.size=(?,?)
0.249	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.238	OUT DEF: ^.layer_0.shape.size.i=1
0.233	OUT DEF: ^.layer_01.shape.size=(?,?)
0.199	OUT DEF: ^.layer_01.shape.size.i=^.size.i
0.188	OUT DEF: ^.layer_01.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color yellow at (^.layer_0.pos.i,^.layer_01.pos.j)
  _0: a rectangle with size (1,^.size.j) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (^.layer_0.pos.i,(0))
  _01: a rectangle with size (^.size.i,1) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (?,?)
  _01: a rectangle with size (2,1) and color cyan and mask Full at ((0),?)

DL input  with Mi: L = 78.8 + 234.4 = 313.3
DL output with Mo: L = 82.3 + 0.0 = 82.3
DL input+output M: L = 161.1 + 234.4 = 395.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,4)
diff: 
delta:
   (11.7 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (2,4)
  _0: a rectangle with size (1,6) and color red and mask Full at (2,0)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (0,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,4)
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (11.7 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (3,1)
  _0: a rectangle with size (1,6) and color red and mask Full at (3,0)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,3)
diff: 
delta:
correct output grid

TEST bdad9b1f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 6.2 sec (6.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-101] Checking task be94b721.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12645.7 = 12654.6
DL output with Mo: L = 9.0 + 2515.9 = 2524.8
DL input+output M: L = 17.9 + 15161.5 = 15179.5

# learning a model for train pairs
2.000	
1.697	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.064	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.867	OUT DEF: ^.size=^.layer_0.shape.size
0.692	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.583	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.564	OUT DEF: ^.layer_0.pos=(?,?)
0.514	OUT DEF: ^.layer_0.pos.i=(0)
0.471	OUT DEF: ^.layer_0.pos.j=(0)
0.466	IN  DEF: ^.color=black
0.462	IN  DEF: ^.layer_0.pos=(?,?)
0.450	IN  DEF: ^.layer_0.pos.i=1
0.446	IN  DEF: ^.size=(?,?)
0.442	IN  DEF: ^.layer_0.shape.size=(?,?)
0.439	IN  DEF: ^.layer_01.pos=(?,?)
0.426	IN  DEF: ^.layer_01.pos.i=1
0.423	IN  DEF: ^.layer_011.pos=(?,?)
0.419	IN  DEF: ^.layer_01.shape.size=(?,?)
0.415	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: ^.layer_0.shape at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (1,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (1,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 103.2 + 4400.1 = 4503.3
DL output with Mo: L = 25.8 + 123.4 = 149.2
DL input+output M: L = 129.0 + 4523.5 = 4652.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (1,1)
  _01: a rectangle with size (2,2) and color green and mask xx|.x at (1,5)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xx.|xxx at (2,8)
diff: 
delta:
   (116.4 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (0,0)
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (1,1)
  _01: a rectangle with size (2,2) and color green and mask xx|.x at (1,5)
  _011: a rectangle with size (3,3) and color blue and mask .x.|xx.|xxx at (2,8)
diff: 
delta:
correct output grid

TRAIN be94b721.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (1,4)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|.x. at (1,0)
  _011: a rectangle with size (2,2) and color pink and mask xx|.x at (0,7)
diff: 
delta:
   (98.3 bits)
data: a background with size (3,2) and color brown and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (0,0)
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (1,4)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|.x. at (1,0)
  _011: a rectangle with size (2,2) and color pink and mask xx|.x at (0,7)
diff: 
delta:
correct output grid

TRAIN be94b721.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (1,1)
  _01: a rectangle with size (4,2) and color orange and mask xx|.x|.x|.x at (1,8)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
diff: 
delta:
   (116.4 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (0,0)
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (1,1)
  _01: a rectangle with size (4,2) and color orange and mask xx|.x|.x|.x at (1,8)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
diff: 
delta:
correct output grid

TRAIN be94b721.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (1,6)
  _01: a rectangle with size (3,2) and color orange and mask x.|xx|.x at (1,3)
  _011: a rectangle with size (2,3) and color cyan and mask xxx|.x. at (4,0)
diff: 
delta:
   (108.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (0,0)
diff: 
delta:
   (1.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (1,6)
  _01: a rectangle with size (3,2) and color orange and mask x.|xx|.x at (1,3)
  _011: a rectangle with size (2,3) and color cyan and mask xxx|.x. at (4,0)
diff: 
delta:
correct output grid

TRAIN be94b721.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask xxx|xxx|x.x|x.x at (2,3)
  _01: a rectangle with size (3,3) and color pink and mask .xx|xxx|xx. at (6,6)
  _011: a rectangle with size (2,3) and color grey and mask xxx|xx. at (7,1)
diff:   ^.layer_01.pos.i  ^.layer_0.pos.i
delta: (1,0)=4  (2,0)=4  (2,1)=4  (3,1)=4 
correct output grid

TEST be94b721.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 123.4 bits (123.4 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-100] Checking task beb8660c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8571.1 = 8580.1
DL output with Mo: L = 9.0 + 8571.1 = 8580.1
DL input+output M: L = 17.9 + 17142.2 = 17160.1

# learning a model for train pairs
2.000	
1.797	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.595	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.394	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.254	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.110	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
1.025	IN  OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
0.946	OUT OBJECT at ^.layer_001: ^.layer_001.shape at ?
0.893	OUT DEF: ^.size=^.size
0.862	OUT DEF: ^.layer_00=^.layer_00
0.835	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.819	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.803	IN  DEF: ^.layer_00.shape.color=cyan
0.794	OUT DEF: ^.layer_0.shape.mask=Full
0.786	IN  DEF: ^.layer_00.shape.mask=Full
0.778	IN  DEF: ^.layer_001.shape.mask=Full
0.770	IN  DEF: ^.layer_01.shape.mask=Full
0.764	OUT DEF: ^.color=black
0.759	IN  DEF: ^.color=black
0.754	IN  DEF: ^.layer_0.shape.mask=Full
0.747	IN  DEF: ^.layer_00.pos=(?,?)
0.735	IN  DEF: ^.layer_00.pos.j=(0)
0.731	OUT DEF: ^.layer_001.pos=(?,?)
0.719	OUT DEF: ^.layer_001.pos.i=^.layer_00.pos.i - 1
0.707	OUT DEF: ^.layer_001.pos.j=^.layer_001.shape.size.i
0.703	OUT DEF: ^.layer_0.pos=(?,?)
0.691	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i - ^.layer_0.pos.j
0.679	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j
0.675	OUT DEF: ^.layer_0.shape.size=(?,?)
0.667	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.663	OUT DEF: ^.layer_01.pos=(?,?)
0.651	OUT DEF: ^.layer_01.pos.i=^.layer_00.pos.i - 2
0.640	OUT DEF: ^.layer_01.pos.j=^.layer_00.pos.j + 2
0.636	IN  DEF: ^.size=(?,?)
0.632	IN  DEF: ^.layer_00.shape.size=(?,?)
0.624	IN  DEF: ^.layer_00.shape.size.i=1
0.620	IN  DEF: ^.layer_001.pos=(?,?)
0.616	IN  DEF: ^.layer_001.shape.size=(?,?)
0.612	IN  DEF: ^.layer_0.pos=(?,?)
0.608	IN  DEF: ^.layer_0.shape.size=(?,?)
0.600	IN  DEF: ^.layer_001.shape.size.i=1
0.595	IN  DEF: ^.layer_01.pos=(?,?)
0.587	IN  DEF: ^.layer_0.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _001: ^.layer_001.shape at (^.layer_00.pos.i - 1,^.layer_001.shape.size.i)
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_01.shape.color and mask Full at (^.layer_0.pos.i - ^.layer_0.pos.j,^.layer_01.pos.j)
  _01: ^.layer_0.shape at (^.layer_00.pos.i - 2,^.layer_00.pos.j + 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (1,?) and color cyan and mask Full at (?,(0))
  _001: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size ? and color ? and mask Full at (?,?)

DL input  with Mi: L = 115.4 + 3502.1 = 3617.5
DL output with Mo: L = 132.1 + 1288.8 = 1420.9
DL input+output M: L = 247.6 + 4790.9 = 5038.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,7) and color black and layers
  _00: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _001: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _0: a rectangle with size (1,5) and color pink and mask Full at (6,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (7,3)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1 
   (210.1 bits)
data: a background with size (10,7) and color black and layers
  _00: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _001: a rectangle with size (1,6) and color grey and mask Full at (8,1)
  _0: a rectangle with size (1,4) and color yellow and mask Full at (6,3)
  _01: a rectangle with size (1,5) and color pink and mask Full at (7,2)
diff: 
delta: (3,6)=3  (4,5)=2  (4,6)=2  (5,4)=1  (5,5)=1  (5,6)=1 
   (122.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,7) and color black and layers
  _00: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _001: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _0: a rectangle with size (1,5) and color pink and mask Full at (6,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (7,3)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,7) and color black and layers
  _00: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _001: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _0: a rectangle with size (1,4) and color yellow and mask Full at (7,3)
  _01: a rectangle with size (1,5) and color pink and mask Full at (6,0)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,7) and color black and layers
  _00: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _001: a rectangle with size (1,5) and color pink and mask Full at (6,0)
  _0: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (7,3)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1 
! 23 wrong pixels (generated / expected)

TRAIN beb8660c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,4) and color black and layers
  _00: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _001: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _0: a rectangle with size (1,2) and color green and mask Full at (4,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
diff: 
delta:
   (76.8 bits)
data: a background with size (7,4) and color black and layers
  _00: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _001: a rectangle with size (1,3) and color red and mask Full at (5,1)
  _0: a rectangle with size (1,1) and color blue and mask Full at (3,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (4,2)
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,4) and color black and layers
  _00: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _001: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _0: a rectangle with size (1,2) and color green and mask Full at (4,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
diff: 
delta:
correct output grid

TRAIN beb8660c.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _001: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color black and mask Full at (1,0)
diff: 
delta:
   (63.4 bits)
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _001: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _0: a rectangle with size (1,2) and color black and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (4.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _001: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color black and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN beb8660c.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,8) and color black and layers
  _00: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _001: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _0: a rectangle with size (1,6) and color green and mask Full at (7,2)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (3,1)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (4,5)=7# (4,6)=7# (8,1)=9#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,8) and color black and layers
  _00: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _001: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _0: a rectangle with size (1,5) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,6) and color green and mask Full at (7,2)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (4,5)=7# (4,6)=7# (8,1)=9#
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,8) and color black and layers
  _00: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _001: a rectangle with size (1,6) and color green and mask Full at (7,2)
  _0: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (3,1)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (4,5)=7# (4,6)=7# (8,1)=9#
! 30 wrong pixels (generated / expected)

TEST beb8660c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.0 sec (15.0 sec/task)
bits-train-error = 1288.8 bits (1288.8 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-99] Checking task c0f76784.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20381.9 = 20390.8
DL output with Mo: L = 9.0 + 28374.7 = 28383.6
DL input+output M: L = 17.9 + 48756.5 = 48774.5

# learning a model for train pairs
2.000	
1.594	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.276	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.978	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.743	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.589	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.477	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.369	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.322	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
0.301	OUT DEF: ^.size=^.size
0.289	OUT DEF: ^.layer_0=^.layer_0
0.277	OUT DEF: ^.layer_010=^.layer_010
0.265	OUT DEF: ^.layer_01=^.layer_01
0.258	IN  DEF: ^.layer_0.shape.color=grey
0.251	IN  DEF: ^.layer_010.shape.color=grey
0.245	IN  DEF: ^.layer_0.shape.mask=Border
0.240	OUT DEF: ^.layer_011.shape.color=cyan
0.233	IN  DEF: ^.layer_01.shape.color=grey
0.226	IN  DEF: ^.layer_01.shape.mask=Border
0.221	OUT DEF: ^.layer_0111.shape.color=orange
0.219	OUT DEF: ^.layer_011.shape.mask=Full
0.216	OUT DEF: ^.layer_0111.shape.mask=Full
0.214	IN  DEF: ^.color=black
0.212	IN  DEF: ^.size=(?,?)
0.199	IN  DEF: ^.size.i=12
0.185	IN  DEF: ^.size.j=12
0.183	IN  DEF: ^.layer_0.pos=(?,?)
0.182	IN  DEF: ^.layer_0.shape.size=(?,?)
0.172	IN  DEF: ^.layer_0.shape.size.i=5
0.161	IN  DEF: ^.layer_0.shape.size.j=5
0.160	IN  DEF: ^.layer_010.pos=(?,?)
0.158	IN  DEF: ^.layer_010.shape.size=(?,?)
0.149	IN  DEF: ^.layer_010.shape.size.j=4
0.147	IN  DEF: ^.layer_01.pos=(?,?)
0.145	IN  DEF: ^.layer_01.shape.size=(?,?)
0.144	OUT DEF: ^.color=black
0.143	OUT DEF: ^.layer_011.pos=(?,?)
0.138	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i + 1
0.133	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j + 1
0.132	OUT DEF: ^.layer_011.shape.size=(?,?)
0.126	OUT DEF: ^.layer_011.shape.size.i=3
0.120	OUT DEF: ^.layer_011.shape.size.j=3
0.119	OUT DEF: ^.layer_0111.pos=(?,?)
0.114	OUT DEF: ^.layer_0111.pos.i=^.layer_010.pos.i + 1
0.110	OUT DEF: ^.layer_0111.pos.j=^.layer_010.pos.j + 1
0.108	OUT DEF: ^.layer_0111.shape.size=(?,?)
0.104	OUT DEF: ^.layer_0111.shape.size.i=2
0.099	OUT DEF: ^.layer_0111.shape.size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: ^.layer_01
  _011: a rectangle with size (3,3) and color cyan and mask Full at (^.layer_0.pos.i + 1,^.layer_0.pos.j + 1)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (^.layer_010.pos.i + 1,^.layer_010.pos.j + 1)
WHERE (Mi)
a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (?,?)
  _010: a rectangle with size (?,4) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Border at (?,?)

DL input  with Mi: L = 126.6 + 1495.1 = 1621.7
DL output with Mo: L = 135.3 + 428.5 = 563.8
DL input+output M: L = 262.0 + 1923.6 = 2185.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
diff: 
delta:
   (51.4 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (1,8)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (7,7)
diff: 
delta: (3,3)=6 
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (3,3) and color grey and mask Border at (2,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (6,6)
diff:   ^.layer_010.shape.size.j
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color grey and mask Full at (2,2)
diff:   ^.layer_01.shape.mask
delta: (3,3)=0 
! 1 wrong pixels (generated / expected)

TRAIN c0f76784.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask Border at (7,1)
diff: 
delta:
   (51.4 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask Border at (7,1)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (5,7)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (1,2)
diff: 
delta: (8,2)=6 
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask Border at (7,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (3,3) and color grey and mask Border at (7,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,1)
diff:   ^.layer_010.shape.size.j
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Border at (7,1)
  _010: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _01: a rectangle with size (5,5) and color grey and mask Border at (4,6)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i
delta:
! 15 wrong pixels (generated / expected)

TRAIN c0f76784.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _01: a rectangle with size (4,4) and color grey and mask Border at (7,4)
diff: 
delta:
   (46.7 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _01: a rectangle with size (4,4) and color grey and mask Border at (7,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (8,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _01: a rectangle with size (4,4) and color grey and mask Border at (7,4)
diff: 
delta:
correct output grid

TRAIN c0f76784.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (4,4) and color grey and mask Border at (8,4)
  _01: a rectangle with size (3,3) and color grey and mask Border at (4,8)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (3,3) and color grey and mask Border at (4,8)
  _01: a rectangle with size (4,4) and color grey and mask Border at (8,4)
diff:   ^.layer_010.shape.size.j
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Border at (4,8)
  _010: a rectangle with size (4,4) and color grey and mask Border at (8,4)
  _01: a rectangle with size (5,5) and color grey and mask Border at (1,1)
diff:   ^.layer_0.shape.size.j  ^.layer_0.shape.size.i
delta:
! 15 wrong pixels (generated / expected)

TEST c0f76784.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.0 sec (15.0 sec/task)
bits-train-error = 428.5 bits (428.5 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-98] Checking task c1d99e64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 54593.7 = 54602.7
DL output with Mo: L = 9.0 + 54593.7 = 54602.7
DL input+output M: L = 17.9 + 109187.4 = 109205.4

# learning a model for train pairs
2.000	
1.786	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.614	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.269	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.119	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.061	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.013	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.766	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.625	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.525	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_0.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_01.shape at ?
  _011: ^.layer_011.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 14946.4 = 15031.7
DL output with Mo: L = 76.6 + 13546.2 = 13622.8
DL input+output M: L = 161.9 + 28492.6 = 28654.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (8,10) and color blue and mask xx.x.x.xxx|.xxxxxx.xx|x...x.x.x.|xxxxxxxxxx|xxxxxxxxxx|..x.xx...x|xxxxxxx.x.|x.xxx.xxxx at (0,9)
  _01: a rectangle with size (8,8) and color blue and mask x...xxxx|x.x.xxxx|xxxx..xx|x.xxxxxx|x.xx.xxx|xx.x.xx.|x..xx.x.|xx..xxxx at (0,0)
  _011: a rectangle with size (3,7) and color blue and mask xxxxxxx|..x.x.x|...xxxx at (9,12)
  _0111: a rectangle with size (3,3) and color blue and mask xxx|xx.|x.x at (9,0)
diff: 
delta: (9,5)=1  (9,6)=1  (9,7)=1  (9,9)=1  (10,4)=1  (10,5)=1  (10,9)=1  (10,10)=1  (11,4)=1  (11,7)=1  (11,9)=1  (11,10)=1  (11,11)=1  (11,12)=1 
   (627.7 bits)
data: a background with size (12,19) and color black and layers
  _00: a rectangle with size (8,10) and color blue and mask xx.x.x.xxx|.xxxxxx.xx|x...x.x.x.|xxxxxxxxxx|xxxxxxxxxx|..x.xx...x|xxxxxxx.x.|x.xxx.xxxx at (0,9)
  _0: a rectangle with size (1,19) and color red and mask Full at (8,0)
  _01: a rectangle with size (8,8) and color blue and mask x...xxxx|x.x.xxxx|xxxx..xx|x.xxxxxx|x.xx.xxx|xx.x.xx.|x..xx.x.|xx..xxxx at (0,0)
  _011: a rectangle with size (3,7) and color blue and mask xxxxxxx|..x.x.x|...xxxx at (9,12)
  _0111: a rectangle with size (12,1) and color red and mask Full at (0,8)
diff: 
delta: (9,0)=1  (9,1)=1  (9,2)=1  (9,5)=1  (9,6)=1  (9,7)=1  (9,9)=1  (10,0)=1  (10,1)=1  (10,4)=1  (10,5)=1  (10,9)=1  (10,10)=1  (11,0)=1  (11,2)=1  (11,4)=1  (11,7)=1  (11,9)=1  (11,10)=1  (11,11)=1  (11,12)=1 
   (554.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (8,10) and color blue and mask xx.x.x.xxx|.xxxxxx.xx|x...x.x.x.|xxxxxxxxxx|xxxxxxxxxx|..x.xx...x|xxxxxxx.x.|x.xxx.xxxx at (0,9)
  _01: a rectangle with size (8,8) and color blue and mask x...xxxx|x.x.xxxx|xxxx..xx|x.xxxxxx|x.xx.xxx|xx.x.xx.|x..xx.x.|xx..xxxx at (0,0)
  _011: a rectangle with size (3,7) and color blue and mask xxxxxxx|..x.x.x|...xxxx at (9,12)
  _0111: a rectangle with size (3,3) and color blue and mask xxx|xx.|x.x at (9,0)
diff: 
delta: (9,5)=1  (9,6)=1  (9,7)=1  (9,9)=1  (10,4)=1  (10,5)=1  (10,9)=1  (10,10)=1  (11,4)=1  (11,7)=1  (11,9)=1  (11,10)=1  (11,11)=1  (11,12)=1 
! size mismatch, 10x10 instead of 12x19

TRAIN c1d99e64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (10,5) and color cyan and mask xxxxx|.xxxx|xxxxx|xx..x|xx...|xx.x.|xxxxx|x..xx|xxx.x|xxxxx at (0,5)
  _01: a rectangle with size (12,4) and color cyan and mask xxxx|.x..|xx.x|x.xx|xxxx|xxx.|x.xx|xx..|x..x|xx.x|.x.x|xxxx at (0,0)
  _011: a rectangle with size (12,3) and color cyan and mask .xx|xxx|.xx|xx.|xxx|xxx|..x|.xx|xxx|.x.|x.x|.x. at (0,11)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (11,5)
diff: 
delta:
   (293.0 bits)
data: a background with size (12,14) and color black and layers
  _00: a rectangle with size (10,5) and color cyan and mask xxxxx|.xxxx|xxxxx|xx..x|xx...|xx.x.|xxxxx|x..xx|xxx.x|xxxxx at (0,5)
  _0: a rectangle with size (12,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (12,4) and color cyan and mask xxxx|.x..|xx.x|x.xx|xxxx|xxx.|x.xx|xx..|x..x|xx.x|.x.x|xxxx at (0,0)
  _011: a rectangle with size (12,3) and color cyan and mask .xx|xxx|.xx|xx.|xxx|xxx|..x|.xx|xxx|.x.|x.x|.x. at (0,11)
  _0111: a rectangle with size (12,1) and color red and mask Full at (0,10)
diff: 
delta: (11,5)=8  (11,6)=8  (11,7)=8  (11,8)=8  (11,9)=8 
   (222.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (10,5) and color cyan and mask xxxxx|.xxxx|xxxxx|xx..x|xx...|xx.x.|xxxxx|x..xx|xxx.x|xxxxx at (0,5)
  _01: a rectangle with size (12,4) and color cyan and mask xxxx|.x..|xx.x|x.xx|xxxx|xxx.|x.xx|xx..|x..x|xx.x|.x.x|xxxx at (0,0)
  _011: a rectangle with size (12,3) and color cyan and mask .xx|xxx|.xx|xx.|xxx|xxx|..x|.xx|xxx|.x.|x.x|.x. at (0,11)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (11,5)
diff: 
delta:
! size mismatch, 10x10 instead of 12x14

TRAIN c1d99e64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,15) and color black and layers
  _0: a rectangle with size (9,13) and color green and mask .x..xx.x.xx..|xxxxxxxx.xxxx|xxxxxx..xx.xx|x.x.x.x..xxx.|.xxx..x.xx..x|xxxxx.xxxxx.x|.xx.xxxxxxxx.|xxxxxx.xxx.xx|xxx.x..x.xxx. at (3,2)
  _01: a rectangle with size (4,13) and color green and mask x..x.xx.xxxx.|.x.xx.x.xx..x|.xxxxx.xx..xx|xx.xx..x.x.x. at (13,2)
  _011: a rectangle with size (2,5) and color green and mask xxxxx|x.xxx at (0,2)
  _0111: a rectangle with size (16,1) and color green and mask Full at (0,0)
diff: 
delta: (0,8)=3  (0,9)=3  (0,10)=3  (0,12)=3  (0,14)=3  (1,8)=3  (1,10)=3  (1,13)=3  (2,0)=0  (6,0)=0  (12,0)=0 
   (573.9 bits)
data: a background with size (17,15) and color black and layers
  _00: a rectangle with size (9,13) and color green and mask .x..xx.x.xx..|xxxxxxxx.xxxx|xxxxxx..xx.xx|x.x.x.x..xxx.|.xxx..x.xx..x|xxxxx.xxxxx.x|.xx.xxxxxxxx.|xxxxxx.xxx.xx|xxx.x..x.xxx. at (3,2)
  _0: a rectangle with size (17,15) and color red and mask .x.............|.x.............|xxxxxxxxxxxxxxx|.x.x..xx.x.xx..|.xxxxxxxxx.xxxx|.xxxxxxx..xx.xx|.xx.x.x.x..xxx.|.x.xxx..x.xx..x|.xxxxxx.xxxxx.x|.x.xx.xxxxxxxx.|.xxxxxxx.xxx.xx|.xxxx.x..x.xxx.|xxxxxxxxxxxxxxx|.x.............|.x.............|.x.............|.x............. at (0,0)
  _01: a rectangle with size (4,13) and color green and mask x..x.xx.xxxx.|.x.xx.x.xx..x|.xxxxx.xx..xx|xx.xx..x.x.x. at (13,2)
  _011: a rectangle with size (2,5) and color green and mask xxxxx|x.xxx at (0,2)
  _0111: a rectangle with size (16,1) and color green and mask Full at (0,0)
diff: 
delta: (0,8)=3  (0,9)=3  (0,10)=3  (0,12)=3  (0,14)=3  (1,8)=3  (1,10)=3  (1,13)=3  (6,0)=0 
   (577.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color black and layers
  _0: a rectangle with size (9,13) and color green and mask .x..xx.x.xx..|xxxxxxxx.xxxx|xxxxxx..xx.xx|x.x.x.x..xxx.|.xxx..x.xx..x|xxxxx.xxxxx.x|.xx.xxxxxxxx.|xxxxxx.xxx.xx|xxx.x..x.xxx. at (3,2)
  _01: a rectangle with size (4,13) and color green and mask x..x.xx.xxxx.|.x.xx.x.xx..x|.xxxxx.xx..xx|xx.xx..x.x.x. at (13,2)
  _011: a rectangle with size (16,1) and color green and mask Full at (0,0)
  _0111: a rectangle with size (2,5) and color green and mask xxxxx|x.xxx at (0,2)
diff: 
delta: (0,8)=3  (0,9)=3  (0,10)=3  (0,12)=3  (0,14)=3  (1,8)=3  (1,10)=3  (1,13)=3  (2,0)=0  (6,0)=0  (12,0)=0 
! size mismatch, 10x10 instead of 17x15
>> Trial 2
data: a background with size (17,15) and color black and layers
  _0: a rectangle with size (9,13) and color green and mask .x..xx.x.xx..|xxxxxxxx.xxxx|xxxxxx..xx.xx|x.x.x.x..xxx.|.xxx..x.xx..x|xxxxx.xxxxx.x|.xx.xxxxxxxx.|xxxxxx.xxx.xx|xxx.x..x.xxx. at (3,2)
  _01: a rectangle with size (4,13) and color green and mask x..x.xx.xxxx.|.x.xx.x.xx..x|.xxxxx.xx..xx|xx.xx..x.x.x. at (13,2)
  _011: a rectangle with size (2,5) and color green and mask xxxxx|x.xxx at (0,2)
  _0111: a rectangle with size (16,1) and color green and mask Full at (0,0)
diff: 
delta: (0,8)=3  (0,9)=3  (0,10)=3  (0,12)=3  (0,14)=3  (1,8)=3  (1,10)=3  (1,13)=3  (2,0)=0  (6,0)=0  (12,0)=0 
! size mismatch, 10x10 instead of 17x15

TRAIN c1d99e64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,25) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (7,21) and color yellow and mask Full at (13,0)
  _011: a rectangle with size (6,25) and color yellow and mask Full at (21,0)
  _0111: a rectangle with size (2,14) and color yellow and mask .xxxx.xxxxx.xx|xx.xxxxxx.xxxx at (0,7)
diff: 
delta: (0,0)=4  (0,2)=4  (0,4)=4  (0,5)=4  (0,22)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,5)=4  (1,22)=4  (3,1)=0  (3,5)=0  (3,6)=0  (3,12)=0  (3,21)=0  (3,24)=0  (4,2)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,14)=0  (4,18)=0  (4,21)=0  (5,3)=0  (5,6)=0  (5,17)=0  (5,19)=0  (5,21)=0  (5,23)=0  (6,1)=0  (6,2)=0  (6,4)=0  (6,6)=0  (6,13)=0  (6,15)=0  (6,19)=0  (6,21)=0  (7,5)=0  (7,6)=0  (7,8)=0  (7,10)=0  (7,11)=0  (7,14)=0  (7,15)=0  (7,19)=0  (7,20)=0  (7,21)=0  (7,22)=0  (7,24)=0  (8,0)=0  (8,3)=0  (8,6)=0  (8,9)=0  (8,12)=0  (8,15)=0  (8,16)=0  (8,18)=0  (8,20)=0  (8,21)=0  (8,23)=0  (9,3)=0  (9,6)=0  (9,7)=0  (9,13)=0  (9,14)=0  (9,16)=0  (9,20)=0  (9,21)=0  (10,1)=0  (10,5)=0  (10,6)=0  (10,8)=0  (10,11)=0  (10,14)=0  (10,17)=0  (10,20)=0  (10,21)=0  (10,22)=0  (10,23)=0  (11,2)=0  (11,4)=0  (11,5)=0  (11,6)=0  (11,10)=0  (11,17)=0  (11,21)=0  (13,0)=0  (13,3)=0  (13,4)=0  (13,5)=0  (13,6)=0  (13,7)=0  (13,12)=0  (13,15)=0  (13,16)=0  (13,23)=4  (13,24)=4  (14,6)=0  (14,11)=0  (14,13)=0  (14,16)=0  (14,22)=4  (14,23)=4  (14,24)=4  (15,5)=0  (15,6)=0  (15,8)=0  (15,10)=0  (15,11)=0  (15,20)=0  (15,22)=4  (15,24)=4  (16,0)=0  (16,6)=0  (16,12)=0  (16,14)=0  (16,17)=0  (16,22)=4  (16,23)=4  (17,0)=0  (17,5)=0  (17,6)=0  (17,10)=0  (17,12)=0  (17,14)=0  (17,23)=4  (17,24)=4  (18,3)=0  (18,6)=0  (18,7)=0  (18,9)=0  (19,2)=0  (19,6)=0  (19,9)=0  (19,13)=0  (19,17)=0  (19,20)=0  (19,23)=4  (19,24)=4  (21,4)=0  (21,6)=0  (21,8)=0  (21,12)=0  (21,13)=0  (21,14)=0  (21,15)=0  (21,17)=0  (21,21)=0  (22,0)=0  (22,6)=0  (22,8)=0  (22,10)=0  (22,13)=0  (22,16)=0  (22,19)=0  (22,21)=0  (23,6)=0  (23,9)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,16)=0  (23,17)=0  (23,21)=0  (23,24)=0  (24,1)=0  (24,3)=0  (24,6)=0  (24,8)=0  (24,9)=0  (24,10)=0  (24,16)=0  (24,18)=0  (24,21)=0  (24,22)=0  (24,24)=0  (25,2)=0  (25,4)=0  (25,6)=0  (25,7)=0  (25,9)=0  (25,12)=0  (25,15)=0  (25,16)=0  (25,17)=0  (25,19)=0  (25,21)=0  (26,1)=0  (26,2)=0  (26,6)=0  (26,8)=0  (26,14)=0  (26,19)=0  (26,20)=0  (26,21)=0 
! size mismatch, 10x10 instead of 27x25

TEST c1d99e64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.8 sec (28.8 sec/task)
bits-train-error = 13546.2 bits (13546.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-97] Checking task c3e719e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2915.3 = 2924.2
DL output with Mo: L = 9.0 + 21059.8 = 21068.8
DL input+output M: L = 17.9 + 23975.1 = 23993.0

# learning a model for train pairs
2.000	
1.839	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.763	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.698	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.641	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.593	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.548	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.509	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.479	OUT OBJECT at ^.layer_001: ^.layer_0.shape at ?
1.441	OUT OBJECT at ^.layer_0011: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_0.shape at ?
  _001: ^.layer_0.shape at ?
  _0011: ^.layer_0.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 41.4 + 2529.6 = 2571.0
DL output with Mo: L = 111.1 + 11717.4 = 11828.5
DL input+output M: L = 152.5 + 14247.0 = 14399.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,1)
  _01: a point with color orange at (0,2)
diff: 
delta: (1,0)=9# (2,0)=7# (2,1)=9#
   (110.7 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,1)
  _001: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (3,4)
  _0011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,7)
  _0: a rectangle with size (9,9) and color green and mask xx.......|.xx......|..x......|...xx....|....xx...|.....x...|......xx.|.......xx|........x at (0,0)
  _01: a rectangle with size (2,2) and color brown and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color brown and mask Full at (4,3)
  _0111: a rectangle with size (2,2) and color brown and mask Full at (7,6)
diff: 
delta: (0,2)=7# (2,0)=7# (3,5)=7# (5,3)=7# (6,8)=7# (8,6)=7#
   (367.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,1)
  _01: a point with color orange at (0,2)
diff: 
delta: (1,0)=9# (2,0)=7# (2,1)=9#
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color brown and mask Even Checkboard at (1,0)
  _01: a point with color cyan at (0,1)
diff: 
delta: (0,2)=7# (1,2)=8  (2,0)=7#
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _01: a point with color pink at (0,1)
diff: 
delta:
   (54.1 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _001: a rectangle with size (1,2) and color green and mask Full at (1,6)
  _0011: a rectangle with size (1,2) and color green and mask Full at (4,6)
  _0: a rectangle with size (9,9) and color cyan and mask ........x|xx....xxx|......xxx|......x.x|......xxx|......xxx|..xx.xx.x|..x..x..x|xxxxxxxxx at (0,0)
  _01: a rectangle with size (1,8) and color green and mask Full at (7,0)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _0111: a rectangle with size (1,7) and color pink and mask Full at (6,1)
diff: 
delta: (0,0)=8  (0,1)=6  (0,6)=8  (0,7)=6  (3,7)=6  (6,0)=8 
   (373.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _01: a point with color pink at (0,1)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,1)
  _01: a point with color green at (1,0)
diff: 
delta: (1,1)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,2)
  _01: a point with color pink at (0,0)
diff: 
delta: (1,0)=4  (1,1)=6 
   (88.1 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (2,1) and color cyan and mask Full at (1,5)
  _001: a rectangle with size (2,1) and color cyan and mask Full at (1,8)
  _0011: a rectangle with size (2,1) and color cyan and mask Full at (7,2)
  _0: a rectangle with size (1,5) and color brown and mask Full at (0,4)
  _01: a rectangle with size (1,5) and color brown and mask Full at (2,3)
  _011: a rectangle with size (1,5) and color brown and mask Full at (6,1)
  _0111: a rectangle with size (1,5) and color brown and mask Full at (8,0)
diff: 
delta: (0,3)=6  (0,6)=6  (1,3)=4  (1,4)=6  (1,6)=4  (1,7)=6  (6,0)=6  (6,3)=6  (7,0)=4  (7,1)=6  (7,3)=4  (7,4)=6  (7,5)=8  (8,5)=8 
   (430.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,2)
  _01: a point with color pink at (0,0)
diff: 
delta: (1,0)=4  (1,1)=6 
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|..x|.x. at (0,0)
  _01: a point with color yellow at (1,1)
diff: 
delta: (2,0)=5#
! size mismatch, 10x10 instead of 9x9

TEST c3e719e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.8 sec (26.8 sec/task)
bits-train-error = 11717.4 bits (11717.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-96] Checking task c3f564a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 131868.1 = 131877.1
DL output with Mo: L = 9.0 + 129768.9 = 129777.9
DL input+output M: L = 17.9 + 261637.0 = 261655.0

# learning a model for train pairs
2.000	
1.985	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.971	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.924	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.901	OUT DEF: ^.layer_0.shape.mask=.........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x.........
1.883	IN  DEF: ^.layer_0.shape.mask=.........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x.........
1.868	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.854	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.840	OUT OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_0.shape at ?
  _001: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color ? and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 147.7 + 124964.4 = 125112.1
DL output with Mo: L = 175.3 + 115510.1 = 115685.4
DL input+output M: L = 323.0 + 240474.5 = 240797.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (10,10) and color grey and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,0)
  _01: a rectangle with size (9,9) and color yellow and mask ........x|.......xx|......xx.|.....xx..|....xx...|...xx....|..xx.....|.xx......|xx....... at (0,0)
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,11)=2  (0,12)=3  (0,13)=4  (0,14)=5# (1,0)=2  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=2  (1,6)=3  (1,10)=2  (1,11)=3  (1,12)=4  (1,13)=5# (1,15)=2  (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=2  (2,5)=3  (2,9)=2  (2,10)=3  (2,11)=4  (2,12)=5# (2,14)=2  (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,8)=2  (3,9)=3  (3,10)=4  (3,11)=5# (3,13)=2  (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,7)=2  (4,8)=3  (4,9)=4  (4,10)=5# (4,12)=2  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,6)=2  (5,7)=3  (5,8)=4  (5,9)=5# (5,11)=2  (5,12)=0  (5,13)=0  (5,14)=5# (6,0)=2  (6,1)=3  (6,5)=2  (6,6)=3  (6,7)=4  (6,8)=5# (6,10)=2  (6,11)=3  (6,12)=0  (6,13)=0  (6,15)=2  (7,0)=3  (7,4)=2  (7,5)=3  (7,6)=4  (7,7)=5# (7,9)=2  (7,10)=3  (7,11)=4  (7,12)=5# (7,14)=2  (7,15)=3  (8,3)=2  (8,4)=3  (8,5)=4  (8,6)=5# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,13)=2  (8,14)=3  (8,15)=4  (9,2)=2  (9,3)=3  (9,4)=4  (9,5)=5# (9,7)=2  (9,8)=3  (9,9)=4  (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=0  (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,6)=2  (10,7)=3  (10,8)=4  (10,9)=5# (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,14)=5# (11,0)=2  (11,1)=3  (11,2)=4  (11,3)=5# (11,5)=2  (11,6)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,15)=2  (12,0)=3  (12,1)=4  (12,2)=5# (12,4)=2  (12,5)=3  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=3  (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,0)=4  (13,1)=5# (13,3)=2  (13,4)=3  (13,5)=4  (13,6)=0  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,0)=5# (14,2)=2  (14,3)=3  (14,4)=4  (14,5)=5# (14,6)=0  (14,7)=0  (14,8)=0  (14,9)=0  (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,6)=2  (15,7)=3  (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
   (4109.2 bits)
data: a background with size (16,16) and color blue and layers
  _00: a rectangle with size (10,10) and color grey and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,0)
  _001: a rectangle with size (9,9) and color yellow and mask ........x|.......xx|......xx.|.....xx..|....xx...|...xx....|..xx.....|.xx......|xx....... at (0,0)
  _0: a rectangle with size (10,10) and color red and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
  _01: a rectangle with size (9,9) and color green and mask .......xx|......xx.|.....xx..|....xx...|...xx....|..xx.....|.xx......|xx.......|x........ at (7,7)
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,11)=2  (0,12)=3  (0,13)=4  (0,14)=5# (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,5)=2  (1,6)=3  (1,10)=2  (1,11)=3  (1,12)=4  (1,13)=5# (1,15)=2  (2,0)=3  (2,1)=4  (2,2)=5# (2,4)=2  (2,5)=3  (2,9)=2  (2,10)=3  (2,11)=4  (2,12)=5# (2,14)=2  (2,15)=3  (3,0)=4  (3,1)=5# (3,3)=2  (3,4)=3  (3,8)=2  (3,9)=3  (3,10)=4  (3,11)=5# (3,13)=2  (3,14)=3  (3,15)=4  (4,0)=5# (4,2)=2  (4,3)=3  (4,7)=2  (4,8)=3  (4,9)=4  (4,10)=5# (4,12)=2  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,6)=2  (5,7)=3  (5,8)=4  (5,9)=5# (5,11)=2  (5,12)=3  (5,13)=4  (5,14)=5# (6,0)=2  (6,1)=3  (6,5)=2  (6,6)=3  (6,7)=4  (6,8)=5# (6,10)=2  (6,11)=3  (6,12)=4  (6,13)=5# (7,0)=3  (7,4)=2  (7,5)=3  (7,6)=4  (7,7)=5# (7,9)=2  (7,10)=3  (7,11)=4  (7,12)=5# (8,3)=2  (8,4)=3  (8,5)=4  (8,6)=5# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,15)=4  (9,2)=2  (9,3)=3  (9,4)=4  (9,5)=5# (9,7)=2  (9,8)=3  (9,9)=4  (9,10)=5# (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,6)=2  (10,7)=3  (10,8)=4  (10,9)=5# (10,13)=4  (10,14)=5# (11,0)=2  (11,1)=3  (11,2)=4  (11,3)=5# (11,5)=2  (11,6)=3  (11,7)=4  (11,8)=5# (11,12)=4  (11,13)=5# (11,15)=2  (12,0)=3  (12,1)=4  (12,2)=5# (12,4)=2  (12,5)=3  (12,6)=4  (12,7)=5# (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,0)=4  (13,1)=5# (13,3)=2  (13,4)=3  (13,5)=4  (13,6)=5# (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,0)=5# (14,2)=2  (14,3)=3  (14,4)=4  (14,5)=5# (14,9)=4  (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
   (3693.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (10,10) and color grey and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,0)
  _01: a rectangle with size (14,14) and color yellow and mask .........x...x|........x...x.|.......x...x..|......x...x...|.....x...x....|....x...x.....|...x...x......|..x...x.......|.x...x........|x...x.........|...x..........|..x...........|.x............|x............. at (0,0)
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,8)=4  (0,11)=2  (0,12)=3  (0,14)=5# (1,0)=2  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=2  (1,6)=3  (1,7)=4  (1,10)=2  (1,11)=3  (1,13)=5# (1,15)=2  (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=2  (2,5)=3  (2,6)=4  (2,9)=2  (2,10)=3  (2,12)=5# (2,14)=2  (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=4  (3,8)=2  (3,9)=3  (3,11)=5# (3,13)=2  (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=4  (4,7)=2  (4,8)=3  (4,10)=5# (4,12)=2  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,3)=4  (5,6)=2  (5,7)=3  (5,9)=5# (5,11)=2  (5,12)=0  (5,13)=0  (5,14)=5# (6,0)=2  (6,1)=3  (6,2)=4  (6,5)=2  (6,6)=3  (6,8)=5# (6,10)=2  (6,11)=3  (6,12)=0  (6,13)=0  (6,15)=2  (7,0)=3  (7,1)=4  (7,4)=2  (7,5)=3  (7,7)=5# (7,9)=2  (7,10)=3  (7,11)=4  (7,12)=5# (7,14)=2  (7,15)=3  (8,0)=4  (8,3)=2  (8,4)=3  (8,6)=5# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,13)=2  (8,14)=3  (8,15)=4  (9,2)=2  (9,3)=3  (9,5)=5# (9,7)=2  (9,8)=3  (9,9)=4  (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=0  (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,4)=5# (10,6)=2  (10,7)=3  (10,8)=4  (10,9)=5# (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=0  (10,14)=5# (11,0)=2  (11,1)=3  (11,3)=5# (11,5)=2  (11,6)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,13)=0  (11,15)=2  (12,0)=3  (12,2)=5# (12,4)=2  (12,5)=3  (12,6)=0  (12,7)=0  (12,8)=0  (12,9)=0  (12,10)=3  (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,1)=5# (13,3)=2  (13,4)=3  (13,5)=4  (13,6)=0  (13,7)=0  (13,8)=0  (13,9)=0  (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,0)=5# (14,2)=2  (14,3)=3  (14,4)=4  (14,5)=5# (14,6)=0  (14,7)=0  (14,8)=0  (14,9)=0  (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,6)=2  (15,7)=3  (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (10,10) and color yellow and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
  _01: a rectangle with size (10,10) and color red and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x.......x|x.......x. at (0,4)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,8)=5# (2,9)=6  (2,10)=1  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,8)=6  (3,9)=1  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,7)=3  (7,12)=2  (7,13)=3  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,6)=3  (8,7)=4  (8,12)=3  (8,14)=5# (8,15)=6  (9,5)=3  (9,6)=4  (9,7)=5# (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
   (4203.4 bits)
data: a background with size (16,16) and color grey and layers
  _00: a rectangle with size (10,10) and color yellow and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,0)
  _001: a rectangle with size (12,12) and color pink and mask .........x.x|........x.x.|.......x.x..|......x.x...|.....x.x....|....x.x.....|...x.x......|..x.x.......|.x.x........|x.x.........|.x..........|x........... at (0,0)
  _0: a rectangle with size (10,10) and color yellow and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
  _01: a rectangle with size (9,9) and color green and mask ........x|.......xx|......xx.|.....xx.x|....xx.x.|...xx.x..|..xx.x...|.xx.x....|xx.x..... at (0,0)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,5)=6  (0,6)=1  (0,7)=2  (0,12)=1  (0,13)=2  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,4)=6  (1,5)=1  (1,6)=2  (1,11)=1  (1,12)=2  (1,13)=3  (1,14)=4  (2,0)=3  (2,1)=4  (2,3)=6  (2,4)=1  (2,5)=2  (2,10)=1  (2,11)=2  (2,12)=3  (2,13)=4  (2,15)=6  (3,0)=4  (3,2)=6  (3,3)=1  (3,4)=2  (3,9)=1  (3,10)=2  (3,11)=3  (3,12)=4  (3,14)=6  (3,15)=1  (4,1)=6  (4,2)=1  (4,3)=2  (4,8)=1  (4,9)=2  (4,10)=3  (4,11)=4  (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,7)=1  (5,8)=2  (5,9)=3  (5,10)=4  (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,6)=1  (6,7)=2  (6,8)=3  (6,9)=4  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (7,0)=2  (7,5)=1  (7,6)=2  (7,7)=3  (7,8)=4  (7,10)=6  (7,11)=1  (7,12)=2  (7,13)=3  (8,4)=1  (8,5)=2  (8,6)=3  (8,7)=4  (8,9)=6  (8,10)=1  (8,11)=2  (8,12)=3  (8,15)=6  (9,3)=1  (9,4)=2  (9,5)=3  (9,6)=4  (9,8)=6  (9,9)=1  (9,10)=2  (9,11)=3  (9,14)=6  (9,15)=1  (10,2)=1  (10,3)=2  (10,4)=3  (10,5)=4  (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,13)=6  (10,14)=1  (10,15)=2  (11,1)=1  (11,2)=2  (11,3)=3  (11,4)=4  (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,0)=1  (12,1)=2  (12,2)=3  (12,3)=4  (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (14,0)=3  (14,1)=4  (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,15)=6  (15,0)=4  (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,14)=6  (15,15)=1 
   (3879.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,4)
  _01: a rectangle with size (10,10) and color yellow and mask .x.......x|x.......x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,8)=5# (2,9)=6  (2,10)=1  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,8)=6  (3,9)=1  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,7)=3  (7,12)=2  (7,13)=3  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,6)=3  (8,7)=4  (8,12)=3  (8,14)=5# (8,15)=6  (9,5)=3  (9,6)=4  (9,7)=5# (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
! size mismatch, 10x10 instead of 16x16
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (10,10) and color yellow and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
  _01: a rectangle with size (10,10) and color red and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x.......x|x.......x. at (0,4)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,8)=5# (2,9)=6  (2,10)=1  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,8)=6  (3,9)=1  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,7)=3  (7,12)=2  (7,13)=3  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,6)=3  (8,7)=4  (8,12)=3  (8,14)=5# (8,15)=6  (9,5)=3  (9,6)=4  (9,7)=5# (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
  _01: a rectangle with size (9,9) and color orange and mask ........x|.......x.|......x..|.....x...|....x....|...x.....|..x......|.x.......|x.......x at (0,5)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,8)=2  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,14)=1  (0,15)=2  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,7)=2  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,13)=1  (1,14)=2  (1,15)=3  (2,0)=3  (2,5)=1  (2,6)=2  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,12)=1  (2,13)=2  (2,14)=3  (2,15)=4  (3,0)=4  (3,5)=2  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,11)=1  (3,12)=2  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,10)=1  (4,11)=2  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,9)=1  (5,10)=2  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,2)=2  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,8)=1  (6,9)=2  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (7,0)=1  (7,1)=2  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,7)=1  (7,8)=2  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,15)=2  (8,0)=2  (8,6)=1  (8,7)=2  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,14)=2  (8,15)=3  (9,0)=3  (9,5)=1  (9,6)=2  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,13)=2  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,5)=2  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,4)=2  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,11)=2  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,3)=2  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,10)=2  (12,15)=7# (13,0)=7# (13,1)=1  (13,2)=2  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,9)=2  (13,10)=3  (13,15)=1  (14,0)=1  (14,1)=2  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,8)=2  (14,9)=3  (14,10)=4  (14,15)=2  (15,0)=2  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,7)=2  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,14)=2  (15,15)=3 
   (4183.8 bits)
data: a background with size (16,16) and color red and layers
  _00: a rectangle with size (10,10) and color blue and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
  _001: a rectangle with size (11,11) and color orange and mask ..........x|.........xx|........xx.|.......xx..|......xx...|.....xx....|....xx.....|...xx......|..xx.......|.xx........|xx......... at (5,5)
  _0: a rectangle with size (10,10) and color green and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,0)
  _01: a rectangle with size (11,11) and color yellow and mask .........xx|........xx.|.......xx..|......xx...|.....xx....|....xx.....|...xx......|..xx.......|.xx........|xx.........|x.........x at (0,0)
diff: 
delta: (0,0)=1  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,15)=3  (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=7# (2,5)=1  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,14)=3  (2,15)=4  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=7# (3,4)=1  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,1)=6  (4,2)=7# (4,3)=1  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,1)=7# (5,2)=1  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (6,0)=7# (6,1)=1  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (7,0)=1  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (8,3)=5# (8,4)=6  (8,5)=7# (8,6)=1  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,15)=3  (9,2)=5# (9,3)=6  (9,4)=7# (9,5)=1  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,14)=3  (9,15)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,13)=3  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,12)=3  (11,13)=4  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,11)=3  (12,12)=4  (12,13)=5# (12,14)=6  (12,15)=7# (13,0)=7# (13,1)=1  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,10)=3  (13,11)=4  (13,12)=5# (13,13)=6  (13,14)=7# (13,15)=1  (14,0)=1  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,9)=3  (14,10)=4  (14,11)=5# (14,12)=6  (14,13)=7# (14,14)=1  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,15)=3 
   (3978.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (6,6)
  _01: a rectangle with size (14,14) and color yellow and mask .............x|............x.|...........x..|..........x...|.........x...x|........x...x.|.......x...x..|......x...x...|.....x...x....|....x...x.....|...x...x......|..x...x.......|.x...x........|x...x......... at (2,2)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,8)=2  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (0,15)=2  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,7)=2  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,14)=2  (1,15)=3  (2,0)=3  (2,5)=1  (2,6)=2  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,13)=2  (2,14)=3  (3,0)=4  (3,5)=2  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,12)=2  (3,13)=3  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,11)=2  (4,12)=3  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,10)=2  (5,11)=3  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,2)=2  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,9)=2  (6,10)=3  (6,12)=5# (6,13)=6  (6,14)=7# (7,0)=1  (7,1)=2  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,8)=2  (7,9)=3  (7,11)=5# (7,12)=6  (7,13)=7# (7,15)=2  (8,0)=2  (8,5)=7# (8,6)=1  (8,7)=2  (8,8)=3  (8,10)=5# (8,11)=6  (8,12)=7# (8,14)=2  (8,15)=3  (9,0)=3  (9,5)=1  (9,6)=2  (9,7)=3  (9,9)=5# (9,10)=6  (9,11)=7# (9,13)=2  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,5)=2  (10,6)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,4)=2  (11,5)=3  (11,7)=5# (11,8)=6  (11,9)=7# (11,11)=2  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,3)=2  (12,4)=3  (12,6)=5# (12,7)=6  (12,8)=7# (12,10)=2  (12,15)=7# (13,0)=7# (13,1)=1  (13,2)=2  (13,3)=3  (13,5)=5# (13,6)=6  (13,7)=7# (13,9)=2  (13,10)=3  (13,15)=1  (14,0)=1  (14,1)=2  (14,2)=3  (14,4)=5# (14,5)=6  (14,6)=7# (14,8)=2  (14,9)=3  (14,10)=4  (14,15)=2  (15,0)=2  (15,1)=3  (15,3)=5# (15,4)=6  (15,5)=7# (15,7)=2  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,14)=2  (15,15)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask ........x|.......x.|......x..|.....x...|....x....|...x.....|..x......|.x.......|x........ at (7,7)
  _01: a rectangle with size (8,8) and color yellow and mask .......x|......x.|.....x..|....x..x|...x..x.|..x..x..|.x..x...|x..x.... at (4,8)
diff:   ^.layer_0.shape.mask
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,10)=3  (0,11)=4  (0,12)=5# (0,13)=6  (0,14)=7# (0,15)=8  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=8  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,14)=8  (1,15)=1  (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=7# (2,5)=8  (2,6)=1  (2,7)=2  (2,8)=3  (2,9)=4  (2,10)=5# (2,11)=6  (2,12)=7# (2,13)=8  (2,14)=1  (2,15)=2  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=7# (3,4)=8  (3,5)=1  (3,6)=2  (3,7)=3  (3,8)=4  (3,9)=5# (3,10)=6  (3,11)=7# (3,12)=8  (3,13)=1  (3,14)=2  (3,15)=3  (4,0)=5# (4,1)=6  (4,6)=3  (4,7)=4  (4,8)=5# (4,9)=6  (4,10)=7# (4,11)=8  (4,12)=1  (4,13)=2  (4,14)=3  (5,0)=6  (5,1)=7# (5,9)=7# (5,10)=8  (5,11)=1  (5,12)=2  (5,13)=3  (5,15)=5# (6,0)=7# (6,1)=8  (6,9)=8  (6,10)=1  (6,11)=2  (6,12)=3  (6,14)=5# (6,15)=6  (7,0)=8  (7,1)=1  (7,9)=1  (7,10)=2  (7,11)=3  (7,13)=5# (7,14)=6  (8,0)=1  (8,1)=2  (8,2)=3  (8,3)=4  (8,4)=5# (8,9)=2  (8,10)=3  (8,12)=5# (8,13)=6  (8,15)=8  (9,0)=2  (9,1)=3  (9,2)=4  (9,3)=5# (9,4)=6  (9,5)=7# (9,6)=8  (9,7)=1  (9,8)=2  (9,9)=3  (9,11)=5# (9,12)=6  (9,14)=8  (9,15)=1  (10,0)=3  (10,1)=4  (10,2)=5# (10,3)=6  (10,4)=7# (10,5)=8  (10,6)=1  (10,7)=2  (10,8)=3  (10,10)=5# (10,11)=6  (10,13)=8  (10,14)=1  (10,15)=2  (11,0)=4  (11,1)=5# (11,2)=6  (11,3)=7# (11,4)=8  (11,5)=1  (11,6)=2  (11,7)=3  (11,9)=5# (11,10)=6  (11,12)=8  (11,13)=1  (11,14)=2  (11,15)=3  (12,0)=5# (12,1)=6  (12,2)=7# (12,3)=8  (12,4)=1  (12,5)=2  (12,6)=3  (12,9)=6  (12,11)=8  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=6  (13,1)=7# (13,2)=8  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,10)=8  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=7# (14,1)=8  (14,2)=1  (14,3)=2  (14,4)=3  (14,5)=4  (14,6)=5# (14,7)=6  (14,9)=8  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=8  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,5)=5# (15,6)=6  (15,8)=8  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=7#
! size mismatch, 10x10 instead of 16x16
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color yellow and mask .......x|......x.|.....x..|....x...|...x....|..x.....|.x......|x....... at (4,8)
  _01: a rectangle with size (9,9) and color orange and mask .....x..x|....x..x.|...x..x..|..x..x...|.x..x....|...x.....|..x......|.x.......|x........ at (7,7)
diff:   ^.layer_0.shape.mask
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,10)=3  (0,11)=4  (0,12)=5# (0,13)=6  (0,14)=7# (0,15)=8  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=8  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,14)=8  (1,15)=1  (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=7# (2,5)=8  (2,6)=1  (2,7)=2  (2,8)=3  (2,9)=4  (2,10)=5# (2,11)=6  (2,12)=7# (2,13)=8  (2,14)=1  (2,15)=2  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=7# (3,4)=8  (3,5)=1  (3,6)=2  (3,7)=3  (3,8)=4  (3,9)=5# (3,10)=6  (3,11)=7# (3,12)=8  (3,13)=1  (3,14)=2  (3,15)=3  (4,0)=5# (4,1)=6  (4,6)=3  (4,7)=4  (4,8)=5# (4,9)=6  (4,10)=7# (4,11)=8  (4,12)=1  (4,13)=2  (4,14)=3  (5,0)=6  (5,1)=7# (5,9)=7# (5,10)=8  (5,11)=1  (5,12)=2  (5,13)=3  (5,15)=5# (6,0)=7# (6,1)=8  (6,9)=8  (6,10)=1  (6,11)=2  (6,12)=3  (6,14)=5# (6,15)=6  (7,0)=8  (7,1)=1  (7,9)=1  (7,10)=2  (7,11)=3  (7,13)=5# (7,14)=6  (8,0)=1  (8,1)=2  (8,2)=3  (8,3)=4  (8,4)=5# (8,9)=2  (8,10)=3  (8,12)=5# (8,13)=6  (8,15)=8  (9,0)=2  (9,1)=3  (9,2)=4  (9,3)=5# (9,4)=6  (9,5)=7# (9,6)=8  (9,7)=1  (9,8)=2  (9,9)=3  (9,11)=5# (9,12)=6  (9,14)=8  (9,15)=1  (10,0)=3  (10,1)=4  (10,2)=5# (10,3)=6  (10,4)=7# (10,5)=8  (10,6)=1  (10,7)=2  (10,8)=3  (10,10)=5# (10,11)=6  (10,13)=8  (10,14)=1  (10,15)=2  (11,0)=4  (11,1)=5# (11,2)=6  (11,3)=7# (11,4)=8  (11,5)=1  (11,6)=2  (11,7)=3  (11,9)=5# (11,10)=6  (11,12)=8  (11,13)=1  (11,14)=2  (11,15)=3  (12,0)=5# (12,1)=6  (12,2)=7# (12,3)=8  (12,4)=1  (12,5)=2  (12,6)=3  (12,9)=6  (12,11)=8  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=6  (13,1)=7# (13,2)=8  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,10)=8  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=7# (14,1)=8  (14,2)=1  (14,3)=2  (14,4)=3  (14,5)=4  (14,6)=5# (14,7)=6  (14,9)=8  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=8  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,5)=5# (15,6)=6  (15,8)=8  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=7#
! size mismatch, 10x10 instead of 16x16

TEST c3f564a4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.6 sec (29.6 sec/task)
bits-train-error = 115510.1 bits (115510.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-95] Checking task c444b776.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14154.6 = 14163.6
DL output with Mo: L = 9.0 + 22372.3 = 22381.3
DL input+output M: L = 17.9 + 36526.9 = 36544.9

# learning a model for train pairs
2.000	
1.637	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.225	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.146	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.972	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.953	OUT DEF: ^.size=^.size
0.942	OUT DEF: ^.layer_00=^.layer_00
0.931	OUT DEF: ^.layer_0=^.layer_0
0.921	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.896	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.871	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.862	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.857	IN  OBJECT at ^.layer_010: a point with color ? at ?
0.850	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00
  _0: ^.layer_0
  _010: ^.layer_010.shape at ?
  _01: ^.layer_01.shape at ?
  _011: ^.layer_01.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a point with color ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 78.7 + 5256.8 = 5335.5
DL output with Mo: L = 67.9 + 10529.4 = 10597.3
DL input+output M: L = 146.6 + 15786.2 = 15932.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _010: a point with color orange at (11,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
diff: 
delta: (14,1)=3  (14,5)=3  (16,3)=8  (16,4)=7# (17,4)=8  (17,7)=3  (18,1)=7#
   (294.3 bits)
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _010: a point with color orange at (1,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,2)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,12)
  _0111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,3)
diff: 
delta: (1,15)=7# (4,1)=3  (4,5)=3  (4,11)=3  (4,15)=3  (6,4)=7# (6,13)=8  (6,14)=7# (7,7)=3  (7,14)=8  (7,17)=3  (8,1)=7# (8,11)=7# (11,5)=7# (11,15)=7# (12,3)=2  (12,13)=2  (13,2)=2  (13,12)=2  (14,1)=3  (14,5)=3  (14,11)=3  (14,15)=3  (16,3)=8  (16,4)=7# (16,13)=8  (16,14)=7# (17,4)=8  (17,7)=3  (17,14)=8  (17,17)=3  (18,1)=7# (18,11)=7#
   (767.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _010: a point with color orange at (11,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
diff: 
delta: (14,1)=3  (14,5)=3  (16,3)=8  (16,4)=7# (17,4)=8  (17,7)=3  (18,1)=7#
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _010: a point with color orange at (11,5)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
diff: 
delta: (12,3)=2  (13,2)=2  (14,1)=3  (14,5)=3  (16,4)=7# (17,7)=3  (18,1)=7#
! 44 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _010: a point with color red at (12,3)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
diff: 
delta: (11,5)=7# (13,2)=2  (14,1)=3  (14,5)=3  (16,4)=7# (17,7)=3  (18,1)=7#
! 44 wrong pixels (generated / expected)

TRAIN c444b776.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,9) and color black and layers
  _00: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _010: a point with color grey at (1,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
diff: 
delta: (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
   (231.4 bits)
data: a background with size (19,9) and color black and layers
  _00: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _010: a point with color grey at (1,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (16,1)
  _0111: a rectangle with size (1,2) and color grey and mask Full at (17,5)
diff: 
delta: (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2  (11,5)=5# (11,7)=2  (12,2)=1  (14,4)=1  (15,2)=1  (16,7)=2 
   (285.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  _00: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _010: a point with color grey at (1,5)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
diff: 
delta: (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,9) and color black and layers
  _00: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _010: a point with color red at (1,7)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
diff: 
delta: (1,5)=5# (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,9) and color black and layers
  _00: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _010: a point with color grey at (1,5)
  _01: a rectangle with size (1,2) and color grey and mask Full at (7,5)
diff: 
delta: (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
! 22 wrong pixels (generated / expected)

TRAIN c444b776.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,29) and color black and layers
  _00: a rectangle with size (1,29) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _010: a point with color green at (1,14)
  _01: a rectangle with size (19,1) and color yellow and mask Full at (0,19)
diff: 
delta: (2,11)=2  (2,17)=2  (3,11)=3  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 86 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,29) and color black and layers
  _00: a rectangle with size (1,29) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _010: a point with color red at (2,11)
  _01: a rectangle with size (19,1) and color yellow and mask Full at (0,19)
diff: 
delta: (1,14)=3  (2,17)=2  (3,11)=3  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 86 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,29) and color black and layers
  _00: a rectangle with size (1,29) and color yellow and mask Full at (9,0)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,19)
  _010: a point with color green at (1,14)
  _01: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
diff: 
delta: (2,11)=2  (2,17)=2  (3,11)=3  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 86 wrong pixels (generated / expected)

TEST c444b776.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.2 sec (29.2 sec/task)
bits-train-error = 10529.4 bits (10529.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-94] Checking task c59eb873.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3045.7 = 3054.6
DL output with Mo: L = 9.0 + 11564.9 = 11573.9
DL input+output M: L = 17.9 + 14610.6 = 14628.5

# learning a model for train pairs
2.000	
1.637	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.458	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.311	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.253	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.209	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.164	IN  DEF: ^.layer_01.shape.color=red
1.152	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.140	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.128	OUT DEF: ^.layer_011.shape.color=blue
1.116	IN  DEF: ^.size=(?,?)
1.105	IN  DEF: ^.layer_0.pos=(?,?)
1.093	IN  DEF: ^.layer_0.shape.size=(?,?)
1.082	IN  DEF: ^.layer_01.pos=(?,?)
1.054	IN  DEF: ^.layer_01.pos.j=(0)
1.048	OUT DEF: ^.layer_01.shape.mask=Full
1.042	OUT DEF: ^.layer_011.shape.mask=Full
1.039	OUT DEF: ^.size=(?,?)
1.020	OUT DEF: ^.size.i=^.size.i + ^.size.i
1.002	OUT DEF: ^.size.j=^.size.j + ^.size.j
0.999	OUT DEF: ^.layer_0.pos=(?,?)
0.990	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i + ^.layer_0.pos.i
0.981	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j + ^.layer_0.pos.j
0.978	OUT DEF: ^.layer_0.shape.size=(?,?)
0.961	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i + ^.layer_0.shape.size.i
0.946	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j + ^.layer_0.shape.size.j
0.943	OUT DEF: ^.layer_01.pos=(?,?)
0.933	OUT DEF: ^.layer_01.pos.j=(0)
0.924	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i + ^.layer_01.pos.i
0.921	OUT DEF: ^.layer_01.shape.size=(?,?)
0.909	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.pos.j + 2
0.898	OUT DEF: ^.layer_01.shape.size.j=2
0.895	OUT DEF: ^.layer_011.pos=(?,?)
0.885	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.j
0.877	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.i + 2
0.873	OUT DEF: ^.layer_011.shape.size=(?,?)
0.862	OUT DEF: ^.layer_011.shape.size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i + ^.size.i,^.size.j + ^.size.j) and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i + ^.layer_0.shape.size.i,^.layer_0.shape.size.j + ^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i + ^.layer_0.pos.i,^.layer_0.pos.j + ^.layer_0.pos.j)
  _01: a rectangle with size (^.layer_0.pos.j + 2,2) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i + ^.layer_01.pos.i,(0))
  _011: a rectangle with size (?,2) and color blue and mask Full at (^.layer_0.pos.j,^.layer_01.pos.i + 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color red at (?,(0))

DL input  with Mi: L = 61.8 + 2046.3 = 2108.1
DL output with Mo: L = 194.3 + 1799.5 = 1993.7
DL input+output M: L = 256.0 + 3845.8 = 4101.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta: (0,2)=1 
   (66.3 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask ..xx..|..xx..|xxxxxx|xxxxxx|..xx..|..xx.. at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (4,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (0,4)
diff: 
delta:
   (44.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta: (0,2)=1 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
  _01: a point with color red at (2,0)
diff: 
delta: (0,0)=0  (2,2)=0 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta: (0,2)=1  (2,2)=0 
! 20 wrong pixels (generated / expected)

TRAIN c59eb873.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (2,2) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,0)
  _01: a point with color red at (0,0)
diff: 
delta:
   (35.2 bits)
data: a background with size (4,4) and color brown and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (4,2) and color blue and mask Full at (0,2)
diff: 
delta:
   (16.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,0)
  _01: a point with color red at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color green and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,1)
  _01: a point with color red at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,2) and color blue and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a point with color green at (1,0)
diff:   ^.layer_01.shape.color
delta:
! 6 wrong pixels (generated / expected)

TRAIN c59eb873.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask x.|x.|xx|x. at (0,2)
  _01: a point with color red at (0,0)
diff: 
delta: (1,0)=2  (1,1)=1  (3,3)=5#
   (103.2 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,4) and color green and mask xx..|xx..|xx..|xx..|xxxx|xxxx|xx..|xx.. at (0,4)
  _01: a rectangle with size (4,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta: (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
   (118.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask x.|x.|xx|x. at (0,2)
  _01: a point with color red at (0,0)
diff: 
delta: (1,0)=2  (1,1)=1  (3,3)=5#
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask x.|x.|xx|x. at (0,2)
  _01: a point with color red at (1,0)
diff: 
delta: (0,0)=2  (1,1)=1  (3,3)=5#
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,1) and color green and mask Full at (0,2)
  _01: a point with color red at (0,0)
diff: 
delta: (1,0)=2  (1,1)=1  (2,3)=3  (3,3)=5#
! 8 wrong pixels (generated / expected)

TRAIN c59eb873.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _01: a point with color red at (0,0)
diff: 
delta: (0,3)=7# (0,4)=8  (1,0)=2  (1,1)=1  (1,2)=1  (2,2)=6  (2,3)=6  (3,0)=3  (3,2)=6 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _01: a point with color red at (1,0)
diff: 
delta: (0,0)=2  (0,3)=7# (0,4)=8  (1,1)=1  (1,2)=1  (2,2)=6  (2,3)=6  (3,0)=3  (3,2)=6 
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask xx|x. at (2,2)
  _01: a point with color red at (0,0)
diff: 
delta: (0,3)=7# (0,4)=8  (1,0)=2  (1,1)=1  (1,2)=1  (2,1)=5# (3,0)=3  (3,1)=5# (4,1)=5#
! 32 wrong pixels (generated / expected)

TEST c59eb873.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.3 sec (6.3 sec/task)
bits-train-error = 1799.5 bits (1799.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-93] Checking task c8cbb738.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7187.0 = 7196.0
DL output with Mo: L = 9.0 + 5690.5 = 5699.4
DL input+output M: L = 17.9 + 12877.5 = 12895.4

# learning a model for train pairs
2.000	
1.850	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.826	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.811	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.796	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.781	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.766	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.749	OUT OBJECT at ^.layer_010: ^.layer_0111.shape at ?
1.730	OUT OBJECT at ^.layer_0101: ^.layer_0111.shape at ?
1.714	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.698	IN  OBJECT at ^.layer_01110: a point with color ? at ?
1.686	OUT DEF: ^.layer_01.shape.mask=Full
1.679	OUT DEF: ^.size=(?,?)
1.665	OUT DEF: ^.size.j=^.layer_01111.pos.j - ^.layer_011.pos.j
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.layer_01111.pos.j - ^.layer_011.pos.j) and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_0111.shape at ?
  _0101: ^.layer_0111.shape at ?
  _01: a rectangle with size ? and color ? and mask Full at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _01110: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?

DL input  with Mi: L = 82.3 + 6455.2 = 6537.5
DL output with Mo: L = 86.5 + 4226.5 = 4313.1
DL input+output M: L = 168.8 + 10681.7 = 10850.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,11) and color green and layers
  _0: a point with color yellow at (0,7)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (2,4)
  _01110: a point with color blue at (4,2)
  _0111: a point with color blue at (4,6)
  _01111: a point with color yellow at (4,9)
diff: 
delta: (4,7)=4  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
   (321.8 bits)
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (1,1)
  _010: a point with color blue at (0,2)
  _0101: a point with color blue at (2,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (0,1)
diff: 
delta: (0,0)=2  (0,4)=2  (2,4)=1  (4,0)=2  (4,1)=4  (4,2)=1  (4,3)=4  (4,4)=2 
   (223.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color green and layers
  _0: a point with color yellow at (0,7)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (2,4)
  _01110: a point with color blue at (4,2)
  _0111: a point with color blue at (4,6)
  _01111: a point with color yellow at (4,7)
diff: 
delta: (4,9)=4  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! size mismatch, 10x3 instead of 5x5
>> Trial 2
data: a background with size (12,11) and color green and layers
  _0: a point with color yellow at (0,7)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (2,4)
  _01110: a point with color blue at (4,2)
  _0111: a point with color blue at (4,6)
  _01111: a point with color yellow at (4,9)
diff: 
delta: (4,7)=4  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! size mismatch, 10x5 instead of 5x5
>> Trial 3
data: a background with size (12,11) and color green and layers
  _0: a point with color yellow at (0,7)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (2,4)
  _01110: a point with color blue at (4,2)
  _0111: a point with color yellow at (4,7)
  _01111: a point with color blue at (4,6)
diff: 
delta: (4,9)=4  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! size mismatch, 10x2 instead of 5x5

TRAIN c8cbb738.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color blue and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,3)
  _011: a point with color cyan at (3,1)
  _01110: a point with color cyan at (3,3)
  _0111: a point with color green at (6,3)
  _01111: a point with color green at (5,4)
diff: 
delta: (6,5)=3  (7,4)=3 
   (156.5 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (1,0)
  _010: a point with color green at (0,1)
  _0101: a point with color green at (2,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta: (1,1)=1 
   (86.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color blue and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,3)
  _011: a point with color cyan at (3,1)
  _01110: a point with color cyan at (3,3)
  _0111: a point with color green at (5,4)
  _01111: a point with color green at (6,3)
diff: 
delta: (6,5)=3  (7,4)=3 
! size mismatch, 10x2 instead of 3x3
>> Trial 2
data: a background with size (10,8) and color blue and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,3)
  _011: a point with color cyan at (3,1)
  _01110: a point with color cyan at (3,3)
  _0111: a point with color green at (6,3)
  _01111: a point with color green at (5,4)
diff: 
delta: (6,5)=3  (7,4)=3 
! size mismatch, 10x3 instead of 3x3

TRAIN c8cbb738.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color yellow and layers
  _0: a point with color blue at (1,2)
  _01: a point with color blue at (1,6)
  _011: a point with color blue at (5,2)
  _01110: a point with color blue at (5,6)
  _0111: a point with color orange at (5,9)
  _01111: a point with color orange at (7,7)
diff: 
delta: (7,11)=7# (9,9)=7#
   (167.2 bits)
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (5,5) and color yellow and mask .x.x.|xxxxx|.xxx.|xxxxx|.x.x. at (0,0)
  _010: a point with color orange at (0,2)
  _0101: a point with color orange at (4,2)
  _01: a rectangle with size (1,5) and color orange and mask Full at (2,0)
diff: 
delta:
   (112.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color yellow and layers
  _0: a point with color blue at (1,2)
  _01: a point with color blue at (1,6)
  _011: a point with color blue at (5,2)
  _01110: a point with color blue at (5,6)
  _0111: a point with color orange at (5,9)
  _01111: a point with color orange at (7,7)
diff: 
delta: (7,11)=7# (9,9)=7#
! size mismatch, 10x5 instead of 5x5
>> Trial 2
data: a background with size (12,14) and color yellow and layers
  _0: a point with color blue at (1,2)
  _01: a point with color blue at (1,6)
  _011: a point with color blue at (5,2)
  _01110: a point with color blue at (5,6)
  _0111: a point with color orange at (5,9)
  _01111: a point with color orange at (7,11)
diff: 
delta: (7,7)=7# (9,9)=7#
! size mismatch, 10x9 instead of 5x5
>> Trial 3
data: a background with size (12,14) and color yellow and layers
  _0: a point with color blue at (1,2)
  _01: a point with color blue at (1,6)
  _011: a point with color blue at (5,2)
  _01110: a point with color blue at (5,6)
  _0111: a point with color orange at (7,7)
  _01111: a point with color orange at (5,9)
diff: 
delta: (7,11)=7# (9,9)=7#
! size mismatch, 10x7 instead of 5x5

TRAIN c8cbb738.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color cyan and layers
  _0: a point with color blue at (2,6)
  _01: a point with color blue at (5,3)
  _011: a point with color blue at (5,9)
  _01110: a point with color red at (6,11)
  _0111: a point with color red at (6,17)
  _01111: a point with color red at (8,11)
diff: 
delta: (8,6)=1  (8,17)=2  (9,3)=3  (9,9)=3  (10,14)=6  (10,16)=6  (15,3)=3  (15,9)=3  (16,14)=6  (16,16)=6 
! size mismatch, 10x2 instead of 7x7
>> Trial 2
data: a background with size (18,19) and color cyan and layers
  _0: a point with color blue at (2,6)
  _01: a point with color blue at (5,3)
  _011: a point with color blue at (5,9)
  _01110: a point with color red at (6,11)
  _0111: a point with color blue at (8,6)
  _01111: a point with color red at (6,17)
diff: 
delta: (8,11)=2  (8,17)=2  (9,3)=3  (9,9)=3  (10,14)=6  (10,16)=6  (15,3)=3  (15,9)=3  (16,14)=6  (16,16)=6 
! size mismatch, 10x8 instead of 7x7

TEST c8cbb738.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.6 sec (23.6 sec/task)
bits-train-error = 4226.5 bits (4226.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-92] Checking task c8f0f002.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5056.8 = 5065.8
DL output with Mo: L = 9.0 + 5056.8 = 5065.8
DL input+output M: L = 17.9 + 10113.6 = 10131.5

# learning a model for train pairs
2.000	
1.738	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.475	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.220	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.138	OUT DEF: ^.size=^.size
1.065	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.013	OUT DEF: ^.layer_0.shape.size=^.layer_01.shape.size
0.966	OUT DEF: ^.layer_00=^.layer_0
0.919	OUT DEF: ^.layer_0.pos=^.layer_01.pos
0.886	OUT DEF: ^.layer_0.shape.mask=^.layer_01.shape.mask
0.879	IN  DEF: ^.size=(?,?)
0.847	IN  DEF: ^.size.i=3
0.840	IN  DEF: ^.layer_0.pos=(?,?)
0.823	IN  DEF: ^.layer_0.pos.i=0
0.815	IN  DEF: ^.layer_0.shape.color=blue
0.808	IN  DEF: ^.layer_0.shape.size=(?,?)
0.802	IN  DEF: ^.layer_01.pos=(?,?)
0.795	IN  DEF: ^.layer_01.shape.size=(?,?)
0.791	OUT DEF: ^.color=grey
0.745	IN  DEF: ^.color=orange
0.714	OUT DEF: ^.layer_0=^.layer_01
0.687	IN  DEF: ^.layer_01.shape.color=cyan

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color grey and layers
  _00: ^.layer_0
  _0: ^.layer_01
WHERE (Mi)
a background with size (3,?) and color orange and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (0,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 80.3 + 2489.4 = 2569.6
DL output with Mo: L = 24.2 + 887.6 = 911.8
DL input+output M: L = 104.5 + 3377.0 = 3481.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color orange and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|xx.|.xx at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,5)
diff: 
delta: (0,1)=8  (0,2)=8  (1,4)=1 
   (104.7 bits)
data: a background with size (3,6) and color grey and layers
  _00: a rectangle with size (3,3) and color blue and mask x..|xx.|.xx at (0,0)
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,5)
diff: 
delta: (0,1)=8  (0,2)=8  (1,4)=1 
   (53.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color orange and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|xx.|.xx at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,5)
diff: 
delta: (0,1)=8  (0,2)=8  (1,4)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color orange and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|xx.|.xx at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (0,1)
diff: 
delta: (0,5)=8  (1,4)=1  (1,5)=8  (2,5)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|xx.|.xx at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask .xx|xx.|xxx at (0,2)
diff:   ^.color  ^.layer_01.shape.color
delta: (1,4)=1  (2,0)=7#
! 12 wrong pixels (generated / expected)

TRAIN c8f0f002.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color orange and layers
  _0: a rectangle with size (3,4) and color blue and mask ...x|x.x.|.xx. at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta:
   (49.7 bits)
data: a background with size (3,4) and color grey and layers
  _00: a rectangle with size (3,4) and color blue and mask ...x|x.x.|.xx. at (0,0)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color orange and layers
  _0: a rectangle with size (3,4) and color blue and mask ...x|x.x.|.xx. at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN c8f0f002.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color orange and layers
  _0: a rectangle with size (2,3) and color blue and mask x.x|.xx at (0,2)
  _01: a rectangle with size (3,3) and color cyan and mask xx.|xxx|.xx at (0,1)
diff: 
delta: (0,0)=1  (2,1)=1 
   (94.6 bits)
data: a background with size (3,5) and color grey and layers
  _00: a rectangle with size (2,3) and color blue and mask x.x|.xx at (0,2)
  _0: a rectangle with size (3,3) and color cyan and mask xx.|xxx|.xx at (0,1)
diff: 
delta: (0,0)=1  (2,1)=1 
   (35.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color orange and layers
  _0: a rectangle with size (2,3) and color blue and mask x.x|.xx at (0,2)
  _01: a rectangle with size (3,3) and color cyan and mask xx.|xxx|.xx at (0,1)
diff: 
delta: (0,0)=1  (2,1)=1 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,5) and color orange and layers
  _0: a rectangle with size (2,3) and color blue and mask x.x|.xx at (0,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,1)
diff: 
delta: (0,0)=1  (0,3)=7# (2,1)=1 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,5) and color orange and layers
  _0: a rectangle with size (2,3) and color blue and mask Full at (0,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,1)
diff: 
delta: (0,0)=1  (0,3)=7# (1,2)=8  (2,1)=1 
! 4 wrong pixels (generated / expected)

TRAIN c8f0f002.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color orange and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,3)=1  (2,4)=8 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,4) and color orange and mask xx.x|.xxx|x.x. at (0,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff:   ^.color  ^.layer_0.shape.color
delta: (2,4)=8 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,5) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (3,4) and color orange and mask xx.x|xxxx|xxx. at (0,1)
diff:   ^.color  ^.layer_01.shape.color
delta: (0,3)=1 
! 12 wrong pixels (generated / expected)

TEST c8f0f002.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 887.6 bits (887.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-91] Checking task c909285e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 292131.0 = 292139.9
DL output with Mo: L = 9.0 + 14438.0 = 14447.0
DL input+output M: L = 17.9 + 306569.0 = 306586.9

# learning a model for train pairs
2.000	
1.702	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.465	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.297	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.248	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.169	OUT OBJECT at ^.layer_00: ^.layer_01.shape at ?
1.133	OUT DEF: ^.size=^.layer_01.shape.size
1.113	OUT DEF: ^.layer_00.pos=^.layer_0.pos
1.096	OUT DEF: ^.layer_0.shape.color=cyan
1.083	OUT OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
1.067	OUT OBJECT at ^.layer_0011: a rectangle with size ? and color ? and mask ? at ?
1.050	OUT OBJECT at ^.layer_00111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color ? and layers
  _00: ^.layer_01.shape at ^.layer_0.pos
  _001: a rectangle with size ? and color ? and mask ? at ?
  _0011: a rectangle with size ? and color ? and mask ? at ?
  _00111: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color cyan and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 208420.8 = 208468.8
DL output with Mo: L = 114.0 + 4741.0 = 4855.0
DL input+output M: L = 162.0 + 213161.8 = 213323.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color grey and mask ...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|............xxxxxxxxxxxx|.................x.....x|.................x.....x|.................x.....x|.................x.....x|.................x.....x|xxxxx.......xxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (7,7) and color green and mask Border at (5,5)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,5)=5# (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,5)=5# (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=5# (2,6)=2  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,16)=2  (2,18)=2  (2,20)=2  (2,21)=2  (2,22)=2  (3,5)=5# (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=5# (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (8,0)=2  (8,1)=2  (8,2)=2  (8,4)=2  (8,6)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,12)=2  (8,13)=2  (8,14)=2  (8,16)=2  (8,18)=2  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
   (6407.8 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (7,7) and color green and mask Border at (0,0)
  _001: a rectangle with size (5,5) and color yellow and mask .x...|xxxxx|.x...|.x...|.x... at (1,1)
  _0011: a rectangle with size (5,1) and color red and mask Full at (1,3)
  _00111: a rectangle with size (1,5) and color red and mask Full at (3,1)
  _0: a rectangle with size (1,5) and color cyan and mask Full at (4,1)
  _01: a rectangle with size (5,1) and color cyan and mask Full at (1,4)
diff: 
delta:
   (163.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color grey and mask ...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|............xxxxxxxxxxxx|.................x.....x|.................x.....x|.................x.....x|.................x.....x|.................x.....x|xxxxx.......xxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (7,7) and color green and mask Border at (5,5)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,5)=5# (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,5)=5# (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=5# (2,6)=2  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,16)=2  (2,18)=2  (2,20)=2  (2,21)=2  (2,22)=2  (3,5)=5# (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=5# (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (8,0)=2  (8,1)=2  (8,2)=2  (8,4)=2  (8,6)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,12)=2  (8,13)=2  (8,14)=2  (8,16)=2  (8,18)=2  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (5,5)
  _01: a rectangle with size (24,24) and color grey and mask ...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|.....xxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,5)=5# (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,5)=5# (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=5# (2,6)=2  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,16)=2  (2,18)=2  (2,20)=2  (2,21)=2  (2,22)=2  (3,5)=5# (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=5# (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (8,0)=2  (8,1)=2  (8,2)=2  (8,4)=2  (8,6)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,12)=2  (8,13)=2  (8,14)=2  (8,16)=2  (8,18)=2  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
! size mismatch, 24x24 instead of 7x7
>> Trial 3
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color grey and mask ...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|............xxxxxxxxxxxx|.................x.....x|.................x.....x|.................x.....x|.................x.....x|.................x.....x|xxxxx.......xxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (1,23) and color red and mask Full at (2,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,5)=5# (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,5)=5# (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,3)=4  (2,5)=5# (2,7)=4  (2,15)=4  (2,19)=4  (3,5)=5# (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=5# (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,5)=3  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,11)=3  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (7,5)=3  (7,11)=3  (8,0)=2  (8,1)=2  (8,2)=2  (8,4)=2  (8,5)=3  (8,6)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,11)=3  (8,12)=2  (8,13)=2  (8,14)=2  (8,16)=2  (8,18)=2  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,5)=3  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,11)=3  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,5)=3  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,11)=3  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (11,5)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
! size mismatch, 1x23 instead of 7x7

TRAIN c909285e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (26,26) and color green and layers
  _0: a rectangle with size (26,26) and color cyan and mask ........x..x..x..x..x..x..|........x..x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|xx.......xxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (7,7) and color red and mask Border at (2,2)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=8  (0,4)=1  (0,5)=8  (0,6)=0  (0,9)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,16)=0  (0,18)=0  (0,21)=0  (0,22)=0  (0,24)=1  (0,25)=0  (1,0)=0  (1,1)=0  (1,2)=8  (1,4)=1  (1,5)=8  (1,6)=0  (1,9)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,16)=0  (1,18)=0  (1,21)=0  (1,22)=0  (1,24)=1  (1,25)=0  (2,0)=8  (2,1)=8  (3,5)=8  (4,0)=1  (4,1)=1  (4,4)=1  (4,5)=8  (4,6)=1  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,16)=1  (4,18)=1  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,0)=8  (5,1)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,0)=0  (6,1)=0  (6,4)=1  (6,5)=8  (6,6)=0  (6,9)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,16)=0  (6,18)=0  (6,21)=0  (6,22)=0  (6,24)=1  (6,25)=0  (7,5)=8  (9,0)=1  (9,1)=1  (9,4)=1  (9,6)=1  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,16)=1  (9,18)=1  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,0)=0  (10,1)=0  (10,4)=1  (10,6)=0  (10,9)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,16)=0  (10,18)=0  (10,21)=0  (10,22)=0  (10,24)=1  (10,25)=0  (12,0)=0  (12,1)=0  (12,4)=1  (12,6)=0  (12,9)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,16)=0  (12,18)=0  (12,21)=0  (12,22)=0  (12,24)=1  (12,25)=0  (13,0)=0  (13,1)=0  (13,4)=1  (13,6)=0  (13,9)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,16)=0  (13,18)=0  (13,21)=0  (13,22)=0  (13,24)=1  (13,25)=0  (16,0)=0  (16,1)=0  (16,4)=1  (16,6)=0  (16,9)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,16)=0  (16,18)=0  (16,21)=0  (16,22)=0  (16,24)=1  (16,25)=0  (18,0)=0  (18,1)=0  (18,4)=1  (18,6)=0  (18,9)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,16)=0  (18,18)=0  (18,21)=0  (18,22)=0  (18,24)=1  (18,25)=0  (21,0)=0  (21,1)=0  (21,4)=1  (21,6)=0  (21,9)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,16)=0  (21,18)=0  (21,21)=0  (21,22)=0  (21,24)=1  (21,25)=0  (22,0)=0  (22,1)=0  (22,4)=1  (22,6)=0  (22,9)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,16)=0  (22,18)=0  (22,21)=0  (22,22)=0  (22,24)=1  (22,25)=0  (24,0)=1  (24,1)=1  (24,4)=1  (24,6)=1  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,16)=1  (24,18)=1  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,0)=0  (25,1)=0  (25,4)=1  (25,6)=0  (25,9)=1  (25,10)=0  (25,12)=0  (25,13)=0  (25,16)=0  (25,18)=0  (25,21)=0  (25,22)=0  (25,24)=1  (25,25)=0 
   (5422.3 bits)
data: a background with size (7,7) and color green and layers
  _00: a rectangle with size (7,7) and color red and mask Border at (0,0)
  _001: a rectangle with size (5,1) and color cyan and mask Full at (1,3)
  _0011: a rectangle with size (2,5) and color green and mask Full at (4,1)
  _00111: a rectangle with size (1,5) and color green and mask Full at (1,1)
  _0: a rectangle with size (1,5) and color cyan and mask Full at (3,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,2)
diff: 
delta: (4,2)=1  (4,4)=0 
   (178.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,26) and color green and layers
  _0: a rectangle with size (26,26) and color cyan and mask ........x..x..x..x..x..x..|........x..x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|xx.......xxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (7,7) and color red and mask Border at (2,2)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=8  (0,4)=1  (0,5)=8  (0,6)=0  (0,9)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,16)=0  (0,18)=0  (0,21)=0  (0,22)=0  (0,24)=1  (0,25)=0  (1,0)=0  (1,1)=0  (1,2)=8  (1,4)=1  (1,5)=8  (1,6)=0  (1,9)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,16)=0  (1,18)=0  (1,21)=0  (1,22)=0  (1,24)=1  (1,25)=0  (2,0)=8  (2,1)=8  (3,5)=8  (4,0)=1  (4,1)=1  (4,4)=1  (4,5)=8  (4,6)=1  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,16)=1  (4,18)=1  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,0)=8  (5,1)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,0)=0  (6,1)=0  (6,4)=1  (6,5)=8  (6,6)=0  (6,9)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,16)=0  (6,18)=0  (6,21)=0  (6,22)=0  (6,24)=1  (6,25)=0  (7,5)=8  (9,0)=1  (9,1)=1  (9,4)=1  (9,6)=1  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,16)=1  (9,18)=1  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,0)=0  (10,1)=0  (10,4)=1  (10,6)=0  (10,9)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,16)=0  (10,18)=0  (10,21)=0  (10,22)=0  (10,24)=1  (10,25)=0  (12,0)=0  (12,1)=0  (12,4)=1  (12,6)=0  (12,9)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,16)=0  (12,18)=0  (12,21)=0  (12,22)=0  (12,24)=1  (12,25)=0  (13,0)=0  (13,1)=0  (13,4)=1  (13,6)=0  (13,9)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,16)=0  (13,18)=0  (13,21)=0  (13,22)=0  (13,24)=1  (13,25)=0  (16,0)=0  (16,1)=0  (16,4)=1  (16,6)=0  (16,9)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,16)=0  (16,18)=0  (16,21)=0  (16,22)=0  (16,24)=1  (16,25)=0  (18,0)=0  (18,1)=0  (18,4)=1  (18,6)=0  (18,9)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,16)=0  (18,18)=0  (18,21)=0  (18,22)=0  (18,24)=1  (18,25)=0  (21,0)=0  (21,1)=0  (21,4)=1  (21,6)=0  (21,9)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,16)=0  (21,18)=0  (21,21)=0  (21,22)=0  (21,24)=1  (21,25)=0  (22,0)=0  (22,1)=0  (22,4)=1  (22,6)=0  (22,9)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,16)=0  (22,18)=0  (22,21)=0  (22,22)=0  (22,24)=1  (22,25)=0  (24,0)=1  (24,1)=1  (24,4)=1  (24,6)=1  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,16)=1  (24,18)=1  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,0)=0  (25,1)=0  (25,4)=1  (25,6)=0  (25,9)=1  (25,10)=0  (25,12)=0  (25,13)=0  (25,16)=0  (25,18)=0  (25,21)=0  (25,22)=0  (25,24)=1  (25,25)=0 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (26,26) and color black and layers
  _0: a rectangle with size (26,26) and color cyan and mask ........x..x..x..x..x..x..|........x..x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|xx.......xxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (1,26) and color green and mask Full at (3,0)
diff: 
delta: (0,2)=8  (0,3)=3  (0,4)=1  (0,5)=8  (0,7)=3  (0,9)=1  (0,15)=3  (0,19)=3  (0,24)=1  (1,2)=8  (1,3)=3  (1,4)=1  (1,5)=8  (1,7)=3  (1,9)=1  (1,15)=3  (1,19)=3  (1,24)=1  (2,0)=8  (2,1)=8  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,2)=2  (3,5)=8  (3,8)=2  (4,0)=1  (4,1)=1  (4,2)=2  (4,3)=3  (4,4)=1  (4,5)=8  (4,6)=1  (4,7)=3  (4,8)=2  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,0)=8  (5,1)=8  (5,2)=2  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=2  (6,2)=2  (6,3)=3  (6,4)=1  (6,5)=8  (6,7)=3  (6,8)=2  (6,9)=1  (6,15)=3  (6,19)=3  (6,24)=1  (7,0)=3  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=3  (7,5)=8  (7,6)=3  (7,7)=3  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,3)=3  (10,4)=1  (10,7)=3  (10,9)=1  (10,15)=3  (10,19)=3  (10,24)=1  (12,3)=3  (12,4)=1  (12,7)=3  (12,9)=1  (12,15)=3  (12,19)=3  (12,24)=1  (13,3)=3  (13,4)=1  (13,7)=3  (13,9)=1  (13,15)=3  (13,19)=3  (13,24)=1  (15,0)=3  (15,1)=3  (15,3)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,9)=3  (15,10)=3  (15,12)=3  (15,13)=3  (15,15)=3  (15,16)=3  (15,18)=3  (15,19)=3  (15,21)=3  (15,22)=3  (15,24)=3  (15,25)=3  (16,3)=3  (16,4)=1  (16,7)=3  (16,9)=1  (16,15)=3  (16,19)=3  (16,24)=1  (18,3)=3  (18,4)=1  (18,7)=3  (18,9)=1  (18,15)=3  (18,19)=3  (18,24)=1  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,15)=3  (19,16)=3  (19,18)=3  (19,19)=3  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=3  (21,3)=3  (21,4)=1  (21,7)=3  (21,9)=1  (21,15)=3  (21,19)=3  (21,24)=1  (22,3)=3  (22,4)=1  (22,7)=3  (22,9)=1  (22,15)=3  (22,19)=3  (22,24)=1  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,3)=3  (25,4)=1  (25,7)=3  (25,9)=1  (25,15)=3  (25,19)=3  (25,24)=1 
! size mismatch, 1x26 instead of 7x7

TRAIN c909285e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (28,28) and color green and layers
  _0: a rectangle with size (28,28) and color grey and mask .....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxx.......xxxxxxxxxxxxxxxx|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|............xxxxxxxxxxxxxxxx|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x.... at (0,0)
  _01: a rectangle with size (7,7) and color pink and mask Border at (17,5)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,24)=8  (1,25)=0  (1,27)=1  (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,24)=8  (7,25)=1  (7,27)=1  (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,24)=8  (10,25)=0  (10,27)=1  (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,24)=8  (13,25)=0  (13,27)=1  (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,24)=8  (16,25)=0  (16,27)=1  (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,24)=8  (19,25)=8  (19,27)=8  (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,24)=8  (27,25)=1  (27,27)=1 
   (9012.0 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (7,7) and color pink and mask Border at (0,0)
  _001: a rectangle with size (1,5) and color green and mask Full at (3,1)
  _0011: a rectangle with size (5,1) and color green and mask Full at (1,3)
  _00111: a rectangle with size (1,5) and color cyan and mask Full at (2,1)
  _0: a rectangle with size (5,1) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (1,2)
diff: 
delta:
   (132.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color green and layers
  _0: a rectangle with size (28,28) and color grey and mask .....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxx.......xxxxxxxxxxxxxxxx|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|............xxxxxxxxxxxxxxxx|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x.... at (0,0)
  _01: a rectangle with size (7,7) and color pink and mask Border at (17,5)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,24)=8  (1,25)=0  (1,27)=1  (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,24)=8  (7,25)=1  (7,27)=1  (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,24)=8  (10,25)=0  (10,27)=1  (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,24)=8  (13,25)=0  (13,27)=1  (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,24)=8  (16,25)=0  (16,27)=1  (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,24)=8  (19,25)=8  (19,27)=8  (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,24)=8  (27,25)=1  (27,27)=1 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (28,28) and color green and layers
  _0: a rectangle with size (28,28) and color grey and mask .....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxx.......xxxxxxxxxxxxxxxx|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|............xxxxxxxxxxxxxxxx|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x.... at (0,0)
  _01: a rectangle with size (1,28) and color green and mask Full at (2,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,24)=8  (1,25)=0  (1,27)=1  (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,24)=8  (7,25)=1  (7,27)=1  (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,24)=8  (10,25)=0  (10,27)=1  (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,24)=8  (13,25)=0  (13,27)=1  (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,24)=8  (16,25)=0  (16,27)=1  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,5)=6  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,11)=6  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,5)=6  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,11)=6  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,24)=8  (19,25)=8  (19,27)=8  (20,5)=6  (20,11)=6  (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,5)=6  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,11)=6  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,5)=6  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,11)=6  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (23,5)=6  (23,6)=6  (23,7)=6  (23,8)=6  (23,9)=6  (23,10)=6  (23,11)=6  (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,24)=8  (27,25)=1  (27,27)=1 
! size mismatch, 1x28 instead of 7x7

TRAIN c909285e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color green and layers
  _0: a rectangle with size (24,24) and color yellow and mask .....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x...........x|.....x.....x...........x|.....x.....x...........x|xxxxxxxxxxxxxx......xxxx|.....x.....x...........x|.....x.....x...........x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask Full at (14,14)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=1  (0,3)=2  (0,6)=0  (0,7)=2  (0,8)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=2  (0,16)=0  (0,18)=0  (0,20)=1  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=1  (1,3)=2  (1,6)=0  (1,7)=2  (1,8)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=2  (1,16)=0  (1,18)=0  (1,20)=1  (1,21)=0  (1,22)=0  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,6)=1  (2,7)=2  (2,8)=1  (2,10)=1  (2,12)=1  (2,13)=1  (2,15)=2  (2,16)=1  (2,18)=1  (2,20)=1  (2,21)=1  (2,22)=1  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,10)=2  (3,12)=2  (3,13)=2  (3,15)=2  (3,16)=2  (3,18)=2  (3,20)=2  (3,21)=2  (3,22)=2  (6,0)=0  (6,1)=0  (6,2)=1  (6,3)=2  (6,6)=0  (6,7)=2  (6,8)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=2  (6,16)=0  (6,18)=0  (6,20)=1  (6,21)=0  (6,22)=0  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,7)=2  (7,8)=2  (7,10)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,16)=2  (7,18)=2  (7,20)=2  (7,21)=2  (7,22)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=2  (8,6)=1  (8,7)=2  (8,8)=1  (8,10)=1  (8,12)=1  (8,13)=1  (8,15)=2  (8,16)=1  (8,18)=1  (8,20)=1  (8,21)=1  (8,22)=1  (10,0)=0  (10,1)=0  (10,2)=1  (10,3)=2  (10,6)=0  (10,7)=2  (10,8)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=2  (10,16)=0  (10,18)=0  (10,20)=1  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=1  (12,3)=2  (12,6)=0  (12,7)=2  (12,8)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=2  (12,16)=0  (12,18)=0  (12,20)=1  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=1  (13,3)=2  (13,6)=0  (13,7)=2  (13,8)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=2  (13,16)=0  (13,18)=0  (13,20)=1  (13,21)=0  (13,22)=0  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,6)=2  (15,7)=2  (15,8)=2  (15,10)=2  (15,12)=2  (15,13)=2  (15,15)=2  (15,16)=2  (15,17)=4  (15,18)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=0  (16,1)=0  (16,2)=1  (16,3)=2  (16,6)=0  (16,7)=2  (16,8)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=2  (16,16)=0  (16,17)=4  (16,18)=0  (16,20)=1  (16,21)=0  (16,22)=0  (17,15)=4  (17,16)=4  (17,17)=4  (17,18)=4  (18,0)=0  (18,1)=0  (18,2)=1  (18,3)=2  (18,6)=0  (18,7)=2  (18,8)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=2  (18,16)=0  (18,17)=4  (18,18)=0  (18,20)=1  (18,21)=0  (18,22)=0  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2  (20,6)=1  (20,7)=2  (20,8)=1  (20,10)=1  (20,12)=1  (20,13)=1  (20,15)=2  (20,16)=1  (20,18)=1  (20,20)=1  (20,21)=1  (20,22)=1  (21,0)=0  (21,1)=0  (21,2)=1  (21,3)=2  (21,6)=0  (21,7)=2  (21,8)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=2  (21,16)=0  (21,18)=0  (21,20)=1  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=1  (22,3)=2  (22,6)=0  (22,7)=2  (22,8)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=2  (22,16)=0  (22,18)=0  (22,20)=1  (22,21)=0  (22,22)=0 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,24) and color green and layers
  _0: a rectangle with size (24,24) and color yellow and mask .....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x...........x|.....x.....x...........x|.....x.....x...........x|xxxxxxxxxxxxxx......xxxx|.....x.....x...........x|.....x.....x...........x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask Border at (14,14)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=1  (0,3)=2  (0,6)=0  (0,7)=2  (0,8)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=2  (0,16)=0  (0,18)=0  (0,20)=1  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=1  (1,3)=2  (1,6)=0  (1,7)=2  (1,8)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=2  (1,16)=0  (1,18)=0  (1,20)=1  (1,21)=0  (1,22)=0  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,6)=1  (2,7)=2  (2,8)=1  (2,10)=1  (2,12)=1  (2,13)=1  (2,15)=2  (2,16)=1  (2,18)=1  (2,20)=1  (2,21)=1  (2,22)=1  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,10)=2  (3,12)=2  (3,13)=2  (3,15)=2  (3,16)=2  (3,18)=2  (3,20)=2  (3,21)=2  (3,22)=2  (6,0)=0  (6,1)=0  (6,2)=1  (6,3)=2  (6,6)=0  (6,7)=2  (6,8)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=2  (6,16)=0  (6,18)=0  (6,20)=1  (6,21)=0  (6,22)=0  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,7)=2  (7,8)=2  (7,10)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,16)=2  (7,18)=2  (7,20)=2  (7,21)=2  (7,22)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=2  (8,6)=1  (8,7)=2  (8,8)=1  (8,10)=1  (8,12)=1  (8,13)=1  (8,15)=2  (8,16)=1  (8,18)=1  (8,20)=1  (8,21)=1  (8,22)=1  (10,0)=0  (10,1)=0  (10,2)=1  (10,3)=2  (10,6)=0  (10,7)=2  (10,8)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=2  (10,16)=0  (10,18)=0  (10,20)=1  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=1  (12,3)=2  (12,6)=0  (12,7)=2  (12,8)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=2  (12,16)=0  (12,18)=0  (12,20)=1  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=1  (13,3)=2  (13,6)=0  (13,7)=2  (13,8)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=2  (13,16)=0  (13,18)=0  (13,20)=1  (13,21)=0  (13,22)=0  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,6)=2  (15,7)=2  (15,8)=2  (15,10)=2  (15,12)=2  (15,13)=2  (15,15)=2  (15,16)=2  (15,17)=4  (15,18)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=0  (16,1)=0  (16,2)=1  (16,3)=2  (16,6)=0  (16,7)=2  (16,8)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=2  (16,16)=0  (16,17)=4  (16,18)=0  (16,20)=1  (16,21)=0  (16,22)=0  (17,15)=4  (17,16)=4  (17,17)=4  (17,18)=4  (18,0)=0  (18,1)=0  (18,2)=1  (18,3)=2  (18,6)=0  (18,7)=2  (18,8)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=2  (18,16)=0  (18,17)=4  (18,18)=0  (18,20)=1  (18,21)=0  (18,22)=0  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2  (20,6)=1  (20,7)=2  (20,8)=1  (20,10)=1  (20,12)=1  (20,13)=1  (20,15)=2  (20,16)=1  (20,18)=1  (20,20)=1  (20,21)=1  (20,22)=1  (21,0)=0  (21,1)=0  (21,2)=1  (21,3)=2  (21,6)=0  (21,7)=2  (21,8)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=2  (21,16)=0  (21,18)=0  (21,20)=1  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=1  (22,3)=2  (22,6)=0  (22,7)=2  (22,8)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=2  (22,16)=0  (22,18)=0  (22,20)=1  (22,21)=0  (22,22)=0 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (24,24) and color green and layers
  _0: a rectangle with size (24,24) and color yellow and mask .....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x...........x|.....x.....x...........x|.....x.....x...........x|xxxxxxxxxxxxxx......xxxx|.....x.....x...........x|.....x.....x...........x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (1,23) and color red and mask Full at (15,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=1  (0,3)=2  (0,6)=0  (0,7)=2  (0,8)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=2  (0,16)=0  (0,18)=0  (0,20)=1  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=1  (1,3)=2  (1,6)=0  (1,7)=2  (1,8)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=2  (1,16)=0  (1,18)=0  (1,20)=1  (1,21)=0  (1,22)=0  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,6)=1  (2,7)=2  (2,8)=1  (2,10)=1  (2,12)=1  (2,13)=1  (2,15)=2  (2,16)=1  (2,18)=1  (2,20)=1  (2,21)=1  (2,22)=1  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,10)=2  (3,12)=2  (3,13)=2  (3,15)=2  (3,16)=2  (3,18)=2  (3,20)=2  (3,21)=2  (3,22)=2  (6,0)=0  (6,1)=0  (6,2)=1  (6,3)=2  (6,6)=0  (6,7)=2  (6,8)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=2  (6,16)=0  (6,18)=0  (6,20)=1  (6,21)=0  (6,22)=0  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,7)=2  (7,8)=2  (7,10)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,16)=2  (7,18)=2  (7,20)=2  (7,21)=2  (7,22)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=2  (8,6)=1  (8,7)=2  (8,8)=1  (8,10)=1  (8,12)=1  (8,13)=1  (8,15)=2  (8,16)=1  (8,18)=1  (8,20)=1  (8,21)=1  (8,22)=1  (10,0)=0  (10,1)=0  (10,2)=1  (10,3)=2  (10,6)=0  (10,7)=2  (10,8)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=2  (10,16)=0  (10,18)=0  (10,20)=1  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=1  (12,3)=2  (12,6)=0  (12,7)=2  (12,8)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=2  (12,16)=0  (12,18)=0  (12,20)=1  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=1  (13,3)=2  (13,6)=0  (13,7)=2  (13,8)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=2  (13,16)=0  (13,18)=0  (13,20)=1  (13,21)=0  (13,22)=0  (14,14)=8  (14,15)=8  (14,16)=8  (14,17)=8  (14,18)=8  (14,19)=8  (15,4)=3  (15,9)=3  (15,14)=8  (15,17)=4  (15,19)=8  (16,0)=0  (16,1)=0  (16,2)=1  (16,3)=2  (16,6)=0  (16,7)=2  (16,8)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=8  (16,15)=2  (16,16)=0  (16,17)=4  (16,18)=0  (16,19)=8  (16,20)=1  (16,21)=0  (16,22)=0  (17,14)=8  (17,15)=4  (17,16)=4  (17,17)=4  (17,18)=4  (17,19)=8  (18,0)=0  (18,1)=0  (18,2)=1  (18,3)=2  (18,6)=0  (18,7)=2  (18,8)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=8  (18,15)=2  (18,16)=0  (18,17)=4  (18,18)=0  (18,19)=8  (18,20)=1  (18,21)=0  (18,22)=0  (19,14)=8  (19,15)=8  (19,16)=8  (19,17)=8  (19,18)=8  (19,19)=8  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2  (20,6)=1  (20,7)=2  (20,8)=1  (20,10)=1  (20,12)=1  (20,13)=1  (20,15)=2  (20,16)=1  (20,18)=1  (20,20)=1  (20,21)=1  (20,22)=1  (21,0)=0  (21,1)=0  (21,2)=1  (21,3)=2  (21,6)=0  (21,7)=2  (21,8)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=2  (21,16)=0  (21,18)=0  (21,20)=1  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=1  (22,3)=2  (22,6)=0  (22,7)=2  (22,8)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=2  (22,16)=0  (22,18)=0  (22,20)=1  (22,21)=0  (22,22)=0 
! size mismatch, 1x23 instead of 6x6

TEST c909285e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.6 sec (26.6 sec/task)
bits-train-error = 4741.0 bits (4741.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-90] Checking task c9e6f938.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1590.7 = 1599.7
DL output with Mo: L = 9.0 + 2913.7 = 2922.7
DL input+output M: L = 17.9 + 4504.4 = 4522.3

# learning a model for train pairs
2.000	
1.533	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.272	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.186	IN  DEF: ^.layer_0.shape.color=orange
1.102	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.054	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.026	IN  DEF: ^.color=black
1.004	IN  DEF: ^.size=(?,?)
0.902	IN  DEF: ^.size.i=3
0.800	IN  DEF: ^.size.j=3
0.778	IN  DEF: ^.layer_0.pos=(?,?)
0.757	IN  DEF: ^.layer_0.shape.size=(?,?)
0.741	OUT DEF: ^.color=black
0.729	OUT DEF: ^.size=(?,?)
0.654	OUT DEF: ^.size.j=6
0.597	OUT DEF: ^.size.i=^.size.i
0.586	OUT DEF: ^.layer_0.shape.size=(?,?)
0.551	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,6) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)

DL input  with Mi: L = 46.6 + 522.5 = 569.1
DL output with Mo: L = 40.2 + 530.9 = 571.1
DL input+output M: L = 86.9 + 1053.4 = 1140.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask x.|.x|xx at (0,1)
diff: 
delta:
   (24.7 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,4) and color orange and mask x..x|.xx.|xxxx at (0,1)
diff: 
delta:
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask x.|.x|xx at (0,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (2,1)
diff: 
delta: (0,1)=7# (1,2)=7#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color orange and mask Full at (1,2)
diff: 
delta: (0,1)=7# (2,1)=7#
! 4 wrong pixels (generated / expected)

TRAIN c9e6f938.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (1,1)
diff: 
delta:
   (14.8 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,4) and color orange and mask Full at (1,1)
diff: 
delta:
   (8.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (1,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN c9e6f938.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (1,0)
diff: 
delta:
   (12.8 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (1,0)
diff: 
delta: (1,5)=7#
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (1,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN c9e6f938.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask xx.|.x.|..x at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,0)
diff: 
delta: (1,1)=7# (2,2)=7#
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color orange and mask Full at (0,1)
diff: 
delta: (0,0)=7# (2,2)=7#
! 8 wrong pixels (generated / expected)

TEST c9e6f938.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 530.9 bits (530.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-89] Checking task c9f8e694.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 23655.3 = 23664.2
DL output with Mo: L = 9.0 + 26509.2 = 26518.2
DL input+output M: L = 17.9 + 50164.5 = 50182.5

# learning a model for train pairs
2.000	
1.592	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.372	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.161	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.010	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.909	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.811	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.717	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 6403.4 = 6470.1
DL output with Mo: L = 85.3 + 11680.0 = 11765.3
DL input+output M: L = 152.1 + 18083.3 = 18235.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,2) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (5,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (9,4)
diff: 
delta: (1,0)=1  (2,0)=2  (3,0)=1  (4,0)=1  (5,0)=1  (6,0)=2  (7,0)=2  (8,0)=1  (9,0)=1  (10,0)=1  (11,0)=2 
   (336.4 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,2) and color blue and mask Full at (1,2)
  _01: a rectangle with size (6,2) and color blue and mask Full at (5,8)
  _011: a rectangle with size (10,1) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (2,3) and color blue and mask Full at (9,4)
diff: 
delta: (2,0)=2  (2,2)=2  (2,3)=2  (6,0)=2  (6,2)=2  (6,3)=2  (6,8)=2  (6,9)=2  (7,0)=2  (7,2)=2  (7,3)=2  (7,8)=2  (7,9)=2  (11,0)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,8)=2  (11,9)=2 
   (521.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,2) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (5,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (9,4)
diff: 
delta: (1,0)=1  (2,0)=2  (3,0)=1  (4,0)=1  (5,0)=1  (6,0)=2  (7,0)=2  (8,0)=1  (9,0)=1  (10,0)=1  (11,0)=2 
! size mismatch, 10x10 instead of 12x12

TRAIN c9f8e694.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (10,8) and color grey and mask ...xxxxx|...xxxxx|...xxxxx|...xxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxx..... at (2,4)
  _01: a rectangle with size (4,4) and color grey and mask Full at (1,1)
  _011: a rectangle with size (9,1) and color green and mask Full at (1,0)
diff: 
delta: (3,0)=4  (4,0)=4  (6,0)=4  (10,0)=4  (11,0)=4 
   (304.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,8) and color green and mask Full at (7,4)
  _01: a rectangle with size (2,12) and color yellow and mask Full at (3,0)
  _011: a rectangle with size (2,5) and color green and mask Full at (1,0)
  _0111: a rectangle with size (4,5) and color green and mask Full at (2,7)
diff: 
delta: (3,5)=0  (3,6)=0  (4,5)=0  (4,6)=0  (5,0)=3  (6,0)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (6,8)=4  (6,9)=4  (6,10)=4  (6,11)=4  (7,0)=3  (8,0)=3  (9,0)=3  (10,0)=4  (10,4)=4  (10,5)=4  (10,6)=4  (11,0)=4  (11,4)=4  (11,5)=4  (11,6)=4 
   (646.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (10,8) and color grey and mask ...xxxxx|...xxxxx|...xxxxx|...xxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxx..... at (2,4)
  _01: a rectangle with size (4,4) and color grey and mask Full at (1,1)
  _011: a rectangle with size (9,1) and color green and mask Full at (1,0)
diff: 
delta: (3,0)=4  (4,0)=4  (6,0)=4  (10,0)=4  (11,0)=4 
! size mismatch, 10x10 instead of 12x12

TRAIN c9f8e694.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,10) and color grey and mask xxxxxx....|xxxxxx....|xxxxxx....|xxxxxx.xxx|xxxxxx.xxx|xxxxxx.xxx|....xxxxxx|....xxx...|....xxx...|....xxx...|....xxx...|....xxx... at (0,2)
  _01: a rectangle with size (3,3) and color grey and mask Full at (9,2)
  _011: a rectangle with size (4,1) and color orange and mask Full at (4,0)
diff: 
delta: (0,0)=1  (1,0)=8  (2,0)=1  (3,0)=1  (8,0)=8  (9,0)=8  (10,0)=8  (11,0)=8 
! size mismatch, 10x10 instead of 12x12

TEST c9f8e694.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.3 sec (26.3 sec/task)
bits-train-error = 11680.0 bits (11680.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-88] Checking task caa06a1f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21611.4 = 21620.4
DL output with Mo: L = 9.0 + 21564.9 = 21573.9
DL input+output M: L = 17.9 + 43176.4 = 43194.3

# learning a model for train pairs
2.000	
1.092	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.619	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.229	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.204	OUT DEF: ^.size=^.size
0.179	OUT DEF: ^.layer_0.shape.size=^.size
0.165	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.154	OUT DEF: ^.color=^.layer_0.shape.color
0.145	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.136	IN  DEF: ^.layer_0.shape.mask=Even Checkboard
0.129	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.126	IN  DEF: ^.layer_01.shape.mask=Full
0.125	IN  DEF: ^.size=(?,?)
0.123	IN  DEF: ^.layer_0.pos=(?,?)
0.117	IN  DEF: ^.layer_0.pos.i=(0)
0.111	IN  DEF: ^.layer_0.pos.j=(0)
0.109	IN  DEF: ^.layer_0.shape.size=(?,?)
0.108	IN  DEF: ^.layer_01.pos=(?,?)
0.102	IN  DEF: ^.layer_01.pos.i=(0)
0.096	IN  DEF: ^.layer_01.pos.j=(0)
0.094	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.size and color ^.layer_01.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Even Checkboard at ((0),(0))
  _01: a rectangle with size (?,?) and color ? and mask Full at ((0),(0))

DL input  with Mi: L = 75.5 + 1932.3 = 2007.8
DL output with Mo: L = 27.5 + 0.0 = 27.5
DL input+output M: L = 103.0 + 1932.3 = 2035.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color pink and mask Even Checkboard at (0,0)
  _01: a rectangle with size (7,7) and color orange and mask Full at (0,0)
diff: 
delta:
   (67.5 bits)
data: a background with size (11,11) and color pink and layers
  _0: a rectangle with size (11,11) and color orange and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color pink and mask Even Checkboard at (0,0)
  _01: a rectangle with size (7,7) and color orange and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN caa06a1f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (7,7) and color pink and mask Even Checkboard at (0,0)
  _01: a rectangle with size (7,7) and color green and mask Full at (0,0)
diff: 
delta:
   (65.6 bits)
data: a background with size (8,8) and color pink and layers
  _0: a rectangle with size (8,8) and color green and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (7,7) and color pink and mask Even Checkboard at (0,0)
  _01: a rectangle with size (7,7) and color green and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN caa06a1f.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (5,5) and color yellow and mask Full at (0,0)
diff: 
delta:
   (60.1 bits)
data: a background with size (6,6) and color grey and layers
  _0: a rectangle with size (6,6) and color yellow and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (5,5) and color yellow and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN caa06a1f.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (6,18) and color green and mask Full at (12,0)
  _01: a rectangle with size (18,6) and color green and mask Full at (0,12)
diff:   ^.layer_01.pos.j  ^.layer_0.shape.mask  ^.layer_0.pos.i
delta: (0,1)=5# (0,2)=7# (0,4)=5# (0,5)=7# (0,7)=5# (0,8)=7# (0,10)=5# (0,11)=7# (1,0)=5# (1,1)=7# (1,3)=5# (1,4)=7# (1,6)=5# (1,7)=7# (1,9)=5# (1,10)=7# (2,1)=5# (2,2)=7# (2,4)=5# (2,5)=7# (2,7)=5# (2,8)=7# (2,10)=5# (2,11)=7# (3,0)=5# (3,1)=7# (3,3)=5# (3,4)=7# (3,6)=5# (3,7)=7# (3,9)=5# (3,10)=7# (4,1)=5# (4,2)=7# (4,4)=5# (4,5)=7# (4,7)=5# (4,8)=7# (4,10)=5# (4,11)=7# (5,0)=5# (5,1)=7# (5,3)=5# (5,4)=7# (5,6)=5# (5,7)=7# (5,9)=5# (5,10)=7# (6,1)=5# (6,2)=7# (6,4)=5# (6,5)=7# (6,7)=5# (6,8)=7# (6,10)=5# (6,11)=7# (7,0)=5# (7,1)=7# (7,3)=5# (7,4)=7# (7,6)=5# (7,7)=7# (7,9)=5# (7,10)=7# (8,1)=5# (8,2)=7# (8,4)=5# (8,5)=7# (8,7)=5# (8,8)=7# (8,10)=5# (8,11)=7# (9,0)=5# (9,1)=7# (9,3)=5# (9,4)=7# (9,6)=5# (9,7)=7# (9,9)=5# (9,10)=7# (10,1)=5# (10,2)=7# (10,4)=5# (10,5)=7# (10,7)=5# (10,8)=7# (10,10)=5# (10,11)=7# (11,0)=5# (11,1)=7# (11,3)=5# (11,4)=7# (11,6)=5# (11,7)=7# (11,9)=5# (11,10)=7#
! 324 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (18,18) and color green and mask ............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|............xxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (12,2) and color grey and mask Odd Checkboard at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.mask
delta: (0,2)=7# (0,4)=5# (0,5)=7# (0,7)=5# (0,8)=7# (0,10)=5# (0,11)=7# (1,1)=7# (1,3)=5# (1,4)=7# (1,6)=5# (1,7)=7# (1,9)=5# (1,10)=7# (2,2)=7# (2,4)=5# (2,5)=7# (2,7)=5# (2,8)=7# (2,10)=5# (2,11)=7# (3,1)=7# (3,3)=5# (3,4)=7# (3,6)=5# (3,7)=7# (3,9)=5# (3,10)=7# (4,2)=7# (4,4)=5# (4,5)=7# (4,7)=5# (4,8)=7# (4,10)=5# (4,11)=7# (5,1)=7# (5,3)=5# (5,4)=7# (5,6)=5# (5,7)=7# (5,9)=5# (5,10)=7# (6,2)=7# (6,4)=5# (6,5)=7# (6,7)=5# (6,8)=7# (6,10)=5# (6,11)=7# (7,1)=7# (7,3)=5# (7,4)=7# (7,6)=5# (7,7)=7# (7,9)=5# (7,10)=7# (8,2)=7# (8,4)=5# (8,5)=7# (8,7)=5# (8,8)=7# (8,10)=5# (8,11)=7# (9,1)=7# (9,3)=5# (9,4)=7# (9,6)=5# (9,7)=7# (9,9)=5# (9,10)=7# (10,2)=7# (10,4)=5# (10,5)=7# (10,7)=5# (10,8)=7# (10,10)=5# (10,11)=7# (11,1)=7# (11,3)=5# (11,4)=7# (11,6)=5# (11,7)=7# (11,9)=5# (11,10)=7#
! 264 wrong pixels (generated / expected)

TEST caa06a1f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-87] Checking task cbded52d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 18603.9 = 18612.9
DL output with Mo: L = 9.0 + 19887.4 = 19896.4
DL input+output M: L = 17.9 + 38491.3 = 38509.2

# learning a model for train pairs
2.000	
1.881	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.762	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.685	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.538	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.431	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.340	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
1.289	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.261	IN  OBJECT at ^.layer_0110: a rectangle with size ? and color ? and mask ? at ?
1.227	OUT OBJECT at ^.layer_001: ^.layer_0110.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _00: ^.layer_0.shape at ?
  _001: ^.layer_0110.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_011.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _0110: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 12030.2 = 12115.5
DL output with Mo: L = 77.0 + 11388.3 = 11465.3
DL input+output M: L = 162.4 + 23418.5 = 23580.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,2) and color blue and mask Full at (0,3)
  _01: a rectangle with size (8,2) and color blue and mask Full at (0,6)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _011: a rectangle with size (5,2) and color blue and mask Full at (3,0)
diff: 
delta: (0,1)=4  (0,7)=4  (2,3)=0  (2,4)=0  (2,6)=0  (2,7)=0  (4,0)=2  (4,6)=2  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (5,6)=0  (5,7)=0  (6,1)=4 
   (419.5 bits)
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (8,2) and color blue and mask Full at (0,3)
  _001: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _0: a rectangle with size (8,2) and color blue and mask Full at (0,6)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,1)
  _011: a rectangle with size (5,2) and color blue and mask Full at (3,0)
diff: 
delta: (0,1)=4  (0,4)=4  (0,7)=4  (2,3)=0  (2,4)=0  (2,6)=0  (2,7)=0  (4,0)=2  (4,3)=2  (4,6)=2  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (5,6)=0  (5,7)=0  (6,1)=4 
   (421.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,2) and color blue and mask Full at (0,3)
  _01: a rectangle with size (8,2) and color blue and mask Full at (0,6)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _011: a rectangle with size (5,2) and color blue and mask Full at (3,0)
diff: 
delta: (0,1)=4  (0,7)=4  (2,3)=0  (2,4)=0  (2,6)=0  (2,7)=0  (4,0)=2  (4,6)=2  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (5,6)=0  (5,7)=0  (6,1)=4 
! size mismatch, 10x10 instead of 8x8

TRAIN cbded52d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask Full at (3,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (6,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _011: a rectangle with size (2,5) and color blue and mask Full at (0,3)
diff: 
delta: (0,3)=7# (0,5)=0  (1,1)=3  (1,5)=0  (1,7)=3  (3,2)=0  (3,5)=0  (4,2)=0  (4,5)=0  (6,2)=0  (6,3)=7# (6,5)=0  (7,2)=0  (7,5)=0  (7,7)=3 
   (419.5 bits)
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask Full at (6,0)
  _001: a rectangle with size (2,2) and color blue and mask Full at (0,6)
  _0: a rectangle with size (2,2) and color blue and mask Full at (3,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _011: a rectangle with size (2,5) and color blue and mask Full at (3,3)
diff: 
delta: (0,3)=7# (0,4)=1  (1,1)=3  (1,3)=1  (1,4)=3  (1,7)=3  (3,3)=7# (3,5)=0  (4,5)=0  (4,7)=3  (6,2)=0  (6,3)=7# (6,5)=0  (7,2)=0  (7,5)=0  (7,7)=3 
   (403.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask Full at (3,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (6,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _011: a rectangle with size (2,5) and color blue and mask Full at (0,3)
diff: 
delta: (0,3)=7# (0,5)=0  (1,1)=3  (1,5)=0  (1,7)=3  (3,2)=0  (3,5)=0  (4,2)=0  (4,5)=0  (6,2)=0  (6,3)=7# (6,5)=0  (7,2)=0  (7,5)=0  (7,7)=3 
! size mismatch, 10x10 instead of 8x8
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (8,2) and color blue and mask Full at (0,3)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (0,6)
  _011: a rectangle with size (5,2) and color blue and mask Full at (3,6)
diff: 
delta: (0,3)=7# (1,1)=3  (1,7)=3  (2,0)=0  (2,1)=0  (2,3)=0  (2,4)=0  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (5,6)=0  (5,7)=0  (6,3)=7# (7,7)=3 
! size mismatch, 10x10 instead of 8x8

TRAIN cbded52d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (3,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (6,0)
  _011: a rectangle with size (2,5) and color blue and mask Full at (6,3)
diff: 
delta: (0,2)=0  (0,5)=0  (1,2)=0  (1,5)=0  (3,2)=0  (3,5)=0  (4,0)=3  (4,2)=0  (4,5)=0  (4,6)=3  (6,5)=0  (7,5)=0 
   (364.1 bits)
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask Full at (0,0)
  _001: a rectangle with size (2,2) and color blue and mask Full at (6,0)
  _0: a rectangle with size (2,5) and color blue and mask Full at (6,3)
  _01: a rectangle with size (2,2) and color blue and mask Full at (3,0)
  _011: a rectangle with size (2,5) and color blue and mask Full at (3,3)
diff: 
delta: (0,2)=0  (0,5)=0  (1,2)=0  (1,5)=0  (3,5)=0  (4,0)=3  (4,3)=3  (4,5)=0  (4,6)=3  (6,5)=0  (7,5)=0 
   (313.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (3,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (6,0)
  _011: a rectangle with size (2,5) and color blue and mask Full at (6,3)
diff: 
delta: (0,2)=0  (0,5)=0  (1,2)=0  (1,5)=0  (3,2)=0  (3,5)=0  (4,0)=3  (4,2)=0  (4,5)=0  (4,6)=3  (6,5)=0  (7,5)=0 
! size mismatch, 10x10 instead of 8x8

TRAIN cbded52d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask Full at (3,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (0,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (6,3)
  _011: a rectangle with size (2,2) and color blue and mask Full at (6,0)
diff: 
delta: (0,2)=0  (0,5)=0  (1,1)=8  (1,2)=0  (1,5)=0  (1,7)=8  (3,2)=0  (3,5)=0  (4,2)=0  (4,5)=0  (6,0)=6  (6,6)=6  (6,7)=1  (7,6)=1  (7,7)=8 
! size mismatch, 10x10 instead of 8x8
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,2) and color blue and mask Full at (0,3)
  _01: a rectangle with size (8,2) and color blue and mask Full at (0,0)
  _0110: a rectangle with size (2,2) and color blue and mask Full at (3,6)
  _011: a rectangle with size (2,2) and color blue and mask Full at (0,6)
diff: 
delta: (1,1)=8  (1,7)=8  (2,0)=0  (2,1)=0  (2,3)=0  (2,4)=0  (5,0)=0  (5,1)=0  (5,3)=0  (5,4)=0  (6,0)=6  (6,6)=6  (6,7)=1  (7,6)=1  (7,7)=8 
! size mismatch, 10x10 instead of 8x8

TEST cbded52d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.1 sec (26.1 sec/task)
bits-train-error = 11388.3 bits (11388.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-86] Checking task cce03e0d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2787.1 = 2796.1
DL output with Mo: L = 9.0 + 8625.1 = 8634.1
DL input+output M: L = 17.9 + 11412.2 = 11430.1

# learning a model for train pairs
2.000	
1.825	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.653	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.517	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.466	IN  DEF: ^.layer_0.shape.color=blue
1.416	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.403	IN  DEF: ^.size=(?,?)
1.345	IN  DEF: ^.size.i=3
1.287	IN  DEF: ^.size.j=3
1.275	IN  DEF: ^.layer_0.pos=(?,?)
1.243	IN  DEF: ^.layer_0.pos.i=0
1.231	IN  DEF: ^.layer_0.shape.size=(?,?)
1.218	IN  DEF: ^.layer_01.pos=(?,?)
1.187	IN  DEF: ^.layer_01.pos.j=0
1.179	OUT OBJECT at ^.layer_000: a rectangle with size ? and color ? and mask ? at ?
1.163	OUT DEF: ^.layer_0.shape.color=red
1.158	OUT DEF: ^.color=black
1.154	OUT DEF: ^.size=(?,?)
1.124	OUT DEF: ^.size.i=9
1.095	OUT DEF: ^.size.j=9
1.091	OUT DEF: ^.layer_000.pos=(?,?)
1.087	OUT DEF: ^.layer_000.shape.size=(?,?)
1.082	OUT DEF: ^.layer_00.pos=(?,?)
1.067	OUT DEF: ^.layer_00.pos.j=^.layer_0.pos.j
1.063	OUT DEF: ^.layer_0.pos=(?,?)
1.059	OUT DEF: ^.layer_0.shape.size=(?,?)
1.057	OUT DEF: ^.layer_000.shape.color=^.layer_0.shape.color
1.046	OUT DEF: ^.layer_000.shape.size.j=^.layer_0.pos.j + ^.layer_01.pos.i
1.042	OUT OBJECT at ^.layer_0001: a rectangle with size ? and color ? and mask ? at ?
1.037	OUT DEF: ^.color=black
1.033	OUT DEF: ^.layer_0001.pos=(?,?)
1.029	OUT DEF: ^.layer_0001.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (9,9) and color black and layers
  _000: a rectangle with size (?,^.layer_0.pos.j + ^.layer_01.pos.i) and color ^.layer_0.shape.color and mask ? at (?,?)
  _0001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _00: ^.layer_0.shape at (?,^.layer_0.pos.j)
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (0,?)
  _01: a point with color ? at (?,0)

DL input  with Mi: L = 64.8 + 1323.0 = 1387.8
DL output with Mo: L = 137.4 + 4462.4 = 4599.8
DL input+output M: L = 202.2 + 5785.4 = 5987.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
   (35.0 bits)
data: a background with size (9,9) and color black and layers
  _000: a rectangle with size (1,1) and color blue and mask Full at (3,0)
  _0001: a rectangle with size (1,1) and color blue and mask Full at (4,1)
  _00: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (3,0)
  _0: a rectangle with size (1,1) and color red and mask Full at (4,0)
diff: 
delta:
   (54.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta: (1,1)=1  (2,2)=1 
! 8 wrong pixels (generated / expected)

TRAIN cce03e0d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta: (0,2)=2 
   (45.0 bits)
data: a background with size (9,9) and color black and layers
  _000: a rectangle with size (2,2) and color blue and mask .x|xx at (0,6)
  _0001: a rectangle with size (1,1) and color red and mask Full at (0,8)
  _00: a rectangle with size (2,2) and color blue and mask .x|xx at (6,0)
  _0: a rectangle with size (1,1) and color red and mask Full at (2,6)
diff: 
delta: (6,2)=2  (8,0)=2 
   (101.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta: (0,2)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a point with color red at (0,2)
diff:   ^.layer_01.pos.j
delta: (2,0)=2 
! 14 wrong pixels (generated / expected)

TRAIN cce03e0d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color black at (1,0)
diff: 
delta: (2,2)=0 
   (52.3 bits)
data: a background with size (9,9) and color black and layers
  _000: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,7)
  _0001: a rectangle with size (9,9) and color red and mask ......xxx|.......xx|......xx.|...x.x...|....x....|...x.....|x.x......|.x.......|x........ at (0,0)
  _00: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _0: a rectangle with size (3,3) and color red and mask xxx|.xx|xx. at (0,0)
diff: 
delta: (3,4)=1  (4,5)=1  (5,4)=1  (6,1)=1  (7,2)=1  (8,1)=1 
   (289.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color black at (1,0)
diff: 
delta: (2,2)=0 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color black at (2,2)
diff:   ^.layer_01.pos.j
delta: (1,0)=0 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color red at (0,0)
diff: 
delta: (1,0)=0  (2,2)=0 
! 27 wrong pixels (generated / expected)

TRAIN cce03e0d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta: (1,1)=0  (1,2)=1  (2,2)=0 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x..|.x. at (0,0)
  _01: a point with color black at (1,1)
diff:   ^.layer_01.pos.j  ^.layer_0.shape.color
delta: (2,2)=0 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x..|.x. at (0,0)
  _01: a point with color black at (2,2)
diff:   ^.layer_01.pos.j  ^.layer_0.shape.color
delta: (1,1)=0 
! 34 wrong pixels (generated / expected)

TEST cce03e0d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.9 sec (17.9 sec/task)
bits-train-error = 4462.4 bits (4462.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-85] Checking task cdecee7f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4961.3 = 4970.3
DL output with Mo: L = 9.0 + 3738.8 = 3747.8
DL input+output M: L = 17.9 + 8700.2 = 8718.1

# learning a model for train pairs
2.000	
1.971	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.942	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.911	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.879	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.846	OUT OBJECT at ^.layer_01111: a point with color ? at ?
1.808	OUT OBJECT at ^.layer_011111: a point with color ? at ?
1.787	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.748	OUT DEF: ^.layer_011111.shape=^.layer_0.shape
1.726	IN  OBJECT at ^.layer_01: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?
  _011111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 34.7 + 4718.3 = 4753.0
DL output with Mo: L = 79.2 + 2807.5 = 2886.6
DL input+output M: L = 113.9 + 7525.7 = 7639.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,1)
  _01: a point with color pink at (2,4)
diff: 
delta: (4,0)=3  (5,6)=7# (7,9)=9# (8,2)=8 
   (131.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color cyan at (0,2)
  _011: a point with color brown at (1,0)
  _0111: a point with color orange at (1,1)
  _01111: a point with color pink at (1,2)
  _011111: a point with color blue at (0,1)
diff: 
delta:
   (79.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,1)
  _01: a point with color pink at (2,4)
diff: 
delta: (4,0)=3  (5,6)=7# (7,9)=9# (8,2)=8 
! size mismatch, 10x10 instead of 3x3

TRAIN cdecee7f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
diff: 
delta: (2,6)=8  (4,4)=6  (5,0)=9# (6,8)=5# (7,1)=3 
   (150.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,1)
  _011: a point with color grey at (1,0)
  _0111: a point with color cyan at (1,1)
  _01111: a point with color pink at (1,2)
  _011111: a point with color yellow at (0,2)
diff: 
delta: (2,0)=2 
   (97.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
diff: 
delta: (2,6)=8  (4,4)=6  (5,0)=9# (6,8)=5# (7,1)=3 
! size mismatch, 10x10 instead of 3x3

TRAIN cdecee7f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,9)
  _01: a point with color grey at (1,2)
diff: 
delta: (1,5)=9# (2,8)=1  (3,1)=4  (4,7)=5# (5,4)=3  (8,0)=2  (8,6)=1 
   (189.5 bits)
data: a background with size (3,3) and color blue and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (0,1)
  _011: a point with color grey at (0,2)
  _0111: a point with color brown at (1,1)
  _01111: a point with color green at (1,2)
  _011111: a point with color green at (2,2)
diff: 
delta: (2,0)=5#
   (103.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,9)
  _01: a point with color grey at (1,2)
diff: 
delta: (1,5)=9# (2,8)=1  (3,1)=4  (4,7)=5# (5,4)=3  (8,0)=2  (8,6)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN cdecee7f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color brown at (1,6)
diff: 
delta: (2,9)=1  (3,1)=2  (4,7)=6  (5,3)=3  (7,0)=5# (8,5)=4  (9,2)=9#
! size mismatch, 10x10 instead of 3x3

TEST cdecee7f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.5 sec (20.5 sec/task)
bits-train-error = 2807.5 bits (2807.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-84] Checking task ce22a75a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1790.0 = 1799.0
DL output with Mo: L = 9.0 + 12316.2 = 12325.2
DL input+output M: L = 17.9 + 14106.3 = 14124.2

# learning a model for train pairs
2.000	
1.203	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.162	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.111	IN  DEF: ^.layer_0.shape.color=grey
1.066	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.015	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.964	IN  DEF: ^.layer_01.shape.color=grey
0.913	IN  DEF: ^.layer_011.shape.color=grey
0.883	OUT DEF: ^.size=^.size
0.865	IN  DEF: ^.color=black
0.853	IN  DEF: ^.size=(?,?)
0.760	IN  DEF: ^.size.i=9
0.667	IN  DEF: ^.size.j=9
0.654	IN  DEF: ^.layer_0.pos=(?,?)
0.605	IN  DEF: ^.layer_0.pos.i=1
0.593	IN  DEF: ^.layer_01.pos=(?,?)
0.544	IN  DEF: ^.layer_01.pos.i=4
0.495	IN  DEF: ^.layer_01.pos.j=4
0.482	IN  DEF: ^.layer_011.pos=(?,?)
0.433	IN  DEF: ^.layer_011.pos.i=7
0.384	IN  DEF: ^.layer_011.pos.j=7
0.376	OUT DEF: ^.layer_0.shape.color=blue
0.374	OUT DEF: ^.color=black
0.372	OUT DEF: ^.layer_0.shape.size=(?,?)
0.358	OUT DEF: ^.layer_0.shape.size.i=^.size.i
0.356	OUT DEF: ^.layer_0.pos=(?,?)
0.349	OUT DEF: ^.layer_0.pos.i=(0)
0.343	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - ^.layer_0.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color blue and mask ? at ((0),^.layer_0.pos.j - ^.layer_0.pos.i)
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,?)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,7)

DL input  with Mi: L = 84.0 + 295.8 = 379.8
DL output with Mo: L = 50.2 + 1572.7 = 1622.9
DL input+output M: L = 134.2 + 1868.5 = 2002.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,7)
diff: 
delta:
   (4.5 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask xxx......|xxx......|xxx......|...xxx...|...xxx...|...xxx...|......xxx|......xxx|......xxx at (0,0)
diff: 
delta:
   (92.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,7)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN ce22a75a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,7)
diff: 
delta: (7,4)=5#
   (25.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,6) and color blue and mask xxx...|xxx...|xxx...|xxx...|xxx...|xxx...|xxxxxx|xxxxxx|xxxxxx at (0,3)
diff: 
delta:
   (64.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,7)
diff: 
delta: (7,4)=5#
! 18 wrong pixels (generated / expected)

TRAIN ce22a75a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (4,1)
  _011: a point with color grey at (4,7)
diff:   ^.layer_011.pos.i  ^.layer_01.pos.j
delta: (7,1)=5#
! 30 wrong pixels (generated / expected)

TEST ce22a75a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 1572.7 bits (1572.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-83] Checking task ce4f8723.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 16053.9 = 16062.9
DL output with Mo: L = 9.0 + 3154.8 = 3163.8
DL input+output M: L = 17.9 + 19208.7 = 19226.6

# learning a model for train pairs
2.000	
1.669	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.426	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.228	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.051	OUT DEF: ^.size=^.layer_0.shape.size
0.899	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.781	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.722	OUT DEF: ^.layer_0.shape.color=green
0.703	OUT DEF: ^.color=black
0.688	OUT DEF: ^.layer_0.pos=(?,?)
0.646	OUT DEF: ^.layer_0.pos.i=(0)
0.604	OUT DEF: ^.layer_0.pos.j=(0)
0.593	IN  DEF: ^.layer_011.shape.color=yellow
0.587	IN  DEF: ^.layer_011.shape.mask=Full
0.583	IN  DEF: ^.color=black
0.580	IN  DEF: ^.size=(?,?)
0.559	IN  DEF: ^.size.i=9
0.544	IN  DEF: ^.size.j=4
0.541	IN  DEF: ^.layer_0.pos=(?,?)
0.532	IN  DEF: ^.layer_0.pos.j=0
0.529	IN  DEF: ^.layer_0.shape.size=(?,?)
0.514	IN  DEF: ^.layer_0.shape.size.i=4
0.498	IN  DEF: ^.layer_0.shape.size.j=4
0.495	IN  DEF: ^.layer_01.pos=(?,?)
0.487	IN  DEF: ^.layer_01.pos.j=0
0.484	IN  DEF: ^.layer_01.shape.size=(?,?)
0.468	IN  DEF: ^.layer_01.shape.size.i=4
0.465	IN  DEF: ^.layer_011.pos=(?,?)
0.454	IN  DEF: ^.layer_011.pos.i=4
0.446	IN  DEF: ^.layer_011.pos.j=0
0.443	IN  DEF: ^.layer_011.shape.size=(?,?)
0.427	IN  DEF: ^.layer_011.shape.size.j=4
0.422	IN  DEF: ^.layer_011.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color green and mask ? at ((0),(0))
WHERE (Mi)
a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color ? and mask ? at (?,0)
  _01: a rectangle with size (4,?) and color ? and mask ? at (?,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)

DL input  with Mi: L = 118.2 + 2606.1 = 2724.3
DL output with Mo: L = 34.9 + 762.4 = 797.3
DL input+output M: L = 153.2 + 3368.4 = 3521.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
  _01: a rectangle with size (4,3) and color blue and mask xx.|.x.|.x.|x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (1,3)=1 
   (77.3 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|.xxx|xx..|x.xx at (0,0)
diff: 
delta:
   (19.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
  _01: a rectangle with size (4,3) and color blue and mask xx.|.x.|.x.|x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (1,3)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask xx.|.x.|.x.|x.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff:   ^.layer_0.shape.size.j
delta: (1,3)=1 
! size mismatch, 4x3 instead of 4x4

TRAIN ce4f8723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.x.x|..xx|xx.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|...x|xxxx|xx.x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (62.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|.x.x|xxxx|xx.x at (0,0)
diff: 
delta:
   (19.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.x.x|..xx|xx.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|...x|xxxx|xx.x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN ce4f8723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xx.x|..x.|.x..|x.x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (62.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xx.x|x.x.|xx.x|xxxx at (0,0)
diff: 
delta:
   (19.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xx.x|..x.|.x..|x.x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN ce4f8723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
  _01: a rectangle with size (4,3) and color red and mask xx.|..x|xx.|..x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (57.9 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxx.|xxxx|xxxx|.xxx at (0,0)
diff: 
delta:
   (19.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
  _01: a rectangle with size (4,3) and color red and mask xx.|..x|xx.|..x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|..x|xx.|..x at (5,0)
  _01: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff:   ^.layer_0.shape.size.j
delta:
! size mismatch, 4x3 instead of 4x4

TRAIN ce4f8723.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|..x.|.x.x|xxx. at (5,0)
  _01: a rectangle with size (4,3) and color blue and mask x.x|x.x|.x.|x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask x.x|x.x|.x.|x.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xx..|..x.|.x.x|xxx. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff:   ^.layer_0.shape.size.j
delta:
! size mismatch, 4x3 instead of 4x4

TEST ce4f8723.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.4 sec (10.4 sec/task)
bits-train-error = 762.4 bits (762.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-82] Checking task ce602527.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 45836.6 = 45845.6
DL output with Mo: L = 9.0 + 4878.1 = 4887.0
DL input+output M: L = 17.9 + 50714.7 = 50732.6

# learning a model for train pairs
2.000	
1.544	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.246	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.120	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.970	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.854	OUT DEF: ^.size=^.layer_011.shape.size
0.770	OUT DEF: ^.layer_0.shape.size=^.layer_011.shape.size
0.704	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.638	OUT DEF: ^.color=^.layer_0.shape.color
0.601	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.598	IN  DEF: ^.layer_01.shape.mask=Full
0.596	IN  DEF: ^.layer_011.shape.mask=Full
0.595	IN  DEF: ^.layer_011.pos=(?,?)
0.594	IN  DEF: ^.size=(?,?)
0.593	IN  DEF: ^.layer_0.pos=(?,?)
0.588	IN  DEF: ^.layer_0.pos.j=(0)
0.583	IN  DEF: ^.layer_0.pos.i=(0)
0.582	IN  DEF: ^.layer_0.shape.size=(?,?)
0.581	IN  DEF: ^.layer_01.pos=(?,?)
0.580	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.layer_011.shape.size and color ^.layer_011.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size ? and color ? and mask Full at (?,?)

DL input  with Mi: L = 93.6 + 18492.0 = 18585.6
DL output with Mo: L = 31.1 + 822.4 = 853.5
DL input+output M: L = 124.8 + 19314.3 = 19439.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color cyan and layers
  _0: a rectangle with size (17,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxx..x..x|xxx.....xxx.xxx.x|xxx.x.x.xxx.....x|xxxxxxx.xxxxx.xxx|xxx.x.x.xxx.....x|xxx.....xxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx..........xxxx|xxx..........xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx|xxxxxxxxxxx..xxxx|xxxxxxxxxxx..xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx at (0,0)
  _01: a rectangle with size (5,5) and color green and mask Full at (2,11)
  _011: a rectangle with size (5,5) and color red and mask Full at (3,3)
diff: 
delta:
   (406.8 bits)
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (5,5) and color red and mask xxxxx|x.x.x|....x|x.x.x|xxxxx at (0,0)
diff: 
delta:
   (28.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color cyan and layers
  _0: a rectangle with size (17,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxx..x..x|xxx.....xxx.xxx.x|xxx.x.x.xxx.....x|xxxxxxx.xxxxx.xxx|xxx.x.x.xxx.....x|xxx.....xxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx..........xxxx|xxx..........xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx|xxxxxxxxxxx..xxxx|xxxxxxxxxxx..xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx at (0,0)
  _01: a rectangle with size (5,5) and color green and mask Full at (2,11)
  _011: a rectangle with size (5,5) and color red and mask Full at (3,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color cyan and layers
  _0: a rectangle with size (17,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxx..x..x|xxx.....xxx.xxx.x|xxx.x.x.xxx.....x|xxxxxxx.xxxxx.xxx|xxx.x.x.xxx.....x|xxx.....xxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx..........xxxx|xxx..........xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx|xxxxxxxxxxx..xxxx|xxxxxxxxxxx..xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx at (0,0)
  _01: a rectangle with size (5,5) and color red and mask Full at (3,3)
  _011: a rectangle with size (5,5) and color green and mask Full at (2,11)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,17) and color red and layers
  _0: a rectangle with size (17,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxx..x..x|xxx.....xxx.xxx.x|xxx.x.x.xxx.....x|xxxxxxx.xxxxx.xxx|xxx.x.x.xxx.....x|xxx.....xxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx..........xxxx|xxx..........xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx|xxxxxxxxxxx..xxxx|xxxxxxxxxxx..xxxx|xxx..xx..xx..xxxx|xxx..xx..xx..xxxx at (0,0)
  _01: a rectangle with size (5,5) and color green and mask Full at (2,11)
  _011: a rectangle with size (8,10) and color cyan and mask Full at (9,3)
diff: 
delta: (15,3)=8  (15,4)=8  (15,7)=8  (15,8)=8  (16,3)=8  (16,4)=8  (16,7)=8  (16,8)=8 
! size mismatch, 8x10 instead of 5x5

TRAIN ce602527.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (18,18) and color cyan and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxx.....xxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxx.xxxxx|xxxxxxxxxxx...xxxx|x..xxxxxxxxx.xxxxx|x..xxxxxxxx...xxxx|.....xxxxxxx.xxxxx|.....xxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|.....xxxxxxxxxxxxx|.....xxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (8,5) and color pink and mask Full at (10,0)
  _011: a rectangle with size (5,3) and color yellow and mask Full at (8,11)
diff: 
delta: (14,0)=8  (15,0)=8 
   (487.0 bits)
data: a background with size (5,3) and color cyan and layers
  _0: a rectangle with size (5,3) and color yellow and mask .x.|xxx|.x.|xxx|.x. at (0,0)
diff: 
delta:
   (18.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color yellow and layers
  _0: a rectangle with size (18,18) and color cyan and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxx.....xxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxx.xxxxx|xxxxxxxxxxx...xxxx|x..xxxxxxxxx.xxxxx|x..xxxxxxxx...xxxx|.....xxxxxxx.xxxxx|.....xxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|.....xxxxxxxxxxxxx|.....xxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (8,5) and color pink and mask Full at (10,0)
  _011: a rectangle with size (3,5) and color green and mask Full at (4,3)
diff: 
delta: (14,0)=8  (15,0)=8 
! size mismatch, 3x5 instead of 5x3
>> Trial 2
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (18,18) and color cyan and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxx.....xxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxx.xxxxx|xxxxxxxxxxx...xxxx|x..xxxxxxxxx.xxxxx|x..xxxxxxxx...xxxx|.....xxxxxxx.xxxxx|.....xxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|.....xxxxxxxxxxxxx|.....xxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (8,5) and color pink and mask Full at (10,0)
  _011: a rectangle with size (5,3) and color yellow and mask Full at (8,11)
diff: 
delta: (14,0)=8  (15,0)=8 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,18) and color yellow and layers
  _0: a rectangle with size (18,18) and color cyan and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxx.....xxxxxxxxxx|xxxx.x.xxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxx.xxxxx|xxxxxxxxxxx...xxxx|x..xxxxxxxxx.xxxxx|x..xxxxxxxx...xxxx|.....xxxxxxx.xxxxx|.....xxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|...xxxxxxxxxxxxxxx|.....xxxxxxxxxxxxx|.....xxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,5) and color green and mask Full at (4,3)
  _011: a rectangle with size (8,5) and color pink and mask Full at (10,0)
diff: 
delta: (14,0)=8  (15,0)=8 
! size mismatch, 8x5 instead of 5x3

TRAIN ce602527.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,17) and color blue and layers
  _0: a rectangle with size (19,17) and color red and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxx...xxxxxxxxxx|xxxx.xxxxxxxxxxxx|xxxx...xxxxxxxxxx|xxxxxx.xxxxxxxxxx|xxxx...xxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxx.x.x.xxxx|xxxxxxxx.....xxxx|xxxxxxxxxx.xxxxxx|....xxxxxxxxxxxxx|....xxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxx|....xxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,5) and color green and mask Full at (10,8)
  _011: a rectangle with size (5,3) and color cyan and mask Full at (2,4)
diff: 
delta:
   (438.8 bits)
data: a background with size (5,3) and color red and layers
  _0: a rectangle with size (5,3) and color cyan and mask xxx|x..|xxx|..x|xxx at (0,0)
diff: 
delta:
   (18.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color blue and layers
  _0: a rectangle with size (19,17) and color red and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxx...xxxxxxxxxx|xxxx.xxxxxxxxxxxx|xxxx...xxxxxxxxxx|xxxxxx.xxxxxxxxxx|xxxx...xxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxx.x.x.xxxx|xxxxxxxx.....xxxx|xxxxxxxxxx.xxxxxx|....xxxxxxxxxxxxx|....xxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxx|....xxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (5,3) and color cyan and mask Full at (2,4)
  _011: a rectangle with size (3,5) and color green and mask Full at (10,8)
diff: 
delta:
! size mismatch, 3x5 instead of 5x3
>> Trial 2
data: a background with size (19,17) and color blue and layers
  _0: a rectangle with size (19,17) and color red and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxx...xxxxxxxxxx|xxxx.xxxxxxxxxxxx|xxxx...xxxxxxxxxx|xxxxxx.xxxxxxxxxx|xxxx...xxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxx.x.x.xxxx|xxxxxxxx.....xxxx|xxxxxxxxxx.xxxxxx|....xxxxxxxxxxxxx|....xxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|....xxxxxxxxxxxxx|....xxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,5) and color green and mask Full at (10,8)
  _011: a rectangle with size (5,3) and color cyan and mask Full at (2,4)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN ce602527.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,17) and color red and layers
  _0: a rectangle with size (15,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxx.xx.xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|.....xxxx...xxxxx|.....xxx.....xxxx|.......xx...xxxxx|.......xxxxxxxxxx|.....xxxxxxxxxxxx|.....xxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (2,5)
  _011: a rectangle with size (3,5) and color green and mask Full at (9,8)
diff: 
delta: (4,6)=1  (4,7)=1  (10,10)=1  (11,1)=1  (11,2)=1  (12,1)=1  (12,2)=1 
   (516.7 bits)
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,5) and color green and mask .xxx.|xx.xx|.xxx. at (0,0)
diff: 
delta:
   (18.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color cyan and layers
  _0: a rectangle with size (15,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxx.xx.xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|.....xxxx...xxxxx|.....xxx.....xxxx|.......xx...xxxxx|.......xxxxxxxxxx|.....xxxxxxxxxxxx|.....xxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (6,7) and color red and mask Full at (9,0)
  _011: a rectangle with size (3,5) and color green and mask Full at (9,8)
diff: 
delta: (4,6)=1  (4,7)=1  (10,10)=1  (11,1)=1  (11,2)=1  (12,1)=1  (12,2)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color green and layers
  _0: a rectangle with size (15,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxx.xx.xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|.....xxxx...xxxxx|.....xxx.....xxxx|.......xx...xxxxx|.......xxxxxxxxxx|.....xxxxxxxxxxxx|.....xxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (6,7) and color red and mask Full at (9,0)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (2,5)
diff: 
delta: (4,6)=1  (4,7)=1  (10,10)=1  (11,1)=1  (11,2)=1  (12,1)=1  (12,2)=1 
! size mismatch, 4x4 instead of 3x5
>> Trial 3
data: a background with size (15,17) and color green and layers
  _0: a rectangle with size (15,17) and color blue and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxx.xx.xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxx....xxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|.....xxxx...xxxxx|.....xxx.....xxxx|.......xx...xxxxx|.......xxxxxxxxxx|.....xxxxxxxxxxxx|.....xxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (2,5)
  _011: a rectangle with size (6,7) and color red and mask Full at (9,0)
diff: 
delta: (4,6)=1  (4,7)=1  (10,10)=1  (11,1)=1  (11,2)=1  (12,1)=1  (12,2)=1 
! size mismatch, 6x7 instead of 3x5

TRAIN ce602527.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (18,18) and color green and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxx.x..xxxxx|xxxxxxxxx..x.xxxxx|xxxxxxxxx.x..xxxxx|xxx.xxxxxxxxxxxxxx|xx...xxxxxxxxxxxxx|xxx.xxxxxxxxxxxxxx|xx...xxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxx..xxxxxxxx|xxxxxxxx..xxxxxxxx|xxxxxx......xxxxxx|xxxxxx......xxxxxx|xxxxxxxx..xxxxxxxx|xxxxxxxx..xxxxxxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask Full at (2,9)
  _011: a rectangle with size (4,3) and color pink and mask Full at (5,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (18,18) and color green and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxx.x..xxxxx|xxxxxxxxx..x.xxxxx|xxxxxxxxx.x..xxxxx|xxx.xxxxxxxxxxxxxx|xx...xxxxxxxxxxxxx|xxx.xxxxxxxxxxxxxx|xx...xxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxx..xxxxxxxx|xxxxxxxx..xxxxxxxx|xxxxxx......xxxxxx|xxxxxx......xxxxxx|xxxxxxxx..xxxxxxxx|xxxxxxxx..xxxxxxxx at (0,0)
  _01: a rectangle with size (4,3) and color pink and mask Full at (5,2)
  _011: a rectangle with size (3,4) and color blue and mask Full at (2,9)
diff: 
delta:
! size mismatch, 3x4 instead of 4x3
>> Trial 3
data: a background with size (18,18) and color pink and layers
  _0: a rectangle with size (18,18) and color green and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxx.x..xxxxx|xxxxxxxxx..x.xxxxx|xxxxxxxxx.x..xxxxx|xxx.xxxxxxxxxxxxxx|xx...xxxxxxxxxxxxx|xxx.xxxxxxxxxxxxxx|xx...xxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxx..xxxxxxxx|xxxxxxxx..xxxxxxxx|xxxxxx......xxxxxx|xxxxxx......xxxxxx|xxxxxxxx..xxxxxxxx|xxxxxxxx..xxxxxxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask Full at (2,9)
  _011: a rectangle with size (6,6) and color cyan and mask Full at (12,6)
diff: 
delta:
! size mismatch, 6x6 instead of 4x3

TEST ce602527.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 822.4 bits (822.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-81] Checking task ce9e57f2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12098.1 = 12107.0
DL output with Mo: L = 9.0 + 12098.1 = 12107.0
DL input+output M: L = 17.9 + 24196.1 = 24214.1

# learning a model for train pairs
2.000	
1.750	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.544	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.410	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.309	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.222	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.136	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.055	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.956	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
0.870	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at ?
0.825	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_0111.shape at ?
  _01111: ^.layer_0111.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 3903.3 = 3988.6
DL output with Mo: L = 86.2 + 5911.1 = 5997.3
DL input+output M: L = 171.5 + 9814.4 = 9985.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (3,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
   (127.9 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (4,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (3,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,7)
  _0111: a rectangle with size (3,1) and color red and mask Full at (1,1)
  _01111: a rectangle with size (3,1) and color red and mask Full at (2,3)
diff: 
delta: (5,3)=8  (5,5)=8  (6,3)=8  (6,5)=8  (6,7)=8 
   (193.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (3,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (3,1) and color red and mask Full at (4,7)
  _0111: a rectangle with size (4,1) and color red and mask Full at (3,5)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (5,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,5)
diff: 
delta:
   (130.6 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (5,1)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (5,7)
  _0111: a rectangle with size (3,1) and color red and mask Full at (2,7)
  _01111: a rectangle with size (3,1) and color red and mask Full at (3,3)
diff: 
delta: (5,5)=2  (6,3)=8  (6,5)=2  (7,3)=8  (7,5)=8 
   (198.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (5,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,5)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (3,1) and color red and mask Full at (5,5)
  _0111: a rectangle with size (5,1) and color red and mask Full at (3,3)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color red and mask Full at (5,5)
diff: 
delta:
   (131.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,1) and color cyan and mask Full at (5,7)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (6,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (5,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (1,7)
  _01111: a rectangle with size (4,1) and color red and mask Full at (2,1)
diff: 
delta: (6,3)=2  (7,3)=2  (7,5)=8  (8,3)=8  (8,5)=8 
   (199.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color red and mask Full at (5,5)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (5,5)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,3)
  _0111: a rectangle with size (7,1) and color red and mask Full at (2,1)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TRAIN ce9e57f2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (9,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (5,1) and color red and mask Full at (6,7)
  _0111: a rectangle with size (2,1) and color red and mask Full at (9,5)
diff: 
delta:
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (9,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (2,1) and color red and mask Full at (9,5)
  _0111: a rectangle with size (5,1) and color red and mask Full at (6,7)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TEST ce9e57f2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 22.9 sec (22.9 sec/task)
bits-train-error = 5911.1 bits (5911.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-80] Checking task cf98881b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 29083.1 = 29092.0
DL output with Mo: L = 9.0 + 6585.1 = 6594.1
DL input+output M: L = 17.9 + 35668.1 = 35686.1

# learning a model for train pairs
2.000	
1.785	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.421	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.286	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.201	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.122	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.061	OUT DEF: ^.layer_0=^.layer_0
1.018	OUT OBJECT at ^.layer_01: a point with color ? at ?
0.982	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.973	OUT DEF: ^.size=(?,?)
0.925	OUT DEF: ^.size.i=^.size.i
0.878	OUT DEF: ^.size.j=^.layer_0.shape.size.j
0.868	OUT DEF: ^.layer_01.pos=(?,?)
0.845	OUT DEF: ^.layer_01.pos.j=^.layer_011.pos.j - ^.layer_0.shape.size.j
0.836	OUT DEF: ^.layer_011.pos=(?,?)
0.828	IN  DEF: ^.layer_0.shape.color=yellow
0.766	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.741	OUT DEF: ^.layer_011.pos.j=^.layer_0111.pos.i
0.718	OUT DEF: ^.layer_01.pos.i=^.layer_0111.pos.i + 2
0.710	IN  DEF: ^.layer_01111.shape.color=red
0.706	IN  DEF: ^.layer_01111.shape.mask=Full
0.704	IN  DEF: ^.color=black
0.701	IN  DEF: ^.size=(?,?)
0.685	IN  DEF: ^.size.j=14
0.674	IN  DEF: ^.size.i=4
0.672	IN  DEF: ^.layer_011.pos=(?,?)
0.666	IN  DEF: ^.layer_011.pos.i=0
0.664	IN  DEF: ^.layer_0.pos=(?,?)
0.658	IN  DEF: ^.layer_0.pos.i=0
0.649	IN  DEF: ^.layer_0.pos.j=(0)
0.647	IN  DEF: ^.layer_0.shape.size=(?,?)
0.645	IN  DEF: ^.layer_01.pos=(?,?)
0.643	IN  DEF: ^.layer_01.shape.size=(?,?)
0.632	IN  DEF: ^.layer_0.shape.size.j=4
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.layer_0.shape.size.j) and color ? and layers
  _0: ^.layer_0
  _01: a point with color ? at (^.layer_0111.pos.i + 2,^.layer_011.pos.j - ^.layer_0.shape.size.j)
  _011: a point with color ? at (?,^.layer_0111.pos.i)
WHERE (Mi)
a background with size (4,14) and color black and layers
  _0: a rectangle with size (?,4) and color yellow and mask ? at (0,(0))
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size ? and color ? and mask ? at (0,?)
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color red and mask Full at ?

DL input  with Mi: L = 144.6 + 9481.9 = 9626.5
DL output with Mo: L = 92.0 + 1895.2 = 1987.1
DL input+output M: L = 236.5 + 11377.1 = 11613.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _011: a rectangle with size (2,4) and color brown and mask xx..|..xx at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (3,5)=9# (3,7)=9#
   (202.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a point with color blue at (2,1)
  _011: a point with color brown at (0,0)
diff: 
delta: (0,3)=4  (1,2)=9# (1,3)=9# (2,2)=1 
   (83.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _011: a rectangle with size (2,4) and color brown and mask xx..|..xx at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (3,5)=9# (3,7)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (2,4) and color brown and mask xx..|..xx at (0,5)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (3,5)=9# (3,7)=9#
! 6 wrong pixels (generated / expected)

TRAIN cf98881b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _011: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
   (195.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a point with color blue at (2,1)
  _011: a point with color blue at (3,0)
diff: 
delta: (3,2)=9#
   (32.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _011: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
! 3 wrong pixels (generated / expected)

TRAIN cf98881b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (3,2) and color blue and mask .x|.x|x. at (0,10)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
   (204.8 bits)
data: a background with size (4,4) and color brown and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a point with color blue at (2,0)
  _011: a point with color black at (1,0)
diff: 
delta:
   (20.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (3,2) and color blue and mask .x|.x|x. at (0,10)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,9)
  _0111: a rectangle with size (3,2) and color blue and mask .x|.x|x. at (0,10)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 5 wrong pixels (generated / expected)

TRAIN cf98881b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _011: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta:
   (149.4 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a point with color brown at (2,1)
  _011: a point with color blue at (3,0)
diff: 
delta: (1,2)=9#
   (32.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _011: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN cf98881b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (3,3) and color brown and mask ..x|xx.|.x. at (1,6)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
   (196.1 bits)
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a point with color black at (3,0)
  _011: a point with color black at (0,1)
diff: 
delta:
   (20.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (3,3) and color brown and mask ..x|xx.|.x. at (1,6)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,9)
  _0111: a rectangle with size (3,3) and color brown and mask ..x|xx.|.x. at (1,6)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 4 wrong pixels (generated / expected)

TRAIN cf98881b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.x.|xxx.|.xxx|x.xx at (0,5)
  _01: a rectangle with size (4,4) and color blue and mask xx..|xxx.|xx.x|x... at (0,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (2,4) and color yellow and mask ..x.|xx.x at (0,0)
  _01111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.j
delta: (3,1)=4  (3,2)=4 
! 15 wrong pixels (generated / expected)

TEST cf98881b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 1895.2 bits (1895.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-79] Checking task d037b0a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1758.5 = 1767.4
DL output with Mo: L = 9.0 + 3329.0 = 3338.0
DL input+output M: L = 17.9 + 5087.5 = 5105.5

# learning a model for train pairs
2.000	
1.808	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.697	OUT DEF: ^.size=^.size
1.604	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.534	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.455	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.390	OUT DEF: ^.layer_01.pos=^.layer_01.pos
1.329	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.288	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.246	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.220	IN  DEF: ^.color=black
1.199	OUT DEF: ^.layer_0.shape.mask=Full
1.177	OUT DEF: ^.layer_01.shape.mask=Full
1.158	IN  DEF: ^.size=(?,?)
1.066	IN  DEF: ^.size.i=3
0.974	IN  DEF: ^.size.j=3
0.954	IN  DEF: ^.layer_0.pos=(?,?)
0.901	IN  DEF: ^.layer_0.pos.i=1
0.881	IN  DEF: ^.layer_01.pos=(?,?)
0.835	IN  DEF: ^.layer_01.pos.i=0
0.823	OUT OBJECT at ^.layer_011: a point with color ? at ?
0.809	OUT DEF: ^.color=black
0.799	OUT DEF: ^.layer_0.shape.size=(?,?)
0.760	OUT DEF: ^.layer_0.shape.size.i=2
0.739	OUT DEF: ^.layer_0.shape.size.j=1
0.729	OUT DEF: ^.layer_01.shape.size=(?,?)
0.680	OUT DEF: ^.layer_01.shape.size.i=^.size.i
0.658	OUT DEF: ^.layer_01.shape.size.j=1
0.648	OUT DEF: ^.layer_011.pos=(?,?)
0.623	OUT DEF: ^.layer_011.pos.i=^.layer_01.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (2,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (^.size.i,1) and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos
  _011: a point with color ? at (^.layer_01.pos.j,?)
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a point with color ? at (1,?)
  _01: a point with color ? at (0,?)

DL input  with Mi: L = 50.3 + 801.5 = 851.8
DL output with Mo: L = 68.8 + 400.8 = 469.5
DL input+output M: L = 119.0 + 1202.3 = 1321.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (0,2)
diff: 
delta: (2,0)=3 
   (32.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
  _011: a point with color green at (2,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (0,2)
diff: 
delta: (2,0)=3 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (2,0)
diff:   ^.layer_01.pos.i
delta: (0,2)=6 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (2,0)
  _01: a point with color pink at (0,2)
diff:   ^.layer_0.pos.i
delta: (1,1)=4 
! 2 wrong pixels (generated / expected)

TRAIN d037b0a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (1,0)
  _01: a point with color red at (0,1)
diff: 
delta: (1,2)=8 
   (32.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color orange and mask Full at (1,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a point with color cyan at (1,2)
diff: 
delta: (2,2)=8 
   (25.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (1,0)
  _01: a point with color red at (0,1)
diff: 
delta: (1,2)=8 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,2)
  _01: a point with color red at (0,1)
diff: 
delta: (1,0)=7#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (1,0)
  _01: a point with color cyan at (1,2)
diff:   ^.layer_01.pos.i
delta: (0,1)=2 
! 3 wrong pixels (generated / expected)

TRAIN d037b0a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (0,0)
diff: 
delta:
   (15.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
  _011: a point with color black at (0,1)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (0,0)
diff: 
delta:
correct output grid

TRAIN d037b0a7.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color cyan at (0,2)
diff:   ^.layer_0.pos.i
delta: (2,1)=7#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color yellow at (0,0)
diff:   ^.layer_0.pos.i
delta: (2,1)=7#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (2,1)
  _01: a point with color yellow at (0,0)
diff:   ^.layer_0.pos.i
delta: (0,2)=8 
! 3 wrong pixels (generated / expected)

TEST d037b0a7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 400.8 bits (400.8 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-78] Checking task d06dbe63.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 877.6 = 886.6
DL output with Mo: L = 9.0 + 8283.2 = 8292.1
DL input+output M: L = 17.9 + 9160.8 = 9178.7

# learning a model for train pairs
2.000	
1.632	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.413	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.301	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.197	IN  DEF: ^.layer_0.shape.color=cyan
1.147	OUT DEF: ^.size=^.size
1.112	IN  DEF: ^.color=black
1.087	IN  DEF: ^.size=(?,?)
0.875	IN  DEF: ^.size.i=13
0.663	IN  DEF: ^.size.j=13
0.639	IN  DEF: ^.layer_0.pos=(?,?)
0.615	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.587	OUT DEF: ^.layer_011=^.layer_0
0.576	OUT DEF: ^.layer_0.shape.color=grey
0.565	OUT DEF: ^.layer_01.shape.color=grey
0.561	OUT DEF: ^.color=black
0.558	OUT DEF: ^.layer_0.pos=(?,?)
0.546	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.534	OUT DEF: ^.layer_0.pos.i=(0)
0.532	OUT DEF: ^.layer_0.shape.size=(?,?)
0.516	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.i
0.500	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.pos.i
0.497	OUT DEF: ^.layer_01.pos=(?,?)
0.486	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i + 1
0.484	OUT DEF: ^.layer_01.shape.size=(?,?)
0.467	OUT DEF: ^.layer_01.shape.size.j=5

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.pos.i,^.layer_0.pos.i) and color grey and mask ? at ((0),^.layer_0.pos.j)
  _01: a rectangle with size (?,5) and color grey and mask ? at (^.layer_0.pos.i + 1,?)
  _011: ^.layer_0
WHERE (Mi)
a background with size (13,13) and color black and layers
  _0: a point with color cyan at (?,?)

DL input  with Mi: L = 43.8 + 200.9 = 244.7
DL output with Mo: L = 88.4 + 1497.4 = 1585.8
DL input+output M: L = 132.2 + 1698.3 = 1830.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (3,4)
diff: 
delta:
   (10.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xxx|x.. at (0,4)
  _01: a rectangle with size (6,5) and color grey and mask ....x|..xxx|..x..|xxx..|x....|x.... at (4,0)
  _011: a point with color cyan at (3,4)
diff: 
delta:
   (57.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (3,4)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN d06dbe63.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (7,6)
diff: 
delta:
   (10.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask ......x|....xxx|....x..|..xxx..|..x....|xxx....|x...... at (0,6)
  _01: a rectangle with size (5,5) and color grey and mask ....x|..xxx|..x..|xxx..|x.... at (8,2)
  _011: a point with color cyan at (7,6)
diff: 
delta:
   (92.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (7,6)
diff: 
delta:
! 53 wrong pixels (generated / expected)

TRAIN d06dbe63.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (5,5)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TEST d06dbe63.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.6 sec (2.6 sec/task)
bits-train-error = 1497.4 bits (1497.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-77] Checking task d07ae81c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 53553.1 = 53562.1
DL output with Mo: L = 9.0 + 64341.2 = 64350.2
DL input+output M: L = 17.9 + 117894.3 = 117912.3

# learning a model for train pairs
2.000	
1.254	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.735	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.628	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.563	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.482	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.458	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 7845.4 = 7893.4
DL output with Mo: L = 85.3 + 19932.3 = 20017.6
DL input+output M: L = 133.3 + 27777.6 = 27911.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...x.xx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (5,0)
diff: 
delta: (5,4)=4  (8,1)=1 
   (373.1 bits)
data: a background with size (19,12) and color yellow and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|x.xxxxx.xxxx|xx.xxx.xxxxx|xxx.x.xxxxxx|...x.xx.....|....x.x.....|...xxx......|...xxxx.....|...xxxx.....|....xxx.....|...x.xx.....|xxxxx.xxxxx.|xxxxxx.xxxxx|xxxxxxx.xxxx|xxxxxxxx.xxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
  _01: a rectangle with size (19,5) and color cyan and mask Full at (0,7)
  _011: a rectangle with size (19,3) and color cyan and mask Full at (0,0)
  _0111: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff: 
delta: (0,9)=1  (1,0)=1  (1,8)=1  (2,1)=4  (2,7)=4  (3,2)=4  (7,0)=1  (7,2)=1  (8,1)=1  (8,7)=1  (9,0)=1  (9,2)=1  (9,8)=1  (10,9)=1  (11,10)=1  (12,11)=4  (14,7)=4  (15,8)=4  (16,9)=1  (17,10)=1  (18,11)=1 
   (831.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...x.xx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (5,0)
diff: 
delta: (5,4)=4  (8,1)=1 
! size mismatch, 10x10 instead of 19x12

TRAIN d07ae81c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,6) and color blue and mask Full at (0,3)
  _01: a rectangle with size (3,14) and color blue and mask Full at (5,0)
diff: 
delta: (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=2  (3,7)=1  (3,8)=1  (8,11)=8 
   (243.9 bits)
data: a background with size (12,14) and color red and layers
  _0: a rectangle with size (12,14) and color blue and mask ....xxxxx.....|...x.xxx......|...xx.x.x.....|...xxx.xx.....|...xx.x.x.....|xxxx.xxx.xxxxx|xxx.xxxxx.xxx.|xx.xxxxxxx.x.x|...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxxxx...... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (8,0)
  _011: a rectangle with size (5,5) and color green and mask Full at (0,9)
  _0111: a rectangle with size (5,3) and color green and mask Full at (0,0)
diff: 
delta: (0,9)=8  (8,1)=8  (8,11)=8  (9,0)=8  (9,10)=8  (9,12)=8  (10,9)=8  (10,13)=8  (11,8)=2 
   (521.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,6) and color blue and mask Full at (0,3)
  _01: a rectangle with size (3,14) and color blue and mask Full at (5,0)
diff: 
delta: (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=2  (3,7)=1  (3,8)=1  (8,11)=8 
! size mismatch, 10x10 instead of 12x14

TRAIN d07ae81c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color blue and layers
  _0: a rectangle with size (15,5) and color pink and mask Full at (0,10)
  _01: a rectangle with size (15,4) and color pink and mask Full at (0,2)
diff: 
delta: (5,7)=8  (8,4)=3  (10,12)=3 
   (167.5 bits)
data: a background with size (15,15) and color green and layers
  _0: a rectangle with size (15,5) and color pink and mask xx.xx|x.xxx|.xxxx|xxxxx|xxxxx|xxxxx|xxxxx|xxxxx|.xxx.|x.x.x|xx.xx|x.x.x|.xxx.|xxxxx|.xxxx at (0,10)
  _01: a rectangle with size (15,4) and color pink and mask .xxx|x.xx|xx.x|xxx.|xxxx|xxxx|.xxx|x.x.|xx.x|x.x.|.xxx|xxxx|xxxx|xxxx|xxxx at (0,2)
  _011: a rectangle with size (15,4) and color blue and mask Full at (0,6)
  _0111: a rectangle with size (15,2) and color blue and mask Full at (0,0)
diff: 
delta: (3,9)=8  (4,0)=8  (4,6)=8  (4,8)=8  (5,1)=8  (5,7)=8  (6,6)=8  (6,8)=8  (7,9)=8  (10,6)=8  (11,1)=8  (11,7)=8  (12,0)=8  (12,8)=8  (13,9)=8  (14,8)=8 
   (640.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color blue and layers
  _0: a rectangle with size (15,5) and color pink and mask Full at (0,10)
  _01: a rectangle with size (15,4) and color pink and mask Full at (0,2)
diff: 
delta: (5,7)=8  (8,4)=3  (10,12)=3 
! size mismatch, 10x10 instead of 15x15

TRAIN d07ae81c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color cyan and layers
  _0: a rectangle with size (17,19) and color green and mask ...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|xxxxxx.xxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|...xxxxxx..........|...xxxxxx.......... at (0,0)
  _01: a rectangle with size (4,3) and color cyan and mask Full at (0,0)
diff: 
delta: (0,10)=4  (4,6)=1  (12,14)=1 
! size mismatch, 10x10 instead of 17x19

TEST d07ae81c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.8 sec (28.8 sec/task)
bits-train-error = 19932.3 bits (19932.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-76] Checking task d0f5fe59.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10964.5 = 10973.5
DL output with Mo: L = 9.0 + 1987.2 = 1996.2
DL input+output M: L = 17.9 + 12951.8 = 12969.7

# learning a model for train pairs
2.000	
1.727	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.491	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.309	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.206	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.136	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.113	OUT DEF: ^.color=black
1.093	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.076	OUT DEF: ^.size=(?,?)
0.996	OUT DEF: ^.size.i=^.layer_0.shape.size.i
0.918	OUT DEF: ^.size.j=^.layer_0.shape.size.i
0.900	OUT DEF: ^.layer_0.pos=(?,?)
0.857	OUT DEF: ^.layer_0.pos.i=(0)
0.815	OUT DEF: ^.layer_0.pos.j=(0)
0.797	OUT DEF: ^.layer_0.shape.size=(?,?)
0.718	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.639	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
0.626	IN  DEF: ^.layer_0.shape.color=cyan
0.614	IN  DEF: ^.layer_01.shape.color=cyan
0.601	IN  DEF: ^.layer_011.shape.color=cyan
0.588	IN  DEF: ^.layer_0111.shape.color=cyan
0.582	IN  DEF: ^.layer_0111.shape.mask=Full
0.578	IN  DEF: ^.color=black
0.575	IN  DEF: ^.size=(?,?)
0.571	IN  DEF: ^.layer_0.pos=(?,?)
0.568	IN  DEF: ^.layer_0.shape.size=(?,?)
0.565	IN  DEF: ^.layer_01.pos=(?,?)
0.562	IN  DEF: ^.layer_01.shape.size=(?,?)
0.559	IN  DEF: ^.layer_011.pos=(?,?)
0.556	IN  DEF: ^.layer_011.shape.size=(?,?)
0.552	IN  DEF: ^.layer_0111.pos=(?,?)
0.549	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.537	IN  DEF: ^.layer_0111.shape.size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i,^.layer_0.shape.size.i) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_0.shape.size.i) and color ^.layer_0.shape.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,2) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 130.6 + 3387.4 = 3518.0
DL output with Mo: L = 55.3 + 377.6 = 432.9
DL input+output M: L = 185.8 + 3765.1 = 3950.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
  _0111: a rectangle with size (2,2) and color cyan and mask Full at (12,7)
diff: 
delta:
   (140.3 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x..|..x.|...x at (0,0)
diff: 
delta:
   (19.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
  _0111: a rectangle with size (2,2) and color cyan and mask Full at (12,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _01: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
  _0111: a rectangle with size (2,2) and color cyan and mask Full at (12,7)
diff: 
delta:
! size mismatch, 3x3 instead of 4x4

TRAIN d0f5fe59.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (1,3)
  _0111: a rectangle with size (2,2) and color cyan and mask Full at (8,3)
diff: 
delta:
   (109.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (1,3)
  _0111: a rectangle with size (2,2) and color cyan and mask Full at (8,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN d0f5fe59.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (3,8)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (4,8)
diff: 
delta:
   (89.1 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (3,8)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (4,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN d0f5fe59.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|.xx at (2,3)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (9,8)
  _011: a rectangle with size (3,3) and color cyan and mask xx.|.xx|..x at (9,1)
  _0111: a rectangle with size (3,2) and color cyan and mask .x|xx|xx at (1,8)
diff:   ^.layer_0111.shape.mask
delta: (13,6)=8  (13,7)=8 
! size mismatch, 3x3 instead of 5x5

TEST d0f5fe59.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.7 sec (5.7 sec/task)
bits-train-error = 377.6 bits (377.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-75] Checking task d10ecb37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21571.5 = 21580.5
DL output with Mo: L = 9.0 + 1789.9 = 1798.9
DL input+output M: L = 17.9 + 23361.4 = 23379.4

# learning a model for train pairs
2.000	
1.866	OUT DEF: ^.color=^.color
1.788	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.637	OUT DEF: ^.size=^.layer_0.shape.size
1.634	IN  DEF: ^.layer_0.shape.mask=Full
1.633	IN  DEF: ^.size=(?,?)
1.631	IN  DEF: ^.layer_0.pos=(?,?)
1.625	IN  DEF: ^.layer_0.pos.i=1
1.623	IN  DEF: ^.layer_0.shape.size=(?,?)
1.617	IN  DEF: ^.layer_0.shape.size.i=2
1.570	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.565	IN  DEF: ^.layer_0.shape.size.j=2
1.561	IN  DEF: ^.layer_01.shape.mask=Full
1.560	IN  DEF: ^.layer_01.pos=(?,?)
1.554	IN  DEF: ^.layer_01.pos.i=5
1.552	IN  DEF: ^.layer_01.shape.size=(?,?)
1.546	IN  DEF: ^.layer_01.shape.size.j=2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (2,2) and color ? and mask Full at (1,?)
  _01: a rectangle with size (?,2) and color ? and mask Full at (5,?)

DL input  with Mi: L = 78.0 + 18163.8 = 18241.8
DL output with Mo: L = 8.7 + 1252.0 = 1260.6
DL input+output M: L = 86.7 + 19415.8 = 19502.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,1)
diff: 
delta: (0,0)=4  (0,1)=3  (0,3)=4  (0,4)=0  (1,1)=0  (1,2)=0  (1,5)=4  (2,1)=4  (2,2)=4  (2,5)=0  (3,0)=0  (3,1)=3  (3,3)=0  (3,4)=4  (4,0)=0  (4,2)=3  (4,3)=0  (4,4)=4  (4,5)=3  (5,0)=3  (5,5)=0 
   (417.2 bits)
data: a background with size (2,2) and color pink and layers
diff: 
delta: (0,0)=4  (0,1)=3  (1,1)=0 
   (46.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,1)
diff: 
delta: (0,0)=4  (0,1)=3  (0,3)=4  (0,4)=0  (1,1)=0  (1,2)=0  (1,5)=4  (2,1)=4  (2,2)=4  (2,5)=0  (3,0)=0  (3,1)=3  (3,3)=0  (3,4)=4  (4,0)=0  (4,2)=3  (4,3)=0  (4,4)=4  (4,5)=3  (5,0)=3  (5,5)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color yellow and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,3)
  _01: a rectangle with size (1,2) and color pink and mask Full at (5,3)
diff: 
delta: (0,1)=3  (0,2)=6  (0,4)=0  (0,5)=6  (1,0)=6  (1,1)=0  (1,2)=0  (2,0)=6  (2,5)=0  (3,0)=0  (3,1)=3  (3,2)=6  (3,3)=0  (3,5)=6  (4,0)=0  (4,1)=6  (4,2)=3  (4,3)=0  (4,5)=3  (5,0)=3  (5,5)=0 
! 3 wrong pixels (generated / expected)

TRAIN d10ecb37.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color grey and mask Full at (5,1)
diff: 
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (1,3)=4  (1,4)=4  (2,0)=4  (2,7)=4  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,4)=5# (4,6)=4  (4,7)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
   (494.2 bits)
data: a background with size (2,2) and color red and layers
diff: 
delta: (0,1)=4  (1,1)=5#
   (31.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color yellow and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
  _01: a rectangle with size (8,8) and color red and mask .....x..|.xx..xxx|.xxxxxx.|xx.x..x.|x.xx.x..|x....xxx|...xxxx.|...x..x. at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.j  ^.layer_01.pos.i
delta: (0,0)=2  (0,2)=2  (0,3)=2  (0,4)=5# (0,7)=5# (1,0)=2  (3,4)=5# (3,7)=5# (4,4)=5# (4,7)=5# (5,1)=5# (5,2)=5# (6,1)=5# (6,2)=5# (7,0)=2  (7,1)=2  (7,4)=5# (7,7)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (6,2) and color grey and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (5,5)
diff:   ^.layer_0.shape.size.i
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (1,3)=4  (1,4)=4  (2,0)=4  (2,7)=4  (3,1)=2  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,2)=2  (4,4)=5# (4,6)=4  (4,7)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
! size mismatch, 6x2 instead of 2x2
>> Trial 3
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,5)
  _01: a rectangle with size (6,2) and color grey and mask Full at (1,1)
diff:   ^.layer_01.pos.i
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (1,3)=4  (1,4)=4  (2,0)=4  (2,7)=4  (3,1)=2  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,2)=2  (4,4)=5# (4,6)=4  (4,7)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
! 2 wrong pixels (generated / expected)

TRAIN d10ecb37.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,6) and color yellow and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,3)
  _01: a rectangle with size (2,2) and color blue and mask Full at (5,3)
diff: 
delta: (0,0)=3  (0,1)=2  (0,2)=1  (0,3)=3  (0,5)=1  (1,0)=1  (1,5)=3  (2,0)=1  (2,1)=3  (2,2)=3  (3,1)=2  (3,2)=1  (3,4)=3  (3,5)=1  (4,1)=1  (4,2)=2  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (6,0)=2  (6,5)=3  (7,0)=3  (7,1)=1  (7,2)=2  (7,3)=3  (7,5)=2  (8,0)=3  (8,1)=2  (8,2)=1  (8,3)=3  (8,5)=1  (9,0)=1  (9,3)=2  (9,4)=2  (9,5)=3  (10,0)=1  (10,1)=3  (10,2)=3  (10,3)=2  (10,4)=2  (11,1)=2  (11,2)=1  (11,4)=3  (11,5)=1 
   (905.0 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta: (0,0)=3  (0,1)=2  (1,0)=1 
   (46.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,6) and color yellow and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,3)
  _01: a rectangle with size (2,2) and color blue and mask Full at (5,3)
diff: 
delta: (0,0)=3  (0,1)=2  (0,2)=1  (0,3)=3  (0,5)=1  (1,0)=1  (1,5)=3  (2,0)=1  (2,1)=3  (2,2)=3  (3,1)=2  (3,2)=1  (3,4)=3  (3,5)=1  (4,1)=1  (4,2)=2  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (6,0)=2  (6,5)=3  (7,0)=3  (7,1)=1  (7,2)=2  (7,3)=3  (7,5)=2  (8,0)=3  (8,1)=2  (8,2)=1  (8,3)=3  (8,5)=1  (9,0)=1  (9,3)=2  (9,4)=2  (9,5)=3  (10,0)=1  (10,1)=3  (10,2)=3  (10,3)=2  (10,4)=2  (11,1)=2  (11,2)=1  (11,4)=3  (11,5)=1 
! 3 wrong pixels (generated / expected)

TRAIN d10ecb37.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color pink and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (1,1)
  _01: a rectangle with size (4,8) and color brown and mask x..xx..x|.xx..xx.|.xx..xx.|x..xx..x at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.size.j  ^.layer_01.pos.i
delta: (0,2)=2  (0,5)=2  (1,0)=2  (1,7)=2  (2,3)=2  (2,4)=2  (3,1)=2  (3,6)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,8) and color brown and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,3)
diff:   ^.layer_01.pos.i  ^.layer_0.shape.size.i
delta: (0,1)=6  (0,2)=2  (0,5)=2  (0,6)=6  (1,0)=2  (1,7)=2  (2,0)=6  (2,7)=6  (3,1)=2  (3,2)=6  (3,5)=6  (3,6)=2 
! size mismatch, 1x2 instead of 2x2

TEST d10ecb37.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 1252.0 bits (1252.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-74] Checking task d13f3404.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1921.0 = 1930.0
DL output with Mo: L = 9.0 + 8437.2 = 8446.2
DL input+output M: L = 17.9 + 10358.3 = 10376.2

# learning a model for train pairs
2.000	
1.885	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.774	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.669	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.573	OUT DEF: ^.layer_0.shape.mask=x....|.x...|..x..|...x.|....x
1.510	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.441	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.360	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.328	OUT DEF: ^.layer_011.pos=^.layer_011.pos
1.295	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.263	OUT DEF: ^.layer_01.pos=^.layer_01.pos
1.239	IN  DEF: ^.color=black
1.221	IN  DEF: ^.size=(?,?)
1.137	IN  DEF: ^.size.i=3
1.052	IN  DEF: ^.size.j=3
1.034	IN  DEF: ^.layer_0.pos=(?,?)
1.016	IN  DEF: ^.layer_01.pos=(?,?)
0.971	IN  DEF: ^.layer_01.pos.i=0
0.925	IN  DEF: ^.layer_0.pos.j=1
0.907	IN  DEF: ^.layer_011.pos=(?,?)
0.862	IN  DEF: ^.layer_011.pos.j=0
0.845	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.829	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.812	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
0.807	OUT DEF: ^.color=black
0.803	OUT DEF: ^.size=(?,?)
0.776	OUT DEF: ^.size.i=6
0.750	OUT DEF: ^.size.j=6
0.746	OUT DEF: ^.layer_0.shape.size=(?,?)
0.722	OUT DEF: ^.layer_0.shape.size.i=5
0.698	OUT DEF: ^.layer_0.shape.size.j=5
0.693	OUT DEF: ^.layer_01.shape.size=(?,?)
0.689	OUT DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color ^.layer_0.shape.color and mask x....|.x...|..x..|...x.|....x at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a point with color ? at (?,1)
  _01: a point with color ? at (0,?)
  _011: a point with color ? at (?,0)

DL input  with Mi: L = 66.6 + 679.6 = 746.2
DL output with Mo: L = 121.8 + 2434.2 = 2556.0
DL input+output M: L = 188.4 + 3113.8 = 3302.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color pink at (0,0)
  _011: a point with color green at (1,0)
diff: 
delta:
   (22.7 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...x.|....x at (0,1)
  _01: a rectangle with size (6,6) and color pink and mask xx....|.xx...|..xx..|...xx.|....xx|.....x at (0,0)
  _011: a rectangle with size (5,5) and color green and mask xxx..|.xxx.|..xxx|...xx|....x at (1,0)
diff: 
delta:
   (96.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color pink at (0,0)
  _011: a point with color green at (1,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,0)
  _01: a point with color blue at (0,1)
  _011: a point with color green at (1,0)
diff:   ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color green at (1,0)
  _011: a point with color pink at (0,0)
diff:   ^.layer_01.pos.i
delta:
! 9 wrong pixels (generated / expected)

TRAIN d13f3404.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color yellow at (0,1)
  _011: a point with color red at (2,0)
diff: 
delta:
   (22.7 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask x....|.x...|..x..|...x.|....x at (1,1)
  _01: a rectangle with size (5,5) and color yellow and mask x....|xx...|.xx..|..xx.|...xx at (0,1)
  _011: a rectangle with size (4,4) and color red and mask x.xx|.x.x|..x.|...x at (2,0)
diff: 
delta:
   (73.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color yellow at (0,1)
  _011: a point with color red at (2,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (2,0)
diff:   ^.layer_01.pos.i
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color red at (2,0)
  _011: a point with color cyan at (1,1)
diff:   ^.layer_011.pos.j  ^.layer_01.pos.i
delta:
! 7 wrong pixels (generated / expected)

TRAIN d13f3404.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color pink at (0,2)
  _011: a point with color blue at (1,0)
diff: 
delta:
   (22.7 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask x....|.x...|..x..|...x.|....x at (1,1)
  _01: a rectangle with size (4,4) and color pink and mask x...|.x..|x.x.|.x.x at (0,2)
  _011: a rectangle with size (5,5) and color blue and mask xx.x.|.xx.x|..xx.|...xx|....x at (1,0)
diff: 
delta:
   (73.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color pink at (0,2)
  _011: a point with color blue at (1,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color blue at (1,0)
diff:   ^.layer_01.pos.i  ^.layer_0.pos.j
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color pink at (0,2)
  _011: a point with color green at (1,1)
diff:   ^.layer_011.pos.j  ^.layer_0.pos.j
delta:
! 7 wrong pixels (generated / expected)

TRAIN d13f3404.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color green at (0,2)
  _011: a point with color brown at (2,2)
diff:   ^.layer_011.pos.j
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (0,2)
  _011: a point with color yellow at (2,1)
diff:   ^.layer_011.pos.j  ^.layer_0.pos.j
delta:
! 7 wrong pixels (generated / expected)

TEST d13f3404.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.9 sec (8.9 sec/task)
bits-train-error = 2434.2 bits (2434.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-73] Checking task d22278a0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2664.2 = 2673.2
DL output with Mo: L = 9.0 + 42814.4 = 42823.4
DL input+output M: L = 17.9 + 45478.6 = 45496.5

# learning a model for train pairs
2.000	
1.908	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.815	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.749	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.673	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.610	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.555	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.505	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.486	OUT DEF: ^.size=^.size
1.479	OUT OBJECT at ^.layer_011111: ^.layer_0.shape at ?
1.473	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.432	OUT OBJECT at ^.layer_0111111: a rectangle with size ? and color ? and mask ? at ?
1.414	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
1.371	OUT OBJECT at ^.layer_01111111: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ^.layer_01.shape.color and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: ^.layer_0.shape at ?
  _0111111: a rectangle with size ? and color ? and mask ? at ?
  _01111111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 34.7 + 2257.6 = 2292.3
DL output with Mo: L = 155.6 + 21826.6 = 21982.2
DL input+output M: L = 190.3 + 24084.2 = 24274.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,9)
diff: 
delta:
   (51.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _010: a rectangle with size (5,5) and color red and mask x....|x....|x....|x....|xxxxx at (0,5)
  _01: a rectangle with size (1,5) and color red and mask Full at (6,5)
  _011: a rectangle with size (1,5) and color blue and mask Full at (6,0)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (8,0)
  _01111: a rectangle with size (1,5) and color red and mask Full at (8,5)
  _011111: a point with color blue at (0,2)
  _0111111: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (0,7)
  _01111111: a point with color blue at (0,0)
diff: 
delta: (0,9)=2  (1,2)=1  (2,0)=1  (2,1)=1  (2,2)=1 
   (387.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,9)
diff: 
delta:
! 53 wrong pixels (generated / expected)

TRAIN d22278a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (0,11)
  _01: a point with color cyan at (11,0)
diff: 
delta:
   (53.3 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask x....|x....|x....|x....|xxxxx at (0,7)
  _010: a rectangle with size (5,5) and color cyan and mask xxxxx|....x|....x|....x|....x at (7,0)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (9,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (5,0)
  _0111: a rectangle with size (1,5) and color green and mask Full at (6,7)
  _01111: a rectangle with size (3,3) and color green and mask x..|x..|xxx at (0,9)
  _011111: a point with color green at (0,1)
  _0111111: a rectangle with size (5,1) and color green and mask Full at (0,5)
  _01111111: a point with color green at (0,3)
diff: 
delta: (0,11)=3  (1,0)=8  (1,3)=3  (2,3)=3  (3,0)=8  (3,1)=8  (3,2)=8  (7,6)=8  (8,6)=8  (8,9)=3  (8,10)=3  (8,11)=3  (9,6)=8  (9,8)=8  (10,6)=8  (10,8)=8  (10,11)=3  (11,0)=8  (11,6)=8  (11,8)=8  (11,10)=8 
   (720.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (0,11)
  _01: a point with color cyan at (11,0)
diff: 
delta:
! 68 wrong pixels (generated / expected)

TRAIN d22278a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (12,0)
diff: 
delta:
   (54.2 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,7) and color red and mask Full at (0,6)
  _010: a rectangle with size (5,5) and color red and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _01: a rectangle with size (5,5) and color yellow and mask xxxxx|....x|....x|....x|....x at (8,0)
  _011: a rectangle with size (6,1) and color yellow and mask Full at (7,6)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (7,8)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (7,10)
  _011111: a point with color red at (0,0)
  _0111111: a rectangle with size (6,1) and color yellow and mask Full at (7,12)
  _01111111: a point with color red at (0,2)
diff: 
delta: (0,7)=0  (0,9)=0  (0,11)=0  (1,2)=2  (1,7)=0  (1,9)=0  (1,11)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,7)=0  (2,9)=0  (2,11)=0  (3,7)=0  (3,9)=0  (3,11)=0  (4,7)=0  (4,9)=0  (4,11)=0  (5,7)=0  (5,9)=0  (5,11)=0  (10,0)=4  (10,1)=4  (10,2)=4  (11,2)=4  (12,0)=4  (12,2)=4 
   (851.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (12,0)
diff: 
delta:
! 81 wrong pixels (generated / expected)

TRAIN d22278a0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,6)
  _01: a point with color blue at (0,0)
diff: 
delta: (6,0)=8 
   (67.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|..x|xxx at (0,0)
  _010: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (0,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _011: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (4,0)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (5,4)
  _01111: a rectangle with size (1,1) and color red and mask Full at (0,6)
  _011111: a point with color red at (4,5)
  _0111111: a rectangle with size (1,1) and color cyan and mask Full at (6,0)
  _01111111: a point with color red at (4,6)
diff: 
delta:
   (223.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,6)
diff: 
delta: (6,0)=8 
! 25 wrong pixels (generated / expected)

TRAIN d22278a0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color cyan at (16,0)
diff: 
delta: (16,16)=1 
! 127 wrong pixels (generated / expected)

TEST d22278a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.4 sec (25.4 sec/task)
bits-train-error = 21826.6 bits (21826.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-72] Checking task d23f8c26.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5497.9 = 5506.9
DL output with Mo: L = 9.0 + 2081.3 = 2090.3
DL input+output M: L = 17.9 + 7579.2 = 7597.2

# learning a model for train pairs
2.000	
1.794	OUT DEF: ^.size=^.size
1.711	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.640	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.606	OUT DEF: ^.layer_0.shape.mask=Full
1.579	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.514	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.492	OUT DEF: ^.color=black
1.475	OUT DEF: ^.layer_0.pos=(?,?)
1.427	OUT DEF: ^.layer_0.pos.i=(0)
1.383	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j + ^.layer_0.pos.i
1.366	OUT DEF: ^.layer_0.shape.size=(?,?)
1.313	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.i + ^.layer_0.shape.size.i
1.279	OUT DEF: ^.layer_0.shape.size.j=1
1.263	OUT DEF: ^.layer_01.pos=(?,?)
1.219	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j + ^.layer_0.pos.i
1.206	IN  DEF: ^.layer_0.shape.mask=Full
1.198	IN  DEF: ^.color=black
1.191	IN  DEF: ^.size=(?,?)
1.185	IN  DEF: ^.layer_0.pos=(?,?)
1.179	IN  DEF: ^.layer_0.shape.size=(?,?)
1.178	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.pos.i + ^.layer_0.shape.size.i,1) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ((0),^.layer_0.pos.j + ^.layer_0.pos.i)
  _01: a point with color ? at (?,^.layer_0.pos.j + ^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 40.0 + 5103.7 = 5143.6
DL output with Mo: L = 80.2 + 430.2 = 510.5
DL input+output M: L = 120.2 + 5533.9 = 5654.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta: (0,0)=6  (1,1)=3  (1,2)=9# (2,0)=1 
   (92.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a point with color green at (1,1)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
diff: 
delta: (0,1)=4  (1,1)=3  (1,2)=9# (2,0)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta: (0,0)=6  (1,1)=3  (1,2)=9# (2,0)=1 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta: (0,0)=6  (0,1)=4  (1,2)=9# (2,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN d23f8c26.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta: (0,0)=8  (0,2)=3  (1,0)=8  (1,1)=6  (1,2)=5# (1,3)=6  (2,1)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
   (226.7 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,2)
  _01: a point with color brown at (4,2)
diff: 
delta: (1,2)=5#
   (27.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,2)=3  (1,1)=6  (1,2)=5# (1,3)=6  (2,0)=3  (2,1)=6  (2,2)=3  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,1)
diff: 
delta: (0,0)=8  (0,2)=3  (1,0)=8  (1,2)=5# (1,3)=6  (2,0)=3  (2,2)=3  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta: (0,0)=8  (0,2)=3  (1,0)=8  (1,1)=6  (1,2)=5# (1,3)=6  (2,1)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 2 wrong pixels (generated / expected)

TRAIN d23f8c26.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,0)=3  (1,0)=3  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8  (4,3)=2  (4,4)=2 
   (191.2 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01: a point with color cyan at (3,2)
diff: 
delta:
   (8.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,2)=4  (1,0)=3  (1,2)=4  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=4  (1,2)=4  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8  (4,3)=2  (4,4)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,0)=3  (1,0)=3  (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8  (4,3)=2  (4,4)=2 
! 1 wrong pixels (generated / expected)

TRAIN d23f8c26.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (5,3)
diff: 
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (1,3)=8  (2,2)=3  (2,4)=8  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,2)=8  (6,1)=8  (6,5)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (1,3)
diff:   ^.layer_0.shape.mask
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (2,2)=3  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,2)=8  (5,3)=6  (6,1)=8  (6,3)=6  (6,5)=1 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (5,1)
diff:   ^.layer_0.shape.mask
delta: (0,2)=3  (0,6)=7# (1,0)=8  (1,1)=1  (1,3)=8  (2,2)=3  (2,4)=8  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,3)=6  (6,3)=6  (6,5)=1 
! 8 wrong pixels (generated / expected)

TEST d23f8c26.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 430.2 bits (430.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-71] Checking task d2abd087.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15833.2 = 15842.2
DL output with Mo: L = 9.0 + 15833.2 = 15842.2
DL input+output M: L = 17.9 + 31666.4 = 31684.3

# learning a model for train pairs
2.000	
1.837	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.673	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.522	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.371	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.249	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.127	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.064	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.001	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.953	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.906	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.869	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 7070.7 = 7174.5
DL output with Mo: L = 104.4 + 6493.1 = 6597.5
DL input+output M: L = 208.2 + 13563.8 = 13772.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full at (2,2)
  _01: a rectangle with size (2,3) and color grey and mask xx.|xxx at (7,1)
  _011: a rectangle with size (1,3) and color grey and mask Full at (6,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,6)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (5,6)
diff: 
delta:
   (165.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (2,3) and color blue and mask xx.|xxx at (7,1)
  _011: a rectangle with size (1,3) and color red and mask Full at (6,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,6)
  _01111: a rectangle with size (2,2) and color red and mask Full at (5,6)
diff: 
delta:
   (146.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full at (2,2)
  _01: a rectangle with size (2,3) and color grey and mask xx.|xxx at (7,1)
  _011: a rectangle with size (1,3) and color grey and mask Full at (6,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,6)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (5,6)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN d2abd087.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (7,1)
diff: 
delta: (4,8)=5# (5,8)=5#
   (223.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color blue and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color blue and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
diff: 
delta: (4,8)=1  (5,8)=1 
   (204.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color grey and mask Full at (7,1)
diff: 
delta: (4,8)=5# (5,8)=5#
! 30 wrong pixels (generated / expected)

TRAIN d2abd087.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (1,4)
  _01111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
diff: 
delta: (4,9)=5# (5,1)=5# (5,2)=5# (5,9)=5# (6,9)=5#
   (317.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color blue and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color red and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (1,4)
  _01111: a rectangle with size (4,3) and color red and mask xxx|x..|x..|x.. at (0,7)
diff: 
delta: (4,9)=1  (5,1)=1  (5,2)=1  (5,9)=1  (6,9)=1 
   (298.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (1,4)
  _01111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
diff: 
delta: (4,9)=5# (5,1)=5# (5,2)=5# (5,9)=5# (6,9)=5#
! 36 wrong pixels (generated / expected)

TRAIN d2abd087.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .xx.|.xx.|xxxx at (0,0)
  _01: a rectangle with size (2,4) and color grey and mask xx..|xxxx at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask .xx|.xx|xx. at (0,5)
  _0111: a rectangle with size (1,5) and color grey and mask Full at (8,1)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (4,7)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TEST d2abd087.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.6 sec (21.6 sec/task)
bits-train-error = 6493.1 bits (6493.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-70] Checking task d364b489.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2600.8 = 2609.8
DL output with Mo: L = 9.0 + 9670.7 = 9679.6
DL input+output M: L = 17.9 + 12271.5 = 12289.4

# learning a model for train pairs
2.000	
1.960	OUT DEF: ^.size=^.size
1.934	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.898	IN  DEF: ^.layer_0.shape.color=blue
1.871	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.836	IN  DEF: ^.layer_01.shape.color=blue
1.807	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.772	IN  DEF: ^.layer_011.shape.color=blue
1.741	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.705	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.670	IN  DEF: ^.layer_0111.shape.color=blue
1.635	IN  DEF: ^.layer_01111.shape.color=blue
1.619	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.596	OUT DEF: ^.layer_0=^.layer_0
1.580	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.558	OUT DEF: ^.layer_01=^.layer_01
1.541	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
1.525	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
1.509	OUT OBJECT at ^.layer_01110: ^.layer_0.shape at ?
1.486	OUT DEF: ^.layer_011=^.layer_011
1.464	OUT DEF: ^.layer_01110=^.layer_0111
1.442	OUT DEF: ^.layer_0111=^.layer_01111
1.430	IN  DEF: ^.color=black
1.421	IN  DEF: ^.size=(?,?)
1.355	IN  DEF: ^.size.i=10
1.288	IN  DEF: ^.size.j=10
1.280	IN  DEF: ^.layer_0.pos=(?,?)
1.272	IN  DEF: ^.layer_01.pos=(?,?)
1.263	IN  DEF: ^.layer_011.pos=(?,?)
1.255	IN  DEF: ^.layer_0111.pos=(?,?)
1.220	IN  DEF: ^.layer_0111.pos.i=5
1.185	IN  DEF: ^.layer_01.pos.i=3
1.150	IN  DEF: ^.layer_01.pos.j=9
1.141	IN  DEF: ^.layer_01111.pos=(?,?)
1.106	IN  DEF: ^.layer_01111.pos.i=9
1.099	OUT OBJECT at ^.layer_01111: a point with color ? at ?
1.090	OUT DEF: ^.layer_01111.shape.color=orange
1.083	OUT OBJECT at ^.layer_011111: a point with color ? at ?
1.074	OUT DEF: ^.layer_011111.shape.color=red
1.067	OUT OBJECT at ^.layer_0111111: a point with color ? at ?
1.058	OUT DEF: ^.layer_0111111.shape.color=pink
1.051	OUT OBJECT at ^.layer_01111111: a point with color ? at ?
1.042	OUT DEF: ^.layer_01111111.shape.color=cyan
1.035	OUT OBJECT at ^.layer_011111111: a point with color ? at ?
1.025	OUT DEF: ^.layer_011111111.shape.color=red
1.019	OUT OBJECT at ^.layer_0111111111: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _01110: ^.layer_0111
  _0111: ^.layer_01111
  _01111: a point with color orange at ?
  _011111: a point with color red at ?
  _0111111: a point with color pink at ?
  _01111111: a point with color cyan at ?
  _011111111: a point with color red at ?
  _0111111111: a point with color ? at ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (?,?)
  _0111: a point with color blue at (5,?)
  _01111: a point with color blue at (9,?)

DL input  with Mi: L = 119.8 + 766.2 = 886.0
DL output with Mo: L = 114.0 + 6460.7 = 6574.7
DL input+output M: L = 233.8 + 7226.9 = 7460.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (7,7)
  _0111: a point with color blue at (5,3)
  _01111: a point with color blue at (9,1)
diff: 
delta:
   (27.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (7,7)
  _01110: a point with color blue at (5,3)
  _0111: a point with color blue at (9,1)
  _01111: a point with color orange at (1,5)
  _011111: a point with color red at (0,6)
  _0111111: a point with color pink at (1,7)
  _01111111: a point with color cyan at (2,6)
  _011111111: a point with color red at (2,9)
  _0111111111: a point with color orange at (3,8)
diff: 
delta: (4,3)=2  (4,9)=8  (5,2)=7# (5,4)=6  (6,3)=8  (6,7)=2  (7,6)=7# (7,8)=6  (8,1)=2  (8,7)=8  (9,0)=7# (9,2)=6 
   (303.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (7,7)
  _0111: a point with color blue at (5,3)
  _01111: a point with color blue at (9,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN d364b489.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (2,0)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (9,9)
diff: 
delta: (8,2)=1 
   (48.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (2,0)
  _01110: a point with color blue at (5,5)
  _0111: a point with color blue at (9,9)
  _01111: a point with color orange at (0,4)
  _011111: a point with color red at (1,0)
  _0111111: a point with color pink at (0,6)
  _01111111: a point with color cyan at (1,5)
  _011111111: a point with color red at (2,9)
  _0111111111: a point with color pink at (2,1)
diff: 
delta: (3,0)=8  (3,8)=7# (4,5)=2  (4,9)=8  (5,4)=7# (5,6)=6  (6,5)=8  (7,2)=2  (8,1)=7# (8,2)=1  (8,3)=6  (8,9)=2  (9,2)=8  (9,8)=7#
   (342.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (2,0)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (9,9)
diff: 
delta: (8,2)=1 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (2,0)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (8,2)
diff:   ^.layer_01111.pos.i
delta: (9,9)=1 
! 21 wrong pixels (generated / expected)

TRAIN d364b489.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,7)
  _0111: a point with color blue at (3,3)
  _01111: a point with color blue at (9,4)
diff:   ^.layer_0111.pos.i  ^.layer_01.pos.i
delta: (6,0)=1  (6,7)=1 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,7)
  _0111: a point with color blue at (6,0)
  _01111: a point with color blue at (9,4)
diff:   ^.layer_0111.pos.i  ^.layer_01.pos.i
delta: (3,3)=1  (6,7)=1 
! 24 wrong pixels (generated / expected)

TEST d364b489.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.7 sec (24.7 sec/task)
bits-train-error = 6460.7 bits (6460.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-69] Checking task d406998b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 9566.8 = 9575.8
DL output with Mo: L = 9.0 + 9566.8 = 9575.8
DL input+output M: L = 17.9 + 19133.7 = 19151.6

# learning a model for train pairs
2.000	
1.854	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.771	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.703	OUT DEF: ^.size=^.size
1.660	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.640	IN  DEF: ^.layer_0.shape.color=grey
1.621	IN  DEF: ^.layer_01.shape.color=grey
1.602	IN  DEF: ^.layer_011.shape.color=grey
1.574	IN  DEF: ^.layer_011.shape.mask=Odd Checkboard
1.547	IN  DEF: ^.layer_0.shape.mask=Even Checkboard
1.529	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.494	OUT OBJECT at ^.layer_0: ^.layer_0111.shape at ?
1.460	OUT OBJECT at ^.layer_00: ^.layer_0111.shape at ?
1.425	OUT OBJECT at ^.layer_001: ^.layer_0111.shape at ?
1.390	OUT OBJECT at ^.layer_0011: ^.layer_0111.shape at ?
1.355	OUT OBJECT at ^.layer_00111: ^.layer_0111.shape at ?
1.339	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.320	OUT DEF: ^.layer_01.shape.color=green
1.304	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.285	OUT DEF: ^.layer_011.shape.color=green
1.269	OUT OBJECT at ^.layer_0111: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0111.shape at ?
  _001: ^.layer_0111.shape at ?
  _0011: ^.layer_0111.shape at ?
  _00111: ^.layer_0111.shape at ?
  _0: ^.layer_0111.shape at ?
  _01: a point with color green at ?
  _011: a point with color green at ?
  _0111: a point with color ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color grey and mask Even Checkboard at ?
  _01: a rectangle with size ? and color grey and mask ? at ?
  _011: a rectangle with size ? and color grey and mask Odd Checkboard at ?
  _0111: a point with color ? at ?

DL input  with Mi: L = 89.3 + 5626.0 = 5715.3
DL output with Mo: L = 97.9 + 6335.3 = 6433.2
DL input+output M: L = 187.2 + 11961.4 = 12148.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,6)
  _0111: a point with color grey at (0,9)
diff: 
delta:
   (104.0 bits)
data: a background with size (3,10) and color black and layers
  _00: a point with color grey at (0,0)
  _001: a point with color grey at (0,2)
  _0011: a point with color grey at (1,4)
  _00111: a point with color grey at (2,6)
  _0: a point with color grey at (2,8)
  _01: a point with color green at (0,5)
  _011: a point with color green at (0,9)
  _0111: a point with color green at (1,1)
diff: 
delta: (1,7)=3  (2,3)=3 
   (114.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,6)
  _0111: a point with color grey at (0,9)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN d406998b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,6)
  _01: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,3)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,9)
  _0111: a point with color grey at (0,1)
diff: 
delta: (1,0)=5# (2,2)=5#
   (143.6 bits)
data: a background with size (3,12) and color black and layers
  _00: a point with color grey at (0,6)
  _001: a point with color grey at (0,8)
  _0011: a point with color grey at (1,0)
  _00111: a point with color grey at (1,4)
  _0: a point with color grey at (1,10)
  _01: a point with color green at (0,1)
  _011: a point with color green at (0,3)
  _0111: a point with color green at (1,7)
diff: 
delta: (2,2)=5# (2,5)=3  (2,9)=3  (2,11)=3 
   (153.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,6)
  _01: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,3)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,9)
  _0111: a point with color grey at (0,1)
diff: 
delta: (1,0)=5# (2,2)=5#
! 13 wrong pixels (generated / expected)

TRAIN d406998b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Even Checkboard at (0,11)
  _01: a rectangle with size (3,5) and color grey and mask ..x.x|.x.x.|x.... at (0,3)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,8)
  _0111: a point with color grey at (0,2)
diff: 
delta: (1,0)=5# (2,1)=5#
   (150.8 bits)
data: a background with size (3,13) and color black and layers
  _00: a point with color grey at (0,5)
  _001: a point with color grey at (0,7)
  _0011: a point with color grey at (0,11)
  _00111: a point with color grey at (1,9)
  _0: a point with color grey at (2,1)
  _01: a point with color green at (0,2)
  _011: a point with color green at (1,0)
  _0111: a point with color green at (1,4)
diff: 
delta: (1,6)=3  (1,12)=3  (2,3)=5# (2,8)=3  (2,10)=3 
   (173.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Even Checkboard at (0,11)
  _01: a rectangle with size (3,5) and color grey and mask ..x.x|.x.x.|x.... at (0,3)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,8)
  _0111: a point with color grey at (0,2)
diff: 
delta: (1,0)=5# (2,1)=5#
! 14 wrong pixels (generated / expected)

TRAIN d406998b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask Even Checkboard at (0,7)
  _01: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _011: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,12)
  _0111: a point with color grey at (0,2)
diff: 
delta: (1,0)=5# (2,1)=5# (2,6)=5#
   (164.2 bits)
data: a background with size (3,14) and color black and layers
  _00: a point with color grey at (0,2)
  _001: a point with color grey at (1,0)
  _0011: a point with color grey at (1,4)
  _00111: a point with color grey at (1,8)
  _0: a point with color grey at (1,10)
  _01: a point with color green at (0,5)
  _011: a point with color green at (0,7)
  _0111: a point with color green at (0,9)
diff: 
delta: (0,11)=3  (1,13)=3  (2,1)=3  (2,3)=3  (2,6)=5# (2,12)=5#
   (192.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask Even Checkboard at (0,7)
  _01: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _011: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,12)
  _0111: a point with color grey at (0,2)
diff: 
delta: (1,0)=5# (2,1)=5# (2,6)=5#
! 15 wrong pixels (generated / expected)

TRAIN d406998b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,7)
  _01: a rectangle with size (3,4) and color grey and mask ...x|x.x.|.x.. at (0,0)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,4)
  _0111: a point with color grey at (0,12)
diff: 
delta: (0,14)=5# (1,11)=5# (1,15)=5# (2,10)=5# (2,13)=5# (2,16)=5#
! 18 wrong pixels (generated / expected)

TEST d406998b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.3 sec (23.3 sec/task)
bits-train-error = 6335.3 bits (6335.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-68] Checking task d43fd935.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7070.7 = 7079.7
DL output with Mo: L = 9.0 + 10887.6 = 10896.6
DL input+output M: L = 17.9 + 17958.3 = 17976.2

# learning a model for train pairs
2.000	
1.794	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.593	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.412	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
1.324	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.271	OUT DEF: ^.size=^.size
1.241	OUT DEF: ^.layer_01=^.layer_0
1.226	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.202	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
1.177	OUT OBJECT at ^.layer_0111: ^.layer_00.shape at ?
1.147	OUT DEF: ^.layer_00=^.layer_00
1.131	IN  OBJECT at ^.layer_001: a point with color ? at ?
1.115	IN  OBJECT at ^.layer_0011: a point with color ? at ?
1.097	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.084	OUT DEF: ^.layer_011.shape.color=^.layer_001.shape.color
1.072	OUT DEF: ^.layer_0.shape.color=^.layer_00.shape.color
1.052	IN  DEF: ^.layer_0.shape.color=green
1.042	IN  DEF: ^.layer_0.shape.mask=Full
1.036	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.029	IN  DEF: ^.color=black
1.024	IN  DEF: ^.size=(?,?)
0.987	IN  DEF: ^.size.i=10
0.950	IN  DEF: ^.size.j=10
0.945	IN  DEF: ^.layer_00.pos=(?,?)
0.940	IN  DEF: ^.layer_001.pos=(?,?)
0.935	IN  DEF: ^.layer_0011.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_00
  _0: a rectangle with size ? and color ^.layer_00.shape.color and mask ^.layer_0.shape.mask at ?
  _01: ^.layer_0
  _011: a rectangle with size ? and color ^.layer_001.shape.color and mask ? at ?
  _0111: ^.layer_00.shape at ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  _00: a point with color ? at (?,?)
  _001: a point with color ? at (?,?)
  _0011: a point with color ? at (?,?)
  _0: a rectangle with size ? and color green and mask Full at ?
  _01: a point with color ? at ?

DL input  with Mi: L = 105.5 + 4125.6 = 4231.2
DL output with Mo: L = 68.8 + 3606.8 = 3675.6
DL input+output M: L = 174.4 + 7732.4 = 7906.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (0,0)
  _001: a point with color pink at (1,8)
  _0011: a point with color blue at (3,8)
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _01: a point with color pink at (6,7)
diff: 
delta: (7,6)=6  (8,2)=6  (9,4)=1 
   (138.3 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (1,5) and color blue and mask Full at (3,4)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _011: a rectangle with size (4,1) and color pink and mask Full at (5,2)
  _0111: a point with color blue at (9,4)
diff: 
delta: (1,8)=6  (6,7)=6  (7,6)=6 
   (116.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (0,0)
  _001: a point with color pink at (1,8)
  _0011: a point with color blue at (3,8)
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _01: a point with color pink at (6,7)
diff: 
delta: (7,6)=6  (8,2)=6  (9,4)=1 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (1,8)
  _001: a point with color blue at (0,0)
  _0011: a point with color blue at (3,8)
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _01: a point with color pink at (6,7)
diff: 
delta: (7,6)=6  (8,2)=6  (9,4)=1 
! 16 wrong pixels (generated / expected)

TRAIN d43fd935.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color orange at (0,1)
  _001: a point with color cyan at (0,6)
  _0011: a point with color orange at (2,3)
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _01: a point with color cyan at (2,9)
diff: 
delta: (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
   (196.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color orange at (0,1)
  _0: a rectangle with size (6,1) and color orange and mask Full at (4,5)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _011: a rectangle with size (3,4) and color cyan and mask x...|x...|xxxx at (0,6)
  _0111: a point with color orange at (2,3)
diff: 
delta: (2,4)=7# (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,9)=7#
   (191.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color orange at (0,1)
  _001: a point with color cyan at (0,6)
  _0011: a point with color orange at (2,3)
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _01: a point with color cyan at (2,9)
diff: 
delta: (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 21 wrong pixels (generated / expected)

TRAIN d43fd935.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (2,1)
  _001: a point with color blue at (1,4)
  _0011: a point with color blue at (5,9)
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _01: a point with color blue at (9,1)
diff: 
delta:
   (77.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (2,1)
  _0: a rectangle with size (5,1) and color blue and mask Full at (1,4)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _011: a rectangle with size (1,1) and color blue and mask Full at (5,9)
  _0111: a point with color blue at (9,1)
diff: 
delta:
   (52.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (1,4)
  _001: a point with color blue at (2,1)
  _0011: a point with color blue at (5,9)
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _01: a point with color blue at (9,1)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color blue at (2,1)
  _001: a point with color blue at (1,4)
  _0011: a point with color blue at (5,9)
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _01: a point with color blue at (9,1)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN d43fd935.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (0,3)
  _001: a point with color red at (1,0)
  _0011: a point with color red at (2,7)
  _0: a rectangle with size (2,2) and color green and mask Full at (6,2)
  _01: a point with color pink at (3,0)
diff: 
delta: (4,7)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 17 wrong pixels (generated / expected)

TEST d43fd935.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.7 sec (25.7 sec/task)
bits-train-error = 3606.8 bits (3606.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-67] Checking task d4469b4b.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13954.3 = 13963.2
DL output with Mo: L = 9.0 + 6062.6 = 6071.6
DL input+output M: L = 17.9 + 20016.9 = 20034.8

# learning a model for train pairs
2.000	
1.483	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.045	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.010	OUT DEF: ^.layer_0.shape.color=grey
0.990	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.973	OUT DEF: ^.color=black
0.959	OUT DEF: ^.size=(?,?)
0.896	OUT DEF: ^.size.i=3
0.833	OUT DEF: ^.size.j=3
0.818	OUT DEF: ^.layer_0.pos=(?,?)
0.785	OUT DEF: ^.layer_0.pos.i=0
0.751	OUT DEF: ^.layer_0.pos.j=0
0.737	OUT DEF: ^.layer_0.shape.size=(?,?)
0.674	OUT DEF: ^.layer_0.shape.size.i=3
0.611	OUT DEF: ^.layer_0.shape.size.j=3
0.604	IN  DEF: ^.layer_0.pos=(?,?)
0.598	IN  DEF: ^.size=(?,?)
0.563	IN  DEF: ^.size.i=5
0.529	IN  DEF: ^.size.j=5
0.522	IN  DEF: ^.layer_0.shape.size=(?,?)
0.516	IN  DEF: ^.layer_01.pos=(?,?)
0.510	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ? at (0,0)
WHERE (Mi)
a background with size (5,5) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 78.5 + 4983.2 = 5061.8
DL output with Mo: L = 50.1 + 844.1 = 894.3
DL input+output M: L = 128.6 + 5827.4 = 5956.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask ..x|.x.|.xx|xx. at (1,2)
  _01: a rectangle with size (3,2) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
   (68.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask ..x|.x.|.xx|xx. at (1,2)
  _01: a rectangle with size (3,2) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color blue and mask .xxx|x.xx|x.x.|...x at (1,1)
diff: 
delta:
   (64.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color blue and mask .xxx|x.xx|x.x.|...x at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask ...xx|.xx..|.x.x.|x.xx. at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta:
   (68.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|..x|xxx at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask ...xx|.xx..|.x.x.|x.xx. at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,2) and color blue and mask x.|x.|xx|.x|x. at (0,0)
  _01: a rectangle with size (5,3) and color blue and mask x..|.xx|.x.|.x.|..x at (0,2)
diff: 
delta:
   (80.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,2) and color blue and mask x.|x.|xx|.x|x. at (0,0)
  _01: a rectangle with size (5,3) and color blue and mask x..|.xx|.x.|.x.|..x at (0,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (5,4) and color black and mask x.x.|xxx.|.xxx|xx..|..x. at (0,1)
diff: 
delta:
   (79.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (5,4) and color black and mask x.x.|xxx.|.xxx|xx..|..x. at (0,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .x.x.|.xxx.|.xx.x|xxx..|..x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,4)
diff: 
delta:
   (74.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .x.x.|.xxx.|.xx.x|xxx..|..x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,4)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .x.|xx.|.x.|..x|xxx at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
diff: 
delta:
   (62.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|..x|xxx at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .x.|xx.|.x.|..x|xxx at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xxxx.|..x.x|.x...|.x...|..x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (3,4)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TEST d4469b4b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask x.xx|.x.. at (0,1)
  _01: a rectangle with size (2,1) and color green and mask Full at (3,4)
diff: 
delta: (2,0)=3  (3,2)=3 
! 4 wrong pixels (generated / expected)

TEST d4469b4b.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.5 sec (8.5 sec/task)
bits-train-error = 844.1 bits (844.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-66] Checking task d4a91cb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1869.4 = 1878.4
DL output with Mo: L = 9.0 + 9074.0 = 9082.9
DL input+output M: L = 17.9 + 10943.4 = 10961.3

# learning a model for train pairs
2.000	
1.468	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.399	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.315	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.242	IN  DEF: ^.layer_0.shape.color=cyan
1.168	IN  DEF: ^.layer_01.shape.color=red
1.103	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.038	OUT DEF: ^.size=^.size
1.008	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.972	OUT DEF: ^.layer_011=^.layer_0
0.939	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
0.903	OUT DEF: ^.layer_0111=^.layer_01
0.879	IN  DEF: ^.color=black
0.860	IN  DEF: ^.size=(?,?)
0.841	IN  DEF: ^.layer_0.pos=(?,?)
0.823	IN  DEF: ^.layer_01.pos=(?,?)
0.807	OUT DEF: ^.layer_0.shape.color=yellow
0.792	OUT DEF: ^.layer_01.shape.color=yellow
0.784	OUT DEF: ^.layer_0.shape.mask=Full
0.777	OUT DEF: ^.layer_01.shape.mask=Full
0.772	OUT DEF: ^.color=black
0.768	OUT DEF: ^.layer_0.pos=(?,?)
0.752	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.748	OUT DEF: ^.layer_0.shape.size=(?,?)
0.740	OUT DEF: ^.layer_0.shape.size.j=1
0.737	OUT DEF: ^.layer_01.pos=(?,?)
0.721	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.717	OUT DEF: ^.layer_01.shape.size=(?,?)
0.710	OUT DEF: ^.layer_01.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,1) and color yellow and mask Full at (?,^.layer_0.pos.j)
  _01: a rectangle with size (1,?) and color yellow and mask Full at (^.layer_01.pos.i,?)
  _011: ^.layer_0
  _0111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 49.4 + 1114.4 = 1163.8
DL output with Mo: L = 73.1 + 745.7 = 818.8
DL input+output M: L = 122.6 + 1860.1 = 1982.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color red at (8,9)
diff: 
delta:
   (37.6 bits)
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (6,1) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,8) and color yellow and mask Full at (8,1)
  _011: a point with color cyan at (2,1)
  _0111: a point with color red at (8,9)
diff: 
delta:
   (25.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color red at (8,9)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  _0: a point with color red at (8,9)
  _01: a point with color cyan at (2,1)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 17 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,11) and color black and layers
  _0: a point with color cyan at (1,8)
  _01: a point with color red at (5,1)
diff: 
delta:
   (35.8 bits)
data: a background with size (8,11) and color black and layers
  _0: a rectangle with size (4,1) and color yellow and mask Full at (2,8)
  _01: a rectangle with size (1,7) and color yellow and mask Full at (5,2)
  _011: a point with color cyan at (1,8)
  _0111: a point with color red at (5,1)
diff: 
delta:
   (23.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  _0: a point with color cyan at (1,8)
  _01: a point with color red at (5,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,11) and color black and layers
  _0: a point with color red at (5,1)
  _01: a point with color cyan at (1,8)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 13 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (10,2)
  _01: a point with color red at (1,8)
diff: 
delta:
   (38.1 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (9,1) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (1,2)
  _011: a point with color cyan at (10,2)
  _0111: a point with color red at (1,8)
diff: 
delta:
   (25.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (10,2)
  _01: a point with color red at (1,8)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color black and layers
  _0: a point with color red at (1,8)
  _01: a point with color cyan at (10,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a point with color cyan at (8,3)
  _01: a point with color red at (2,11)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,13) and color black and layers
  _0: a point with color red at (2,11)
  _01: a point with color cyan at (8,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 17 wrong pixels (generated / expected)

TEST d4a91cb9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 745.7 bits (745.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-65] Checking task d4f3cd78.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 7387.1 = 7396.1
DL output with Mo: L = 9.0 + 14418.4 = 14427.4
DL input+output M: L = 17.9 + 21805.5 = 21823.4

# learning a model for train pairs
2.000	
1.242	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.783	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.380	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.353	OUT DEF: ^.size=^.size
0.338	OUT DEF: ^.layer_0=^.layer_0
0.326	IN  DEF: ^.layer_0.shape.color=grey
0.319	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.313	OUT DEF: ^.layer_01.shape.color=cyan
0.307	OUT DEF: ^.layer_011.shape.color=cyan
0.302	IN  DEF: ^.color=black
0.299	OUT DEF: ^.layer_01.shape.mask=Full
0.296	OUT DEF: ^.layer_011.shape.mask=Full
0.293	IN  DEF: ^.size=(?,?)
0.269	IN  DEF: ^.size.i=10
0.246	IN  DEF: ^.size.j=10
0.243	IN  DEF: ^.layer_0.pos=(?,?)
0.231	IN  DEF: ^.layer_0.pos.j=2
0.228	IN  DEF: ^.layer_0.shape.size=(?,?)
0.208	IN  DEF: ^.layer_0.shape.size.j=6
0.206	OUT DEF: ^.color=black
0.204	OUT DEF: ^.layer_01.pos=(?,?)
0.198	OUT DEF: ^.layer_01.pos.j=3
0.192	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i + 1
0.191	OUT DEF: ^.layer_01.shape.size=(?,?)
0.182	OUT DEF: ^.layer_01.shape.size.j=4
0.175	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.i - 2
0.173	OUT DEF: ^.layer_011.pos=(?,?)
0.167	OUT DEF: ^.layer_011.pos.j=5
0.166	OUT DEF: ^.layer_011.shape.size=(?,?)
0.162	OUT DEF: ^.layer_011.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_0.shape.size.i - 2,4) and color cyan and mask Full at (^.layer_0.pos.i + 1,3)
  _011: a rectangle with size (?,1) and color cyan and mask Full at (?,5)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,6) and color grey and mask ? at (?,2)

DL input  with Mi: L = 59.1 + 958.6 = 1017.7
DL output with Mo: L = 96.4 + 258.9 = 355.3
DL input+output M: L = 155.5 + 1217.5 = 1373.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
diff: 
delta:
   (51.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _011: a rectangle with size (7,1) and color cyan and mask Full at (3,5)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
diff: 
delta:
   (44.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
  _01: a rectangle with size (3,4) and color cyan and mask Full at (6,3)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,5)
diff: 
delta:
   (13.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask xxxxx|x...x|x...x|x....|x...x|xxxxx at (2,2)
diff:   ^.layer_0.shape.size.j
delta:
! 5 wrong pixels (generated / expected)

TEST d4f3cd78.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 258.9 bits (258.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-64] Checking task d511f180.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5885.3 = 5894.3
DL output with Mo: L = 9.0 + 5885.3 = 5894.3
DL input+output M: L = 17.9 + 11770.6 = 11788.5

# learning a model for train pairs
2.000	
1.887	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.775	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.707	OUT DEF: ^.size=^.size
1.659	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.620	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.593	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.575	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.555	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.535	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.516	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.452	OUT DEF: ^.layer_01=^.layer_01
1.429	OUT DEF: ^.layer_0111.shape.color=red
1.407	OUT OBJECT at ^.layer_01111: a point with color ? at ?
1.387	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.324	OUT DEF: ^.layer_011=^.layer_011
1.304	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.265	OUT DEF: ^.layer_01111.pos=^.layer_0111.pos
1.254	OUT DEF: ^.layer_0.shape.color=cyan
1.231	IN  DEF: ^.layer_0.shape.color=grey
1.225	OUT DEF: ^.layer_0111.pos=(?,?)
1.209	OUT DEF: ^.layer_0111.pos.i=2
1.195	OUT DEF: ^.layer_0111.pos.j=^.layer_0111.pos.j - ^.layer_01.pos.j
1.189	IN  DEF: ^.size=(?,?)
1.183	IN  DEF: ^.layer_0.pos=(?,?)
1.177	IN  DEF: ^.layer_0.shape.size=(?,?)
1.156	IN  DEF: ^.layer_0.shape.size.i=2
1.150	IN  DEF: ^.layer_01.pos=(?,?)
1.134	IN  DEF: ^.layer_01.pos.i=(0)
1.128	IN  DEF: ^.layer_011.pos=(?,?)
1.122	IN  DEF: ^.layer_0111.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color cyan and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a point with color red at (2,^.layer_0111.pos.j - ^.layer_01.pos.j)
  _01111: a point with color ? at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (2,?) and color grey and mask ? at (?,?)
  _01: a point with color ? at ((0),?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 96.1 + 4292.9 = 4389.0
DL output with Mo: L = 83.0 + 2139.7 = 2222.8
DL input+output M: L = 179.1 + 6432.6 = 6611.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (2,4) and color grey and mask xx.x|.xxx at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color orange at (0,1)
  _0111: a point with color yellow at (1,4)
diff: 
delta: (1,2)=6  (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
   (254.6 bits)
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color orange at (0,1)
  _0111: a point with color red at (2,4)
  _01111: a point with color yellow at (1,4)
diff: 
delta: (1,2)=6  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=8  (4,2)=1  (4,3)=9# (4,4)=3 
   (171.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (2,4) and color grey and mask xx.x|.xxx at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color orange at (0,1)
  _0111: a point with color pink at (1,2)
diff: 
delta: (1,4)=4  (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (2,4) and color grey and mask xx.x|.xxx at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color orange at (0,1)
  _0111: a point with color yellow at (1,4)
diff: 
delta: (1,2)=6  (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
! 16 wrong pixels (generated / expected)

TRAIN d511f180.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a point with color blue at (0,2)
  _011: a point with color green at (0,0)
  _0111: a point with color cyan at (1,2)
diff: 
delta: (2,0)=2  (2,2)=9#
   (91.9 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a point with color blue at (0,2)
  _011: a point with color green at (0,0)
  _0111: a point with color red at (2,0)
  _01111: a point with color grey at (1,2)
diff: 
delta: (2,2)=9#
   (30.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color blue at (0,2)
  _0111: a point with color cyan at (1,2)
diff: 
delta: (2,0)=2  (2,2)=9#
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color blue at (0,2)
  _0111: a point with color red at (2,0)
diff: 
delta: (1,2)=8  (2,2)=9#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a point with color blue at (0,2)
  _011: a point with color green at (0,0)
  _0111: a point with color cyan at (1,2)
diff: 
delta: (2,0)=2  (2,2)=9#
! 4 wrong pixels (generated / expected)

TRAIN d511f180.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (0,0)
  _01: a point with color pink at (0,0)
  _011: a point with color orange at (1,1)
  _0111: a point with color green at (0,2)
diff: 
delta: (2,2)=2 
   (82.8 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,3) and color cyan and mask Odd Checkboard at (0,0)
  _01: a point with color pink at (0,0)
  _011: a point with color orange at (1,1)
  _0111: a point with color red at (2,2)
  _01111: a point with color green at (0,2)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (0,0)
  _01: a point with color pink at (0,0)
  _011: a point with color green at (0,2)
  _0111: a point with color orange at (1,1)
diff: 
delta: (2,2)=2 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (0,0)
  _01: a point with color pink at (0,0)
  _011: a point with color orange at (1,1)
  _0111: a point with color green at (0,2)
diff: 
delta: (2,2)=2 
! 3 wrong pixels (generated / expected)

TRAIN d511f180.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color grey at (0,3)
  _0111: a point with color orange at (1,2)
diff:   ^.layer_0.shape.color
delta: (1,0)=3  (1,3)=5# (2,0)=3  (2,1)=7# (2,2)=1  (2,3)=9# (3,0)=6  (3,1)=4 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color grey at (0,3)
  _0111: a point with color grey at (1,3)
diff:   ^.layer_0.shape.color
delta: (1,0)=3  (1,2)=7# (2,0)=3  (2,1)=7# (2,2)=1  (2,3)=9# (3,0)=6  (3,1)=4 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color orange at (1,2)
  _0111: a point with color grey at (0,3)
diff:   ^.layer_0.shape.color
delta: (1,0)=3  (1,3)=5# (2,0)=3  (2,1)=7# (2,2)=1  (2,3)=9# (3,0)=6  (3,1)=4 
! 14 wrong pixels (generated / expected)

TEST d511f180.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.4 sec (16.4 sec/task)
bits-train-error = 2139.7 bits (2139.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-63] Checking task d5d6de2d.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 10952.9 = 10961.8
DL output with Mo: L = 9.0 + 4309.7 = 4318.7
DL input+output M: L = 17.9 + 15262.6 = 15280.5

# learning a model for train pairs
2.000	
1.377	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.779	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.637	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.497	OUT DEF: ^.size=^.size
0.465	OUT DEF: ^.layer_0.shape.color=green
0.449	OUT DEF: ^.layer_0.shape.mask=Full
0.436	IN  DEF: ^.layer_01.shape.color=red
0.426	OUT DEF: ^.color=black
0.416	IN  DEF: ^.layer_0.shape.color=red
0.404	IN  DEF: ^.layer_01.shape.mask=Border
0.396	OUT DEF: ^.layer_0.pos=(?,?)
0.365	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i + 1
0.334	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j + 1
0.326	OUT DEF: ^.layer_0.shape.size=(?,?)
0.293	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.shape.size.i - 2
0.267	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.shape.size.j - 2
0.263	IN  DEF: ^.color=black
0.260	IN  DEF: ^.size=(?,?)
0.257	IN  DEF: ^.layer_0.pos=(?,?)
0.254	IN  DEF: ^.layer_0.shape.size=(?,?)
0.250	IN  DEF: ^.layer_01.pos=(?,?)
0.247	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_01.shape.size.i - 2,^.layer_01.shape.size.j - 2) and color green and mask Full at (^.layer_01.pos.i + 1,^.layer_01.pos.j + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Border at (?,?)

DL input  with Mi: L = 73.3 + 1899.6 = 1972.9
DL output with Mo: L = 81.2 + 209.0 = 290.1
DL input+output M: L = 154.5 + 2108.6 = 2263.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color red and mask Border at (5,4)
diff: 
delta:
   (65.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (6,5)
diff: 
delta: (2,2)=3 
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask Border at (5,4)
  _01: a rectangle with size (3,3) and color red and mask Border at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color red and mask Border at (5,4)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,4)
  _01: a rectangle with size (4,3) and color red and mask Border at (1,4)
diff: 
delta:
   (58.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (2,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,4)
  _01: a rectangle with size (4,3) and color red and mask Border at (1,4)
diff: 
delta:
correct output grid

TRAIN d5d6de2d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (7,10)
  _01: a rectangle with size (5,5) and color red and mask Border at (1,1)
diff: 
delta:
   (66.1 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (7,10)
  _01: a rectangle with size (5,5) and color red and mask Border at (1,1)
diff: 
delta:
correct output grid

TRAIN d5d6de2d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,8) and color red and mask Border at (4,1)
  _01: a rectangle with size (3,3) and color red and mask Border at (0,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (0,0)
  _01: a rectangle with size (6,8) and color red and mask Border at (4,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (4,9) and color red and mask Border at (9,15)
  _01: a rectangle with size (6,5) and color red and mask Border at (18,1)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask Border at (18,1)
  _01: a rectangle with size (4,9) and color red and mask Border at (9,15)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (4,9) and color red and mask Border at (9,15)
  _01: a rectangle with size (3,7) and color red and mask Border at (1,1)
diff: 
delta: (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2  (18,1)=2  (18,2)=2  (18,3)=2  (18,4)=2  (18,5)=2  (19,1)=2  (19,5)=2  (20,1)=2  (20,5)=2  (21,1)=2  (21,5)=2  (22,1)=2  (22,5)=2  (23,1)=2  (23,2)=2  (23,3)=2  (23,4)=2  (23,5)=2 
! 26 wrong pixels (generated / expected)

TEST d5d6de2d.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.0 sec (2.0 sec/task)
bits-train-error = 209.0 bits (209.0 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-62] Checking task d631b094.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2231.0 = 2240.0
DL output with Mo: L = 9.0 + 649.0 = 657.9
DL input+output M: L = 17.9 + 2880.0 = 2897.9

# learning a model for train pairs
2.000	
1.750	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.265	OUT DEF: ^.color=^.layer_0.shape.color
1.191	OUT DEF: ^.size=(?,?)
1.049	OUT DEF: ^.size.i=1
1.022	IN  DEF: ^.color=black
1.000	IN  DEF: ^.size=(?,?)
0.903	IN  DEF: ^.size.i=3
0.806	IN  DEF: ^.size.j=3
0.785	IN  DEF: ^.layer_0.pos=(?,?)
0.763	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,?) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 45.3 + 994.1 = 1039.4
DL output with Mo: L = 12.2 + 184.6 = 196.8
DL input+output M: L = 57.5 + 1178.7 = 1236.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,0)
diff: 
delta:
   (25.7 bits)
data: a background with size (1,2) and color blue and layers
diff: 
delta:
   (4.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,0)
diff: 
delta:
! size mismatch, 1x10 instead of 1x2

TRAIN d631b094.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (26.9 bits)
data: a background with size (1,3) and color red and layers
diff: 
delta:
   (5.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
! size mismatch, 1x10 instead of 1x3

TRAIN d631b094.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta:
   (17.4 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (2.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta:
! size mismatch, 1x10 instead of 1x1

TRAIN d631b094.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|x. at (0,0)
diff: 
delta:
   (29.3 bits)
data: a background with size (1,4) and color cyan and layers
diff: 
delta:
   (6.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|x. at (0,0)
diff: 
delta:
! size mismatch, 1x10 instead of 1x4

TRAIN d631b094.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|..x at (0,0)
diff: 
delta:
! size mismatch, 1x10 instead of 1x5

TEST d631b094.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 184.6 bits (184.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-61] Checking task d687bc17.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 29038.0 = 29046.9
DL output with Mo: L = 9.0 + 28257.1 = 28266.0
DL input+output M: L = 17.9 + 57295.0 = 57313.0

# learning a model for train pairs
2.000	
1.775	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.566	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.363	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.160	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.977	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.803	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
0.641	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.490	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_0.shape at ?
  _0111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 85.3 + 8425.1 = 8510.4
DL output with Mo: L = 67.9 + 5498.0 = 5566.0
DL input+output M: L = 153.3 + 13923.1 = 14076.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _011: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (2,10)=3  (3,3)=2  (4,7)=7# (5,3)=3  (6,5)=8  (7,9)=4  (7,11)=2 
   (287.6 bits)
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask x.|x.|xx|x.|x.|x.|xx|x. at (1,0)
  _01: a rectangle with size (8,2) and color green and mask .x|xx|.x|.x|xx|.x|.x|.x at (1,13)
  _011: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _0111: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
diff: 
delta: (1,9)=4  (8,5)=8 
   (184.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (2,10)=3  (3,3)=2  (4,7)=7# (5,3)=3  (6,5)=8  (7,9)=4  (7,11)=2 
! size mismatch, 10x10 instead of 10x15
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _01: a rectangle with size (8,1) and color green and mask Full at (1,14)
  _011: a rectangle with size (8,1) and color red and mask Full at (1,0)
diff: 
delta: (2,10)=3  (3,3)=2  (4,7)=7# (5,3)=3  (6,5)=8  (7,9)=4  (7,11)=2 
! size mismatch, 10x10 instead of 10x15
>> Trial 3
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _011: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (2,10)=3  (3,3)=2  (4,7)=7# (5,3)=3  (6,5)=8  (7,9)=4  (7,11)=2 
! size mismatch, 10x10 instead of 10x15

TRAIN d687bc17.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (2,9)=7# (3,7)=2  (4,4)=3  (6,8)=4  (8,3)=8  (9,5)=1  (9,8)=7#
   (286.6 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,10) and color orange and mask .......xx.|xxxxxxxxxx at (10,1)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
  _011: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _0111: a rectangle with size (10,1) and color red and mask Full at (1,0)
diff: 
delta: (1,5)=1  (3,1)=2  (6,10)=4 
   (190.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (2,9)=7# (3,7)=2  (4,4)=3  (6,8)=4  (8,3)=8  (9,5)=1  (9,8)=7#
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
  _011: a rectangle with size (10,1) and color red and mask Full at (1,0)
diff: 
delta: (2,9)=7# (3,7)=2  (4,4)=3  (6,8)=4  (8,3)=8  (9,5)=1  (9,8)=7#
! size mismatch, 10x10 instead of 12x12
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (2,9)=7# (3,7)=2  (4,4)=3  (6,8)=4  (8,3)=8  (9,5)=1  (9,8)=7#
! size mismatch, 10x10 instead of 12x12

TRAIN d687bc17.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _01: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _011: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8 
   (268.4 bits)
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,2) and color cyan and mask .x|.x|.x|xx|.x|.x|.x|.x|xx|xx|.x|.x at (1,9)
  _01: a rectangle with size (1,9) and color green and mask Full at (13,1)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _0111: a rectangle with size (1,9) and color pink and mask Full at (0,1)
diff: 
delta: (1,8)=6  (7,1)=4 
   (175.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _01: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _011: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8 
! size mismatch, 10x10 instead of 14x11
>> Trial 2
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _01: a rectangle with size (1,9) and color green and mask Full at (13,1)
  _011: a rectangle with size (1,9) and color pink and mask Full at (0,1)
diff: 
delta: (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8 
! size mismatch, 10x10 instead of 14x11
>> Trial 3
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _01: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _011: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8 
! size mismatch, 10x10 instead of 14x11

TRAIN d687bc17.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _01: a rectangle with size (12,1) and color blue and mask Full at (1,0)
  _011: a rectangle with size (12,1) and color red and mask Full at (1,16)
diff: 
delta: (2,7)=8  (2,12)=1  (3,3)=2  (3,14)=3  (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! size mismatch, 10x10 instead of 14x17
>> Trial 2
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _01: a rectangle with size (12,1) and color red and mask Full at (1,16)
  _011: a rectangle with size (12,1) and color blue and mask Full at (1,0)
diff: 
delta: (2,7)=8  (2,12)=1  (3,3)=2  (3,14)=3  (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! size mismatch, 10x10 instead of 14x17
>> Trial 3
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (12,1) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _011: a rectangle with size (12,1) and color red and mask Full at (1,16)
diff: 
delta: (2,7)=8  (2,12)=1  (3,3)=2  (3,14)=3  (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! size mismatch, 10x10 instead of 14x17

TEST d687bc17.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.2 sec (25.2 sec/task)
bits-train-error = 5498.0 bits (5498.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-60] Checking task d6ad076f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21342.4 = 21351.4
DL output with Mo: L = 9.0 + 27979.2 = 27988.1
DL input+output M: L = 17.9 + 49321.6 = 49339.6

# learning a model for train pairs
2.000	
1.432	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.976	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.664	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.378	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.200	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.179	OUT DEF: ^.size=^.size
0.167	OUT DEF: ^.layer_0=^.layer_0
0.156	OUT DEF: ^.layer_011=^.layer_01
0.151	OUT DEF: ^.layer_01.shape.color=cyan
0.148	IN  DEF: ^.layer_0.shape.mask=Full
0.144	IN  DEF: ^.layer_01.shape.mask=Full
0.142	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.140	IN  DEF: ^.color=black
0.138	IN  DEF: ^.size=(?,?)
0.126	IN  DEF: ^.size.i=10
0.113	IN  DEF: ^.size.j=10
0.112	IN  DEF: ^.layer_0.pos=(?,?)
0.110	IN  DEF: ^.layer_0.shape.size=(?,?)
0.108	IN  DEF: ^.layer_01.pos=(?,?)
0.107	IN  DEF: ^.layer_01.shape.size=(?,?)
0.105	OUT DEF: ^.color=black
0.104	OUT DEF: ^.layer_01.pos=(?,?)
0.099	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i + 3
0.098	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color cyan and mask ^.layer_01.shape.mask at (^.layer_01.pos.i + 3,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 78.6 + 1606.3 = 1684.9
DL output with Mo: L = 57.0 + 480.2 = 537.1
DL input+output M: L = 135.6 + 2086.4 = 2222.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
   (52.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (4,2)
  _011: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,6) and color orange and mask Full at (7,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN d6ad076f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (54.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _011: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (15.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (5,3) and color pink and mask Full at (3,7)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN d6ad076f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color brown and mask Full at (8,3)
  _01: a rectangle with size (3,9) and color green and mask Full at (0,0)
diff: 
delta:
   (53.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color brown and mask Full at (8,3)
  _01: a rectangle with size (5,4) and color cyan and mask Full at (3,4)
  _011: a rectangle with size (3,9) and color green and mask Full at (0,0)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,9) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,6) and color brown and mask Full at (8,3)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color brown and mask Full at (8,3)
  _01: a rectangle with size (3,9) and color green and mask Full at (0,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN d6ad076f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,4) and color blue and mask Full at (0,0)
  _01: a rectangle with size (6,3) and color red and mask Full at (1,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color red and mask Full at (1,7)
  _01: a rectangle with size (8,4) and color blue and mask Full at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TEST d6ad076f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 480.2 bits (480.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-59] Checking task d89b689b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5346.9 = 5355.9
DL output with Mo: L = 9.0 + 3028.3 = 3037.3
DL input+output M: L = 17.9 + 8375.2 = 8393.2

# learning a model for train pairs
2.000	
1.725	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.535	OUT DEF: ^.size=^.size
1.497	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.391	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.351	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.308	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.256	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.230	IN  DEF: ^.layer_0.shape.color=cyan
1.209	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.162	OUT DEF: ^.layer_01.shape=^.layer_01.shape
1.139	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.093	OUT DEF: ^.layer_0.shape=^.layer_011.shape
1.078	OUT DEF: ^.color=black
1.065	IN  DEF: ^.layer_0.shape.mask=Full
1.053	OUT DEF: ^.layer_01.pos=(?,?)
1.008	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i
0.966	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j - 3
0.954	OUT DEF: ^.layer_011.pos=(?,?)
0.909	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j
0.867	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i + 1
0.856	OUT DEF: ^.layer_0111.pos=(?,?)
0.814	OUT DEF: ^.layer_0111.pos.i=^.layer_0.pos.i + 1
0.772	OUT DEF: ^.layer_0111.pos.j=^.layer_0.pos.j + 1
0.763	IN  DEF: ^.color=black
0.757	IN  DEF: ^.size=(?,?)
0.708	IN  DEF: ^.size.i=10
0.659	IN  DEF: ^.size.j=10
0.652	IN  DEF: ^.layer_0.pos=(?,?)
0.646	IN  DEF: ^.layer_0.shape.size=(?,?)
0.621	IN  DEF: ^.layer_0.shape.size.i=2
0.597	IN  DEF: ^.layer_0.shape.size.j=2
0.591	IN  DEF: ^.layer_01.pos=(?,?)
0.584	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_011.shape at ^.layer_0.pos
  _01: ^.layer_01.shape at (^.layer_0.pos.i,^.layer_01.pos.j - 3)
  _011: a point with color ? at (^.layer_0.pos.i + 1,^.layer_0.pos.j)
  _0111: a point with color ? at (^.layer_0.pos.i + 1,^.layer_0.pos.j + 1)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 88.4 + 2343.5 = 2431.9
DL output with Mo: L = 117.2 + 278.6 = 395.9
DL input+output M: L = 205.7 + 2622.1 = 2827.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color pink at (3,1)
diff: 
delta: (8,1)=4  (9,9)=9#
   (78.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (4,4)
  _01: a point with color orange at (4,5)
  _011: a point with color yellow at (5,4)
  _0111: a point with color brown at (5,5)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color pink at (3,1)
diff: 
delta: (8,1)=4  (9,9)=9#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color yellow at (8,1)
diff: 
delta: (3,1)=6  (9,9)=9#
! 3 wrong pixels (generated / expected)

TRAIN d89b689b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color brown at (1,8)
  _011: a point with color grey at (0,2)
diff: 
delta: (6,9)=1  (8,1)=2 
   (78.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (4,4)
  _01: a point with color brown at (4,5)
  _011: a point with color red at (5,4)
  _0111: a point with color blue at (5,5)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color brown at (1,8)
  _011: a point with color grey at (0,2)
diff: 
delta: (6,9)=1  (8,1)=2 
! 2 wrong pixels (generated / expected)

TRAIN d89b689b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (0,3)
diff: 
delta: (6,9)=6  (7,2)=3 
   (78.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,5)
  _01: a point with color yellow at (2,6)
  _011: a point with color green at (3,5)
  _0111: a point with color pink at (3,6)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color yellow at (0,9)
diff: 
delta: (6,9)=6  (7,2)=3 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color pink at (6,9)
diff: 
delta: (0,9)=4  (7,2)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (0,3)
diff: 
delta: (6,9)=6  (7,2)=3 
! 2 wrong pixels (generated / expected)

TRAIN d89b689b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color yellow at (1,6)
  _011: a point with color green at (3,1)
diff: 
delta: (8,8)=7# (9,2)=6 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color yellow at (1,6)
  _011: a point with color orange at (8,8)
diff: 
delta: (3,1)=3  (9,2)=6 
! 5 wrong pixels (generated / expected)

TEST d89b689b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 278.6 bits (278.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-58] Checking task d8c310e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8591.2 = 8600.1
DL output with Mo: L = 9.0 + 15297.4 = 15306.4
DL input+output M: L = 17.9 + 23888.6 = 23906.5

# learning a model for train pairs
2.000	
1.629	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.361	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.263	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.176	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.140	OUT DEF: ^.size=^.size
1.105	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.003	OUT OBJECT at ^.layer_001: ^.layer_0.shape at ?
0.912	OUT OBJECT at ^.layer_01: ^.layer_011.shape at ?
0.891	OUT OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0.shape at ?
  _001: ^.layer_0.shape at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: ^.layer_011.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 4638.9 = 4705.6
DL output with Mo: L = 76.5 + 5185.8 = 5262.3
DL input+output M: L = 143.2 + 9824.7 = 9967.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (3,4)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta:
   (102.9 bits)
data: a background with size (5,15) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _001: a rectangle with size (2,2) and color red and mask Full at (3,4)
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,9)
  _010: a rectangle with size (2,8) and color red and mask Full at (3,7)
  _01: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta: (3,9)=0  (3,12)=0  (4,12)=1 
   (145.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (3,4)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (3,1)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta: (3,3)=0 
! 34 wrong pixels (generated / expected)

TRAIN d8c310e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (1,6) and color green and mask Full at (4,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,6)
diff: 
delta: (4,3)=1  (4,7)=1 
   (140.9 bits)
data: a background with size (5,15) and color black and layers
  _00: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _001: a rectangle with size (3,1) and color red and mask Full at (2,6)
  _0: a rectangle with size (3,1) and color red and mask Full at (2,10)
  _010: a rectangle with size (1,14) and color green and mask Full at (4,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,14)
diff: 
delta: (4,3)=1  (4,7)=1  (4,11)=1 
   (148.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (1,6) and color green and mask Full at (4,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,6)
diff: 
delta: (4,3)=1  (4,7)=1 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,6)
  _011: a rectangle with size (1,6) and color green and mask Full at (4,0)
diff: 
delta: (4,3)=1  (4,7)=1 
! 32 wrong pixels (generated / expected)

TRAIN d8c310e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (2,5)
  _01: a rectangle with size (1,8) and color red and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
   (220.1 bits)
data: a background with size (5,15) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask Full at (2,5)
  _001: a rectangle with size (3,2) and color yellow and mask Full at (2,11)
  _0: a rectangle with size (2,1) and color green and mask Full at (3,1)
  _010: a rectangle with size (2,10) and color green and mask Full at (3,4)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (3,8)=0  (3,9)=0  (4,2)=2  (4,3)=2  (4,8)=2  (4,9)=2  (4,14)=2 
   (224.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (2,5)
  _01: a rectangle with size (1,8) and color red and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (3,2) and color yellow and mask Full at (2,5)
  _011: a rectangle with size (1,8) and color red and mask Full at (4,2)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 39 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (2,5)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
  _011: a rectangle with size (1,8) and color red and mask Full at (4,2)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 40 wrong pixels (generated / expected)

TRAIN d8c310e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,1)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
  _011: a rectangle with size (2,10) and color pink and mask Full at (3,0)
diff: 
delta: (3,3)=0  (3,7)=0  (3,9)=2  (4,3)=3  (4,7)=3 
! 52 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,1)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
  _011: a rectangle with size (1,10) and color pink and mask Full at (4,0)
diff: 
delta: (3,0)=6  (3,4)=6  (3,8)=6  (3,9)=2  (4,3)=3  (4,7)=3 
! 44 wrong pixels (generated / expected)

TEST d8c310e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.3 sec (26.3 sec/task)
bits-train-error = 5185.8 bits (5185.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-57] Checking task d90796e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4521.2 = 4530.2
DL output with Mo: L = 9.0 + 3454.2 = 3463.1
DL input+output M: L = 17.9 + 7975.4 = 7993.3

# learning a model for train pairs
2.000	
1.866	OUT DEF: ^.size=^.size
1.833	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.796	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.772	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.654	OUT DEF: ^.layer_0=^.layer_0
1.629	IN  OBJECT at ^.layer_00: a point with color ? at ?
1.553	OUT DEF: ^.layer_01.pos=^.layer_00.pos
1.523	IN  DEF: ^.layer_00.shape.color=green
1.496	IN  OBJECT at ^.layer_001: a point with color ? at ?
1.465	IN  DEF: ^.layer_001.shape.color=red
1.435	IN  DEF: ^.layer_0.shape.color=grey
1.422	OUT DEF: ^.color=black
1.412	IN  DEF: ^.color=black
1.404	IN  DEF: ^.size=(?,?)
1.396	IN  DEF: ^.layer_00.pos=(?,?)
1.388	IN  DEF: ^.layer_001.pos=(?,?)
1.381	IN  DEF: ^.layer_0.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a point with color ? at ^.layer_00.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color green at (?,?)
  _001: a point with color red at (?,?)
  _0: a point with color grey at (?,?)

DL input  with Mi: L = 67.5 + 3513.0 = 3580.5
DL output with Mo: L = 24.6 + 2019.8 = 2044.4
DL input+output M: L = 92.1 + 5532.8 = 5624.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _001: a point with color red at (0,1)
  _0: a point with color grey at (2,1)
diff: 
delta:
   (28.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color grey at (2,1)
  _01: a point with color cyan at (0,0)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _001: a point with color red at (0,1)
  _0: a point with color grey at (2,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _001: a point with color grey at (2,1)
  _0: a point with color red at (0,1)
diff:   ^.layer_0.shape.color  ^.layer_001.shape.color
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (0,1)
  _001: a point with color green at (0,0)
  _0: a point with color grey at (2,1)
diff:   ^.layer_001.shape.color  ^.layer_00.shape.color
delta:
! 2 wrong pixels (generated / expected)

TRAIN d90796e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,6) and color black and layers
  _00: a point with color green at (1,2)
  _001: a point with color red at (1,3)
  _0: a point with color grey at (0,0)
diff: 
delta: (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
   (132.9 bits)
data: a background with size (7,6) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color cyan at (1,2)
diff: 
delta: (3,1)=8  (3,5)=2  (5,0)=5# (5,3)=3 
   (79.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
  _00: a point with color green at (1,2)
  _001: a point with color red at (1,3)
  _0: a point with color grey at (0,0)
diff: 
delta: (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
! 5 wrong pixels (generated / expected)

TRAIN d90796e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,0)
  _001: a point with color red at (0,5)
  _0: a point with color grey at (2,0)
diff: 
delta: (1,6)=3  (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
   (189.9 bits)
data: a background with size (7,7) and color black and layers
  _0: a point with color grey at (2,0)
  _01: a point with color green at (1,0)
diff: 
delta: (0,5)=2  (1,6)=3  (2,3)=8  (5,0)=8  (5,5)=8  (6,3)=5#
   (117.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,0)
  _001: a point with color red at (0,5)
  _0: a point with color grey at (2,0)
diff: 
delta: (1,6)=3  (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,6)
  _001: a point with color red at (0,5)
  _0: a point with color grey at (2,0)
diff: 
delta: (1,0)=3  (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,0)
  _001: a point with color red at (0,5)
  _0: a point with color green at (1,6)
diff:   ^.layer_0.shape.color
delta: (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 7 wrong pixels (generated / expected)

TRAIN d90796e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _00: a point with color green at (1,6)
  _001: a point with color red at (0,4)
  _0: a point with color grey at (0,8)
diff: 
delta: (1,1)=2  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,9) and color black and layers
  _00: a point with color green at (2,1)
  _001: a point with color red at (0,4)
  _0: a point with color grey at (0,8)
diff: 
delta: (1,1)=2  (1,6)=3  (1,7)=2  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,9) and color black and layers
  _00: a point with color red at (0,4)
  _001: a point with color red at (1,1)
  _0: a point with color grey at (0,8)
diff:   ^.layer_00.shape.color
delta: (1,6)=3  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 11 wrong pixels (generated / expected)

TEST d90796e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 2019.8 bits (2019.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-56] Checking task d9f24cd1.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2600.8 = 2609.8
DL output with Mo: L = 9.0 + 13279.8 = 13288.8
DL input+output M: L = 17.9 + 15880.6 = 15898.5

# learning a model for train pairs
2.000	
1.761	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.521	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.283	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.254	OUT DEF: ^.size=^.size
1.228	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.200	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.171	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.140	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.105	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.091	OUT OBJECT at ^.layer_0110: ^.layer_0.shape at ?
1.077	OUT OBJECT at ^.layer_01101: ^.layer_0.shape at ?
1.061	OUT DEF: ^.layer_0110=^.layer_0
1.045	OUT DEF: ^.layer_01101=^.layer_01
1.038	OUT DEF: ^.layer_0.shape.color=^.layer_0111.shape.color
1.026	IN  DEF: ^.color=black
0.991	IN  DEF: ^.layer_0.shape.color=grey
0.982	IN  DEF: ^.size=(?,?)
0.916	IN  DEF: ^.size.i=10
0.849	IN  DEF: ^.size.j=10
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ^.layer_0111.shape.color and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _0110: ^.layer_0
  _01101: ^.layer_01
  _011: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a point with color grey at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?

DL input  with Mi: L = 86.0 + 1641.4 = 1727.4
DL output with Mo: L = 78.4 + 2411.1 = 2489.5
DL input+output M: L = 164.3 + 4052.5 = 4216.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,1)
  _0111: a point with color red at (9,4)
  _01111: a point with color red at (9,6)
diff: 
delta:
   (71.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,2) and color red and mask .x|.x|.x|.x|xx|x.|x.|x.|x.|x. at (0,6)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,1)
  _0110: a point with color grey at (3,6)
  _01101: a point with color grey at (5,2)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,4)
diff: 
delta:
   (110.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,1)
  _0111: a point with color red at (9,4)
  _01111: a point with color red at (9,6)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,5)
  _01: a point with color grey at (5,1)
  _011: a point with color grey at (6,8)
  _0111: a point with color red at (9,1)
  _01111: a point with color red at (9,4)
diff: 
delta: (9,7)=2 
   (92.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,2) and color red and mask .x|.x|.x|.x|.x|.x|xx|x.|x.|x. at (0,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,4)
  _0110: a point with color grey at (3,5)
  _01101: a point with color grey at (5,1)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,7)
diff: 
delta: (6,8)=5#
   (131.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,5)
  _01: a point with color grey at (5,1)
  _011: a point with color grey at (6,8)
  _0111: a point with color red at (9,1)
  _01111: a point with color red at (9,4)
diff: 
delta: (9,7)=2 
! 36 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (2,7)
  _01: a point with color grey at (4,1)
  _011: a point with color grey at (6,4)
  _0111: a point with color red at (9,1)
  _01111: a point with color red at (9,4)
diff: 
delta: (9,8)=2 
! 37 wrong pixels (generated / expected)

TEST d9f24cd1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.8 sec (21.8 sec/task)
bits-train-error = 2411.1 bits (2411.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-55] Checking task d9fac9be.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 18727.6 = 18736.6
DL output with Mo: L = 9.0 + 557.3 = 566.2
DL input+output M: L = 17.9 + 19284.9 = 19302.8

# learning a model for train pairs
2.000	
1.734	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.649	OUT DEF: ^.size=(?,?)
1.483	OUT DEF: ^.size.i=1
1.317	OUT DEF: ^.size.j=1
1.271	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.264	IN  OBJECT at ^.layer_011: a point with color ? at ?
0.702	OUT DEF: ^.color=^.layer_011.shape.color
0.694	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.687	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.679	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.671	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
0.664	IN  OBJECT at ^.layer_01111111: a point with color ? at ?
0.661	IN  DEF: ^.color=black
0.658	IN  DEF: ^.size=(?,?)
0.656	IN  DEF: ^.layer_0.pos=(?,?)
0.653	IN  DEF: ^.layer_0.shape.size=(?,?)
0.650	IN  DEF: ^.layer_01.pos=(?,?)
0.648	IN  DEF: ^.layer_01.shape.size=(?,?)
0.645	IN  DEF: ^.layer_011.pos=(?,?)
0.636	IN  DEF: ^.layer_011.pos.i=(0)
0.634	IN  DEF: ^.layer_0111.pos=(?,?)
0.624	IN  DEF: ^.layer_0111.pos.i=(0)
0.622	IN  DEF: ^.layer_01111.pos=(?,?)
0.619	IN  DEF: ^.layer_011111.pos=(?,?)
0.617	IN  DEF: ^.layer_0111111.pos=(?,?)
0.607	IN  DEF: ^.layer_0111111.pos.i=2
0.605	IN  DEF: ^.layer_01111111.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ^.layer_011.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at ((0),?)
  _0111: a point with color ? at ((0),?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (2,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 172.0 + 10729.9 = 10902.0
DL output with Mo: L = 13.1 + 0.0 = 13.1
DL input+output M: L = 185.1 + 10729.9 = 10915.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (2,6)
  _011: a point with color red at (0,0)
  _0111: a point with color red at (0,5)
  _01111: a point with color red at (0,8)
  _011111: a point with color red at (4,0)
  _0111111: a point with color red at (2,2)
  _01111111: a point with color red at (4,5)
diff: 
delta:
   (137.8 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (2,6)
  _011: a point with color red at (0,0)
  _0111: a point with color red at (0,5)
  _01111: a point with color red at (0,8)
  _011111: a point with color red at (4,0)
  _0111111: a point with color red at (2,2)
  _01111111: a point with color red at (4,5)
diff: 
delta:
correct output grid

TRAIN d9fac9be.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,2)
  _011: a point with color cyan at (0,0)
  _0111: a point with color cyan at (0,2)
  _01111: a point with color cyan at (0,8)
  _011111: a point with color cyan at (1,4)
  _0111111: a point with color cyan at (2,2)
  _01111111: a point with color cyan at (3,0)
diff: 
delta: (3,3)=3  (3,6)=8  (6,0)=3  (6,7)=8 
   (216.5 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,2)
  _011: a point with color cyan at (0,0)
  _0111: a point with color cyan at (0,2)
  _01111: a point with color cyan at (0,8)
  _011111: a point with color cyan at (1,4)
  _0111111: a point with color cyan at (2,2)
  _01111111: a point with color cyan at (3,0)
diff: 
delta: (3,3)=3  (3,6)=8  (6,0)=3  (6,7)=8 
correct output grid

TRAIN d9fac9be.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,1)
  _01: a rectangle with size (4,5) and color red and mask x....|.x...|..x.x|...x. at (0,1)
  _011: a point with color blue at (0,0)
  _0111: a point with color red at (0,5)
  _01111: a point with color red at (2,0)
  _011111: a point with color blue at (2,2)
  _0111111: a point with color blue at (2,7)
  _01111111: a point with color blue at (2,8)
diff: 
delta: (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
   (341.1 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,1)
  _01: a rectangle with size (4,5) and color red and mask x....|.x...|..x.x|...x. at (0,1)
  _011: a point with color blue at (0,0)
  _0111: a point with color red at (0,5)
  _01111: a point with color red at (2,0)
  _011111: a point with color blue at (2,2)
  _0111111: a point with color blue at (2,7)
  _01111111: a point with color blue at (2,8)
diff: 
delta: (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
correct output grid

TRAIN d9fac9be.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xxx|xx.x|.xxx|x... at (7,2)
  _01: a rectangle with size (3,4) and color green and mask x...|.xx.|...x at (1,0)
  _011: a point with color cyan at (0,1)
  _0111: a point with color green at (0,10)
  _01111: a point with color cyan at (0,11)
  _011111: a point with color cyan at (1,7)
  _0111111: a point with color cyan at (2,3)
  _01111111: a point with color green at (1,9)
diff: 
delta: (2,11)=8  (3,4)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,4)=8 
   (377.5 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xxx|xx.x|.xxx|x... at (7,2)
  _01: a rectangle with size (3,4) and color green and mask x...|.xx.|...x at (1,0)
  _011: a point with color cyan at (0,1)
  _0111: a point with color green at (0,10)
  _01111: a point with color cyan at (0,11)
  _011111: a point with color cyan at (1,7)
  _0111111: a point with color cyan at (2,3)
  _01111111: a point with color green at (1,9)
diff: 
delta: (2,11)=8  (3,4)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,4)=8 
correct output grid

TRAIN d9fac9be.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask x....|.xxx.|.x.xx|.xxx.|....x at (7,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011: a point with color blue at (0,9)
  _0111: a point with color blue at (1,0)
  _01111: a point with color yellow at (1,6)
  _011111: a point with color blue at (1,9)
  _0111111: a point with color blue at (3,4)
  _01111111: a point with color yellow at (3,5)
diff:   ^.layer_0111111.pos.i  ^.layer_0111.pos.i
delta: (3,8)=4  (4,1)=4  (4,3)=1  (5,5)=1  (5,11)=1  (6,0)=1  (7,8)=4  (8,11)=4  (9,0)=4  (9,5)=4  (10,11)=4  (11,2)=4  (11,3)=4 
! 1 wrong pixels (generated / expected)

TEST d9fac9be.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.4 sec (10.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-54] Checking task dae9d2b5.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6665.4 = 6674.3
DL output with Mo: L = 9.0 + 3550.5 = 3559.4
DL input+output M: L = 17.9 + 10215.9 = 10233.8

# learning a model for train pairs
2.000	
1.746	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.563	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.477	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.443	IN  DEF: ^.layer_01.shape.color=green
1.408	IN  DEF: ^.layer_0.shape.color=yellow
1.391	OUT DEF: ^.size=(?,?)
1.314	OUT DEF: ^.size.i=^.size.i
1.237	OUT DEF: ^.size.j=3
1.220	OUT DEF: ^.layer_0.pos=(?,?)
1.183	OUT DEF: ^.layer_0.pos.i=^.layer_01.shape.size.i - ^.layer_0.shape.size.i
1.146	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.i - ^.layer_0.shape.size.i
1.129	OUT DEF: ^.layer_0.shape.size=(?,?)
1.092	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i + ^.layer_01.pos.i
1.061	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j + ^.layer_01.pos.i
1.049	IN  DEF: ^.color=black
1.040	IN  DEF: ^.size=(?,?)
0.985	IN  DEF: ^.size.j=6
0.944	IN  DEF: ^.size.i=3
0.935	IN  DEF: ^.layer_0.pos=(?,?)
0.906	IN  DEF: ^.layer_0.pos.j=(0)
0.896	IN  DEF: ^.layer_0.shape.size=(?,?)
0.887	IN  DEF: ^.layer_01.pos=(?,?)
0.878	IN  DEF: ^.layer_01.shape.size=(?,?)
0.876	IN  DEF: ^.layer_01.pos.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,3) and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i + ^.layer_01.pos.i,^.layer_0.shape.size.j + ^.layer_01.pos.i) and color ? and mask ? at (^.layer_01.shape.size.i - ^.layer_0.shape.size.i,^.layer_01.shape.size.i - ^.layer_0.shape.size.i)
WHERE (Mi)
a background with size (3,6) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,(0))
  _01: a rectangle with size (?,?) and color green and mask ? at (?,3)

DL input  with Mi: L = 79.4 + 2927.3 = 3006.8
DL output with Mo: L = 99.1 + 1417.0 = 1516.1
DL input+output M: L = 178.6 + 4344.4 = 4522.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color green and mask xx|x. at (0,3)
diff: 
delta: (2,5)=3 
   (55.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask xx|x. at (0,0)
diff: 
delta: (2,2)=6 
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color green and mask xx|x. at (0,3)
diff: 
delta: (2,5)=3 
! 5 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,3)
diff: 
delta: (0,2)=4  (2,2)=4 
   (69.7 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,1) and color black and mask Full at (1,1)
diff: 
delta: (1,2)=0 
   (32.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,3)
diff: 
delta: (0,2)=4  (2,2)=4 
! 8 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _01: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,3)
diff: 
delta:
   (51.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|xxx|xxx at (0,0)
diff: 
delta:
   (18.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _01: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
diff: 
delta: (1,5)=3  (2,0)=4 
   (57.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,0)
diff: 
delta: (1,2)=6  (2,0)=6 
   (42.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
diff: 
delta: (1,5)=3  (2,0)=4 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,5)
diff:   ^.layer_01.pos.j
delta: (0,3)=3  (2,0)=4 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
diff: 
delta: (0,0)=4  (0,1)=4  (1,5)=3 
! 4 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,3)
diff: 
delta: (0,4)=3  (2,2)=4 
   (57.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .x.|x..|xxx at (0,0)
diff: 
delta:
   (18.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,3)
diff: 
delta: (0,4)=3  (2,2)=4 
! 9 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .xx|x..|.x. at (0,0)
  _01: a rectangle with size (3,2) and color green and mask x.|xx|x. at (0,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.x.|x.. at (0,0)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|x.. at (0,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|x.. at (0,3)
diff: 
delta: (0,2)=4  (1,1)=4 
! 7 wrong pixels (generated / expected)

TEST dae9d2b5.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 1417.0 bits (1417.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-53] Checking task db3e9e38.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2063.7 = 2072.7
DL output with Mo: L = 9.0 + 7294.1 = 7303.0
DL input+output M: L = 17.9 + 9357.8 = 9375.7

# learning a model for train pairs
2.000	
1.449	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.187	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.992	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.825	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.778	OUT DEF: ^.size=^.size
0.748	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.722	OUT DEF: ^.layer_00=^.layer_0
0.707	IN  DEF: ^.color=black
0.694	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.650	IN  DEF: ^.layer_0.shape.color=orange
0.627	IN  DEF: ^.layer_0.shape.mask=Full
0.615	OUT DEF: ^.layer_0.shape.color=cyan
0.602	OUT DEF: ^.layer_011.shape.color=cyan
0.592	IN  DEF: ^.size=(?,?)
0.581	IN  DEF: ^.layer_0.pos=(?,?)
0.544	IN  DEF: ^.layer_0.pos.i=(0)
0.533	IN  DEF: ^.layer_0.shape.size=(?,?)
0.510	IN  DEF: ^.layer_0.shape.size.j=1
0.504	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.497	OUT DEF: ^.layer_01.shape.mask=^.layer_0.shape.mask
0.491	OUT DEF: ^.layer_011.shape.mask=^.layer_0.shape.mask
0.486	OUT DEF: ^.color=black
0.483	OUT DEF: ^.layer_0.pos=(?,?)
0.473	OUT DEF: ^.layer_0.pos.i=(0)
0.463	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - ^.layer_0.shape.size.j
0.460	OUT DEF: ^.layer_0.shape.size=(?,?)
0.444	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i - 1
0.430	OUT DEF: ^.layer_0.shape.size.j=3
0.427	OUT DEF: ^.layer_01.pos=(?,?)
0.416	OUT DEF: ^.layer_01.pos.i=(0)
0.406	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j - 2
0.403	OUT DEF: ^.layer_01.shape.size=(?,?)
0.384	OUT DEF: ^.layer_01.shape.size.j=5
0.372	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.i - 2
0.369	OUT DEF: ^.layer_011.pos=(?,?)
0.359	OUT DEF: ^.layer_011.pos.i=(0)
0.356	OUT DEF: ^.layer_011.shape.size=(?,?)
0.348	OUT DEF: ^.layer_011.shape.size.i=^.size.i - ^.layer_0.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (^.layer_0.shape.size.i - 1,3) and color cyan and mask ^.layer_0.shape.mask at ((0),^.layer_0.pos.j - ^.layer_0.shape.size.j)
  _01: a rectangle with size (^.layer_0.shape.size.i - 2,5) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ((0),^.layer_0.pos.j - 2)
  _011: a rectangle with size (^.size.i - ^.layer_0.shape.size.i,?) and color cyan and mask ^.layer_0.shape.mask at ((0),?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,1) and color orange and mask Full at ((0),?)

DL input  with Mi: L = 40.8 + 529.0 = 569.8
DL output with Mo: L = 146.6 + 387.7 = 534.4
DL input+output M: L = 187.4 + 916.7 = 1104.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (0,3)
diff: 
delta:
   (25.4 bits)
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (4,1) and color orange and mask Full at (0,3)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,2)
  _01: a rectangle with size (2,5) and color orange and mask Full at (0,1)
  _011: a rectangle with size (1,7) and color cyan and mask Full at (0,0)
diff: 
delta:
   (12.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (0,3)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN db3e9e38.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,1) and color orange and mask Full at (0,2)
diff: 
delta:
   (27.5 bits)
data: a background with size (7,8) and color black and layers
  _00: a rectangle with size (5,1) and color orange and mask Full at (0,2)
  _0: a rectangle with size (4,3) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (3,5) and color orange and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,5)
diff: 
delta: (0,6)=7#
   (26.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,1) and color orange and mask Full at (0,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN db3e9e38.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,1) and color orange and mask Full at (0,5)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TEST db3e9e38.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.7 sec (5.7 sec/task)
bits-train-error = 387.7 bits (387.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-52] Checking task db93a21d.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 31892.3 = 31901.2
DL output with Mo: L = 9.0 + 142310.5 = 142319.4
DL input+output M: L = 17.9 + 174202.7 = 174220.7

# learning a model for train pairs
2.000	
1.443	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.100	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.877	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.725	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.585	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.488	OUT OBJECT at ^.layer_010: ^.layer_0.shape at ?
0.428	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_0.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 6952.0 = 7000.0
DL output with Mo: L = 94.0 + 29635.6 = 29729.6
DL input+output M: L = 142.0 + 36587.6 = 36729.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (0,6)
  _01: a rectangle with size (2,2) and color brown and mask Full at (7,1)
diff: 
delta:
   (75.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (6,0)
  _010: a rectangle with size (2,2) and color brown and mask Full at (0,6)
  _01: a rectangle with size (3,4) and color green and mask Full at (0,5)
  _011: a rectangle with size (2,2) and color brown and mask Full at (7,1)
  _0111: a rectangle with size (7,2) and color blue and mask Full at (3,6)
diff: 
delta:
   (154.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (0,6)
  _01: a rectangle with size (2,2) and color brown and mask Full at (7,1)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN db93a21d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (2,2) and color brown and mask Full at (6,3)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
   (169.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (12,13) and color green and mask ....xxxxxxxx.|....xxxxxxxx.|....xx....xx.|....xx....xx.|....xx....xx.|xxxxxx....xx.|x..xxxxxxxxx.|x..xxxxxxxxx.|xxxx......xxx|..........x..|..........x..|..........xxx at (0,2)
  _010: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (7,4) and color blue and mask Full at (8,8)
  _011: a rectangle with size (6,2) and color blue and mask Full at (9,3)
  _0111: a rectangle with size (3,2) and color blue and mask Full at (12,13)
diff: 
delta: (6,3)=9# (6,4)=9# (7,3)=9# (7,4)=9# (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
   (493.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (2,2) and color brown and mask Full at (6,3)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color brown and mask Full at (2,8)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
! size mismatch, 10x10 instead of 15x15

TRAIN db93a21d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (4,4) and color brown and mask Full at (6,15)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
   (182.4 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (16,17) and color green and mask ..........xxxxxxx|..........xxxxxxx|..........xx....x|..........xx....x|..........xx....x|xxxxxxxxxxxx....x|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxxxxxxxxxxx.....|xxxxxxxxxxxx..... at (4,3)
  _010: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (8,4) and color blue and mask Full at (12,15)
  _011: a rectangle with size (14,2) and color blue and mask Full at (6,2)
  _0111: a rectangle with size (4,4) and color brown and mask Full at (6,15)
diff: 
delta: (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (3,1)=3  (3,2)=9# (3,3)=9# (3,4)=3  (4,1)=3  (4,2)=9# (4,3)=9# (4,4)=3  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3 
   (798.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (4,4) and color brown and mask Full at (6,15)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (6,15)
  _01: a rectangle with size (6,6) and color brown and mask Full at (12,6)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (4,4) and color brown and mask Full at (8,2)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
   (267.7 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (16,4) and color blue and mask xxxx|xxxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx at (4,7)
  _010: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (12,9) and color green and mask Full at (6,11)
  _011: a rectangle with size (8,8) and color green and mask Full at (6,0)
  _0111: a rectangle with size (6,4) and color blue and mask Full at (14,2)
diff: 
delta: (0,5)=3  (0,6)=3  (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (0,11)=3  (0,12)=3  (1,5)=3  (1,6)=3  (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9# (1,11)=3  (1,12)=3  (2,5)=3  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,10)=3  (2,11)=3  (2,12)=3  (3,5)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (8,2)=9# (8,3)=9# (8,4)=9# (8,5)=9# (9,2)=9# (9,3)=9# (9,4)=9# (9,5)=9# (10,2)=9# (10,3)=9# (10,4)=9# (10,5)=9# (11,2)=9# (11,3)=9# (11,4)=9# (11,5)=9# (18,14)=1  (18,15)=1  (18,16)=1  (18,17)=1  (18,18)=1  (18,19)=1  (19,14)=1  (19,15)=1  (19,16)=1  (19,17)=1  (19,18)=1  (19,19)=1 
   (1516.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (4,4) and color brown and mask Full at (8,2)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (8,2)
  _01: a rectangle with size (6,6) and color brown and mask Full at (9,14)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (16,21)
  _01: a rectangle with size (4,4) and color brown and mask Full at (2,16)
diff: 
delta: (7,9)=9# (7,10)=9# (7,11)=9# (7,12)=9# (8,9)=9# (8,10)=9# (8,11)=9# (8,12)=9# (9,9)=9# (9,10)=9# (9,11)=9# (9,12)=9# (10,9)=9# (10,10)=9# (10,11)=9# (10,12)=9# (22,4)=9# (22,5)=9# (23,4)=9# (23,5)=9#
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,16)
  _01: a rectangle with size (6,6) and color brown and mask Full at (16,21)
diff: 
delta: (7,9)=9# (7,10)=9# (7,11)=9# (7,12)=9# (8,9)=9# (8,10)=9# (8,11)=9# (8,12)=9# (9,9)=9# (9,10)=9# (9,11)=9# (9,12)=9# (10,9)=9# (10,10)=9# (10,11)=9# (10,12)=9# (22,4)=9# (22,5)=9# (23,4)=9# (23,5)=9#
! size mismatch, 10x10 instead of 30x30

TEST db93a21d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 29635.6 bits (29635.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-51] Checking task dbc1a6ce.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8113.3 = 8122.3
DL output with Mo: L = 9.0 + 20983.2 = 20992.1
DL input+output M: L = 17.9 + 29096.5 = 29114.4

# learning a model for train pairs
2.000	
1.702	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.589	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.553	OUT DEF: ^.size=^.size
1.524	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.506	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.488	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.469	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.452	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.437	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
1.420	OUT OBJECT at ^.layer_011111: ^.layer_0.shape at ?
1.404	OUT OBJECT at ^.layer_0111111: ^.layer_0.shape at ?
1.392	OUT OBJECT at ^.layer_01111111: ^.layer_0.shape at ?
1.383	OUT OBJECT at ^.layer_011111111: ^.layer_0.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_0.shape at ?
  _011111: ^.layer_0.shape at ?
  _0111111: ^.layer_0.shape at ?
  _01111111: ^.layer_0.shape at ?
  _011111111: ^.layer_0.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?

DL input  with Mi: L = 46.8 + 7633.5 = 7680.4
DL output with Mo: L = 130.1 + 9043.0 = 9173.1
DL input+output M: L = 176.9 + 16676.6 = 16853.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (4,1)
diff: 
delta: (4,7)=1  (6,1)=1  (8,6)=1  (9,3)=1 
   (145.3 bits)
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (8,1) and color cyan and mask Full at (1,3)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (4,2)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,1)
  _01111: a point with color blue at (0,3)
  _011111: a point with color blue at (1,8)
  _0111111: a point with color blue at (6,1)
  _01111111: a point with color blue at (8,6)
  _011111111: a point with color blue at (9,3)
diff: 
delta:
   (163.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (4,1)
diff: 
delta: (4,7)=1  (6,1)=1  (8,6)=1  (9,3)=1 
! 24 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (0,4)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,4)
diff: 
delta: (2,8)=1  (3,2)=1  (7,0)=1  (7,7)=1  (9,6)=1 
   (167.5 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask .xxxx|x....|.xxx. at (0,4)
  _01: a rectangle with size (1,6) and color cyan and mask Full at (7,1)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,4)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,9)
  _01111: a point with color blue at (2,8)
  _011111: a point with color blue at (3,2)
  _0111111: a point with color blue at (7,0)
  _01111111: a point with color blue at (7,7)
  _011111111: a point with color blue at (9,6)
diff: 
delta:
   (181.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (0,4)
  _01: a point with color blue at (0,9)
  _011: a point with color blue at (2,4)
diff: 
delta: (2,8)=1  (3,2)=1  (7,0)=1  (7,7)=1  (9,6)=1 
! 26 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (0,6)
  _01: a point with color blue at (0,11)
  _011: a point with color blue at (2,10)
diff: 
delta: (4,5)=1  (5,1)=1  (5,9)=1  (6,6)=1  (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
   (270.3 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,9) and color cyan and mask .....xxxx|....x....|....x....|....x...x|....x...x|xxxxxxx.x|.....xxx. at (0,2)
  _01: a rectangle with size (3,5) and color cyan and mask .xxx.|x...x|.xxx. at (9,4)
  _011: a rectangle with size (1,5) and color blue and mask Full at (6,6)
  _0111: a rectangle with size (1,5) and color blue and mask Full at (9,4)
  _01111: a point with color blue at (0,6)
  _011111: a point with color blue at (0,11)
  _0111111: a point with color blue at (2,10)
  _01111111: a point with color blue at (4,5)
  _011111111: a point with color blue at (5,1)
diff: 
delta: (5,9)=1  (7,2)=1  (11,4)=1  (11,8)=1 
   (344.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (0,6)
  _01: a point with color blue at (0,11)
  _011: a point with color blue at (2,10)
diff: 
delta: (4,5)=1  (5,1)=1  (5,9)=1  (6,6)=1  (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
! 46 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,4)
  _011: a point with color blue at (2,4)
diff: 
delta: (2,6)=1  (3,0)=1  (4,5)=1  (5,2)=1  (5,7)=1  (7,0)=1 
   (180.3 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (3,4) and color cyan and mask xx..|..x.|...x at (0,2)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (2,4)
  _01111: a point with color blue at (0,1)
  _011111: a point with color blue at (0,4)
  _0111111: a point with color blue at (3,0)
  _01111111: a point with color blue at (4,5)
  _011111111: a point with color blue at (5,2)
diff: 
delta: (5,7)=1  (7,0)=1 
   (214.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,4)
  _011: a point with color blue at (2,4)
diff: 
delta: (2,6)=1  (3,0)=1  (4,5)=1  (5,2)=1  (5,7)=1  (7,0)=1 
! 23 wrong pixels (generated / expected)

TRAIN dbc1a6ce.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
  _0: a point with color blue at (0,7)
  _01: a point with color blue at (0,10)
  _011: a point with color blue at (0,14)
diff: 
delta: (1,2)=1  (2,10)=1  (3,19)=1  (4,9)=1  (5,1)=1  (6,6)=1  (7,1)=1  (8,10)=1  (9,11)=1  (10,13)=1  (12,9)=1  (14,6)=1  (14,14)=1  (16,1)=1  (18,1)=1  (18,3)=1 
! 79 wrong pixels (generated / expected)

TEST dbc1a6ce.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.6 sec (23.6 sec/task)
bits-train-error = 9043.0 bits (9043.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-50] Checking task dc0a314f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 108892.5 = 108901.5
DL output with Mo: L = 9.0 + 8198.6 = 8207.6
DL input+output M: L = 17.9 + 117091.1 = 117109.0

# learning a model for train pairs
2.000	
1.679	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.456	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.345	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.274	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.219	OUT DEF: ^.size=^.layer_0.shape.size
1.171	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
1.136	IN  OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
1.107	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.092	OUT OBJECT at ^.layer_010: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a point with color ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _00: a rectangle with size ? and color ? and mask ? at ?
  _001: a rectangle with size ? and color ? and mask ? at ?
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 103.8 + 60194.8 = 60298.6
DL output with Mo: L = 61.5 + 4358.5 = 4420.0
DL input+output M: L = 165.3 + 64553.3 = 64718.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color red and layers
  _00: a rectangle with size (6,4) and color cyan and mask ..xx|..xx|xxxx|xxxx|..xx|..xx at (5,5)
  _001: a rectangle with size (16,3) and color grey and mask Full at (0,4)
  _0: a rectangle with size (5,5) and color green and mask Full at (5,9)
  _01: a rectangle with size (14,4) and color pink and mask Full at (1,11)
  _011: a rectangle with size (8,3) and color grey and mask Full at (4,0)
diff: 
delta: (0,1)=1  (0,4)=6  (0,7)=6  (0,8)=6  (0,9)=5# (0,10)=5# (0,11)=6  (0,14)=1  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,9)=5# (1,10)=6  (1,11)=5# (1,12)=1  (1,15)=1  (2,1)=6  (2,2)=1  (2,3)=6  (2,9)=5# (2,10)=5# (2,11)=5# (2,13)=1  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,14)=1  (4,0)=6  (4,3)=6  (4,4)=5# (4,5)=8  (4,7)=7# (4,8)=7# (4,9)=5# (4,10)=8  (4,11)=5# (4,13)=5# (4,14)=5# (4,15)=6  (5,1)=6  (5,4)=8  (5,5)=8  (5,14)=6  (5,15)=5# (6,14)=5# (6,15)=5# (7,0)=6  (7,1)=2  (7,2)=2  (7,4)=7# (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,4)=7# (8,14)=2  (8,15)=6  (9,14)=5# (9,15)=5# (10,1)=6  (10,4)=8  (10,5)=8  (10,9)=5# (10,10)=8  (10,11)=8  (10,12)=2  (10,13)=5# (10,14)=6  (10,15)=5# (11,0)=6  (11,3)=6  (11,4)=5# (11,5)=8  (11,7)=7# (11,8)=7# (11,9)=5# (11,10)=8  (11,11)=5# (11,13)=5# (11,14)=5# (11,15)=6  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,14)=1  (13,1)=6  (13,2)=1  (13,3)=6  (13,9)=5# (13,10)=5# (13,11)=5# (13,13)=1  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,9)=5# (14,10)=6  (14,11)=5# (14,12)=1  (14,15)=1  (15,1)=1  (15,4)=6  (15,7)=6  (15,8)=6  (15,9)=5# (15,10)=5# (15,11)=6  (15,14)=1 
   (2653.5 bits)
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,2) and color red and mask x.|x.|xx|xx|x. at (0,3)
  _010: a point with color cyan at (0,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,0)
diff: 
delta: (0,2)=8  (2,2)=7# (3,2)=7#
   (140.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color red and layers
  _00: a rectangle with size (5,5) and color green and mask Full at (5,9)
  _001: a rectangle with size (6,4) and color cyan and mask ..xx|..xx|xxxx|xxxx|..xx|..xx at (5,5)
  _0: a rectangle with size (16,3) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color pink and mask Full at (1,11)
  _011: a rectangle with size (8,3) and color grey and mask Full at (4,0)
diff: 
delta: (0,1)=1  (0,4)=6  (0,7)=6  (0,8)=6  (0,9)=5# (0,10)=5# (0,11)=6  (0,14)=1  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,9)=5# (1,10)=6  (1,11)=5# (1,12)=1  (1,15)=1  (2,1)=6  (2,2)=1  (2,3)=6  (2,9)=5# (2,10)=5# (2,11)=5# (2,13)=1  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,14)=1  (4,0)=6  (4,3)=6  (4,4)=5# (4,5)=8  (4,7)=7# (4,8)=7# (4,9)=5# (4,10)=8  (4,11)=5# (4,13)=5# (4,14)=5# (4,15)=6  (5,1)=6  (5,4)=8  (5,5)=8  (5,14)=6  (5,15)=5# (6,14)=5# (6,15)=5# (7,0)=6  (7,1)=2  (7,2)=2  (7,4)=7# (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,4)=7# (8,14)=2  (8,15)=6  (9,14)=5# (9,15)=5# (10,1)=6  (10,4)=8  (10,5)=8  (10,9)=5# (10,10)=8  (10,11)=8  (10,12)=2  (10,13)=5# (10,14)=6  (10,15)=5# (11,0)=6  (11,3)=6  (11,4)=5# (11,5)=8  (11,7)=7# (11,8)=7# (11,9)=5# (11,10)=8  (11,11)=5# (11,13)=5# (11,14)=5# (11,15)=6  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,14)=1  (13,1)=6  (13,2)=1  (13,3)=6  (13,9)=5# (13,10)=5# (13,11)=5# (13,13)=1  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,9)=5# (14,10)=6  (14,11)=5# (14,12)=1  (14,15)=1  (15,1)=1  (15,4)=6  (15,7)=6  (15,8)=6  (15,9)=5# (15,10)=5# (15,11)=6  (15,14)=1 
! size mismatch, 16x3 instead of 5x5
>> Trial 2
data: a background with size (16,16) and color red and layers
  _00: a rectangle with size (6,4) and color cyan and mask ..xx|..xx|xxxx|xxxx|..xx|..xx at (5,5)
  _001: a rectangle with size (16,3) and color grey and mask Full at (0,4)
  _0: a rectangle with size (5,5) and color green and mask Full at (5,9)
  _01: a rectangle with size (14,4) and color pink and mask Full at (1,11)
  _011: a rectangle with size (8,3) and color grey and mask Full at (4,0)
diff: 
delta: (0,1)=1  (0,4)=6  (0,7)=6  (0,8)=6  (0,9)=5# (0,10)=5# (0,11)=6  (0,14)=1  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,9)=5# (1,10)=6  (1,11)=5# (1,12)=1  (1,15)=1  (2,1)=6  (2,2)=1  (2,3)=6  (2,9)=5# (2,10)=5# (2,11)=5# (2,13)=1  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,14)=1  (4,0)=6  (4,3)=6  (4,4)=5# (4,5)=8  (4,7)=7# (4,8)=7# (4,9)=5# (4,10)=8  (4,11)=5# (4,13)=5# (4,14)=5# (4,15)=6  (5,1)=6  (5,4)=8  (5,5)=8  (5,14)=6  (5,15)=5# (6,14)=5# (6,15)=5# (7,0)=6  (7,1)=2  (7,2)=2  (7,4)=7# (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,4)=7# (8,14)=2  (8,15)=6  (9,14)=5# (9,15)=5# (10,1)=6  (10,4)=8  (10,5)=8  (10,9)=5# (10,10)=8  (10,11)=8  (10,12)=2  (10,13)=5# (10,14)=6  (10,15)=5# (11,0)=6  (11,3)=6  (11,4)=5# (11,5)=8  (11,7)=7# (11,8)=7# (11,9)=5# (11,10)=8  (11,11)=5# (11,13)=5# (11,14)=5# (11,15)=6  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,14)=1  (13,1)=6  (13,2)=1  (13,3)=6  (13,9)=5# (13,10)=5# (13,11)=5# (13,13)=1  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,9)=5# (14,10)=6  (14,11)=5# (14,12)=1  (14,15)=1  (15,1)=1  (15,4)=6  (15,7)=6  (15,8)=6  (15,9)=5# (15,10)=5# (15,11)=6  (15,14)=1 
! 25 wrong pixels (generated / expected)

TRAIN dc0a314f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color cyan and layers
  _00: a rectangle with size (16,16) and color orange and mask ..........xx....|.........x.x....|........x.x.....|.........x......|xx......x.x...xx|x.x.x.xxxx.x.x.x|.x.x.x....x.x.x.|..x.xx....xx.x..|..x.xx....xx.x..|.x.x.x....x.x.x.|x.x.x.xxxx.x.x.x|xx...x.xx.x...xx|......x..x......|.....x.xx.x.....|....x.x..x.x....|....xx....xx.... at (0,0)
  _001: a rectangle with size (16,16) and color red and mask ........xxxx....|........xx.x....|........xxxxx...|..x......xxx.x..|xxx.....x.xxxxxx|x.xxxxxxxxxxxx.x|xxxx.xx..xx.xxxx|xxx.xx.xx.xx.xxx|xxx.xx.xx.xx.xxx|xxxx.xx..xx.xxxx|x.xxxxxxxxxxxx.x|xxxxxx.xx.xxxxxx|..x.xxx..xxx.x..|...xxxxxxxxxx...|....x.xxxx.x....|....xxxxxxxx.... at (0,0)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,3)
  _01: a rectangle with size (4,16) and color brown and mask Full at (12,0)
  _011: a rectangle with size (4,4) and color brown and mask .xx.|xx.x|x.xx|.xx. at (0,12)
diff: 
delta: (0,1)=9# (0,2)=9# (1,0)=9# (1,2)=9# (1,10)=1  (2,0)=9# (2,1)=9# (3,1)=9# (3,8)=1  (3,12)=9# (5,1)=1  (5,14)=1  (7,3)=1  (7,12)=1  (8,3)=1  (8,12)=1  (10,1)=1  (10,14)=1  (12,0)=8  (12,3)=9# (12,7)=1  (12,8)=1  (12,12)=9# (12,15)=8  (13,2)=8  (13,13)=8  (14,1)=8  (14,5)=1  (14,10)=1  (14,14)=8  (15,0)=8  (15,3)=8  (15,12)=8  (15,15)=8 
   (1444.8 bits)
data: a background with size (5,5) and color orange and layers
  _0: a rectangle with size (5,5) and color red and mask ...xx|....x|xx.x.|.xx..|xx... at (0,0)
  _010: a point with color cyan at (0,0)
  _01: a rectangle with size (3,1) and color brown and mask Full at (1,0)
diff: 
delta: (1,2)=1  (3,4)=1  (4,3)=8 
   (157.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color cyan and layers
  _00: a rectangle with size (16,16) and color orange and mask ..........xx....|.........x.x....|........x.x.....|.........x......|xx......x.x...xx|x.x.x.xxxx.x.x.x|.x.x.x....x.x.x.|..x.xx....xx.x..|..x.xx....xx.x..|.x.x.x....x.x.x.|x.x.x.xxxx.x.x.x|xx...x.xx.x...xx|......x..x......|.....x.xx.x.....|....x.x..x.x....|....xx....xx.... at (0,0)
  _001: a rectangle with size (16,16) and color red and mask ........xxxx....|........xx.x....|........xxxxx...|..x......xxx.x..|xxx.....x.xxxxxx|x.xxxxxxxxxxxx.x|xxxx.xx..xx.xxxx|xxx.xx.xx.xx.xxx|xxx.xx.xx.xx.xxx|xxxx.xx..xx.xxxx|x.xxxxxxxxxxxx.x|xxxxxx.xx.xxxxxx|..x.xxx..xxx.x..|...xxxxxxxxxx...|....x.xxxx.x....|....xxxxxxxx.... at (0,0)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,3)
  _01: a rectangle with size (4,16) and color brown and mask Full at (12,0)
  _011: a rectangle with size (4,4) and color brown and mask .xx.|xx.x|x.xx|.xx. at (0,12)
diff: 
delta: (0,1)=9# (0,2)=9# (1,0)=9# (1,2)=9# (1,10)=1  (2,0)=9# (2,1)=9# (3,1)=9# (3,8)=1  (3,12)=9# (5,1)=1  (5,14)=1  (7,3)=1  (7,12)=1  (8,3)=1  (8,12)=1  (10,1)=1  (10,14)=1  (12,0)=8  (12,3)=9# (12,7)=1  (12,8)=1  (12,12)=9# (12,15)=8  (13,2)=8  (13,13)=8  (14,1)=8  (14,5)=1  (14,10)=1  (14,14)=8  (15,0)=8  (15,3)=8  (15,12)=8  (15,15)=8 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color cyan and layers
  _00: a rectangle with size (16,16) and color orange and mask ..........xx....|.........x.x....|........x.x.....|.........x......|xx......x.x...xx|x.x.x.xxxx.x.x.x|.x.x.x....x.x.x.|..x.xx....xx.x..|..x.xx....xx.x..|.x.x.x....x.x.x.|x.x.x.xxxx.x.x.x|xx...x.xx.x...xx|......x..x......|.....x.xx.x.....|....x.x..x.x....|....xx....xx.... at (0,0)
  _001: a rectangle with size (16,16) and color red and mask ........xxxx....|........xx.x....|........xxxxx...|..x......xxx.x..|xxx.....x.xxxxxx|x.xxxxxxxxxxxx.x|xxxx.xx..xx.xxxx|xxx.xx.xx.xx.xxx|xxx.xx.xx.xx.xxx|xxxx.xx..xx.xxxx|x.xxxxxxxxxxxx.x|xxxxxx.xx.xxxxxx|..x.xxx..xxx.x..|...xxxxxxxxxx...|....x.xxxx.x....|....xxxxxxxx.... at (0,0)
  _0: a rectangle with size (4,16) and color brown and mask Full at (12,0)
  _01: a rectangle with size (5,5) and color green and mask Full at (0,3)
  _011: a rectangle with size (4,4) and color brown and mask .xx.|xx.x|x.xx|.xx. at (0,12)
diff: 
delta: (0,1)=9# (0,2)=9# (1,0)=9# (1,2)=9# (1,10)=1  (2,0)=9# (2,1)=9# (3,1)=9# (3,8)=1  (3,12)=9# (5,1)=1  (5,14)=1  (7,3)=1  (7,12)=1  (8,3)=1  (8,12)=1  (10,1)=1  (10,14)=1  (12,0)=8  (12,3)=9# (12,7)=1  (12,8)=1  (12,12)=9# (12,15)=8  (13,2)=8  (13,13)=8  (14,1)=8  (14,5)=1  (14,10)=1  (14,14)=8  (15,0)=8  (15,3)=8  (15,12)=8  (15,15)=8 
! size mismatch, 4x16 instead of 5x5

TRAIN dc0a314f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color grey and layers
  _00: a rectangle with size (16,16) and color brown and mask ....xxx.........|....x...........|....x...........|.....x..........|xxx.x.x......xxx|x..x..xxxx..x..x|x...xx.xx.xx...x|.x..xxx..xxx..x.|.x..xxx..xxx..x.|x...xx.xx.xx...x|x..x..xxxx..x..x|xxx.x.xxxx.x.xxx|.....x....x.....|....x......x....|....x..xx..x....|....xxx..xxx.... at (0,0)
  _001: a rectangle with size (6,14) and color grey and mask Full at (5,1)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
  _01: a rectangle with size (14,3) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (14,3) and color yellow and mask Full at (1,12)
diff: 
delta: (0,0)=2  (0,1)=2  (0,3)=2  (0,12)=2  (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,6)=2  (1,14)=5# (1,15)=2  (2,2)=5# (2,5)=2  (2,13)=5# (3,0)=2  (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (6,1)=2  (6,6)=7# (6,9)=7# (6,14)=2  (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (9,1)=2  (9,6)=7# (9,9)=7# (9,14)=2  (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,7)=2  (12,8)=2  (12,15)=2  (13,2)=5# (13,5)=2  (13,10)=2  (13,13)=5# (14,0)=2  (14,1)=5# (14,6)=2  (14,9)=2  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,3)=2  (15,12)=2  (15,14)=2  (15,15)=2 
   (1921.1 bits)
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color brown and mask ..xxx|xx..x|....x|...x.|xxx.x at (0,0)
  _010: a point with color red at (1,2)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta: (2,3)=2  (4,3)=6 
   (138.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  _00: a rectangle with size (16,16) and color brown and mask ....xxx.........|....x...........|....x...........|.....x..........|xxx.x.x......xxx|x..x..xxxx..x..x|x...xx.xx.xx...x|.x..xxx..xxx..x.|.x..xxx..xxx..x.|x...xx.xx.xx...x|x..x..xxxx..x..x|xxx.x.xxxx.x.xxx|.....x....x.....|....x......x....|....x..xx..x....|....xxx..xxx.... at (0,0)
  _001: a rectangle with size (5,5) and color green and mask Full at (0,7)
  _0: a rectangle with size (6,14) and color grey and mask Full at (5,1)
  _01: a rectangle with size (14,3) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (14,3) and color yellow and mask Full at (1,12)
diff: 
delta: (0,0)=2  (0,1)=2  (0,3)=2  (0,12)=2  (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,6)=2  (1,14)=5# (1,15)=2  (2,2)=5# (2,5)=2  (2,13)=5# (3,0)=2  (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (6,1)=2  (6,6)=7# (6,9)=7# (6,14)=2  (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (9,1)=2  (9,6)=7# (9,9)=7# (9,14)=2  (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,7)=2  (12,8)=2  (12,15)=2  (13,2)=5# (13,5)=2  (13,10)=2  (13,13)=5# (14,0)=2  (14,1)=5# (14,6)=2  (14,9)=2  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,3)=2  (15,12)=2  (15,14)=2  (15,15)=2 
! size mismatch, 6x14 instead of 5x5
>> Trial 2
data: a background with size (16,16) and color grey and layers
  _00: a rectangle with size (16,16) and color brown and mask ....xxx.........|....x...........|....x...........|.....x..........|xxx.x.x......xxx|x..x..xxxx..x..x|x...xx.xx.xx...x|.x..xxx..xxx..x.|.x..xxx..xxx..x.|x...xx.xx.xx...x|x..x..xxxx..x..x|xxx.x.xxxx.x.xxx|.....x....x.....|....x......x....|....x..xx..x....|....xxx..xxx.... at (0,0)
  _001: a rectangle with size (6,14) and color grey and mask Full at (5,1)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
  _01: a rectangle with size (14,3) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (14,3) and color yellow and mask Full at (1,12)
diff: 
delta: (0,0)=2  (0,1)=2  (0,3)=2  (0,12)=2  (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,6)=2  (1,14)=5# (1,15)=2  (2,2)=5# (2,5)=2  (2,13)=5# (3,0)=2  (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (6,1)=2  (6,6)=7# (6,9)=7# (6,14)=2  (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (9,1)=2  (9,6)=7# (9,9)=7# (9,14)=2  (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,7)=2  (12,8)=2  (12,15)=2  (13,2)=5# (13,5)=2  (13,10)=2  (13,13)=5# (14,0)=2  (14,1)=5# (14,6)=2  (14,9)=2  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,3)=2  (15,12)=2  (15,14)=2  (15,15)=2 
! 25 wrong pixels (generated / expected)

TRAIN dc0a314f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color red and layers
  _00: a rectangle with size (16,16) and color grey and mask ...x.xxxxxx.x...|...xxx....xxx...|..x.x......x.x..|xx.xx......xx.xx|.xxx.........xx.|xx............xx|x..............x|x..............x|x..............x|x..............x|xx............xx|.xxx........xxx.|xx.xx......xx.xx|..x.x......x.x..|...xxx....xxx...|...x.xxxxxx.x... at (0,0)
  _001: a rectangle with size (5,5) and color green and mask Full at (4,8)
  _0: a rectangle with size (8,7) and color brown and mask ...xxxx|..xxxxx|.x.xxxx|xxxxxxx|xxxxxxx|.x.xx.x|..xxxx.|...xx.. at (4,4)
  _01: a rectangle with size (3,8) and color pink and mask Full at (9,4)
  _011: a rectangle with size (12,4) and color grey and mask Full at (2,6)
diff: 
delta: (0,0)=5# (0,1)=5# (0,14)=5# (0,15)=5# (1,0)=5# (1,15)=5# (2,3)=8  (2,6)=2  (2,9)=2  (2,12)=8  (3,2)=8  (3,13)=8  (4,4)=4  (4,5)=6  (4,6)=6  (5,4)=6  (5,5)=6  (6,3)=5# (6,4)=6  (6,6)=6  (7,2)=5# (7,3)=5# (7,13)=5# (8,2)=5# (8,3)=5# (8,13)=5# (9,3)=5# (9,12)=5# (11,4)=4  (11,11)=4  (12,2)=8  (12,13)=8  (13,3)=8  (13,6)=2  (13,9)=2  (13,12)=8  (14,0)=5# (14,15)=5# (15,0)=5# (15,1)=5# (15,14)=5# (15,15)=5#
! size mismatch, 8x7 instead of 5x5

TEST dc0a314f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.3 sec (24.3 sec/task)
bits-train-error = 4358.5 bits (4358.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-49] Checking task dc1df850.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2031.3 = 2040.2
DL output with Mo: L = 9.0 + 7407.1 = 7416.1
DL input+output M: L = 17.9 + 9438.4 = 9456.3

# learning a model for train pairs
2.000	
1.491	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.426	OUT DEF: ^.size=^.size
1.362	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.294	IN  DEF: ^.layer_0.shape.color=red
1.258	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.221	OUT DEF: ^.layer_00=^.layer_0
1.199	IN  DEF: ^.color=black
1.180	OUT DEF: ^.layer_0.shape.color=blue
1.163	IN  DEF: ^.size=(?,?)
1.146	IN  DEF: ^.layer_0.pos=(?,?)
1.139	OUT DEF: ^.color=black
1.135	OUT DEF: ^.layer_0.pos=(?,?)
1.121	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i - 1
1.116	OUT DEF: ^.layer_0.shape.size=(?,?)
1.094	OUT DEF: ^.layer_0.shape.size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (3,?) and color blue and mask ? at (^.layer_0.pos.i - 1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)

DL input  with Mi: L = 31.0 + 1624.9 = 1655.9
DL output with Mo: L = 52.7 + 2043.6 = 2096.3
DL input+output M: L = 83.7 + 3668.5 = 3752.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta: (0,0)=2  (3,1)=6 
   (58.2 bits)
data: a background with size (5,5) and color black and layers
  _00: a point with color red at (1,3)
  _0: a rectangle with size (3,5) and color blue and mask .xxxx|xxxxx|..xxx at (0,0)
diff: 
delta: (0,0)=2  (3,1)=6 
   (65.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta: (0,0)=2  (3,1)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (3,1)
diff:   ^.layer_0.shape.color
delta: (0,0)=2  (1,3)=2 
! 18 wrong pixels (generated / expected)

TRAIN dc1df850.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a point with color red at (6,2)
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8 
   (84.0 bits)
data: a background with size (8,8) and color black and layers
  _00: a point with color red at (6,2)
  _0: a rectangle with size (3,3) and color blue and mask Full at (5,1)
diff: 
delta: (0,6)=1  (0,7)=2  (1,6)=1  (1,7)=1  (2,3)=3  (4,6)=8 
   (127.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a point with color red at (6,2)
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a point with color green at (2,3)
diff:   ^.layer_0.shape.color
delta: (0,7)=2  (4,6)=8  (6,2)=2 
! 20 wrong pixels (generated / expected)

TRAIN dc1df850.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (20.3 bits)
data: a background with size (4,5) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (3,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (11.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN dc1df850.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (0,8)=7# (3,7)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (3,7)
diff: 
delta: (0,8)=7# (1,2)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (7,5)
diff: 
delta: (0,8)=7# (1,2)=2  (3,7)=2  (5,1)=7# (9,9)=5#
! 35 wrong pixels (generated / expected)

TEST dc1df850.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 2043.6 bits (2043.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-48] Checking task dc433765.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3819.8 = 3828.7
DL output with Mo: L = 9.0 + 3819.8 = 3828.7
DL input+output M: L = 17.9 + 7639.5 = 7657.5

# learning a model for train pairs
2.000	
1.712	OUT DEF: ^.size=^.size
1.628	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.528	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.443	OUT DEF: ^.layer_0.shape.color=green
1.359	OUT DEF: ^.layer_01.shape.color=yellow
1.274	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.110	OUT DEF: ^.layer_01=^.layer_0
1.011	IN  OBJECT at ^.layer_00: a point with color ? at ?
0.926	IN  DEF: ^.layer_00.shape.color=green
0.842	IN  DEF: ^.layer_0.shape.color=yellow
0.815	IN  DEF: ^.color=black
0.787	OUT DEF: ^.color=black
0.764	IN  DEF: ^.size=(?,?)
0.741	OUT DEF: ^.layer_0.pos=(?,?)
0.719	IN  DEF: ^.layer_00.pos=(?,?)
0.696	IN  DEF: ^.layer_0.pos=(?,?)
0.694	OUT DEF: ^.layer_0.shape=^.layer_00.shape

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_00.shape at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color green at (?,?)
  _0: a point with color yellow at (?,?)

DL input  with Mi: L = 49.4 + 2057.9 = 2107.4
DL output with Mo: L = 25.9 + 525.8 = 551.7
DL input+output M: L = 75.4 + 2583.7 = 2659.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _0: a point with color yellow at (2,2)
diff: 
delta:
   (22.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color yellow at (2,2)
diff: 
delta:
   (5.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _0: a point with color yellow at (2,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a point with color yellow at (2,2)
  _0: a point with color green at (0,0)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 3 wrong pixels (generated / expected)

TRAIN dc433765.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,3) and color black and layers
  _00: a point with color green at (1,0)
  _0: a point with color yellow at (1,2)
diff: 
delta:
   (25.6 bits)
data: a background with size (5,3) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color yellow at (1,2)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  _00: a point with color green at (1,0)
  _0: a point with color yellow at (1,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,3) and color black and layers
  _00: a point with color yellow at (1,2)
  _0: a point with color green at (1,0)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a point with color green at (2,1)
  _0: a point with color yellow at (2,4)
diff: 
delta:
   (28.5 bits)
data: a background with size (5,5) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color yellow at (2,4)
diff: 
delta:
   (7.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a point with color green at (2,1)
  _0: a point with color yellow at (2,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _00: a point with color yellow at (2,4)
  _0: a point with color green at (2,1)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color yellow at (4,4)
diff: 
delta:
   (32.4 bits)
data: a background with size (7,7) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color yellow at (4,4)
diff: 
delta:
   (8.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color yellow at (4,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _00: a point with color yellow at (4,4)
  _0: a point with color green at (1,1)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (7,2)
  _0: a point with color yellow at (2,2)
diff: 
delta:
   (36.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (6,2)
  _01: a point with color yellow at (2,2)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (7,2)
  _0: a point with color yellow at (2,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (2,2)
  _0: a point with color green at (7,2)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _00: a point with color green at (2,3)
  _0: a point with color yellow at (8,3)
diff: 
delta:
   (37.6 bits)
data: a background with size (11,11) and color black and layers
  _0: a point with color green at (3,3)
  _01: a point with color yellow at (8,3)
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a point with color green at (2,3)
  _0: a point with color yellow at (8,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a point with color yellow at (8,3)
  _0: a point with color green at (2,3)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,2)
  _0: a point with color yellow at (2,0)
diff: 
delta:
   (22.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color yellow at (2,0)
diff: 
delta:
   (5.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,2)
  _0: a point with color yellow at (2,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a point with color yellow at (2,0)
  _0: a point with color green at (0,2)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN dc433765.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a point with color green at (2,3)
  _0: a point with color yellow at (8,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a point with color yellow at (8,3)
  _0: a point with color green at (2,3)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 4 wrong pixels (generated / expected)

TEST dc433765.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (2,2)
  _0: a point with color yellow at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a point with color yellow at (0,0)
  _0: a point with color green at (2,2)
diff:   ^.layer_0.shape.color  ^.layer_00.shape.color
delta:
! 2 wrong pixels (generated / expected)

TEST dc433765.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 525.8 bits (525.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-47] Checking task ddf7fa4f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 20012.7 = 20021.7
DL output with Mo: L = 9.0 + 20012.7 = 20021.7
DL input+output M: L = 17.9 + 40025.4 = 40043.3

# learning a model for train pairs
2.000	
1.618	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.276	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.055	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.834	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.657	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.521	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.492	OUT DEF: ^.size=^.size
0.472	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.456	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.438	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.420	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.404	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.388	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.382	OUT OBJECT at ^.layer_0111: a point with color ? at ?
0.376	OUT OBJECT at ^.layer_0110: a point with color ? at ?
0.368	OUT OBJECT at ^.layer_01111: a point with color ? at ?
0.362	IN  OBJECT at ^.layer_0110: a point with color ? at ?
0.338	OUT DEF: ^.layer_0110=^.layer_0110
0.332	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.309	OUT DEF: ^.layer_0111=^.layer_0111
0.301	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.278	OUT DEF: ^.layer_01111=^.layer_01111
0.271	OUT DEF: ^.layer_0.shape.color=^.layer_0111.shape.color
0.264	IN  DEF: ^.layer_0.shape.color=grey
0.260	OUT DEF: ^.layer_0.shape.mask=Full
0.254	IN  DEF: ^.layer_01.shape.color=grey
0.250	OUT DEF: ^.layer_01.shape.mask=Full
0.243	IN  DEF: ^.layer_011.shape.color=grey
0.240	OUT DEF: ^.layer_011.shape.mask=Full
0.236	IN  DEF: ^.layer_0.shape.mask=Full
0.233	IN  DEF: ^.layer_01.shape.mask=Full
0.229	IN  DEF: ^.layer_011.shape.mask=Full
0.227	OUT DEF: ^.color=black
0.224	IN  DEF: ^.color=black
0.223	IN  DEF: ^.size=(?,?)
0.210	IN  DEF: ^.size.i=10
0.196	IN  DEF: ^.size.j=10
0.189	OUT DEF: ^.layer_01.shape.color=^.layer_01111.shape.color
0.183	OUT DEF: ^.layer_011.shape.color=^.layer_0110.shape.color
0.181	IN  DEF: ^.layer_0111.pos=(?,?)
0.174	IN  DEF: ^.layer_0111.pos.i=(0)
0.172	IN  DEF: ^.layer_01111.pos=(?,?)
0.165	IN  DEF: ^.layer_01111.pos.i=(0)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0111.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01111.shape.color and mask Full at ^.layer_01.pos
  _0110: ^.layer_0110
  _011: a rectangle with size ^.layer_011.shape.size and color ^.layer_0110.shape.color and mask Full at ^.layer_011.pos
  _0111: ^.layer_0111
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size ? and color grey and mask Full at ?
  _01: a rectangle with size ? and color grey and mask Full at ?
  _0110: a point with color ? at ?
  _011: a rectangle with size ? and color grey and mask Full at ?
  _0111: a point with color ? at ((0),?)
  _01111: a point with color ? at ((0),?)

DL input  with Mi: L = 127.6 + 3095.0 = 3222.5
DL output with Mo: L = 85.0 + 0.0 = 85.0
DL input+output M: L = 212.5 + 3095.0 = 3307.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _01: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0110: a point with color pink at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _0111: a point with color red at (0,2)
  _01111: a point with color cyan at (0,9)
diff: 
delta:
   (104.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full at (4,1)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,7)
  _0110: a point with color pink at (0,5)
  _011: a rectangle with size (4,4) and color pink and mask Full at (2,4)
  _0111: a point with color red at (0,2)
  _01111: a point with color cyan at (0,9)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _01: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0110: a point with color red at (0,2)
  _011: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _0111: a point with color pink at (0,5)
  _01111: a point with color cyan at (0,9)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _01: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0110: a point with color red at (0,2)
  _011: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _0111: a point with color cyan at (0,9)
  _01111: a point with color pink at (0,5)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _01: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0110: a point with color pink at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _0111: a point with color red at (0,2)
  _01111: a point with color cyan at (0,9)
diff: 
delta:
correct output grid

TRAIN ddf7fa4f.json/1: 1 3rd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color yellow at (0,5)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
diff: 
delta:
   (104.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color orange and mask Full at (2,7)
  _0110: a point with color yellow at (0,5)
  _011: a rectangle with size (2,4) and color yellow and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color yellow at (0,5)
  _01111: a point with color orange at (0,8)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color orange at (0,8)
  _01111: a point with color yellow at (0,5)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color yellow at (0,5)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
diff: 
delta:
correct output grid

TRAIN ddf7fa4f.json/2: 1 3rd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color orange at (0,8)
diff: 
delta:
   (100.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color orange and mask Full at (3,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (3,2) and color blue and mask Full at (2,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color orange at (0,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color orange at (0,8)
diff: 
delta:
correct output grid

TRAIN ddf7fa4f.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (2,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (2,8)
  _0110: a point with color green at (0,0)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,0)
  _0111: a point with color pink at (0,4)
  _01111: a point with color brown at (0,8)
diff: 
delta:
correct output grid

TEST ddf7fa4f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 11.1 sec (11.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.56
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-46] Checking task de1cd16c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 136887.6 = 136896.6
DL output with Mo: L = 9.0 + 557.3 = 566.2
DL input+output M: L = 17.9 + 137444.9 = 137462.8

# learning a model for train pairs
2.000	
1.558	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.198	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.636	OUT DEF: ^.color=^.layer_0.shape.color
0.517	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.432	OUT DEF: ^.size=(?,?)
0.266	OUT DEF: ^.size.i=1
0.100	OUT DEF: ^.size.j=1
0.099	IN  DEF: ^.layer_00.shape.mask=Full
0.099	IN  OBJECT at ^.layer_010: a point with color ? at ?
0.098	IN  DEF: ^.size=(?,?)
0.098	IN  DEF: ^.layer_00.pos=(?,?)
0.098	IN  DEF: ^.layer_00.shape.size=(?,?)
0.097	IN  DEF: ^.layer_0.pos=(?,?)
0.097	IN  DEF: ^.layer_0.shape.size=(?,?)
0.097	IN  DEF: ^.layer_01.pos=(?,?)
0.096	IN  DEF: ^.layer_010.pos=(?,?)
0.096	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.8 + 10029.0 = 10143.8
DL output with Mo: L = 12.3 + 0.0 = 12.3
DL input+output M: L = 127.1 + 10029.0 = 10156.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,13) and color black and layers
  _00: a rectangle with size (7,8) and color yellow and mask Full at (0,0)
  _0: a rectangle with size (10,8) and color cyan and mask Full at (7,0)
  _010: a point with color pink at (2,10)
  _01: a rectangle with size (10,5) and color blue and mask Full at (7,8)
diff: 
delta: (2,3)=6  (4,5)=6  (10,5)=6  (11,11)=6  (12,2)=6  (15,5)=6 
   (262.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,13) and color black and layers
  _00: a rectangle with size (10,8) and color cyan and mask Full at (7,0)
  _0: a rectangle with size (7,8) and color yellow and mask Full at (0,0)
  _010: a point with color pink at (2,10)
  _01: a rectangle with size (10,5) and color blue and mask Full at (7,8)
diff: 
delta: (2,3)=6  (4,5)=6  (10,5)=6  (11,11)=6  (12,2)=6  (15,5)=6 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,15) and color blue and layers
  _00: a rectangle with size (7,15) and color cyan and mask Full at (9,0)
  _0: a rectangle with size (9,8) and color red and mask xxxxxxxx|xxx.xx.x|xxxxxxxx|xx.xxxxx|xxxxxxxx|xxxxxxxx|xxxx.xxx|xxxxxxxx|xxxxxxxx at (0,7)
  _010: a point with color blue at (4,2)
  _01: a rectangle with size (9,7) and color green and mask Full at (0,0)
diff: 
delta: (12,11)=1  (13,6)=1 
   (261.7 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color blue and layers
  _00: a rectangle with size (7,15) and color cyan and mask Full at (9,0)
  _0: a rectangle with size (9,8) and color red and mask xxxxxxxx|xxx.xx.x|xxxxxxxx|xx.xxxxx|xxxxxxxx|xxxxxxxx|xxxx.xxx|xxxxxxxx|xxxxxxxx at (0,7)
  _010: a point with color blue at (4,2)
  _01: a rectangle with size (9,7) and color green and mask Full at (0,0)
diff: 
delta: (12,11)=1  (13,6)=1 
correct output grid

TRAIN de1cd16c.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (8,10) and color grey and mask Full at (0,7)
  _0: a rectangle with size (8,10) and color pink and mask Full at (8,7)
  _010: a point with color yellow at (1,1)
  _01: a rectangle with size (8,7) and color blue and mask Full at (0,0)
diff: 
delta: (3,3)=4  (5,11)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
   (287.6 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (8,10) and color grey and mask Full at (0,7)
  _0: a rectangle with size (8,10) and color pink and mask Full at (8,7)
  _010: a point with color yellow at (1,1)
  _01: a rectangle with size (8,7) and color blue and mask Full at (0,0)
diff: 
delta: (3,3)=4  (5,11)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
correct output grid

TRAIN de1cd16c.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (16,19) and color cyan and layers
  _00: a rectangle with size (16,7) and color blue and mask Full at (0,0)
  _0: a rectangle with size (7,12) and color yellow and mask Full at (9,7)
  _010: a point with color red at (4,11)
  _01: a rectangle with size (4,12) and color cyan and mask Full at (0,7)
diff: 
delta: (13,9)=2  (14,12)=2 
   (191.6 bits)
data: a background with size (1,1) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color yellow and layers
  _00: a rectangle with size (16,7) and color blue and mask Full at (0,0)
  _0: a rectangle with size (9,12) and color cyan and mask Full at (0,7)
  _010: a point with color red at (13,9)
  _01: a rectangle with size (7,6) and color yellow and mask Full at (9,13)
diff: 
delta: (4,11)=2  (14,12)=2 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color blue and layers
  _00: a rectangle with size (14,10) and color cyan and mask Full at (4,9)
  _0: a rectangle with size (4,19) and color green and mask Full at (0,0)
  _010: a point with color yellow at (5,1)
  _01: a rectangle with size (8,9) and color red and mask Full at (4,0)
diff: 
delta: (1,7)=4  (5,7)=4  (7,4)=4  (8,2)=4  (9,6)=4  (9,14)=4  (11,12)=4  (14,14)=4  (15,4)=4  (16,1)=4 
! 1 wrong pixels (generated / expected)

TEST de1cd16c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-45] Checking task ded97339.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3610.2 = 3619.2
DL output with Mo: L = 9.0 + 9172.8 = 9181.7
DL input+output M: L = 17.9 + 12783.0 = 12800.9

# learning a model for train pairs
2.000	
1.469	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.377	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.314	OUT DEF: ^.size=^.size
1.283	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.248	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.210	IN  DEF: ^.layer_0.shape.color=cyan
1.178	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.163	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.147	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.109	IN  DEF: ^.layer_01.shape.color=cyan
1.097	IN  DEF: ^.color=black
1.087	IN  DEF: ^.size=(?,?)
1.014	IN  DEF: ^.size.i=10
0.942	IN  DEF: ^.size.j=10
0.932	IN  DEF: ^.layer_0.pos=(?,?)
0.922	IN  DEF: ^.layer_01.pos=(?,?)
0.914	OUT DEF: ^.layer_01.shape.mask=Full
0.910	OUT DEF: ^.color=black
0.906	OUT DEF: ^.layer_0.shape.size=(?,?)
0.902	OUT DEF: ^.layer_01.pos=(?,?)
0.898	OUT DEF: ^.layer_01.shape.size=(?,?)
0.885	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_01.pos.i,?) and color ^.layer_01.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color cyan at (?,?)

DL input  with Mi: L = 60.7 + 2376.2 = 2436.9
DL output with Mo: L = 57.7 + 1882.0 = 1939.7
DL input+output M: L = 118.4 + 4258.1 = 4376.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (7,4)
diff: 
delta: (3,6)=8  (9,6)=8 
   (59.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color cyan and mask Full at (3,1)
  _01: a rectangle with size (7,1) and color cyan and mask Full at (3,6)
diff: 
delta: (7,4)=8 
   (44.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (3,6)
diff: 
delta: (7,4)=8  (9,6)=8 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (7,4)
diff: 
delta: (3,6)=8  (9,6)=8 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,6)
  _01: a point with color cyan at (3,1)
diff: 
delta: (7,4)=8  (9,6)=8 
! 19 wrong pixels (generated / expected)

TRAIN ded97339.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,2)
  _01: a point with color cyan at (1,7)
diff: 
delta: (6,5)=8  (6,9)=8  (8,2)=8 
   (79.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (6,5)
diff: 
delta: (1,7)=8 
   (49.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (3,2)
diff: 
delta: (6,5)=8  (6,9)=8  (8,2)=8 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (6,5)
diff: 
delta: (3,2)=8  (6,9)=8  (8,2)=8 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,2)
  _01: a point with color cyan at (1,7)
diff: 
delta: (6,5)=8  (6,9)=8  (8,2)=8 
! 14 wrong pixels (generated / expected)

TRAIN ded97339.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
diff: 
delta: (4,1)=8  (7,5)=8  (7,9)=8  (9,2)=8 
   (98.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,9) and color cyan and mask xxxxx....|x...x....|x...x....|x...x....|....x....|....x....|....xxxxx at (1,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (9,2)
diff: 
delta:
   (94.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
diff: 
delta: (4,1)=8  (7,5)=8  (7,9)=8  (9,2)=8 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (4,1)
diff: 
delta: (1,5)=8  (7,5)=8  (7,9)=8  (9,2)=8 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,5)
  _01: a point with color cyan at (1,1)
diff: 
delta: (4,1)=8  (7,5)=8  (7,9)=8  (9,2)=8 
! 21 wrong pixels (generated / expected)

TRAIN ded97339.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (2,3)
diff: 
delta: (3,7)=8  (5,1)=8  (8,4)=8  (8,7)=8 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (3,7)
diff: 
delta: (2,3)=8  (5,1)=8  (8,4)=8  (8,7)=8 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (2,3)
  _01: a point with color cyan at (1,1)
diff: 
delta: (3,7)=8  (5,1)=8  (8,4)=8  (8,7)=8 
! 19 wrong pixels (generated / expected)

TEST ded97339.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 1882.0 bits (1882.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-44] Checking task e179c5f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1086.8 = 1095.8
DL output with Mo: L = 9.0 + 6047.7 = 6056.6
DL input+output M: L = 17.9 + 7134.5 = 7152.4

# learning a model for train pairs
2.000	
1.403	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.260	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.134	IN  DEF: ^.layer_0.shape.color=blue
1.057	OUT DEF: ^.size=^.size
0.979	OUT DEF: ^.layer_0.shape.size=^.size
0.937	IN  DEF: ^.color=black
0.898	OUT DEF: ^.color=^.layer_0.shape.color
0.866	IN  DEF: ^.size=(?,?)
0.625	IN  DEF: ^.size.i=10
0.593	IN  DEF: ^.layer_0.pos=(?,?)
0.468	IN  DEF: ^.layer_0.pos.i=9
0.390	IN  DEF: ^.layer_0.pos.j=(0)
0.367	OUT DEF: ^.layer_0.shape.color=cyan
0.361	OUT DEF: ^.layer_0.pos=(?,?)
0.338	OUT DEF: ^.layer_0.pos.i=(0)
0.324	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.size and color cyan and mask ? at ((0),^.layer_0.pos.j)
WHERE (Mi)
a background with size (10,?) and color black and layers
  _0: a point with color blue at (9,(0))

DL input  with Mi: L = 38.5 + 161.4 = 199.8
DL output with Mo: L = 32.7 + 827.6 = 860.4
DL input+output M: L = 71.2 + 989.0 = 1060.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (4.3 bits)
data: a background with size (10,2) and color blue and layers
  _0: a rectangle with size (10,2) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (5.5 bits)
data: a background with size (10,3) and color blue and layers
  _0: a rectangle with size (10,3) and color cyan and mask x.x|.xx|x.x|xx.|x.x|.xx|x.x|xx.|x.x|.xx at (0,0)
diff: 
delta:
   (33.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (6.3 bits)
data: a background with size (10,4) and color blue and layers
  _0: a rectangle with size (10,4) and color cyan and mask xxx.|xx.x|x.xx|.xxx|x.xx|xx.x|xxx.|xx.x|x.xx|.xxx at (0,0)
diff: 
delta:
   (43.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST e179c5f4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 827.6 bits (827.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-43] Checking task e21d9049.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2918.0 = 2926.9
DL output with Mo: L = 9.0 + 10467.8 = 10476.7
DL input+output M: L = 17.9 + 13385.8 = 13403.7

# learning a model for train pairs
2.000	
1.954	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.902	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
1.862	OUT DEF: ^.size=^.size
1.837	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.810	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.779	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.757	OUT DEF: ^.layer_0=^.layer_0
1.726	IN  DEF: ^.layer_011.shape.color=red
1.711	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.640	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.568	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.531	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a point with color ? at ?
  _011: a point with color red at ?
  _0111: a point with color ? at ?

DL input  with Mi: L = 66.7 + 2393.1 = 2459.9
DL output with Mo: L = 80.6 + 7150.9 = 7231.5
DL input+output M: L = 147.4 + 9544.1 = 9691.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (3,1)
  _01: a point with color cyan at (2,2)
  _011: a point with color red at (4,2)
  _0111: a point with color cyan at (4,0)
diff: 
delta:
   (96.1 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (3,1)
  _01: a point with color cyan at (2,2)
  _011: a rectangle with size (10,1) and color red and mask Full at (1,2)
  _0111: a rectangle with size (1,10) and color cyan and mask Full at (4,0)
  _01111: a rectangle with size (1,1) and color green and mask Full at (0,2)
diff: 
delta: (4,4)=3  (4,5)=2  (4,7)=3  (4,8)=2  (4,10)=3  (5,2)=8  (6,2)=3  (8,2)=8  (9,2)=3  (11,2)=8 
   (297.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (3,1)
  _01: a point with color cyan at (2,2)
  _011: a point with color red at (4,2)
  _0111: a point with color cyan at (4,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN e21d9049.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a point with color yellow at (4,8)
  _011: a point with color red at (6,7)
  _0111: a point with color green at (6,8)
diff: 
delta: (6,10)=4  (7,8)=2 
   (143.2 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a point with color yellow at (6,2)
  _011: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,7)
  _0111: a rectangle with size (1,13) and color green and mask Full at (6,0)
  _01111: a rectangle with size (13,1) and color yellow and mask Full at (0,8)
diff: 
delta: (1,8)=8  (2,8)=3  (3,8)=2  (6,1)=8  (6,3)=2  (6,5)=8  (6,6)=4  (6,10)=4  (6,11)=2  (6,13)=8  (9,8)=8  (10,8)=3  (11,8)=2  (13,8)=8  (14,8)=3 
   (417.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a point with color yellow at (4,8)
  _011: a point with color red at (6,7)
  _0111: a point with color green at (6,8)
diff: 
delta: (6,10)=4  (7,8)=2 
! 30 wrong pixels (generated / expected)

TRAIN e21d9049.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
  _01: a point with color green at (6,7)
  _011: a point with color red at (6,6)
  _0111: a point with color blue at (6,8)
diff: 
delta: (7,6)=3  (8,6)=1 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (6,6)
  _01: a point with color yellow at (5,6)
  _011: a point with color red at (6,6)
  _0111: a point with color yellow at (6,5)
diff: 
delta: (6,8)=1  (8,6)=1 
! 41 wrong pixels (generated / expected)

TEST e21d9049.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 7150.9 bits (7150.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-42] Checking task e26a3af2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 85655.3 = 85664.3
DL output with Mo: L = 9.0 + 78273.8 = 78282.7
DL input+output M: L = 17.9 + 163929.1 = 163947.0

# learning a model for train pairs
2.000	
1.540	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.200	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.865	OUT OBJECT at ^.layer_01: ^.layer_0.shape at ?
0.612	IN  OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.443	OUT OBJECT at ^.layer_00: ^.layer_00.shape at ?
0.319	IN  OBJECT at ^.layer_001: a rectangle with size ? and color ? and mask ? at ?
0.311	OUT DEF: ^.size=^.size
0.306	OUT DEF: ^.layer_00=^.layer_00
0.302	OUT DEF: ^.layer_01=^.layer_0
0.298	OUT DEF: ^.layer_0.pos=^.layer_001.pos
0.296	OUT DEF: ^.layer_0.shape.color=^.layer_001.shape.color
0.295	IN  DEF: ^.layer_00.shape.mask=Full
0.293	OUT DEF: ^.color=^.color
0.292	OUT DEF: ^.layer_0.shape.mask=Full
0.291	OUT DEF: ^.layer_0.shape.size=(?,?)
0.288	OUT DEF: ^.layer_0.shape.size.i=^.layer_001.shape.size.i
0.288	IN  DEF: ^.size=(?,?)
0.287	IN  DEF: ^.layer_00.pos=(?,?)
0.287	IN  DEF: ^.layer_00.shape.size=(?,?)
0.287	IN  DEF: ^.layer_001.pos=(?,?)
0.286	IN  DEF: ^.layer_001.shape.size=(?,?)
0.286	IN  DEF: ^.layer_0.pos=(?,?)
0.285	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_00
  _0: a rectangle with size (^.layer_001.shape.size.i,?) and color ^.layer_001.shape.color and mask Full at ^.layer_001.pos
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 98.3 + 24032.1 = 24130.3
DL output with Mo: L = 46.1 + 243.9 = 290.0
DL input+output M: L = 144.4 + 24276.0 = 24420.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,17) and color cyan and layers
  _00: a rectangle with size (13,5) and color blue and mask Full at (0,0)
  _001: a rectangle with size (13,5) and color red and mask Full at (0,12)
  _0: a rectangle with size (13,4) and color green and mask Full at (0,8)
diff: 
delta: (0,15)=8  (1,0)=9# (1,1)=5# (1,3)=5# (2,0)=4  (2,3)=2  (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,4)=8  (4,10)=4  (4,12)=8  (5,0)=4  (5,2)=2  (5,5)=7# (5,14)=6  (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (6,14)=6  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,1)=2  (12,3)=4  (12,13)=9# (12,15)=1 
   (960.0 bits)
data: a background with size (13,17) and color cyan and layers
  _00: a rectangle with size (13,5) and color blue and mask Full at (0,0)
  _0: a rectangle with size (13,5) and color red and mask Full at (0,12)
  _01: a rectangle with size (13,4) and color green and mask Full at (0,8)
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color red and layers
  _00: a rectangle with size (13,5) and color blue and mask xxxxx|..x.x|.xx.x|xxxxx|.xxx.|.x.xx|xxxx.|xxxxx|xxx.x|.xx.x|xxxxx|xxxxx|x.x.x at (0,0)
  _001: a rectangle with size (13,4) and color green and mask Full at (0,8)
  _0: a rectangle with size (13,4) and color cyan and mask Full at (0,4)
diff:   ^.layer_00.shape.mask
delta: (0,15)=8  (1,0)=9# (1,1)=5# (1,3)=5# (2,0)=4  (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,0)=4  (5,5)=7# (5,14)=6  (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (6,14)=6  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,17) and color cyan and layers
  _00: a rectangle with size (13,5) and color blue and mask Full at (0,0)
  _001: a rectangle with size (13,5) and color red and mask Full at (0,12)
  _0: a rectangle with size (13,4) and color green and mask Full at (0,8)
diff: 
delta: (0,15)=8  (1,0)=9# (1,1)=5# (1,3)=5# (2,0)=4  (2,3)=2  (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,4)=8  (4,10)=4  (4,12)=8  (5,0)=4  (5,2)=2  (5,5)=7# (5,14)=6  (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (6,14)=6  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,1)=2  (12,3)=4  (12,13)=9# (12,15)=1 
! 39 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,17) and color green and layers
  _00: a rectangle with size (13,5) and color blue and mask Full at (0,0)
  _001: a rectangle with size (13,5) and color red and mask Full at (0,12)
  _0: a rectangle with size (13,4) and color cyan and mask Full at (0,4)
diff: 
delta: (0,15)=8  (1,0)=9# (1,1)=5# (1,3)=5# (2,0)=4  (2,3)=2  (2,7)=5# (2,10)=8  (2,13)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,4)=8  (4,10)=4  (4,12)=8  (5,0)=4  (5,2)=2  (5,5)=7# (5,14)=6  (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (6,14)=6  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,0)=6  (9,3)=8  (9,5)=5# (9,8)=4  (9,12)=6  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,1)=2  (12,3)=4  (12,13)=9# (12,15)=1 
! 39 wrong pixels (generated / expected)

TRAIN e26a3af2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,14) and color brown and layers
  _00: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _001: a rectangle with size (13,7) and color cyan and mask Full at (0,5)
  _0: a rectangle with size (13,5) and color red and mask Full at (0,0)
diff: 
delta: (0,7)=1  (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (5,10)=5# (6,3)=6  (6,10)=5# (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,8)=5# (9,11)=3  (10,4)=5# (10,6)=2  (10,8)=5# (11,11)=8  (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
   (669.4 bits)
data: a background with size (13,14) and color brown and layers
  _00: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _0: a rectangle with size (13,6) and color cyan and mask Full at (0,5)
  _01: a rectangle with size (13,5) and color red and mask Full at (0,0)
diff: 
delta:
   (7.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color grey and layers
  _00: a rectangle with size (13,5) and color red and mask Full at (0,0)
  _001: a rectangle with size (13,7) and color cyan and mask xx.xxx.|xxxxxx.|xx.xxx.|x.x.xx.|xxxxxx.|xxxxx..|xxxxx..|.xxxxx.|.x.xxx.|x.x.xx.|x.x.xx.|xxxxxxx|xxxx.x. at (0,5)
  _0: a rectangle with size (13,3) and color blue and mask Full at (0,11)
diff: 
delta: (0,7)=1  (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (6,3)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
! 52 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,14) and color grey and layers
  _00: a rectangle with size (13,7) and color cyan and mask xx.xxx.|xxxxxx.|xx.xxx.|x.x.xx.|xxxxxx.|xxxxx..|xxxxx..|.xxxxx.|.x.xxx.|x.x.xx.|x.x.xx.|xxxxxxx|xxxx.x. at (0,5)
  _001: a rectangle with size (13,5) and color red and mask Full at (0,0)
  _0: a rectangle with size (13,3) and color blue and mask Full at (0,11)
diff:   ^.layer_00.shape.mask
delta: (0,7)=1  (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (6,3)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
! 54 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,14) and color grey and layers
  _00: a rectangle with size (13,7) and color cyan and mask xx.xxx.|xxxxxx.|xx.xxx.|x.x.xx.|xxxxxx.|xxxxx..|xxxxx..|.xxxxx.|.x.xxx.|x.x.xx.|x.x.xx.|xxxxxxx|xxxx.x. at (0,5)
  _001: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _0: a rectangle with size (13,5) and color red and mask Full at (0,0)
diff:   ^.layer_00.shape.mask
delta: (0,7)=1  (1,2)=8  (2,7)=9# (3,6)=9# (3,8)=6  (6,3)=6  (6,13)=6  (7,1)=6  (7,2)=4  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,3)=6  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,13)=3  (12,1)=8  (12,9)=3  (12,11)=9#
! 28 wrong pixels (generated / expected)

TRAIN e26a3af2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color green and layers
  _00: a rectangle with size (6,14) and color orange and mask Full at (4,0)
  _001: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _0: a rectangle with size (2,14) and color blue and mask Full at (13,0)
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
   (773.9 bits)
data: a background with size (15,14) and color green and layers
  _00: a rectangle with size (6,14) and color orange and mask Full at (4,0)
  _0: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (2,14) and color blue and mask Full at (13,0)
diff: 
delta:
   (9.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color cyan and layers
  _00: a rectangle with size (6,14) and color orange and mask Full at (4,0)
  _001: a rectangle with size (5,14) and color green and mask Full at (0,0)
  _0: a rectangle with size (2,14) and color blue and mask Full at (13,0)
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 48 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color blue and layers
  _00: a rectangle with size (6,14) and color orange and mask Full at (4,0)
  _001: a rectangle with size (5,14) and color green and mask Full at (0,0)
  _0: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 48 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color blue and layers
  _00: a rectangle with size (6,14) and color orange and mask Full at (4,0)
  _001: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _0: a rectangle with size (5,14) and color green and mask Full at (0,0)
diff: 
delta: (0,1)=4  (1,5)=2  (1,8)=2  (2,3)=9# (2,7)=2  (2,11)=9# (3,2)=4  (3,5)=2  (4,6)=8  (4,9)=3  (4,10)=3  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 36 wrong pixels (generated / expected)

TRAIN e26a3af2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color green and layers
  _00: a rectangle with size (4,15) and color red and mask Full at (3,0)
  _001: a rectangle with size (5,15) and color cyan and mask Full at (6,0)
  _0: a rectangle with size (3,15) and color blue and mask Full at (0,0)
diff: 
delta: (0,0)=6  (0,3)=5# (1,1)=4  (1,4)=9# (1,9)=5# (2,0)=5# (2,4)=4  (3,0)=7# (3,5)=6  (3,7)=9# (3,10)=4  (3,12)=4  (4,2)=9# (4,4)=1  (4,8)=3  (4,11)=8  (4,13)=7# (5,1)=5# (5,4)=5# (5,5)=6  (5,6)=6  (5,10)=3  (5,12)=5# (6,10)=6  (6,12)=8  (7,0)=1  (7,6)=9# (8,4)=1  (8,10)=7# (8,14)=9# (9,10)=4  (10,8)=5# (10,12)=1  (11,0)=4  (11,1)=4  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=7# (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=2  (11,14)=4  (12,0)=4  (12,1)=4  (12,2)=7# (12,3)=4  (12,4)=4  (12,5)=4  (12,6)=4  (12,7)=4  (12,8)=4  (12,9)=4  (12,10)=8  (12,11)=4  (12,12)=4  (12,13)=4  (12,14)=4  (13,2)=1  (13,3)=9# (14,0)=8  (14,1)=6  (14,4)=8 
! 82 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color blue and layers
  _00: a rectangle with size (5,15) and color cyan and mask ............x..|.xxxxx.xxxxxxxx|xxxx.xxxxx.xxx.|xxxxxxxxxx.xxxx|xxxxxxxx.xxx.xx at (6,0)
  _001: a rectangle with size (4,15) and color red and mask Full at (3,0)
  _0: a rectangle with size (2,15) and color yellow and mask Full at (11,0)
diff:   ^.layer_00.shape.mask
delta: (0,0)=6  (0,3)=5# (1,1)=4  (1,4)=9# (1,9)=5# (2,0)=5# (2,4)=4  (3,0)=7# (3,5)=6  (3,7)=9# (3,10)=4  (3,12)=4  (4,2)=9# (4,4)=1  (4,8)=3  (4,11)=8  (4,13)=7# (5,1)=5# (5,4)=5# (5,5)=6  (5,6)=6  (5,10)=3  (5,12)=5# (6,10)=6  (7,6)=9# (8,10)=7# (8,14)=9# (9,10)=4  (10,8)=5# (11,6)=7# (11,7)=3  (11,13)=2  (12,2)=7# (12,10)=8  (13,0)=3  (13,1)=3  (13,3)=9# (13,4)=3  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=8  (14,1)=6  (14,2)=3  (14,3)=3  (14,4)=8  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,11)=3  (14,12)=3  (14,13)=3  (14,14)=3 
! 90 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color green and layers
  _00: a rectangle with size (4,15) and color red and mask .xxxx.x.xx.x.xx|xx.x.xxx.xx.x.x|x.xx...xxx.x.xx|xxxxxxxxxx.x.xx at (3,0)
  _001: a rectangle with size (5,15) and color cyan and mask Full at (6,0)
  _0: a rectangle with size (3,15) and color blue and mask Full at (0,0)
diff:   ^.layer_00.shape.mask
delta: (0,0)=6  (0,3)=5# (1,1)=4  (1,4)=9# (1,9)=5# (2,0)=5# (2,4)=4  (3,0)=7# (3,5)=6  (3,7)=9# (3,10)=4  (3,12)=4  (4,2)=9# (4,4)=1  (4,11)=8  (4,13)=7# (5,1)=5# (5,4)=5# (5,5)=6  (5,6)=6  (5,12)=5# (6,10)=6  (7,0)=1  (7,6)=9# (8,4)=1  (8,10)=7# (8,14)=9# (9,10)=4  (10,8)=5# (10,12)=1  (11,0)=4  (11,1)=4  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=7# (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=2  (11,14)=4  (12,0)=4  (12,1)=4  (12,2)=7# (12,3)=4  (12,4)=4  (12,5)=4  (12,6)=4  (12,7)=4  (12,8)=4  (12,9)=4  (12,10)=8  (12,11)=4  (12,12)=4  (12,13)=4  (12,14)=4  (13,2)=1  (13,3)=9# (14,0)=8  (14,1)=6  (14,4)=8 
! 100 wrong pixels (generated / expected)

TEST e26a3af2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 243.9 bits (243.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-41] Checking task e3497940.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14198.5 = 14207.5
DL output with Mo: L = 9.0 + 7090.5 = 7099.5
DL input+output M: L = 17.9 + 21289.0 = 21307.0

# learning a model for train pairs
2.000	
1.584	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.250	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.131	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.075	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.024	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.991	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.969	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.935	OUT OBJECT at ^.layer_010: ^.layer_01111.shape at ?
0.915	OUT DEF: ^.layer_01.shape.color=^.layer_01111.shape.color
0.896	OUT DEF: ^.layer_0.shape.color=^.layer_0111.shape.color
0.886	OUT DEF: ^.layer_01.shape.mask=Full
0.876	IN  DEF: ^.layer_0.shape.color=grey
0.870	OUT DEF: ^.color=black
0.865	IN  DEF: ^.layer_0.shape.mask=Full
0.860	IN  DEF: ^.layer_011.shape.mask=Full
0.855	IN  DEF: ^.layer_0111.shape.mask=Full
0.850	IN  DEF: ^.layer_01111.shape.mask=Full
0.845	OUT DEF: ^.size=(?,?)
0.807	OUT DEF: ^.size.i=^.size.i
0.781	OUT DEF: ^.size.j=4
0.776	OUT DEF: ^.layer_0.pos=(?,?)
0.758	OUT DEF: ^.layer_0.pos.i=^.layer_01111.pos.i + ^.layer_01111.shape.size.i
0.753	OUT DEF: ^.layer_0.shape.size=(?,?)
0.735	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.shape.size.i - 1
0.730	OUT DEF: ^.layer_010.pos=(?,?)
0.711	OUT DEF: ^.layer_010.pos.i=^.layer_01111.pos.i
0.698	OUT DEF: ^.layer_010.pos.j=^.layer_011.pos.j - 2
0.693	OUT DEF: ^.layer_01.pos=(?,?)
0.680	OUT DEF: ^.layer_01.pos.j=^.layer_01.shape.size.j
0.675	OUT DEF: ^.layer_01.shape.size=(?,?)
0.663	OUT DEF: ^.layer_01.shape.size.j=^.layer_01111.shape.size.i
0.660	IN  DEF: ^.color=black
0.657	IN  DEF: ^.size=(?,?)
0.639	IN  DEF: ^.size.i=10
0.621	IN  DEF: ^.size.j=9
0.618	IN  DEF: ^.layer_0.pos=(?,?)
0.609	IN  DEF: ^.layer_0.pos.i=(0)
0.606	IN  DEF: ^.layer_0.shape.size=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,4) and color black and layers
  _0: a rectangle with size (?,^.layer_01.shape.size.i - 1) and color ^.layer_0111.shape.color and mask ? at (^.layer_01111.pos.i + ^.layer_01111.shape.size.i,?)
  _010: ^.layer_01111.shape at (^.layer_01111.pos.i,^.layer_011.pos.j - 2)
  _01: a rectangle with size (?,^.layer_01111.shape.size.i) and color ^.layer_01111.shape.color and mask Full at (?,^.layer_01.shape.size.j)
WHERE (Mi)
a background with size (10,9) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at ((0),?)
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask Full at ?
  _0111: a rectangle with size ? and color ? and mask Full at ?
  _01111: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 124.7 + 4926.4 = 5051.1
DL output with Mo: L = 137.2 + 1641.9 = 1779.1
DL input+output M: L = 261.9 + 6568.3 = 6830.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,2) and color green and mask xx|.x|.x|.x at (4,2)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _0111: a rectangle with size (1,3) and color green and mask Full at (6,5)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta:
   (124.3 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask .xx|..x|xxx|..x at (4,1)
  _010: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
diff: 
delta:
   (31.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,2) and color green and mask xx|.x|.x|.x at (4,2)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _0111: a rectangle with size (1,3) and color green and mask Full at (6,5)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,2) and color green and mask xx|.x|.x|.x at (4,2)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _0111: a rectangle with size (1,3) and color green and mask Full at (6,5)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,2) and color green and mask xx|.x|.x|.x at (4,2)
  _011: a rectangle with size (1,3) and color green and mask Full at (6,5)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN e3497940.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
  _01111: a rectangle with size (1,3) and color red and mask Full at (4,5)
diff: 
delta: (2,5)=2  (2,6)=6  (7,5)=2 
   (189.9 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (5,2)
  _010: a rectangle with size (1,3) and color red and mask Full at (4,1)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,3)
diff: 
delta: (2,2)=6  (7,1)=2  (7,2)=2 
   (77.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _0111: a rectangle with size (1,3) and color red and mask Full at (4,5)
  _01111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
diff: 
delta: (2,5)=2  (2,6)=6  (7,5)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
  _01111: a rectangle with size (1,3) and color red and mask Full at (4,5)
diff: 
delta: (2,5)=2  (2,6)=6  (7,5)=2 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (1,3) and color red and mask Full at (4,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _01111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
diff: 
delta: (2,5)=2  (2,6)=6  (7,5)=2 
! 16 wrong pixels (generated / expected)

TRAIN e3497940.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (1,5)
diff: 
delta: (4,1)=7# (8,5)=8  (8,6)=7#
   (178.5 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (7,2) and color cyan and mask .x|.x|xx|xx|.x|.x|.x at (2,2)
  _010: a rectangle with size (1,1) and color orange and mask Full at (1,3)
  _01: a rectangle with size (1,1) and color orange and mask Full at (8,2)
diff: 
delta: (4,1)=7#
   (54.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (1,5)
diff: 
delta: (4,1)=7# (8,5)=8  (8,6)=7#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (4,1)
diff: 
delta: (1,5)=7# (8,5)=8  (8,6)=7#
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,5)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
diff: 
delta: (4,1)=7# (8,5)=8  (8,6)=7#
! 17 wrong pixels (generated / expected)

TRAIN e3497940.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (1,7) and color blue and mask Full at (3,1)
  _011: a rectangle with size (7,1) and color blue and mask Full at (1,3)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (5,5)
  _01111: a rectangle with size (5,2) and color pink and mask Full at (4,5)
diff: 
delta: (2,5)=1  (3,8)=6  (4,3)=6  (5,3)=0  (6,5)=0  (6,6)=0  (7,5)=1  (8,6)=0 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (1,7) and color blue and mask Full at (3,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (5,5)
  _0111: a rectangle with size (5,2) and color pink and mask Full at (4,5)
  _01111: a rectangle with size (7,1) and color blue and mask Full at (1,3)
diff: 
delta: (2,5)=1  (3,8)=6  (4,3)=6  (5,3)=0  (6,5)=0  (6,6)=0  (7,5)=1  (8,6)=0 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask ..x|..x|xxx at (1,1)
  _011: a rectangle with size (4,3) and color blue and mask Full at (2,5)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (6,3)
  _01111: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (7,5)
diff:   ^.layer_01111.shape.mask
delta: (2,6)=0  (2,7)=0  (3,8)=6  (4,3)=6  (4,5)=6  (4,6)=6  (4,7)=0  (7,5)=1 
! 17 wrong pixels (generated / expected)

TEST e3497940.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.1 sec (26.1 sec/task)
bits-train-error = 1641.9 bits (1641.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-40] Checking task e40b9e2f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 5920.7 = 5929.6
DL output with Mo: L = 9.0 + 8791.8 = 8800.8
DL input+output M: L = 17.9 + 14712.5 = 14730.4

# learning a model for train pairs
2.000	
1.540	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.106	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.005	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.922	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.857	OUT DEF: ^.size=^.size
0.841	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.825	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.817	IN  DEF: ^.color=black
0.811	IN  DEF: ^.size=(?,?)
0.767	IN  DEF: ^.size.i=10
0.722	IN  DEF: ^.size.j=10
0.716	IN  DEF: ^.layer_0.pos=(?,?)
0.710	IN  DEF: ^.layer_0.shape.size=(?,?)
0.705	IN  DEF: ^.layer_01.pos=(?,?)
0.681	IN  DEF: ^.layer_01.pos.i=3
0.675	IN  DEF: ^.layer_01.shape.size=(?,?)
0.670	OUT DEF: ^.color=black
0.666	OUT DEF: ^.layer_0.pos=(?,?)
0.662	OUT DEF: ^.layer_0.shape.size=(?,?)
0.658	OUT DEF: ^.layer_01.pos=(?,?)
0.643	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.639	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i,?)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (3,?)

DL input  with Mi: L = 82.0 + 1743.4 = 1825.4
DL output with Mo: L = 64.6 + 2846.8 = 2911.4
DL input+output M: L = 146.5 + 4590.3 = 4736.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|.x..|x.x.|...x at (4,3)
  _01: a rectangle with size (4,3) and color orange and mask .x.|xxx|xxx|xxx at (3,3)
diff: 
delta:
   (81.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask x-cross at (3,2)
  _01: a rectangle with size (5,5) and color orange and mask x.x.x|.xxx.|xxxxx|.xxx.|x.x.x at (3,2)
diff: 
delta:
   (76.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|.x..|x.x.|...x at (4,3)
  _01: a rectangle with size (4,3) and color orange and mask .x.|xxx|xxx|xxx at (3,3)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color orange and mask .x.|.x.|x.x|.x. at (3,3)
  _01: a rectangle with size (4,4) and color yellow and mask xxx.|xxx.|xxx.|...x at (4,3)
diff:   ^.layer_01.pos.i
delta:
! 25 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|xx|.x at (4,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
   (49.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask .x..|.xxx|xxx.|..x. at (3,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=3  (6,1)=3  (6,4)=3 
   (113.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|xx|.x at (4,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (3,1)
  _01: a rectangle with size (3,2) and color pink and mask xx|xx|.x at (4,2)
diff:   ^.layer_01.pos.i
delta:
! 18 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (2,6)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
diff: 
delta:
   (43.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
diff: 
delta: (2,6)=9# (6,2)=9# (6,6)=9#
   (94.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (2,6)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color brown and mask Full at (2,6)
diff:   ^.layer_01.pos.i
delta:
! 21 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .x.|.x.|x.x|.x. at (2,3)
  _01: a rectangle with size (3,5) and color green and mask xxxxx|..xxx|xxxxx at (3,1)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxx.x|...x.|xxx.x at (3,1)
  _01: a rectangle with size (4,3) and color red and mask .x.|xxx|xxx|xxx at (2,3)
diff:   ^.layer_01.pos.i
delta:
! 36 wrong pixels (generated / expected)

TEST e40b9e2f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.0 sec (9.0 sec/task)
bits-train-error = 2846.8 bits (2846.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-39] Checking task e48d4e1a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17249.2 = 17258.2
DL output with Mo: L = 9.0 + 15536.2 = 15545.2
DL input+output M: L = 17.9 + 32785.4 = 32803.3

# learning a model for train pairs
2.000	
1.409	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.884	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.686	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.509	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.458	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.407	OUT DEF: ^.layer_01.shape=^.layer_01.shape
0.357	OUT DEF: ^.size=^.size
0.311	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.301	IN  DEF: ^.layer_011.shape.color=grey
0.295	IN  DEF: ^.layer_0.shape.mask=Full
0.290	IN  DEF: ^.layer_01.shape.mask=Full
0.284	IN  DEF: ^.layer_011.shape.mask=Full
0.281	OUT DEF: ^.color=black
0.277	IN  DEF: ^.color=black
0.274	OUT DEF: ^.layer_0.pos=(?,?)
0.262	OUT DEF: ^.layer_0.pos.j=(0)
0.251	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i + ^.layer_011.shape.size.i
0.248	OUT DEF: ^.layer_01.pos=(?,?)
0.236	OUT DEF: ^.layer_01.pos.i=(0)
0.225	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j - ^.layer_011.shape.size.i
0.222	IN  DEF: ^.size=(?,?)
0.202	IN  DEF: ^.size.i=10
0.181	IN  DEF: ^.size.j=10
0.178	IN  DEF: ^.layer_0.pos=(?,?)
0.168	IN  DEF: ^.layer_0.pos.j=(0)
0.165	IN  DEF: ^.layer_0.shape.size=(?,?)
0.144	IN  DEF: ^.layer_0.shape.size.j=10
0.139	IN  DEF: ^.layer_0.shape.size.i=1
0.136	IN  DEF: ^.layer_01.pos=(?,?)
0.125	IN  DEF: ^.layer_01.pos.i=(0)
0.123	IN  DEF: ^.layer_01.shape.size=(?,?)
0.102	IN  DEF: ^.layer_01.shape.size.i=10
0.097	IN  DEF: ^.layer_01.shape.size.j=1
0.094	IN  DEF: ^.layer_011.pos=(?,?)
0.083	IN  DEF: ^.layer_011.pos.i=(0)
0.072	IN  DEF: ^.layer_011.pos.j=9
0.070	IN  DEF: ^.layer_011.shape.size=(?,?)
0.064	IN  DEF: ^.layer_011.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i + ^.layer_011.shape.size.i,(0))
  _01: ^.layer_01.shape at ((0),^.layer_01.pos.j - ^.layer_011.shape.size.i)
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color ? and mask Full at (?,(0))
  _01: a rectangle with size (10,1) and color ? and mask Full at ((0),?)
  _011: a rectangle with size (?,1) and color grey and mask Full at ((0),9)

DL input  with Mi: L = 118.1 + 919.3 = 1037.4
DL output with Mo: L = 63.4 + 0.0 = 63.4
DL input+output M: L = 181.5 + 919.3 = 1100.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (22.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (8,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (24.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (4,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (24.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (7,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (4,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (2,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (20.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (2,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,5)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TEST e48d4e1a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 9.9 sec (9.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-38] Checking task e5062a87.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 24887.5 = 24896.4
DL output with Mo: L = 9.0 + 26847.7 = 26856.7
DL input+output M: L = 17.9 + 51735.2 = 51753.1

# learning a model for train pairs
2.000	
1.538	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.147	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.961	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.811	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.667	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.635	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.596	OUT OBJECT at ^.layer_010: ^.layer_010.shape at ?
0.575	OUT DEF: ^.size=^.size
0.556	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.544	OUT DEF: ^.layer_011=^.layer_01
0.532	OUT DEF: ^.layer_0=^.layer_0
0.520	OUT DEF: ^.layer_010=^.layer_010
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_01
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 8609.8 = 8676.6
DL output with Mo: L = 62.3 + 4554.9 = 4617.2
DL input+output M: L = 129.1 + 13164.7 = 13293.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _010: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
  _01: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (8,0)=5# (8,3)=5# (9,3)=5# (9,4)=5#
   (411.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _010: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
  _01: a rectangle with size (4,5) and color red and mask .xxxx|xxxxx|.xxxx|x.xxx at (0,5)
  _011: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
  _0111: a rectangle with size (5,4) and color red and mask x.xx|.xxx|.xx.|xxxx|.xxx at (5,5)
diff: 
delta: (6,1)=2  (7,0)=2  (7,1)=5# (7,2)=2  (7,3)=5# (7,4)=5# (8,0)=5# (8,1)=2  (8,3)=5# (9,3)=5# (9,4)=5#
   (322.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _010: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
  _01: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (8,0)=5# (8,3)=5# (9,3)=5# (9,4)=5#
! 29 wrong pixels (generated / expected)

TRAIN e5062a87.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _010: a rectangle with size (1,4) and color red and mask Full at (5,1)
  _01: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|x.xx at (0,6)
diff: 
delta:
   (238.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _010: a rectangle with size (1,4) and color red and mask Full at (5,1)
  _01: a rectangle with size (1,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|x.xx at (0,6)
  _0111: a rectangle with size (1,4) and color red and mask Full at (5,6)
diff: 
delta:
   (52.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _010: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|x.xx at (0,6)
  _01: a rectangle with size (1,4) and color red and mask Full at (5,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN e5062a87.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _010: a rectangle with size (3,1) and color red and mask Full at (7,7)
  _01: a rectangle with size (1,2) and color red and mask Full at (9,7)
diff: 
delta:
   (210.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _010: a rectangle with size (3,1) and color red and mask Full at (7,7)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,3)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,7)
  _0111: a rectangle with size (6,4) and color red and mask Full at (2,1)
diff: 
delta: (6,2)=0 
   (80.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _010: a rectangle with size (3,1) and color red and mask Full at (7,7)
  _01: a rectangle with size (1,2) and color red and mask Full at (9,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN e5062a87.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxx.xxxx.|xxx.xxxx.x|..xxxx.x..|..xxxx.xxx|..xxx....x|xx.....xxx|..xx...xxx|.xxxxxx...|xx..xxx...|x.x.x..x.. at (0,0)
  _010: a rectangle with size (3,2) and color red and mask Full at (4,5)
  _01: a rectangle with size (2,3) and color black and mask Full at (7,7)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TEST e5062a87.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.3 sec (28.3 sec/task)
bits-train-error = 4554.9 bits (4554.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-37] Checking task e509e548.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 22294.4 = 22303.3
DL output with Mo: L = 9.0 + 22294.4 = 22303.3
DL input+output M: L = 17.9 + 44588.7 = 44606.7

# learning a model for train pairs
2.000	
1.821	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.642	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.474	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.306	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.196	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.087	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.029	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 12052.5 = 12119.3
DL output with Mo: L = 85.3 + 10734.4 = 10819.7
DL input+output M: L = 152.1 + 22786.9 = 22939.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,21) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask .xx.|.x..|.x..|.x..|xxxx at (9,0)
  _01: a rectangle with size (4,3) and color green and mask xxx|x..|x..|xxx at (4,12)
  _011: a rectangle with size (4,3) and color green and mask xxx|x.x|x.x|..x at (15,15)
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (3,3)=3  (3,6)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (5,3)=3  (10,16)=3  (10,17)=3  (11,17)=3  (12,16)=3  (12,17)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (14,6)=3  (15,6)=3  (17,2)=3  (18,1)=3  (18,2)=3 
   (723.3 bits)
data: a background with size (19,21) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask .xx.|.x..|.x..|.x..|xxxx at (9,0)
  _01: a rectangle with size (4,3) and color pink and mask xxx|x..|x..|xxx at (4,12)
  _011: a rectangle with size (4,3) and color pink and mask xxx|x.x|x.x|..x at (15,15)
  _0111: a rectangle with size (3,4) and color red and mask x..x|xxxx|x... at (3,3)
diff: 
delta: (0,17)=1  (0,18)=1  (1,18)=1  (2,18)=1  (10,16)=6  (10,17)=6  (11,17)=6  (12,16)=6  (12,17)=6  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (14,6)=1  (15,6)=1  (17,2)=1  (18,1)=1  (18,2)=1 
   (621.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask .xx.|.x..|.x..|.x..|xxxx at (9,0)
  _01: a rectangle with size (4,3) and color green and mask xxx|x..|x..|xxx at (4,12)
  _011: a rectangle with size (4,3) and color green and mask xxx|x.x|x.x|..x at (15,15)
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (3,3)=3  (3,6)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,6)=3  (5,3)=3  (10,16)=3  (10,17)=3  (11,17)=3  (12,16)=3  (12,17)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=3  (14,6)=3  (15,6)=3  (17,2)=3  (18,1)=3  (18,2)=3 
! size mismatch, 10x10 instead of 19x21

TRAIN e509e548.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|x..x|x..x|x..x at (1,6)
  _01: a rectangle with size (4,5) and color green and mask xxxxx|..x..|..x..|..xxx at (6,0)
  _011: a rectangle with size (3,3) and color green and mask xxx|..x|..x at (0,0)
diff: 
delta:
   (162.2 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask xxxx|x..x|x..x|x..x at (1,6)
  _01: a rectangle with size (4,5) and color red and mask xxxxx|..x..|..x..|..xxx at (6,0)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (176.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|x..x|x..x|x..x at (1,6)
  _01: a rectangle with size (4,5) and color green and mask xxxxx|..x..|..x..|..xxx at (6,0)
  _011: a rectangle with size (3,3) and color green and mask xxx|..x|..x at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 10x11

TRAIN e509e548.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask x....|x....|x...x|xxxxx at (1,1)
  _01: a rectangle with size (4,3) and color green and mask ..x|xxx|x.x|x.x at (7,5)
  _011: a rectangle with size (2,3) and color green and mask x.x|xxx at (12,9)
diff: 
delta: (1,9)=3  (2,9)=3  (2,10)=3  (2,11)=3  (11,0)=3  (11,1)=3  (11,2)=3  (12,2)=3 
   (319.8 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask x....|x....|x...x|xxxxx at (1,1)
  _01: a rectangle with size (4,3) and color red and mask ..x|xxx|x.x|x.x at (7,5)
  _011: a rectangle with size (2,3) and color pink and mask x.x|xxx at (12,9)
  _0111: a rectangle with size (2,3) and color blue and mask x..|xxx at (1,9)
diff: 
delta: (11,0)=1  (11,1)=1  (11,2)=1  (12,2)=1 
   (275.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask x....|x....|x...x|xxxxx at (1,1)
  _01: a rectangle with size (4,3) and color green and mask ..x|xxx|x.x|x.x at (7,5)
  _011: a rectangle with size (2,3) and color green and mask x.x|xxx at (12,9)
diff: 
delta: (1,9)=3  (2,9)=3  (2,10)=3  (2,11)=3  (11,0)=3  (11,1)=3  (11,2)=3  (12,2)=3 
! size mismatch, 10x10 instead of 14x12

TRAIN e509e548.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask .xxx|...x|xxxx at (6,9)
  _01: a rectangle with size (3,5) and color green and mask ...xx|...x.|xxxxx at (4,3)
  _011: a rectangle with size (5,3) and color green and mask x..|x..|xxx|x.x|..x at (0,12)
diff: 
delta: (0,1)=3  (0,3)=3  (1,1)=3  (1,3)=3  (2,1)=3  (2,2)=3  (2,3)=3  (10,11)=3  (11,1)=3  (11,2)=3  (11,3)=3  (11,4)=3  (11,5)=3  (11,6)=3  (11,11)=3  (12,6)=3  (12,11)=3  (12,12)=3  (12,13)=3  (13,6)=3 
! size mismatch, 10x10 instead of 14x16

TEST e509e548.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.6 sec (27.6 sec/task)
bits-train-error = 10734.4 bits (10734.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-36] Checking task e50d258f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 31646.3 = 31655.3
DL output with Mo: L = 9.0 + 3271.0 = 3280.0
DL input+output M: L = 17.9 + 34917.3 = 34935.3

# learning a model for train pairs
2.000	
1.754	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.522	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.432	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.349	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.276	OUT DEF: ^.color=^.layer_011.shape.color
1.227	OUT DEF: ^.layer_0.pos=^.layer_01.pos
1.207	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.197	OUT DEF: ^.size=(?,?)
1.144	OUT DEF: ^.size.j=^.layer_011.shape.size.i - 1
1.134	OUT DEF: ^.layer_0.shape.size=(?,?)
1.088	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.shape.size.i - 2
1.084	IN  DEF: ^.layer_0.shape.color=cyan
1.082	IN  DEF: ^.layer_0111.shape.mask=Full
1.080	IN  DEF: ^.color=black
1.079	IN  DEF: ^.size=(?,?)
1.071	IN  DEF: ^.size.i=10
1.063	IN  DEF: ^.size.j=10
1.061	IN  DEF: ^.layer_0.pos=(?,?)
1.060	IN  DEF: ^.layer_0.shape.size=(?,?)
1.059	IN  DEF: ^.layer_01.pos=(?,?)
1.058	IN  DEF: ^.layer_01.shape.size=(?,?)
1.052	IN  DEF: ^.layer_01.shape.size.j=4
1.051	IN  DEF: ^.layer_011.pos=(?,?)
1.050	IN  DEF: ^.layer_011.shape.size=(?,?)
1.049	IN  DEF: ^.layer_0111.pos=(?,?)
1.048	IN  DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.layer_011.shape.size.i - 1) and color ^.layer_011.shape.color and layers
  _0: a rectangle with size (?,^.layer_01.shape.size.i - 2) and color ? and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,4) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 139.9 + 11630.2 = 11770.1
DL output with Mo: L = 62.3 + 2154.8 = 2217.1
DL input+output M: L = 202.2 + 13785.0 = 13987.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (1,1)
  _011: a rectangle with size (5,4) and color cyan and mask xxxx|x..x|xxxx|x..x|xxxx at (0,6)
  _0111: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff: 
delta: (2,2)=1  (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
   (276.4 bits)
data: a background with size (5,4) and color cyan and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,1)
diff: 
delta: (3,1)=2  (3,2)=1 
   (52.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask Full at (6,3)
  _01: a rectangle with size (5,4) and color cyan and mask xxxx|x..x|xxxx|x..x|xxxx at (0,6)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff: 
delta: (2,2)=1  (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x3 instead of 5x4
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (1,1)
  _011: a rectangle with size (5,4) and color cyan and mask xxxx|x..x|xxxx|x..x|xxxx at (0,6)
  _0111: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff: 
delta: (2,2)=1  (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x4 instead of 5x4

TRAIN e50d258f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
  _0111: a rectangle with size (3,3) and color red and mask Full at (7,1)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,3)=1  (9,2)=1  (9,3)=8 
   (568.1 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|xx.|x.. at (0,0)
diff: 
delta: (1,2)=1  (2,1)=1 
   (61.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
  _0111: a rectangle with size (3,3) and color red and mask Full at (7,1)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,3)=1  (9,2)=1  (9,3)=8 
! size mismatch, 10x3 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _011: a rectangle with size (3,3) and color red and mask .xx|xx.|x.. at (7,1)
  _0111: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,3)=1  (9,2)=1  (9,3)=8 
! size mismatch, 10x2 instead of 3x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,5) and color cyan and mask .xx.x|x.x.x|xxxx.|x..x.|xxx.x|..x.x|...x. at (1,5)
  _01: a rectangle with size (5,4) and color blue and mask Full at (0,0)
  _011: a rectangle with size (3,4) and color blue and mask Full at (5,5)
  _0111: a rectangle with size (3,3) and color red and mask Full at (7,1)
diff: 
delta: (0,3)=8  (1,1)=8  (1,5)=1  (1,8)=1  (2,0)=8  (2,1)=2  (2,2)=8  (2,6)=1  (2,8)=2  (3,3)=8  (3,9)=1  (4,0)=8  (4,2)=8  (4,3)=8  (4,6)=1  (4,7)=2  (4,9)=2  (7,1)=8  (7,5)=8  (7,9)=2  (8,3)=1  (9,2)=1  (9,3)=8 
! size mismatch, 10x2 instead of 3x3

TRAIN e50d258f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (3,6)
  _0111: a rectangle with size (5,1) and color blue and mask Full at (4,8)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (5,1)=1  (5,7)=2  (6,9)=1 
   (318.6 bits)
data: a background with size (6,4) and color blue and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xxx|xx.x|.xxx|xxx.|x.x.|x.xx at (0,0)
diff: 
delta: (0,0)=2  (3,3)=2  (4,1)=2 
   (101.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _011: a rectangle with size (5,1) and color blue and mask Full at (3,6)
  _0111: a rectangle with size (5,1) and color blue and mask Full at (4,8)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (5,1)=1  (5,7)=2  (6,9)=1 
! size mismatch, 10x4 instead of 6x4
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (3,6)
  _0111: a rectangle with size (5,1) and color blue and mask Full at (4,8)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (5,1)=1  (5,7)=2  (6,9)=1 
! size mismatch, 10x4 instead of 6x4

TRAIN e50d258f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,4) and color cyan and mask ..x.|xx.x|..x. at (6,1)
  _011: a rectangle with size (6,3) and color cyan and mask Full at (1,6)
  _0111: a rectangle with size (1,3) and color red and mask Full at (6,2)
diff: 
delta: (0,0)=2  (1,2)=1  (1,6)=2  (1,8)=1  (2,0)=1  (2,1)=2  (2,3)=1  (3,6)=2  (3,7)=1  (4,8)=2  (5,6)=2  (5,8)=1  (6,1)=1  (6,6)=1  (7,3)=1  (8,1)=1  (8,2)=2  (8,4)=1 
! size mismatch, 10x5 instead of 6x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color cyan and mask .x.|xxx|..x|xx.|.x.|.xx at (1,6)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (3,4) and color cyan and mask ..x.|xx.x|..x. at (6,1)
  _0111: a rectangle with size (5,1) and color red and mask Full at (1,6)
diff: 
delta: (0,0)=2  (1,2)=1  (1,8)=1  (2,0)=1  (2,1)=2  (2,3)=1  (3,7)=1  (4,8)=2  (5,8)=1  (6,1)=1  (6,2)=2  (6,4)=2  (6,6)=1  (7,3)=1  (8,1)=1  (8,2)=2  (8,4)=1 
! size mismatch, 10x2 instead of 6x3

TEST e50d258f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 2154.8 bits (2154.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-35] Checking task e6721834.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 96017.1 = 96026.0
DL output with Mo: L = 9.0 + 15851.5 = 15860.4
DL input+output M: L = 17.9 + 111868.5 = 111886.4

# learning a model for train pairs
2.000	
1.249	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.812	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.711	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.658	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.533	OUT OBJECT at ^.layer_010: ^.layer_01.shape at ?
0.495	OUT DEF: ^.size=^.layer_0.shape.size
0.480	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.432	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.396	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.372	OUT DEF: ^.layer_0.shape.size=^.layer_011.shape.size
0.368	OUT DEF: ^.layer_01.shape.mask=Full
0.366	OUT DEF: ^.layer_0.pos=(?,?)
0.363	OUT DEF: ^.layer_010.pos=(?,?)
0.361	OUT DEF: ^.layer_01.pos=(?,?)
0.359	OUT DEF: ^.layer_01.shape.size=(?,?)
0.358	IN  DEF: ^.layer_011.shape.mask=Full
0.358	IN  DEF: ^.size=(?,?)
0.357	IN  DEF: ^.layer_0.pos=(?,?)
0.356	IN  DEF: ^.layer_0.pos.j=(0)
0.354	IN  DEF: ^.layer_0.pos.i=(0)
0.354	IN  DEF: ^.layer_0.shape.size=(?,?)
0.353	IN  DEF: ^.layer_010.pos=(?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size ^.layer_011.shape.size and color ^.layer_01.shape.color and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))
  _010: a rectangle with size ? and color ? and mask ? at (?,?)
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask Full at ?

DL input  with Mi: L = 103.9 + 15216.2 = 15320.1
DL output with Mo: L = 78.5 + 2995.9 = 3074.3
DL input+output M: L = 182.4 + 18212.1 = 18394.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _010: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _01: a rectangle with size (2,7) and color blue and mask Full at (4,2)
  _011: a rectangle with size (5,4) and color blue and mask Full at (7,2)
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,4)=3  (8,3)=3  (8,13)=2  (9,11)=2  (9,13)=2  (10,3)=3  (10,11)=2  (11,4)=3  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
   (798.8 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask xx.x|x.xx|xxxx|x.xx|xx.x at (9,2)
  _010: a rectangle with size (2,7) and color blue and mask Full at (1,8)
  _01: a rectangle with size (5,2) and color green and mask Full at (9,3)
diff: 
delta: (1,11)=2  (2,9)=2  (2,13)=2 
   (137.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _010: a rectangle with size (5,4) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,7) and color blue and mask Full at (4,2)
  _011: a rectangle with size (3,5) and color blue and mask Full at (8,10)
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,4)=3  (8,3)=3  (8,13)=2  (9,11)=2  (9,13)=2  (10,3)=3  (10,11)=2  (11,4)=3  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _010: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _01: a rectangle with size (2,7) and color blue and mask Full at (4,2)
  _011: a rectangle with size (5,4) and color blue and mask Full at (7,2)
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,4)=3  (8,3)=3  (8,13)=2  (9,11)=2  (9,13)=2  (10,3)=3  (10,11)=2  (11,4)=3  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 60 wrong pixels (generated / expected)

TRAIN e6721834.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,20) and color cyan and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _010: a rectangle with size (11,10) and color blue and mask Full at (0,10)
  _01: a rectangle with size (4,3) and color green and mask xxx|.x.|xxx|xxx at (2,2)
  _011: a rectangle with size (3,4) and color green and mask Full at (8,4)
diff: 
delta: (1,15)=8  (1,17)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
   (400.9 bits)
data: a background with size (11,10) and color blue and layers
  _0: a rectangle with size (3,4) and color green and mask Full at (6,1)
  _010: a rectangle with size (4,3) and color green and mask xxx|.x.|xxx|xxx at (0,5)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (1,5)
diff: 
delta: (6,4)=2  (7,2)=2 
   (92.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color red and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _010: a rectangle with size (11,10) and color blue and mask Full at (0,10)
  _01: a rectangle with size (3,4) and color green and mask xxx.|x.xx|xxxx at (8,4)
  _011: a rectangle with size (4,3) and color green and mask Full at (2,2)
diff: 
delta: (1,15)=8  (1,17)=8  (3,2)=8  (3,4)=8  (6,14)=2  (7,12)=2 
! 110 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color cyan and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _010: a rectangle with size (11,10) and color blue and mask Full at (0,10)
  _01: a rectangle with size (3,4) and color green and mask Full at (8,4)
  _011: a rectangle with size (4,3) and color green and mask xxx|.x.|xxx|xxx at (2,2)
diff:   ^.layer_011.shape.mask
delta: (1,15)=8  (1,17)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
! 110 wrong pixels (generated / expected)

TRAIN e6721834.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,16) and color red and layers
  _0: a rectangle with size (10,8) and color yellow and mask Full at (0,0)
  _010: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask xxx|.xx|xxx|.xx at (1,9)
  _011: a rectangle with size (2,3) and color blue and mask Full at (7,10)
diff: 
delta: (2,4)=2  (4,4)=2  (7,12)=6  (8,2)=6 
   (321.9 bits)
data: a background with size (10,8) and color yellow and layers
  _0: a rectangle with size (2,3) and color blue and mask Full at (8,0)
  _010: a rectangle with size (4,3) and color blue and mask xxx|.xx|xxx|.xx at (1,4)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,4)
diff: 
delta: (8,2)=6 
   (70.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color red and layers
  _0: a rectangle with size (10,8) and color yellow and mask Full at (0,0)
  _010: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask xxx|.xx|xxx|.xx at (1,9)
  _011: a rectangle with size (2,3) and color blue and mask Full at (7,10)
diff: 
delta: (2,4)=2  (4,4)=2  (7,12)=6  (8,2)=6 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color blue and layers
  _0: a rectangle with size (10,8) and color yellow and mask Full at (0,0)
  _010: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (8,2) and color blue and mask Full at (1,10)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,9)
diff: 
delta: (2,4)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
! 80 wrong pixels (generated / expected)

TRAIN e6721834.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,12) and color cyan and layers
  _0: a rectangle with size (12,12) and color yellow and mask Full at (0,0)
  _010: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxx.....xxxx|xxx.....xxxx|xxx.....xxxx|xxxxxxxxxxxx|x..xxxxxxxxx|x..xxx.....x|x..xxx.....x|x..xxx.....x|xxxxxxxxxxxx at (12,0)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (15,3)
  _011: a rectangle with size (3,5) and color cyan and mask Full at (20,6)
diff: 
delta: (3,7)=1  (4,8)=1  (6,3)=1  (7,1)=1  (8,3)=1  (16,6)=1  (17,7)=1  (20,1)=1  (20,8)=1  (21,6)=1  (22,8)=1 
! 143 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,12) and color cyan and layers
  _0: a rectangle with size (12,12) and color yellow and mask Full at (0,0)
  _010: a rectangle with size (3,12) and color red and mask Full at (12,0)
  _01: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxx.....xxxx|xxx.....xxxx|xxx.....xxxx|xxxxxxxxxxxx|x..xxxxxxxxx|x..xxx.....x|x..xxx.....x|x..xxx.....x|xxxxxxxxxxxx at (12,0)
  _011: a rectangle with size (3,5) and color cyan and mask Full at (15,3)
diff: 
delta: (3,7)=1  (4,8)=1  (6,3)=1  (7,1)=1  (8,3)=1  (16,6)=1  (17,7)=1  (20,1)=1  (20,8)=1  (21,6)=1  (22,8)=1 
! 144 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (24,12) and color cyan and layers
  _0: a rectangle with size (12,12) and color yellow and mask Full at (0,0)
  _010: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxx.....xxxx|xxx.....xxxx|xxx.....xxxx|xxxxxxxxxxxx|x..xxxxxxxxx|x..xxx.....x|x..xxx.....x|x..xxx.....x|xxxxxxxxxxxx at (12,0)
  _01: a rectangle with size (3,5) and color cyan and mask xxxxx|xxx.x|xxxx. at (15,3)
  _011: a rectangle with size (4,2) and color cyan and mask Full at (19,1)
diff: 
delta: (3,7)=1  (4,8)=1  (6,3)=1  (7,1)=1  (8,3)=1  (16,6)=1  (17,7)=1  (20,1)=1  (20,8)=1  (21,6)=1  (22,8)=1 
! 144 wrong pixels (generated / expected)

TEST e6721834.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.3 sec (27.3 sec/task)
bits-train-error = 2995.9 bits (2995.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-34] Checking task e73095fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 40489.4 = 40498.4
DL output with Mo: L = 9.0 + 50365.6 = 50374.6
DL input+output M: L = 17.9 + 90855.1 = 90873.0

# learning a model for train pairs
2.000	
1.219	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.441	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.346	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.310	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.298	OUT DEF: ^.size=^.size
0.287	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.280	OUT DEF: ^.layer_0=^.layer_0
0.276	IN  DEF: ^.layer_0.shape.color=grey
0.273	OUT DEF: ^.layer_011.shape.color=yellow
0.270	OUT DEF: ^.layer_01.shape.color=yellow
0.269	OUT DEF: ^.layer_01.shape.mask=Full
0.267	OUT DEF: ^.layer_011.shape.mask=Full
0.266	OUT DEF: ^.layer_0111.shape.mask=Full
0.265	IN  DEF: ^.color=black
0.264	OUT DEF: ^.color=black
0.263	IN  DEF: ^.size=(?,?)
0.262	IN  DEF: ^.layer_0.pos=(?,?)
0.258	IN  DEF: ^.layer_0.pos.j=(0)
0.254	IN  DEF: ^.layer_0.pos.i=(0)
0.253	IN  DEF: ^.layer_0.shape.size=(?,?)
0.253	OUT DEF: ^.layer_01.pos=(?,?)
0.252	OUT DEF: ^.layer_01.shape.size=(?,?)
0.251	OUT DEF: ^.layer_011.pos=(?,?)
0.251	OUT DEF: ^.layer_011.shape.size=(?,?)
0.247	OUT DEF: ^.layer_011.shape.size.i=3
0.247	OUT DEF: ^.layer_0111.pos=(?,?)
0.244	OUT DEF: ^.layer_0111.pos.j=12
0.243	OUT DEF: ^.layer_0111.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (3,?) and color yellow and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,12)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at ((0),(0))

DL input  with Mi: L = 43.3 + 8221.5 = 8264.8
DL output with Mo: L = 100.0 + 1854.2 = 1954.1
DL input+output M: L = 143.2 + 10075.7 = 10218.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
diff: 
delta:
   (271.7 bits)
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
  _01: a rectangle with size (5,2) and color yellow and mask Full at (2,6)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (1,18)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (6,12)
diff: 
delta: (2,0)=4 
   (74.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN e73095fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
diff: 
delta:
   (251.1 bits)
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,4)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (5,15)
  _0111: a rectangle with size (6,2) and color black and mask Full at (0,12)
diff: 
delta:
   (55.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN e73095fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
diff: 
delta:
   (299.3 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (11,11)
  _011: a rectangle with size (3,2) and color yellow and mask Full at (5,4)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (2,12)
diff: 
delta:
   (55.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN e73095fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (16,18) and color grey and mask .......x..........|.......x..........|xxx....x..........|..xxxxxxxxxxxxxxxx|xxx....x......x...|.......x......x...|.......x......x...|.......x.....xxxx.|.....xxxxx...x..x.|xxxxxx...xxxxx..xx|.x...x...x...x..x.|.x...xxxxx...xxxx.|.x.....x..........|xxx....x..........|x.x....x..........|xxx....x.......... at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST e73095fd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.1 sec (11.1 sec/task)
bits-train-error = 1854.2 bits (1854.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-33] Checking task e76a88a6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 12519.9 = 12528.9
DL output with Mo: L = 9.0 + 12519.9 = 12528.9
DL input+output M: L = 17.9 + 25039.8 = 25057.7

# learning a model for train pairs
2.000	
1.731	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.462	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.341	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.192	OUT OBJECT at ^.layer_0: ^.layer_01.shape at ?
1.042	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.893	OUT OBJECT at ^.layer_010: ^.layer_01.shape at ?
0.811	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.691	OUT OBJECT at ^.layer_0101: ^.layer_0111.shape at ?
0.571	OUT OBJECT at ^.layer_01011: ^.layer_0111.shape at ?
0.447	OUT OBJECT at ^.layer_011: ^.layer_0111.shape at ?
0.417	OUT DEF: ^.size=^.size
0.399	OUT DEF: ^.layer_0101=^.layer_0111
0.382	OUT DEF: ^.layer_0=^.layer_01
0.365	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.348	OUT DEF: ^.layer_01011.pos=^.layer_0.pos
0.341	IN  DEF: ^.layer_0.shape.color=grey
0.334	IN  DEF: ^.layer_011.shape.color=grey
0.330	IN  DEF: ^.layer_0111.shape.mask=Full
0.326	IN  DEF: ^.layer_0.shape.mask=Full
0.322	IN  DEF: ^.layer_011.shape.mask=Full
0.320	OUT DEF: ^.color=black
0.317	IN  DEF: ^.color=black
0.316	OUT DEF: ^.layer_010.pos=(?,?)
0.308	OUT DEF: ^.layer_010.pos.j=^.layer_0.pos.j
0.302	OUT DEF: ^.layer_010.pos.i=^.layer_0.pos.i + ^.layer_0111.pos.i
0.300	OUT DEF: ^.layer_01.pos=(?,?)
0.293	OUT DEF: ^.layer_01.pos.j=^.layer_011.pos.j
0.287	OUT DEF: ^.layer_01.pos.i=^.layer_011.pos.i + ^.layer_0111.pos.i
0.285	IN  DEF: ^.size=(?,?)
0.271	IN  DEF: ^.size.i=10
0.257	IN  DEF: ^.size.j=10
0.255	IN  DEF: ^.layer_0.pos=(?,?)
0.248	IN  DEF: ^.layer_0.pos.j=6
0.246	IN  DEF: ^.layer_0.shape.size=(?,?)
0.238	IN  DEF: ^.layer_0.shape.size.i=3
0.236	IN  DEF: ^.layer_01.pos=(?,?)
0.229	IN  DEF: ^.layer_01.pos.i=2
0.221	IN  DEF: ^.layer_01.pos.j=1
0.220	IN  DEF: ^.layer_01.shape.size=(?,?)
0.213	IN  DEF: ^.layer_01.shape.size.i=2
0.211	IN  DEF: ^.layer_0111.pos=(?,?)
0.204	IN  DEF: ^.layer_0111.pos.i=1
0.197	IN  DEF: ^.layer_0111.pos.j=1
0.195	IN  DEF: ^.layer_0111.shape.size=(?,?)
0.188	IN  DEF: ^.layer_0111.shape.size.i=2
0.186	IN  DEF: ^.layer_011.pos=(?,?)
0.184	IN  DEF: ^.layer_011.shape.size=(?,?)
0.176	IN  DEF: ^.layer_011.shape.size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_01
  _010: ^.layer_01.shape at (^.layer_0.pos.i + ^.layer_0111.pos.i,^.layer_0.pos.j)
  _0101: ^.layer_0111
  _01011: ^.layer_0111.shape at ^.layer_0.pos
  _01: ^.layer_01.shape at (^.layer_011.pos.i + ^.layer_0111.pos.i,^.layer_011.pos.j)
  _011: ^.layer_0111.shape at ^.layer_011.pos
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,?) and color grey and mask Full at (?,6)
  _01: a rectangle with size (2,?) and color ? and mask ? at (2,1)
  _011: a rectangle with size (3,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (2,?) and color ? and mask Full at (1,1)

DL input  with Mi: L = 149.1 + 1347.1 = 1496.2
DL output with Mo: L = 100.6 + 606.9 = 707.6
DL input+output M: L = 249.8 + 1954.0 = 2203.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (4,6)
  _01: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,2)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
diff: 
delta:
   (54.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _010: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (5,6)
  _0101: a rectangle with size (2,3) and color red and mask Full at (1,1)
  _01011: a rectangle with size (2,3) and color red and mask Full at (4,6)
  _01: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (8,2)
  _011: a rectangle with size (2,3) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (4,6)
  _01: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,2)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN e76a88a6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
   (80.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _010: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (1,6)
  _0101: a rectangle with size (2,4) and color pink and mask Full at (1,1)
  _01011: a rectangle with size (2,4) and color pink and mask Full at (0,6)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (6,4)
  _011: a rectangle with size (2,4) and color pink and mask Full at (5,4)
diff: 
delta: (2,6)=6  (3,1)=6  (7,4)=6 
   (60.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (2,4) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (2,3)=6  (3,1)=6 
! 6 wrong pixels (generated / expected)

TRAIN e76a88a6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the grid could not be parsed with the given template

TEST e76a88a6.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 21.8 sec (21.8 sec/task)
bits-train-error = 606.9 bits (606.9 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-32] Checking task e8593010.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15841.8 = 15850.7
DL output with Mo: L = 9.0 + 15841.8 = 15850.7
DL input+output M: L = 17.9 + 31683.5 = 31701.5

# learning a model for train pairs
2.000	
1.301	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.914	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.824	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.768	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.728	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.692	OUT DEF: ^.size=^.size
0.672	OUT DEF: ^.layer_0=^.layer_0
0.663	OUT DEF: ^.layer_0111.shape.color=blue
0.654	IN  DEF: ^.layer_0.shape.color=grey
0.646	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.635	OUT OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color blue and mask ? at ?
  _01111: a rectangle with size ? and color ? and mask ? at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color grey and mask ? at ?

DL input  with Mi: L = 30.2 + 4609.0 = 4639.2
DL output with Mo: L = 107.4 + 5317.6 = 5425.0
DL input+output M: L = 137.6 + 9926.6 = 10064.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
diff: 
delta:
   (153.6 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
  _01: a rectangle with size (8,1) and color red and mask Full at (2,9)
  _011: a rectangle with size (3,2) and color red and mask Full at (4,4)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (2,6)
  _011111: a rectangle with size (2,1) and color red and mask Full at (5,0)
diff: 
delta:
   (142.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN e8593010.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
diff: 
delta:
   (153.6 bits)
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
  _01: a rectangle with size (6,2) and color red and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (6,6)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (8,0)
  _01111: a rectangle with size (8,1) and color green and mask Full at (1,9)
  _011111: a rectangle with size (6,1) and color green and mask Full at (4,8)
diff: 
delta: (1,3)=3  (3,1)=3  (8,6)=3 
   (208.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN e8593010.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
diff: 
delta:
   (153.6 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
  _01: a rectangle with size (4,3) and color blue and mask Full at (1,2)
  _011: a rectangle with size (2,3) and color red and mask Full at (4,7)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,8)
  _01111: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011111: a rectangle with size (2,1) and color red and mask Full at (2,1)
diff: 
delta: (5,2)=2  (6,2)=2 
   (181.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN e8593010.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxxx..xx|xxx.xx.x.x|xx.xxxxx.x|x..xxxxxxx|.xxxxx.xxx|.xx.xx.x..|xx.xxxxx.x|xx.xxxxxx.|..xxxx.xxx|xxxx.x..x. at (0,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TEST e8593010.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.3 sec (26.3 sec/task)
bits-train-error = 5317.6 bits (5317.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-31] Checking task e8dc4411.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6807.3 = 6816.3
DL output with Mo: L = 9.0 + 14800.4 = 14809.4
DL input+output M: L = 17.9 + 21607.7 = 21625.6

# learning a model for train pairs
2.000	
1.501	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.214	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.981	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.882	OUT OBJECT at ^.layer_00: a rectangle with size ? and color ? and mask ? at ?
0.839	OUT DEF: ^.size=^.size
0.816	OUT DEF: ^.layer_0=^.layer_0
0.808	OUT DEF: ^.layer_00.shape.color=^.color
0.802	IN  DEF: ^.layer_0.pos=(?,?)
0.781	IN  DEF: ^.layer_0.pos.i=5
0.760	IN  OBJECT at ^.layer_01: a point with color ? at ?
0.714	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.694	IN  DEF: ^.layer_0.shape.color=black
0.678	OUT DEF: ^.color=^.color
0.673	IN  DEF: ^.size=(?,?)
0.668	IN  DEF: ^.layer_01.pos=(?,?)
0.662	IN  DEF: ^.layer_0.shape.size=(?,?)
0.657	OUT DEF: ^.layer_00.shape.mask=Full
0.655	OUT DEF: ^.layer_00.pos=(?,?)
0.641	OUT DEF: ^.layer_00.pos.i=(0)
0.635	OUT DEF: ^.layer_00.pos.j=(0)
0.633	OUT DEF: ^.layer_00.shape.size=(?,?)
0.630	OUT DEF: ^.layer_01.pos=(?,?)
0.628	OUT DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: a rectangle with size (?,?) and color ^.color and mask Full at ((0),(0))
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (5,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 64.2 + 2780.6 = 2844.8
DL output with Mo: L = 68.7 + 3052.2 = 3120.9
DL input+output M: L = 132.9 + 5832.8 = 5965.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (5,4)
  _01: a point with color red at (5,6)
diff: 
delta: (3,4)=0  (4,3)=0  (4,5)=0 
   (117.1 bits)
data: a background with size (12,14) and color cyan and layers
  _00: a rectangle with size (4,4) and color cyan and mask Full at (0,0)
  _0: a rectangle with size (1,1) and color black and mask Full at (5,4)
  _01: a rectangle with size (7,8) and color red and mask .x......|x.x.....|.x.x....|..x.x...|...x.x..|....x.x.|.....x.x at (5,5)
diff: 
delta: (3,4)=0  (4,3)=0  (4,5)=0 
   (160.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (7,4) and color cyan and mask Full at (5,0)
  _01: a point with color red at (5,6)
diff:   ^.layer_0.shape.color
delta: (3,4)=0  (4,3)=0  (4,5)=0  (5,4)=0 
! 17 wrong pixels (generated / expected)

TRAIN e8dc4411.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask .x.|xxx|.x. at (5,5)
  _01: a point with color green at (7,4)
diff: 
delta:
   (71.0 bits)
data: a background with size (13,15) and color blue and layers
  _00: a rectangle with size (11,1) and color blue and mask Full at (0,0)
  _0: a rectangle with size (3,3) and color black and mask .x.|xxx|.x. at (5,5)
  _01: a rectangle with size (6,6) and color green and mask x...x.|x..xxx|x.x.x.|xxxx..|x.x...|xx.... at (7,0)
diff: 
delta:
   (75.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (7,5)
  _01: a point with color green at (7,4)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta: (5,6)=0  (6,5)=0  (6,6)=0  (6,7)=0  (7,6)=0 
! 18 wrong pixels (generated / expected)

TRAIN e8dc4411.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
  _01: a point with color cyan at (4,11)
diff: 
delta:
   (90.0 bits)
data: a background with size (12,16) and color yellow and layers
  _00: a rectangle with size (5,11) and color yellow and mask Full at (0,0)
  _0: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
  _01: a rectangle with size (5,5) and color cyan and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (0,11)
diff: 
delta:
   (68.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color black and layers
  _0: a rectangle with size (12,16) and color yellow and mask xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxx.xxxx|xxxxxx..x..xxxxx|xxxxxx..x..xxxxx|xxxxxxxx.xxxxxxx|xxxxxx..x..xxxxx|xxxxxx..x..xxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx at (0,0)
  _01: a point with color cyan at (4,11)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta:
! 21 wrong pixels (generated / expected)

TRAIN e8dc4411.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color green and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (7,0)
  _01: a point with color pink at (5,3)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta: (6,4)=0  (6,6)=0  (7,5)=0  (8,4)=0  (8,6)=0 
! 12 wrong pixels (generated / expected)

TEST e8dc4411.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.2 sec (23.2 sec/task)
bits-train-error = 3052.2 bits (3052.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-30] Checking task e9614598.json: 2 train, 2 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1233.5 = 1242.5
DL output with Mo: L = 9.0 + 3179.9 = 3188.8
DL input+output M: L = 17.9 + 4413.4 = 4431.3

# learning a model for train pairs
2.000	
1.644	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.523	OUT DEF: ^.size=^.size
1.450	OUT DEF: ^.layer_0.shape.mask=.x.|xxx|.x.
1.383	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.303	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.229	IN  DEF: ^.layer_0.shape.color=blue
1.155	IN  DEF: ^.layer_01.shape.color=blue
1.099	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.031	OUT DEF: ^.layer_01=^.layer_01
0.969	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.901	OUT DEF: ^.layer_011=^.layer_0
0.873	OUT DEF: ^.layer_0.shape.color=green
0.848	IN  DEF: ^.color=black
0.830	IN  DEF: ^.size=(?,?)
0.690	IN  DEF: ^.size.i=10
0.551	IN  DEF: ^.size.j=10
0.533	IN  DEF: ^.layer_0.pos=(?,?)
0.515	IN  DEF: ^.layer_01.pos=(?,?)
0.506	OUT DEF: ^.color=black
0.499	OUT DEF: ^.layer_0.pos=(?,?)
0.471	OUT DEF: ^.layer_0.pos.i=3
0.464	OUT DEF: ^.layer_0.shape.size=(?,?)
0.430	OUT DEF: ^.layer_0.shape.size.i=3
0.396	OUT DEF: ^.layer_0.shape.size.j=3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|.x. at (3,?)
  _01: ^.layer_01
  _011: ^.layer_0
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 60.7 + 371.5 = 432.2
DL output with Mo: L = 61.7 + 92.9 = 154.5
DL input+output M: L = 122.4 + 464.4 = 586.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|.x. at (3,3)
  _01: a point with color blue at (4,7)
  _011: a point with color blue at (4,1)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e9614598.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (8,3)
diff: 
delta:
   (18.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|.x. at (3,2)
  _01: a point with color blue at (8,3)
  _011: a point with color blue at (0,3)
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (8,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN e9614598.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color blue at (3,11)
diff:   ^.size.j  ^.size.i
delta:
! 10 wrong pixels (generated / expected)

TEST e9614598.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (6,3)
diff:   ^.size.j
delta:
! 10 wrong pixels (generated / expected)

TEST e9614598.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 92.9 bits (92.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-29] Checking task e98196ab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15106.0 = 15115.0
DL output with Mo: L = 9.0 + 8195.5 = 8204.4
DL input+output M: L = 17.9 + 23301.5 = 23319.4

# learning a model for train pairs
2.000	
1.640	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.611	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.598	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.585	OUT OBJECT at ^.layer_011: a point with color ? at ?
1.572	OUT OBJECT at ^.layer_0111: a point with color ? at ?
1.559	OUT OBJECT at ^.layer_01111: a point with color ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 28.9 + 9652.2 = 9681.0
DL output with Mo: L = 77.2 + 7461.6 = 7538.9
DL input+output M: L = 106.1 + 17113.8 = 17219.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,5)=8  (2,3)=8  (2,7)=8  (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
   (270.1 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _01: a point with color blue at (1,4)
  _011: a point with color blue at (1,6)
  _0111: a point with color cyan at (2,3)
  _01111: a point with color cyan at (2,7)
diff: 
delta: (3,2)=1  (3,8)=1  (4,0)=1  (4,1)=8  (4,9)=8  (4,10)=1 
   (213.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,5)=8  (2,3)=8  (2,7)=8  (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,1)=3  (0,5)=3  (0,9)=3  (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
   (328.2 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,3) and color orange and mask Full at (2,2)
  _01: a point with color green at (0,1)
  _011: a point with color green at (0,5)
  _0111: a point with color green at (0,9)
  _01111: a point with color orange at (0,10)
diff: 
delta: (1,0)=7# (1,8)=7# (2,3)=3  (2,8)=3  (4,0)=7# (4,1)=3  (4,6)=7# (4,10)=7#
   (253.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,1)=3  (0,5)=3  (0,9)=3  (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (1,1)=1  (1,3)=1  (1,4)=1  (1,6)=1  (1,9)=1  (2,6)=1  (3,2)=1  (3,4)=1  (3,7)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
   (366.9 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|x.|.x at (1,6)
  _01: a point with color red at (0,0)
  _011: a point with color red at (0,5)
  _0111: a point with color red at (0,10)
  _01111: a point with color blue at (1,1)
diff: 
delta: (1,3)=1  (1,4)=1  (1,9)=1  (3,2)=1  (3,4)=1  (4,0)=2  (4,4)=2  (4,8)=2  (4,10)=1 
   (280.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (1,1)=1  (1,3)=1  (1,4)=1  (1,6)=1  (1,9)=1  (2,6)=1  (3,2)=1  (3,4)=1  (3,7)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
! size mismatch, 10x10 instead of 5x11

TRAIN e98196ab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,10)=7# (1,2)=7# (1,3)=7# (1,8)=7# (2,6)=7# (3,1)=7# (3,3)=7# (3,10)=7# (4,6)=7# (6,0)=6  (6,4)=6  (6,6)=6  (7,10)=6  (8,0)=6  (8,4)=6  (8,10)=6  (9,9)=6  (10,0)=6  (10,3)=6 
! size mismatch, 10x10 instead of 5x11

TEST e98196ab.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.6 sec (25.6 sec/task)
bits-train-error = 7461.6 bits (7461.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-28] Checking task e9afcf9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2434.9 = 2443.9
DL output with Mo: L = 9.0 + 2434.9 = 2443.9
DL input+output M: L = 17.9 + 4869.9 = 4887.8

# learning a model for train pairs
2.000	
1.394	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.841	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.733	OUT DEF: ^.size=^.size
0.625	OUT DEF: ^.layer_0.shape.size=^.size
0.560	OUT DEF: ^.color=^.color
0.497	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.444	OUT DEF: ^.layer_0.shape.mask=Even Checkboard
0.406	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.386	IN  DEF: ^.layer_0.shape.mask=Full
0.377	IN  DEF: ^.size=(?,?)
0.318	IN  DEF: ^.size.j=6
0.283	IN  DEF: ^.size.i=2
0.274	IN  DEF: ^.layer_0.pos=(?,?)
0.242	IN  DEF: ^.layer_0.pos.j=(0)
0.223	IN  DEF: ^.layer_0.pos.i=0
0.214	IN  DEF: ^.layer_0.shape.size=(?,?)
0.154	IN  DEF: ^.layer_0.shape.size.j=6
0.135	IN  DEF: ^.layer_0.shape.size.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask Even Checkboard at ^.layer_0.pos
WHERE (Mi)
a background with size (2,6) and color ? and layers
  _0: a rectangle with size (1,6) and color ? and mask Full at (0,(0))

DL input  with Mi: L = 49.7 + 252.2 = 301.9
DL output with Mo: L = 27.8 + 0.0 = 27.8
DL input+output M: L = 77.5 + 252.2 = 329.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,6) and color brown and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (0,0)
diff: 
delta:
   (12.6 bits)
data: a background with size (2,6) and color brown and layers
  _0: a rectangle with size (2,6) and color green and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color brown and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (2,6) and color cyan and layers
  _0: a rectangle with size (1,6) and color yellow and mask Full at (0,0)
diff: 
delta:
   (12.6 bits)
data: a background with size (2,6) and color cyan and layers
  _0: a rectangle with size (2,6) and color yellow and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color cyan and layers
  _0: a rectangle with size (1,6) and color yellow and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,6) and color pink and mask Full at (0,0)
diff: 
delta:
correct output grid

TEST e9afcf9a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-27] Checking task ea32f347.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11723.0 = 11732.0
DL output with Mo: L = 9.0 + 11723.0 = 11732.0
DL input+output M: L = 17.9 + 23446.0 = 23464.0

# learning a model for train pairs
2.000	
1.692	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.384	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.167	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.951	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.836	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.722	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.656	OUT DEF: ^.size=^.size
0.618	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.582	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.545	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.509	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.474	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.443	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.427	OUT DEF: ^.layer_0.shape.color=blue
0.411	OUT DEF: ^.layer_01.shape.color=yellow
0.396	OUT DEF: ^.layer_011.shape.color=red
0.380	IN  DEF: ^.layer_0.shape.color=grey
0.372	OUT DEF: ^.layer_0.shape.mask=Full
0.356	IN  DEF: ^.layer_01.shape.color=grey
0.348	OUT DEF: ^.layer_01.shape.mask=Full
0.333	IN  DEF: ^.layer_011.shape.color=grey
0.325	IN  DEF: ^.layer_0.shape.mask=Full
0.317	IN  DEF: ^.layer_01.shape.mask=Full
0.309	OUT DEF: ^.layer_011.shape.mask=Full
0.301	IN  DEF: ^.layer_011.shape.mask=Full
0.295	OUT DEF: ^.color=black
0.290	IN  DEF: ^.color=black
0.286	IN  DEF: ^.size=(?,?)
0.256	IN  DEF: ^.size.i=10
0.226	IN  DEF: ^.size.j=10
0.222	IN  DEF: ^.layer_0.pos=(?,?)
0.218	IN  DEF: ^.layer_0.shape.size=(?,?)
0.214	IN  DEF: ^.layer_01.pos=(?,?)
0.210	IN  DEF: ^.layer_01.shape.size=(?,?)
0.205	IN  DEF: ^.layer_011.pos=(?,?)
0.201	IN  DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask Full at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color yellow and mask Full at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color red and mask Full at ^.layer_011.pos
WHERE (Mi)
a background with size (10,10) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 109.7 + 2185.7 = 2295.4
DL output with Mo: L = 66.4 + 0.0 = 66.4
DL input+output M: L = 176.1 + 2185.7 = 2361.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color grey and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,7)
diff: 
delta:
   (54.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color grey and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,7)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,7)
diff: 
delta:
   (53.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (5,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,7)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (7,2)
diff: 
delta:
   (54.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (7,2)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color grey and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (56.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color red and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (1,4) and color grey and mask Full at (2,1)
  _011: a rectangle with size (1,5) and color grey and mask Full at (5,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (2,1)
  _01: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _011: a rectangle with size (1,5) and color grey and mask Full at (5,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color grey and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color grey and mask Full at (2,1)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/4: 1 3rd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (5,4)
  _01: a rectangle with size (1,5) and color grey and mask Full at (8,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (1,3)
diff: 
delta:
correct output grid

TEST ea32f347.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-26] Checking task ea786f4a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1248.4 = 1257.4
DL output with Mo: L = 9.0 + 5271.0 = 5280.0
DL input+output M: L = 17.9 + 6519.4 = 6537.4

# learning a model for train pairs
2.000	
1.422	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.298	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.188	IN  DEF: ^.layer_0.shape.color=black
1.103	OUT DEF: ^.size=^.size
1.018	OUT DEF: ^.layer_0.shape.size=^.size
0.990	IN  DEF: ^.size=(?,?)
0.962	IN  DEF: ^.layer_0.pos=(?,?)
0.936	OUT DEF: ^.layer_0.shape.color=^.color
0.927	OUT DEF: ^.color=black
0.921	OUT DEF: ^.layer_0.pos=(?,?)
0.901	OUT DEF: ^.layer_0.pos.i=(0)
0.880	OUT DEF: ^.layer_0.pos.j=(0)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color black at (?,?)

DL input  with Mi: L = 32.9 + 860.5 = 893.3
DL output with Mo: L = 29.7 + 867.6 = 897.3
DL input+output M: L = 62.5 + 1728.1 = 1790.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a point with color black at (1,1)
diff: 
delta:
   (24.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a point with color black at (1,1)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN ea786f4a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a point with color black at (2,2)
diff: 
delta:
   (29.2 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xxx.|x.x.x|xx.xx|x.x.x|.xxx. at (0,0)
diff: 
delta:
   (28.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a point with color black at (2,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN ea786f4a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color green and layers
  _0: a point with color black at (3,3)
diff: 
delta:
   (32.1 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask .xxxxx.|x.xxx.x|xx.x.xx|xxx.xxx|xx.x.xx|x.xxx.x|.xxxxx. at (0,0)
diff: 
delta:
   (52.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color green and layers
  _0: a point with color black at (3,3)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN ea786f4a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color pink and layers
  _0: a point with color black at (5,5)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TEST ea786f4a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 867.6 bits (867.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-25] Checking task eb281b96.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8193.7 = 8202.7
DL output with Mo: L = 9.0 + 28465.3 = 28474.3
DL input+output M: L = 17.9 + 36659.1 = 36677.0

# learning a model for train pairs
2.000	
1.176	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.458	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.450	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.446	IN  DEF: ^.color=black
0.443	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.440	IN  DEF: ^.size=(?,?)
0.415	IN  DEF: ^.size.j=17
0.413	IN  DEF: ^.layer_0.pos=(?,?)
0.399	IN  DEF: ^.layer_0.pos.j=(0)
0.392	IN  DEF: ^.layer_0.pos.i=(0)
0.389	IN  DEF: ^.layer_0.shape.size=(?,?)
0.364	IN  DEF: ^.layer_0.shape.size.j=17
0.363	OUT DEF: ^.color=black
0.363	OUT DEF: ^.size=(?,?)
0.355	OUT DEF: ^.size.j=^.size.j
0.355	OUT DEF: ^.layer_0.shape.size=(?,?)
0.347	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.size.j) and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,17) and color black and layers
  _0: a rectangle with size (?,17) and color ? and mask ? at ((0),(0))

DL input  with Mi: L = 56.3 + 1580.3 = 1636.6
DL output with Mo: L = 36.1 + 4168.9 = 4204.9
DL input+output M: L = 92.4 + 5749.2 = 5841.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
   (69.7 bits)
data: a background with size (9,17) and color black and layers
  _0: a rectangle with size (9,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|..x...x...x...x.. at (0,0)
diff: 
delta:
   (173.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 9x17

TRAIN eb281b96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,17) and color black and layers
  _0: a rectangle with size (4,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
   (88.3 bits)
data: a background with size (13,17) and color black and layers
  _0: a rectangle with size (13,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|..x...x...x...x.. at (0,0)
diff: 
delta:
   (243.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,17) and color black and layers
  _0: a rectangle with size (4,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 13x17

TRAIN eb281b96.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,17) and color black and layers
  _0: a rectangle with size (5,17) and color green and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 17x17

TEST eb281b96.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 4168.9 bits (4168.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-24] Checking task eb5a1d5d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 146454.9 = 146463.8
DL output with Mo: L = 9.0 + 7009.0 = 7018.0
DL input+output M: L = 17.9 + 153463.9 = 153481.8

# learning a model for train pairs
2.000	
1.187	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.668	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.541	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.420	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.382	OUT DEF: ^.color=^.color
0.366	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.346	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.336	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.331	OUT DEF: ^.size=(?,?)
0.326	OUT DEF: ^.layer_0.pos=(?,?)
0.321	OUT DEF: ^.layer_0.shape.size=(?,?)
0.298	OUT DEF: ^.layer_0.shape.size.j=3
0.293	OUT DEF: ^.layer_01.pos=(?,?)
0.288	OUT DEF: ^.layer_01.shape.size=(?,?)
0.287	IN  DEF: ^.layer_01.shape.mask=Full
0.287	IN  DEF: ^.size=(?,?)
0.287	IN  DEF: ^.layer_0.pos=(?,?)
0.286	IN  DEF: ^.layer_0.shape.size=(?,?)
0.286	IN  DEF: ^.layer_01.pos=(?,?)
0.286	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
  _0: a rectangle with size (?,3) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 70.2 + 9208.9 = 9279.2
DL output with Mo: L = 70.4 + 1491.9 = 1562.3
DL input+output M: L = 140.6 + 10700.8 = 10841.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,27) and color cyan and layers
  _0: a rectangle with size (16,18) and color green and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (2,3)
  _01: a rectangle with size (6,6) and color red and mask Full at (9,6)
diff: 
delta:
   (391.3 bits)
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
diff: 
delta:
   (43.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,27) and color cyan and layers
  _0: a rectangle with size (16,18) and color green and mask xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxx......xxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxx at (2,3)
  _01: a rectangle with size (6,6) and color red and mask Full at (9,6)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (23,27) and color green and layers
  _0: a rectangle with size (23,27) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (6,6) and color red and mask Full at (9,6)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5
>> Trial 3
data: a background with size (23,27) and color green and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (9,6)
  _01: a rectangle with size (23,27) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx...xxxxxx.........xxxxxx|xxx...xxxxxx.........xxxxxx|xxx...xxxxxx.........xxxxxx|xxx...xxxxxx.........xxxxxx|xxx...xxxxxx.........xxxxxx|xxx...xxxxxx.........xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxx..................xxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff:   ^.layer_01.shape.mask
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN eb5a1d5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,25) and color grey and layers
  _0: a rectangle with size (3,25) and color grey and mask Full at (0,0)
  _01: a rectangle with size (13,15) and color pink and mask Full at (3,4)
diff: 
delta:
   (102.9 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,1)
diff: 
delta:
   (31.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color grey and layers
  _0: a rectangle with size (13,15) and color pink and mask Full at (3,4)
  _01: a rectangle with size (3,25) and color grey and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (22,25) and color grey and layers
  _0: a rectangle with size (3,25) and color grey and mask Full at (0,0)
  _01: a rectangle with size (13,15) and color pink and mask Full at (3,4)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN eb5a1d5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (9,9) and color red and mask Full at (5,5)
  _01: a rectangle with size (14,14) and color cyan and mask Full at (3,3)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
   (426.7 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (5,5) and color cyan and mask Full at (1,1)
diff: 
delta: (3,3)=1 
   (74.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (9,9) and color red and mask Full at (5,5)
  _01: a rectangle with size (14,14) and color cyan and mask Full at (3,3)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xx.........xxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,3)
  _01: a rectangle with size (9,9) and color red and mask Full at (5,5)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
! size mismatch, 10x10 instead of 7x7

TRAIN eb5a1d5d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,27) and color red and layers
  _0: a rectangle with size (14,14) and color green and mask Full at (7,6)
  _01: a rectangle with size (19,20) and color blue and mask Full at (5,3)
diff: 
delta: (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,16)=8  (10,17)=8  (11,9)=8  (11,10)=8  (11,11)=8  (11,12)=2  (11,13)=2  (11,14)=2  (11,15)=2  (11,16)=8  (11,17)=8  (12,9)=8  (12,10)=8  (12,11)=8  (12,12)=2  (12,13)=2  (12,14)=2  (12,15)=2  (12,16)=8  (12,17)=8  (13,9)=8  (13,10)=8  (13,11)=8  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (13,16)=8  (13,17)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=2  (14,13)=2  (14,14)=2  (14,15)=2  (14,16)=8  (14,17)=8  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (26,27) and color red and layers
  _0: a rectangle with size (19,20) and color blue and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxx..............xxx|xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx at (5,3)
  _01: a rectangle with size (14,14) and color green and mask xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxx.........xx|xxx.........xx|xxx.........xx|xxx.........xx|xxx.........xx|xxx.........xx|xxx.........xx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (7,6)
diff:   ^.layer_01.shape.mask
delta: (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,16)=8  (10,17)=8  (11,9)=8  (11,10)=8  (11,11)=8  (11,16)=8  (11,17)=8  (12,9)=8  (12,10)=8  (12,11)=8  (12,16)=8  (12,17)=8  (13,9)=8  (13,10)=8  (13,11)=8  (13,16)=8  (13,17)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,16)=8  (14,17)=8  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8 
! size mismatch, 10x10 instead of 9x9

TEST eb5a1d5d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.8 sec (6.8 sec/task)
bits-train-error = 1491.9 bits (1491.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-23] Checking task ec883f72.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14046.4 = 14055.4
DL output with Mo: L = 9.0 + 16491.6 = 16500.6
DL input+output M: L = 17.9 + 30538.1 = 30556.0

# learning a model for train pairs
2.000	
1.483	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.958	OUT OBJECT at ^.layer_0: ^.layer_0.shape at ?
0.774	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.555	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.511	OUT DEF: ^.size=^.size
0.472	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.447	OUT DEF: ^.layer_0=^.layer_0
0.422	OUT DEF: ^.layer_01=^.layer_01
0.411	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.404	IN  DEF: ^.layer_01.shape.mask=Full
0.400	IN  DEF: ^.color=black
0.396	OUT DEF: ^.color=black
0.393	IN  DEF: ^.size=(?,?)
0.389	IN  DEF: ^.layer_0.pos=(?,?)
0.386	IN  DEF: ^.layer_0.shape.size=(?,?)
0.383	IN  DEF: ^.layer_01.pos=(?,?)
0.379	IN  DEF: ^.layer_01.shape.size=(?,?)
0.376	OUT DEF: ^.layer_011.pos=(?,?)
0.373	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j + ^.layer_0.shape.size.j
0.370	OUT DEF: ^.layer_011.shape.size=(?,?)
0.359	OUT DEF: ^.layer_011.shape.size.i=^.layer_01.shape.size.i
0.349	OUT DEF: ^.layer_011.shape.size.j=^.layer_01.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.i) and color ^.layer_01.shape.color and mask ? at (?,^.layer_0.pos.j + ^.layer_0.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 68.4 + 3743.9 = 3812.3
DL output with Mo: L = 61.9 + 1215.7 = 1277.5
DL input+output M: L = 130.2 + 4959.6 = 5089.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
   (80.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color green and mask Even Checkboard at (4,4)
diff: 
delta:
   (10.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|xx.x|...x|xxxx at (0,0)
diff:   ^.layer_01.shape.mask
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,4) and color brown and mask Full at (3,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta: (0,3)=9# (1,3)=9# (2,3)=9#
! 9 wrong pixels (generated / expected)

TRAIN ec883f72.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
diff: 
delta:
   (78.4 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color pink and mask Full at (3,7)
diff: 
delta: (3,1)=6  (4,0)=6 
   (46.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (3,5) and color cyan and mask x.x.x|x...x|xxxxx at (0,2)
diff:   ^.layer_01.shape.mask
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,3) and color black and mask Full at (0,3)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (0,2)
diff: 
delta: (0,4)=6 
! 7 wrong pixels (generated / expected)

TRAIN ec883f72.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
diff: 
delta:
   (94.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (3,7)
diff: 
delta: (4,0)=2 
   (31.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _01: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x.xx.x|x.xx.x at (5,1)
diff:   ^.layer_01.shape.mask
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,4) and color black and mask Full at (6,2)
  _01: a rectangle with size (4,6) and color yellow and mask Full at (5,1)
diff: 
delta: (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
! 18 wrong pixels (generated / expected)

TRAIN ec883f72.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
diff: 
delta:
   (121.7 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (5,5) and color yellow and mask ....x|...x.|..x..|.x...|x.... at (0,6)
diff: 
delta:
   (33.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|xxxx.x|xxxx.x|xxxx.x|xxxx.x|xxxx.x at (5,0)
diff:   ^.layer_01.shape.mask
delta:
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (7,1) and color grey and mask Full at (5,5)
diff: 
delta: (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5#
! 50 wrong pixels (generated / expected)

TRAIN ec883f72.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask x....x|x....x|x....x|x....x|xxxxxx at (0,4)
  _01: a rectangle with size (3,2) and color yellow and mask Full at (0,6)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (0,6)
  _01: a rectangle with size (5,6) and color green and mask x.xx.x|x.xx.x|x.xx.x|x....x|xxxxxx at (0,4)
diff:   ^.layer_01.shape.mask
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color black and mask Full at (0,5)
  _01: a rectangle with size (5,6) and color green and mask Full at (0,4)
diff: 
delta: (0,6)=4  (0,7)=4  (1,6)=4  (1,7)=4  (2,6)=4  (2,7)=4 
! 22 wrong pixels (generated / expected)

TEST ec883f72.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.2 sec (6.2 sec/task)
bits-train-error = 1215.7 bits (1215.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-22] Checking task ecdecbb3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 14515.2 = 14524.1
DL output with Mo: L = 9.0 + 26119.1 = 26128.1
DL input+output M: L = 17.9 + 40634.3 = 40652.2

# learning a model for train pairs
2.000	
1.541	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.144	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.840	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.607	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.492	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.468	OUT DEF: ^.size=^.size
0.452	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 3387.7 = 3435.7
DL output with Mo: L = 85.0 + 5547.9 = 5632.9
DL input+output M: L = 133.0 + 8935.7 = 9068.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
diff: 
delta: (10,8)=2 
   (99.9 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,13) and color cyan and mask .xxx...xxx...|xx.xxxxx.xxxx|.xxx...xxx... at (5,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (6,8)
  _0111: a rectangle with size (3,1) and color red and mask Full at (8,8)
diff: 
delta:
   (156.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
diff: 
delta: (10,8)=2 
! 35 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
diff: 
delta: (4,8)=2 
   (109.6 bits)
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,3) and color cyan and mask .x.|.x.|.x.|xxx|x.x|xxx|.x.|.x.|.x.|.x.|.x.|.x.|.x. at (0,2)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
  _011: a rectangle with size (1,10) and color red and mask Full at (4,3)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (3,13)
diff: 
delta: (4,14)=2 
   (193.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
diff: 
delta: (4,8)=2 
! 50 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
diff: 
delta: (2,8)=2  (10,4)=2 
   (129.3 bits)
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (3,12) and color cyan and mask ...xxx.xxx..|xxxx.xxx.xxx|...xxx.xxx.. at (6,0)
  _01: a rectangle with size (3,12) and color cyan and mask ...xxx......|xxxx.xxxxxxx|...xxx...... at (12,0)
  _011: a rectangle with size (7,1) and color red and mask Full at (7,4)
  _0111: a rectangle with size (6,1) and color red and mask Full at (2,8)
diff: 
delta:
   (204.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
diff: 
delta: (2,8)=2  (10,4)=2 
! 53 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (17,1) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (17,1) and color cyan and mask Full at (0,12)
diff: 
delta: (1,15)=2  (2,1)=2  (8,8)=2  (14,16)=2 
! 80 wrong pixels (generated / expected)

TEST ecdecbb3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.0 sec (28.0 sec/task)
bits-train-error = 5547.9 bits (5547.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-21] Checking task ed36ccf7.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3141.2 = 3150.1
DL output with Mo: L = 9.0 + 3141.2 = 3150.1
DL input+output M: L = 17.9 + 6282.3 = 6300.2

# learning a model for train pairs
2.000	
1.616	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.232	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.076	OUT DEF: ^.size=^.size
0.974	OUT DEF: ^.color=^.color
0.915	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.856	IN  DEF: ^.layer_0.shape.color=black
0.841	OUT DEF: ^.layer_0.pos=(?,?)
0.805	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.i
0.789	OUT DEF: ^.layer_0.shape.size=(?,?)
0.732	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j
0.680	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
0.665	IN  DEF: ^.size=(?,?)
0.596	IN  DEF: ^.size.i=3
0.527	IN  DEF: ^.size.j=3
0.511	IN  DEF: ^.layer_0.pos=(?,?)
0.496	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.j,^.layer_0.shape.size.i) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.i)
WHERE (Mi)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)

DL input  with Mi: L = 48.5 + 1128.0 = 1176.4
DL output with Mo: L = 42.1 + 343.9 = 386.0
DL input+output M: L = 90.6 + 1471.8 = 1562.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (0,1)
diff: 
delta:
   (22.7 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color black and mask Full at (0,0)
diff: 
delta:
   (5.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN ed36ccf7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|..x at (1,0)
diff: 
delta:
   (32.7 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,2) and color black and mask xx|x.|x. at (0,1)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|..x at (1,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,3) and color black and mask Full at (1,0)
diff: 
delta: (2,2)=0 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,1) and color black and mask Full at (1,2)
diff: 
delta: (1,0)=0  (1,1)=0 
! 2 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (0,0)
diff: 
delta:
   (24.7 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (1,0)
diff: 
delta:
   (5.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color black and mask Full at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|..x|xxx at (0,0)
diff:   ^.layer_0.shape.color
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color brown and mask Full at (2,0)
diff:   ^.layer_0.shape.color
delta: (0,2)=9# (1,2)=9#
! 2 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color black and mask .x|xx|x. at (0,0)
diff: 
delta:
   (32.7 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color black and mask xx.|.xx at (1,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color black and mask .x|xx|x. at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask .x|.x|xx at (0,1)
diff:   ^.layer_0.shape.color
delta: (0,0)=2 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (1,0)
diff: 
delta: (0,1)=0  (2,0)=0 
! 4 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask x..|.xx at (1,0)
diff:   ^.layer_0.shape.color
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (2,1)
diff:   ^.layer_0.shape.color
delta: (1,0)=5#
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (1,0)
diff:   ^.layer_0.shape.color
delta: (2,1)=5# (2,2)=5#
! 4 wrong pixels (generated / expected)

TEST ed36ccf7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 343.9 bits (343.9 bits/task)
acc-train-micro = 0.25 tasks (25.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-20] Checking task ef135b50.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 21596.0 = 21604.9
DL output with Mo: L = 9.0 + 26339.3 = 26348.2
DL input+output M: L = 17.9 + 47935.2 = 47953.2

# learning a model for train pairs
2.000	
1.760	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.529	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.316	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.109	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.984	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
0.798	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
0.636	OUT OBJECT at ^.layer_011: ^.layer_011.shape at ?
0.551	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.529	OUT DEF: ^.size=^.size
0.517	OUT DEF: ^.layer_00=^.layer_0
0.504	OUT DEF: ^.layer_01=^.layer_01
0.499	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.496	OUT DEF: ^.layer_0.shape.mask=Full
0.484	OUT DEF: ^.layer_011=^.layer_011
0.479	OUT DEF: ^.layer_01111.shape.color=brown
0.476	OUT DEF: ^.layer_01111.shape.mask=Full
0.470	IN  DEF: ^.layer_0.shape.color=red
0.463	IN  DEF: ^.layer_01.shape.color=red
0.460	IN  DEF: ^.layer_0.shape.mask=Full
0.457	IN  DEF: ^.layer_01.shape.mask=Full
0.454	OUT DEF: ^.layer_0111.shape.mask=Full
0.448	IN  DEF: ^.layer_011.shape.color=red
0.444	IN  DEF: ^.layer_011.shape.mask=Full
0.442	IN  DEF: ^.color=black
0.441	OUT DEF: ^.color=black
0.439	IN  DEF: ^.size=(?,?)
0.427	IN  DEF: ^.size.i=10
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size ? and color ? and mask Full at ?
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size ? and color ? and mask Full at ?
  _01111: a rectangle with size ? and color brown and mask Full at ?
WHERE (Mi)
a background with size (10,?) and color black and layers
  _0: a rectangle with size ? and color red and mask Full at ?
  _01: a rectangle with size ? and color red and mask Full at ?
  _011: a rectangle with size ? and color red and mask Full at ?

DL input  with Mi: L = 76.2 + 6286.0 = 6362.1
DL output with Mo: L = 77.1 + 3410.2 = 3487.4
DL input+output M: L = 153.3 + 9696.2 = 9849.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (4,2) and color red and mask Full at (6,3)
diff: 
delta:
   (77.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _0: a rectangle with size (2,4) and color brown and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (4,2) and color red and mask Full at (6,3)
  _0111: a rectangle with size (1,7) and color black and mask Full at (5,0)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (6,5)
diff: 
delta:
   (74.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (4,2) and color red and mask Full at (6,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN ef135b50.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _01: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _011: a rectangle with size (4,2) and color red and mask Full at (0,0)
diff: 
delta: (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
   (235.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _0: a rectangle with size (2,5) and color brown and mask Full at (2,2)
  _01: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _011: a rectangle with size (4,2) and color red and mask Full at (0,0)
  _0111: a rectangle with size (4,2) and color red and mask Full at (5,3)
  _01111: a rectangle with size (1,2) and color brown and mask Full at (5,5)
diff: 
delta: (8,5)=9#
   (94.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _01: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _011: a rectangle with size (4,2) and color red and mask Full at (0,0)
diff: 
delta: (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _01: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _011: a rectangle with size (4,2) and color red and mask Full at (5,3)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (3,0)=2  (3,1)=2 
! 21 wrong pixels (generated / expected)

TRAIN ef135b50.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color red and mask Full at (3,5)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,0)
  _011: a rectangle with size (3,4) and color red and mask Full at (7,0)
diff: 
delta: (0,6)=2  (0,7)=2  (0,8)=2  (0,9)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (6,9)=2  (7,9)=2  (8,9)=2  (9,9)=2 
   (315.5 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (6,3) and color red and mask Full at (3,5)
  _0: a rectangle with size (2,4) and color red and mask Full at (0,6)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,0)
  _011: a rectangle with size (3,4) and color red and mask Full at (7,0)
  _0111: a rectangle with size (4,1) and color red and mask Full at (6,9)
  _01111: a rectangle with size (3,1) and color brown and mask Full at (6,8)
diff: 
delta: (1,4)=9# (1,5)=9# (3,4)=9# (7,4)=9# (8,4)=9#
   (171.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color red and mask Full at (3,5)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,0)
  _011: a rectangle with size (3,4) and color red and mask Full at (7,0)
diff: 
delta: (0,6)=2  (0,7)=2  (0,8)=2  (0,9)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (6,9)=2  (7,9)=2  (8,9)=2  (9,9)=2 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (6,3) and color red and mask Full at (3,5)
  _011: a rectangle with size (3,4) and color red and mask Full at (7,0)
diff: 
delta: (0,6)=2  (0,7)=2  (0,8)=2  (0,9)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (6,9)=2  (7,9)=2  (8,9)=2  (9,9)=2 
! 22 wrong pixels (generated / expected)

TRAIN ef135b50.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask Full at (3,1)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,6)
  _011: a rectangle with size (2,4) and color red and mask Full at (5,5)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2 
! 13 wrong pixels (generated / expected)

TEST ef135b50.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.5 sec (25.5 sec/task)
bits-train-error = 3410.2 bits (3410.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-19] Checking task f15e1fac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 3957.6 = 3966.5
DL output with Mo: L = 9.0 + 27744.2 = 27753.2
DL input+output M: L = 17.9 + 31701.8 = 31719.7

# learning a model for train pairs
2.000	
1.566	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.362	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.305	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.277	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.248	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.218	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.185	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.148	IN  OBJECT at ^.layer_01111: a point with color ? at ?
1.125	OUT DEF: ^.size=^.size
1.115	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: ^.layer_0111.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?

DL input  with Mi: L = 70.6 + 3271.4 = 3342.0
DL output with Mo: L = 75.9 + 7490.6 = 7566.5
DL input+output M: L = 146.5 + 10762.0 = 10908.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,12) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (0,5)
  _011: a point with color cyan at (0,7)
  _0111: a point with color red at (4,0)
  _01111: a point with color cyan at (0,9)
diff: 
delta: (10,0)=2 
   (126.1 bits)
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (17,7) and color cyan and mask x.x.x..|x.x.x..|x.x.x..|x.x.x..|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x at (0,5)
  _01: a rectangle with size (17,3) and color cyan and mask x..|x..|x..|x..|.x.|.x.|.x.|.x.|.x.|.x.|..x|..x|..x|..x|..x|..x|..x at (0,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _0111: a point with color red at (10,0)
diff: 
delta:
   (283.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (0,5)
  _011: a point with color cyan at (0,7)
  _0111: a point with color cyan at (0,9)
  _01111: a point with color red at (4,0)
diff: 
delta: (10,0)=2 
! 72 wrong pixels (generated / expected)

TRAIN f15e1fac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (3,9)
  _0111: a point with color red at (7,9)
  _01111: a point with color red at (11,9)
diff: 
delta:
   (100.4 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (14,4) and color cyan and mask ...x|...x|...x|..x.|..x.|..x.|..x.|.x..|.x..|.x..|.x..|x...|x...|x... at (0,3)
  _01: a rectangle with size (11,3) and color cyan and mask ..x|..x|..x|.x.|.x.|.x.|.x.|x..|x..|x..|x.. at (0,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,9)
  _0111: a point with color red at (7,9)
diff: 
delta: (11,9)=2 
   (218.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (3,9)
  _0111: a point with color red at (7,9)
  _01111: a point with color red at (11,9)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN f15e1fac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color cyan at (6,0)
  _011: a point with color cyan at (9,0)
  _0111: a point with color red at (11,4)
  _01111: a point with color red at (11,8)
diff: 
delta:
   (100.7 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (0,0)
  _01: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (4,0)
  _011: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (7,0)
  _0111: a point with color red at (11,4)
diff: 
delta: (11,8)=2 
   (247.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color cyan at (6,0)
  _011: a point with color cyan at (9,0)
  _0111: a point with color red at (11,4)
  _01111: a point with color red at (11,8)
diff: 
delta:
! 42 wrong pixels (generated / expected)

TRAIN f15e1fac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _0: a point with color cyan at (2,16)
  _01: a point with color cyan at (5,16)
  _011: a point with color cyan at (8,16)
  _0111: a point with color cyan at (10,16)
  _01111: a point with color red at (11,2)
diff: 
delta: (11,6)=2  (11,11)=2 
! 72 wrong pixels (generated / expected)

TEST f15e1fac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.3 sec (20.3 sec/task)
bits-train-error = 7490.6 bits (7490.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-18] Checking task f1cefba8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 78860.3 = 78869.3
DL output with Mo: L = 9.0 + 85024.1 = 85033.1
DL input+output M: L = 17.9 + 163884.4 = 163902.3

# learning a model for train pairs
2.000	
1.384	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.843	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.443	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.310	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.254	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.220	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 4607.6 = 4655.6
DL output with Mo: L = 85.3 + 13584.5 = 13669.8
DL input+output M: L = 133.3 + 18192.1 = 18325.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (9,7) and color red and mask Full at (4,3)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
diff: 
delta: (3,7)=2  (6,10)=2  (13,4)=2 
   (163.9 bits)
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (13,11) and color cyan and mask xxxxxxxxxxx|xxxxxxxxxxx|xx.x..x..xx|xx.x..x..xx|xxxxxxxxxxx|xx.x..x..xx|xx.x..x..xx|xx.x..x..xx|xx.x..x..xx|xx.x..x..xx|xx.x..x..xx|xxxxxxxxxxx|xxxxxxxxxxx at (2,1)
  _01: a rectangle with size (6,7) and color red and mask Full at (7,3)
  _011: a rectangle with size (2,7) and color red and mask Full at (4,3)
  _0111: a rectangle with size (19,1) and color red and mask Full at (0,4)
diff: 
delta: (0,7)=2  (1,7)=2  (6,0)=2  (6,12)=2  (15,7)=2  (16,7)=2  (17,7)=2  (18,7)=2 
   (475.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (9,7) and color red and mask Full at (4,3)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
diff: 
delta: (3,7)=2  (6,10)=2  (13,4)=2 
! size mismatch, 10x10 instead of 19x13

TRAIN f1cefba8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..x......|xxxxxxxx.|xxxxxxxxx|xxxxxxxx.|xxxxxxxx.|....x.... at (5,4)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
diff: 
delta:
   (152.6 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (8,12) and color blue and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xx..x.x...xx|xxxxxxxxxxxx|xx..x.x...xx|xx..x.x...xx|xxxxxxxxxxxx|xxxxxxxxxxxx at (4,2)
  _01: a rectangle with size (2,8) and color yellow and mask Full at (8,4)
  _011: a rectangle with size (15,1) and color yellow and mask Full at (0,6)
  _0111: a rectangle with size (15,1) and color yellow and mask Full at (0,8)
diff: 
delta: (6,4)=4  (6,5)=4  (6,7)=4  (6,9)=4  (6,10)=4  (6,11)=4  (7,0)=4  (7,1)=4  (7,14)=4  (7,15)=4  (7,16)=4 
   (486.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..x......|xxxxxxxx.|xxxxxxxxx|xxxxxxxx.|xxxxxxxx.|....x.... at (5,4)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
diff: 
delta:
! size mismatch, 10x10 instead of 15x17

TRAIN f1cefba8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (5,6)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
diff: 
delta: (4,11)=3  (8,5)=3 
   (144.3 bits)
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xx.....x..xx|xx.....x..xx|xx.....x..xx|xxxxxxxxxxxx|xx.....x..xx|xx.....x..xx|xx.....x..xx|xx.....x..xx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,4)
  _01: a rectangle with size (8,5) and color green and mask Full at (5,6)
  _011: a rectangle with size (8,2) and color green and mask Full at (5,12)
  _0111: a rectangle with size (1,18) and color green and mask Full at (8,0)
diff: 
delta: (0,11)=3  (1,11)=3  (2,11)=3  (15,11)=3 
   (396.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (5,6)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
diff: 
delta: (4,11)=3  (8,5)=3 
! size mismatch, 10x10 instead of 16x18

TRAIN f1cefba8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (9,10) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (13,14) and color blue and mask Full at (3,1)
diff: 
delta: (4,6)=8  (4,10)=8  (9,2)=8 
! size mismatch, 10x10 instead of 19x18

TEST f1cefba8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.2 sec (28.2 sec/task)
bits-train-error = 13584.5 bits (13584.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-17] Checking task f25fbde4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4115.9 = 4124.9
DL output with Mo: L = 9.0 + 10859.2 = 10868.1
DL input+output M: L = 17.9 + 14975.1 = 14993.0

# learning a model for train pairs
2.000	
1.268	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.726	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.693	IN  DEF: ^.layer_0.shape.color=yellow
0.680	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.669	IN  DEF: ^.color=black
0.660	IN  DEF: ^.size=(?,?)
0.599	IN  DEF: ^.size.i=9
0.537	IN  DEF: ^.size.j=9
0.528	IN  DEF: ^.layer_0.pos=(?,?)
0.520	IN  DEF: ^.layer_0.shape.size=(?,?)
0.516	OUT DEF: ^.color=black
0.512	OUT DEF: ^.size=(?,?)
0.492	OUT DEF: ^.size.i=^.layer_0.shape.size.i + ^.layer_0.shape.size.i
0.471	OUT DEF: ^.size.j=^.layer_0.shape.size.j + ^.layer_0.shape.size.j
0.468	OUT DEF: ^.layer_0.pos=(?,?)
0.457	OUT DEF: ^.layer_0.pos.i=(0)
0.446	OUT DEF: ^.layer_0.pos.j=(0)
0.443	OUT DEF: ^.layer_0.shape.size=(?,?)
0.422	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i + ^.layer_0.shape.size.i
0.402	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j + ^.layer_0.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i + ^.layer_0.shape.size.i,^.layer_0.shape.size.j + ^.layer_0.shape.size.j) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i + ^.layer_0.shape.size.i,^.layer_0.shape.size.j + ^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ((0),(0))
WHERE (Mi)
a background with size (9,9) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 53.0 + 1037.4 = 1090.4
DL output with Mo: L = 80.2 + 1411.8 = 1491.9
DL input+output M: L = 133.1 + 2449.2 = 2582.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask .xx.|xxxx|.xx. at (2,1)
diff: 
delta:
   (35.9 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,8) and color yellow and mask ..xxxx..|..xxxx..|xxxxxxxx|xxxxxxxx|..xxxx..|..xxxx.. at (0,0)
diff: 
delta:
   (51.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask .xx.|xxxx|.xx. at (2,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (2,2)
diff: 
delta: (3,1)=4  (3,4)=4 
! size mismatch, 6x4 instead of 6x8
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (3,1)
diff: 
delta: (2,2)=4  (2,3)=4  (4,2)=4  (4,3)=4 
! size mismatch, 2x8 instead of 6x8

TRAIN f25fbde4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xx.|..x at (1,3)
diff: 
delta:
   (32.0 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color yellow and mask ..xx..|..xx..|xxxx..|xxxx..|....xx|....xx at (0,0)
diff: 
delta:
   (39.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xx.|..x at (1,3)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,3)
diff: 
delta: (1,4)=4  (3,5)=4 
! size mismatch, 2x4 instead of 6x6
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (1,4)
diff: 
delta: (2,3)=4  (3,5)=4 
! size mismatch, 4x2 instead of 6x6

TRAIN f25fbde4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask .x.|xx.|.x.|.xx at (4,1)
diff: 
delta:
   (35.9 bits)
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,6) and color yellow and mask ..xx..|..xx..|xxxx..|xxxx..|..xx..|..xx..|..xxxx|..xxxx at (0,0)
diff: 
delta:
   (51.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask .x.|xx.|.x.|.xx at (4,1)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,1) and color yellow and mask Full at (4,2)
diff: 
delta: (5,1)=4  (7,3)=4 
! size mismatch, 8x2 instead of 8x6
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (5,1)
diff: 
delta: (4,2)=4  (6,2)=4  (7,2)=4  (7,3)=4 
! size mismatch, 2x4 instead of 8x6

TRAIN f25fbde4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color yellow and mask Odd Checkboard at (1,3)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TEST f25fbde4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 1411.8 bits (1411.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-16] Checking task f25ffba3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4549.4 = 4558.4
DL output with Mo: L = 9.0 + 8629.4 = 8638.4
DL input+output M: L = 17.9 + 13178.8 = 13196.7

# learning a model for train pairs
2.000	
1.659	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.389	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.241	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.119	OUT OBJECT at ^.layer_01: ^.layer_01.shape at ?
1.016	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.942	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.886	OUT OBJECT at ^.layer_0111: ^.layer_011.shape at ?
0.848	OUT DEF: ^.size=^.size
0.809	OUT OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.785	OUT DEF: ^.layer_01111.shape.size=^.layer_011.shape.size
0.763	OUT DEF: ^.layer_0111=^.layer_011
0.741	OUT DEF: ^.layer_01=^.layer_01
0.720	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size
0.709	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.689	IN  DEF: ^.layer_01.shape.color=green
0.679	OUT DEF: ^.layer_01111.shape.color=^.layer_011.shape.color
0.668	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.658	IN  DEF: ^.layer_0.shape.mask=Full
0.651	IN  DEF: ^.color=black
0.645	OUT DEF: ^.layer_0.shape.mask=Full
0.640	IN  DEF: ^.size=(?,?)
0.602	IN  DEF: ^.size.i=10
0.575	IN  DEF: ^.size.j=4
0.570	IN  DEF: ^.layer_0.pos=(?,?)
0.550	IN  DEF: ^.layer_0.pos.i=5
0.536	IN  DEF: ^.layer_0.pos.j=3
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask Full at ?
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at ?
  _0111: ^.layer_011
  _01111: a rectangle with size ^.layer_011.shape.size and color ^.layer_011.shape.color and mask ? at ?
WHERE (Mi)
a background with size (10,4) and color black and layers
  _0: a rectangle with size ? and color ? and mask Full at (5,3)
  _01: a rectangle with size ? and color green and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 84.5 + 1563.2 = 1647.6
DL output with Mo: L = 76.8 + 1429.4 = 1506.2
DL input+output M: L = 161.2 + 2992.6 = 3153.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color brown and mask Full at (5,3)
  _01: a rectangle with size (4,1) and color green and mask Full at (6,2)
  _011: a rectangle with size (2,1) and color red and mask Full at (8,0)
diff: 
delta: (9,1)=4 
   (80.6 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (10,1) and color brown and mask Full at (0,3)
  _01: a rectangle with size (4,1) and color green and mask Full at (6,2)
  _011: a rectangle with size (4,1) and color green and mask Full at (0,2)
  _0111: a rectangle with size (2,1) and color red and mask Full at (8,0)
  _01111: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=4  (9,1)=4 
   (84.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color brown and mask Full at (5,3)
  _01: a rectangle with size (4,1) and color green and mask Full at (6,2)
  _011: a rectangle with size (2,1) and color red and mask Full at (8,0)
diff: 
delta: (9,1)=4 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color brown and mask Full at (5,3)
  _01: a rectangle with size (4,1) and color green and mask Full at (6,2)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (9,1)
diff: 
delta: (8,0)=2  (9,0)=2 
! 22 wrong pixels (generated / expected)

TRAIN f25ffba3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (3,2) and color cyan and mask x.|xx|xx at (7,1)
diff: 
delta:
   (75.7 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (2,2) and color green and mask xx|.x at (0,0)
  _0111: a rectangle with size (3,2) and color cyan and mask x.|xx|xx at (7,1)
  _01111: a rectangle with size (3,2) and color cyan and mask xx|xx|x. at (0,1)
diff: 
delta:
   (58.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (3,2) and color cyan and mask x.|xx|xx at (7,1)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (8,2)
diff: 
delta: (7,1)=8 
! 18 wrong pixels (generated / expected)

TRAIN f25ffba3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (5,1)
  _01: a rectangle with size (2,2) and color green and mask x.|xx at (7,2)
  _011: a rectangle with size (4,1) and color orange and mask Full at (6,0)
diff:   ^.layer_0.pos.j
delta: (9,2)=4  (9,3)=4 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (6,0)
  _01: a rectangle with size (2,2) and color green and mask x.|xx at (7,2)
  _011: a rectangle with size (5,1) and color blue and mask Full at (5,1)
diff:   ^.layer_0.pos.j  ^.layer_0.pos.i
delta: (9,2)=4  (9,3)=4 
! 19 wrong pixels (generated / expected)

TEST f25ffba3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.4 sec (25.4 sec/task)
bits-train-error = 1429.4 bits (1429.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-15] Checking task f2829549.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13874.5 = 13883.5
DL output with Mo: L = 9.0 + 3960.5 = 3969.5
DL input+output M: L = 17.9 + 17835.1 = 17853.0

# learning a model for train pairs
2.000	
1.647	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.428	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.269	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.150	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.091	OUT DEF: ^.layer_0.shape.color=green
1.073	OUT DEF: ^.color=black
1.056	IN  DEF: ^.layer_01.shape.color=orange
1.039	IN  DEF: ^.layer_0.shape.color=grey
1.023	IN  DEF: ^.layer_011.shape.color=blue
1.007	OUT DEF: ^.size=(?,?)
0.928	OUT DEF: ^.size.i=^.size.i
0.859	OUT DEF: ^.size.j=3
0.844	OUT DEF: ^.layer_0.pos=(?,?)
0.818	OUT DEF: ^.layer_0.pos.j=^.layer_0.shape.size.i - ^.layer_0.shape.size.j
0.803	OUT DEF: ^.layer_0.shape.size=(?,?)
0.794	IN  DEF: ^.layer_011.shape.mask=Full
0.787	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j + ^.layer_01.shape.size.j
0.781	IN  DEF: ^.color=black
0.777	IN  DEF: ^.layer_0.pos=(?,?)
0.762	IN  DEF: ^.layer_0.pos.j=4
0.758	IN  DEF: ^.layer_0.shape.size=(?,?)
0.753	IN  DEF: ^.size=(?,?)
0.725	IN  DEF: ^.size.j=7
0.703	IN  DEF: ^.size.i=4
0.698	IN  DEF: ^.layer_01.pos=(?,?)
0.694	IN  DEF: ^.layer_01.shape.size=(?,?)
0.689	IN  DEF: ^.layer_011.pos=(?,?)
0.674	IN  DEF: ^.layer_011.pos.j=3
0.662	IN  DEF: ^.layer_011.pos.i=0
0.658	IN  DEF: ^.layer_011.shape.size=(?,?)
0.635	IN  DEF: ^.layer_011.shape.size.i=4
0.627	IN  DEF: ^.layer_011.shape.size.j=1

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,3) and color black and layers
  _0: a rectangle with size (?,^.layer_01.pos.j + ^.layer_01.shape.size.j) and color green and mask ? at (?,^.layer_0.shape.size.i - ^.layer_0.shape.size.j)
WHERE (Mi)
a background with size (4,7) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,4)
  _01: a rectangle with size (?,?) and color orange and mask ? at (?,?)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)

DL input  with Mi: L = 111.6 + 4268.6 = 4380.2
DL output with Mo: L = 74.6 + 1162.1 = 1236.6
DL input+output M: L = 186.2 + 5430.7 = 5616.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _01: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
   (53.3 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask .x|xx|x.|.x at (0,1)
diff: 
delta:
   (20.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _01: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _01: a rectangle with size (2,1) and color orange and mask Full at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,1)=7#
! 5 wrong pixels (generated / expected)

TRAIN f2829549.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
  _01: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
   (100.5 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|..x at (0,0)
diff: 
delta:
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
  _01: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (0,1)=7# (1,4)=0  (3,5)=5#
! 5 wrong pixels (generated / expected)

TRAIN f2829549.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _01: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
   (55.5 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask ..x|xx. at (2,0)
diff: 
delta: (1,0)=3 
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _01: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color  ^.layer_0.pos.j
delta:
! 6 wrong pixels (generated / expected)

TRAIN f2829549.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color orange and mask x.x|xx.|.x. at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (1,6)=5# (3,4)=5# (3,6)=5#
   (100.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask Even Checkboard at (2,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color orange and mask x.x|xx.|.x. at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (1,6)=5# (3,4)=5# (3,6)=5#
! 9 wrong pixels (generated / expected)

TRAIN f2829549.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _01: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (1,2)=7# (3,0)=7# (3,1)=7# (3,2)=7#
   (117.5 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta: (0,2)=3 
   (25.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (1,2)=7#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _01: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (1,2)=7# (3,0)=7# (3,1)=7# (3,2)=7#
! 2 wrong pixels (generated / expected)

TRAIN f2829549.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (1,3) and color orange and mask Full at (1,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,0)=7#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (1,1) and color orange and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (1,0)=7# (1,1)=7# (1,2)=7#
! 6 wrong pixels (generated / expected)

TEST f2829549.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.2 sec (23.2 sec/task)
bits-train-error = 1162.1 bits (1162.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-14] Checking task f35d900a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4344.3 = 4353.3
DL output with Mo: L = 9.0 + 40129.9 = 40138.8
DL input+output M: L = 17.9 + 44474.2 = 44492.1

# learning a model for train pairs
2.000	
1.870	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.740	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.610	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.480	OUT OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.443	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.405	IN  OBJECT at ^.layer_01: a point with color ? at ?
1.364	IN  OBJECT at ^.layer_011: a point with color ? at ?
1.355	OUT OBJECT at ^.layer_01110: ^.layer_0.shape at ?
1.347	OUT OBJECT at ^.layer_010: ^.layer_01.shape at ?
1.341	OUT OBJECT at ^.layer_01111: ^.layer_0.shape at ?
1.335	OUT OBJECT at ^.layer_011111: ^.layer_01.shape at ?
1.286	IN  OBJECT at ^.layer_0111: a point with color ? at ?
1.264	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _010: ^.layer_01.shape at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _01110: ^.layer_0.shape at ?
  _0111: a rectangle with size ? and color ? and mask ? at ?
  _01111: ^.layer_0.shape at ?
  _011111: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a point with color ? at ?
  _01: a point with color ? at ?
  _011: a point with color ? at ?
  _0111: a point with color ? at ?

DL input  with Mi: L = 58.8 + 3575.6 = 3634.3
DL output with Mo: L = 122.9 + 17122.7 = 17245.5
DL input+output M: L = 181.6 + 20698.2 = 20879.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (2,6)
  _011: a point with color green at (8,1)
  _0111: a point with color red at (8,6)
diff: 
delta:
   (87.6 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (1,0)
  _010: a point with color green at (2,6)
  _01: a rectangle with size (3,3) and color red and mask Full at (1,5)
  _011: a rectangle with size (3,3) and color red and mask Border at (7,0)
  _01110: a point with color red at (8,6)
  _0111: a rectangle with size (3,3) and color green and mask Full at (7,5)
  _01111: a point with color red at (2,1)
  _011111: a point with color green at (8,1)
diff: 
delta: (2,3)=5# (2,4)=5# (4,1)=5# (4,6)=5# (6,1)=5# (6,6)=5# (8,3)=5# (8,4)=5#
   (341.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (2,6)
  _011: a point with color green at (8,1)
  _0111: a point with color red at (8,6)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN f35d900a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,14) and color black and layers
  _0: a point with color blue at (3,2)
  _01: a point with color cyan at (3,10)
  _011: a point with color cyan at (14,2)
  _0111: a point with color blue at (14,10)
diff: 
delta:
   (89.2 bits)
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (2,1)
  _010: a point with color cyan at (3,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (2,9)
  _011: a rectangle with size (3,3) and color blue and mask Border at (13,1)
  _01110: a point with color blue at (14,10)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (13,9)
  _01111: a point with color blue at (3,2)
  _011111: a point with color cyan at (14,2)
diff: 
delta: (3,4)=5# (3,6)=5# (3,8)=5# (5,2)=5# (5,10)=5# (7,2)=5# (7,10)=5# (10,2)=5# (10,10)=5# (12,2)=5# (12,10)=5# (14,4)=5# (14,6)=5# (14,8)=5#
   (468.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a point with color blue at (3,2)
  _01: a point with color cyan at (3,10)
  _011: a point with color cyan at (14,2)
  _0111: a point with color blue at (14,10)
diff: 
delta:
! 54 wrong pixels (generated / expected)

TRAIN f35d900a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,16) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color yellow at (3,13)
  _011: a point with color yellow at (13,2)
  _0111: a point with color red at (13,13)
diff: 
delta:
   (90.4 bits)
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (2,1)
  _010: a point with color yellow at (3,13)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,12)
  _011: a rectangle with size (3,3) and color red and mask Border at (12,1)
  _01110: a point with color red at (13,13)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (12,12)
  _01111: a point with color red at (3,2)
  _011111: a point with color yellow at (13,2)
diff: 
delta: (3,4)=5# (3,6)=5# (3,9)=5# (3,11)=5# (5,2)=5# (5,13)=5# (7,2)=5# (7,13)=5# (9,2)=5# (9,13)=5# (11,2)=5# (11,13)=5# (13,4)=5# (13,6)=5# (13,9)=5# (13,11)=5#
   (513.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color yellow at (3,13)
  _011: a point with color yellow at (13,2)
  _0111: a point with color red at (13,13)
diff: 
delta:
! 56 wrong pixels (generated / expected)

TRAIN f35d900a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (17,16) and color black and layers
  _0: a point with color green at (3,4)
  _01: a point with color cyan at (3,12)
  _011: a point with color cyan at (8,4)
  _0111: a point with color green at (8,12)
diff: 
delta:
   (90.4 bits)
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (2,3)
  _010: a point with color cyan at (3,12)
  _01: a rectangle with size (3,3) and color green and mask Border at (7,3)
  _011: a rectangle with size (3,3) and color green and mask Full at (2,11)
  _01110: a point with color green at (8,12)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (7,11)
  _01111: a point with color green at (3,4)
  _011111: a point with color cyan at (8,4)
diff: 
delta: (3,6)=5# (3,8)=5# (3,10)=5# (5,4)=5# (5,12)=5# (6,4)=5# (6,12)=5# (8,6)=5# (8,8)=5# (8,10)=5#
   (389.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a point with color green at (3,4)
  _01: a point with color cyan at (3,12)
  _011: a point with color cyan at (8,4)
  _0111: a point with color green at (8,12)
diff: 
delta:
! 50 wrong pixels (generated / expected)

TRAIN f35d900a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a point with color yellow at (4,2)
  _01: a point with color blue at (4,12)
  _011: a point with color blue at (15,2)
  _0111: a point with color yellow at (15,12)
diff: 
delta:
! 56 wrong pixels (generated / expected)

TEST f35d900a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.4 sec (26.4 sec/task)
bits-train-error = 17122.7 bits (17122.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-13] Checking task f5b8619d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 1494.9 = 1503.9
DL output with Mo: L = 9.0 + 19659.5 = 19668.4
DL input+output M: L = 17.9 + 21154.4 = 21172.3

# learning a model for train pairs
2.000	
1.693	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.485	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.384	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.293	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.279	OUT OBJECT at ^.layer_00: ^.layer_0.shape at ?
1.264	OUT DEF: ^.layer_00=^.layer_0
1.251	OUT OBJECT at ^.layer_010: ^.layer_0.shape at ?
1.220	IN  DEF: ^.color=black
1.197	IN  DEF: ^.size=(?,?)
1.174	IN  DEF: ^.layer_0.pos=(?,?)
1.113	IN  DEF: ^.layer_0.pos.i=(0)
1.106	OUT DEF: ^.layer_01.shape.color=cyan
1.099	OUT DEF: ^.layer_011.shape.color=cyan
1.086	OUT OBJECT at ^.layer_0110: ^.layer_0.shape at ?
1.080	OUT OBJECT at ^.layer_01101: ^.layer_0.shape at ?
1.073	OUT DEF: ^.layer_0.shape.color=cyan
1.069	OUT DEF: ^.layer_0.shape.mask=Full
1.066	OUT DEF: ^.layer_01.shape.mask=Full
1.062	OUT DEF: ^.layer_011.shape.mask=Full
1.060	OUT DEF: ^.color=black
1.058	OUT DEF: ^.layer_0.pos=(?,?)
1.052	OUT DEF: ^.layer_0.pos.j=^.size.j - 1
1.051	OUT DEF: ^.size=(?,?)
1.039	OUT DEF: ^.size.i=^.size.i + ^.size.i
1.028	OUT DEF: ^.size.j=^.size.j + ^.size.j
1.026	OUT DEF: ^.layer_01101.pos=(?,?)
1.024	OUT DEF: ^.layer_0.shape.size=(?,?)
1.022	OUT DEF: ^.layer_010.pos=(?,?)
1.021	OUT DEF: ^.layer_01.pos=(?,?)
1.019	OUT DEF: ^.layer_01.shape.size=(?,?)
1.015	OUT DEF: ^.layer_01.shape.size.j=1
1.009	OUT DEF: ^.layer_01101.pos.j=^.layer_0.pos.j
1.003	OUT DEF: ^.layer_01101.pos.i=^.size.i
1.001	OUT DEF: ^.layer_0110.pos=(?,?)
0.999	OUT DEF: ^.layer_011.pos=(?,?)
0.998	OUT DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i + ^.size.i,^.size.j + ^.size.j) and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,^.size.j - 1)
  _010: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,1) and color cyan and mask Full at (?,?)
  _0110: ^.layer_0.shape at (?,?)
  _01101: ^.layer_0.shape at (^.size.i,^.layer_0.pos.j)
  _011: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at ((0),?)

DL input  with Mi: L = 30.2 + 1131.2 = 1161.4
DL output with Mo: L = 168.0 + 4264.2 = 4432.2
DL input+output M: L = 198.2 + 5395.4 = 5593.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (2,2)=2 
   (36.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (6,2) and color cyan and mask Full at (0,2)
  _010: a point with color red at (2,5)
  _01: a rectangle with size (5,1) and color cyan and mask Full at (0,5)
  _0110: a point with color red at (5,5)
  _01101: a point with color red at (3,0)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,3)=2  (2,2)=2  (3,3)=2  (5,2)=2 
   (137.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (2,2)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (2,2)
diff:   ^.layer_0.pos.i
delta: (0,0)=2 
! 20 wrong pixels (generated / expected)

TRAIN f5b8619d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (0,1)
diff: 
delta: (4,0)=5# (4,5)=5#
   (61.6 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color grey at (0,1)
  _0: a rectangle with size (12,3) and color cyan and mask Full at (0,5)
  _010: a point with color grey at (4,0)
  _01: a rectangle with size (12,1) and color cyan and mask Full at (0,11)
  _0110: a point with color grey at (10,0)
  _01101: a point with color grey at (6,1)
  _011: a rectangle with size (12,2) and color cyan and mask Full at (0,0)
diff: 
delta: (0,7)=5# (4,5)=5# (4,6)=5# (4,11)=5# (6,7)=5# (10,5)=5# (10,6)=5# (10,11)=5#
   (244.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (0,1)
diff: 
delta: (4,0)=5# (4,5)=5#
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,0)
diff:   ^.layer_0.pos.i
delta: (0,1)=5# (4,5)=5#
! 65 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,5)
diff:   ^.layer_0.pos.i
delta: (0,1)=5# (4,0)=5#
! 65 wrong pixels (generated / expected)

TRAIN f5b8619d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,2) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (15.6 bits)
data: a background with size (4,4) and color black and layers
  _00: a point with color yellow at (0,1)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _010: a point with color yellow at (2,3)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (1,3)
  _0110: a point with color yellow at (0,3)
  _01101: a point with color yellow at (2,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (3,1)
diff: 
delta:
   (44.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN f5b8619d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (2,3)=3  (3,0)=3 
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (2,3)
diff:   ^.layer_0.pos.i
delta: (0,2)=3  (3,0)=3 
! 44 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (3,0)
diff:   ^.layer_0.pos.i
delta: (0,2)=3  (2,3)=3 
! 44 wrong pixels (generated / expected)

TEST f5b8619d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.5 sec (18.5 sec/task)
bits-train-error = 4264.2 bits (4264.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-12] Checking task f76d97a5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 4332.2 = 4341.2
DL output with Mo: L = 9.0 + 4202.1 = 4211.0
DL input+output M: L = 17.9 + 8534.3 = 8552.2

# learning a model for train pairs
2.000	
1.505	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.040	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.889	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.787	OUT DEF: ^.size=^.size
0.687	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.629	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.596	OUT DEF: ^.layer_0.shape.color=^.color
0.564	IN  DEF: ^.layer_0.shape.color=grey
0.553	OUT DEF: ^.color=black
0.545	IN  DEF: ^.size=(?,?)
0.537	IN  DEF: ^.layer_0.pos=(?,?)
0.514	IN  DEF: ^.layer_0.pos.i=(0)
0.505	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at ((0),?)

DL input  with Mi: L = 44.7 + 1932.2 = 1976.8
DL output with Mo: L = 22.0 + 189.0 = 210.9
DL input+output M: L = 66.6 + 2121.1 = 2187.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (44.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color grey and mask .x.|xxx|.x. at (0,0)
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=5#
   (86.4 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=6 
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
diff: 
delta: (1,1)=5# (1,2)=5# (2,2)=5# (2,3)=5# (3,3)=5# (3,4)=5# (4,0)=5# (4,4)=5#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,4) and color pink and mask x...|xx..|xxx.|.xxx at (1,0)
diff:   ^.layer_0.shape.color  ^.layer_0.pos.i
delta: (0,2)=6  (0,3)=6  (0,4)=6  (1,3)=6  (1,4)=6  (2,4)=6 
! 19 wrong pixels (generated / expected)

TRAIN f76d97a5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (5,4) and color grey and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
   (61.9 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,4) and color brown and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (5,4) and color grey and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask xxx.x|x.xxx|x..x.|xxx.x|...xx at (0,0)
diff:   ^.layer_0.shape.color
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|.xx.x|...x.|xxx.. at (1,0)
diff:   ^.layer_0.pos.i
delta: (0,3)=5#
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (4,0)
diff:   ^.layer_0.pos.i
delta: (0,3)=5# (1,1)=5# (2,1)=5# (2,2)=5# (2,4)=5# (3,3)=5#
! 6 wrong pixels (generated / expected)

TEST f76d97a5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 189.0 bits (189.0 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-11] Checking task f8a8fe49.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 15619.9 = 15628.8
DL output with Mo: L = 9.0 + 15619.9 = 15628.8
DL input+output M: L = 17.9 + 31239.8 = 31257.7

# learning a model for train pairs
2.000	
1.754	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.506	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.260	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.012	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.840	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
0.724	OUT OBJECT at ^.layer_00: ^.layer_01.shape at ?
0.619	IN  OBJECT at ^.layer_010: a rectangle with size ? and color ? and mask ? at ?
0.577	OUT DEF: ^.size=^.size
0.541	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.518	OUT DEF: ^.layer_0.shape.size=^.layer_010.shape.size
0.495	OUT DEF: ^.layer_011=^.layer_0
0.478	OUT DEF: ^.layer_01.shape.size=^.layer_011.shape.size
0.465	IN  DEF: ^.layer_0.shape.color=red
0.456	OUT DEF: ^.layer_0.shape.color=^.layer_010.shape.color
0.447	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
0.444	OUT DEF: ^.color=black
0.442	OUT DEF: ^.layer_00.pos=(?,?)
0.432	OUT DEF: ^.layer_00.pos.i=^.layer_01.pos.i
0.430	OUT DEF: ^.layer_0.pos=(?,?)
0.428	OUT DEF: ^.layer_01.pos=(?,?)
0.426	IN  DEF: ^.layer_011.pos=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01.shape at (^.layer_01.pos.i,?)
  _0: a rectangle with size ^.layer_010.shape.size and color ^.layer_010.shape.color and mask ? at (?,?)
  _01: a rectangle with size ^.layer_011.shape.size and color ^.layer_011.shape.color and mask ? at (?,?)
  _011: ^.layer_0
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color red and mask ? at ?
  _010: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at (?,?)

DL input  with Mi: L = 91.3 + 5224.5 = 5315.8
DL output with Mo: L = 82.0 + 1253.1 = 1335.1
DL input+output M: L = 173.3 + 6477.6 = 6650.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _010: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
   (172.5 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _0: a rectangle with size (2,3) and color grey and mask x.x|xxx at (1,6)
  _01: a rectangle with size (1,1) and color grey and mask Full at (13,7)
  _011: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
diff: 
delta:
   (37.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _010: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _01: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _010: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _010: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _010: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta:
   (184.1 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _0: a rectangle with size (4,2) and color grey and mask .x|x.|x.|.x at (5,0)
  _01: a rectangle with size (4,1) and color grey and mask Full at (5,12)
  _011: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
diff: 
delta:
   (39.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _010: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _01: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _010: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _010: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _010: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _01: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
diff: 
delta:
   (165.8 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (3,1) and color grey and mask Full at (4,12)
  _0: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _01: a rectangle with size (3,2) and color grey and mask .x|xx|x. at (4,0)
  _011: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
diff: 
delta:
   (48.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _010: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _01: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _010: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _01: a rectangle with size (3,1) and color grey and mask Full at (4,8)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _010: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _010: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _01: a rectangle with size (2,5) and color grey and mask .xxxx|xxx.. at (6,5)
  _011: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _010: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,5) and color grey and mask .xxxx|xxx.. at (6,5)
  _011: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _010: a rectangle with size (2,5) and color grey and mask .xxxx|xxx.. at (6,5)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TEST f8a8fe49.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.8 sec (15.8 sec/task)
bits-train-error = 1253.1 bits (1253.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-10] Checking task f8b3ba0a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 39114.7 = 39123.7
DL output with Mo: L = 9.0 + 1917.9 = 1926.9
DL input+output M: L = 17.9 + 41032.6 = 41050.6

# learning a model for train pairs
2.000	
1.907	OUT OBJECT at ^.layer_0: a point with color ? at ?
1.796	OUT OBJECT at ^.layer_01: a point with color ? at ?
1.701	OUT DEF: ^.layer_01.shape.color=red
1.637	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.593	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.554	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.525	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
1.500	OUT DEF: ^.size=(?,?)
1.387	OUT DEF: ^.size.i=3
1.338	OUT DEF: ^.size.j=1
1.313	OUT DEF: ^.layer_0.pos=(?,?)
1.286	OUT DEF: ^.layer_0.pos.j=(0)
1.230	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i - 1
1.205	OUT DEF: ^.layer_01.pos=(?,?)
1.178	OUT DEF: ^.layer_01.pos.j=(0)
1.158	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
1.156	IN  DEF: ^.layer_0.shape.mask=Full
1.153	IN  DEF: ^.layer_01.shape.mask=Full
1.151	IN  DEF: ^.layer_011.shape.mask=Full
1.149	IN  DEF: ^.layer_0111.shape.mask=Full
1.146	IN  DEF: ^.layer_01111.shape.mask=Full
1.145	IN  DEF: ^.color=black
1.143	IN  DEF: ^.size=(?,?)
1.134	IN  DEF: ^.size.i=13
1.132	IN  DEF: ^.layer_0.pos=(?,?)
1.131	IN  DEF: ^.layer_0.shape.size=(?,?)
1.129	IN  DEF: ^.layer_0.shape.size.i=1
1.128	IN  DEF: ^.layer_01.pos=(?,?)
1.126	IN  DEF: ^.layer_01.shape.size=(?,?)
1.124	IN  DEF: ^.layer_01.shape.size.i=1
1.109	IN  OBJECT at ^.layer_011111: a rectangle with size ? and color ? and mask ? at ?
1.093	IN  OBJECT at ^.layer_0111111: a rectangle with size ? and color ? and mask ? at ?
1.081	IN  OBJECT at ^.layer_01111111: a rectangle with size ? and color ? and mask ? at ?
1.068	IN  OBJECT at ^.layer_011111111: a rectangle with size ? and color ? and mask ? at ?
1.059	IN  OBJECT at ^.layer_0111111111: a rectangle with size ? and color ? and mask ? at ?
1.040	IN  OBJECT at ^.layer_01111111111: a rectangle with size ? and color ? and mask ? at ?
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (3,1) and color ? and layers
  _0: a point with color ? at (^.layer_01.pos.i - 1,(0))
  _01: a point with color red at (?,(0))
WHERE (Mi)
a background with size (13,?) and color ? and layers
  _0: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size ? and color ? and mask Full at ?
  _0111: a rectangle with size ? and color ? and mask Full at ?
  _01111: a rectangle with size ? and color ? and mask Full at ?
  _011111: a rectangle with size ? and color ? and mask ? at ?
  _0111111: a rectangle with size ? and color ? and mask ? at ?
  _01111111: a rectangle with size ? and color ? and mask ? at ?
  _011111111: a rectangle with size ? and color ? and mask ? at ?
  _0111111111: a rectangle with size ? and color ? and mask ? at ?
  _01111111111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 236.0 + 26587.2 = 26823.2
DL output with Mo: L = 63.0 + 620.7 = 683.7
DL input+output M: L = 299.0 + 27207.8 = 27506.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,4)
  _011: a rectangle with size (1,8) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (5,1)
  _01111: a rectangle with size (1,5) and color blue and mask Full at (3,1)
  _011111: a rectangle with size (1,5) and color yellow and mask Full at (3,7)
  _0111111: a rectangle with size (1,2) and color green and mask Full at (1,1)
  _01111111: a rectangle with size (1,2) and color blue and mask Full at (9,1)
  _011111111: a rectangle with size (1,5) and color blue and mask Full at (9,7)
  _0111111111: a rectangle with size (1,2) and color red and mask Full at (7,1)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (9,4)
diff: 
delta: (1,6)=0  (1,9)=0  (3,3)=0  (3,9)=0  (5,3)=0  (5,4)=4  (5,5)=4  (5,6)=0  (5,9)=0  (7,6)=0  (7,9)=0  (9,9)=0  (11,3)=0  (11,6)=0  (11,9)=0 
   (607.5 bits)
data: a background with size (3,1) and color green and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
   (15.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,4)
  _011: a rectangle with size (1,8) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (9,1)
  _01111: a rectangle with size (3,2) and color blue and mask Full at (3,1)
  _011111: a rectangle with size (1,5) and color yellow and mask Full at (3,7)
  _0111111: a rectangle with size (1,5) and color blue and mask Full at (5,7)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (1,1)
  _011111111: a rectangle with size (1,2) and color blue and mask Full at (3,4)
  _0111111111: a rectangle with size (1,2) and color yellow and mask Full at (5,4)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (7,1)
diff: 
delta: (1,6)=0  (1,9)=0  (3,9)=0  (4,1)=0  (4,2)=0  (5,9)=0  (7,6)=0  (7,9)=0  (9,3)=0  (9,4)=2  (9,5)=2  (9,6)=0  (9,9)=0  (11,3)=0  (11,6)=0  (11,9)=0 
! 3 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _01: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _011: a rectangle with size (1,14) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color cyan and mask Full at (5,4)
  _01111: a rectangle with size (1,11) and color cyan and mask Full at (9,1)
  _011111: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
  _01111111: a rectangle with size (1,2) and color cyan and mask Full at (3,4)
  _011111111: a rectangle with size (1,2) and color red and mask Full at (3,7)
  _0111111111: a rectangle with size (1,2) and color pink and mask Full at (3,10)
  _01111111111: a rectangle with size (1,2) and color cyan and mask Full at (3,13)
diff: 
delta: (1,6)=0  (1,9)=0  (1,12)=0  (5,1)=1  (5,2)=1  (5,6)=0  (5,7)=1  (5,8)=1  (5,9)=0  (5,12)=0  (7,3)=0  (7,4)=1  (7,5)=1  (7,6)=0  (7,9)=0  (7,12)=0  (9,3)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=0  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
   (857.2 bits)
data: a background with size (3,1) and color blue and layers
  _0: a point with color pink at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta:
   (15.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _01: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _011: a rectangle with size (1,14) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color cyan and mask Full at (5,4)
  _01111: a rectangle with size (1,11) and color cyan and mask Full at (9,1)
  _011111: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
  _01111111: a rectangle with size (1,2) and color cyan and mask Full at (3,4)
  _011111111: a rectangle with size (1,2) and color red and mask Full at (3,7)
  _0111111111: a rectangle with size (1,2) and color pink and mask Full at (3,10)
  _01111111111: a rectangle with size (1,2) and color cyan and mask Full at (3,13)
diff: 
delta: (1,6)=0  (1,9)=0  (1,12)=0  (5,1)=1  (5,2)=1  (5,6)=0  (5,7)=1  (5,8)=1  (5,9)=0  (5,12)=0  (7,3)=0  (7,4)=1  (7,5)=1  (7,6)=0  (7,9)=0  (7,12)=0  (9,3)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=0  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
! 3 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _011: a rectangle with size (5,2) and color green and mask Full at (5,1)
  _0111: a rectangle with size (1,5) and color red and mask Full at (9,4)
  _01111: a rectangle with size (1,5) and color green and mask Full at (11,4)
  _011111: a rectangle with size (1,2) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (5,4)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (5,7)
  _011111111: a rectangle with size (1,2) and color cyan and mask Full at (7,4)
  _0111111111: a rectangle with size (1,2) and color green and mask Full at (7,7)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (11,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,6)=0  (6,1)=0  (6,2)=0  (8,1)=0  (8,2)=0  (9,6)=0  (11,6)=0 
   (470.7 bits)
data: a background with size (3,1) and color cyan and layers
  _0: a point with color blue at (2,0)
  _01: a point with color red at (0,0)
diff: 
delta:
   (15.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _011: a rectangle with size (5,2) and color green and mask Full at (5,1)
  _0111: a rectangle with size (1,5) and color red and mask Full at (9,4)
  _01111: a rectangle with size (1,5) and color green and mask Full at (11,4)
  _011111: a rectangle with size (1,2) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (5,4)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (5,7)
  _011111111: a rectangle with size (1,2) and color cyan and mask Full at (7,4)
  _0111111111: a rectangle with size (1,2) and color green and mask Full at (7,7)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (11,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,6)=0  (6,1)=0  (6,2)=0  (8,1)=0  (8,2)=0  (9,6)=0  (11,6)=0 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _011: a rectangle with size (5,2) and color green and mask Full at (5,1)
  _0111: a rectangle with size (1,5) and color red and mask Full at (9,4)
  _01111: a rectangle with size (1,5) and color green and mask Full at (11,4)
  _011111: a rectangle with size (1,2) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (5,4)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (5,7)
  _011111111: a rectangle with size (1,2) and color cyan and mask Full at (7,4)
  _0111111111: a rectangle with size (1,2) and color green and mask Full at (7,7)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (11,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,6)=0  (6,1)=0  (6,2)=0  (8,1)=0  (8,2)=0  (9,6)=0  (11,6)=0 
! 3 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,11) and color blue and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01111: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _011111: a rectangle with size (1,8) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color red and mask Full at (3,10)
  _01111111: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011111111: a rectangle with size (1,2) and color blue and mask Full at (9,1)
  _0111111111: a rectangle with size (1,2) and color cyan and mask Full at (9,4)
  _01111111111: a rectangle with size (1,2) and color blue and mask Full at (9,7)
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,3)=0  (3,6)=0  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=8  (7,8)=8  (7,9)=0  (9,10)=4  (9,11)=4  (11,3)=0  (11,4)=8  (11,5)=8  (11,6)=0  (11,9)=0 
   (723.3 bits)
data: a background with size (3,1) and color yellow and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
   (15.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,11) and color blue and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01111: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _011111: a rectangle with size (1,8) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color red and mask Full at (3,10)
  _01111111: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011111111: a rectangle with size (1,2) and color blue and mask Full at (9,1)
  _0111111111: a rectangle with size (1,2) and color cyan and mask Full at (9,4)
  _01111111111: a rectangle with size (1,2) and color blue and mask Full at (9,7)
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,3)=0  (3,6)=0  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=8  (7,8)=8  (7,9)=0  (9,10)=4  (9,11)=4  (11,3)=0  (11,4)=8  (11,5)=8  (11,6)=0  (11,9)=0 
! 3 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (1,8) and color red and mask Full at (9,4)
  _01: a rectangle with size (1,11) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,11) and color red and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color red and mask Full at (13,1)
  _01111: a rectangle with size (1,5) and color red and mask Full at (5,4)
  _011111: a rectangle with size (1,11) and color cyan and mask Full at (5,1)
  _0111111: a rectangle with size (1,2) and color blue and mask Full at (3,1)
  _01111111: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _011111111: a rectangle with size (1,2) and color yellow and mask Full at (3,7)
  _0111111111: a rectangle with size (1,2) and color red and mask Full at (3,10)
  _01111111111: a rectangle with size (1,2) and color yellow and mask Full at (9,1)
diff:   ^.size.i
delta: (1,3)=0  (1,4)=4  (1,5)=4  (1,6)=0  (1,9)=0  (5,3)=0  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=1  (7,8)=1  (7,9)=0  (9,6)=0  (9,9)=0  (11,1)=2  (11,2)=2  (11,4)=1  (11,5)=1  (11,7)=2  (11,8)=2  (11,10)=4  (11,11)=4  (13,3)=0  (13,6)=0  (13,7)=4  (13,8)=4  (13,9)=0 
! 3 wrong pixels (generated / expected)

TEST f8b3ba0a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.1 sec (26.1 sec/task)
bits-train-error = 620.7 bits (620.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-9] Checking task f8c80d96.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 11270.8 = 11279.8
DL output with Mo: L = 9.0 + 24762.2 = 24771.2
DL input+output M: L = 17.9 + 36033.0 = 36050.9

# learning a model for train pairs
2.000	
1.588	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.326	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.139	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.954	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.858	OUT OBJECT at ^.layer_010: ^.layer_0.shape at ?
0.774	OUT OBJECT at ^.layer_011: ^.layer_01.shape at ?
0.733	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.710	OUT DEF: ^.size=^.size
0.697	OUT DEF: ^.layer_010=^.layer_0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ^.layer_0.shape.color and mask ? at ?
  _010: ^.layer_0
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_01.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 48.0 + 4493.0 = 4541.0
DL output with Mo: L = 60.4 + 7222.6 = 7283.0
DL input+output M: L = 108.4 + 11715.6 = 11824.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
   (200.3 bits)
data: a background with size (10,10) and color grey and layers
  _0: a rectangle with size (10,10) and color cyan and mask xxxxxxxxxx|.........x|.........x|.........x|.........x|.........x|.........x|.........x|.........x|.........x at (0,0)
  _010: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (8,8) and color cyan and mask xxxxxxxx|.......x|xxxxxx.x|.....x.x|.....x.x|.....x.x|.....x.x|.....x.x at (2,0)
  _011: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
   (312.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
  _01: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|xxxx.x|...x.x|...x.x|...x.x at (4,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
! 79 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
diff: 
delta: (7,3)=8  (8,0)=8  (8,1)=8  (8,3)=8  (9,1)=8  (9,3)=8 
! 85 wrong pixels (generated / expected)

TRAIN f8c80d96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
diff: 
delta:
   (130.9 bits)
data: a background with size (10,10) and color grey and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (8,1)
  _010: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
  _01: a rectangle with size (9,1) and color blue and mask Full at (0,1)
  _011: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
diff: 
delta:
   (73.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
diff: 
delta:
! 86 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
  _01: a rectangle with size (6,6) and color blue and mask x..x..|x..x..|x..xxx|x.....|x.....|xxxxxx at (0,4)
diff: 
delta:
! 89 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,7)
diff: 
delta: (0,7)=1  (1,7)=1 
! 87 wrong pixels (generated / expected)

TRAIN f8c80d96.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
diff: 
delta:
   (118.1 bits)
data: a background with size (10,10) and color grey and layers
  _0: a rectangle with size (6,10) and color red and mask .........x|.........x|.........x|.........x|.........x|xxxxxxxxxx at (0,0)
  _010: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (1,10) and color red and mask Full at (7,0)
  _011: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
diff: 
delta: (9,0)=2  (9,1)=2  (9,2)=2  (9,3)=2  (9,4)=2  (9,5)=2  (9,6)=2  (9,7)=2  (9,8)=2  (9,9)=2 
   (336.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
diff: 
delta:
! 87 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
  _01: a rectangle with size (4,7) and color red and mask x.x.x.x|x.xxx.x|x.....x|xxxxxxx at (0,1)
diff: 
delta:
! 87 wrong pixels (generated / expected)

TRAIN f8c80d96.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,6) and color yellow and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _01: a rectangle with size (4,3) and color yellow and mask xxx|..x|..x|xxx at (3,0)
diff: 
delta:
! 77 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask xxx|..x|..x|xxx at (3,0)
  _01: a rectangle with size (10,6) and color yellow and mask xxxxxx|.....x|.....x|xxx..x|..x..x|..x..x|xxx..x|.....x|.....x|xxxxxx at (0,0)
diff: 
delta:
! 72 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,6) and color yellow and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (3,2)
diff: 
delta: (3,0)=4  (3,1)=4  (6,0)=4  (6,1)=4 
! 79 wrong pixels (generated / expected)

TEST f8c80d96.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 7222.6 bits (7222.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-8] Checking task f8ff0b80.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 13351.9 = 13360.8
DL output with Mo: L = 9.0 + 1438.5 = 1447.4
DL input+output M: L = 17.9 + 14790.3 = 14808.3

# learning a model for train pairs
2.000	
1.660	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.461	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.347	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.182	OUT DEF: ^.color=^.layer_01.shape.color
1.158	OUT DEF: ^.size=(?,?)
1.045	OUT DEF: ^.size.i=3
0.997	OUT DEF: ^.size.j=1
0.993	IN  DEF: ^.color=black
0.990	IN  DEF: ^.size=(?,?)
0.970	IN  DEF: ^.size.i=12
0.949	IN  DEF: ^.size.j=12
0.946	IN  DEF: ^.layer_011.pos=(?,?)
0.944	IN  DEF: ^.layer_0.pos=(?,?)
0.941	IN  DEF: ^.layer_0.shape.size=(?,?)
0.927	IN  DEF: ^.layer_0.shape.size.j=4
0.924	IN  DEF: ^.layer_01.pos=(?,?)
0.913	IN  DEF: ^.layer_0.pos.i=1
0.911	IN  DEF: ^.layer_01.shape.size=(?,?)
0.908	IN  DEF: ^.layer_011.shape.size=(?,?)
0.896	IN  DEF: ^.layer_011.shape.size.i=3

# Learned model:
CONSTRUCT (Mo)
a background with size (3,1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (12,12) and color black and layers
  _0: a rectangle with size (?,4) and color ? and mask ? at (1,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (3,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 116.5 + 3172.8 = 3289.3
DL output with Mo: L = 15.2 + 925.4 = 940.6
DL input+output M: L = 131.7 + 4098.3 = 4229.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
  _011: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
diff: 
delta:
   (108.3 bits)
data: a background with size (3,1) and color cyan and layers
diff: 
delta: (0,0)=3  (1,0)=2 
   (30.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _01: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _011: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
  _011: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _01: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _011: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
diff:   ^.layer_0.pos.i
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _01: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
diff: 
delta:
   (100.3 bits)
data: a background with size (3,1) and color orange and layers
diff: 
delta: (0,0)=1  (2,0)=2 
   (30.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _01: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
  _011: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
  _01: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
diff: 
delta:
   (108.7 bits)
data: a background with size (3,1) and color yellow and layers
diff: 
delta: (1,0)=2  (2,0)=1 
   (30.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
  _01: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _01: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
diff:   ^.layer_0.shape.size.j  ^.layer_0.pos.i
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|.xx.|x.xx|..x. at (8,5)
  _01: a rectangle with size (2,3) and color blue and mask .xx|xxx at (5,3)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (1,1)
diff:   ^.layer_011.shape.size.i  ^.layer_0.pos.i
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|.xx.|x.xx|..x. at (8,5)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (1,1)
  _011: a rectangle with size (2,3) and color blue and mask .xx|xxx at (5,3)
diff:   ^.layer_011.shape.size.i  ^.layer_0.pos.i
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .xx|xxx at (5,3)
  _01: a rectangle with size (4,4) and color pink and mask ..x.|.xx.|x.xx|..x. at (8,5)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (1,1)
diff:   ^.layer_011.shape.size.i  ^.layer_0.shape.size.j  ^.layer_0.pos.i
delta:
! 2 wrong pixels (generated / expected)

TEST f8ff0b80.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 925.4 bits (925.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-7] Checking task f9012d9b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8729.5 = 8738.5
DL output with Mo: L = 9.0 + 823.0 = 832.0
DL input+output M: L = 17.9 + 9552.6 = 9570.5

# learning a model for train pairs
2.000	
1.473	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.199	OUT DEF: ^.color=^.layer_0.shape.color
1.157	OUT DEF: ^.size=(?,?)
1.153	IN  DEF: ^.size=(?,?)
1.149	IN  DEF: ^.layer_0.pos=(?,?)
1.136	IN  DEF: ^.layer_0.pos.i=(0)
1.124	IN  DEF: ^.layer_0.pos.j=(0)
1.120	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ((0),(0))

DL input  with Mi: L = 43.8 + 3885.1 = 3928.9
DL output with Mo: L = 13.2 + 544.4 = 557.6
DL input+output M: L = 57.0 + 4429.5 = 4486.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask .x.x.|xxxxx|.x.x.|..xxx|...x. at (0,0)
diff: 
delta: (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0 
   (140.8 bits)
data: a background with size (2,2) and color blue and layers
diff: 
delta: (1,0)=2 
   (24.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask .x.x.|xxxxx|.x.x.|..xxx|...x. at (0,0)
diff: 
delta: (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0 
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=2  (0,4)=2  (2,0)=2  (2,2)=2  (2,4)=2  (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0  (4,2)=2  (4,4)=2 
! size mismatch, 10x10 instead of 2x2

TRAIN f9012d9b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x.x|x.x.|.x.x at (0,0)
diff: 
delta: (0,2)=0 
   (75.2 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (4.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 1x1
>> Trial 2
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x.x|x.x.|.x.x at (0,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 1x1

TRAIN f9012d9b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (7,7) and color grey and mask ..x..x.|..x..x.|xxxxxxx|..x..x.|..x..x.|xxxxx..|..x.... at (0,0)
diff: 
delta: (5,5)=0  (5,6)=0  (6,5)=0  (6,6)=0 
   (172.5 bits)
data: a background with size (2,2) and color grey and layers
diff: 
delta: (1,1)=2 
   (24.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (7,7) and color grey and mask ..x..x.|..x..x.|xxxxxxx|..x..x.|..x..x.|xxxxx..|..x.... at (0,0)
diff: 
delta: (5,5)=0  (5,6)=0  (6,5)=0  (6,6)=0 
! size mismatch, 10x10 instead of 2x2

TRAIN f9012d9b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (7,7) and color cyan and mask x.xx...|.xx....|xx.x...|x.xx.xx|.xx.xx.|xx.xx.x|x.xx.xx at (0,0)
diff: 
delta: (0,4)=0  (0,5)=0  (0,6)=0  (1,4)=0  (1,5)=0  (1,6)=0  (2,4)=0  (2,5)=0  (2,6)=0 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (7,7) and color cyan and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (1,0)
diff:   ^.layer_0.pos.i
delta: (0,1)=1  (0,4)=0  (0,5)=0  (0,6)=0  (1,0)=1  (1,4)=0  (1,5)=0  (1,6)=0  (2,4)=0  (2,5)=0  (2,6)=0  (3,4)=1  (4,3)=1  (4,6)=1  (5,2)=1  (5,5)=1  (6,1)=1  (6,4)=1 
! size mismatch, 10x10 instead of 3x3

TEST f9012d9b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 544.4 bits (544.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-6] Checking task fafffa47.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 8573.7 = 8582.7
DL output with Mo: L = 9.0 + 2777.3 = 2786.3
DL input+output M: L = 17.9 + 11351.0 = 11368.9

# learning a model for train pairs
2.000	
1.716	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.530	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.400	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.317	OUT DEF: ^.layer_0.shape.color=red
1.290	IN  DEF: ^.layer_0.shape.color=brown
1.263	IN  DEF: ^.layer_01.shape.color=blue
1.236	OUT DEF: ^.color=black
1.214	OUT DEF: ^.size=(?,?)
1.116	OUT DEF: ^.size.j=^.size.j
1.018	OUT DEF: ^.size.i=3
0.996	OUT DEF: ^.layer_0.pos=(?,?)
0.944	OUT DEF: ^.layer_0.pos.i=0
0.922	OUT DEF: ^.layer_0.shape.size=(?,?)
0.872	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j + 1
0.864	IN  DEF: ^.color=black
0.856	IN  DEF: ^.size=(?,?)
0.813	IN  DEF: ^.size.i=6
0.781	IN  DEF: ^.size.j=3
0.774	IN  DEF: ^.layer_0.pos=(?,?)
0.752	IN  DEF: ^.layer_0.pos.i=(0)
0.744	IN  DEF: ^.layer_0.shape.size=(?,?)
0.713	IN  DEF: ^.layer_0.shape.size.i=3
0.706	IN  DEF: ^.layer_01.pos=(?,?)
0.698	IN  DEF: ^.layer_01.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,^.size.j) and color black and layers
  _0: a rectangle with size (?,^.layer_01.pos.j + 1) and color red and mask ? at (0,?)
WHERE (Mi)
a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,?) and color brown and mask ? at ((0),?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 81.0 + 2510.9 = 2591.9
DL output with Mo: L = 55.1 + 1049.3 = 1104.4
DL input+output M: L = 136.1 + 3560.2 = 3696.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .xx|.xx|xxx at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|..x|xxx at (3,0)
diff: 
delta:
   (50.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .xx|.xx|xxx at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|..x|xxx at (3,0)
diff: 
delta:
correct output grid

TRAIN fafffa47.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x.x|.xx|..x at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (3,0)
diff: 
delta: (3,2)=1 
   (55.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (2,1)=2 
   (25.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x.x|.xx|..x at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (3,0)
diff: 
delta: (3,2)=1 
! 4 wrong pixels (generated / expected)

TRAIN fafffa47.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta: (5,0)=1 
   (52.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|.x.|.xx at (0,0)
diff: 
delta:
   (20.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta: (5,0)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (5,0)
diff: 
delta: (4,2)=1 
! 5 wrong pixels (generated / expected)

TRAIN fafffa47.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.xx|..x at (3,0)
diff: 
delta:
   (50.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (2,0)=2 
   (25.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.xx|..x at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (4,1)
diff: 
delta: (3,0)=1  (5,2)=1 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (4,2)
diff: 
delta: (3,0)=1  (4,1)=1 
! 6 wrong pixels (generated / expected)

TRAIN fafffa47.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask x.|xx|xx at (0,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (4,0)
diff: 
delta:
   (42.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=2 
   (25.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask x.|xx|xx at (0,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (4,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN fafffa47.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|.x.|x.. at (3,0)
diff: 
delta: (0,0)=9# (2,0)=9#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,2)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,1)
diff: 
delta: (0,0)=9# (2,0)=9# (4,1)=1  (5,0)=1 
! 4 wrong pixels (generated / expected)

TEST fafffa47.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.3 sec (4.3 sec/task)
bits-train-error = 1049.3 bits (1049.3 bits/task)
acc-train-micro = 0.20 tasks (20.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.20
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-5] Checking task fcb5c309.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 33153.3 = 33162.3
DL output with Mo: L = 9.0 + 11876.5 = 11885.4
DL input+output M: L = 17.9 + 45029.8 = 45047.7

# learning a model for train pairs
2.000	
1.206	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.819	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
0.597	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
0.536	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
0.493	OUT DEF: ^.size=^.layer_0.shape.size
0.482	OUT DEF: ^.layer_0.shape.color=^.color
0.478	IN  DEF: ^.layer_0.shape.mask=Border
0.473	IN  DEF: ^.layer_01.shape.mask=Border
0.470	IN  OBJECT at ^.layer_0110: a point with color ? at ?
0.450	OUT DEF: ^.color=^.layer_0110.shape.color
0.447	IN  OBJECT at ^.layer_0111: a point with color ? at ?
0.444	IN  OBJECT at ^.layer_01111: a point with color ? at ?
0.441	IN  OBJECT at ^.layer_01101: a point with color ? at ?
0.437	IN  OBJECT at ^.layer_011111: a point with color ? at ?
0.434	IN  OBJECT at ^.layer_0111111: a point with color ? at ?
0.430	IN  OBJECT at ^.layer_01111111: a point with color ? at ?
0.427	OUT DEF: ^.layer_0.pos=(?,?)
0.417	OUT DEF: ^.layer_0.pos.j=1
0.407	OUT DEF: ^.layer_0.pos.i=1
0.404	OUT DEF: ^.layer_0.shape.size=(?,?)
0.387	OUT DEF: ^.layer_0.shape.size.j=5
0.371	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i - 2
0.369	IN  DEF: ^.color=black
0.368	IN  DEF: ^.size=(?,?)
0.367	IN  DEF: ^.layer_0.pos=(?,?)
0.366	IN  DEF: ^.layer_0.shape.size=(?,?)
0.359	IN  DEF: ^.layer_0.shape.size.j=7
0.358	IN  DEF: ^.layer_01.pos=(?,?)
0.357	IN  DEF: ^.layer_01.shape.size=(?,?)
0.356	IN  DEF: ^.layer_0110.pos=(?,?)
0.351	IN  DEF: ^.layer_0110.pos.i=(0)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_0110.shape.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.i - 2,5) and color ^.color and mask ? at (1,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,7) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _0110: a point with color ? at ((0),?)
  _01101: a point with color ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?
  _0111: a point with color ? at ?
  _01111: a point with color ? at ?
  _011111: a point with color ? at ?
  _0111111: a point with color ? at ?
  _01111111: a point with color ? at ?

DL input  with Mi: L = 182.5 + 9079.5 = 9261.9
DL output with Mo: L = 63.5 + 791.8 = 855.2
DL input+output M: L = 245.9 + 9871.2 = 10117.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Border at (2,0)
  _01: a rectangle with size (4,3) and color red and mask Border at (3,10)
  _0110: a point with color yellow at (0,4)
  _01101: a point with color yellow at (0,12)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (9,9)
  _0111: a point with color yellow at (4,1)
  _01111: a point with color yellow at (6,4)
  _011111: a point with color yellow at (9,4)
  _0111111: a point with color yellow at (12,4)
  _01111111: a point with color yellow at (12,11)
diff: 
delta:
   (206.9 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xxxxx|.xxxx|xxxxx|xxx.x|xxxxx at (1,1)
diff: 
delta:
   (28.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Border at (2,0)
  _01: a rectangle with size (4,3) and color red and mask Border at (3,10)
  _0110: a point with color yellow at (0,4)
  _01101: a point with color yellow at (0,12)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (9,9)
  _0111: a point with color yellow at (4,1)
  _01111: a point with color yellow at (6,4)
  _011111: a point with color yellow at (9,4)
  _0111111: a point with color yellow at (12,4)
  _01111111: a point with color yellow at (12,11)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN fcb5c309.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask Border at (2,8)
  _01: a rectangle with size (5,6) and color blue and mask Border at (7,1)
  _0110: a point with color green at (0,13)
  _01101: a point with color green at (1,4)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (11,10)
  _0111: a point with color green at (2,3)
  _01111: a point with color green at (3,11)
  _011111: a point with color green at (4,1)
  _0111111: a point with color green at (4,5)
  _01111111: a point with color green at (5,6)
diff: 
delta: (5,9)=3  (5,11)=3  (9,5)=3  (11,0)=3  (12,0)=3  (12,7)=3 
   (338.5 bits)
data: a background with size (6,7) and color green and layers
  _0: a rectangle with size (4,5) and color black and mask xx.xx|xxxxx|.x.xx|xxxxx at (1,1)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask Border at (2,8)
  _01: a rectangle with size (5,6) and color blue and mask Border at (7,1)
  _0110: a point with color green at (0,13)
  _01101: a point with color green at (1,4)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (11,10)
  _0111: a point with color green at (2,3)
  _01111: a point with color green at (3,11)
  _011111: a point with color green at (4,1)
  _0111111: a point with color green at (4,5)
  _01111111: a point with color green at (5,6)
diff: 
delta: (5,9)=3  (5,11)=3  (9,5)=3  (11,0)=3  (12,0)=3  (12,7)=3 
! 3 wrong pixels (generated / expected)

TRAIN fcb5c309.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color green and mask Border at (3,10)
  _0110: a point with color red at (0,8)
  _01101: a point with color red at (1,10)
  _011: a rectangle with size (4,3) and color green and mask Border at (10,3)
  _0111: a point with color red at (2,3)
  _01111: a point with color red at (2,5)
  _011111: a point with color red at (4,8)
  _0111111: a point with color red at (4,12)
  _01111111: a point with color red at (5,3)
diff: 
delta: (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
   (362.6 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask x.x.x|xxxxx|xxxxx|x.xxx|xxxx. at (1,1)
diff: 
delta:
   (28.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color green and mask Border at (3,10)
  _0110: a point with color red at (0,8)
  _01101: a point with color red at (1,10)
  _011: a rectangle with size (4,3) and color green and mask Border at (10,3)
  _0111: a point with color red at (2,3)
  _01111: a point with color red at (2,5)
  _011111: a point with color red at (4,8)
  _0111111: a point with color red at (4,12)
  _01111111: a point with color red at (5,3)
diff: 
delta: (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
! 4 wrong pixels (generated / expected)

TRAIN fcb5c309.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (1,4)
  _01: a rectangle with size (3,3) and color blue and mask Border at (2,0)
  _0110: a point with color cyan at (0,14)
  _01101: a point with color cyan at (2,6)
  _011: a rectangle with size (5,6) and color blue and mask Border at (11,10)
  _0111: a point with color cyan at (2,8)
  _01111: a point with color cyan at (2,12)
  _011111: a point with color cyan at (3,12)
  _0111111: a point with color cyan at (3,14)
  _01111111: a point with color cyan at (4,14)
diff:   ^.layer_0.shape.size.j
delta: (6,6)=8  (6,16)=8  (7,9)=8  (8,13)=8  (9,1)=8  (10,5)=8  (11,1)=8  (13,5)=8  (13,11)=8  (13,13)=8  (14,3)=8  (14,4)=8  (14,7)=8  (16,8)=8  (16,9)=8  (16,16)=8 
! 10 wrong pixels (generated / expected)

TEST fcb5c309.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.8 sec (26.8 sec/task)
bits-train-error = 791.8 bits (791.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-4] Checking task fcc82909.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 6113.4 = 6122.4
DL output with Mo: L = 9.0 + 12982.7 = 12991.7
DL input+output M: L = 17.9 + 19096.1 = 19114.1

# learning a model for train pairs
2.000	
1.738	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.626	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.549	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.470	OUT OBJECT at ^.layer_011: ^.layer_0.shape at ?
1.423	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.359	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at ?
1.309	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.244	OUT OBJECT at ^.layer_01111: ^.layer_011.shape at ?
1.200	OUT DEF: ^.size=^.size
1.175	OUT DEF: ^.layer_011=^.layer_0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: ^.layer_0
  _0111: ^.layer_01.shape at ?
  _01111: ^.layer_011.shape at ?
WHERE (Mi)
a background with size ? and color ? and layers
  _0: a rectangle with size ? and color ? and mask ? at ?
  _01: a rectangle with size ? and color ? and mask ? at ?
  _011: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 66.8 + 4985.6 = 5052.3
DL output with Mo: L = 72.1 + 4471.1 = 4543.2
DL input+output M: L = 138.8 + 9456.7 = 9595.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (6,5)
diff: 
delta: (5,5)=8  (5,6)=4 
   (138.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (7,5)
  _01: a rectangle with size (2,2) and color green and mask Full at (4,1)
  _011: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _01111: a rectangle with size (1,2) and color orange and mask Full at (6,5)
diff: 
delta: (5,5)=8  (5,6)=4 
   (119.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (6,5)
diff: 
delta: (5,5)=8  (5,6)=4 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _01: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (6,5)
diff: 
delta: (5,5)=8  (5,6)=4 
! 20 wrong pixels (generated / expected)

TRAIN fcc82909.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,6)
diff: 
delta: (1,3)=8  (2,2)=9#
   (152.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (3,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,6)
  _011: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _0111: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _01111: a rectangle with size (2,2) and color red and mask Full at (4,6)
diff: 
delta: (1,3)=8  (2,2)=9#
   (119.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,6)
diff: 
delta: (1,3)=8  (2,2)=9#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,6)
diff: 
delta: (1,3)=8  (2,2)=9#
! 20 wrong pixels (generated / expected)

TRAIN fcc82909.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
diff: 
delta: (1,2)=2  (1,3)=4  (2,2)=6  (2,3)=7# (5,4)=7#
   (207.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color green and mask xx..|xx..|xx..|xx..|..xx|..xx at (3,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,6)
  _011: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _0111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _01111: a rectangle with size (2,2) and color brown and mask Full at (1,6)
diff: 
delta: (1,2)=2  (1,3)=4  (2,2)=6  (2,3)=7# (5,4)=7#
   (207.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
diff: 
delta: (1,2)=2  (1,3)=4  (2,2)=6  (2,3)=7# (5,4)=7#
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _01: a rectangle with size (2,2) and color pink and mask Full at (5,4)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
diff: 
delta: (1,2)=2  (1,3)=4  (2,2)=6  (2,3)=7# (5,4)=7#
! 30 wrong pixels (generated / expected)

TRAIN fcc82909.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (3,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,6)
diff: 
delta: (1,7)=9# (2,0)=2  (2,6)=1  (2,7)=6  (3,4)=7# (4,3)=8 
! 31 wrong pixels (generated / expected)

TEST fcc82909.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.5 sec (25.5 sec/task)
bits-train-error = 4471.1 bits (4471.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-3] Checking task feca6190.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 2212.6 = 2221.6
DL output with Mo: L = 9.0 + 21220.6 = 21229.6
DL input+output M: L = 17.9 + 23433.3 = 23451.2

# learning a model for train pairs
2.000	
1.893	IN  OBJECT at ^.layer_0: a point with color ? at ?
1.791	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.732	OUT OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.699	IN  DEF: ^.color=black
1.671	IN  DEF: ^.size=(?,?)
1.516	IN  DEF: ^.size.j=5
1.463	IN  DEF: ^.size.i=1
1.435	IN  DEF: ^.layer_0.pos=(?,?)
1.405	IN  DEF: ^.layer_0.pos.i=0
1.382	OUT OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.371	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.367	OUT DEF: ^.color=black
1.365	OUT DEF: ^.size=(?,?)
1.362	OUT DEF: ^.layer_0.pos=(?,?)
1.351	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.j
1.348	OUT DEF: ^.layer_0.shape.size=(?,?)
1.345	OUT DEF: ^.layer_01.pos=(?,?)
1.335	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.j + 2
1.333	OUT DEF: ^.layer_01.shape.size=(?,?)
1.330	OUT DEF: ^.layer_011.pos=(?,?)
1.327	OUT DEF: ^.layer_011.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j + 2,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (1,5) and color black and layers
  _0: a point with color ? at (0,?)

DL input  with Mi: L = 30.3 + 1226.6 = 1256.9
DL output with Mo: L = 109.9 + 16045.7 = 16155.7
DL input+output M: L = 140.2 + 17272.3 = 17412.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color blue at (0,0)
diff: 
delta: (0,2)=7#
   (24.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,9)
  _01: a rectangle with size (8,8) and color orange and mask .......x|......x.|.....x..|....x...|...x....|..x.....|.x......|x....... at (2,2)
  _011: a rectangle with size (10,10) and color blue and mask .........x|........x.|.......x.x|......x.x.|.....x.x..|....x.x...|...x.x....|..x.x.....|.x.x......|x.x....... at (0,0)
diff: 
delta:
   (257.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color blue at (0,0)
diff: 
delta: (0,2)=7#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color orange at (0,2)
diff: 
delta: (0,0)=1 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color black at (0,1)
diff: 
delta: (0,0)=1  (0,2)=7#
! 24 wrong pixels (generated / expected)

TRAIN feca6190.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
   (8.3 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
   (58.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color black at (0,0)
diff: 
delta: (0,2)=2 
! size mismatch, 10x10 instead of 5x5
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color black at (0,1)
diff: 
delta: (0,2)=2 
! size mismatch, 10x10 instead of 5x5

TRAIN feca6190.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,0)
diff: 
delta: (0,2)=6  (0,4)=8 
   (40.6 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,15) and color yellow and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (0,0)
  _01: a rectangle with size (13,13) and color pink and mask ..........x.x|.........x.x.|........x.x..|.......x.x...|......x.x....|.....x.x.....|....x.x......|...x.x.......|..x.x........|.x.x.........|x.x..........|.x...........|x............ at (2,2)
  _011: a rectangle with size (11,11) and color cyan and mask ......x.x.x|.....x.x.x.|....x.x.x..|...x.x.x...|..x.x.x....|.x.x.x.....|x.x.x......|.x.x.......|x.x........|.x.........|x.......... at (4,4)
diff: 
delta:
   (632.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,0)
diff: 
delta: (0,2)=6  (0,4)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color pink at (0,2)
diff: 
delta: (0,0)=4  (0,4)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,4)
diff: 
delta: (0,0)=4  (0,2)=6 
! size mismatch, 10x10 instead of 15x15

TRAIN feca6190.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color brown at (0,1)
diff: 
delta: (0,3)=8  (0,4)=4 
   (40.6 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (14,14) and color brown and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (1,1)
  _01: a rectangle with size (12,12) and color cyan and mask .........x.x|........x.x.|.......x.x..|......x.x...|.....x.x....|....x.x.....|...x.x......|..x.x.......|.x.x........|x.x.........|.x..........|x........... at (3,3)
  _011: a rectangle with size (11,11) and color yellow and mask .......x.xx|......x.xx.|.....x.xx..|....x.xx...|...x.xx....|..x.xx.....|.x.xx......|x.xx.......|.xx........|xx.........|x.......... at (4,4)
diff: 
delta:
   (578.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color brown at (0,1)
diff: 
delta: (0,3)=8  (0,4)=4 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,3)
diff: 
delta: (0,1)=9# (0,4)=4 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,4)
diff: 
delta: (0,1)=9# (0,3)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN feca6190.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (8.3 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,4)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (2,3)
diff: 
delta: (4,1)=4 
   (77.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color black at (0,0)
diff: 
delta: (0,1)=4 
! size mismatch, 10x10 instead of 5x5
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color black at (0,2)
diff: 
delta: (0,1)=4 
! size mismatch, 10x10 instead of 5x5

TRAIN feca6190.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color brown and layers
  _0: a point with color pink at (0,1)
diff:   ^.color
delta: (0,0)=0  (0,2)=7# (0,3)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (1,5) and color brown and layers
  _0: a point with color orange at (0,2)
diff:   ^.color
delta: (0,0)=0  (0,1)=6  (0,3)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (1,5) and color brown and layers
  _0: a point with color cyan at (0,3)
diff:   ^.color
delta: (0,0)=0  (0,1)=6  (0,2)=7#
! size mismatch, 10x10 instead of 20x20

TEST feca6190.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.2 sec (11.2 sec/task)
bits-train-error = 16045.7 bits (16045.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-2] Checking task ff28f65a.json: 8 train, 3 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 17414.8 = 17423.8
DL output with Mo: L = 9.0 + 4687.8 = 4696.8
DL input+output M: L = 17.9 + 22102.6 = 22120.5

# learning a model for train pairs
2.000	
1.656	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.424	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.345	OUT DEF: ^.layer_0.shape.color=blue
1.320	OUT DEF: ^.color=black
1.298	OUT DEF: ^.size=(?,?)
1.205	OUT DEF: ^.size.i=3
1.112	OUT DEF: ^.size.j=3
1.090	OUT DEF: ^.layer_0.pos=(?,?)
1.041	OUT DEF: ^.layer_0.pos.i=0
0.991	OUT DEF: ^.layer_0.pos.j=0
0.970	OUT DEF: ^.layer_0.shape.size=(?,?)
0.948	IN  DEF: ^.layer_0.shape.color=red
0.942	IN  DEF: ^.color=black
0.936	IN  DEF: ^.size=(?,?)
0.930	IN  DEF: ^.layer_0.pos=(?,?)
0.924	IN  DEF: ^.layer_0.shape.size=(?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 42.3 + 10590.4 = 10632.7
DL output with Mo: L = 45.8 + 1428.8 = 1474.6
DL input+output M: L = 88.1 + 12019.2 = 12107.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
diff: 
delta:
   (32.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,1)
diff: 
delta:
   (52.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=1 
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (2,2)
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2 
   (132.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask Even Checkboard at (0,0)
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (2,2)
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2 
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta: (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
   (108.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=1 
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta: (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta:
   (27.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (7.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full at (0,4)
diff: 
delta: (2,1)=2  (2,2)=2  (2,4)=0  (2,5)=0  (3,1)=2  (3,2)=2  (5,1)=2  (5,2)=2  (6,1)=2  (6,2)=2 
   (223.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full at (0,4)
diff: 
delta: (2,1)=2  (2,2)=2  (2,4)=0  (2,5)=0  (3,1)=2  (3,2)=2  (5,1)=2  (5,2)=2  (6,1)=2  (6,2)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (3,3)
diff: 
delta: (0,4)=2  (0,5)=2  (1,1)=2  (1,2)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (4,0)=2  (4,1)=2  (5,0)=2  (5,1)=2 
   (277.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x-cross at (0,0)
diff: 
delta:
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (3,3)
diff: 
delta: (0,4)=2  (0,5)=2  (1,1)=2  (1,2)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (4,0)=2  (4,1)=2  (5,0)=2  (5,1)=2 
! 5 wrong pixels (generated / expected)

TRAIN ff28f65a.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (0,0)
diff: 
delta: (0,5)=2  (0,6)=2  (1,5)=2  (1,6)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
   (205.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (0,0)
diff: 
delta: (0,5)=2  (0,6)=2  (1,5)=2  (1,6)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/8: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,0)
diff: 
delta: (0,3)=2  (0,4)=2  (1,3)=2  (1,4)=2 
! 3 wrong pixels (generated / expected)

TEST ff28f65a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,3)
diff: 
delta: (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
! 4 wrong pixels (generated / expected)

TEST ff28f65a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (0,3)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (3,1)=2  (3,2)=2  (4,1)=2  (4,2)=2  (5,4)=2  (5,5)=2  (6,4)=2  (6,5)=2 
! 5 wrong pixels (generated / expected)

TEST ff28f65a.json/3: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 1428.8 bits (1428.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-1] Checking task ff805c23.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 9.0 + 218575.4 = 218584.4
DL output with Mo: L = 9.0 + 4354.2 = 4363.2
DL input+output M: L = 17.9 + 222929.7 = 222947.6

# learning a model for train pairs
2.000	
1.554	OUT OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.188	IN  OBJECT at ^.layer_0: a rectangle with size ? and color ? and mask ? at ?
1.116	IN  OBJECT at ^.layer_01: a rectangle with size ? and color ? and mask ? at ?
1.052	IN  OBJECT at ^.layer_011: a rectangle with size ? and color ? and mask ? at ?
1.027	IN  OBJECT at ^.layer_0111: a rectangle with size ? and color ? and mask ? at ?
0.968	OUT DEF: ^.layer_0.pos=^.layer_011.pos
0.936	IN  DEF: ^.layer_011.shape.color=green
0.926	OUT DEF: ^.color=black
0.918	OUT DEF: ^.size=(?,?)
0.871	OUT DEF: ^.size.i=5
0.823	OUT DEF: ^.size.j=5
0.815	OUT DEF: ^.layer_0.shape.size=(?,?)
0.768	OUT DEF: ^.layer_0.shape.size.i=5
0.721	OUT DEF: ^.layer_0.shape.size.j=5
0.721	IN  DEF: ^.color=black
0.721	IN  DEF: ^.size=(?,?)
0.719	IN  DEF: ^.size.i=24
0.718	IN  DEF: ^.size.j=24
0.718	IN  DEF: ^.layer_0.pos=(?,?)
0.718	IN  DEF: ^.layer_0.shape.size=(?,?)
0.717	IN  DEF: ^.layer_0111.pos=(?,?)
0.717	IN  DEF: ^.layer_0111.pos.i=18
0.684	IN  OBJECT at ^.layer_01111: a rectangle with size ? and color ? and mask ? at ?
0.662	IN  OBJECT at ^.layer_01110: a rectangle with size ? and color ? and mask ? at ?
0.652	IN  DEF: ^.layer_01110.shape.color=green
0.652	IN  DEF: ^.color=black
0.651	IN  DEF: ^.layer_01.pos=(?,?)
0.651	IN  DEF: ^.layer_01.shape.size=(?,?)
0.651	IN  DEF: ^.layer_011.pos=(?,?)
0.650	IN  DEF: ^.layer_011.pos.i=(0)
0.635	IN  OBJECT at ^.layer_011100: a rectangle with size ? and color ? and mask ? at ?
0.618	IN  DEF: ^.layer_011100.shape.color=green
0.617	IN  DEF: ^.layer_011.pos.j=(0)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color ? and mask ? at ^.layer_011.pos
WHERE (Mi)
a background with size (24,24) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size ? and color green and mask ? at ((0),(0))
  _011100: a rectangle with size ? and color green and mask ? at ?
  _01110: a rectangle with size ? and color green and mask ? at ?
  _0111: a rectangle with size ? and color ? and mask ? at (18,?)
  _01111: a rectangle with size ? and color ? and mask ? at ?

DL input  with Mi: L = 196.9 + 73359.3 = 73556.2
DL output with Mo: L = 52.6 + 1170.1 = 1222.6
DL input+output M: L = 249.4 + 74529.3 = 74778.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color red and mask .......xxx....xxx.......|......xx.xx..xx.xx......|......x..x....x..x......|......xxxxxxxxxxxx......|.......x.xxxxxx.x.......|.........xxxxxx.........|.xxx..x..xxxxxx..x..xxx.|xx.xx..xx.xxxx.xx..xx.xx|x..x...xx..xx..xx...x..x|xxxxxxx..xxxxxx..xxxxxxx|.x.xxxxx.x.xx.x.xxxxx.x.|...xxxxxxxx..xxxxxxxx...|...xxxxxxxx..xxxxxxxx...|.x.xxxxx.x.xx.x.xxxxx.x.|xxxxxxx..xxxxxx..xxxxxxx|x..x...xx..xx..xx...x..x|xx.xx..xx.xxxx.xx..xx.xx|.xxx..x..xxxxxx..x..xxx.|.........xxxxxx.........|.......x.xxxxxx.x.......|......xxxxxxxxxxxx......|......x..x....x..x......|......xx.xx..xx.xx......|.......xxx....xxx....... at (0,0)
  _01: a rectangle with size (6,6) and color green and mask ..xxxx|xx.xxx|xx.xxx|xxx..x|xxxxx.|.xxxx. at (18,0)
  _011: a rectangle with size (6,6) and color green and mask .xxxx.|xxxxx.|xxx..x|xx.xxx|xx.xxx|..xxxx at (0,0)
  _011100: a rectangle with size (6,6) and color green and mask xxxx..|xxx.xx|xxx.xx|x..xxx|.xxxxx|.xxxx. at (18,18)
  _01110: a rectangle with size (1,4) and color green and mask Full at (5,18)
  _0111: a rectangle with size (1,24) and color black and mask Full at (18,0)
  _01111: a rectangle with size (5,5) and color blue and mask Full at (0,18)
diff: 
delta: (1,23)=3  (2,23)=3  (3,23)=3  (4,23)=3 
   (993.4 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask .xxxx|.xxxx|x..xx|xxx.x|xxx.x at (0,0)
diff: 
delta:
   (32.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color red and mask .......xxx....xxx.......|......xx.xx..xx.xx......|......x..x....x..x......|......xxxxxxxxxxxx......|.......x.xxxxxx.x.......|.........xxxxxx.........|.xxx..x..xxxxxx..x..xxx.|xx.xx..xx.xxxx.xx..xx.xx|x..x...xx..xx..xx...x..x|xxxxxxx..xxxxxx..xxxxxxx|.x.xxxxx.x.xx.x.xxxxx.x.|...xxxxxxxx..xxxxxxxx...|...xxxxxxxx..xxxxxxxx...|.x.xxxxx.x.xx.x.xxxxx.x.|xxxxxxx..xxxxxx..xxxxxxx|x..x...xx..xx..xx...x..x|xx.xx..xx.xxxx.xx..xx.xx|.xxx..x..xxxxxx..x..xxx.|.........xxxxxx.........|.......x.xxxxxx.x.......|......xxxxxxxxxxxx......|......x..x....x..x......|......xx.xx..xx.xx......|.......xxx....xxx....... at (0,0)
  _01: a rectangle with size (24,6) and color green and mask Full at (0,0)
  _011: a rectangle with size (6,6) and color green and mask xxxx..|xxx.xx|xxx.xx|x..xxx|.xxxxx|.xxxx. at (18,18)
  _011100: a rectangle with size (5,5) and color blue and mask Full at (0,18)
  _01110: a rectangle with size (1,4) and color green and mask Full at (5,18)
  _0111: a rectangle with size (1,18) and color black and mask Full at (18,6)
  _01111: a rectangle with size (4,1) and color green and mask Full at (1,23)
diff:   ^.layer_011100.shape.color  ^.layer_011.pos.j  ^.layer_011.pos.i
delta: (0,0)=0  (0,5)=0  (1,5)=0  (2,3)=0  (2,4)=0  (3,2)=0  (4,2)=0  (5,0)=0  (5,1)=0  (6,0)=0  (6,4)=0  (6,5)=0  (7,2)=0  (7,5)=0  (8,1)=0  (8,2)=0  (8,4)=0  (8,5)=0  (10,0)=0  (10,2)=0  (11,0)=0  (11,1)=0  (11,2)=0  (12,0)=0  (12,1)=0  (12,2)=0  (13,0)=0  (13,2)=0  (15,1)=0  (15,2)=0  (15,4)=0  (15,5)=0  (16,2)=0  (16,5)=0  (17,0)=0  (17,4)=0  (17,5)=0  (18,0)=0  (18,1)=0  (19,2)=0  (20,2)=0  (21,3)=0  (21,4)=0  (22,5)=0  (23,0)=0  (23,5)=0 
! 19 wrong pixels (generated / expected)

TRAIN ff805c23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask xxxxxxxxxxxx|xx.xxxxxx.xx|x..x.xx.x..x|xxxxxxxxxxxx|xx.xxxxxx.xx|.......xxxxx|.......xxxxx|.....xxxx.xx|.....xxxxxxx|.....xx.x..x|xx.xxxxxx.xx|xxxxxxxxxxxx at (6,6)
  _01: a rectangle with size (6,12) and color cyan and mask .xx......xx.|x.x......x.x|xxx.xxxx.xxx|...x.xx.x...|..x..xx..x..|..xxx..xxx.. at (0,6)
  _011: a rectangle with size (6,24) and color green and mask Full at (0,0)
  _011100: a rectangle with size (6,6) and color green and mask x.xx..|.xxx..|x.x.xx|xxxxxx|x.x.x.|.xxx.x at (18,0)
  _01110: a rectangle with size (6,6) and color green and mask ..xx.x|..xxx.|xx.x.x|xxxxxx|.x.x.x|x.xxx. at (18,18)
  _0111: a rectangle with size (6,12) and color cyan and mask ..xxx..xxx..|..x..xx..x..|...x.xx.x...|xxx.xxxx.xxx|x.x......x.x|.xx......xx. at (18,6)
  _01111: a rectangle with size (12,6) and color cyan and mask .xx...|x.x...|xxx.xx|...x.x|..x..x|..xxx.|..xxx.|..x..x|...x.x|xxx.xx|x.x...|.xx... at (6,0)
diff: 
delta: (0,0)=0  (0,4)=0  (0,6)=0  (0,9)=0  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=0  (0,17)=0  (0,19)=0  (0,23)=0  (1,1)=0  (1,3)=0  (1,5)=0  (1,7)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (1,13)=0  (1,14)=0  (1,16)=0  (1,18)=0  (1,20)=0  (1,22)=0  (2,9)=0  (2,14)=0  (3,1)=0  (3,3)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,10)=0  (3,13)=0  (3,15)=0  (3,16)=0  (3,17)=0  (3,20)=0  (3,22)=0  (4,0)=0  (4,4)=0  (4,5)=0  (4,6)=8  (4,7)=0  (4,9)=0  (4,10)=0  (4,13)=0  (4,14)=0  (4,16)=0  (4,17)=8  (4,18)=0  (4,19)=0  (4,23)=0  (5,1)=0  (5,4)=0  (5,5)=3  (5,6)=8  (5,7)=0  (5,11)=0  (5,12)=0  (5,16)=0  (5,17)=8  (5,18)=3  (5,19)=0  (5,22)=0  (6,4)=8  (6,5)=8  (6,18)=8  (6,19)=8  (6,21)=8  (6,22)=8  (7,21)=8  (7,23)=8  (8,18)=8  (8,19)=8  (8,21)=8  (8,22)=8  (8,23)=8  (9,18)=8  (9,20)=8  (10,0)=8  (10,18)=8  (10,21)=8  (10,23)=8  (11,0)=8  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,19)=8  (11,20)=8  (11,21)=8  (11,23)=8  (12,0)=8  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,19)=8  (12,20)=8  (12,21)=8  (12,23)=8  (13,0)=8  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,18)=8  (13,21)=8  (13,23)=8  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,18)=8  (14,20)=8  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,18)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,23)=8  (16,21)=8  (16,23)=8  (17,4)=8  (17,5)=8  (17,18)=8  (17,19)=8  (17,21)=8  (17,22)=8  (18,5)=3  (18,6)=8  (18,17)=8  (18,18)=3  (19,6)=8  (19,17)=8  (23,10)=8  (23,11)=8  (23,12)=8  (23,13)=8 
   (3873.7 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xxxxx|xxxxx|xx.xx|xxxxx|x..x. at (0,0)
diff: 
delta:
   (32.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask xxxxxxxxxxxx|xx.xxxxxx.xx|x..x.xx.x..x|xxxxxxxxxxxx|xx.xxxxxx.xx|.......xxxxx|.......xxxxx|.....xxxx.xx|.....xxxxxxx|.....xx.x..x|xx.xxxxxx.xx|xxxxxxxxxxxx at (6,6)
  _01: a rectangle with size (12,24) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (24,6) and color green and mask Full at (0,0)
  _011100: a rectangle with size (24,6) and color green and mask Full at (0,18)
  _01110: a rectangle with size (6,12) and color cyan and mask .xx......xx.|x.x......x.x|xxx.xxxx.xxx|...x.xx.x...|..x..xx..x..|..xxx..xxx.. at (0,6)
  _0111: a rectangle with size (6,12) and color cyan and mask ..xxx..xxx..|..x..xx..x..|...x.xx.x...|xxx.xxxx.xxx|x.x......x.x|.xx......xx. at (18,6)
  _01111: a rectangle with size (1,4) and color cyan and mask Full at (0,10)
diff:   ^.layer_01110.shape.color
delta: (0,0)=0  (0,4)=0  (0,19)=0  (0,23)=0  (1,1)=0  (1,3)=0  (1,5)=0  (1,18)=0  (1,20)=0  (1,22)=0  (3,1)=0  (3,3)=0  (3,20)=0  (3,22)=0  (4,0)=0  (4,4)=0  (4,5)=0  (4,6)=8  (4,17)=8  (4,18)=0  (4,19)=0  (4,23)=0  (5,1)=0  (5,4)=0  (5,5)=3  (5,6)=8  (5,17)=8  (5,18)=3  (5,19)=0  (5,22)=0  (6,0)=0  (6,3)=0  (6,4)=8  (6,5)=8  (6,18)=8  (6,19)=8  (6,20)=0  (6,23)=0  (7,1)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,8)=0  (7,15)=0  (7,18)=0  (7,19)=0  (7,20)=0  (7,22)=0  (8,3)=0  (8,7)=0  (8,8)=0  (8,10)=0  (8,13)=0  (8,15)=0  (8,16)=0  (8,20)=0  (9,0)=0  (9,1)=0  (9,2)=0  (9,4)=0  (9,19)=0  (9,21)=0  (9,22)=0  (9,23)=0  (10,0)=8  (10,1)=0  (10,3)=0  (10,4)=0  (10,8)=0  (10,15)=0  (10,19)=0  (10,20)=0  (10,22)=0  (10,23)=8  (11,0)=8  (11,1)=0  (11,5)=0  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,11)=0  (11,12)=0  (11,18)=0  (11,22)=0  (11,23)=8  (12,0)=8  (12,1)=0  (12,5)=0  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,11)=0  (12,12)=0  (12,18)=0  (12,22)=0  (12,23)=8  (13,0)=8  (13,1)=0  (13,3)=0  (13,4)=0  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,15)=0  (13,19)=0  (13,20)=0  (13,22)=0  (13,23)=8  (14,0)=0  (14,1)=0  (14,2)=0  (14,4)=0  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,19)=0  (14,21)=0  (14,22)=0  (14,23)=0  (15,3)=0  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,13)=0  (15,15)=0  (15,16)=0  (15,20)=0  (16,1)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,8)=0  (16,15)=0  (16,18)=0  (16,19)=0  (16,20)=0  (16,22)=0  (17,0)=0  (17,3)=0  (17,4)=8  (17,5)=8  (17,18)=8  (17,19)=8  (17,20)=0  (17,23)=0  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,17)=8  (18,18)=3  (18,19)=0  (18,22)=0  (19,0)=0  (19,4)=0  (19,5)=0  (19,6)=8  (19,17)=8  (19,18)=0  (19,19)=0  (19,23)=0  (20,1)=0  (20,3)=0  (20,20)=0  (20,22)=0  (22,1)=0  (22,3)=0  (22,5)=0  (22,18)=0  (22,20)=0  (22,22)=0  (23,0)=0  (23,4)=0  (23,10)=8  (23,11)=8  (23,12)=8  (23,13)=8  (23,19)=0  (23,23)=0 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask xxxxxxxxxxxx|xx.xxxxxx.xx|x..x.xx.x..x|xxxxxxxxxxxx|xx.xxxxxx.xx|.......xxxxx|.......xxxxx|.....xxxx.xx|.....xxxxxxx|.....xx.x..x|xx.xxxxxx.xx|xxxxxxxxxxxx at (6,6)
  _01: a rectangle with size (6,12) and color cyan and mask .xx......xx.|x.x......x.x|xxx.xxxx.xxx|...x.xx.x...|..x..xx..x..|..xxx..xxx.. at (0,6)
  _011: a rectangle with size (12,24) and color cyan and mask Full at (6,0)
  _011100: a rectangle with size (6,24) and color green and mask Full at (0,0)
  _01110: a rectangle with size (6,6) and color green and mask x.xx..|.xxx..|x.x.xx|xxxxxx|x.x.x.|.xxx.x at (18,0)
  _0111: a rectangle with size (6,12) and color cyan and mask ..xxx..xxx..|..x..xx..x..|...x.xx.x...|xxx.xxxx.xxx|x.x......x.x|.xx......xx. at (18,6)
  _01111: a rectangle with size (6,6) and color green and mask ..xx.x|..xxx.|xx.x.x|xxxxxx|.x.x.x|x.xxx. at (18,18)
diff:   ^.layer_011.shape.color  ^.layer_011.pos.i
delta: (0,0)=0  (0,4)=0  (0,6)=0  (0,9)=0  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=0  (0,17)=0  (0,19)=0  (0,23)=0  (1,1)=0  (1,3)=0  (1,5)=0  (1,7)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,12)=0  (1,13)=0  (1,14)=0  (1,16)=0  (1,18)=0  (1,20)=0  (1,22)=0  (2,9)=0  (2,14)=0  (3,1)=0  (3,3)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,10)=0  (3,13)=0  (3,15)=0  (3,16)=0  (3,17)=0  (3,20)=0  (3,22)=0  (4,0)=0  (4,4)=0  (4,5)=0  (4,6)=8  (4,7)=0  (4,9)=0  (4,10)=0  (4,13)=0  (4,14)=0  (4,16)=0  (4,17)=8  (4,18)=0  (4,19)=0  (4,23)=0  (5,1)=0  (5,4)=0  (5,5)=3  (5,6)=8  (5,7)=0  (5,11)=0  (5,12)=0  (5,16)=0  (5,17)=8  (5,18)=3  (5,19)=0  (5,22)=0  (6,0)=0  (6,3)=0  (6,4)=8  (6,5)=8  (6,18)=8  (6,19)=8  (6,20)=0  (6,23)=0  (7,1)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,8)=0  (7,15)=0  (7,18)=0  (7,19)=0  (7,20)=0  (7,22)=0  (8,3)=0  (8,7)=0  (8,8)=0  (8,10)=0  (8,13)=0  (8,15)=0  (8,16)=0  (8,20)=0  (9,0)=0  (9,1)=0  (9,2)=0  (9,4)=0  (9,19)=0  (9,21)=0  (9,22)=0  (9,23)=0  (10,0)=8  (10,1)=0  (10,3)=0  (10,4)=0  (10,8)=0  (10,15)=0  (10,19)=0  (10,20)=0  (10,22)=0  (10,23)=8  (11,0)=8  (11,1)=0  (11,5)=0  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,11)=0  (11,12)=0  (11,18)=0  (11,22)=0  (11,23)=8  (12,0)=8  (12,1)=0  (12,5)=0  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,11)=0  (12,12)=0  (12,18)=0  (12,22)=0  (12,23)=8  (13,0)=8  (13,1)=0  (13,3)=0  (13,4)=0  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,15)=0  (13,19)=0  (13,20)=0  (13,22)=0  (13,23)=8  (14,0)=0  (14,1)=0  (14,2)=0  (14,4)=0  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,19)=0  (14,21)=0  (14,22)=0  (14,23)=0  (15,3)=0  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,13)=0  (15,15)=0  (15,16)=0  (15,20)=0  (16,1)=0  (16,3)=0  (16,4)=0  (16,5)=0  (16,8)=0  (16,15)=0  (16,18)=0  (16,19)=0  (16,20)=0  (16,22)=0  (17,0)=0  (17,3)=0  (17,4)=8  (17,5)=8  (17,18)=8  (17,19)=8  (17,20)=0  (17,23)=0  (18,5)=3  (18,6)=8  (18,17)=8  (18,18)=3  (19,6)=8  (19,17)=8  (23,10)=8  (23,11)=8  (23,12)=8  (23,13)=8 
! 21 wrong pixels (generated / expected)

TRAIN ff805c23.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (17,20) and color grey and mask .......xx..xx.......|......x.xxxx.x......|......xx....xx......|....x..x....x..x....|...x.x..xxxx..x.x...|....xxx..xx..xxx....|.xx..xxx.xx.xxx..xx.|x.xx..xxxxxxxx..xx.x|xx..x..x.xx.x..x..xx|.x..xxxxx..xxxxx..x.|.x..xxxxx..xxxxx..x.|xx..x..x.xx.x..x..xx|x.xx..xxxxxxxx..xx.x|.xx..xxx.....xx..xx.|....xxx......xxx....|...x.x........x.x...|....x..........x.... at (2,2)
  _01: a rectangle with size (5,5) and color blue and mask Full at (15,10)
  _011: a rectangle with size (6,6) and color green and mask .xxxx.|xxxxxx|xxx...|xx....|xx....|.x.... at (0,0)
  _011100: a rectangle with size (6,6) and color green and mask .xxxx.|xxxxxx|...xxx|....xx|....xx|....x. at (0,18)
  _01110: a rectangle with size (6,6) and color green and mask .x....|xx....|xx....|xxx...|xxxxxx|.xxxx. at (18,0)
  _0111: a rectangle with size (6,6) and color green and mask ....x.|....xx|....xx|...xxx|xxxxxx|.xxxx. at (18,18)
  _01111: a rectangle with size (4,8) and color grey and mask .xxxxxx.|xxxxxxxx|x.xxxx.x|.xx..xx. at (18,8)
diff: 
delta: (0,6)=5# (0,7)=5# (0,8)=5# (0,11)=5# (0,12)=5# (0,15)=5# (0,16)=5# (0,17)=5# (1,6)=5# (1,7)=5# (1,16)=5# (1,17)=5# (2,6)=5# (2,17)=5# (3,4)=3  (3,5)=3  (3,18)=3  (3,19)=3  (4,3)=3  (4,4)=3  (4,19)=3  (4,20)=3  (5,3)=3  (5,5)=3  (5,18)=3  (5,20)=3  (6,0)=5# (6,1)=5# (6,2)=5# (6,21)=5# (6,22)=5# (6,23)=5# (7,0)=5# (7,1)=5# (7,22)=5# (7,23)=5# (8,0)=5# (8,23)=5# (11,0)=5# (11,23)=5# (12,0)=5# (12,23)=5# (15,0)=5# (15,23)=5# (16,0)=5# (16,1)=5# (16,22)=5# (16,23)=5# (17,0)=5# (17,1)=5# (17,2)=5# (17,21)=5# (17,22)=5# (17,23)=5# (18,3)=3  (18,5)=3  (18,18)=3  (18,20)=3  (19,3)=3  (19,4)=3  (19,19)=3  (19,20)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (21,6)=5# (21,17)=5# (22,6)=5# (22,7)=5# (22,16)=5# (22,17)=5# (23,6)=5# (23,7)=5# (23,8)=5# (23,11)=5# (23,12)=5# (23,15)=5# (23,16)=5# (23,17)=5#
   (2468.8 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask .xx..|.xx..|xxxx.|....x|....x at (0,0)
diff: 
delta: (0,4)=5#
   (51.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (17,20) and color grey and mask .......xx..xx.......|......x.xxxx.x......|......xx....xx......|....x..x....x..x....|...x.x..xxxx..x.x...|....xxx..xx..xxx....|.xx..xxx.xx.xxx..xx.|x.xx..xxxxxxxx..xx.x|xx..x..x.xx.x..x..xx|.x..xxxxx..xxxxx..x.|.x..xxxxx..xxxxx..x.|xx..x..x.xx.x..x..xx|x.xx..xxxxxxxx..xx.x|.xx..xxx.....xx..xx.|....xxx......xxx....|...x.x........x.x...|....x..........x.... at (2,2)
  _01: a rectangle with size (5,5) and color blue and mask Full at (15,10)
  _011: a rectangle with size (6,6) and color green and mask .xxxx.|xxxxxx|xxx...|xx....|xx....|.x.... at (0,0)
  _011100: a rectangle with size (6,6) and color green and mask .xxxx.|xxxxxx|...xxx|....xx|....xx|....x. at (0,18)
  _01110: a rectangle with size (6,6) and color green and mask .x....|xx....|xx....|xxx...|xxxxxx|.xxxx. at (18,0)
  _0111: a rectangle with size (6,6) and color green and mask ....x.|....xx|....xx|...xxx|xxxxxx|.xxxx. at (18,18)
  _01111: a rectangle with size (4,8) and color grey and mask .xxxxxx.|xxxxxxxx|x.xxxx.x|.xx..xx. at (18,8)
diff: 
delta: (0,6)=5# (0,7)=5# (0,8)=5# (0,11)=5# (0,12)=5# (0,15)=5# (0,16)=5# (0,17)=5# (1,6)=5# (1,7)=5# (1,16)=5# (1,17)=5# (2,6)=5# (2,17)=5# (3,4)=3  (3,5)=3  (3,18)=3  (3,19)=3  (4,3)=3  (4,4)=3  (4,19)=3  (4,20)=3  (5,3)=3  (5,5)=3  (5,18)=3  (5,20)=3  (6,0)=5# (6,1)=5# (6,2)=5# (6,21)=5# (6,22)=5# (6,23)=5# (7,0)=5# (7,1)=5# (7,22)=5# (7,23)=5# (8,0)=5# (8,23)=5# (11,0)=5# (11,23)=5# (12,0)=5# (12,23)=5# (15,0)=5# (15,23)=5# (16,0)=5# (16,1)=5# (16,22)=5# (16,23)=5# (17,0)=5# (17,1)=5# (17,2)=5# (17,21)=5# (17,22)=5# (17,23)=5# (18,3)=3  (18,5)=3  (18,18)=3  (18,20)=3  (19,3)=3  (19,4)=3  (19,19)=3  (19,20)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (21,6)=5# (21,17)=5# (22,6)=5# (22,7)=5# (22,16)=5# (22,17)=5# (23,6)=5# (23,7)=5# (23,8)=5# (23,11)=5# (23,12)=5# (23,15)=5# (23,16)=5# (23,17)=5#
! 25 wrong pixels (generated / expected)

TRAIN ff805c23.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (12,12) and color cyan and mask xxx.....xxxx|xxx......xxx|xxx......xxx|x.......x..x|x.x.....xx.x|xx.xxxxxx.xx|xx.xxxxxx.xx|x.xx.xx.xx.x|x..xxxxxx..x|xxx.x..x.xxx|xxx..xx..xxx|xxxxxxxxxxxx at (6,6)
  _01: a rectangle with size (24,12) and color green and mask Full at (0,6)
  _011: a rectangle with size (12,6) and color green and mask .xxx..|xxxx.x|xx..xx|xx..xx|..xx.x|.xxxxx|.xxxxx|..xx.x|xx..xx|xx..xx|xxxx.x|.xxx.. at (6,0)
  _011100: a rectangle with size (12,6) and color green and mask ..xxx.|x.xxxx|xx..xx|xx..xx|x.xx..|xxxxx.|xxxxx.|x.xx..|xx..xx|xx..xx|x.xxxx|..xxx. at (6,18)
  _01110: a rectangle with size (6,24) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (6,6) and color yellow and mask .x.xx.|x..xxx|.xx.xx|xx.x..|xxxx.x|xxx.x. at (18,0)
  _01111: a rectangle with size (6,6) and color yellow and mask .xx.x.|xxx..x|xx.xx.|..x.xx|x.xxxx|.x.xxx at (18,18)
diff:   ^.layer_01110.shape.color  ^.layer_011.pos.i
delta: (0,3)=0  (0,5)=0  (0,6)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,17)=0  (0,18)=0  (0,20)=0  (1,4)=0  (1,10)=0  (1,13)=0  (1,19)=0  (2,2)=0  (2,4)=0  (2,5)=0  (2,8)=0  (2,9)=0  (2,14)=0  (2,15)=0  (2,18)=0  (2,19)=0  (2,21)=0  (3,0)=0  (3,3)=0  (3,8)=0  (3,9)=0  (3,14)=0  (3,15)=0  (3,20)=0  (3,23)=0  (4,1)=0  (4,2)=0  (4,6)=0  (4,7)=0  (4,10)=0  (4,13)=0  (4,16)=0  (4,17)=0  (4,21)=0  (4,22)=0  (5,0)=0  (5,2)=0  (5,5)=0  (5,6)=0  (5,17)=0  (5,18)=0  (5,21)=0  (5,23)=0  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=0  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=0  (9,7)=0  (9,8)=0  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=0  (9,16)=0  (10,7)=0  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,16)=0  (11,8)=0  (11,15)=0  (12,8)=0  (12,15)=0  (13,7)=0  (13,10)=0  (13,13)=0  (13,16)=0  (14,7)=0  (14,8)=0  (14,15)=0  (14,16)=0  (15,9)=0  (15,11)=0  (15,12)=0  (15,14)=0  (16,9)=0  (16,10)=0  (16,13)=0  (16,14)=0  (18,6)=0  (18,17)=0  (19,6)=0  (19,7)=0  (19,10)=0  (19,13)=0  (19,16)=0  (19,17)=0  (20,8)=0  (20,9)=0  (20,14)=0  (20,15)=0  (21,8)=0  (21,9)=0  (21,14)=0  (21,15)=0  (22,10)=0  (22,13)=0  (23,6)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,13)=0  (23,17)=0 
! 17 wrong pixels (generated / expected)

TEST ff805c23.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.3 sec (28.3 sec/task)
bits-train-error = 1170.1 bits (1170.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00


## performance measures averaged over 400 tasks
runtime-learning = 5516.0 sec (13.8 sec/task)
bits-train-error = 3153251.7 bits (7883.1 bits/task)
acc-train-micro = 50.12 tasks (12.53%)
acc-train-macro = 41.00 tasks (10.25%)
acc-train-mrr = 0.12
acc-test-micro = 29.50 tasks (7.38%)
acc-test-macro = 29.00 tasks (7.25%)
acc-test-mrr = 0.07

// Profiling...
#calls	#calls/s	Time (s)	Percentage	Section
//      2967	  350626.3	    0.0	  0.0%	Grid.diff
//      4645	   78538.5	    0.1	  0.0%	Model2.write_grid
//    131311	 1849190.3	    0.1	  0.0%	Model2.defs_refinements
//     29185	  219660.7	    0.1	  0.0%	Model2.size_of_data
//    189754	  963869.0	    0.2	  0.0%	Model2.dl_model_data
//    240993	  708713.3	    0.3	  0.0%	Model2.insert_ilist
//     58519	  137222.9	    0.4	  0.0%	Grid.split_part
//    588360	  844782.9	    0.7	  0.0%	Model2.insert_patt
//     17876	   22478.3	    0.8	  0.0%	Model2.defs_expressions
//   1012306	  642516.9	    1.6	  0.0%	Model2.insert_template
//    270380	  140601.2	    1.9	  0.0%	Model2.apply_grid_refinement
//    277116	  109147.0	    2.5	  0.0%	Model2.model_refinements
//      5545	    2158.9	    2.6	  0.0%	Grid.segment_by_color
//    280118	   84953.4	    3.3	  0.1%	Model2.signature_of_template
//    685140	  151855.3	    4.5	  0.1%	Grid.majority_colors
//      1717	     346.7	    5.0	  0.1%	Model2.apply_model
//   1107887	  219641.7	    5.0	  0.1%	Model2.dl_path_among
//    265948	   38084.5	    7.0	  0.1%	Grid.points
//    542359	   50491.7	   10.7	  0.2%	Model2.dl_template
//   2065100	  147945.0	   14.0	  0.3%	Model2.read_grid/best_parses
//  12864569	  600940.4	   21.4	  0.4%	Model2.defs_check
//  14721787	  655482.7	   22.5	  0.4%	Model2.apply_template
// 139035280	 2762838.2	   50.3	  0.9%	Model2.state_minus_shape_gen
// 197181004	 2762643.9	   71.4	  1.3%	Model2.parse_single_point
//  55459839	  697136.6	   79.6	  1.4%	Model2.dl_ctx_of_data
//    721603	    7730.4	   93.3	  1.7%	Grid.rectangles
// 584037427	 4103913.4	  142.3	  2.6%	Model2.parse_shape
// 381669999	 1680075.6	  227.2	  4.1%	Model2.parse_single_rectangle
//  55459838	  114167.2	  485.8	  8.8%	Model2.read_grid/first_parses/dl
//  57331513	   36865.1	 1555.2	 28.2%	Model2.parse_grid
//  62365059	   16190.9	 3851.9	 69.8%	Model2.parse_layers
//   2539053	     476.9	 5324.0	 96.4%	Model2.read_grid/first_parses
//   2565648	     478.0	 5367.9	 97.2%	Model2.read_grid
//    271180	      50.4	 5381.8	 97.5%	Model2.read_grid_pairs
//       400	       0.1	 5516.0	 99.9%	Model2.learn_model
//       400	       0.1	 5521.2	100.0%	Test.print_learned_model

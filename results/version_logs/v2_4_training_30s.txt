## alpha = 10.
## max_nb_parse = 64
## max_parse_dl_factor = 3.
## max_relaxation_level_parse_layers = 16
## max_nb_diff = 3
## max_nb_grid_reads = 3
## max_expressions = 10000
## max_refinements = 50
## use_repeat = false
## options
alpha = 10.0
mode = training
timeout = 30

=====================================
[-400] Checking task 007bbfb7.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4599.6 = 4615.3
DL output with Mo: L = 15.6 + 26169.3 = 26184.9
DL input+output M: L = 31.2 + 30768.9 = 30800.1

# learning a model for train pairs
2.000	
1.332	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.035	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.998	OUT DEF: ^.size=^.size * 3
0.987	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.980	OUT DEF: ^.color=^.color
0.978	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 3 and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 3192.4 = 3241.2
DL output with Mo: L = 52.1 + 7165.1 = 7217.1
DL input+output M: L = 100.9 + 10357.4 = 10458.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xxx|.xx at (0,0)
diff: 
delta:
   (54.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask ....xx.xx|...xxxxxx|....xx.xx|.xx.xx.xx|xxxxxxxxx|.xx.xx.xx|....xx.xx|...xxxxxx|....xx.xx at (0,0)
diff: 
delta:
   (110.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xxx|.xx at (0,0)
diff: 
delta:
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask Full (and Border) at (0,1)
diff: 
delta: (1,0)=7#
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (0,0)
diff: 
delta: (2,0)=0 
! 28 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (2,1)=4 
   (84.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (0,6)=4  (0,8)=4  (2,1)=4  (2,7)=4  (6,3)=4  (6,5)=4  (8,4)=4 
   (218.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (2,1)=4 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,0)=4  (2,1)=4 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta: (0,0)=4  (0,2)=4 
! 11 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,2)
diff: 
delta: (2,0)=2 
   (64.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (7,2)
diff: 
delta: (4,8)=2  (5,6)=2  (5,8)=2  (7,8)=2  (8,0)=2  (8,6)=2  (8,8)=2 
   (195.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,2)
diff: 
delta: (2,0)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta: (1,2)=2  (2,2)=2 
! 13 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|x..|.xx at (0,0)
diff: 
delta:
   (56.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color pink and mask xx.xx....|x..x.....|.xx.xx...|xx.......|x........|.xx......|...xx.xx.|...x..x..|....xx.xx at (0,0)
diff: 
delta:
   (104.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|x..|.xx at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.xx|x.. at (0,0)
diff: 
delta:
! 58 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (1,1)
diff: 
delta: (0,2)=0  (2,0)=0 
! 54 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|x.. at (1,0)
diff: 
delta:
   (58.5 bits)
data: a background with size (9,9) and color red and layers
  _0: a rectangle with size (8,9) and color black and mask xxxxxxxxx|x..x..x..|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxx......|xxxxxxxxx|xxxx..x.. at (1,0)
diff: 
delta:
   (87.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|x.. at (1,0)
diff: 
delta:
! 56 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (2,1)=2  (2,2)=2 
! 25 wrong pixels (generated / expected)

TRAIN 007bbfb7.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x.x|x.x|xx. at (0,0)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,2) and color black and mask x.|x.|.x at (0,1)
diff: 
delta:
! 45 wrong pixels (generated / expected)

TEST 007bbfb7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 7165.1 bits (7165.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-399] Checking task 00d62c1b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 37435.4 = 37451.0
DL output with Mo: L = 15.6 + 50260.2 = 50275.9
DL input+output M: L = 31.2 + 87695.6 = 87726.9

# learning a model for train pairs
2.000	
1.312	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.692	OUT OBJECT at ^.layer_0: ^.layer_0
0.519	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.483	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.451	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.419	OUT OBJECT at ^.layer_001: ^.layer_00
0.398	OUT DEF: ^.size=^.size
0.391	IN  DEF: ^.layer_00.shape.color=green
0.383	IN  DEF: ^.layer_0.shape.color=green
0.378	OUT DEF: ^.layer_01.shape.color=yellow
0.373	OUT DEF: ^.layer_01.shape.size.i=^.layer_00.shape.size.j
0.370	IN  DEF: ^.color=black
0.366	OUT DEF: ^.layer_00.shape.mask=Full
0.363	OUT DEF: ^.layer_01.shape.mask=Full
0.361	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _001: ^.layer_00
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_00.shape.size.j,?) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 85.0 + 9720.1 = 9805.1
DL output with Mo: L = 103.5 + 4867.6 = 4971.2
DL input+output M: L = 188.5 + 14587.8 = 14776.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta:
   (82.9 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
  _001: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,3)
diff: 
delta:
   (35.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (4,4) and color green and mask .x..|x.x.|.x.x|..x. at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta:
   (116.5 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (1,4)
  _001: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,6)
diff: 
delta:
   (38.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _0: a rectangle with size (7,6) and color green and mask x.x...|.x.x..|x...x.|...x.x|.x.xx.|xxx...|.x.... at (1,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (0,5)
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
diff: 
delta:
   (147.7 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,2) and color yellow and mask Full at (3,4)
  _001: a rectangle with size (1,1) and color green and mask Full at (0,5)
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,7)
diff: 
delta:
   (44.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (0,5)
  _0: a rectangle with size (9,9) and color green and mask .....x...|....x....|.xx.xx.x.|x..x..x.x|...x..xx.|...x..x..|...x..x..|....xx.x.|........x at (0,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (6,7)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta:
   (151.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _001: a rectangle with size (1,2) and color green and mask Full at (6,7)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,3)
diff: 
delta: (8,4)=4 
   (67.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (6,7)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,4) and color green and mask Full at (1,2)
  _0: a rectangle with size (9,8) and color green and mask xxxx....|x..x....|x..x.x..|xxxxxxx.|.x....x.|.x...xx.|.xx..x.x|.x.x..x.|..x..... at (1,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _0: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (16,12)=3  (17,13)=3 
   (474.0 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,6) and color yellow and mask Full at (5,9)
  _001: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _0: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
  _01: a rectangle with size (12,2) and color yellow and mask Full at (2,8)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (10,9)=0  (11,15)=3  (11,17)=3  (15,16)=4  (16,12)=3  (17,13)=3 
   (302.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _0: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (16,12)=3  (17,13)=3 
! 62 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (5,5) and color green and mask x....|.x..x|..xxx|..x.x|..xxx at (12,13)
  _0: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (16,12)=3  (17,13)=3 
! 48 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (15,12) and color green and mask ....x.......|xxxx.xx.....|....x.x.....|....xxxxxxxx|....x......x|....x......x|....x......x|....x......x|....xxxxxxxx|....x.......|....xxx.....|..xx..x.....|...x..xx....|...xxxx.x...|......x..... at (1,4)
  _0: a rectangle with size (3,3) and color green and mask Full at (14,15)
diff: 
delta: (3,18)=3  (6,4)=3  (9,2)=3  (11,15)=3  (11,17)=3  (12,13)=3  (13,14)=3  (13,17)=3  (15,15)=3  (15,16)=0  (15,17)=3  (16,12)=3  (17,13)=3 
! 65 wrong pixels (generated / expected)

TRAIN 00d62c1b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (13,17) and color green and mask .x...............|x.xx.............|.x.xxxxx.xx......|...x....x..x.....|...xxxxx.xxx.....|............xxxxx|............x...x|............x...x|........xxxxx...x|........x...x...x|.......xxxxxx...x|.....xx.x...xxxxx|.......xx........ at (1,1)
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|.x...x|.x...x|.xxxxx at (15,6)
diff: 
delta: (13,2)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3 
! 70 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,6) and color green and mask xxxxxx|.x...x|.x...x|.xxxxx at (15,6)
  _0: a rectangle with size (13,17) and color green and mask .x...............|x.xx.............|.x.xxxxx.xx......|...x....x..x.....|...xxxxx.xxx.....|............xxxxx|............x...x|............x...x|........xxxxx...x|........x...x...x|.......xxxxxx...x|.....xx.x...xxxxx|.......xx........ at (1,1)
diff: 
delta: (13,2)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3 
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (13,17) and color green and mask .x...............|x.xx.............|.x.xxxxx.xx......|...x....x..x.....|...xxxxx.xxx.....|............xxxxx|............x...x|............x...x|........xxxxx...x|........x...x...x|.......xxxxxx...x|.....xx.x...xxxxx|.......xx........ at (1,1)
  _0: a rectangle with size (1,6) and color green and mask Full at (15,6)
diff: 
delta: (13,2)=3  (14,1)=3  (14,3)=3  (15,2)=3  (15,4)=3  (16,7)=3  (16,11)=3  (17,7)=3  (17,11)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3 
! 79 wrong pixels (generated / expected)

TEST 00d62c1b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.9 sec (23.9 sec/task)
bits-train-error = 4867.6 bits (4867.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-398] Checking task 017c7c7b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6549.6 = 6565.2
DL output with Mo: L = 15.6 + 9527.8 = 9543.4
DL input+output M: L = 31.2 + 16077.5 = 16108.7

# learning a model for train pairs
2.000	
1.228	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.523	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.493	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.464	OUT DEF: ^.size.i=^.size.i + 3
0.434	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i + 3
0.409	IN  DEF: ^.layer_0.shape.color=blue
0.388	OUT DEF: ^.size.j=^.size.j
0.369	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.352	OUT DEF: ^.layer_0.shape.color=red
0.340	IN  DEF: ^.color=black
0.333	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i + 3,^.size.j) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i + 3,^.layer_0.shape.size.j) and color red and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 1645.4 = 1695.7
DL output with Mo: L = 64.4 + 644.1 = 708.5
DL input+output M: L = 114.6 + 2289.5 = 2404.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask .x.|xx.|.x.|.xx|.x.|xx. at (0,0)
diff: 
delta:
   (63.3 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,3) and color red and mask .x.|xx.|.x.|.xx|.x.|xx.|.x.|.xx|.x. at (0,0)
diff: 
delta:
   (33.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask .x.|xx.|.x.|.xx|.x.|xx. at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,1)
diff: 
delta: (1,0)=1  (3,2)=1  (5,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (46.4 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,3) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask .x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
   (54.8 bits)
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (9,2) and color red and mask .x|xx|.x|.x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask .x|xx|.x|.x|xx|.x at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,1)
diff: 
delta: (1,0)=1  (4,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN 017c7c7b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,3) and color blue and mask xxx|.x.|.x.|xxx|.x.|.x. at (0,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,1)
diff: 
delta: (0,0)=1  (0,2)=1  (3,0)=1  (3,2)=1 
! 6 wrong pixels (generated / expected)

TEST 017c7c7b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 644.1 bits (644.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-397] Checking task 025d127b.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9568.5 = 9584.1
DL output with Mo: L = 15.6 + 9568.5 = 9584.1
DL input+output M: L = 31.2 + 19137.0 = 19168.2

# learning a model for train pairs
2.000	
1.415	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.839	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.691	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.555	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.513	OUT DEF: ^.size=^.size
0.496	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j - 1
0.479	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.i
0.467	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.455	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.443	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.432	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.421	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j + 1
0.410	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j + 1
0.400	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.390	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
0.385	IN  DEF: ^.color=black
0.380	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_0.shape.size.i) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,^.layer_0.pos.j + 1)
  _01: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.j - 1) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.i,^.layer_01.pos.j + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 2636.5 = 2716.9
DL output with Mo: L = 99.6 + 824.3 = 924.0
DL input+output M: L = 180.0 + 3460.9 = 3640.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
  _01: a rectangle with size (3,4) and color red and mask xxx.|x..x|.xxx at (7,2)
diff: 
delta:
   (138.6 bits)
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xxx..|x..x.|.x..x|..x.x|..xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask Border at (7,3)
diff: 
delta:
   (37.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (5,6) and color pink and mask xxx...|x..x..|.x..x.|..x..x|...xxx at (1,1)
  _01: a rectangle with size (3,4) and color red and mask xxx.|x..x|.xxx at (7,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 025d127b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,6)
  _01: a rectangle with size (5,8) and color cyan and mask xxxxx...|x....x..|.x....x.|..x....x|...xxxxx at (1,1)
diff: 
delta:
   (125.0 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,7)
  _01: a rectangle with size (5,7) and color cyan and mask xxxxx..|x....x.|.x....x|..x...x|..xxxxx at (1,2)
diff: 
delta:
   (45.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,6)
  _01: a rectangle with size (5,8) and color cyan and mask xxxxx...|x....x..|.x....x.|..x....x|...xxxxx at (1,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 025d127b.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,7)
  _01: a rectangle with size (5,9) and color yellow and mask xxxxxx...|x.....x..|.x.....x.|..x.....x|...xxxxxx at (1,1)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TEST 025d127b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.1 sec (6.1 sec/task)
bits-train-error = 824.3 bits (824.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-396] Checking task 045e512c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9936.0 = 9951.6
DL output with Mo: L = 15.6 + 34920.3 = 34935.9
DL input+output M: L = 31.2 + 44856.3 = 44887.5

# learning a model for train pairs
2.000	
1.605	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.431	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.266	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.118	OUT OBJECT at ^.layer_00: ^.layer_0
1.027	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.946	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.796	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 4310.9 = 4424.2
DL output with Mo: L = 145.9 + 12143.6 = 12289.5
DL input+output M: L = 259.1 + 16454.5 = 16713.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,6)
  _011: a rectangle with size (3,1) and color green and mask Full at (6,10)
diff: 
delta:
   (128.8 bits)
data: a background with size (21,21) and color black and layers
  _00: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _0: a rectangle with size (3,11) and color green and mask Full at (6,10)
  _01: a rectangle with size (3,3) and color red and mask Border at (10,6)
  _011: a rectangle with size (3,3) and color red and mask Border at (14,6)
  _0111: a rectangle with size (3,3) and color red and mask Border at (18,6)
diff: 
delta: (6,13)=0  (6,17)=0  (7,11)=0  (7,13)=0  (7,15)=0  (7,17)=0  (7,19)=0  (8,13)=0  (8,17)=0 
   (404.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,6)
  _011: a rectangle with size (3,1) and color green and mask Full at (6,10)
diff: 
delta:
! 52 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (10,6)
  _01: a rectangle with size (3,3) and color cyan and mask Border at (6,6)
  _011: a rectangle with size (3,1) and color green and mask Full at (6,10)
diff: 
delta:
! 57 wrong pixels (generated / expected)

TRAIN 045e512c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,9)
diff: 
delta: (8,15)=4 
   (153.5 bits)
data: a background with size (21,21) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _0: a rectangle with size (1,10) and color red and mask Full at (8,0)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (8,15)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (3,11)
  _0111: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,11)
diff: 
delta: (7,0)=2  (7,4)=2  (7,8)=2  (7,16)=4  (7,20)=4  (8,2)=0  (8,6)=0  (8,18)=0  (9,0)=2  (9,4)=2  (9,8)=2  (9,16)=4  (9,20)=4 
   (513.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (7,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,12)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,9)
diff: 
delta: (8,15)=4 
! 36 wrong pixels (generated / expected)

TRAIN 045e512c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,10)
diff: 
delta:
   (148.8 bits)
data: a background with size (21,21) and color black and layers
  _00: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _0: a rectangle with size (3,3) and color pink and mask xx.|x.x|.xx at (3,10)
  _01: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (11,10)
  _011: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (15,14)
  _0111: a rectangle with size (2,3) and color pink and mask x.x|.xx at (0,14)
diff: 
delta: (19,18)=1  (19,19)=1  (20,18)=1  (20,20)=1 
   (296.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,10)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (11,10)
  _01: a rectangle with size (3,3) and color grey and mask xx.|x.x|.xx at (7,6)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,10)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 045e512c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|x.x|x.x at (7,6)
  _01: a rectangle with size (1,3) and color green and mask Full at (11,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,10)
diff: 
delta: (4,10)=4  (5,10)=4 
! 55 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (11,6)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|x.x|x.x at (7,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,10)
diff: 
delta: (4,10)=4  (5,10)=4 
! 59 wrong pixels (generated / expected)

TEST 045e512c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 12143.6 bits (12143.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-395] Checking task 0520fde7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8289.7 = 8305.3
DL output with Mo: L = 15.6 + 1840.4 = 1856.0
DL input+output M: L = 31.2 + 10130.0 = 10161.3

# learning a model for train pairs
2.000	
1.793	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.609	OUT DEF: ^.size=^.size - ^.layer_0.pos
1.441	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.351	OUT DEF: ^.layer_0.shape.color=red
1.310	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size - ^.layer_0.pos and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 6693.3 = 6742.1
DL output with Mo: L = 62.8 + 862.5 = 925.4
DL input+output M: L = 111.7 + 7555.8 = 7667.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,4)
diff: 
delta: (0,0)=1  (0,3)=5# (1,1)=1  (1,3)=5# (2,0)=1  (2,3)=5#
   (197.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,4)
diff: 
delta: (0,0)=1  (0,3)=5# (1,1)=1  (1,3)=5# (2,0)=1  (2,3)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,4)
diff: 
delta: (0,0)=1  (0,3)=5# (0,5)=1  (1,1)=1  (1,3)=5# (2,0)=1  (2,3)=5#
! size mismatch, 2x3 instead of 3x3
>> Trial 3
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,0)=1  (0,5)=1  (1,1)=1  (1,4)=1  (1,5)=1  (1,6)=1  (2,0)=1 
! size mismatch, 3x4 instead of 3x3

TRAIN 0520fde7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (0,4)
diff: 
delta: (0,0)=1  (0,1)=1  (0,3)=5# (1,2)=1  (1,3)=5# (2,0)=1  (2,1)=1  (2,3)=5#
   (240.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Even Checkboard at (0,1)
diff: 
delta:
   (27.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|xx.|..x at (0,0)
diff: 
delta: (0,3)=5# (0,4)=0  (0,6)=0  (1,3)=5# (2,3)=5# (2,4)=0  (2,6)=0 
! size mismatch, 3x7 instead of 3x3
>> Trial 2
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,2)=0  (0,4)=0  (0,6)=0  (1,0)=0  (1,1)=0  (2,2)=0  (2,4)=0  (2,6)=0 
! size mismatch, 3x4 instead of 3x3
>> Trial 3
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask +-cross at (0,4)
diff: 
delta: (0,0)=1  (0,1)=1  (0,3)=5# (1,2)=1  (1,3)=5# (2,0)=1  (2,1)=1  (2,3)=5#
! 5 wrong pixels (generated / expected)

TRAIN 0520fde7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask xxx|.x.|.x. at (0,4)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=5# (1,2)=0  (1,3)=5# (2,0)=0  (2,3)=5#
   (231.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,0)
diff: 
delta: (2,2)=2 
   (41.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|.xx at (0,0)
diff: 
delta: (0,3)=5# (1,3)=5# (1,4)=1  (1,6)=1  (2,3)=5# (2,4)=1  (2,6)=1 
! size mismatch, 3x7 instead of 3x3
>> Trial 2
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask xxx|.x.|.x. at (0,4)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=5# (1,2)=0  (1,3)=5# (2,0)=0  (2,3)=5#
! 4 wrong pixels (generated / expected)

TRAIN 0520fde7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask Odd Checkboard at (0,0)
diff: 
delta: (0,3)=5# (0,5)=0  (1,3)=5# (1,5)=0  (2,3)=5# (2,4)=0  (2,6)=0 
! size mismatch, 3x7 instead of 3x3
>> Trial 2
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask .x.|.x.|x.x at (0,4)
diff: 
delta: (0,1)=0  (0,3)=5# (1,0)=0  (1,2)=0  (1,3)=5# (2,1)=0  (2,3)=5#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,7) and color blue and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,1)=0  (0,5)=0  (1,0)=0  (1,2)=0  (1,5)=0  (2,1)=0  (2,4)=0  (2,6)=0 
! size mismatch, 3x4 instead of 3x3

TEST 0520fde7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 862.5 bits (862.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-394] Checking task 05269061.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8696.6 = 8712.2
DL output with Mo: L = 15.6 + 24021.3 = 24036.9
DL input+output M: L = 31.2 + 32717.9 = 32749.1

# learning a model for train pairs
2.000	
1.802	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.654	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.515	OUT OBJECT at ^.layer_0: ^.layer_0
1.416	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.323	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.232	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.137	OUT OBJECT at ^.layer_010: ^.layer_01
1.073	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 4837.5 = 4950.7
DL output with Mo: L = 123.6 + 12016.2 = 12139.8
DL input+output M: L = 236.9 + 16853.7 = 17090.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (123.6 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (0,0)
  _010: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _011: a rectangle with size (6,6) and color cyan and mask .....x|....x.|...x..|..x...|.x....|x..... at (1,1)
  _0111: a rectangle with size (5,5) and color cyan and mask ....x|...x.|..x..|.x...|x.... at (0,0)
diff: 
delta: (2,6)=3  (3,5)=3  (4,4)=3  (4,6)=8  (5,3)=3  (5,5)=8  (5,6)=3  (6,2)=3  (6,4)=8  (6,5)=3 
   (455.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TRAIN 05269061.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|.x.|x.. at (4,4)
  _011: a rectangle with size (4,4) and color red and mask ...x|..x.|.x..|x... at (3,3)
diff: 
delta:
   (170.0 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _010: a rectangle with size (3,3) and color yellow and mask ..x|.x.|x.. at (4,4)
  _01: a rectangle with size (6,6) and color blue and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _011: a rectangle with size (6,6) and color yellow and mask .....x|....x.|...x..|..x...|.x....|x..... at (1,1)
  _0111: a rectangle with size (5,5) and color yellow and mask ....x|...x.|..x..|.x...|x.... at (0,0)
diff: 
delta: (0,1)=4  (0,2)=1  (1,0)=4  (1,1)=1  (2,0)=1  (5,6)=1  (6,5)=1 
   (383.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|.x..|x... at (3,3)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|.x.|x.. at (4,4)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|.x.|x.. at (4,4)
  _011: a rectangle with size (4,4) and color red and mask ...x|..x.|.x..|x... at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TRAIN 05269061.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _01: a rectangle with size (5,5) and color cyan and mask ....x|...x.|..x..|.x...|x.... at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask ...x|..x.|.x..|x... at (3,3)
diff: 
delta:
   (190.2 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _010: a rectangle with size (5,5) and color cyan and mask ....x|...x.|..x..|.x...|x.... at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask .....x|....x.|...x..|..x...|.x....|x..... at (1,1)
  _011: a rectangle with size (5,5) and color green and mask ....x|...x.|..x..|.x...|x.... at (2,2)
  _0111: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (0,0)
diff: 
delta: (0,1)=8  (1,0)=8  (4,6)=8  (5,5)=8  (5,6)=3  (6,4)=8  (6,5)=3 
   (363.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _01: a rectangle with size (5,5) and color cyan and mask ....x|...x.|..x..|.x...|x.... at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask ...x|..x.|.x..|x... at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask ...x|..x.|.x..|x... at (3,3)
  _011: a rectangle with size (5,5) and color cyan and mask ....x|...x.|..x..|.x...|x.... at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TRAIN 05269061.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask ......x|.....x.|....x..|...x...|..x....|.x.....|x...... at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask ......x|.....x.|....x..|...x...|..x....|.x.....|x...... at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
  _011: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TEST 05269061.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.3 sec (28.3 sec/task)
bits-train-error = 12016.2 bits (12016.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-393] Checking task 05f2a901.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10146.4 = 10162.0
DL output with Mo: L = 15.6 + 10146.4 = 10162.0
DL input+output M: L = 31.2 + 20292.8 = 20324.0

# learning a model for train pairs
2.000	
1.519	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.931	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.717	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.409	OUT OBJECT at ^.layer_01: ^.layer_01
0.349	OUT DEF: ^.size=^.size
0.317	OUT DEF: ^.layer_0.pos=^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
0.301	IN  DEF: ^.layer_0.shape.color=red
0.284	IN  DEF: ^.layer_01.shape.color=cyan
0.274	IN  DEF: ^.layer_01.shape.mask=Full
0.267	IN  DEF: ^.color=black
0.260	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 85.0 + 2501.6 = 2586.6
DL output with Mo: L = 53.5 + 0.0 = 53.5
DL input+output M: L = 138.5 + 2501.6 = 2640.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (2,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
diff: 
delta:
   (79.6 bits)
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (8,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,9) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xxx|xx.x at (2,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (10,3)
diff: 
delta:
correct output grid

TRAIN 05f2a901.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
diff: 
delta:
   (82.3 bits)
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .xx|.xx|xxx|.xx at (1,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (4,6)
diff: 
delta:
correct output grid

TRAIN 05f2a901.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (6,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
diff: 
delta:
   (88.3 bits)
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (3,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask ..xxx|xxxxx|.xx.. at (6,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (1,3)
diff: 
delta:
correct output grid

TRAIN 05f2a901.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,10) and color black and layers
  _0: a rectangle with size (4,2) and color red and mask x.|xx|xx|.x at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (6,1)
diff: 
delta:
correct output grid

TEST 05f2a901.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.8 sec (0.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-392] Checking task 06df4c85.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 193973.7 = 193989.3
DL output with Mo: L = 15.6 + 193973.7 = 193989.3
DL input+output M: L = 31.2 + 387947.4 = 387978.6

# learning a model for train pairs
2.000	
1.201	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.448	OUT OBJECT at ^.layer_0: ^.layer_0
0.365	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.303	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.253	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.235	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.231	OUT DEF: ^.size=^.size
0.229	OUT DEF: ^.layer_01.pos=^.layer_0.pos + 3
0.228	OUT DEF: ^.layer_011.shape.size.i=2
0.227	OUT DEF: ^.layer_01111.shape.size.j=2
0.227	OUT DEF: ^.layer_0111.shape.size.i=2
0.226	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.225	OUT DEF: ^.layer_011111.shape.size.i=2
0.224	OUT DEF: ^.layer_0111.shape.size.j=2
0.224	OUT DEF: ^.layer_01.shape.mask=Full
0.223	OUT DEF: ^.layer_011.shape.mask=Full
0.223	OUT DEF: ^.layer_0111.shape.mask=Full
0.222	OUT DEF: ^.layer_01111.shape.mask=Full
0.222	OUT DEF: ^.layer_011111.shape.mask=Full
0.221	IN  DEF: ^.color=black
0.221	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at ^.layer_0.pos + 3
  _011: a rectangle with size (2,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (2,2) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,2) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (2,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 38910.7 = 38958.7
DL output with Mo: L = 193.9 + 3706.7 = 3900.5
DL input+output M: L = 241.8 + 42617.4 = 42859.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,15)=2  (3,16)=2  (4,3)=2  (4,4)=2  (4,15)=2  (4,16)=2  (6,9)=1  (6,10)=1  (7,9)=1  (7,10)=1  (9,15)=2  (9,16)=2  (10,15)=2  (10,16)=2  (12,3)=3  (12,4)=3  (12,9)=3  (12,10)=3  (13,3)=3  (13,4)=3  (13,9)=3  (13,10)=3 
   (1130.2 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (2,14) and color red and mask Full at (3,3)
  _011: a rectangle with size (2,8) and color green and mask Full at (12,3)
  _0111: a rectangle with size (2,2) and color blue and mask Full at (6,9)
  _01111: a rectangle with size (2,2) and color red and mask Full at (6,15)
  _011111: a rectangle with size (2,2) and color red and mask Full at (9,15)
diff: 
delta:
   (117.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color cyan and mask ..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..|..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,15)=2  (3,16)=2  (4,3)=2  (4,4)=2  (4,15)=2  (4,16)=2  (6,9)=1  (6,10)=1  (7,9)=1  (7,10)=1  (9,15)=2  (9,16)=2  (10,15)=2  (10,16)=2  (12,3)=3  (12,4)=3  (12,9)=3  (12,10)=3  (13,3)=3  (13,4)=3  (13,9)=3  (13,10)=3 
! 48 wrong pixels (generated / expected)

TRAIN 06df4c85.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,12)=4  (3,13)=4  (4,3)=2  (4,4)=2  (4,12)=4  (4,13)=4  (9,9)=9# (9,10)=9# (9,21)=9# (9,22)=9# (10,9)=9# (10,10)=9# (10,21)=9# (10,22)=9# (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,9)=8  (18,10)=8  (18,18)=8  (18,19)=8  (19,9)=8  (19,10)=8  (19,18)=8  (19,19)=8 
   (1490.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (14,2) and color red and mask Full at (3,3)
  _011: a rectangle with size (2,11) and color cyan and mask Full at (18,9)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (3,12)
  _01111: a rectangle with size (5,2) and color cyan and mask Full at (12,18)
  _011111: a rectangle with size (2,14) and color brown and mask Full at (9,9)
diff: 
delta:
   (128.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color blue and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=2  (3,4)=2  (3,12)=4  (3,13)=4  (4,3)=2  (4,4)=2  (4,12)=4  (4,13)=4  (9,9)=9# (9,10)=9# (9,21)=9# (9,22)=9# (10,9)=9# (10,10)=9# (10,21)=9# (10,22)=9# (12,18)=8  (12,19)=8  (13,18)=8  (13,19)=8  (15,3)=2  (15,4)=2  (16,3)=2  (16,4)=2  (18,9)=8  (18,10)=8  (18,18)=8  (18,19)=8  (19,9)=8  (19,10)=8  (19,18)=8  (19,19)=8 
! 72 wrong pixels (generated / expected)

TRAIN 06df4c85.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=3  (3,4)=3  (3,15)=2  (3,16)=2  (4,3)=3  (4,4)=3  (4,15)=2  (4,16)=2  (9,9)=2  (9,10)=2  (9,18)=2  (9,19)=2  (10,9)=2  (10,10)=2  (10,18)=2  (10,19)=2  (18,3)=3  (18,4)=3  (18,15)=3  (18,16)=3  (19,3)=3  (19,4)=3  (19,15)=3  (19,16)=3 
   (1270.8 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
  _01: a rectangle with size (17,2) and color green and mask Full at (3,3)
  _011: a rectangle with size (2,11) and color red and mask Full at (9,9)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,15)
  _01111: a rectangle with size (2,2) and color green and mask Full at (18,6)
  _011111: a rectangle with size (2,8) and color green and mask Full at (18,9)
diff: 
delta:
   (124.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (23,23) and color yellow and mask ..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,3)=3  (3,4)=3  (3,15)=2  (3,16)=2  (4,3)=3  (4,4)=3  (4,15)=2  (4,16)=2  (9,9)=2  (9,10)=2  (9,18)=2  (9,19)=2  (10,9)=2  (10,10)=2  (10,18)=2  (10,19)=2  (18,3)=3  (18,4)=3  (18,15)=3  (18,16)=3  (19,3)=3  (19,4)=3  (19,15)=3  (19,16)=3 
! 64 wrong pixels (generated / expected)

TRAIN 06df4c85.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,26) and color black and layers
  _0: a rectangle with size (26,26) and color yellow and mask ..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (3,6)=8  (3,7)=8  (3,15)=2  (3,16)=2  (4,6)=8  (4,7)=8  (4,15)=2  (4,16)=2  (9,21)=3  (9,22)=3  (10,21)=3  (10,22)=3  (12,6)=8  (12,7)=8  (13,6)=8  (13,7)=8  (18,3)=2  (18,4)=2  (18,15)=2  (18,16)=2  (19,3)=2  (19,4)=2  (19,15)=2  (19,16)=2 
! 68 wrong pixels (generated / expected)

TEST 06df4c85.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.2 sec (17.2 sec/task)
bits-train-error = 3706.7 bits (3706.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-391] Checking task 08ed6ac7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11684.2 = 11699.8
DL output with Mo: L = 15.6 + 11684.2 = 11699.8
DL input+output M: L = 31.2 + 23368.3 = 23399.6

# learning a model for train pairs
2.000	
1.699	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.350	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.050	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.672	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.614	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.580	OUT DEF: ^.size=^.size
0.551	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.493	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.471	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.450	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.430	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.411	OUT DEF: ^.layer_0111.pos=^.layer_0111.pos
0.392	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.372	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.353	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.337	OUT DEF: ^.layer_0111.shape.size=^.layer_0111.shape.size
0.327	OUT DEF: ^.layer_0.shape.color=blue
0.318	IN  DEF: ^.layer_0.shape.color=grey
0.308	IN  DEF: ^.layer_01.shape.color=grey
0.299	IN  DEF: ^.layer_011.shape.color=grey
0.289	IN  DEF: ^.layer_0111.shape.color=grey
0.280	OUT DEF: ^.layer_01.shape.color=red
0.271	OUT DEF: ^.layer_011.shape.color=green
0.261	OUT DEF: ^.layer_0111.shape.color=yellow
0.255	OUT DEF: ^.layer_0111.shape.mask=^.layer_0111.shape.mask
0.250	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.244	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.238	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.233	IN  DEF: ^.layer_0.shape.mask=Full
0.227	IN  DEF: ^.layer_01.shape.mask=Full
0.221	IN  DEF: ^.layer_011.shape.mask=Full
0.216	IN  DEF: ^.layer_0111.shape.mask=Full
0.211	IN  DEF: ^.color=black
0.207	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color red and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color green and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _0111: a rectangle with size ^.layer_0111.shape.size and color yellow and mask ^.layer_0111.shape.mask at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 153.6 + 2169.9 = 2323.5
DL output with Mo: L = 98.6 + 0.0 = 98.6
DL input+output M: L = 252.1 + 2169.9 = 2422.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,7)
diff: 
delta:
   (110.5 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color green and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (6,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,5)
  _01: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,7)
diff: 
delta:
correct output grid

TRAIN 08ed6ac7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
   (106.5 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color blue and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color red and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color green and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (5,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,5)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,1)
diff: 
delta:
correct output grid

TRAIN 08ed6ac7.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color grey and mask Full at (4,7)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,3)
diff: 
delta:
correct output grid

TEST 08ed6ac7.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 9.9 sec (9.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-390] Checking task 09629e4f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 83244.9 = 83260.6
DL output with Mo: L = 15.6 + 77942.9 = 77958.5
DL input+output M: L = 31.2 + 161187.8 = 161219.1

# learning a model for train pairs
2.000	
1.563	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.187	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.007	OUT OBJECT at ^.layer_01: ^.layer_0
0.908	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.809	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.707	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.651	IN  DEF: ^.layer_0.shape.mask=...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.640	OUT DEF: ^.size=^.size
0.631	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.625	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size / 3
0.618	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size / 3
0.612	OUT DEF: ^.layer_0111.shape.size=^.layer_0.shape.size / 3
0.605	OUT DEF: ^.layer_01111.shape.size=^.size / 3
0.601	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.598	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.595	OUT DEF: ^.layer_011.pos.i=middle(^.layer_0) - 2
0.593	OUT DEF: ^.layer_011.pos=min(^.layer_01.shape.size, ^.layer_011.shape.size) + 3
0.590	OUT DEF: ^.layer_0111.pos.i=right(^.layer_01)
0.587	IN  DEF: ^.layer_0.shape.color=grey
0.585	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.584	OUT DEF: ^.layer_0.shape.mask=Full
0.582	OUT DEF: ^.layer_0111.shape.mask=Full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size / 3 and color ? and mask Full at (^.layer_0.pos.i,?)
  _01: ^.layer_0
  _011: a rectangle with size ^.layer_0.shape.size / 3 and color ? and mask ^.layer_011.shape.mask at min(^.layer_01.shape.size, ^.layer_011.shape.size) + 3
  _0111: a rectangle with size ^.layer_0.shape.size / 3 and color ? and mask Full at (right(^.layer_01),?)
  _01111: a rectangle with size ^.size / 3 and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 230.9 + 45780.9 = 46011.8
DL output with Mo: L = 234.3 + 2059.2 = 2293.5
DL input+output M: L = 465.2 + 47840.1 = 48305.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,5)=6  (0,6)=2  (0,10)=4  (1,2)=3  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,5)=3  (10,8)=2  (10,9)=3  (10,10)=4 
   (1156.2 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (4,4)
  _0111: a rectangle with size (3,3) and color green and mask Full at (4,8)
  _01111: a rectangle with size (3,3) and color pink and mask Full at (8,0)
diff: 
delta:
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,5)=6  (0,6)=2  (0,10)=4  (1,2)=3  (1,6)=8  (1,8)=3  (1,10)=6  (2,0)=6  (2,4)=3  (2,8)=8  (2,10)=2  (4,0)=3  (4,1)=8  (4,4)=6  (4,5)=2  (4,9)=4  (4,10)=8  (5,2)=4  (5,6)=4  (5,8)=6  (6,0)=6  (6,1)=2  (6,4)=3  (6,5)=8  (6,9)=3  (6,10)=2  (8,1)=3  (8,2)=6  (8,5)=2  (8,9)=6  (9,0)=2  (9,4)=4  (9,6)=8  (9,10)=8  (10,0)=8  (10,2)=4  (10,4)=6  (10,5)=3  (10,8)=2  (10,9)=3  (10,10)=4 
! 45 wrong pixels (generated / expected)

TRAIN 09629e4f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (10,6)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (0,0)=2  (0,2)=3  (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,9)=4 
   (1133.3 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,8)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color green and mask Full at (4,4)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (8,0)
  _01111: a rectangle with size (3,3) and color pink and mask Full at (8,8)
diff: 
delta:
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (10,6)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (0,0)=2  (0,2)=3  (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,9)=4 
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
  _011: a rectangle with size (1,3) and color pink and mask Full at (10,6)
diff: 
delta: (0,0)=2  (0,2)=3  (0,4)=4  (0,5)=6  (0,9)=6  (1,2)=8  (1,6)=2  (1,8)=4  (1,10)=3  (2,1)=6  (2,4)=3  (2,5)=8  (2,8)=2  (2,10)=8  (4,2)=8  (4,6)=2  (4,9)=6  (4,10)=4  (5,2)=2  (5,5)=3  (5,8)=3  (6,0)=3  (6,2)=6  (6,4)=4  (6,6)=6  (6,8)=8  (6,10)=2  (8,0)=3  (8,1)=6  (8,5)=8  (8,6)=4  (8,8)=2  (9,1)=8  (9,2)=4  (9,4)=2  (9,8)=8  (9,10)=3  (10,0)=2  (10,5)=3  (10,9)=4 
! 45 wrong pixels (generated / expected)

TRAIN 09629e4f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (4,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,1)
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,4)=4  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
   (1133.3 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,4)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color pink and mask Full at (4,4)
  _0111: a rectangle with size (3,3) and color red and mask Full at (8,0)
  _01111: a rectangle with size (3,3) and color yellow and mask Full at (4,8)
diff: 
delta:
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (4,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,1)
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,4)=4  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (1,3) and color green and mask Full at (4,6)
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,2)=8  (2,5)=4  (2,8)=3  (2,10)=4  (4,4)=4  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
! 45 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color green and mask Full at (2,8)
diff: 
delta: (0,1)=3  (0,5)=6  (0,6)=3  (0,9)=6  (0,10)=2  (1,0)=6  (1,2)=4  (1,4)=2  (1,5)=8  (1,10)=8  (2,2)=8  (2,5)=4  (2,10)=4  (4,4)=4  (4,6)=3  (4,9)=4  (5,0)=4  (5,2)=8  (5,4)=2  (5,6)=6  (5,10)=2  (6,0)=3  (6,1)=6  (6,5)=8  (6,8)=8  (6,9)=6  (8,0)=6  (8,1)=3  (8,5)=3  (8,10)=3  (9,2)=2  (9,5)=6  (9,6)=4  (9,8)=2  (9,9)=8  (10,0)=8  (10,1)=4  (10,4)=2  (10,8)=4  (10,10)=6 
! 48 wrong pixels (generated / expected)

TRAIN 09629e4f.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (0,2)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,1)=8  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
   (1155.3 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,4)
  _01: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,3) and color red and mask Full at (4,4)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (4,8)
  _01111: a rectangle with size (3,3) and color green and mask Full at (8,4)
diff: 
delta:
   (51.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (0,2)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,1)=8  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (0,2)
diff: 
delta: (0,1)=8  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,2)=8  (9,5)=8  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
! 45 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (0,2)
  _011: a rectangle with size (1,4) and color cyan and mask Full at (9,2)
diff: 
delta: (0,0)=3  (0,1)=8  (0,5)=6  (0,8)=2  (0,10)=8  (1,4)=8  (1,6)=3  (1,8)=6  (1,10)=3  (2,0)=6  (2,1)=2  (2,5)=2  (2,8)=4  (4,1)=4  (4,2)=2  (4,4)=8  (4,6)=3  (4,9)=4  (5,1)=8  (5,2)=6  (5,6)=4  (5,9)=2  (5,10)=6  (6,1)=3  (6,4)=2  (6,5)=6  (6,9)=3  (8,1)=6  (8,4)=6  (8,5)=2  (8,8)=3  (8,9)=6  (9,0)=3  (9,4)=0  (9,6)=3  (9,10)=4  (10,0)=4  (10,1)=2  (10,6)=4  (10,8)=2  (10,10)=8 
! 54 wrong pixels (generated / expected)

TRAIN 09629e4f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (1,5)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,0)
diff: 
delta: (0,0)=6  (0,1)=4  (0,5)=3  (0,9)=4  (1,2)=3  (1,4)=2  (1,6)=6  (1,10)=2  (2,2)=8  (2,4)=4  (2,8)=6  (2,9)=3  (4,5)=3  (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,4)=8  (5,5)=4  (5,6)=2  (5,10)=4  (6,1)=8  (6,6)=6  (6,8)=8  (8,1)=2  (8,2)=4  (8,5)=6  (8,6)=4  (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,6)=3  (9,8)=4  (9,10)=6  (10,4)=2  (10,6)=8  (10,8)=3 
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,4) and color cyan and mask Full at (1,5)
diff: 
delta: (0,0)=6  (0,1)=4  (0,5)=3  (0,9)=4  (1,2)=3  (1,4)=2  (1,6)=6  (1,10)=2  (2,2)=8  (2,4)=4  (2,8)=6  (2,9)=3  (4,5)=3  (4,8)=3  (4,9)=6  (4,10)=2  (5,0)=3  (5,1)=4  (5,2)=6  (5,4)=8  (5,5)=4  (5,6)=2  (5,10)=4  (6,1)=8  (6,6)=6  (6,8)=8  (8,1)=2  (8,2)=4  (8,5)=6  (8,6)=4  (8,9)=2  (8,10)=8  (9,1)=6  (9,2)=3  (9,6)=3  (9,8)=4  (9,10)=6  (10,4)=2  (10,6)=8  (10,8)=3 
! 45 wrong pixels (generated / expected)

TEST 09629e4f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 2059.2 bits (2059.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-389] Checking task 0962bcdd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5691.9 = 5707.5
DL output with Mo: L = 15.6 + 17961.9 = 17977.5
DL input+output M: L = 31.2 + 23653.8 = 23685.0

# learning a model for train pairs
2.000	
1.778	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.553	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.345	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.136	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.955	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.769	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.741	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.709	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.683	IN  DEF: ^.layer_0.shape.mask=Odd Checkboard
0.657	IN  DEF: ^.layer_01.shape.mask=Odd Checkboard
0.634	OUT DEF: ^.size=^.size
0.625	IN  DEF: ^.color=black
0.616	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i + 2
0.603	OUT DEF: ^.layer_0.pos=^.layer_0.pos - 1
0.586	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size + 2
0.569	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size + 2
0.552	OUT DEF: ^.layer_0111.shape.size=^.layer_01.shape.size + 2
0.539	OUT DEF: ^.layer_01.pos=^.layer_01.pos - 1
0.526	OUT DEF: ^.layer_011.pos=^.layer_011.pos - 2
0.513	OUT DEF: ^.layer_0111.pos=^.layer_0111.pos - 2
0.503	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size + 2
0.495	OUT DEF: ^.layer_0.shape.mask=x-cross
0.487	OUT DEF: ^.layer_01.shape.mask=x-cross
0.479	OUT DEF: ^.layer_011.shape.mask=+-cross
0.470	OUT DEF: ^.layer_0111.shape.mask=+-cross
0.464	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.459	OUT DEF: ^.layer_0111.shape.color=^.layer_01.shape.color
0.453	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
0.447	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.445	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size + 2 and color ^.layer_011.shape.color and mask x-cross at ^.layer_0.pos - 1
  _01: a rectangle with size ^.layer_01.shape.size + 2 and color ^.layer_011.shape.color and mask x-cross at ^.layer_01.pos - 1
  _011: a rectangle with size ^.layer_01.shape.size + 2 and color ^.layer_01.shape.color and mask +-cross at ^.layer_011.pos - 2
  _0111: a rectangle with size ^.layer_01.shape.size + 2 and color ^.layer_01.shape.color and mask +-cross at ^.layer_0111.pos - 2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 128.3 + 2335.6 = 2464.0
DL output with Mo: L = 233.1 + 0.0 = 233.1
DL input+output M: L = 361.4 + 2335.6 = 2697.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,7)
  _011: a point with color red at (3,2)
  _0111: a point with color red at (7,8)
diff: 
delta:
   (116.8 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask x-cross at (1,0)
  _01: a rectangle with size (5,5) and color red and mask x-cross at (5,6)
  _011: a rectangle with size (5,5) and color orange and mask +-cross at (1,0)
  _0111: a rectangle with size (5,5) and color orange and mask +-cross at (5,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,7)
  _011: a point with color red at (3,2)
  _0111: a point with color red at (7,8)
diff: 
delta:
correct output grid

TRAIN 0962bcdd.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (8,7)
  _011: a point with color pink at (3,3)
  _0111: a point with color pink at (9,8)
diff: 
delta:
   (116.8 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask x-cross at (1,1)
  _01: a rectangle with size (5,5) and color pink and mask x-cross at (7,6)
  _011: a rectangle with size (5,5) and color cyan and mask +-cross at (1,1)
  _0111: a rectangle with size (5,5) and color cyan and mask +-cross at (7,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (8,7)
  _011: a point with color pink at (3,3)
  _0111: a point with color pink at (9,8)
diff: 
delta:
correct output grid

TRAIN 0962bcdd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,7)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (6,1)
  _011: a point with color yellow at (2,8)
  _0111: a point with color yellow at (7,2)
diff: 
delta:
correct output grid

TEST 0962bcdd.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 21.9 sec (21.9 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-388] Checking task 0a938d79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3171.6 = 3187.2
DL output with Mo: L = 15.6 + 69715.5 = 69731.1
DL input+output M: L = 31.2 + 72887.1 = 72918.3

# learning a model for train pairs
2.000	
1.892	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.773	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.667	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.560	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.453	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.346	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.239	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.207	IN  DEF: ^.color=black
1.195	OUT DEF: ^.size=^.size
1.188	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.184	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.181	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.178	OUT DEF: ^.layer_0111.shape.color=^.layer_01.shape.color
1.175	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
1.172	OUT DEF: ^.layer_01111.shape.color=^.layer_01.shape.color
1.170	OUT DEF: ^.layer_0.shape.mask=Full
1.168	OUT DEF: ^.layer_01.shape.mask=Full
1.166	OUT DEF: ^.layer_011.shape.mask=Full
1.164	OUT DEF: ^.layer_0111.shape.mask=Full
1.162	OUT DEF: ^.layer_01111.shape.mask=Full
1.161	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 2309.2 = 2365.0
DL output with Mo: L = 187.9 + 29018.2 = 29206.1
DL input+output M: L = 243.7 + 31327.4 = 31571.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,25) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color cyan at (9,7)
diff: 
delta:
   (59.1 bits)
data: a background with size (10,25) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,7)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _0111: a rectangle with size (10,1) and color cyan and mask Full at (0,11)
  _01111: a rectangle with size (10,1) and color cyan and mask Full at (0,15)
diff: 
delta: (0,13)=2  (0,17)=2  (0,19)=8  (0,21)=2  (0,23)=8  (1,13)=2  (1,17)=2  (1,19)=8  (1,21)=2  (1,23)=8  (2,13)=2  (2,17)=2  (2,19)=8  (2,21)=2  (2,23)=8  (3,13)=2  (3,17)=2  (3,19)=8  (3,21)=2  (3,23)=8  (4,13)=2  (4,17)=2  (4,19)=8  (4,21)=2  (4,23)=8  (5,13)=2  (5,17)=2  (5,19)=8  (5,21)=2  (5,23)=8  (6,13)=2  (6,17)=2  (6,19)=8  (6,21)=2  (6,23)=8  (7,13)=2  (7,17)=2  (7,19)=8  (7,21)=2  (7,23)=8  (8,13)=2  (8,17)=2  (8,19)=8  (8,21)=2  (8,23)=8  (9,13)=2  (9,17)=2  (9,19)=8  (9,21)=2  (9,23)=8 
   (1439.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,25) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color cyan at (9,7)
diff: 
delta:
! 104 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,25) and color black and layers
  _0: a point with color cyan at (9,7)
  _01: a point with color red at (0,5)
diff: 
delta:
! 104 wrong pixels (generated / expected)

TRAIN 0a938d79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,23) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color green at (6,8)
diff: 
delta:
   (56.5 bits)
data: a background with size (7,23) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (0,5)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,8)
  _011: a rectangle with size (7,1) and color blue and mask Full at (0,11)
  _0111: a rectangle with size (7,1) and color green and mask Full at (0,14)
  _01111: a rectangle with size (7,1) and color green and mask Full at (0,20)
diff: 
delta: (0,17)=1  (1,17)=1  (2,17)=1  (3,17)=1  (4,17)=1  (5,17)=1  (6,17)=1 
   (294.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,23) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color green at (6,8)
diff: 
delta:
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,23) and color black and layers
  _0: a point with color green at (6,8)
  _01: a point with color blue at (0,5)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN 0a938d79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (22,9) and color black and layers
  _0: a point with color red at (5,0)
  _01: a point with color green at (7,8)
diff: 
delta:
   (57.7 bits)
data: a background with size (22,9) and color black and layers
  _0: a rectangle with size (1,9) and color red and mask Full at (5,0)
  _01: a rectangle with size (1,9) and color green and mask Full at (7,0)
  _011: a rectangle with size (1,9) and color red and mask Full at (9,0)
  _0111: a rectangle with size (1,9) and color green and mask Full at (11,0)
  _01111: a rectangle with size (1,9) and color green and mask Full at (15,0)
diff: 
delta: (13,0)=2  (13,1)=2  (13,2)=2  (13,3)=2  (13,4)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (17,0)=2  (17,1)=2  (17,2)=2  (17,3)=2  (17,4)=2  (17,5)=2  (17,6)=2  (17,7)=2  (17,8)=2  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,5)=3  (19,6)=3  (19,7)=3  (19,8)=3  (21,0)=2  (21,1)=2  (21,2)=2  (21,3)=2  (21,4)=2  (21,5)=2  (21,6)=2  (21,7)=2  (21,8)=2 
   (1056.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,9) and color black and layers
  _0: a point with color red at (5,0)
  _01: a point with color green at (7,8)
diff: 
delta:
! 85 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,9) and color black and layers
  _0: a point with color green at (7,8)
  _01: a point with color red at (5,0)
diff: 
delta:
! 85 wrong pixels (generated / expected)

TRAIN 0a938d79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (24,8) and color black and layers
  _0: a point with color blue at (11,0)
  _01: a point with color yellow at (7,0)
diff: 
delta:
   (57.6 bits)
data: a background with size (24,8) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (11,0)
  _01: a rectangle with size (1,8) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (1,8) and color blue and mask Full at (19,0)
  _0111: a rectangle with size (1,8) and color yellow and mask Full at (15,0)
  _01111: a rectangle with size (1,8) and color yellow and mask Full at (23,0)
diff: 
delta:
   (112.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,8) and color black and layers
  _0: a point with color yellow at (7,0)
  _01: a point with color blue at (11,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,8) and color black and layers
  _0: a point with color blue at (11,0)
  _01: a point with color yellow at (7,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TRAIN 0a938d79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,27) and color black and layers
  _0: a point with color green at (0,5)
  _01: a point with color yellow at (10,10)
diff: 
delta:
! 59 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,27) and color black and layers
  _0: a point with color yellow at (10,10)
  _01: a point with color green at (0,5)
diff: 
delta:
! 59 wrong pixels (generated / expected)

TEST 0a938d79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.3 sec (14.3 sec/task)
bits-train-error = 29018.2 bits (29018.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-387] Checking task 0b148d64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 135807.9 = 135823.5
DL output with Mo: L = 15.6 + 19430.3 = 19445.9
DL input+output M: L = 31.2 + 155238.1 = 155269.4

# learning a model for train pairs
2.000	
1.231	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.807	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.687	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.501	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.321	OUT DEF: ^.layer_0.pos='(0,0)
0.306	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.292	OUT DEF: ^.size.i=^.layer_0.shape.size.i
0.288	OUT DEF: ^.color=black
0.288	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_0.shape.size.i,?) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 144.3 + 14335.6 = 14479.9
DL output with Mo: L = 53.8 + 3470.1 = 3523.9
DL input+output M: L = 198.0 + 17805.7 = 18003.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
  _01: a rectangle with size (9,10) and color cyan and mask xxxxx.xxxx|x..x.x.xxx|xxx...xxxx|xx.xxxx.xx|xxxx.xx.xx|...xx.x..x|xxxx..x.x.|x..x..xx.x|xxxxxx.x.. at (0,0)
  _011: a rectangle with size (10,7) and color cyan and mask xx.xx.x|xxxx.x.|xxx...x|xx.xxx.|xxxxx..|x.x.xxx|xx.x..x|x...xx.|.xx..xx|xxx.xxx at (11,14)
  _0111: a rectangle with size (9,7) and color cyan and mask xxxx.xx|xxx...x|xx.xxxx|xx...xx|xxx.xxx|x...x..|xxx.xxx|x.xxxxx|xxxxx.. at (0,14)
diff: 
delta:
   (495.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (0,0)
diff: 
delta:
   (118.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .xxx..xxxx|x.xxx..xxx|.xxxxxx.x.|xxxx.xxxxx|xxxxxx.x..|xxxxx.x.xx|xx.xx.....|.xx..xx..x|xxxxxxxxxx|x.xx.xxxxx at (11,0)
  _01: a rectangle with size (9,10) and color cyan and mask xxxxx.xxxx|x..x.x.xxx|xxx...xxxx|xx.xxxx.xx|xxxx.xx.xx|...xx.x..x|xxxx..x.x.|x..x..xx.x|xxxxxx.x.. at (0,0)
  _011: a rectangle with size (10,7) and color cyan and mask xx.xx.x|xxxx.x.|xxx...x|xx.xxx.|xxxxx..|x.x.xxx|xx.x..x|x...xx.|.xx..xx|xxx.xxx at (11,14)
  _0111: a rectangle with size (9,7) and color cyan and mask xxxx.xx|xxx...x|xx.xxxx|xx...xx|xxx.xxx|x...x..|xxx.xxx|x.xxxxx|xxxxx.. at (0,14)
diff: 
delta:
! 77 wrong pixels (generated / expected)

TRAIN 0b148d64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
  _01: a rectangle with size (6,9) and color red and mask x.xxxx...|.xxxxx...|xxx.xxxxx|.xxxxxx..|...xx.xxx|..xxxx.x. at (0,10)
  _011: a rectangle with size (6,7) and color red and mask x.xxxx.|xxxx.xx|..xx.x.|x.x.xx.|.x.xxxx|xxx.x.x at (0,0)
  _0111: a rectangle with size (7,7) and color red and mask x.x...x|.xx..xx|.xx..x.|xxx..xx|x..xxx.|x.x...x|.xx.xx. at (11,0)
diff: 
delta: (0,18)=2  (5,10)=2 
   (456.2 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (0,0)
diff: 
delta:
   (94.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
  _01: a rectangle with size (6,9) and color red and mask x.xxxx...|.xxxxx...|xxx.xxxxx|.xxxxxx..|...xx.xxx|..xxxx.x. at (0,10)
  _011: a rectangle with size (6,7) and color red and mask x.xxxx.|xxxx.xx|..xx.x.|x.x.xx.|.x.xxxx|xxx.x.x at (0,0)
  _0111: a rectangle with size (7,7) and color red and mask x.x...x|.xx..xx|.xx..x.|xxx..xx|x..xxx.|x.x...x|.xx.xx. at (11,0)
diff: 
delta: (0,18)=2  (5,10)=2 
! size mismatch, 7x10 instead of 7x9
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (6,9) and color red and mask x.xxxx...|.xxxxx...|xxx.xxxxx|.xxxxxx..|...xx.xxx|..xxxx.x. at (0,10)
  _01: a rectangle with size (7,9) and color green and mask .xxxxx.xx|xxx...xx.|xxx.x.x..|xx...xxxx|x...x.x.x|.xx.xxx.x|.xx..x.x. at (11,10)
  _011: a rectangle with size (6,7) and color red and mask x.xxxx.|xxxx.xx|..xx.x.|x.x.xx.|.x.xxxx|xxx.x.x at (0,0)
  _0111: a rectangle with size (7,7) and color red and mask x.x...x|.xx..xx|.xx..x.|xxx..xx|x..xxx.|x.x...x|.xx.xx. at (11,0)
diff: 
delta: (0,18)=2  (5,10)=2 
! size mismatch, 6x10 instead of 7x9

TRAIN 0b148d64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
  _01: a rectangle with size (7,9) and color blue and mask xx.x.....|xxxxxx.xx|xxxxxx.xx|xx.xxxxxx|xx...xxx.|xx..xxxxx|xxx..x..x at (0,8)
  _011: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (10,0)
  _0111: a rectangle with size (7,6) and color blue and mask .x.xxx|x.x...|xx.xx.|xx..xx|.xxx..|x..x..|...xx. at (0,0)
diff: 
delta: (18,3)=4  (18,5)=4 
   (482.1 bits)
data: a background with size (9,6) and color black and layers
  _0: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (0,0)
diff: 
delta: (8,3)=4  (8,5)=4 
   (134.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
  _01: a rectangle with size (7,9) and color blue and mask xx.x.....|xxxxxx.xx|xxxxxx.xx|xx.xxxxxx|xx...xxx.|xx..xxxxx|xxx..x..x at (0,8)
  _011: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (10,0)
  _0111: a rectangle with size (7,6) and color blue and mask .x.xxx|x.x...|xx.xx.|xx..xx|.xxx..|x..x..|...xx. at (0,0)
diff: 
delta: (18,3)=4  (18,5)=4 
! size mismatch, 9x10 instead of 9x6
>> Trial 2
data: a background with size (19,17) and color black and layers
  _0: a rectangle with size (7,9) and color blue and mask xx.x.....|xxxxxx.xx|xxxxxx.xx|xx.xxxxxx|xx...xxx.|xx..xxxxx|xxx..x..x at (0,8)
  _01: a rectangle with size (9,9) and color blue and mask x..xxxxxx|x.xxxxxx.|.x..xxxxx|xx..x.x.x|xxxxxxxx.|.x....xxx|.x.x.xxx.|x.xxx.x.x|xxx..xxx. at (10,8)
  _011: a rectangle with size (9,6) and color yellow and mask x..x.x|xxxx.x|x.x..x|.xxxx.|xxx.xx|.xxxx.|.xxx.x|.x....|xx.... at (10,0)
  _0111: a rectangle with size (7,6) and color blue and mask .x.xxx|x.x...|xx.xx.|xx..xx|.xxx..|x..x..|...xx. at (0,0)
diff: 
delta: (18,3)=4  (18,5)=4 
! size mismatch, 7x10 instead of 9x6

TRAIN 0b148d64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask xxxx.x|x.x.xx|xx.xx.|...xxx|xxxxxx|xxxxxx at (0,0)
  _01: a rectangle with size (6,9) and color green and mask x.xxxxxx.|.x.xxx...|...xxxx..|...xx.x..|...xxx.xx|.....x..x at (0,8)
  _011: a rectangle with size (5,9) and color green and mask xxx.x.x..|.x.xxx...|x...x...x|.xxxxxx.x|..xxx.xx. at (10,8)
  _0111: a rectangle with size (5,6) and color green and mask x....x|.xx..x|xxxxx.|x.x.x.|.xx... at (10,0)
diff: 
delta: (3,8)=3  (3,9)=3  (4,9)=3  (5,8)=3  (5,9)=3  (10,16)=3 
! size mismatch, 6x10 instead of 6x6

TEST 0b148d64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.3 sec (6.3 sec/task)
bits-train-error = 3470.1 bits (3470.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-386] Checking task 0ca9ddb6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3236.2 = 3251.8
DL output with Mo: L = 15.6 + 11212.7 = 11228.3
DL input+output M: L = 31.2 + 14448.9 = 14480.1

# learning a model for train pairs
2.000	
1.837	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.762	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.683	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.617	OUT OBJECT at ^.layer_01: ^.layer_01
1.551	OUT OBJECT at ^.layer_00: ^.layer_0
1.499	OUT DEF: ^.size=^.size
1.447	IN  DEF: ^.layer_01.shape.color=blue
1.396	IN  DEF: ^.layer_0.shape.color=red
1.346	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.312	OUT DEF: ^.layer_0.shape.size=^.size / 3
1.284	OUT DEF: ^.layer_0.pos=^.layer_01.pos - 1
1.261	IN  DEF: ^.color=black
1.240	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.218	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.196	OUT OBJECT at ^.layer_011111: a point with color ? at (?,?)
1.169	OUT DEF: ^.layer_011111.pos=^.layer_01.pos + translationOnto(^.layer_01, ^.layer_0)
1.149	OUT DEF: ^.layer_0.shape.mask=Odd Checkboard
1.134	OUT DEF: ^.layer_0.shape.color=orange
1.119	OUT DEF: ^.layer_01111.shape.color=yellow
1.104	OUT DEF: ^.layer_011111.shape.color=yellow
1.090	OUT DEF: ^.layer_0111.shape.color=yellow
1.061	OUT DEF: ^.layer_0111.pos=^.layer_0.pos - 1
1.048	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j - 1
1.035	OUT DEF: ^.layer_01111.pos.i=^.layer_0.pos.i - 1
1.021	OUT DEF: ^.layer_01111.pos.j=^.layer_0.pos.j + 1
1.012	OUT DEF: ^.layer_011.shape.size.j=^.layer_0.pos.j / 2
1.002	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.pos.j / 2
0.995	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size ^.size / 3 and color orange and mask Odd Checkboard at ^.layer_01.pos - 1
  _01: ^.layer_01
  _011: a rectangle with size (^.layer_0.pos.j / 2,^.layer_0.pos.j / 2) and color ? and mask ? at (?,^.layer_0.pos.j - 1)
  _0111: a point with color yellow at ^.layer_0.pos - 1
  _01111: a point with color yellow at (^.layer_0.pos.i - 1,^.layer_0.pos.j + 1)
  _011111: a point with color yellow at ^.layer_01.pos + translationOnto(^.layer_01, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 60.4 + 2282.5 = 2342.9
DL output with Mo: L = 313.1 + 2773.7 = 3086.8
DL input+output M: L = 373.5 + 5056.2 = 5429.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (6,6)
diff: 
delta:
   (41.3 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (3,2)
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,5)
  _01: a point with color blue at (6,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,1)
  _0111: a point with color yellow at (2,1)
  _01111: a point with color yellow at (2,3)
  _011111: a point with color yellow at (4,3)
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (6,6)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,6)
  _01: a point with color red at (3,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 23 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (3,2)
diff: 
delta: (0,3)=8  (6,6)=1  (7,1)=2 
   (119.1 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,6)
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (2,1)
  _01: a point with color blue at (3,2)
  _011: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,5)
  _0111: a point with color yellow at (1,5)
  _01111: a point with color yellow at (1,7)
  _011111: a point with color yellow at (3,5)
diff: 
delta: (0,3)=8  (3,7)=4  (6,0)=4  (6,2)=4  (6,6)=1  (7,1)=2  (8,0)=4  (8,2)=4 
   (221.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (3,2)
diff: 
delta: (0,3)=8  (6,6)=1  (7,1)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color blue at (6,6)
diff: 
delta: (0,3)=8  (3,2)=1  (7,1)=2 
! 22 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color blue at (7,3)
diff: 
delta: (5,6)=6 
   (67.9 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,2)
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (6,2)
  _01: a point with color blue at (7,3)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,1)
  _0111: a point with color yellow at (1,1)
  _01111: a point with color yellow at (1,3)
  _011111: a point with color yellow at (3,3)
diff: 
delta: (5,6)=6 
   (41.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color blue at (7,3)
diff: 
delta: (5,6)=6 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color pink at (5,6)
diff:   ^.layer_01.shape.color
delta: (7,3)=1 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color pink at (5,6)
  _01: a point with color blue at (7,3)
diff:   ^.layer_0.shape.color
delta: (2,2)=2 
! 17 wrong pixels (generated / expected)

TRAIN 0ca9ddb6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color blue at (2,6)
diff: 
delta: (5,5)=8  (7,1)=6  (7,7)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (7,7)
  _01: a point with color blue at (2,6)
diff: 
delta: (3,2)=2  (5,5)=8  (7,1)=6 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color cyan at (5,5)
diff:   ^.layer_01.shape.color
delta: (2,6)=1  (7,1)=6  (7,7)=2 
! 17 wrong pixels (generated / expected)

TEST 0ca9ddb6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.4 sec (14.4 sec/task)
bits-train-error = 2773.7 bits (2773.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-385] Checking task 0d3d703e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6244.2 = 6259.8
DL output with Mo: L = 15.6 + 6244.2 = 6259.8
DL input+output M: L = 31.2 + 12488.4 = 12519.6

# learning a model for train pairs
2.000	
1.754	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.493	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.247	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.986	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.902	OUT DEF: ^.size=^.size
0.839	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.775	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.750	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.725	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.701	OUT DEF: ^.layer_01.pos.j=bottom(^.layer_01)
0.676	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.654	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.633	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.612	IN  DEF: ^.layer_0.shape.mask=Full
0.591	IN  DEF: ^.layer_01.shape.mask=Full
0.588	OUT DEF: ^.layer_01.pos=^.layer_01.pos

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 81.2 + 2739.7 = 2820.9
DL output with Mo: L = 50.7 + 810.1 = 860.9
DL input+output M: L = 132.0 + 3549.8 = 3681.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
   (68.5 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff: 
delta:
   (68.5 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color brown and mask Full at (0,2)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
   (68.5 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (68.5 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 0d3d703e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST 0d3d703e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 810.1 bits (810.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-384] Checking task 0dfd9992.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 289189.4 = 289205.1
DL output with Mo: L = 15.6 + 280534.6 = 280550.2
DL input+output M: L = 31.2 + 569724.0 = 569755.2

# learning a model for train pairs
2.000	
1.948	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.902	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.872	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.853	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.831	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.810	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.788	IN  OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.771	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.754	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 240.1 + 227789.0 = 228029.1
DL output with Mo: L = 81.2 + 270765.9 = 270847.2
DL input+output M: L = 321.4 + 498554.9 = 498876.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color grey and layers
  _0: a rectangle with size (5,4) and color black and mask .xx.|xxxx|xxxx|xxxx|.xx. at (5,7)
  _01: a rectangle with size (3,5) and color black and mask Full at (4,15)
  _011: a rectangle with size (3,3) and color black and mask Full at (16,4)
  _0111: a rectangle with size (3,9) and color red and mask Full at (4,4)
  _01111: a rectangle with size (20,2) and color pink and mask Full (and Border) at (0,6)
  _011111: a rectangle with size (20,2) and color pink and mask Full (and Border) at (0,9)
  _0111111: a rectangle with size (19,1) and color green and mask Full at (1,15)
diff: 
delta: (0,0)=3  (0,1)=6  (0,3)=6  (0,4)=3  (0,5)=2  (0,6)=3  (0,10)=3  (0,11)=2  (0,12)=3  (0,13)=6  (0,15)=6  (0,16)=3  (0,17)=2  (0,18)=3  (0,19)=6  (1,0)=6  (1,1)=3  (1,2)=2  (1,3)=3  (1,4)=6  (1,7)=3  (1,8)=2  (1,9)=3  (1,12)=6  (1,13)=3  (1,14)=2  (1,16)=6  (1,18)=6  (1,19)=3  (1,20)=2  (2,1)=2  (2,2)=1  (2,3)=2  (2,5)=4  (2,6)=5# (2,7)=2  (2,8)=1  (2,9)=2  (2,10)=5# (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=6  (3,7)=3  (3,8)=2  (3,9)=3  (3,12)=6  (3,13)=3  (3,14)=2  (3,16)=6  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=3  (4,1)=6  (4,3)=6  (4,4)=3  (4,6)=3  (4,7)=6  (4,8)=5# (4,9)=6  (4,10)=3  (4,12)=3  (4,13)=6  (5,0)=2  (5,2)=4  (5,5)=1  (5,7)=5# (5,11)=1  (5,14)=4  (5,20)=4  (6,0)=3  (6,1)=6  (6,3)=6  (6,4)=3  (6,6)=3  (6,12)=3  (6,13)=6  (7,0)=6  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=6  (7,6)=6  (7,12)=6  (7,13)=3  (7,14)=2  (7,16)=6  (7,18)=6  (7,19)=3  (7,20)=2  (8,1)=2  (8,2)=1  (8,3)=2  (8,5)=4  (8,6)=5# (8,11)=4  (8,13)=2  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=2  (8,20)=1  (9,0)=6  (9,1)=3  (9,2)=2  (9,3)=3  (9,4)=6  (9,7)=3  (9,12)=6  (9,13)=3  (9,14)=2  (9,16)=6  (9,18)=6  (9,19)=3  (9,20)=2  (10,0)=3  (10,1)=6  (10,3)=6  (10,4)=3  (10,5)=2  (10,6)=3  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,15)=6  (10,16)=3  (10,17)=2  (10,18)=3  (10,19)=6  (11,0)=2  (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,7)=5# (11,8)=4  (11,9)=5# (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=4  (11,15)=5# (11,16)=2  (11,17)=1  (11,18)=2  (11,20)=4  (12,0)=3  (12,1)=6  (12,3)=0  (12,4)=0  (12,5)=2  (12,6)=3  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,15)=6  (12,16)=3  (12,17)=2  (12,18)=3  (12,19)=6  (13,0)=6  (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,7)=3  (13,8)=2  (13,9)=3  (13,12)=6  (13,13)=3  (13,14)=2  (13,16)=6  (13,18)=6  (13,19)=3  (13,20)=2  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=4  (14,6)=5# (14,7)=2  (14,8)=1  (14,9)=2  (14,10)=5# (14,11)=4  (14,13)=2  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=2  (14,20)=1  (15,0)=6  (15,1)=3  (15,2)=2  (15,3)=3  (15,4)=6  (15,7)=3  (15,8)=2  (15,9)=3  (15,12)=6  (15,13)=3  (15,14)=2  (15,16)=6  (15,18)=6  (15,19)=3  (15,20)=2  (16,0)=3  (16,1)=6  (16,3)=6  (16,10)=3  (16,11)=2  (16,12)=3  (16,13)=6  (16,15)=6  (16,16)=3  (16,17)=2  (16,18)=3  (16,19)=6  (17,0)=2  (17,2)=4  (17,7)=5# (17,8)=4  (17,9)=5# (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=4  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,20)=4  (18,0)=3  (18,1)=6  (18,3)=6  (18,10)=3  (18,11)=2  (18,12)=3  (18,13)=6  (18,15)=6  (18,16)=3  (18,17)=2  (18,18)=3  (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=6  (19,7)=3  (19,8)=2  (19,9)=3  (19,12)=6  (19,13)=3  (19,14)=2  (19,16)=6  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=2  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=2  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=2  (20,20)=1 
   (8038.4 bits)
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (1,4)
  _01: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (1,10)
diff: 
delta: (0,0)=3  (0,1)=6  (0,2)=5# (0,3)=6  (0,4)=3  (0,6)=3  (0,7)=6  (0,8)=5# (0,9)=6  (0,10)=3  (0,12)=3  (0,13)=6  (0,14)=5# (0,15)=6  (0,16)=3  (0,18)=3  (0,19)=6  (0,20)=5# (1,0)=6  (1,1)=3  (1,3)=3  (1,4)=6  (1,6)=6  (1,7)=3  (1,9)=3  (1,10)=6  (1,12)=6  (1,13)=3  (1,15)=3  (1,16)=6  (1,17)=5# (1,18)=6  (1,19)=3  (2,0)=5# (2,2)=1  (2,5)=4  (2,8)=1  (2,11)=4  (2,14)=1  (2,16)=5# (2,17)=4  (2,18)=5# (2,20)=1  (3,0)=6  (3,1)=3  (3,3)=3  (3,4)=6  (3,6)=6  (3,7)=3  (3,9)=3  (3,10)=6  (3,12)=6  (3,13)=3  (3,15)=3  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=3  (4,0)=3  (4,1)=6  (4,2)=5# (4,3)=6  (4,4)=3  (4,6)=3  (4,7)=6  (4,8)=5# (4,9)=6  (4,10)=3  (4,12)=3  (4,13)=6  (4,14)=5# (4,15)=6  (4,16)=3  (4,18)=3  (4,19)=6  (4,20)=5# (5,1)=5# (5,2)=4  (5,3)=5# (5,5)=1  (5,7)=5# (5,8)=4  (5,9)=5# (5,11)=1  (5,13)=5# (5,14)=4  (5,15)=5# (5,17)=1  (5,19)=5# (5,20)=4  (6,0)=3  (6,1)=6  (6,2)=5# (6,3)=6  (6,4)=3  (6,6)=3  (6,7)=6  (6,8)=5# (6,9)=6  (6,10)=3  (6,12)=3  (6,13)=6  (6,14)=5# (6,15)=6  (6,16)=3  (6,18)=3  (6,19)=6  (6,20)=5# (7,0)=6  (7,1)=3  (7,3)=3  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=3  (7,9)=3  (7,10)=6  (7,11)=5# (7,12)=6  (7,13)=3  (7,15)=3  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=3  (8,0)=5# (8,2)=1  (8,4)=5# (8,5)=4  (8,6)=5# (8,8)=1  (8,10)=5# (8,11)=4  (8,12)=5# (8,14)=1  (8,16)=5# (8,17)=4  (8,18)=5# (8,20)=1  (9,0)=6  (9,1)=3  (9,3)=3  (9,4)=6  (9,5)=5# (9,6)=6  (9,7)=3  (9,9)=3  (9,10)=6  (9,11)=5# (9,12)=6  (9,13)=3  (9,15)=3  (9,16)=6  (9,17)=5# (9,18)=6  (9,19)=3  (10,0)=3  (10,1)=6  (10,2)=5# (10,3)=6  (10,4)=3  (10,6)=3  (10,7)=6  (10,8)=5# (10,9)=6  (10,10)=3  (10,12)=3  (10,13)=6  (10,14)=5# (10,15)=6  (10,16)=3  (10,18)=3  (10,19)=6  (10,20)=5# (11,1)=5# (11,2)=4  (11,3)=5# (11,5)=1  (11,7)=5# (11,8)=4  (11,9)=5# (11,11)=1  (11,13)=5# (11,14)=4  (11,15)=5# (11,17)=1  (11,19)=5# (11,20)=4  (12,0)=3  (12,1)=6  (12,2)=5# (12,3)=6  (12,4)=3  (12,6)=3  (12,7)=6  (12,8)=5# (12,9)=6  (12,10)=3  (12,12)=3  (12,13)=6  (12,14)=5# (12,15)=6  (12,16)=3  (12,18)=3  (12,19)=6  (12,20)=5# (13,0)=6  (13,1)=3  (13,3)=3  (13,4)=6  (13,5)=5# (13,6)=6  (13,7)=3  (13,9)=3  (13,10)=6  (13,11)=5# (13,12)=6  (13,13)=3  (13,15)=3  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=3  (14,0)=5# (14,2)=1  (14,4)=5# (14,5)=4  (14,6)=5# (14,8)=1  (14,10)=5# (14,11)=4  (14,12)=5# (14,14)=1  (14,16)=5# (14,17)=4  (14,18)=5# (14,20)=1  (15,0)=6  (15,1)=3  (15,3)=3  (15,4)=6  (15,5)=5# (15,6)=6  (15,7)=3  (15,9)=3  (15,10)=6  (15,11)=5# (15,12)=6  (15,13)=3  (15,15)=3  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=3  (16,0)=3  (16,1)=6  (16,2)=5# (16,3)=6  (16,4)=3  (16,6)=3  (16,7)=6  (16,8)=5# (16,9)=6  (16,10)=3  (16,12)=3  (16,13)=6  (16,14)=5# (16,15)=6  (16,16)=3  (16,18)=3  (16,19)=6  (16,20)=5# (17,1)=5# (17,2)=4  (17,3)=5# (17,5)=1  (17,7)=5# (17,8)=4  (17,9)=5# (17,11)=1  (17,13)=5# (17,14)=4  (17,15)=5# (17,17)=1  (17,19)=5# (17,20)=4  (18,0)=3  (18,1)=6  (18,2)=5# (18,3)=6  (18,4)=3  (18,6)=3  (18,7)=6  (18,8)=5# (18,9)=6  (18,10)=3  (18,12)=3  (18,13)=6  (18,14)=5# (18,15)=6  (18,16)=3  (18,18)=3  (18,19)=6  (18,20)=5# (19,0)=6  (19,1)=3  (19,3)=3  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=3  (19,9)=3  (19,10)=6  (19,11)=5# (19,12)=6  (19,13)=3  (19,15)=3  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=3  (20,0)=5# (20,2)=1  (20,4)=5# (20,5)=4  (20,6)=5# (20,8)=1  (20,10)=5# (20,11)=4  (20,12)=5# (20,14)=1  (20,16)=5# (20,17)=4  (20,18)=5# (20,20)=1 
   (9187.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color grey and layers
  _0: a rectangle with size (5,4) and color black and mask .xx.|xxxx|xxxx|xxxx|.xx. at (5,7)
  _01: a rectangle with size (3,5) and color black and mask Full at (4,15)
  _011: a rectangle with size (3,3) and color black and mask Full at (16,4)
  _0111: a rectangle with size (3,9) and color red and mask Full at (4,4)
  _01111: a rectangle with size (20,2) and color pink and mask Full (and Border) at (0,6)
  _011111: a rectangle with size (20,2) and color pink and mask Full (and Border) at (0,9)
  _0111111: a rectangle with size (19,1) and color green and mask Full at (1,15)
diff: 
delta: (0,0)=3  (0,1)=6  (0,3)=6  (0,4)=3  (0,5)=2  (0,6)=3  (0,10)=3  (0,11)=2  (0,12)=3  (0,13)=6  (0,15)=6  (0,16)=3  (0,17)=2  (0,18)=3  (0,19)=6  (1,0)=6  (1,1)=3  (1,2)=2  (1,3)=3  (1,4)=6  (1,7)=3  (1,8)=2  (1,9)=3  (1,12)=6  (1,13)=3  (1,14)=2  (1,16)=6  (1,18)=6  (1,19)=3  (1,20)=2  (2,1)=2  (2,2)=1  (2,3)=2  (2,5)=4  (2,6)=5# (2,7)=2  (2,8)=1  (2,9)=2  (2,10)=5# (2,11)=4  (2,13)=2  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=2  (2,20)=1  (3,0)=6  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=6  (3,7)=3  (3,8)=2  (3,9)=3  (3,12)=6  (3,13)=3  (3,14)=2  (3,16)=6  (3,18)=6  (3,19)=3  (3,20)=2  (4,0)=3  (4,1)=6  (4,3)=6  (4,4)=3  (4,6)=3  (4,7)=6  (4,8)=5# (4,9)=6  (4,10)=3  (4,12)=3  (4,13)=6  (5,0)=2  (5,2)=4  (5,5)=1  (5,7)=5# (5,11)=1  (5,14)=4  (5,20)=4  (6,0)=3  (6,1)=6  (6,3)=6  (6,4)=3  (6,6)=3  (6,12)=3  (6,13)=6  (7,0)=6  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=6  (7,6)=6  (7,12)=6  (7,13)=3  (7,14)=2  (7,16)=6  (7,18)=6  (7,19)=3  (7,20)=2  (8,1)=2  (8,2)=1  (8,3)=2  (8,5)=4  (8,6)=5# (8,11)=4  (8,13)=2  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=2  (8,20)=1  (9,0)=6  (9,1)=3  (9,2)=2  (9,3)=3  (9,4)=6  (9,7)=3  (9,12)=6  (9,13)=3  (9,14)=2  (9,16)=6  (9,18)=6  (9,19)=3  (9,20)=2  (10,0)=3  (10,1)=6  (10,3)=6  (10,4)=3  (10,5)=2  (10,6)=3  (10,10)=3  (10,11)=2  (10,12)=3  (10,13)=6  (10,15)=6  (10,16)=3  (10,17)=2  (10,18)=3  (10,19)=6  (11,0)=2  (11,2)=4  (11,3)=0  (11,4)=0  (11,5)=1  (11,6)=2  (11,7)=5# (11,8)=4  (11,9)=5# (11,10)=2  (11,11)=1  (11,12)=2  (11,14)=4  (11,15)=5# (11,16)=2  (11,17)=1  (11,18)=2  (11,20)=4  (12,0)=3  (12,1)=6  (12,3)=0  (12,4)=0  (12,5)=2  (12,6)=3  (12,10)=3  (12,11)=2  (12,12)=3  (12,13)=6  (12,15)=6  (12,16)=3  (12,17)=2  (12,18)=3  (12,19)=6  (13,0)=6  (13,1)=3  (13,2)=2  (13,3)=0  (13,4)=0  (13,7)=3  (13,8)=2  (13,9)=3  (13,12)=6  (13,13)=3  (13,14)=2  (13,16)=6  (13,18)=6  (13,19)=3  (13,20)=2  (14,1)=2  (14,2)=1  (14,3)=2  (14,5)=4  (14,6)=5# (14,7)=2  (14,8)=1  (14,9)=2  (14,10)=5# (14,11)=4  (14,13)=2  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=2  (14,20)=1  (15,0)=6  (15,1)=3  (15,2)=2  (15,3)=3  (15,4)=6  (15,7)=3  (15,8)=2  (15,9)=3  (15,12)=6  (15,13)=3  (15,14)=2  (15,16)=6  (15,18)=6  (15,19)=3  (15,20)=2  (16,0)=3  (16,1)=6  (16,3)=6  (16,10)=3  (16,11)=2  (16,12)=3  (16,13)=6  (16,15)=6  (16,16)=3  (16,17)=2  (16,18)=3  (16,19)=6  (17,0)=2  (17,2)=4  (17,7)=5# (17,8)=4  (17,9)=5# (17,10)=2  (17,11)=1  (17,12)=2  (17,14)=4  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,20)=4  (18,0)=3  (18,1)=6  (18,3)=6  (18,10)=3  (18,11)=2  (18,12)=3  (18,13)=6  (18,15)=6  (18,16)=3  (18,17)=2  (18,18)=3  (18,19)=6  (19,0)=6  (19,1)=3  (19,2)=2  (19,3)=3  (19,4)=6  (19,7)=3  (19,8)=2  (19,9)=3  (19,12)=6  (19,13)=3  (19,14)=2  (19,16)=6  (19,18)=6  (19,19)=3  (19,20)=2  (20,1)=2  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=2  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=2  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=2  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (4,5) and color black and mask Full at (3,4)
  _01: a rectangle with size (7,4) and color black and mask xx..|xx..|xx..|xxxx|.xxx|.xxx|.xxx at (3,16)
  _011: a rectangle with size (3,5) and color black and mask Full at (8,0)
  _0111: a rectangle with size (17,2) and color yellow and mask Full (and Border) at (4,1)
  _01111: a rectangle with size (18,4) and color orange and mask Full at (0,0)
  _011111: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (14,7)
  _0111111: a rectangle with size (11,4) and color orange and mask Full at (0,7)
diff: 
delta: (0,0)=2  (0,3)=2  (0,4)=6  (0,5)=5# (0,6)=6  (0,7)=2  (0,10)=2  (0,11)=6  (0,12)=5# (0,13)=6  (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,18)=6  (0,19)=5# (0,20)=6  (1,1)=5# (1,2)=5# (1,4)=4  (1,6)=4  (1,8)=5# (1,9)=5# (1,11)=4  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,20)=4  (2,1)=5# (2,2)=5# (2,4)=4  (2,6)=4  (2,8)=5# (2,9)=5# (2,11)=4  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,20)=4  (3,0)=2  (3,3)=2  (3,10)=2  (3,11)=6  (3,12)=5# (3,13)=6  (3,14)=2  (3,15)=7# (3,18)=6  (3,19)=5# (3,20)=6  (4,0)=6  (4,3)=6  (4,9)=4  (4,10)=6  (4,12)=2  (4,14)=6  (4,15)=4  (4,19)=2  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,18)=2  (5,19)=1  (5,20)=2  (6,0)=6  (6,3)=6  (6,9)=4  (6,10)=6  (6,12)=2  (6,14)=6  (6,15)=4  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=2  (7,10)=2  (7,11)=6  (7,12)=5# (7,13)=6  (7,14)=2  (7,15)=7# (7,16)=7# (7,20)=6  (8,6)=4  (8,8)=5# (8,9)=5# (8,11)=4  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,20)=4  (9,6)=4  (9,8)=5# (9,9)=5# (9,11)=4  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,20)=4  (10,5)=5# (10,6)=6  (10,7)=2  (10,10)=2  (10,11)=6  (10,12)=5# (10,13)=6  (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,18)=6  (10,19)=5# (10,20)=6  (11,0)=6  (11,3)=6  (11,5)=2  (11,7)=6  (11,8)=4  (11,9)=4  (11,10)=6  (11,12)=2  (11,14)=6  (11,15)=4  (11,16)=4  (11,17)=6  (11,19)=2  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,0)=6  (13,3)=6  (13,5)=2  (13,7)=6  (13,8)=4  (13,9)=4  (13,10)=6  (13,12)=2  (13,14)=6  (13,15)=4  (13,16)=0  (13,17)=0  (13,19)=2  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,4)=6  (14,5)=5# (14,6)=6  (14,7)=2  (14,10)=2  (14,11)=6  (14,12)=5# (14,13)=6  (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,18)=6  (14,19)=5# (14,20)=6  (15,1)=5# (15,2)=5# (15,4)=4  (15,6)=4  (15,8)=5# (15,9)=5# (15,11)=4  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,20)=4  (16,1)=5# (16,2)=5# (16,4)=4  (16,6)=4  (16,8)=5# (16,9)=5# (16,11)=4  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,4)=6  (17,5)=5# (17,6)=6  (17,7)=2  (17,10)=2  (17,11)=6  (17,12)=5# (17,13)=6  (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,18)=6  (17,19)=5# (17,20)=6  (18,0)=6  (18,3)=6  (18,5)=2  (18,7)=6  (18,8)=4  (18,9)=4  (18,10)=6  (18,12)=2  (18,14)=6  (18,15)=4  (18,16)=4  (18,17)=6  (18,19)=2  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,0)=6  (20,3)=6  (20,5)=2  (20,7)=6  (20,8)=4  (20,9)=4  (20,10)=6  (20,12)=2  (20,14)=6  (20,15)=4  (20,16)=4  (20,17)=6  (20,19)=2 
   (8047.0 bits)
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (0,7)
diff: 
delta: (0,4)=6  (0,5)=5# (0,6)=6  (0,11)=6  (0,12)=5# (0,13)=6  (0,15)=7# (0,16)=7# (0,18)=6  (0,19)=5# (0,20)=6  (1,1)=5# (1,2)=5# (1,4)=4  (1,5)=3  (1,6)=4  (1,8)=5# (1,9)=5# (1,11)=4  (1,12)=3  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,19)=3  (1,20)=4  (2,1)=5# (2,2)=5# (2,4)=4  (2,5)=3  (2,6)=4  (2,8)=5# (2,9)=5# (2,11)=4  (2,12)=3  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,19)=3  (2,20)=4  (3,4)=6  (3,5)=5# (3,6)=6  (3,11)=6  (3,12)=5# (3,13)=6  (3,15)=7# (3,16)=7# (3,18)=6  (3,19)=5# (3,20)=6  (4,0)=6  (4,1)=4  (4,2)=4  (4,3)=6  (4,4)=3  (4,6)=3  (4,7)=6  (4,8)=4  (4,9)=4  (4,10)=6  (4,11)=3  (4,13)=3  (4,14)=6  (4,15)=4  (4,16)=4  (4,17)=6  (4,18)=3  (4,20)=3  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,5)=1  (5,7)=5# (5,8)=3  (5,9)=3  (5,10)=5# (5,12)=1  (5,14)=5# (5,15)=3  (5,16)=3  (5,17)=5# (5,19)=1  (6,0)=6  (6,1)=4  (6,2)=4  (6,3)=6  (6,4)=3  (6,6)=3  (6,7)=6  (6,8)=4  (6,9)=4  (6,10)=6  (6,11)=3  (6,13)=3  (6,14)=6  (6,15)=4  (6,16)=4  (6,17)=6  (6,18)=3  (6,20)=3  (7,1)=7# (7,2)=7# (7,4)=6  (7,5)=5# (7,6)=6  (7,8)=7# (7,9)=7# (7,11)=6  (7,12)=5# (7,13)=6  (7,15)=7# (7,16)=7# (7,18)=6  (7,19)=5# (7,20)=6  (8,0)=7# (8,1)=5# (8,2)=5# (8,3)=7# (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=7# (8,8)=5# (8,9)=5# (8,10)=7# (8,11)=4  (8,12)=3  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,17)=7# (8,18)=4  (8,19)=3  (8,20)=4  (9,0)=7# (9,1)=5# (9,2)=5# (9,3)=7# (9,4)=4  (9,5)=3  (9,6)=4  (9,7)=7# (9,8)=5# (9,9)=5# (9,10)=7# (9,11)=4  (9,12)=3  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,17)=7# (9,18)=4  (9,19)=3  (9,20)=4  (10,1)=7# (10,2)=7# (10,4)=6  (10,5)=5# (10,6)=6  (10,8)=7# (10,9)=7# (10,11)=6  (10,12)=5# (10,13)=6  (10,15)=7# (10,16)=7# (10,18)=6  (10,19)=5# (10,20)=6  (11,0)=6  (11,1)=4  (11,2)=4  (11,3)=6  (11,4)=3  (11,6)=3  (11,7)=6  (11,8)=4  (11,9)=4  (11,10)=6  (11,11)=3  (11,13)=3  (11,14)=6  (11,15)=4  (11,16)=4  (11,17)=6  (11,18)=3  (11,20)=3  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,5)=1  (12,7)=5# (12,8)=3  (12,9)=3  (12,10)=5# (12,12)=1  (12,14)=5# (12,15)=3  (12,16)=3  (12,17)=5# (12,19)=1  (13,0)=6  (13,1)=4  (13,2)=4  (13,3)=6  (13,4)=3  (13,6)=3  (13,7)=6  (13,8)=4  (13,9)=4  (13,10)=6  (13,11)=3  (13,13)=3  (13,14)=6  (13,15)=4  (13,16)=4  (13,17)=6  (13,18)=3  (13,20)=3  (14,1)=7# (14,2)=7# (14,4)=6  (14,5)=5# (14,6)=6  (14,8)=7# (14,9)=7# (14,11)=6  (14,12)=5# (14,13)=6  (14,15)=7# (14,16)=7# (14,18)=6  (14,19)=5# (14,20)=6  (15,0)=7# (15,1)=5# (15,2)=5# (15,3)=7# (15,4)=4  (15,5)=3  (15,6)=4  (15,7)=7# (15,8)=5# (15,9)=5# (15,10)=7# (15,11)=4  (15,12)=3  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=5# (15,17)=7# (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=7# (16,1)=5# (16,2)=5# (16,3)=7# (16,4)=4  (16,5)=3  (16,6)=4  (16,7)=7# (16,8)=5# (16,9)=5# (16,10)=7# (16,11)=4  (16,12)=3  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,19)=3  (16,20)=4  (17,1)=7# (17,2)=7# (17,4)=6  (17,5)=5# (17,6)=6  (17,8)=7# (17,9)=7# (17,11)=6  (17,12)=5# (17,13)=6  (17,15)=7# (17,16)=7# (17,18)=6  (17,19)=5# (17,20)=6  (18,0)=6  (18,1)=4  (18,2)=4  (18,3)=6  (18,4)=3  (18,6)=3  (18,7)=6  (18,8)=4  (18,9)=4  (18,10)=6  (18,11)=3  (18,13)=3  (18,14)=6  (18,15)=4  (18,16)=4  (18,17)=6  (18,18)=3  (18,20)=3  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,5)=1  (19,7)=5# (19,8)=3  (19,9)=3  (19,10)=5# (19,12)=1  (19,14)=5# (19,15)=3  (19,16)=3  (19,17)=5# (19,19)=1  (20,0)=6  (20,1)=4  (20,2)=4  (20,3)=6  (20,4)=3  (20,6)=3  (20,7)=6  (20,8)=4  (20,9)=4  (20,10)=6  (20,11)=3  (20,13)=3  (20,14)=6  (20,15)=4  (20,16)=4  (20,17)=6  (20,18)=3  (20,20)=3 
   (9706.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (4,5) and color black and mask Full at (3,4)
  _01: a rectangle with size (7,4) and color black and mask xx..|xx..|xx..|xxxx|.xxx|.xxx|.xxx at (3,16)
  _011: a rectangle with size (3,5) and color black and mask Full at (8,0)
  _0111: a rectangle with size (17,2) and color yellow and mask Full (and Border) at (4,1)
  _01111: a rectangle with size (18,4) and color orange and mask Full at (0,0)
  _011111: a rectangle with size (4,4) and color orange and mask .xx.|x..x|x..x|.xx. at (14,7)
  _0111111: a rectangle with size (11,4) and color orange and mask Full at (0,7)
diff: 
delta: (0,0)=2  (0,3)=2  (0,4)=6  (0,5)=5# (0,6)=6  (0,7)=2  (0,10)=2  (0,11)=6  (0,12)=5# (0,13)=6  (0,14)=2  (0,15)=7# (0,16)=7# (0,17)=2  (0,18)=6  (0,19)=5# (0,20)=6  (1,1)=5# (1,2)=5# (1,4)=4  (1,6)=4  (1,8)=5# (1,9)=5# (1,11)=4  (1,13)=4  (1,14)=7# (1,15)=5# (1,16)=5# (1,17)=7# (1,18)=4  (1,20)=4  (2,1)=5# (2,2)=5# (2,4)=4  (2,6)=4  (2,8)=5# (2,9)=5# (2,11)=4  (2,13)=4  (2,14)=7# (2,15)=5# (2,16)=5# (2,17)=7# (2,18)=4  (2,20)=4  (3,0)=2  (3,3)=2  (3,10)=2  (3,11)=6  (3,12)=5# (3,13)=6  (3,14)=2  (3,15)=7# (3,18)=6  (3,19)=5# (3,20)=6  (4,0)=6  (4,3)=6  (4,9)=4  (4,10)=6  (4,12)=2  (4,14)=6  (4,15)=4  (4,19)=2  (5,0)=5# (5,1)=3  (5,2)=3  (5,3)=5# (5,9)=3  (5,10)=5# (5,11)=2  (5,12)=1  (5,13)=2  (5,14)=5# (5,18)=2  (5,19)=1  (5,20)=2  (6,0)=6  (6,3)=6  (6,9)=4  (6,10)=6  (6,12)=2  (6,14)=6  (6,15)=4  (7,0)=2  (7,1)=7# (7,2)=7# (7,3)=2  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=2  (7,10)=2  (7,11)=6  (7,12)=5# (7,13)=6  (7,14)=2  (7,15)=7# (7,16)=7# (7,20)=6  (8,6)=4  (8,8)=5# (8,9)=5# (8,11)=4  (8,13)=4  (8,14)=7# (8,15)=5# (8,16)=5# (8,20)=4  (9,6)=4  (9,8)=5# (9,9)=5# (9,11)=4  (9,13)=4  (9,14)=7# (9,15)=5# (9,16)=5# (9,20)=4  (10,5)=5# (10,6)=6  (10,7)=2  (10,10)=2  (10,11)=6  (10,12)=5# (10,13)=6  (10,14)=2  (10,15)=7# (10,16)=7# (10,17)=2  (10,18)=6  (10,19)=5# (10,20)=6  (11,0)=6  (11,3)=6  (11,5)=2  (11,7)=6  (11,8)=4  (11,9)=4  (11,10)=6  (11,12)=2  (11,14)=6  (11,15)=4  (11,16)=4  (11,17)=6  (11,19)=2  (12,0)=5# (12,1)=3  (12,2)=3  (12,3)=5# (12,4)=2  (12,5)=1  (12,6)=2  (12,7)=5# (12,10)=5# (12,11)=2  (12,12)=1  (12,13)=2  (12,14)=5# (12,17)=5# (12,18)=2  (12,19)=1  (12,20)=2  (13,0)=6  (13,3)=6  (13,5)=2  (13,7)=6  (13,8)=4  (13,9)=4  (13,10)=6  (13,12)=2  (13,14)=6  (13,15)=4  (13,16)=0  (13,17)=0  (13,19)=2  (14,0)=2  (14,1)=7# (14,2)=7# (14,3)=2  (14,4)=6  (14,5)=5# (14,6)=6  (14,7)=2  (14,10)=2  (14,11)=6  (14,12)=5# (14,13)=6  (14,14)=2  (14,15)=7# (14,16)=0  (14,17)=0  (14,18)=6  (14,19)=5# (14,20)=6  (15,1)=5# (15,2)=5# (15,4)=4  (15,6)=4  (15,8)=5# (15,9)=5# (15,11)=4  (15,13)=4  (15,14)=7# (15,15)=5# (15,16)=0  (15,17)=0  (15,18)=4  (15,20)=4  (16,1)=5# (16,2)=5# (16,4)=4  (16,6)=4  (16,8)=5# (16,9)=5# (16,11)=4  (16,13)=4  (16,14)=7# (16,15)=5# (16,16)=5# (16,17)=7# (16,18)=4  (16,20)=4  (17,0)=2  (17,1)=7# (17,2)=7# (17,3)=2  (17,4)=6  (17,5)=5# (17,6)=6  (17,7)=2  (17,10)=2  (17,11)=6  (17,12)=5# (17,13)=6  (17,14)=2  (17,15)=7# (17,16)=7# (17,17)=2  (17,18)=6  (17,19)=5# (17,20)=6  (18,0)=6  (18,3)=6  (18,5)=2  (18,7)=6  (18,8)=4  (18,9)=4  (18,10)=6  (18,12)=2  (18,14)=6  (18,15)=4  (18,16)=4  (18,17)=6  (18,19)=2  (19,0)=5# (19,1)=3  (19,2)=3  (19,3)=5# (19,4)=2  (19,5)=1  (19,6)=2  (19,7)=5# (19,10)=5# (19,11)=2  (19,12)=1  (19,13)=2  (19,14)=5# (19,17)=5# (19,18)=2  (19,19)=1  (19,20)=2  (20,0)=6  (20,3)=6  (20,5)=2  (20,7)=6  (20,8)=4  (20,9)=4  (20,10)=6  (20,12)=2  (20,14)=6  (20,15)=4  (20,16)=4  (20,17)=6  (20,19)=2 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (5,5) and color black and mask Full at (14,1)
  _01: a rectangle with size (5,4) and color black and mask Full at (5,4)
  _011: a rectangle with size (4,3) and color black and mask Full at (5,9)
  _0111: a rectangle with size (1,21) and color red and mask Full at (1,0)
  _01111: a rectangle with size (1,21) and color pink and mask Full at (11,0)
  _011111: a rectangle with size (1,21) and color red and mask Full at (13,0)
  _0111111: a rectangle with size (1,21) and color pink and mask Full at (19,0)
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,8)=2  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,8)=6  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,1)=5# (11,3)=1  (11,5)=5# (11,7)=1  (11,9)=5# (11,11)=1  (11,13)=5# (11,15)=1  (11,17)=5# (11,19)=1  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,1)=1  (13,3)=5# (13,5)=1  (13,7)=5# (13,9)=1  (13,11)=5# (13,13)=1  (13,15)=5# (13,17)=1  (13,19)=5# (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,1)=5# (19,3)=1  (19,5)=5# (19,7)=1  (19,9)=5# (19,11)=1  (19,13)=5# (19,15)=1  (19,17)=5# (19,19)=1  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
   (6693.5 bits)
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (1,21) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,21) and color pink and mask Full at (3,0)
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,1)=2  (2,3)=6  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,1)=5# (3,3)=1  (3,5)=5# (3,7)=1  (3,9)=5# (3,11)=1  (3,13)=5# (3,15)=1  (3,17)=5# (3,19)=1  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,15)=6  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=5# (5,8)=2  (5,9)=1  (5,10)=2  (5,11)=5# (5,12)=2  (5,13)=1  (5,14)=2  (5,15)=5# (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,5)=2  (6,7)=6  (6,9)=2  (6,11)=6  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,4)=6  (7,5)=5# (7,6)=6  (7,7)=1  (7,8)=6  (7,9)=5# (7,10)=6  (7,11)=1  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,5)=2  (8,7)=6  (8,9)=2  (8,11)=6  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,4)=2  (9,5)=1  (9,6)=2  (9,7)=5# (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,0)=6  (11,1)=5# (11,2)=6  (11,3)=1  (11,4)=6  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=6  (11,9)=5# (11,10)=6  (11,11)=1  (11,12)=6  (11,13)=5# (11,14)=6  (11,15)=1  (11,16)=6  (11,17)=5# (11,18)=6  (11,19)=1  (11,20)=6  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,0)=2  (13,1)=1  (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=1  (13,6)=2  (13,7)=5# (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=5# (13,12)=2  (13,13)=1  (13,14)=2  (13,15)=5# (13,16)=2  (13,17)=1  (13,18)=2  (13,19)=5# (13,20)=2  (14,1)=2  (14,3)=6  (14,5)=2  (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=6  (15,5)=5# (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,1)=2  (16,3)=6  (16,5)=2  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,1)=1  (17,2)=2  (17,3)=5# (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,1)=2  (18,3)=6  (18,5)=2  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,0)=6  (19,1)=5# (19,2)=6  (19,3)=1  (19,4)=6  (19,5)=5# (19,6)=6  (19,7)=1  (19,8)=6  (19,9)=5# (19,10)=6  (19,11)=1  (19,12)=6  (19,13)=5# (19,14)=6  (19,15)=1  (19,16)=6  (19,17)=5# (19,18)=6  (19,19)=1  (19,20)=6  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
   (8182.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (5,5) and color black and mask Full at (14,1)
  _01: a rectangle with size (5,4) and color black and mask Full at (5,4)
  _011: a rectangle with size (4,3) and color black and mask Full at (5,9)
  _0111: a rectangle with size (1,21) and color red and mask Full at (1,0)
  _01111: a rectangle with size (1,21) and color pink and mask Full at (11,0)
  _011111: a rectangle with size (1,21) and color red and mask Full at (13,0)
  _0111111: a rectangle with size (1,21) and color pink and mask Full at (19,0)
diff: 
delta: (0,1)=2  (0,3)=6  (0,5)=2  (0,7)=6  (0,9)=2  (0,11)=6  (0,13)=2  (0,15)=6  (0,17)=2  (0,19)=6  (1,1)=1  (1,3)=5# (1,5)=1  (1,7)=5# (1,9)=1  (1,11)=5# (1,13)=1  (1,15)=5# (1,17)=1  (1,19)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=2  (2,7)=6  (2,9)=2  (2,11)=6  (2,13)=2  (2,15)=6  (2,17)=2  (2,19)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=5# (3,6)=6  (3,7)=1  (3,8)=6  (3,9)=5# (3,10)=6  (3,11)=1  (3,12)=6  (3,13)=5# (3,14)=6  (3,15)=1  (3,16)=6  (3,17)=5# (3,18)=6  (3,19)=1  (3,20)=6  (4,1)=2  (4,3)=6  (4,5)=2  (4,7)=6  (4,9)=2  (4,11)=6  (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=2  (4,19)=6  (5,0)=2  (5,1)=1  (5,2)=2  (5,3)=5# (5,8)=2  (5,12)=2  (5,13)=1  (5,14)=0  (5,15)=0  (5,16)=0  (5,17)=1  (5,18)=2  (5,19)=5# (5,20)=2  (6,1)=2  (6,3)=6  (6,13)=2  (6,15)=6  (6,17)=2  (6,19)=6  (7,0)=6  (7,1)=5# (7,2)=6  (7,3)=1  (7,8)=6  (7,12)=6  (7,13)=5# (7,14)=6  (7,15)=1  (7,16)=6  (7,17)=5# (7,18)=6  (7,19)=1  (7,20)=6  (8,1)=2  (8,3)=6  (8,13)=2  (8,15)=6  (8,17)=2  (8,19)=6  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=5# (9,8)=2  (9,9)=1  (9,10)=2  (9,11)=5# (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=5# (9,16)=2  (9,17)=1  (9,18)=2  (9,19)=5# (9,20)=2  (10,1)=2  (10,3)=6  (10,5)=2  (10,7)=6  (10,9)=2  (10,11)=6  (10,13)=2  (10,15)=6  (10,17)=2  (10,19)=6  (11,1)=5# (11,3)=1  (11,5)=5# (11,7)=1  (11,9)=5# (11,11)=1  (11,13)=5# (11,15)=1  (11,17)=5# (11,19)=1  (12,1)=2  (12,3)=6  (12,5)=2  (12,7)=6  (12,9)=2  (12,11)=6  (12,13)=2  (12,15)=6  (12,17)=2  (12,19)=6  (13,1)=1  (13,3)=5# (13,5)=1  (13,7)=5# (13,9)=1  (13,11)=5# (13,13)=1  (13,15)=5# (13,17)=1  (13,19)=5# (14,7)=6  (14,9)=2  (14,11)=6  (14,13)=2  (14,15)=6  (14,17)=2  (14,19)=6  (15,0)=6  (15,6)=6  (15,7)=1  (15,8)=6  (15,9)=5# (15,10)=6  (15,11)=1  (15,12)=6  (15,13)=5# (15,14)=6  (15,15)=1  (15,16)=6  (15,17)=5# (15,18)=6  (15,19)=1  (15,20)=6  (16,7)=6  (16,9)=2  (16,11)=6  (16,13)=2  (16,15)=6  (16,17)=2  (16,19)=6  (17,0)=2  (17,6)=2  (17,7)=5# (17,8)=2  (17,9)=1  (17,10)=2  (17,11)=5# (17,12)=2  (17,13)=1  (17,14)=2  (17,15)=5# (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=5# (17,20)=2  (18,7)=6  (18,9)=2  (18,11)=6  (18,13)=2  (18,15)=6  (18,17)=2  (18,19)=6  (19,1)=5# (19,3)=1  (19,5)=5# (19,7)=1  (19,9)=5# (19,11)=1  (19,13)=5# (19,15)=1  (19,17)=5# (19,19)=1  (20,1)=2  (20,3)=6  (20,5)=2  (20,7)=6  (20,9)=2  (20,11)=6  (20,13)=2  (20,15)=6  (20,17)=2  (20,19)=6 
! size mismatch, 10x10 instead of 21x21

TRAIN 0dfd9992.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (3,5) and color black and mask Full at (1,9)
  _01: a rectangle with size (5,3) and color black and mask Full at (15,4)
  _011: a rectangle with size (3,4) and color black and mask Full at (8,4)
  _0111: a rectangle with size (19,2) and color cyan and mask Full (and Border) at (2,6)
  _01111: a rectangle with size (4,2) and color black and mask Full (and Border) at (12,14)
  _011111: a rectangle with size (2,19) and color cyan and mask Full (and Border) at (15,2)
  _0111111: a rectangle with size (4,4) and color cyan and mask .xx.|x..x|x..x|.xx. at (5,14)
diff: 
delta: (0,0)=9# (0,1)=6  (0,2)=5# (0,3)=6  (0,4)=9# (0,5)=5# (0,6)=3  (0,7)=3  (0,8)=5# (0,9)=9# (0,10)=6  (0,11)=5# (0,12)=6  (0,13)=9# (0,14)=5# (0,15)=3  (0,16)=3  (0,17)=5# (0,18)=9# (0,19)=6  (0,20)=5# (1,0)=6  (1,1)=3  (1,3)=3  (1,4)=6  (1,6)=9# (1,7)=9# (1,15)=9# (1,16)=9# (1,18)=6  (1,19)=3  (2,0)=5# (2,2)=1  (2,4)=5# (2,5)=1  (2,8)=1  (2,14)=1  (2,15)=8  (2,16)=8  (2,17)=1  (2,18)=5# (2,20)=1  (3,0)=6  (3,1)=3  (3,3)=3  (3,4)=6  (3,6)=9# (3,7)=9# (3,15)=9# (3,16)=9# (3,18)=6  (3,19)=3  (4,0)=9# (4,1)=6  (4,2)=5# (4,3)=6  (4,4)=9# (4,5)=5# (4,6)=3  (4,7)=3  (4,8)=5# (4,9)=9# (4,10)=6  (4,11)=5# (4,12)=6  (4,13)=9# (4,14)=5# (4,15)=3  (4,16)=3  (4,17)=5# (4,18)=9# (4,19)=6  (4,20)=5# (5,0)=5# (5,2)=1  (5,4)=5# (5,5)=1  (5,8)=1  (5,9)=5# (5,11)=1  (5,13)=5# (5,14)=1  (5,17)=1  (5,18)=5# (5,20)=1  (6,0)=3  (6,1)=9# (6,2)=8  (6,3)=9# (6,4)=3  (6,5)=8  (6,6)=6  (6,7)=6  (6,8)=8  (6,9)=3  (6,10)=9# (6,11)=8  (6,12)=9# (6,13)=3  (6,15)=6  (6,16)=6  (6,18)=3  (6,19)=9# (6,20)=8  (7,0)=3  (7,1)=9# (7,2)=8  (7,3)=9# (7,4)=3  (7,5)=8  (7,6)=6  (7,7)=6  (7,8)=8  (7,9)=3  (7,10)=9# (7,11)=8  (7,12)=9# (7,13)=3  (7,15)=6  (7,16)=6  (7,18)=3  (7,19)=9# (7,20)=8  (8,0)=5# (8,2)=1  (8,8)=1  (8,9)=5# (8,11)=1  (8,13)=5# (8,14)=1  (8,17)=1  (8,18)=5# (8,20)=1  (9,0)=9# (9,1)=6  (9,2)=5# (9,3)=6  (9,8)=5# (9,9)=9# (9,10)=6  (9,11)=5# (9,12)=6  (9,13)=9# (9,14)=5# (9,15)=3  (9,16)=3  (9,17)=5# (9,18)=9# (9,19)=6  (9,20)=5# (10,0)=6  (10,1)=3  (10,3)=3  (10,9)=6  (10,10)=3  (10,12)=3  (10,13)=6  (10,15)=9# (10,16)=9# (10,18)=6  (10,19)=3  (11,0)=5# (11,2)=1  (11,4)=5# (11,5)=1  (11,8)=1  (11,9)=5# (11,11)=1  (11,13)=5# (11,14)=1  (11,15)=8  (11,16)=8  (11,17)=1  (11,18)=5# (11,20)=1  (12,0)=6  (12,1)=3  (12,3)=3  (12,4)=6  (12,6)=9# (12,7)=9# (12,9)=6  (12,10)=3  (12,12)=3  (12,13)=6  (12,16)=9# (12,18)=6  (12,19)=3  (13,0)=9# (13,1)=6  (13,2)=5# (13,3)=6  (13,4)=9# (13,5)=5# (13,6)=3  (13,7)=3  (13,8)=5# (13,9)=9# (13,10)=6  (13,11)=5# (13,12)=6  (13,13)=9# (13,16)=3  (13,17)=5# (13,18)=9# (13,19)=6  (13,20)=5# (14,0)=5# (14,2)=1  (14,4)=5# (14,5)=1  (14,8)=1  (14,9)=5# (14,11)=1  (14,13)=5# (14,16)=8  (14,17)=1  (14,18)=5# (14,20)=1  (15,0)=0  (15,1)=0  (15,3)=9# (15,7)=6  (15,9)=3  (15,10)=9# (15,12)=9# (15,13)=3  (15,16)=6  (15,18)=3  (15,19)=9# (16,0)=0  (16,1)=0  (16,3)=9# (16,7)=6  (16,9)=3  (16,10)=9# (16,12)=9# (16,13)=3  (16,14)=8  (16,15)=6  (16,16)=6  (16,18)=3  (16,19)=9# (17,0)=5# (17,2)=1  (17,7)=8  (17,8)=1  (17,9)=5# (17,11)=1  (17,13)=5# (17,14)=1  (17,15)=8  (17,16)=8  (17,17)=1  (17,18)=5# (17,20)=1  (18,0)=9# (18,1)=6  (18,2)=5# (18,3)=6  (18,7)=3  (18,8)=5# (18,9)=9# (18,10)=6  (18,11)=5# (18,12)=6  (18,13)=9# (18,14)=5# (18,15)=3  (18,16)=3  (18,17)=5# (18,18)=9# (18,19)=6  (18,20)=5# (19,0)=6  (19,1)=3  (19,3)=3  (19,7)=9# (19,9)=6  (19,10)=3  (19,12)=3  (19,13)=6  (19,15)=9# (19,16)=9# (19,18)=6  (19,19)=3  (20,0)=5# (20,2)=1  (20,4)=5# (20,5)=1  (20,8)=1  (20,9)=5# (20,11)=1  (20,13)=5# (20,14)=1  (20,15)=8  (20,16)=8  (20,17)=1  (20,18)=5# (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TEST 0dfd9992.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.5 sec (29.5 sec/task)
bits-train-error = 270765.9 bits (270765.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-383] Checking task 0e206a2e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13520.3 = 13535.9
DL output with Mo: L = 15.6 + 10362.9 = 10378.6
DL input+output M: L = 31.2 + 23883.2 = 23914.4

# learning a model for train pairs
2.000	
1.644	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.373	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.308	OUT DEF: ^.size=^.size
1.256	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.216	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.191	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
1.167	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.141	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.121	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j + 1
1.103	OUT DEF: ^.layer_0.shape.size.i=3
1.086	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.068	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
1.052	OUT DEF: ^.layer_011.shape=^.layer_011.shape
1.035	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.019	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.004	OUT DEF: ^.layer_0111.shape=^.layer_010.shape
0.988	OUT DEF: ^.layer_0111.pos.i=^.size.i - 3
0.972	OUT DEF: ^.layer_0.pos.i=area(^.layer_0.shape) + 3
0.965	OUT DEF: ^.color=black
0.959	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,^.layer_01.pos.j + 1) and color ^.layer_0.shape.color and mask ? at (area(^.layer_0.shape) + 3,?)
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at (?,?)
  _011: ^.layer_011.shape at (?,?)
  _0111: ^.layer_010.shape at (^.size.i - 3,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 119.7 + 8674.0 = 8793.6
DL output with Mo: L = 184.1 + 3031.4 = 3215.4
DL input+output M: L = 303.7 + 11705.3 = 12009.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _010: a point with color green at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.x.|x.x at (1,2)
  _011: a point with color blue at (2,4)
diff: 
delta: (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
   (420.1 bits)
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|.x.|xxx at (2,14)
  _011: a point with color blue at (4,17)
  _0111: a point with color green at (11,2)
diff: 
delta: (2,15)=4  (4,13)=3  (9,2)=1  (10,3)=4 
   (177.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _010: a point with color green at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask .x.|.x.|x.x at (1,2)
  _011: a point with color blue at (2,4)
diff: 
delta: (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|.x.|x.x at (1,2)
  _010: a point with color green at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.x at (7,7)
  _011: a point with color blue at (2,4)
diff: 
delta: (2,15)=4  (3,3)=4  (4,13)=3  (4,17)=1  (6,7)=3  (8,9)=4  (9,2)=1  (10,3)=4  (10,7)=1  (11,2)=3 
! 47 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _010: a point with color red at (3,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (8,4)
  _011: a point with color yellow at (4,3)
diff: 
delta: (10,13)=4  (11,9)=1  (11,14)=2 
   (221.7 bits)
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask x....|.xxxx|x...x at (10,9)
  _01: a rectangle with size (1,1) and color blue and mask Full at (11,9)
  _011: a point with color yellow at (10,13)
  _0111: a point with color red at (11,14)
diff: 
delta:
   (61.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _010: a point with color red at (3,4)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,3)
  _011: a point with color blue at (8,4)
diff: 
delta: (10,13)=4  (11,9)=1  (11,14)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .xx|.x.|.x.|.x.|x.x at (4,3)
  _010: a point with color red at (3,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (8,4)
  _011: a point with color yellow at (4,3)
diff: 
delta: (10,13)=4  (11,9)=1  (11,14)=2 
! 26 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _010: a point with color yellow at (2,9)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,5)
  _011: a point with color red at (4,9)
diff: 
delta: (11,1)=1  (11,5)=2  (13,5)=4 
   (225.6 bits)
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask ....x.|.xxx.x|x...x. at (10,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (11,1)
  _011: a point with color red at (11,5)
  _0111: a point with color yellow at (13,5)
diff: 
delta:
   (64.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _010: a point with color yellow at (2,9)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,5)
  _011: a point with color red at (4,9)
diff: 
delta: (11,1)=1  (11,5)=2  (13,5)=4 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x...x.|.xxx.x|....x. at (3,5)
  _010: a point with color yellow at (2,9)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,9)
  _011: a point with color blue at (4,5)
diff: 
delta: (11,1)=1  (11,5)=2  (13,5)=4 
! 26 wrong pixels (generated / expected)

TRAIN 0e206a2e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|x.xx.|.x..x|xxx.. at (3,6)
  _010: a point with color blue at (4,7)
  _01: a rectangle with size (3,4) and color grey and mask x...|.x.x|..x. at (9,10)
  _011: a point with color yellow at (4,10)
diff: 
delta: (6,5)=2  (9,11)=2  (11,11)=4  (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 57 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|x.xx.|.x..x|xxx.. at (3,6)
  _010: a point with color yellow at (4,10)
  _01: a rectangle with size (3,4) and color grey and mask x...|.x.x|..x. at (9,10)
  _011: a point with color blue at (4,7)
diff: 
delta: (6,5)=2  (9,11)=2  (11,11)=4  (11,13)=1  (13,2)=2  (13,4)=4  (15,4)=1  (16,10)=4  (19,10)=1  (21,12)=2 
! 57 wrong pixels (generated / expected)

TEST 0e206a2e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.3 sec (14.3 sec/task)
bits-train-error = 3031.4 bits (3031.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-382] Checking task 10fcaaa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2072.4 = 2088.0
DL output with Mo: L = 15.6 + 23221.0 = 23236.6
DL input+output M: L = 31.2 + 25293.4 = 25324.6

# learning a model for train pairs
2.000	
1.744	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.571	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.524	IN  DEF: ^.color=black
1.483	OUT OBJECT at ^.layer_01: ^.layer_0
1.452	OUT DEF: ^.size=^.size * 2
1.422	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.328	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.pos.i
1.312	OUT OBJECT at ^.layer_00: ^.layer_0.shape at (?,?)
1.302	OUT DEF: ^.layer_0.pos.j='0

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ? and layers
  _00: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,'0)
  _01: ^.layer_0
  _011: a rectangle with size (^.layer_0.pos.i,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 1592.0 = 1627.7
DL output with Mo: L = 128.6 + 12012.5 = 12141.0
DL input+output M: L = 164.3 + 13604.5 = 13768.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,4) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta:
   (25.9 bits)
data: a background with size (4,8) and color black and layers
  _00: a point with color grey at (1,5)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _01: a point with color grey at (1,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
diff: 
delta: (0,4)=8  (0,6)=8  (2,0)=8  (2,2)=8  (2,4)=8  (2,6)=8  (3,1)=5# (3,5)=5#
   (246.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,4) and color black and layers
  _0: a point with color grey at (1,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  _0: a point with color pink at (2,1)
diff: 
delta: (0,2)=6 
   (51.5 bits)
data: a background with size (6,8) and color black and layers
  _00: a point with color pink at (0,2)
  _0: a rectangle with size (4,8) and color cyan and mask xxxxxxxx|...x...x|x...x...|xxxxxxxx at (1,0)
  _01: a point with color pink at (2,1)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (2,5)
diff: 
delta: (0,6)=6  (3,2)=6  (5,1)=6  (5,5)=6 
   (206.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a point with color pink at (2,1)
diff: 
delta: (0,2)=6 
! 29 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (4,0)
diff: 
delta: (1,1)=4 
   (52.8 bits)
data: a background with size (10,6) and color cyan and layers
  _00: a point with color yellow at (1,1)
  _0: a rectangle with size (5,6) and color black and mask .x..x.|x.xx.x|.x..x.|x..x.x|.xx.xx at (0,0)
  _01: a point with color yellow at (4,0)
  _011: a rectangle with size (4,6) and color black and mask x.xx.x|.x..x.|x..x.x|.xx.xx at (6,0)
diff: 
delta: (1,4)=4  (4,3)=4  (6,1)=4  (6,4)=4  (9,0)=4  (9,3)=4 
   (289.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,1)
diff: 
delta: (4,0)=4 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (4,0)
diff: 
delta: (1,1)=4 
! 35 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (28.9 bits)
data: a background with size (8,8) and color black and layers
  _00: a point with color red at (1,5)
  _0: a rectangle with size (1,7) and color cyan and mask Full at (0,0)
  _01: a point with color red at (1,1)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (2,0)
diff: 
delta: (0,1)=0  (0,3)=0  (0,5)=0  (2,2)=8  (2,4)=8  (2,6)=8  (4,0)=8  (4,2)=8  (4,4)=8  (4,6)=8  (5,1)=2  (5,5)=2  (6,0)=8  (6,2)=8  (6,4)=8  (6,6)=8 
   (458.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 10fcaaa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,5) and color black and layers
  _0: a point with color green at (3,3)
diff: 
delta: (0,1)=3  (5,1)=3 
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,5) and color black and layers
  _0: a point with color green at (5,1)
diff: 
delta: (0,1)=3  (3,3)=3 
! 54 wrong pixels (generated / expected)

TEST 10fcaaa3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.8 sec (8.8 sec/task)
bits-train-error = 12012.5 bits (12012.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-381] Checking task 11852cab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8348.5 = 8364.1
DL output with Mo: L = 15.6 + 10610.1 = 10625.7
DL input+output M: L = 31.2 + 18958.6 = 18989.8

# learning a model for train pairs
2.000	
1.902	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.737	OUT OBJECT at ^.layer_0: ^.layer_0
1.680	OUT DEF: ^.size=^.size
1.653	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.582	OUT OBJECT at ^.layer_01: ^.layer_01
1.545	OUT OBJECT at ^.layer_011: ^.layer_01.shape at (?,?)
1.507	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
1.470	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at (?,?)
1.439	OUT DEF: ^.layer_011.pos=^.layer_01.pos + 2
1.411	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.340	OUT OBJECT at ^.layer_0110: ^.layer_011
1.303	OUT OBJECT at ^.layer_01111: ^.layer_011.shape at (?,?)
1.264	OUT OBJECT at ^.layer_01110: ^.layer_011.shape at (?,?)
1.225	OUT OBJECT at ^.layer_01101: ^.layer_011.shape at (?,?)
1.194	OUT DEF: ^.layer_01111.pos=^.layer_0.pos + 3
1.179	OUT DEF: ^.layer_01101.pos.i=2
1.164	OUT DEF: ^.layer_01110.pos.j=^.layer_011.pos.j
1.149	OUT DEF: ^.layer_010.pos.i=^.layer_01.pos.i + 2
1.134	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.j
1.120	OUT DEF: ^.layer_010.pos.j=^.layer_01.pos.j - 2
1.106	OUT DEF: ^.layer_01110.pos.i=^.layer_0.pos.i + 3
1.092	OUT DEF: ^.layer_01101.pos.j=^.layer_0.pos.j + 3
1.080	OUT DEF: ^.layer_0111.pos.i=span(^.layer_01.pos.j, ^.layer_011.pos.j) + 3
1.071	IN  DEF: ^.color=black
1.064	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at (^.layer_01.pos.i + 2,^.layer_01.pos.j - 2)
  _01: ^.layer_01
  _0110: ^.layer_011
  _01101: ^.layer_011.shape at (2,^.layer_0.pos.j + 3)
  _011: ^.layer_01.shape at ^.layer_01.pos + 2
  _01110: ^.layer_011.shape at (^.layer_0.pos.i + 3,^.layer_011.pos.j)
  _0111: ^.layer_01.shape at (span(^.layer_01.pos.j, ^.layer_011.pos.j) + 3,^.layer_01.pos.j)
  _01111: ^.layer_011.shape at ^.layer_0.pos + 3
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 87.8 + 6919.9 = 7007.8
DL output with Mo: L = 315.7 + 2084.7 = 2400.4
DL input+output M: L = 403.5 + 9004.6 = 9408.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _01: a point with color cyan at (1,4)
  _011: a point with color red at (2,3)
diff: 
delta: (2,5)=2  (3,2)=8  (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
   (261.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _010: a point with color cyan at (3,2)
  _01: a point with color cyan at (1,4)
  _0110: a point with color red at (2,3)
  _01101: a point with color red at (2,5)
  _011: a point with color cyan at (3,6)
  _01110: a point with color red at (4,3)
  _0111: a point with color cyan at (5,4)
  _01111: a point with color red at (4,5)
diff: 
delta: (1,6)=3  (3,4)=3  (5,2)=3  (5,6)=3 
   (104.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _01: a point with color cyan at (1,4)
  _011: a point with color red at (2,3)
diff: 
delta: (2,5)=2  (3,2)=8  (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _01: a point with color cyan at (1,4)
  _011: a point with color red at (2,5)
diff: 
delta: (2,3)=2  (3,2)=8  (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,2)
  _01: a point with color red at (2,3)
  _011: a point with color cyan at (1,4)
diff: 
delta: (2,5)=2  (3,2)=8  (3,4)=3  (3,6)=8  (4,3)=2  (4,5)=2  (5,4)=8 
! 12 wrong pixels (generated / expected)

TRAIN 11852cab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _01: a point with color green at (2,4)
  _011: a point with color red at (2,2)
diff: 
delta: (4,2)=3  (4,6)=3  (6,4)=3 
   (170.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _010: a point with color green at (4,2)
  _01: a point with color green at (2,4)
  _0110: a point with color red at (2,2)
  _01101: a point with color red at (2,6)
  _011: a point with color green at (4,6)
  _01110: a point with color red at (6,2)
  _0111: a point with color green at (6,4)
  _01111: a point with color red at (6,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _01: a point with color red at (2,2)
  _011: a point with color green at (2,4)
diff: 
delta: (4,2)=3  (4,6)=3  (6,4)=3 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (3,3)
  _01: a point with color green at (2,4)
  _011: a point with color red at (2,2)
diff: 
delta: (4,2)=3  (4,6)=3  (6,4)=3 
correct output grid

TRAIN 11852cab.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _01: a point with color cyan at (1,5)
  _011: a point with color yellow at (2,4)
diff: 
delta: (1,7)=8  (3,3)=8  (3,5)=1  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
   (261.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _010: a point with color cyan at (3,3)
  _01: a point with color cyan at (1,5)
  _0110: a point with color yellow at (2,4)
  _01101: a point with color yellow at (2,6)
  _011: a point with color cyan at (3,7)
  _01110: a point with color yellow at (4,4)
  _0111: a point with color cyan at (5,5)
  _01111: a point with color yellow at (4,6)
diff: 
delta: (1,7)=8  (3,5)=1  (5,3)=8  (5,7)=8 
   (104.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (1,7)
diff: 
delta: (2,4)=4  (3,3)=8  (3,5)=1  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _01: a point with color cyan at (1,5)
  _011: a point with color yellow at (2,4)
diff: 
delta: (1,7)=8  (3,3)=8  (3,5)=1  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _01: a point with color cyan at (1,7)
  _011: a point with color cyan at (1,5)
diff: 
delta: (2,4)=4  (3,3)=8  (3,5)=1  (3,7)=8  (5,3)=8  (5,5)=8  (5,7)=8 
! 13 wrong pixels (generated / expected)

TRAIN 11852cab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _01: a point with color yellow at (2,3)
  _011: a point with color blue at (2,5)
diff: 
delta: (3,2)=2  (3,4)=2  (4,3)=1  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _01: a point with color yellow at (2,3)
  _011: a point with color red at (3,2)
diff: 
delta: (2,5)=1  (3,4)=2  (4,3)=1  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _01: a point with color blue at (2,5)
  _011: a point with color yellow at (2,3)
diff: 
delta: (3,2)=2  (3,4)=2  (4,3)=1  (5,2)=2  (5,4)=2  (6,1)=1  (6,5)=1 
! 11 wrong pixels (generated / expected)

TEST 11852cab.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.3 sec (17.3 sec/task)
bits-train-error = 2084.7 bits (2084.7 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-380] Checking task 1190e5a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 85900.3 = 85915.9
DL output with Mo: L = 15.6 + 678.1 = 693.7
DL input+output M: L = 31.2 + 86578.4 = 86609.7

# learning a model for train pairs
2.000	
1.137	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.749	OUT DEF: ^.color=^.color

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 11748.0 = 11796.8
DL output with Mo: L = 15.3 + 409.2 = 424.4
DL input+output M: L = 64.1 + 12157.2 = 12221.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color green and layers
  _0: a rectangle with size (15,15) and color orange and mask .x........x..x.|.x........x..x.|xxxxxxxxxxxxxxx|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x. at (0,0)
diff: 
delta:
   (263.6 bits)
data: a background with size (2,4) and color green and layers
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color green and layers
  _0: a rectangle with size (15,15) and color orange and mask .x........x..x.|.x........x..x.|xxxxxxxxxxxxxxx|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x.|.x........x..x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 2x4

TRAIN 1190e5a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color blue and layers
  _0: a rectangle with size (11,11) and color cyan and mask ....x......|....x......|....x......|xxxxxxxxxxx|....x......|....x......|....x......|....x......|....x......|xxxxxxxxxxx|....x...... at (0,0)
diff: 
delta:
   (174.3 bits)
data: a background with size (3,2) and color blue and layers
diff: 
delta:
   (11.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color blue and layers
  _0: a rectangle with size (11,11) and color cyan and mask ....x......|....x......|....x......|xxxxxxxxxxx|....x......|....x......|....x......|....x......|....x......|xxxxxxxxxxx|....x...... at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 3x2

TRAIN 1190e5a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (27,27) and color green and layers
  _0: a rectangle with size (27,27) and color blue and mask ......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x. at (0,0)
diff: 
delta:
   (736.9 bits)
data: a background with size (6,5) and color green and layers
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color green and layers
  _0: a rectangle with size (27,27) and color blue and mask ......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|xxxxxxxxxxxxxxxxxxxxxxxxxxx|......x..............x.x.x.|......x..............x.x.x.|......x..............x.x.x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 6x5

TRAIN 1190e5a7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color blue and layers
  _0: a rectangle with size (22,22) and color grey and mask ...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x.|xxxxxxxxxxxxxxxxxxxxxx|...............x....x.|...............x....x.|...............x....x.|...............x....x. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 5x3

TEST 1190e5a7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.0 sec (0.0 sec/task)
bits-train-error = 409.2 bits (409.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-379] Checking task 137eaa0f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8701.3 = 8716.9
DL output with Mo: L = 15.6 + 4836.2 = 4851.8
DL input+output M: L = 31.2 + 13537.4 = 13568.6

# learning a model for train pairs
2.000	
1.885	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.666	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
1.559	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.480	OUT DEF: ^.size=^.size / 3
1.407	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.256	OUT OBJECT at ^.layer_00: ^.layer_00.shape at (?,?)
1.183	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.117	OUT OBJECT at ^.layer_011: ^.layer_01.shape at (?,?)
1.090	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.057	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
1.028	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.998	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.974	OUT DEF: ^.layer_00.pos.j='0
0.954	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.934	IN  DEF: ^.layer_0111.shape.color=grey
0.915	IN  DEF: ^.layer_01111.shape.color=grey
0.897	OUT DEF: ^.layer_0.pos.j=area(^.layer_01.shape) - 2
0.878	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.i
0.858	OUT DEF: ^.layer_01.shape.size.j=1
0.839	OUT DEF: ^.layer_011.pos.i=area(^.layer_00.shape) - 2
0.822	OUT DEF: ^.layer_01.pos.j=area(^.layer_01.shape) - ^.layer_01.shape.size.j
0.804	OUT DEF: ^.layer_01.pos.i=area(^.layer_01.shape) - ^.layer_01.shape.size.j
0.789	OUT DEF: ^.color=black
0.774	OUT DEF: ^.layer_00.pos.i=area(^.layer_01.shape) - ^.layer_01.shape.size.i
0.763	IN  DEF: ^.layer_0.shape.mask=Full
0.751	IN  DEF: ^.layer_01.shape.mask=Full
0.743	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size / 3 and color black and layers
  _00: ^.layer_00.shape at (area(^.layer_01.shape) - ^.layer_01.shape.size.i,'0)
  _0: ^.layer_0.shape at (?,area(^.layer_01.shape) - 2)
  _01: a rectangle with size (^.layer_0.shape.size.i,1) and color ^.layer_011.shape.color and mask ^.layer_01.shape.mask at (area(^.layer_01.shape) - ^.layer_01.shape.size.j,area(^.layer_01.shape) - ^.layer_01.shape.size.j)
  _011: ^.layer_01.shape at (area(^.layer_00.shape) - 2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color grey at (?,?)
  _01111: a point with color grey at (?,?)

DL input  with Mi: L = 175.5 + 4925.0 = 5100.5
DL output with Mo: L = 297.0 + 468.6 = 765.7
DL input+output M: L = 472.5 + 5393.6 = 5866.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
  _011: a point with color grey at (2,3)
  _0111: a point with color grey at (2,7)
  _01111: a point with color grey at (8,5)
diff: 
delta:
   (141.7 bits)
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,2) and color pink and mask Full at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color orange and mask Full at (0,2)
diff: 
delta:
   (7.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,2) and color pink and mask Full at (1,6)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color orange and mask Full at (7,6)
  _011: a point with color grey at (2,3)
  _0111: a point with color grey at (2,7)
  _01111: a point with color grey at (8,5)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (8,6)
  _0: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,4)
  _011: a point with color pink at (2,1)
  _0111: a point with color grey at (3,2)
  _01111: a point with color grey at (7,7)
diff: 
delta: (3,5)=5# (9,2)=5#
   (197.5 bits)
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _0: a rectangle with size (1,2) and color red and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _011: a rectangle with size (1,3) and color orange and mask Full at (1,0)
diff: 
delta: (1,1)=5#
   (31.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,3) and color green and mask Full at (8,6)
  _0: a rectangle with size (1,2) and color red and mask Full at (8,2)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,4)
  _011: a point with color pink at (2,1)
  _0111: a point with color grey at (3,2)
  _01111: a point with color grey at (7,7)
diff: 
delta: (3,5)=5# (9,2)=5#
! 1 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,3) and color blue and mask .xx|x.. at (2,0)
  _0: a rectangle with size (1,2) and color brown and mask Full at (9,6)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (4,5)
  _01111: a point with color grey at (8,7)
diff: 
delta:
   (153.3 bits)
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (2,3) and color blue and mask .xx|x.. at (0,0)
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (1,2)
diff: 
delta:
   (7.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (2,3) and color blue and mask .xx|x.. at (2,0)
  _0: a rectangle with size (1,2) and color brown and mask Full at (9,6)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (4,5)
  _01111: a point with color grey at (8,7)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 137eaa0f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (3,2) and color brown and mask .x|x.|x. at (1,7)
  _0: a rectangle with size (1,2) and color red and mask Full at (10,3)
  _01: a rectangle with size (1,1) and color grey and mask Full at (2,8)
  _011: a point with color yellow at (3,0)
  _0111: a point with color grey at (4,1)
  _01111: a point with color grey at (7,6)
diff: 
delta: (4,2)=4  (6,7)=8  (9,3)=5#
! 6 wrong pixels (generated / expected)

TEST 137eaa0f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.8 sec (21.8 sec/task)
bits-train-error = 468.6 bits (468.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-378] Checking task 150deff5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14717.5 = 14733.1
DL output with Mo: L = 15.6 + 14717.5 = 14733.1
DL input+output M: L = 31.2 + 29435.0 = 29466.2

# learning a model for train pairs
2.000	
1.194	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.850	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.686	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.535	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.495	OUT DEF: ^.size=^.size
0.482	OUT DEF: ^.layer_0111.shape.size.i=3
0.460	OUT DEF: ^.layer_01.pos=^.layer_0.pos
0.448	IN  DEF: ^.layer_0.shape.color=grey
0.437	OUT DEF: ^.layer_0111.shape.color=red
0.426	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.j
0.416	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.pos.j + 1
0.406	OUT DEF: ^.layer_011.shape.size.j=^.layer_0.pos.j + 1
0.395	OUT DEF: ^.layer_011.pos.j=bottom(^.layer_0) - 1
0.389	OUT DEF: ^.layer_011.shape.mask=Full
0.382	OUT DEF: ^.layer_0111.shape.size.j=1
0.375	OUT DEF: ^.layer_0111.shape.mask=Full
0.370	IN  DEF: ^.color=black
0.365	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.pos.j + 1) and color ? and mask ? at (^.layer_0.pos.j,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _011: a rectangle with size (?,^.layer_0.pos.j + 1) and color ? and mask Full at (?,bottom(^.layer_0) - 1)
  _0111: a rectangle with size (3,1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 2571.0 = 2621.3
DL output with Mo: L = 206.3 + 2550.3 = 2756.6
DL input+output M: L = 256.5 + 5121.3 = 5377.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xx....|xxxxx.|.xxx..|.xxxxx|.x..xx|...xxx at (1,2)
diff: 
delta:
   (90.4 bits)
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (5,6) and color cyan and mask xx....|xx....|..xx..|..xxxx|....xx at (1,2)
  _011: a rectangle with size (1,3) and color red and mask Full at (6,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (3,3)
diff: 
delta:
   (101.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xx....|xxxxx.|.xxx..|.xxxxx|.x..xx|...xxx at (1,2)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN 150deff5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|xxxxxx|..x..x|...xxx|...xxx|...x.. at (1,1)
diff: 
delta:
   (89.5 bits)
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask x.|x.|x.|.x|.x|.x at (1,3)
  _01: a rectangle with size (2,5) and color cyan and mask Full (and Border) at (1,1)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (4,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (1,6)
diff: 
delta:
   (87.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|xxxxxx|..x..x|...xxx|...xxx|...x.. at (1,1)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 150deff5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|...xx|..x..|..xxx|..xxx at (1,1)
diff: 
delta:
   (77.2 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (1,4)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _0111: a rectangle with size (3,1) and color red and mask Full at (3,3)
diff: 
delta:
   (65.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|...xx|..x..|..xxx|..xxx at (1,1)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 150deff5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask .xx.xxx|.xx..x.|xxxxxx.|...xxx.|..xxx..|....xx.|....xx. at (0,1)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TEST 150deff5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 2550.3 bits (2550.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-377] Checking task 178fcbfb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3772.6 = 3788.2
DL output with Mo: L = 15.6 + 26500.7 = 26516.3
DL input+output M: L = 31.2 + 30273.3 = 30304.6

# learning a model for train pairs
2.000	
1.776	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.552	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.344	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.247	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.184	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.119	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.051	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.006	IN  DEF: ^.layer_01.shape.color=green
0.962	IN  DEF: ^.layer_011.shape.color=red
0.918	IN  DEF: ^.layer_0.shape.color=blue
0.884	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.861	OUT DEF: ^.size=^.size
0.841	IN  DEF: ^.color=black
0.831	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.820	OUT DEF: ^.layer_01.shape.size.j=^.size.j
0.814	OUT DEF: ^.layer_0.pos.j='0
0.808	OUT DEF: ^.layer_01.pos.j='0
0.801	OUT DEF: ^.layer_0111.shape.color=red
0.795	OUT DEF: ^.layer_01111.shape.color=red
0.789	OUT DEF: ^.layer_0111.pos.i='0
0.783	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.776	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.770	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.763	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.758	OUT DEF: ^.layer_0111.pos.j=^.layer_011.pos.j
0.752	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j - 1
0.746	OUT DEF: ^.layer_011.pos.i=^.layer_01.pos.i + 3
0.742	OUT DEF: ^.layer_0.shape.size.i=1
0.739	OUT DEF: ^.layer_0.shape.mask=Full
0.735	OUT DEF: ^.layer_01.shape.size.i=1
0.731	OUT DEF: ^.layer_01.shape.mask=Full
0.727	OUT DEF: ^.layer_011.shape.mask=Full
0.724	OUT DEF: ^.layer_0111.shape.size.j=1
0.720	OUT DEF: ^.layer_0111.shape.mask=Full
0.716	OUT DEF: ^.layer_01111.shape.size.j=1
0.712	OUT DEF: ^.layer_01111.shape.mask=Full
0.709	OUT DEF: ^.layer_011.shape.size.i=min(^.layer_0.pos.j, ^.layer_011.pos.j)
0.707	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.j) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,'0)
  _01: a rectangle with size (1,^.size.j) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,'0)
  _011: a rectangle with size (min(^.layer_0.pos.j, ^.layer_011.pos.j),?) and color ? and mask Full at (^.layer_01.pos.i + 3,^.layer_0.pos.j - 1)
  _0111: a rectangle with size (?,1) and color red and mask Full at ('0,^.layer_011.pos.j)
  _01111: a rectangle with size (?,1) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color red at (?,?)

DL input  with Mi: L = 82.5 + 2387.6 = 2470.1
DL output with Mo: L = 281.2 + 1164.1 = 1445.3
DL input+output M: L = 363.7 + 3551.7 = 3915.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,3)
  _01: a point with color green at (4,7)
  _011: a point with color red at (2,2)
diff: 
delta:
   (52.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (6,0)
  _01: a rectangle with size (1,9) and color green and mask Full at (4,0)
  _011: a rectangle with size (2,1) and color red and mask Full at (7,2)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,2)
  _01111: a rectangle with size (1,1) and color red and mask Full at (5,2)
diff: 
delta:
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color blue at (6,3)
  _01: a point with color green at (4,7)
  _011: a point with color red at (2,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color red at (2,2)
  _01: a point with color green at (4,7)
  _011: a point with color blue at (6,3)
diff:   ^.layer_011.shape.color  ^.layer_0.shape.color
delta:
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color green at (4,7)
  _01: a point with color blue at (6,3)
  _011: a point with color red at (2,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 7 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a point with color blue at (6,1)
  _01: a point with color green at (1,1)
  _011: a point with color red at (7,5)
diff: 
delta: (4,3)=3 
   (78.8 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (6,0)
  _01: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _011: a rectangle with size (1,8) and color green and mask Full at (4,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,5)
  _01111: a rectangle with size (8,1) and color red and mask Full at (2,5)
diff: 
delta:
   (38.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a point with color blue at (6,1)
  _01: a point with color green at (1,1)
  _011: a point with color red at (7,5)
diff: 
delta: (4,3)=3 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a point with color blue at (6,1)
  _01: a point with color green at (4,3)
  _011: a point with color red at (7,5)
diff: 
delta: (1,1)=3 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,3)
  _011: a point with color red at (7,5)
diff:   ^.layer_0.shape.color
delta: (6,1)=1 
! 17 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (3,8)
  _011: a point with color red at (8,3)
diff: 
delta: (6,2)=3  (9,9)=2 
   (107.7 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,11) and color green and mask Full at (6,0)
  _0111: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _01111: a rectangle with size (10,1) and color red and mask Full at (0,9)
diff: 
delta:
   (47.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (3,8)
  _011: a point with color red at (8,3)
diff: 
delta: (6,2)=3  (9,9)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (3,8)
  _011: a point with color red at (9,9)
diff: 
delta: (6,2)=3  (8,3)=2 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,11) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (6,2)
  _011: a point with color red at (8,3)
diff: 
delta: (3,8)=3  (9,9)=2 
! 27 wrong pixels (generated / expected)

TRAIN 178fcbfb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color blue at (7,1)
  _01: a point with color green at (0,3)
  _011: a point with color red at (1,9)
diff: 
delta: (3,5)=3  (5,4)=2  (9,8)=1 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,11) and color black and layers
  _0: a point with color blue at (7,1)
  _01: a point with color green at (0,3)
  _011: a point with color red at (5,4)
diff: 
delta: (1,9)=2  (3,5)=3  (9,8)=1 
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,11) and color black and layers
  _0: a point with color blue at (7,1)
  _01: a point with color green at (3,5)
  _011: a point with color red at (1,9)
diff: 
delta: (0,3)=3  (5,4)=2  (9,8)=1 
! 40 wrong pixels (generated / expected)

TEST 178fcbfb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 22.8 sec (22.8 sec/task)
bits-train-error = 1164.1 bits (1164.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-376] Checking task 1a07d186.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 26311.4 = 26327.0
DL output with Mo: L = 15.6 + 25257.5 = 25273.2
DL input+output M: L = 31.2 + 51569.0 = 51600.2

# learning a model for train pairs
2.000	
1.513	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.735	OUT OBJECT at ^.layer_01: ^.layer_0
0.441	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.414	OUT DEF: ^.size=^.size
0.404	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.393	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.384	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.375	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
0.365	IN  OBJECT at ^.layer_001: a point with color ? at (?,?)
0.352	OUT DEF: ^.layer_011.pos=max(^.layer_01.pos, ^.layer_011.pos) + translationOnto(^.layer_011, ^.layer_0)
0.345	OUT DEF: ^.layer_011.shape=^.layer_011.shape
0.338	OUT DEF: ^.layer_0111.shape=^.layer_011.shape
0.332	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.326	OUT DEF: ^.layer_0.pos.j=min(^.layer_01.pos.j, ^.layer_011.pos.j)
0.322	IN  DEF: ^.layer_0.shape.mask=Full
0.318	IN  DEF: ^.layer_01.shape.mask=Full
0.315	OUT DEF: ^.color=black
0.313	IN  DEF: ^.color=black
0.312	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask ? at (?,min(^.layer_01.pos.j, ^.layer_011.pos.j))
  _01: ^.layer_0
  _011: ^.layer_011.shape at max(^.layer_01.pos, ^.layer_011.pos) + translationOnto(^.layer_011, ^.layer_0)
  _0111: ^.layer_011.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _001: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 139.1 + 5888.7 = 6027.8
DL output with Mo: L = 188.2 + 1915.4 = 2103.6
DL input+output M: L = 327.4 + 7804.0 = 8131.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _00: a point with color yellow at (3,1)
  _001: a point with color green at (3,6)
  _0: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
  _01: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _011: a point with color yellow at (7,9)
diff: 
delta: (10,7)=2  (11,16)=3 
   (203.5 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _01: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
  _011: a point with color yellow at (7,11)
  _0111: a point with color yellow at (3,11)
diff: 
delta: (3,4)=3  (11,4)=3 
   (91.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _00: a point with color yellow at (3,1)
  _001: a point with color green at (3,6)
  _0: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _01: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
  _011: a point with color yellow at (7,9)
diff: 
delta: (10,7)=2  (11,16)=3 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,19) and color black and layers
  _00: a point with color yellow at (3,1)
  _001: a point with color green at (3,6)
  _0: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _01: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
  _011: a point with color red at (10,7)
diff: 
delta: (7,9)=4  (11,16)=3 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,19) and color black and layers
  _00: a point with color yellow at (3,1)
  _001: a point with color green at (3,6)
  _0: a rectangle with size (18,1) and color yellow and mask Full at (0,12)
  _01: a rectangle with size (18,1) and color green and mask Full at (0,3)
  _011: a point with color yellow at (7,9)
diff: 
delta: (10,7)=2  (11,16)=3 
! 20 wrong pixels (generated / expected)

TRAIN 1a07d186.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _00: a point with color red at (0,3)
  _001: a point with color yellow at (1,9)
  _0: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _01: a rectangle with size (1,14) and color red and mask Full at (3,0)
  _011: a point with color blue at (5,10)
diff: 
delta: (7,6)=2  (13,2)=1  (13,10)=2 
   (222.5 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (3,14) and color red and mask ...x..........|xxxxxxxxxxxxxx|......x...x... at (2,0)
  _01: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _011: a point with color blue at (9,10)
  _0111: a point with color blue at (11,2)
diff: 
delta:
   (73.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _00: a point with color red at (0,3)
  _001: a point with color yellow at (1,9)
  _0: a rectangle with size (1,14) and color red and mask Full at (3,0)
  _01: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _011: a point with color blue at (5,10)
diff: 
delta: (7,6)=2  (13,2)=1  (13,10)=2 
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  _00: a point with color red at (0,3)
  _001: a point with color yellow at (1,9)
  _0: a rectangle with size (1,14) and color red and mask Full at (3,0)
  _01: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _011: a point with color red at (7,6)
diff: 
delta: (5,10)=1  (13,2)=1  (13,10)=2 
! 48 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color black and layers
  _00: a point with color red at (0,3)
  _001: a point with color yellow at (1,9)
  _0: a rectangle with size (1,14) and color blue and mask Full at (10,0)
  _01: a rectangle with size (1,14) and color red and mask Full at (3,0)
  _011: a point with color blue at (5,10)
diff: 
delta: (7,6)=2  (13,2)=1  (13,10)=2 
! 46 wrong pixels (generated / expected)

TRAIN 1a07d186.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _00: a point with color blue at (1,3)
  _001: a point with color cyan at (1,7)
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (8,11)
  _011: a point with color cyan at (12,3)
diff: 
delta: (13,12)=1 
   (162.9 bits)
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _011: a point with color cyan at (6,11)
  _0111: a point with color cyan at (4,7)
diff: 
delta:
   (27.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _00: a point with color blue at (1,3)
  _001: a point with color cyan at (1,7)
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (8,11)
  _011: a point with color cyan at (12,3)
diff: 
delta: (13,12)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,16) and color black and layers
  _00: a point with color blue at (1,3)
  _001: a point with color cyan at (1,7)
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (8,11)
  _011: a point with color blue at (13,12)
diff: 
delta: (12,3)=8 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,16) and color black and layers
  _00: a point with color blue at (1,3)
  _001: a point with color cyan at (1,7)
  _0: a rectangle with size (1,16) and color cyan and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (12,3)
  _011: a point with color cyan at (8,11)
diff: 
delta: (13,12)=1 
! 7 wrong pixels (generated / expected)

TRAIN 1a07d186.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,26) and color black and layers
  _00: a point with color red at (2,16)
  _001: a point with color cyan at (4,24)
  _0: a rectangle with size (19,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (19,1) and color green and mask Full at (0,11)
  _011: a point with color cyan at (5,9)
diff: 
delta: (0,20)=4  (1,20)=4  (2,20)=4  (3,20)=4  (4,20)=4  (5,20)=4  (6,20)=4  (7,6)=4  (7,20)=4  (8,20)=4  (9,13)=3  (9,20)=4  (10,1)=2  (10,20)=4  (11,17)=8  (11,20)=4  (12,20)=4  (13,20)=4  (14,20)=4  (15,0)=8  (15,8)=3  (15,20)=4  (15,24)=4  (16,20)=4  (17,20)=4  (17,22)=3  (18,20)=4 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,26) and color black and layers
  _00: a point with color red at (2,16)
  _001: a point with color cyan at (4,24)
  _0: a rectangle with size (19,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (19,1) and color green and mask Full at (0,11)
  _011: a point with color yellow at (7,6)
diff: 
delta: (0,20)=4  (1,20)=4  (2,20)=4  (3,20)=4  (4,20)=4  (5,9)=8  (5,20)=4  (6,20)=4  (7,20)=4  (8,20)=4  (9,13)=3  (9,20)=4  (10,1)=2  (10,20)=4  (11,17)=8  (11,20)=4  (12,20)=4  (13,20)=4  (14,20)=4  (15,0)=8  (15,8)=3  (15,20)=4  (15,24)=4  (16,20)=4  (17,20)=4  (17,22)=3  (18,20)=4 
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,26) and color black and layers
  _00: a point with color red at (2,16)
  _001: a point with color cyan at (4,24)
  _0: a rectangle with size (19,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (19,1) and color yellow and mask Full at (0,20)
  _011: a point with color cyan at (5,9)
diff: 
delta: (0,11)=3  (1,11)=3  (2,11)=3  (3,11)=3  (4,11)=3  (5,11)=3  (6,11)=3  (7,6)=4  (7,11)=3  (8,11)=3  (9,11)=3  (9,13)=3  (10,1)=2  (10,11)=3  (11,11)=3  (11,17)=8  (12,11)=3  (13,11)=3  (14,11)=3  (15,0)=8  (15,8)=3  (15,11)=3  (15,24)=4  (16,11)=3  (17,11)=3  (17,22)=3  (18,11)=3 
! 49 wrong pixels (generated / expected)

TEST 1a07d186.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.8 sec (17.8 sec/task)
bits-train-error = 1915.4 bits (1915.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-375] Checking task 1b2d62fb.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21926.0 = 21941.6
DL output with Mo: L = 15.6 + 5042.0 = 5057.7
DL input+output M: L = 31.2 + 26968.0 = 26999.2

# learning a model for train pairs
2.000	
1.598	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.303	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.101	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.963	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size)
0.841	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.785	OUT DEF: ^.layer_0.shape.color=cyan
0.731	OUT DEF: ^.layer_0.shape.size.j=^.layer_011.shape.size.j
0.697	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.j / 2
0.673	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) and color black and layers
  _0: a rectangle with size (?,^.layer_011.shape.size.j) and color cyan and mask ? at (?,^.layer_01.shape.size.j / 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 8249.7 = 8363.0
DL output with Mo: L = 115.0 + 1361.1 = 1476.1
DL input+output M: L = 228.3 + 9610.8 = 9839.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
  _011: a rectangle with size (3,2) and color black and mask .x|.x|xx at (1,5)
diff: 
delta:
   (145.6 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,2) and color black and mask .x|.x|xx at (1,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
  _01: a rectangle with size (3,2) and color black and mask .x|.x|xx at (1,5)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (5,3) and color black and mask x..|xx.|.x.|xxx|x.. at (0,0)
  _011: a rectangle with size (3,2) and color black and mask .x|.x|xx at (1,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
  _011: a rectangle with size (1,2) and color black and mask Full at (0,5)
diff: 
delta:
   (134.1 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,2) and color black and mask Full at (0,5)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
  _01: a rectangle with size (1,2) and color black and mask Full at (0,5)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (5,3) and color black and mask xxx|.x.|x..|xxx|x.. at (0,0)
  _011: a rectangle with size (1,2) and color black and mask Full at (0,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
diff: 
delta:
   (151.4 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask .x.|..x|.xx|x..|x.. at (0,0)
diff: 
delta:
   (33.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask x.x|.x.|x..|.xx|.x. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (5,3) and color brown and mask x..|x..|x..|.xx|..x at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
diff: 
delta: (0,6)=9# (4,4)=9#
   (193.8 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (3,0)
diff: 
delta: (1,1)=8  (1,2)=8 
   (68.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,6)=9# (4,4)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (5,3) and color brown and mask .xx|x..|xxx|.x.|x.. at (0,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask x..|x..|xxx at (0,4)
diff: 
delta: (0,6)=9# (4,4)=9#
! 8 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color black and mask xx.|.xx|xx. at (2,4)
  _011: a rectangle with size (1,2) and color black and mask Full at (3,1)
diff: 
delta: (0,0)=0  (0,5)=0  (1,1)=0 
   (200.1 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (3,3) and color black and mask xx.|.xx|xx. at (2,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,2) and color black and mask Full at (3,1)
diff: 
delta: (0,0)=0  (0,5)=0  (1,1)=0 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (3,3) and color black and mask xx.|.xx|xx. at (2,4)
  _01: a rectangle with size (1,2) and color black and mask Full at (3,1)
  _011: a rectangle with size (5,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=0  (0,5)=0  (1,1)=0 
! size mismatch, 3x3 instead of 5x3
>> Trial 3
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color black and mask xx.|.xx|xx. at (2,4)
  _011: a rectangle with size (1,2) and color black and mask Full at (3,1)
diff: 
delta: (0,0)=0  (0,5)=0  (1,1)=0 
! 6 wrong pixels (generated / expected)

TRAIN 1b2d62fb.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color brown and layers
  _0: a rectangle with size (5,3) and color black and mask x.x|xxx|x.x|.x.|x.. at (0,4)
  _01: a rectangle with size (5,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color black and mask Full at (0,2)
diff: 
delta: (1,0)=0  (2,2)=0  (4,0)=0 
! 4 wrong pixels (generated / expected)

TEST 1b2d62fb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.5 sec (7.5 sec/task)
bits-train-error = 1361.1 bits (1361.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-374] Checking task 1b60fb0c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 23374.7 = 23390.3
DL output with Mo: L = 15.6 + 30368.4 = 30384.1
DL input+output M: L = 31.2 + 53743.2 = 53774.4

# learning a model for train pairs
2.000	
1.159	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.418	OUT OBJECT at ^.layer_0: ^.layer_0
0.236	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.216	OUT DEF: ^.size=^.size
0.209	IN  DEF: ^.layer_0.shape.color=blue
0.203	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.j - 3
0.197	OUT DEF: ^.layer_01.shape.color=red
0.192	OUT DEF: ^.layer_01.pos.j=1
0.187	OUT DEF: ^.layer_01.pos.i=^.size.i - ^.layer_0.shape.size.j
0.184	IN  DEF: ^.color=black
0.182	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.shape.size.j - 3) and color red and mask ? at (^.size.i - ^.layer_0.shape.size.j,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 3429.7 = 3480.0
DL output with Mo: L = 107.2 + 892.5 = 999.6
DL input+output M: L = 157.4 + 4322.1 = 4479.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
diff: 
delta:
   (104.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
  _01: a rectangle with size (3,3) and color red and mask xx.|xxx|x.. at (4,1)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color blue and mask xxx...|.xx...|.x...x|.xxxxx|.xx.xx|..x...|.xx...|.xxx.. at (1,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
diff: 
delta:
   (118.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
  _01: a rectangle with size (5,4) and color red and mask xx..|xx..|xxxx|xx..|xx.. at (3,1)
diff: 
delta:
   (33.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|xxxxx..|..x..xx|..x..xx|..xxxxx|..x..xx|..x..xx|xxxxx..|xxxxx.. at (1,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
diff: 
delta:
   (120.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
  _01: a rectangle with size (5,4) and color red and mask x...|x.x.|xxxx|x.x.|x... at (3,1)
diff: 
delta:
   (34.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,7) and color blue and mask xxxxx..|..x....|.xxx..x|..x.x.x|..xxxxx|..x.x.x|.xxx..x|..x....|xxxxx.. at (1,3)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN 1b60fb0c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,8) and color blue and mask ..x.....|xxxxx...|..xx..x.|..x...x.|..xxxxxx|..xx.xx.|...x..x.|..xx....|.xxxxx..|...x.... at (0,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 1b60fb0c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 892.5 bits (892.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-373] Checking task 1bfc4729.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1507.1 = 1522.7
DL output with Mo: L = 15.6 + 26570.2 = 26585.8
DL input+output M: L = 31.2 + 28077.2 = 28108.5

# learning a model for train pairs
2.000	
1.582	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.158	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.052	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
0.934	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.902	IN  DEF: ^.color=black
0.886	OUT DEF: ^.size=^.size
0.878	OUT DEF: ^.layer_0.pos='(0,0)
0.870	OUT DEF: ^.layer_01.pos=^.layer_01.pos - corner(^.layer_0.pos, ^.layer_01.pos)
0.829	OUT DEF: ^.layer_0.shape.mask=xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x
0.788	OUT DEF: ^.layer_01.shape.mask=x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx
0.781	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.774	OUT DEF: ^.layer_01.shape.size.j=^.size.j
0.768	OUT DEF: ^.layer_0.shape.size.i=^.size.i / 2
0.763	OUT DEF: ^.layer_01.shape.size.i=^.size.i / 2
0.759	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.754	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.753	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i / 2,^.size.j) and color ^.layer_0.shape.color and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at '(0,0)
  _01: a rectangle with size (^.size.i / 2,^.size.j) and color ^.layer_01.shape.color and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at ^.layer_01.pos - corner(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 1075.9 = 1131.7
DL output with Mo: L = 249.0 + 0.0 = 249.0
DL input+output M: L = 304.8 + 1075.9 = 1380.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (2,2)
  _01: a point with color orange at (7,7)
diff: 
delta:
   (53.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,10) and color pink and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at (0,0)
  _01: a rectangle with size (5,10) and color orange and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at (5,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (2,2)
  _01: a point with color orange at (7,7)
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,6)
  _01: a point with color yellow at (7,5)
diff: 
delta:
   (53.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,10) and color blue and mask xxxxxxxxxx|x........x|xxxxxxxxxx|x........x|x........x at (0,0)
  _01: a rectangle with size (5,10) and color yellow and mask x........x|x........x|xxxxxxxxxx|x........x|xxxxxxxxxx at (5,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,6)
  _01: a point with color yellow at (7,5)
diff: 
delta:
correct output grid

TRAIN 1bfc4729.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (2,4)
  _01: a point with color cyan at (7,6)
diff: 
delta:
correct output grid

TEST 1bfc4729.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-372] Checking task 1c786137.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 186579.5 = 186595.2
DL output with Mo: L = 15.6 + 23967.9 = 23983.6
DL input+output M: L = 31.2 + 210547.5 = 210578.7

# learning a model for train pairs
2.000	
1.822	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.698	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.626	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.559	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.499	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.464	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 152091.0 = 152172.2
DL output with Mo: L = 145.1 + 15413.4 = 15558.5
DL input+output M: L = 226.3 + 167504.3 = 167730.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,21) and color black and layers
  _0: a rectangle with size (8,10) and color red and mask Border at (3,4)
  _01: a rectangle with size (10,6) and color green and mask xxx...|...xx.|.....x|.x...x|.xxxx.|x.xx..|.x.xx.|x.x..x|...xx.|....xx at (11,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,9)=3  (5,11)=3  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,8)=3  (6,9)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,10)=3  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,10)=3  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,9)=3  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,1)=1  (13,2)=5# (13,3)=1  (13,4)=8  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,0)=1  (14,2)=1  (14,4)=1  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,1)=1  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,2)=8  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,1)=8  (18,4)=1  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,0)=1  (19,1)=5# (19,2)=1  (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,0)=1  (20,1)=3  (20,3)=1  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,1)=1  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,2)=1  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
   (8423.7 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,5) and color green and mask .xxxx|.x.x.|xx...|..x..|..x..|.x... at (0,3)
  _01: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,0)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (5,6)
diff: 
delta: (0,2)=8  (1,0)=1  (1,7)=1  (2,6)=8  (2,7)=1  (3,2)=5# (3,3)=1  (4,0)=5# (4,3)=0  (5,0)=5# (5,2)=8 
   (460.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,21) and color black and layers
  _0: a rectangle with size (8,10) and color red and mask Border at (3,4)
  _01: a rectangle with size (10,6) and color green and mask xxx...|...xx.|.....x|.x...x|.xxxx.|x.xx..|.x.xx.|x.x..x|...xx.|....xx at (11,0)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=8  (0,4)=3  (0,5)=8  (0,6)=8  (0,8)=8  (0,10)=3  (0,11)=1  (0,12)=1  (0,13)=1  (0,14)=8  (0,15)=8  (0,17)=3  (0,18)=8  (0,19)=3  (0,20)=8  (1,0)=3  (1,1)=3  (1,4)=5# (1,5)=3  (1,7)=3  (1,8)=8  (1,10)=3  (1,11)=3  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=8  (1,16)=1  (1,17)=3  (1,18)=1  (1,19)=8  (1,20)=3  (2,0)=1  (2,1)=5# (2,2)=1  (2,3)=3  (2,4)=1  (2,5)=1  (2,6)=8  (2,7)=3  (2,10)=3  (2,11)=8  (2,12)=3  (2,14)=1  (2,16)=8  (2,17)=8  (2,18)=5# (2,19)=5# (3,0)=5# (3,1)=3  (3,3)=8  (3,14)=1  (3,15)=1  (3,17)=3  (3,20)=3  (4,1)=1  (4,2)=3  (4,3)=3  (4,7)=8  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (4,16)=8  (4,18)=3  (4,19)=3  (4,20)=1  (5,0)=8  (5,3)=8  (5,5)=1  (5,9)=3  (5,11)=3  (5,12)=1  (5,17)=8  (5,19)=1  (6,0)=1  (6,1)=1  (6,2)=5# (6,5)=3  (6,6)=3  (6,8)=3  (6,9)=3  (6,11)=8  (6,12)=1  (6,14)=1  (6,16)=8  (6,17)=3  (6,18)=1  (7,2)=8  (7,3)=8  (7,5)=3  (7,6)=3  (7,7)=5# (7,8)=1  (7,10)=3  (7,14)=1  (7,16)=5# (7,18)=3  (7,20)=1  (8,1)=1  (8,5)=5# (8,6)=1  (8,7)=3  (8,9)=1  (8,10)=3  (8,11)=1  (8,12)=1  (8,14)=8  (8,15)=8  (8,17)=5# (8,19)=3  (8,20)=8  (9,0)=8  (9,1)=3  (9,2)=3  (9,3)=3  (9,5)=5# (9,7)=8  (9,9)=3  (9,11)=8  (9,12)=8  (9,14)=3  (9,15)=3  (9,18)=3  (9,19)=3  (9,20)=8  (10,0)=1  (10,1)=1  (10,2)=1  (10,3)=5# (10,16)=8  (10,17)=1  (10,18)=3  (11,4)=8  (11,5)=8  (11,7)=8  (11,8)=3  (11,10)=8  (11,11)=8  (11,12)=3  (11,14)=3  (11,16)=8  (11,17)=1  (11,19)=1  (12,0)=8  (12,6)=8  (12,7)=3  (12,9)=3  (12,10)=3  (12,12)=1  (12,13)=3  (12,14)=3  (12,15)=1  (12,16)=8  (12,19)=3  (12,20)=8  (13,0)=5# (13,1)=1  (13,2)=5# (13,3)=1  (13,4)=8  (13,6)=5# (13,8)=8  (13,9)=3  (13,10)=3  (13,11)=8  (13,12)=1  (13,13)=8  (13,17)=3  (13,20)=5# (14,0)=1  (14,2)=1  (14,4)=1  (14,6)=1  (14,8)=5# (14,10)=3  (14,11)=3  (14,12)=8  (14,14)=8  (14,15)=3  (14,16)=8  (14,17)=8  (14,18)=8  (15,0)=5# (15,5)=8  (15,6)=8  (15,8)=1  (15,9)=1  (15,11)=8  (15,12)=5# (15,13)=1  (15,14)=3  (15,17)=8  (15,18)=3  (15,19)=1  (16,1)=1  (16,4)=8  (16,6)=3  (16,7)=8  (16,9)=3  (16,10)=1  (16,11)=8  (16,12)=3  (16,13)=1  (16,14)=8  (16,15)=1  (16,16)=1  (16,17)=3  (16,18)=8  (16,19)=1  (17,2)=8  (17,6)=1  (17,7)=3  (17,9)=3  (17,10)=8  (17,11)=5# (17,12)=3  (17,14)=3  (17,15)=1  (17,17)=3  (17,20)=8  (18,1)=8  (18,4)=1  (18,6)=8  (18,8)=1  (18,9)=3  (18,10)=8  (18,11)=1  (18,13)=1  (18,14)=1  (18,15)=8  (18,16)=5# (18,17)=8  (18,18)=3  (18,19)=1  (18,20)=1  (19,0)=1  (19,1)=5# (19,2)=1  (19,5)=1  (19,6)=5# (19,7)=3  (19,8)=3  (19,9)=1  (19,10)=1  (19,11)=3  (19,12)=5# (19,14)=8  (19,15)=8  (19,16)=1  (19,17)=1  (19,18)=8  (19,20)=8  (20,0)=1  (20,1)=3  (20,3)=1  (20,6)=1  (20,9)=1  (20,10)=5# (20,11)=8  (20,12)=3  (20,13)=5# (20,14)=3  (20,15)=8  (20,17)=3  (20,18)=8  (20,19)=3  (20,20)=8  (21,0)=3  (21,1)=1  (21,2)=3  (21,4)=8  (21,6)=8  (21,9)=1  (21,10)=3  (21,11)=1  (21,12)=1  (21,14)=8  (21,15)=8  (21,16)=5# (21,17)=1  (21,19)=1  (21,20)=8  (22,0)=3  (22,1)=3  (22,2)=1  (22,4)=3  (22,5)=1  (22,6)=8  (22,7)=8  (22,10)=5# (22,11)=1  (22,12)=8  (22,13)=8  (22,14)=1  (22,15)=3  (22,16)=3  (22,17)=5# (22,18)=3  (22,19)=5# (22,20)=8 
! size mismatch, 10x10 instead of 6x8

TRAIN 1c786137.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (7,5) and color yellow and mask Border at (6,2)
  _01: a rectangle with size (5,10) and color pink and mask xx...x.xxx|xx....xxx.|..x.xx....|...x.x....|.xx....... at (0,3)
diff: 
delta: (0,1)=6  (0,2)=9# (0,6)=6  (0,7)=3  (0,9)=9# (0,13)=9# (0,14)=9# (1,0)=9# (1,1)=9# (1,7)=9# (1,8)=3  (1,12)=9# (1,13)=9# (1,15)=6  (2,0)=6  (2,2)=9# (2,10)=3  (2,13)=6  (3,0)=9# (3,1)=6  (3,2)=6  (3,3)=9# (3,4)=9# (3,5)=9# (3,7)=3  (3,9)=9# (3,10)=9# (3,11)=6  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=6  (4,0)=6  (4,1)=6  (4,6)=9# (4,9)=3  (4,15)=9# (5,0)=9# (5,1)=9# (5,2)=6  (5,5)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,1)=6  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
   (2660.1 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (2,0)
  _011: a rectangle with size (1,3) and color brown and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color brown and mask Full at (3,0)
diff: 
delta: (4,0)=6  (4,1)=3  (4,2)=9#
   (198.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (7,5) and color yellow and mask Border at (6,2)
  _01: a rectangle with size (5,10) and color pink and mask xx...x.xxx|xx....xxx.|..x.xx....|...x.x....|.xx....... at (0,3)
diff: 
delta: (0,1)=6  (0,2)=9# (0,6)=6  (0,7)=3  (0,9)=9# (0,13)=9# (0,14)=9# (1,0)=9# (1,1)=9# (1,7)=9# (1,8)=3  (1,12)=9# (1,13)=9# (1,15)=6  (2,0)=6  (2,2)=9# (2,10)=3  (2,13)=6  (3,0)=9# (3,1)=6  (3,2)=6  (3,3)=9# (3,4)=9# (3,5)=9# (3,7)=3  (3,9)=9# (3,10)=9# (3,11)=6  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=6  (4,0)=6  (4,1)=6  (4,6)=9# (4,9)=3  (4,15)=9# (5,0)=9# (5,1)=9# (5,2)=6  (5,5)=9# (5,8)=3  (5,9)=9# (5,10)=3  (5,14)=9# (6,0)=3  (6,1)=6  (6,7)=6  (6,11)=9# (6,15)=9# (7,0)=9# (7,3)=3  (7,4)=3  (7,9)=6  (7,12)=9# (7,13)=6  (7,14)=9# (7,15)=3  (8,0)=9# (8,3)=9# (8,4)=3  (8,5)=9# (8,7)=9# (8,10)=3  (8,11)=9# (8,14)=9# (8,15)=3  (9,0)=6  (9,1)=9# (9,3)=6  (9,4)=6  (9,7)=3  (9,8)=9# (9,9)=6  (9,11)=6  (9,13)=9# (9,14)=3  (10,0)=3  (10,1)=3  (10,3)=9# (10,7)=9# (10,9)=6  (10,13)=6  (11,3)=6  (11,4)=3  (11,5)=9# (11,7)=6  (11,9)=9# (11,11)=9# (12,0)=9# (12,1)=9# (12,7)=9# (12,8)=9# (12,10)=9# (12,11)=9# (12,15)=6 
! size mismatch, 10x10 instead of 5x3

TRAIN 1c786137.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (10,12) and color cyan and mask Border at (2,3)
  _01: a rectangle with size (4,6) and color grey and mask .x....|..xx.x|x.x.x.|.x.x.. at (5,4)
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,7)=2  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,12)=5# (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,7)=2  (5,9)=3  (5,11)=5# (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,10)=3  (6,12)=5# (7,5)=2  (7,7)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,6)=2  (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,0)=2  (13,1)=5# (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=2  (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
   (4125.3 bits)
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask .x....|..xx.x|x.x.x.|.x.x.. at (2,0)
  _01: a rectangle with size (4,7) and color grey and mask x......|.xxxx..|.....x.|......x at (0,2)
  _011: a rectangle with size (5,4) and color red and mask .x..|.x.x|..x.|x.x.|.x.. at (3,0)
  _0111: a rectangle with size (1,4) and color red and mask Full at (4,6)
diff: 
delta: (0,3)=3  (0,4)=3  (0,5)=3  (0,6)=2  (0,7)=2  (0,8)=5# (1,0)=3  (1,7)=2  (1,9)=5# (2,0)=3  (2,3)=2  (2,5)=3  (2,8)=3  (3,0)=3  (3,6)=3  (5,8)=3  (5,9)=3  (6,1)=3  (6,3)=3  (6,6)=5# (6,8)=5# (7,0)=3  (7,2)=5# (7,4)=5# (7,8)=5# (7,9)=5#
   (882.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (10,12) and color cyan and mask Border at (2,3)
  _01: a rectangle with size (4,6) and color grey and mask .x....|..xx.x|x.x.x.|.x.x.. at (5,4)
diff: 
delta: (0,0)=2  (0,1)=5# (0,4)=3  (0,7)=2  (0,14)=3  (0,15)=5# (0,16)=3  (0,17)=5# (1,0)=2  (1,3)=2  (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=5# (1,12)=3  (1,14)=3  (1,15)=2  (1,17)=5# (2,1)=5# (2,2)=5# (2,15)=5# (3,0)=2  (3,2)=2  (3,6)=5# (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=2  (3,11)=2  (3,12)=5# (3,15)=2  (3,16)=5# (3,17)=5# (4,0)=5# (4,2)=3  (4,4)=3  (4,7)=5# (4,8)=5# (4,9)=5# (4,10)=5# (4,11)=2  (4,13)=5# (4,15)=3  (4,16)=3  (4,17)=3  (5,1)=5# (5,2)=5# (5,4)=3  (5,7)=2  (5,9)=3  (5,11)=5# (5,12)=3  (5,16)=2  (5,17)=5# (6,0)=5# (6,1)=2  (6,2)=2  (6,4)=3  (6,5)=2  (6,10)=3  (6,12)=5# (7,5)=2  (7,7)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,15)=2  (7,17)=5# (8,0)=5# (8,2)=5# (8,6)=2  (8,12)=3  (8,13)=3  (8,17)=5# (9,0)=3  (9,4)=2  (9,5)=3  (9,6)=2  (9,7)=3  (9,10)=5# (9,12)=5# (9,15)=3  (9,16)=2  (10,0)=3  (10,1)=5# (10,4)=3  (10,5)=2  (10,6)=5# (10,8)=5# (10,12)=5# (10,13)=5# (10,17)=2  (11,0)=3  (11,1)=3  (11,16)=2  (12,0)=5# (12,3)=3  (12,5)=3  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=5# (12,15)=5# (13,0)=2  (13,1)=5# (13,2)=2  (13,3)=5# (13,4)=2  (13,5)=2  (13,9)=5# (13,10)=2  (13,12)=2  (13,14)=3  (13,16)=3  (14,1)=2  (14,2)=2  (14,3)=2  (14,4)=2  (14,7)=2  (14,9)=2  (14,10)=3  (14,11)=3  (14,12)=2  (14,14)=2  (14,15)=5# (14,16)=2  (14,17)=5# (15,0)=3  (15,5)=5# (15,6)=3  (15,10)=2  (15,11)=2  (15,12)=5# (15,14)=2  (15,15)=3  (15,16)=2  (16,2)=2  (16,3)=5# (16,5)=5# (16,7)=3  (16,12)=2  (16,13)=3  (16,14)=3  (16,15)=5# (16,16)=2  (16,17)=3 
! size mismatch, 10x10 instead of 8x10

TRAIN 1c786137.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color cyan and layers
  _0: a rectangle with size (10,11) and color green and mask Border at (4,3)
  _01: a rectangle with size (11,3) and color black and mask xxx|x.x|xx.|.x.|.x.|.x.|x..|.x.|x.x|.xx|x.. at (0,0)
diff: 
delta: (0,4)=1  (0,5)=1  (0,7)=0  (0,8)=0  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=0  (1,1)=1  (1,5)=1  (1,6)=0  (1,7)=1  (1,8)=1  (1,9)=2  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=0  (1,15)=2  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,11)=0  (2,13)=0  (2,14)=0  (2,15)=1  (3,0)=1  (3,2)=1  (3,3)=0  (3,5)=0  (3,6)=1  (3,8)=1  (3,9)=0  (3,10)=1  (3,11)=1  (3,15)=0  (4,14)=0  (4,15)=2  (5,0)=1  (5,4)=2  (5,5)=0  (5,7)=1  (5,8)=1  (5,9)=1  (5,10)=0  (5,11)=1  (5,12)=0  (5,14)=0  (5,15)=0  (6,5)=1  (6,6)=0  (6,8)=2  (6,10)=1  (6,11)=2  (6,14)=1  (7,0)=1  (7,5)=2  (7,6)=0  (7,7)=2  (7,8)=0  (7,9)=1  (7,10)=1  (7,12)=1  (8,4)=0  (8,5)=1  (8,8)=1  (8,9)=1  (8,11)=1  (8,14)=2  (8,15)=1  (9,0)=1  (9,4)=0  (9,5)=1  (9,8)=0  (9,10)=0  (9,11)=2  (9,12)=0  (9,15)=1  (10,4)=0  (10,7)=2  (11,0)=1  (11,1)=1  (11,2)=1  (11,5)=0  (11,6)=2  (11,7)=0  (11,8)=0  (11,9)=0  (11,10)=0  (11,15)=0  (12,0)=1  (12,2)=0  (12,4)=0  (12,5)=2  (12,8)=1  (12,9)=2  (12,10)=0  (12,11)=0  (12,12)=2  (12,15)=1  (13,1)=1  (13,2)=1  (13,14)=0  (13,15)=2  (14,1)=1  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,8)=0  (14,9)=1  (14,10)=2  (14,14)=1  (15,1)=1  (15,2)=0  (15,3)=0  (15,4)=1  (15,5)=1  (15,7)=0  (15,8)=1  (15,9)=2  (15,11)=1  (15,12)=0  (15,13)=1  (15,14)=2  (15,15)=0  (16,1)=0  (16,3)=2  (16,5)=0  (16,7)=2  (16,8)=0  (16,9)=1  (16,11)=1  (16,13)=1 
! size mismatch, 10x10 instead of 8x9

TEST 1c786137.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 15413.4 bits (15413.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-371] Checking task 1caeab9d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9629.8 = 9645.5
DL output with Mo: L = 15.6 + 9629.8 = 9645.5
DL input+output M: L = 31.2 + 19259.7 = 19290.9

# learning a model for train pairs
2.000	
1.790	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.484	OUT OBJECT at ^.layer_0: ^.layer_0
1.271	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.050	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.838	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.617	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	OUT DEF: ^.size=^.size
0.526	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.494	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size
0.463	OUT DEF: ^.layer_011.pos=corner(^.layer_0.pos, ^.layer_01.pos)
0.432	OUT DEF: ^.layer_01.pos=corner(^.layer_0.pos, ^.layer_00.pos)
0.403	OUT DEF: ^.layer_011.shape=^.layer_01.shape
0.375	OUT DEF: ^.layer_01.shape=^.layer_00.shape
0.358	IN  DEF: ^.layer_0.shape.color=blue
0.340	IN  DEF: ^.layer_00.shape.color=red
0.323	IN  DEF: ^.layer_01.shape.color=yellow
0.313	IN  DEF: ^.layer_00.shape.mask=Full
0.302	IN  DEF: ^.layer_0.shape.mask=Full
0.292	IN  DEF: ^.layer_01.shape.mask=Full
0.284	IN  DEF: ^.color=black
0.277	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_00.shape at corner(^.layer_0.pos, ^.layer_00.pos)
  _011: ^.layer_01.shape at corner(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 119.4 + 2446.9 = 2566.3
DL output with Mo: L = 101.7 + 0.0 = 101.7
DL input+output M: L = 221.1 + 2446.9 = 2668.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
diff: 
delta:
   (80.7 bits)
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,2) and color red and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (1,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,3) and color red and mask Full at (2,1)
  _0: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,7)
diff: 
delta:
   (89.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _01: a rectangle with size (2,3) and color red and mask Full at (5,1)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (5,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,3) and color red and mask Full at (2,1)
  _0: a rectangle with size (2,3) and color blue and mask Full at (5,4)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,7)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _0: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (3,6)
diff: 
delta:
   (74.7 bits)
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (2,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _0: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (3,6)
diff: 
delta:
correct output grid

TRAIN 1caeab9d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask .xx|.xx|x.. at (0,7)
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (5,4)
diff:   ^.layer_00.shape.mask
delta: (4,0)=1  (7,3)=4 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (0,8)
  _0: a rectangle with size (3,3) and color blue and mask .xx|.xx|x.. at (2,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (5,4)
diff:   ^.layer_0.shape.mask
delta: (2,7)=2  (7,3)=4 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (0,8)
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|.xx|x.. at (5,3)
diff:   ^.layer_01.shape.mask
delta: (2,7)=2  (4,0)=1 
! 2 wrong pixels (generated / expected)

TEST 1caeab9d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-370] Checking task 1cf80156.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7210.9 = 7226.5
DL output with Mo: L = 15.6 + 5544.8 = 5560.4
DL input+output M: L = 31.2 + 12755.6 = 12786.8

# learning a model for train pairs
2.000	
1.325	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.469	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.391	OUT DEF: ^.size=^.layer_0.shape.size
0.344	OUT DEF: ^.layer_0.pos='(0,0)
0.330	OUT DEF: ^.color=black
0.320	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2225.7 = 2273.7
DL output with Mo: L = 30.3 + 0.0 = 30.3
DL input+output M: L = 78.2 + 2225.7 = 2304.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|..x.|xxx.|x.x. at (2,3)
diff: 
delta:
   (74.5 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|..x.|xxx.|x.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|..x.|xxx.|x.x. at (2,3)
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (5,3) and color blue and mask x..|xx.|.x.|xxx|..x at (1,2)
diff: 
delta:
   (73.8 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color blue and mask x..|xx.|.x.|xxx|..x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (5,3) and color blue and mask x..|xx.|.x.|xxx|..x at (1,2)
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxx.|...xx at (3,3)
diff: 
delta:
   (74.2 bits)
data: a background with size (3,5) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxx.|...xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxx.|...xx at (3,3)
diff: 
delta:
correct output grid

TRAIN 1cf80156.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask ..xxxx|..x...|x.x...|xxxx.. at (4,2)
diff: 
delta:
correct output grid

TEST 1cf80156.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-369] Checking task 1e0a9b12.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5313.8 = 5329.4
DL output with Mo: L = 15.6 + 5313.8 = 5329.4
DL input+output M: L = 31.2 + 10627.6 = 10658.8

# learning a model for train pairs
2.000	
1.811	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.702	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.612	OUT DEF: ^.size=^.size
1.543	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.496	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.445	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.395	OUT DEF: ^.layer_0111.pos=^.size - 1
1.351	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.306	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.260	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.210	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.178	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.148	OUT DEF: ^.layer_0.shape.size.i=right(^.layer_0) + ^.layer_0.shape.size.i
1.118	OUT DEF: ^.layer_011.shape=^.layer_01111.shape
1.092	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
1.048	OUT DEF: ^.layer_01.pos=max(^.layer_01.pos, ^.layer_011.pos) - translationOnto(^.layer_0111, ^.layer_01)
1.019	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
0.995	OUT DEF: ^.layer_011.pos.j=^.layer_01111.pos.j
0.974	OUT DEF: ^.layer_011.pos.i=area(^.layer_0.shape) + 2
0.953	OUT DEF: ^.layer_0.pos.i=max(^.layer_0.pos.i, ^.layer_011.pos.i)
0.934	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.915	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.896	IN  DEF: ^.layer_0.shape.mask=Full
0.878	OUT DEF: ^.layer_01.shape.size.j=1
0.859	OUT DEF: ^.layer_01.shape.mask=Full
0.845	IN  DEF: ^.color=black
0.831	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (right(^.layer_0) + ^.layer_0.shape.size.i,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (max(^.layer_0.pos.i, ^.layer_011.pos.i),^.layer_0.pos.j)
  _01: a rectangle with size (?,1) and color ^.layer_011.shape.color and mask Full at max(^.layer_01.pos, ^.layer_011.pos) - translationOnto(^.layer_0111, ^.layer_01)
  _011: ^.layer_01111.shape at (area(^.layer_0.shape) + 2,^.layer_01111.pos.j)
  _0111: a point with color ? at ^.size - 1
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 126.9 + 3463.7 = 3590.5
DL output with Mo: L = 275.2 + 563.2 = 838.4
DL input+output M: L = 402.1 + 4026.9 = 4429.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a point with color brown at (0,3)
  _011: a point with color pink at (2,2)
  _0111: a point with color yellow at (2,1)
  _01111: a point with color blue at (3,0)
diff: 
delta:
   (92.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color pink and mask Full at (3,2)
  _011: a point with color blue at (3,0)
  _0111: a point with color brown at (3,3)
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a point with color brown at (0,3)
  _011: a point with color yellow at (2,1)
  _0111: a point with color pink at (2,2)
  _01111: a point with color blue at (3,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a point with color brown at (0,3)
  _011: a point with color yellow at (2,1)
  _0111: a point with color blue at (3,0)
  _01111: a point with color pink at (2,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a point with color brown at (0,3)
  _011: a point with color pink at (2,2)
  _0111: a point with color yellow at (2,1)
  _01111: a point with color blue at (3,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a point with color brown at (0,5)
  _011: a point with color cyan at (1,3)
  _0111: a point with color orange at (4,2)
  _01111: a point with color orange at (5,2)
diff: 
delta: (4,3)=8 
   (129.5 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (4,3)
  _011: a point with color orange at (5,2)
  _0111: a point with color brown at (5,5)
diff: 
delta: (4,2)=7#
   (36.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a point with color brown at (0,5)
  _011: a point with color cyan at (1,3)
  _0111: a point with color orange at (4,2)
  _01111: a point with color cyan at (4,3)
diff: 
delta: (5,2)=7#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a point with color brown at (0,5)
  _011: a point with color cyan at (1,3)
  _0111: a point with color orange at (4,2)
  _01111: a point with color orange at (5,2)
diff: 
delta: (4,3)=8 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (3,0)
  _01: a point with color brown at (0,5)
  _011: a point with color cyan at (1,3)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color orange at (4,2)
diff: 
delta: (5,2)=7#
! 6 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (2,4)
  _01111: a point with color pink at (3,0)
diff: 
delta: (4,1)=3 
   (124.1 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color blue and mask Full at (3,3)
  _011: a point with color pink at (4,0)
  _0111: a point with color red at (4,4)
diff: 
delta:
   (11.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (2,4)
  _01111: a point with color pink at (3,0)
diff: 
delta: (4,1)=3 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (2,4)
  _01111: a point with color green at (4,1)
diff: 
delta: (3,0)=6 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,3)
  _0111: a point with color pink at (3,0)
  _01111: a point with color red at (2,4)
diff: 
delta: (4,1)=3 
! 3 wrong pixels (generated / expected)

TRAIN 1e0a9b12.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (3,0)
  _01: a point with color red at (0,1)
  _011: a point with color yellow at (0,3)
  _0111: a point with color green at (0,4)
  _01111: a point with color grey at (1,0)
diff: 
delta: (2,2)=6  (3,1)=2  (3,3)=4 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (3,0)
  _01: a point with color red at (0,1)
  _011: a point with color yellow at (0,3)
  _0111: a point with color green at (0,4)
  _01111: a point with color pink at (2,2)
diff: 
delta: (1,0)=5# (3,1)=2  (3,3)=4 
! 6 wrong pixels (generated / expected)

TEST 1e0a9b12.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.5 sec (14.5 sec/task)
bits-train-error = 563.2 bits (563.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-368] Checking task 1e32b0e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 63778.1 = 63793.7
DL output with Mo: L = 15.6 + 94732.8 = 94748.4
DL input+output M: L = 31.2 + 158510.9 = 158542.1

# learning a model for train pairs
2.000	
1.330	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.794	OUT OBJECT at ^.layer_0: ^.layer_0
0.690	IN  DEF: ^.layer_0.shape.mask=.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....
0.633	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.581	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.531	OUT OBJECT at ^.layer_011: ^.layer_01
0.488	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.460	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.429	OUT OBJECT at ^.layer_0110: ^.layer_011
0.410	OUT OBJECT at ^.layer_01101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _01101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 338.9 + 8672.7 = 9011.6
DL output with Mo: L = 130.2 + 25331.8 = 25462.0
DL input+output M: L = 469.1 + 34004.5 = 34473.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (13,1)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (7,8)=2  (8,7)=2  (8,9)=2  (9,8)=2 
   (336.1 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (15,1) and color cyan and mask Full at (1,14)
  _0110: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
  _01101: a rectangle with size (3,3) and color cyan and mask +-cross at (1,7)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (13,1)
  _0111: a rectangle with size (3,3) and color cyan and mask +-cross at (7,1)
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (4,14)=0  (6,14)=0  (7,8)=2  (8,7)=2  (8,8)=8  (8,9)=2  (8,13)=8  (8,15)=8  (9,8)=2  (10,14)=0  (12,14)=0  (13,8)=8  (14,7)=8  (14,8)=8  (14,9)=8  (14,13)=8  (14,15)=8  (15,8)=8 
   (703.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (13,1)
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (7,8)=2  (8,7)=2  (8,9)=2  (9,8)=2 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color cyan and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (1,1)
  _011: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,7)
diff: 
delta: (2,13)=2  (2,14)=2  (2,15)=2  (13,2)=2  (14,1)=2  (14,2)=2  (14,3)=2  (15,2)=2 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1 
   (278.1 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (15,3) and color red and mask Full at (1,13)
  _0110: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
  _01101: a rectangle with size (3,9) and color red and mask Full at (7,1)
  _011: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _0111: a rectangle with size (3,3) and color red and mask Full at (13,1)
diff: 
delta: (1,7)=2  (1,8)=2  (1,9)=2  (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (2,9)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,13)=0  (4,14)=0  (4,15)=0  (6,13)=0  (6,14)=0  (6,15)=0  (7,4)=0  (7,6)=0  (8,4)=0  (8,6)=0  (8,14)=1  (9,4)=0  (9,6)=0  (10,13)=0  (10,14)=0  (10,15)=0  (12,13)=0  (12,14)=0  (12,15)=0  (13,7)=2  (13,9)=2  (14,8)=2  (15,7)=2  (15,9)=2 
   (1072.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,1)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (13,7)
diff: 
delta: (1,14)=1  (1,15)=1  (2,7)=1  (2,8)=1  (8,14)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
diff: 
delta: (2,7)=3  (2,15)=3  (14,15)=3  (15,14)=3 
   (253.1 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (7,7)
  _0110: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
  _01101: a rectangle with size (1,13) and color blue and mask Full at (14,1)
  _011: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _0111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (7,13)
diff: 
delta: (1,8)=1  (1,14)=1  (2,7)=3  (2,9)=1  (2,13)=1  (2,15)=3  (3,8)=1  (3,14)=1  (8,3)=1  (9,2)=1  (13,2)=1  (13,8)=1  (13,14)=1  (14,2)=0  (14,4)=0  (14,6)=0  (14,8)=0  (14,10)=0  (14,12)=0  (14,15)=3  (15,2)=1  (15,8)=1  (15,14)=3 
   (756.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (7,1)
diff: 
delta: (2,7)=3  (2,15)=3  (14,15)=3  (15,14)=3 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (1,1)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (14,14)
diff: 
delta: (2,7)=3  (2,15)=3  (7,2)=3  (8,1)=3 
! size mismatch, 10x10 instead of 17x17

TRAIN 1e32b0e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color brown and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (7,1)
diff: 
delta: (1,7)=4  (1,8)=4  (9,7)=4  (9,8)=4  (14,7)=4  (14,9)=4 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color brown and mask .....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|xxxxxxxxxxxxxxxxx|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x.....|.....x.....x..... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (7,1)
diff: 
delta: (1,7)=4  (1,8)=4  (2,2)=0  (9,7)=4  (9,8)=4  (14,7)=4  (14,9)=4 
! size mismatch, 10x10 instead of 17x17

TEST 1e32b0e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.0 sec (28.0 sec/task)
bits-train-error = 25331.8 bits (25331.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-367] Checking task 1f0c79e5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4992.0 = 5007.6
DL output with Mo: L = 15.6 + 24354.9 = 24370.5
DL input+output M: L = 31.2 + 29346.8 = 29378.0

# learning a model for train pairs
2.000	
1.208	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.908	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.826	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
0.794	OUT DEF: ^.size=^.size
0.767	IN  DEF: ^.layer_0.shape.mask=Full
0.747	IN  DEF: ^.color=black
0.743	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 68.1 + 2794.8 = 2862.9
DL output with Mo: L = 42.0 + 4139.0 = 4181.0
DL input+output M: L = 110.1 + 6933.8 = 7043.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (2,2) and color yellow and mask Full at (4,2)
diff: 
delta:
   (63.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,7) and color yellow and mask ....xxx|...xxx.|..xxx..|.xxx...|xxx....|xx..... at (0,2)
diff: 
delta:
   (82.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (2,2) and color yellow and mask Full at (4,2)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,2)
diff: 
delta:
   (63.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,7) and color green and mask xx.....|xxx....|.xxx...|..xxx..|...xxx.|....xxx|.....xx|......x at (1,2)
diff: 
delta:
   (94.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,2)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (3,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta: (4,4)=6 
   (89.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color pink and mask ......xxx|.....xxx.|....xxx..|...xxx...|..xxx....|.xxx.....|xxx......|xx.......|x........ at (0,0)
diff: 
delta:
   (114.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color pink at (3,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta: (4,4)=6 
! 28 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _00: a point with color orange at (4,4)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta:
   (63.2 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask xx....xxx|xxx..xxx.|.xxxxxx..|..xxxx...|..xxx....|.xxx.....|xxx......|xx.......|x........ at (0,0)
diff: 
delta:
   (122.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color orange at (4,4)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 1f0c79e5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _00: a point with color cyan at (3,5)
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TEST 1f0c79e5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 4139.0 bits (4139.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-366] Checking task 1f642eb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13867.0 = 13882.7
DL output with Mo: L = 15.6 + 13867.0 = 13882.7
DL input+output M: L = 31.2 + 27734.1 = 27765.3

# learning a model for train pairs
2.000	
1.387	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.029	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.985	OUT DEF: ^.size=^.size
0.961	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.943	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.889	OUT OBJECT at ^.layer_01: ^.layer_01
0.861	OUT OBJECT at ^.layer_00: ^.layer_01.shape at (?,?)
0.837	OUT DEF: ^.layer_00.pos=^.layer_0.pos
0.819	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.765	OUT OBJECT at ^.layer_011: ^.layer_011
0.737	OUT OBJECT at ^.layer_001: ^.layer_011.shape at (?,?)
0.714	OUT DEF: ^.layer_001.pos=max(^.layer_0.pos, ^.layer_011.pos)
0.697	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.679	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.666	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.654	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.642	IN  DEF: ^.layer_0.shape.color=cyan
0.630	OUT DEF: ^.layer_01111.pos.i=bottom(^.layer_0)
0.619	OUT DEF: ^.layer_0111.pos.i=^.layer_0.pos.i * 3
0.610	OUT DEF: ^.layer_0111.pos.j=span(^.layer_0.pos.i, ^.layer_011.pos.i) + 1
0.603	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.596	IN  DEF: ^.layer_0.shape.mask=Full
0.590	IN  DEF: ^.color=black
0.585	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01.shape at ^.layer_0.pos
  _001: ^.layer_011.shape at max(^.layer_0.pos, ^.layer_011.pos)
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a point with color ? at (^.layer_0.pos.i * 3,span(^.layer_0.pos.i, ^.layer_011.pos.i) + 1)
  _01111: a point with color ? at (bottom(^.layer_0),?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 90.2 + 4466.3 = 4556.4
DL output with Mo: L = 237.9 + 3324.5 = 3562.4
DL input+output M: L = 328.0 + 7790.8 = 8118.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color pink at (6,0)
diff: 
delta: (9,5)=4 
   (104.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (3,4)
  _001: a point with color pink at (6,4)
  _0: a rectangle with size (3,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color pink at (6,0)
  _0111: a point with color yellow at (9,5)
  _01111: a point with color yellow at (6,5)
diff: 
delta:
   (23.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color pink at (6,0)
diff: 
delta: (9,5)=4 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color brown at (0,4)
  _011: a point with color yellow at (9,5)
diff: 
delta: (6,0)=6 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (3,4)
  _01: a point with color pink at (6,0)
  _011: a point with color brown at (0,4)
diff: 
delta: (9,5)=4 
! 6 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,0)
  _011: a point with color orange at (0,4)
diff: 
delta: (5,9)=2  (7,0)=3  (9,5)=1 
   (158.2 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (3,3)
  _001: a point with color orange at (3,4)
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,0)
  _011: a point with color orange at (0,4)
  _0111: a point with color blue at (9,5)
  _01111: a point with color green at (7,0)
diff: 
delta: (5,5)=2  (5,9)=2  (7,3)=3  (7,5)=1 
   (129.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color orange at (0,4)
  _011: a point with color red at (5,9)
diff: 
delta: (3,0)=6  (7,0)=3  (9,5)=1 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,0)
  _011: a point with color orange at (0,4)
diff: 
delta: (5,9)=2  (7,0)=3  (9,5)=1 
! 12 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color green at (4,0)
diff: 
delta: (3,9)=6  (6,0)=2  (7,9)=2  (9,3)=7#
   (183.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (3,3)
  _001: a point with color green at (4,3)
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color green at (4,0)
  _0111: a point with color orange at (9,3)
  _01111: a point with color red at (7,9)
diff: 
delta: (3,5)=6  (3,9)=6  (6,0)=2  (6,3)=2  (7,3)=7# (7,5)=2 
   (179.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color yellow at (0,3)
  _011: a point with color green at (4,0)
diff: 
delta: (3,9)=6  (6,0)=2  (7,9)=2  (9,3)=7#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask Full at (3,3)
  _01: a point with color pink at (3,9)
  _011: a point with color yellow at (0,3)
diff: 
delta: (4,0)=3  (6,0)=2  (7,9)=2  (9,3)=7#
! 18 wrong pixels (generated / expected)

TRAIN 1f642eb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,2)
  _01: a point with color pink at (0,3)
  _011: a point with color red at (0,5)
diff: 
delta: (3,0)=9# (4,9)=7# (5,0)=3  (6,0)=4  (9,4)=6 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,2)
  _01: a point with color red at (0,5)
  _011: a point with color pink at (0,3)
diff: 
delta: (3,0)=9# (4,9)=7# (5,0)=3  (6,0)=4  (9,4)=6 
! 17 wrong pixels (generated / expected)

TEST 1f642eb9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.3 sec (5.3 sec/task)
bits-train-error = 3324.5 bits (3324.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-365] Checking task 1f85a75f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 43764.7 = 43780.3
DL output with Mo: L = 15.6 + 1841.2 = 1856.9
DL input+output M: L = 31.2 + 45605.9 = 45637.1

# learning a model for train pairs
2.000	
1.667	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.575	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.188	OUT DEF: ^.layer_0.shape=^.layer_0.shape
1.041	OUT DEF: ^.size=^.layer_0.shape.size
0.951	OUT DEF: ^.layer_0.pos='(0,0)
0.924	OUT DEF: ^.color=black
0.910	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.900	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.894	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.884	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	IN  OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.868	IN  OBJECT at ^.layer_01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.864	IN  OBJECT at ^.layer_011111111: a point with color ? at (?,?)
0.861	IN  OBJECT at ^.layer_0111111111: a point with color ? at (?,?)
0.860	IN  DEF: ^.layer_01.shape.mask=Full
0.858	IN  DEF: ^.layer_011.shape.mask=Full
0.857	IN  DEF: ^.layer_0111.shape.mask=Full
0.855	IN  DEF: ^.layer_01111.shape.mask=Full
0.854	IN  DEF: ^.layer_011111.shape.mask=Full
0.852	IN  DEF: ^.layer_0111111.shape.mask=Full
0.851	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111111: a point with color ? at (?,?)
  _0111111111: a point with color ? at (?,?)

DL input  with Mi: L = 309.3 + 36231.0 = 36540.3
DL output with Mo: L = 30.3 + 0.0 = 30.3
DL input+output M: L = 339.6 + 36231.0 = 36570.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (10,17)
  _01: a rectangle with size (1,2) and color blue and mask Full at (4,12)
  _011: a rectangle with size (1,2) and color blue and mask Full at (11,13)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (27,7)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (11,0)
  _011111: a rectangle with size (1,3) and color blue and mask Full at (25,20)
  _0111111: a rectangle with size (2,1) and color grey and mask Full at (3,8)
  _01111111: a rectangle with size (2,1) and color grey and mask Full at (6,4)
  _011111111: a point with color blue at (0,0)
  _0111111111: a point with color blue at (0,5)
diff: 
delta: (0,22)=5# (1,15)=5# (2,10)=5# (2,26)=1  (3,15)=5# (3,22)=1  (4,3)=5# (4,4)=1  (4,15)=1  (4,19)=1  (5,18)=1  (5,29)=1  (6,7)=1  (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,1)=0  (11,5)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,21)=0  (26,13)=5# (26,24)=1  (26,26)=1  (26,29)=5# (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
   (2527.0 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|xxx|x.x|xxx|.xx at (10,17)
  _01: a rectangle with size (1,2) and color blue and mask Full at (4,12)
  _011: a rectangle with size (1,2) and color blue and mask Full at (11,13)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (27,7)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (11,0)
  _011111: a rectangle with size (1,3) and color blue and mask Full at (25,20)
  _0111111: a rectangle with size (2,1) and color grey and mask Full at (3,8)
  _01111111: a rectangle with size (2,1) and color grey and mask Full at (6,4)
  _011111111: a point with color blue at (0,0)
  _0111111111: a point with color blue at (0,5)
diff: 
delta: (0,22)=5# (1,15)=5# (2,10)=5# (2,26)=1  (3,15)=5# (3,22)=1  (4,3)=5# (4,4)=1  (4,15)=1  (4,19)=1  (5,18)=1  (5,29)=1  (6,7)=1  (7,24)=1  (8,2)=5# (8,4)=1  (8,11)=5# (8,15)=1  (8,17)=1  (8,18)=5# (8,19)=1  (8,21)=5# (8,27)=1  (9,0)=5# (9,9)=1  (10,21)=1  (11,1)=0  (11,5)=1  (11,25)=1  (11,28)=1  (12,22)=5# (13,15)=1  (13,27)=5# (14,3)=5# (14,7)=5# (14,11)=5# (15,0)=5# (15,28)=1  (16,8)=1  (16,12)=5# (16,22)=1  (16,29)=1  (17,19)=1  (17,21)=5# (18,1)=1  (18,7)=1  (18,25)=1  (19,4)=1  (19,13)=1  (19,15)=5# (19,20)=1  (19,22)=5# (19,29)=1  (20,1)=1  (20,16)=5# (20,23)=1  (21,4)=1  (22,23)=1  (22,24)=5# (23,0)=1  (23,12)=1  (23,21)=1  (23,24)=1  (23,29)=1  (24,7)=1  (24,15)=5# (25,21)=0  (26,13)=5# (26,24)=1  (26,26)=1  (26,29)=5# (27,25)=5# (28,13)=5# (28,17)=5# (28,21)=5# (28,25)=5# (29,6)=5# (29,10)=1 
correct output grid

TRAIN 1f85a75f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (9,11)
  _01: a rectangle with size (8,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (1,2) and color red and mask Full at (0,10)
  _0111: a rectangle with size (1,2) and color red and mask Full at (27,17)
  _01111: a rectangle with size (2,1) and color red and mask Full at (2,0)
  _011111: a rectangle with size (2,1) and color red and mask Full at (7,20)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (12,29)
  _01111111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (9,22)
  _011111111: a point with color red at (0,23)
  _0111111111: a point with color red at (1,6)
diff: 
delta: (2,10)=2  (3,2)=2  (3,27)=2  (4,7)=0  (4,13)=2  (5,2)=2  (7,7)=0  (7,27)=2  (8,7)=0  (11,3)=2  (12,6)=2  (14,8)=2  (17,19)=2  (17,25)=2  (18,28)=2  (19,1)=2  (19,16)=2  (20,8)=2  (20,28)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,21)=2  (28,27)=2 
   (1096.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (9,11)
  _01: a rectangle with size (8,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (1,2) and color red and mask Full at (0,10)
  _0111: a rectangle with size (1,2) and color red and mask Full at (27,17)
  _01111: a rectangle with size (2,1) and color red and mask Full at (2,0)
  _011111: a rectangle with size (2,1) and color red and mask Full at (7,20)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (12,29)
  _01111111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (9,22)
  _011111111: a point with color red at (0,23)
  _0111111111: a point with color red at (1,6)
diff: 
delta: (2,10)=2  (3,2)=2  (3,27)=2  (4,7)=0  (4,13)=2  (5,2)=2  (7,7)=0  (7,27)=2  (8,7)=0  (11,3)=2  (12,6)=2  (14,8)=2  (17,19)=2  (17,25)=2  (18,28)=2  (19,1)=2  (19,16)=2  (20,8)=2  (20,28)=2  (21,19)=2  (23,2)=2  (23,6)=2  (25,4)=2  (25,14)=2  (26,6)=2  (27,21)=2  (28,27)=2 
correct output grid

TRAIN 1f85a75f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask .xxx|xx.x|xx.x|.xxx at (12,19)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (2,19)
  _011: a rectangle with size (1,3) and color blue and mask Full at (24,11)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (6,22)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (1,27)
  _011111: a rectangle with size (1,2) and color blue and mask Full at (6,8)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (6,26)
  _01111111: a rectangle with size (2,3) and color green and mask Odd Checkboard at (11,10)
  _011111111: a point with color blue at (0,2)
  _0111111111: a point with color green at (0,4)
diff: 
delta: (0,6)=8  (0,19)=3  (0,21)=8  (1,2)=8  (1,3)=3  (1,17)=8  (1,20)=8  (2,0)=1  (2,22)=1  (2,23)=3  (3,2)=8  (3,9)=8  (3,12)=1  (3,16)=8  (3,20)=3  (3,23)=3  (3,29)=8  (4,0)=1  (4,16)=3  (4,23)=1  (4,24)=8  (4,26)=8  (4,29)=3  (5,17)=8  (5,29)=8  (6,1)=8  (6,3)=1  (6,29)=3  (7,3)=1  (7,4)=8  (7,18)=3  (7,19)=1  (8,11)=1  (8,16)=8  (8,18)=3  (8,25)=3  (10,5)=1  (10,20)=8  (11,1)=1  (11,2)=8  (11,5)=3  (11,10)=8  (11,17)=8  (12,3)=1  (12,6)=1  (13,2)=1  (13,10)=8  (13,26)=1  (14,8)=1  (15,3)=3  (15,12)=1  (15,17)=3  (15,24)=8  (15,25)=3  (16,0)=1  (16,13)=3  (16,15)=8  (17,10)=1  (17,11)=1  (18,4)=8  (18,9)=3  (18,17)=8  (19,2)=8  (19,8)=3  (19,17)=8  (19,18)=3  (19,22)=3  (19,29)=3  (20,17)=1  (20,19)=3  (21,8)=3  (21,17)=1  (21,25)=1  (22,6)=8  (22,12)=3  (22,14)=1  (22,29)=3  (23,10)=1  (23,14)=3  (23,16)=3  (23,18)=1  (23,21)=3  (23,26)=8  (24,6)=8  (24,8)=8  (24,17)=8  (24,25)=1  (25,1)=8  (25,12)=8  (25,16)=8  (25,20)=1  (25,23)=8  (25,25)=3  (25,27)=3  (26,2)=1  (26,5)=3  (26,7)=1  (27,5)=3  (27,14)=1  (27,17)=8  (27,19)=3  (27,20)=1  (27,22)=1  (28,16)=3  (28,21)=3  (29,2)=8  (29,7)=8  (29,17)=3  (29,21)=3  (29,29)=3 
correct output grid

TEST 1f85a75f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 10.3 sec (10.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-364] Checking task 1f876c06.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6332.0 = 6347.7
DL output with Mo: L = 15.6 + 13367.9 = 13383.5
DL input+output M: L = 31.2 + 19700.0 = 19731.2

# learning a model for train pairs
2.000	
1.837	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.686	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.573	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.519	OUT DEF: ^.layer_01.shape.mask=x....|.x...|..x..|...x.|....x
1.474	OUT DEF: ^.size=^.size
1.431	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.395	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.358	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.321	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.284	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.245	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.205	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
1.192	OUT DEF: ^.layer_0111.pos.i='0
1.179	OUT DEF: ^.layer_0111.pos='(0,0)
1.154	OUT DEF: ^.layer_0.pos=^.layer_01.pos
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_01.pos
  _01: a rectangle with size (?,?) and color ? and mask x....|.x...|..x..|...x.|....x at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 134.8 + 4778.7 = 4913.5
DL output with Mo: L = 161.9 + 4926.7 = 5088.6
DL input+output M: L = 296.7 + 9705.4 = 10002.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,2)
  _01: a point with color pink at (0,5)
  _011: a point with color red at (2,0)
  _0111: a point with color pink at (4,9)
  _01111: a point with color yellow at (5,3)
  _011111: a point with color yellow at (9,7)
diff: 
delta:
   (124.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (5,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,2)
  _0111: a rectangle with size (3,3) and color red and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
   (141.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,2)
  _01: a point with color pink at (0,5)
  _011: a point with color red at (2,0)
  _0111: a point with color pink at (4,9)
  _01111: a point with color yellow at (5,3)
  _011111: a point with color yellow at (9,7)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 1f876c06.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,7)
  _011: a point with color cyan at (2,6)
  _0111: a point with color green at (2,9)
  _01111: a point with color brown at (3,3)
  _011111: a point with color orange at (5,5)
diff: 
delta: (7,1)=8  (9,9)=7#
   (176.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (0,7)
  _01: a rectangle with size (5,5) and color orange and mask x....|.x...|..x..|...x.|....x at (5,5)
  _011: a rectangle with size (6,6) and color cyan and mask .....x|....x.|...x..|..x...|.x....|x..... at (2,1)
  _0111: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (0,0)
diff: 
delta:
   (172.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,7)
  _011: a point with color cyan at (2,6)
  _0111: a point with color green at (2,9)
  _01111: a point with color brown at (3,3)
  _011111: a point with color orange at (5,5)
diff: 
delta: (7,1)=8  (9,9)=7#
! 22 wrong pixels (generated / expected)

TRAIN 1f876c06.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (0,3)
  _01: a point with color cyan at (0,5)
  _011: a point with color yellow at (2,2)
  _0111: a point with color pink at (3,0)
  _01111: a point with color cyan at (4,9)
  _011111: a point with color brown at (5,4)
diff: 
delta: (6,6)=4  (9,0)=9#
   (176.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (2,2)
  _011: a rectangle with size (5,5) and color brown and mask ....x|...x.|..x..|.x...|x.... at (5,0)
  _0111: a rectangle with size (4,4) and color pink and mask ...x|..x.|.x..|x... at (0,0)
diff: 
delta:
   (179.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (0,3)
  _01: a point with color cyan at (0,5)
  _011: a point with color yellow at (2,2)
  _0111: a point with color pink at (3,0)
  _01111: a point with color cyan at (4,9)
  _011111: a point with color brown at (5,4)
diff: 
delta: (6,6)=4  (9,0)=9#
! 25 wrong pixels (generated / expected)

TRAIN 1f876c06.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,6)
  _01: a point with color brown at (0,9)
  _011: a point with color orange at (1,0)
  _0111: a point with color green at (3,3)
  _01111: a point with color brown at (3,6)
  _011111: a point with color pink at (4,0)
diff: 
delta: (5,9)=4  (7,3)=6  (7,6)=7# (9,5)=4 
! 28 wrong pixels (generated / expected)

TEST 1f876c06.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.6 sec (26.6 sec/task)
bits-train-error = 4926.7 bits (4926.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-363] Checking task 1fad071e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22096.6 = 22112.2
DL output with Mo: L = 15.6 + 1437.2 = 1452.9
DL input+output M: L = 31.2 + 23533.8 = 23565.0

# learning a model for train pairs
2.000	
1.814	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.723	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.572	OUT DEF: ^.size.j=^.layer_0.shape.size.j + 3
1.481	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.390	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.298	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.146	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.066	OUT DEF: ^.layer_0.pos.j=area(^.layer_011111.shape)
0.998	OUT DEF: ^.size.i=1
0.949	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.921	IN  OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.910	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.898	IN  OBJECT at ^.layer_011111111: a point with color ? at (?,?)
0.891	IN  DEF: ^.layer_01.shape.color=blue
0.883	IN  DEF: ^.layer_0111.shape.color=red
0.876	IN  DEF: ^.layer_011111.shape.color=blue
0.871	IN  DEF: ^.layer_0.shape.mask=Full
0.867	IN  DEF: ^.layer_01.shape.mask=Full
0.862	IN  DEF: ^.layer_011.shape.mask=Full
0.858	IN  DEF: ^.layer_0111.shape.mask=Full
0.853	IN  DEF: ^.layer_01111.shape.mask=Full
0.849	IN  DEF: ^.layer_011111.shape.mask=Full
0.844	IN  DEF: ^.layer_0111111.shape.mask=Full
0.841	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (1,^.layer_0.shape.size.j + 3) and color ? and layers
  _0: a point with color ? at (^.layer_0.pos.i,area(^.layer_011111.shape))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111111: a point with color ? at (?,?)
  _011111111: a point with color ? at (?,?)

DL input  with Mi: L = 284.8 + 7977.8 = 8262.5
DL output with Mo: L = 79.5 + 599.0 = 678.4
DL input+output M: L = 364.2 + 8576.7 = 8941.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (0,8)
  _0111111: a rectangle with size (1,1) and color blue and mask Full at (4,0)
  _01111111: a point with color blue at (8,1)
  _011111111: a point with color blue at (8,8)
diff: 
delta:
   (218.5 bits)
data: a background with size (1,5) and color black and layers
  _0: a point with color blue at (0,1)
diff: 
delta: (0,0)=1 
   (30.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (2,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (5,5)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (0,8)
  _0111111: a rectangle with size (1,1) and color blue and mask Full at (4,0)
  _01111111: a point with color blue at (8,1)
  _011111111: a point with color blue at (8,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 1fad071e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
  _0111111: a rectangle with size (1,1) and color red and mask Full at (0,3)
  _01111111: a point with color red at (0,8)
  _011111111: a point with color red at (2,3)
diff: 
delta: (3,8)=1  (5,8)=2  (8,1)=1 
   (300.3 bits)
data: a background with size (1,5) and color blue and layers
  _0: a point with color black at (0,4)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
  _0111111: a rectangle with size (1,1) and color red and mask Full at (0,3)
  _01111111: a point with color red at (0,8)
  _011111111: a point with color red at (2,3)
diff: 
delta: (3,8)=1  (5,8)=2  (8,1)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,5)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _01111: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (3,8)
  _0111111: a rectangle with size (2,2) and color blue and mask Full at (7,6)
  _01111111: a point with color red at (0,3)
  _011111111: a point with color red at (0,8)
diff: 
delta: (2,3)=2  (5,8)=2  (8,1)=1 
! 4 wrong pixels (generated / expected)

TRAIN 1fad071e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (4,4)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (7,7)
  _01111111: a point with color blue at (2,0)
  _011111111: a point with color blue at (4,7)
diff: 
delta: (6,4)=2  (8,5)=1 
   (278.9 bits)
data: a background with size (1,5) and color blue and layers
  _0: a point with color black at (0,4)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,7)
  _0111: a rectangle with size (2,2) and color red and mask Full at (3,1)
  _01111: a rectangle with size (2,2) and color blue and mask Full at (4,4)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,1)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (7,7)
  _01111111: a point with color blue at (2,0)
  _011111111: a point with color blue at (4,7)
diff: 
delta: (6,4)=2  (8,5)=1 
! 5 wrong pixels (generated / expected)

TRAIN 1fad071e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (3,5)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,1)
  _01111: a rectangle with size (2,2) and color red and mask Full at (6,6)
  _011111: a rectangle with size (2,2) and color blue and mask Full at (7,3)
  _0111111: a rectangle with size (2,2) and color red and mask Full at (7,0)
  _01111111: a point with color blue at (0,8)
  _011111111: a point with color blue at (1,3)
diff: 
delta: (6,0)=1 
! 4 wrong pixels (generated / expected)

TEST 1fad071e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.1 sec (20.1 sec/task)
bits-train-error = 599.0 bits (599.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-362] Checking task 2013d3e2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11583.3 = 11599.0
DL output with Mo: L = 15.6 + 2773.3 = 2788.9
DL input+output M: L = 31.2 + 14356.6 = 14387.8

# learning a model for train pairs
2.000	
1.817	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.725	OUT DEF: ^.size=^.layer_0.pos
1.653	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.582	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.529	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.475	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.419	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.362	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.301	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.248	OUT DEF: ^.layer_01.pos=^.layer_0.pos - 2
1.211	OUT DEF: ^.layer_01111.shape.color=^.layer_0.shape.color
1.184	OUT DEF: ^.layer_0.pos.i='0
1.159	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j
1.134	OUT DEF: ^.layer_0111.pos.i=^.layer_01.pos.j
1.110	OUT DEF: ^.layer_01111.pos.i=^.layer_01.pos.j
1.088	OUT DEF: ^.layer_011.pos.i=^.layer_01.pos.j - 1
1.067	OUT DEF: ^.layer_0.pos=^.layer_0.shape.size - ^.layer_01.pos
1.049	OUT DEF: ^.color=^.color
1.033	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.j - ^.layer_01.shape.size.i
1.017	OUT DEF: ^.layer_01111.pos.j=^.layer_0.pos.j - ^.layer_01.shape.size.i
1.011	IN  DEF: ^.layer_00.shape.mask=Full
1.005	IN  DEF: ^.layer_0.shape.mask=Full
1.000	IN  DEF: ^.layer_01.shape.mask=Full
0.995	IN  DEF: ^.color=black
0.994	OUT DEF: ^.layer_0111.pos=^.layer_0.pos - span(^.layer_01.pos, ^.layer_00.pos)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.pos and color ^.color and layers
  _0: a point with color ? at ^.layer_0.shape.size - ^.layer_01.pos
  _01: a point with color ? at ^.layer_0.pos - 2
  _011: a point with color ? at (^.layer_01.pos.j - 1,^.layer_01.pos.j)
  _0111: a point with color ? at ^.layer_0.pos - span(^.layer_01.pos, ^.layer_00.pos)
  _01111: a point with color ^.layer_0.shape.color at (^.layer_01.pos.j,^.layer_0.pos.j - ^.layer_01.shape.size.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 112.4 + 7452.8 = 7565.2
DL output with Mo: L = 267.6 + 685.7 = 953.3
DL input+output M: L = 380.0 + 8138.6 = 8518.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (2,6) and color orange and mask Full at (4,2)
diff: 
delta: (2,4)=7# (2,5)=7# (3,3)=6  (3,6)=6  (6,3)=6  (6,6)=6  (7,4)=7# (7,5)=7#
   (315.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (0,2)
  _01: a point with color pink at (1,1)
  _011: a point with color cyan at (1,2)
  _0111: a point with color orange at (2,0)
  _01111: a point with color cyan at (2,1)
diff: 
delta: (2,2)=4 
   (46.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (2,6) and color orange and mask Full at (4,2)
diff: 
delta: (2,4)=7# (2,5)=7# (3,3)=6  (3,6)=6  (6,3)=6  (6,6)=6  (7,4)=7# (7,5)=7#
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (6,2) and color orange and mask Full at (2,4)
diff: 
delta: (3,3)=6  (3,6)=6  (4,2)=7# (4,7)=7# (5,2)=7# (5,7)=7# (6,3)=6  (6,6)=6 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,2) and color orange and mask Full at (2,4)
  _0: a rectangle with size (2,2) and color yellow and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (3,3)
diff: 
delta: (3,3)=6  (3,6)=6  (4,2)=7# (4,7)=7# (5,2)=7# (5,7)=7# (6,3)=6  (6,6)=6  (7,4)=7# (7,5)=7#
! size mismatch, 4x4 instead of 3x3

TRAIN 2013d3e2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,2)
diff: 
delta: (1,1)=1  (1,6)=1  (2,4)=5# (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
   (429.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color green at (1,1)
  _011: a point with color pink at (1,2)
  _0111: a point with color grey at (2,1)
  _01111: a point with color red at (2,2)
diff: 
delta:
   (22.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _0: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,2)
diff: 
delta: (1,1)=1  (1,6)=1  (2,4)=5# (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
! size mismatch, 2x3 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _0: a rectangle with size (1,1) and color grey and mask Full at (2,4)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,2)
diff: 
delta: (1,1)=1  (1,6)=1  (2,3)=6  (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
! size mismatch, 2x4 instead of 3x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (2,3)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,2)
diff: 
delta: (1,1)=1  (1,6)=1  (2,4)=5# (3,2)=5# (3,5)=6  (4,2)=6  (4,5)=5# (5,2)=3  (5,3)=5# (5,4)=6  (5,5)=3  (6,1)=1  (6,6)=1 
! 4 wrong pixels (generated / expected)

TRAIN 2013d3e2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
diff: 
delta: (2,5)=8  (3,5)=8  (3,6)=4  (4,6)=4  (5,3)=4  (5,6)=8  (5,7)=8  (6,3)=4  (6,4)=8  (6,5)=4  (6,6)=4  (7,4)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (5,6)
diff: 
delta: (2,5)=8  (3,5)=8  (3,6)=4  (4,2)=8  (4,3)=8  (4,6)=4  (5,3)=4  (6,3)=4  (6,4)=8  (6,5)=4  (6,6)=4  (7,4)=8 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _0: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (3,3)
diff: 
delta: (2,5)=8  (3,5)=8  (3,6)=4  (4,6)=4  (5,3)=4  (5,6)=8  (5,7)=8  (6,3)=4  (6,4)=8  (6,5)=4  (6,6)=4  (7,4)=8 
! size mismatch, 4x2 instead of 3x3

TEST 2013d3e2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.5 sec (18.5 sec/task)
bits-train-error = 685.7 bits (685.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-361] Checking task 2204b7a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 19376.5 = 19392.1
DL output with Mo: L = 15.6 + 19376.5 = 19392.1
DL input+output M: L = 31.2 + 38753.1 = 38784.3

# learning a model for train pairs
2.000	
1.666	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.279	OUT OBJECT at ^.layer_0: ^.layer_0
0.943	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.607	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.553	OUT DEF: ^.layer_01=^.layer_01
0.522	OUT DEF: ^.size=^.size
0.510	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.497	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.484	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.472	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.454	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.442	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.424	OUT DEF: ^.layer_0111.pos=^.layer_0111.pos
0.411	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.393	OUT DEF: ^.layer_01111.pos=^.layer_01111.pos
0.384	IN  DEF: ^.layer_011.shape.color=green
0.376	IN  DEF: ^.layer_0111.shape.color=green
0.367	IN  DEF: ^.layer_01111.shape.color=green
0.359	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.351	OUT DEF: ^.layer_01111.shape.color=^.layer_0.shape.color
0.346	IN  DEF: ^.layer_0.shape.mask=Full
0.340	IN  DEF: ^.layer_01.shape.mask=Full
0.337	OUT DEF: ^.color=black
0.333	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a point with color ^.layer_0.shape.color at ^.layer_011.pos
  _0111: a point with color ? at ^.layer_0111.pos
  _01111: a point with color ^.layer_0.shape.color at ^.layer_01111.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color green at (?,?)

DL input  with Mi: L = 146.1 + 4743.6 = 4889.7
DL output with Mo: L = 75.7 + 1485.9 = 1561.6
DL input+output M: L = 221.8 + 6229.4 = 6451.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color green at (4,4)
  _0111: a point with color green at (1,6)
  _01111: a point with color green at (6,2)
diff: 
delta:
   (114.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color blue at (4,4)
  _0111: a point with color red at (1,6)
  _01111: a point with color blue at (6,2)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color green at (1,6)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (6,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color green at (1,6)
  _0111: a point with color green at (6,2)
  _01111: a point with color green at (4,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,9)
  _011: a point with color green at (4,4)
  _0111: a point with color green at (1,6)
  _01111: a point with color green at (6,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color green at (2,1)
  _0111: a point with color green at (2,7)
  _01111: a point with color green at (3,3)
diff: 
delta: (6,4)=3  (7,8)=3 
   (167.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color yellow at (2,1)
  _0111: a point with color yellow at (2,7)
  _01111: a point with color yellow at (3,3)
diff: 
delta: (6,4)=7# (7,8)=7#
   (58.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color green at (2,1)
  _0111: a point with color green at (2,7)
  _01111: a point with color green at (3,3)
diff: 
delta: (6,4)=3  (7,8)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color green at (2,1)
  _0111: a point with color green at (2,7)
  _01111: a point with color green at (6,4)
diff: 
delta: (3,3)=3  (7,8)=3 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (9,0)
  _011: a point with color green at (2,1)
  _0111: a point with color green at (3,3)
  _01111: a point with color green at (2,7)
diff: 
delta: (6,4)=3  (7,8)=3 
! 3 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,1)
  _01111: a point with color green at (3,7)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
   (192.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color cyan at (2,4)
  _0111: a point with color cyan at (3,1)
  _01111: a point with color cyan at (3,7)
diff: 
delta: (6,1)=9# (6,6)=9# (7,3)=9#
   (84.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,1)
  _01111: a point with color green at (3,7)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,1)
  _01111: a point with color green at (6,1)
diff: 
delta: (3,7)=3  (6,6)=3  (7,3)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,10) and color brown and mask Full at (9,0)
  _011: a point with color green at (2,4)
  _0111: a point with color green at (3,7)
  _01111: a point with color green at (3,1)
diff: 
delta: (6,1)=3  (6,6)=3  (7,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN 2204b7a8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,5)
  _01111: a point with color green at (1,8)
diff: 
delta: (3,3)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,5)
  _01111: a point with color green at (3,3)
diff: 
delta: (1,8)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,9)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (1,8)
  _01111: a point with color green at (1,5)
diff: 
delta: (3,3)=3  (4,6)=3  (5,3)=3  (7,4)=3  (8,2)=3  (8,6)=3 
! 8 wrong pixels (generated / expected)

TEST 2204b7a8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.9 sec (5.9 sec/task)
bits-train-error = 1485.9 bits (1485.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-360] Checking task 22168020.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11862.4 = 11878.0
DL output with Mo: L = 15.6 + 22375.2 = 22390.8
DL input+output M: L = 31.2 + 34237.6 = 34268.9

# learning a model for train pairs
2.000	
1.451	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.034	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.788	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.570	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.543	OUT DEF: ^.size=^.size
0.521	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.505	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.490	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.480	OUT DEF: ^.layer_0.shape.size.j=max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
0.471	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.464	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.456	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.450	IN  DEF: ^.color=black
0.447	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 4185.8 = 4266.2
DL output with Mo: L = 81.4 + 1874.8 = 1956.2
DL input+output M: L = 161.8 + 6060.6 = 6222.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,8) and color green and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (1,1)
diff: 
delta:
   (120.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,8) and color green and mask xxxxxxxx|.xxxxxx.|..xxxx..|...xx...|...xx... at (1,1)
diff: 
delta:
   (50.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,8) and color green and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (1,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,8)
  _01: a rectangle with size (5,8) and color green and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (1,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,2)
  _01: a rectangle with size (5,8) and color green and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (1,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 22168020.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
diff: 
delta:
   (142.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask xxxxxx|.xxxx.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (4,6) and color yellow and mask xxxxxx|.xxxx.|..xx..|..xx.. at (6,4)
diff: 
delta:
   (60.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (4,6) and color yellow and mask x....x|.x..x.|..xx..|..xx.. at (6,4)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color blue and mask x....x|.x..x.|..xx..|..xx.. at (2,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (8,6)
diff: 
delta: (6,4)=4  (6,9)=4  (7,5)=4  (7,8)=4 
! 20 wrong pixels (generated / expected)

TRAIN 22168020.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
diff: 
delta:
   (155.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask xxxxxxxx|.xxxxxx.|..xxxx..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (4,6) and color pink and mask xxxxxx|.xxxx.|..xx..|..xx.. at (0,0)
diff: 
delta:
   (77.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask x....x|.x..x.|..xx..|..xx.. at (0,0)
  _01: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,8) and color cyan and mask x......x|.x....x.|..x..x..|...xx...|...xx... at (5,1)
  _01: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,2)
diff: 
delta: (0,0)=6  (0,5)=6  (1,1)=6  (1,4)=6 
! 28 wrong pixels (generated / expected)

TRAIN 22168020.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
  _01: a rectangle with size (4,6) and color green and mask x....x|.x..x.|..xx..|..xx.. at (6,1)
diff: 
delta: (1,0)=4  (1,3)=4  (2,1)=4  (2,2)=4  (3,1)=4  (3,2)=4 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask x....x|.x..x.|..xx..|..xx.. at (2,4)
  _01: a rectangle with size (3,4) and color yellow and mask x..x|.xx.|.xx. at (1,0)
diff: 
delta: (6,1)=3  (6,6)=3  (7,2)=3  (7,5)=3  (8,3)=3  (8,4)=3  (9,3)=3  (9,4)=3 
! 28 wrong pixels (generated / expected)

TEST 22168020.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 1874.8 bits (1874.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-359] Checking task 22233c11.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4298.9 = 4314.5
DL output with Mo: L = 15.6 + 7333.0 = 7348.6
DL input+output M: L = 31.2 + 11631.8 = 11663.0

# learning a model for train pairs
2.000	
1.578	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.166	OUT OBJECT at ^.layer_0: ^.layer_0
1.054	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	OUT DEF: ^.size=^.size
0.933	IN  DEF: ^.layer_0.shape.color=green
0.898	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.875	OUT DEF: ^.layer_011.shape.color=cyan
0.853	OUT DEF: ^.layer_011.pos.i=2
0.835	IN  DEF: ^.color=black
0.825	OUT DEF: ^.color=black
0.818	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size / 2
0.795	OUT DEF: ^.layer_01.shape.color=cyan
0.774	OUT DEF: ^.layer_01.pos.i=bottom(^.layer_0) + 1
0.761	OUT DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0.shape.size / 2 and color cyan and mask Full at (bottom(^.layer_0) + 1,?)
  _011: a point with color cyan at (2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 2202.5 = 2252.8
DL output with Mo: L = 103.8 + 1649.9 = 1753.7
DL input+output M: L = 154.1 + 3852.4 = 4006.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
diff: 
delta: (6,7)=3  (7,6)=3 
   (102.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (5,1)
  _011: a point with color cyan at (2,4)
diff: 
delta: (5,5)=8  (6,7)=3  (7,6)=3  (8,8)=8 
   (115.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,2)
diff: 
delta: (6,7)=3  (7,6)=3 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (6,6)
diff: 
delta: (3,2)=3  (4,3)=3 
! 8 wrong pixels (generated / expected)

TRAIN 22233c11.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
diff: 
delta:
   (68.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (7,5)
  _011: a point with color cyan at (2,0)
diff: 
delta: (1,0)=8 
   (38.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..xx|..xx|xx..|xx.. at (3,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,3)
diff: 
delta: (5,1)=3  (5,2)=3  (6,1)=3  (6,2)=3 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (5,1)
diff: 
delta: (3,3)=3  (3,4)=3  (4,3)=3  (4,4)=3 
! 10 wrong pixels (generated / expected)

TRAIN 22233c11.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
diff: 
delta:
   (49.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (5,2)
  _011: a point with color cyan at (2,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 22233c11.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask ...xxx|...xxx|...xxx|xxx...|xxx...|xxx... at (2,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST 22233c11.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 1649.9 bits (1649.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-358] Checking task 2281f1f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6078.3 = 6093.9
DL output with Mo: L = 15.6 + 15617.4 = 15633.0
DL input+output M: L = 31.2 + 21695.7 = 21726.9

# learning a model for train pairs
2.000	
1.901	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.806	OUT OBJECT at ^.layer_0: ^.layer_0
1.721	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.683	OUT DEF: ^.size=^.size
1.644	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.596	OUT OBJECT at ^.layer_011: ^.layer_01
1.557	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.509	OUT OBJECT at ^.layer_0111: ^.layer_011
1.469	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.421	OUT OBJECT at ^.layer_01111: ^.layer_0111
1.378	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.331	OUT OBJECT at ^.layer_011111: ^.layer_01111
1.292	OUT OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.254	OUT OBJECT at ^.layer_01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.227	IN  DEF: ^.layer_0.shape.color=grey
1.199	IN  DEF: ^.layer_01.shape.color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 132.4 + 4046.5 = 4178.9
DL output with Mo: L = 137.3 + 7891.6 = 8028.9
DL input+output M: L = 269.7 + 11938.1 = 12207.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (3,9)
  _01111: a point with color grey at (7,9)
diff: 
delta:
   (105.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,0)
  _011: a point with color grey at (0,3)
  _01110: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color grey at (3,9)
  _011111: a point with color grey at (7,9)
  _0111111: a rectangle with size (1,1) and color red and mask Full at (3,7)
diff: 
delta: (7,0)=2  (7,3)=2  (7,7)=2 
   (161.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (3,9)
  _01111: a point with color grey at (7,9)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a point with color grey at (0,1)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (2,9)
  _01111: a point with color grey at (4,9)
diff: 
delta: (7,9)=5#
   (134.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _011: a point with color grey at (0,1)
  _01110: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color grey at (2,9)
  _011111: a point with color grey at (4,9)
  _0111111: a rectangle with size (1,2) and color red and mask Full at (7,3)
diff: 
delta: (2,1)=2  (2,7)=2  (4,1)=2  (4,7)=2  (7,1)=2  (7,7)=2  (7,9)=5#
   (269.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a point with color grey at (0,1)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (2,9)
  _01111: a point with color grey at (4,9)
diff: 
delta: (7,9)=5#
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,3)
  _01: a point with color grey at (0,1)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (2,9)
  _01111: a point with color grey at (7,9)
diff: 
delta: (4,9)=5#
! 17 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,7) and color grey and mask Full at (0,2)
  _01: a point with color grey at (2,9)
  _011: a point with color grey at (3,9)
  _0111: a point with color grey at (6,9)
  _01111: a point with color grey at (8,9)
diff: 
delta: (0,4)=0  (0,6)=0 
   (164.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,7) and color grey and mask Full at (0,2)
  _01: a rectangle with size (2,7) and color red and mask Full (and Border) at (2,2)
  _011: a point with color grey at (2,9)
  _01110: a rectangle with size (1,7) and color red and mask Full at (6,2)
  _0111: a point with color grey at (3,9)
  _01111: a point with color grey at (6,9)
  _011111: a point with color grey at (8,9)
  _0111111: a rectangle with size (1,7) and color red and mask Full at (8,2)
diff: 
delta: (0,4)=0  (0,6)=0  (2,4)=0  (2,6)=0  (3,4)=0  (3,6)=0  (6,4)=0  (6,6)=0  (8,4)=0  (8,6)=0 
   (357.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,7) and color grey and mask Full at (0,2)
  _01: a point with color grey at (2,9)
  _011: a point with color grey at (3,9)
  _0111: a point with color grey at (6,9)
  _01111: a point with color grey at (8,9)
diff: 
delta: (0,4)=0  (0,6)=0 
! 26 wrong pixels (generated / expected)

TRAIN 2281f1f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,2)
  _01: a point with color grey at (0,0)
  _011: a point with color grey at (0,6)
  _0111: a point with color grey at (0,8)
  _01111: a point with color grey at (2,9)
diff: 
delta: (3,9)=5# (5,9)=5# (7,9)=5# (9,9)=5#
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,2)
  _01: a point with color grey at (0,0)
  _011: a point with color grey at (0,6)
  _0111: a point with color grey at (0,8)
  _01111: a point with color grey at (3,9)
diff: 
delta: (2,9)=5# (5,9)=5# (7,9)=5# (9,9)=5#
! 33 wrong pixels (generated / expected)

TEST 2281f1f4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.8 sec (25.8 sec/task)
bits-train-error = 7891.6 bits (7891.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-357] Checking task 228f6490.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 39106.3 = 39121.9
DL output with Mo: L = 15.6 + 39106.3 = 39121.9
DL input+output M: L = 31.2 + 78212.6 = 78243.9

# learning a model for train pairs
2.000	
1.500	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.119	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.909	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.767	OUT OBJECT at ^.layer_01: ^.layer_01
0.655	OUT OBJECT at ^.layer_00: ^.layer_0
0.573	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.527	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.483	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.451	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.420	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	OUT OBJECT at ^.layer_01111: ^.layer_01111
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 9728.1 = 9905.0
DL output with Mo: L = 127.1 + 4818.3 = 4945.3
DL input+output M: L = 303.9 + 14546.4 = 14850.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,1)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (2,7)
  _01111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
diff: 
delta: (0,0)=7# (5,8)=7# (7,4)=7#
   (291.5 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,2)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,0)
  _01111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
diff: 
delta: (5,8)=7# (7,4)=7#
   (162.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,1)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
  _01111: a rectangle with size (1,2) and color pink and mask Full at (2,7)
diff: 
delta: (0,0)=7# (5,8)=7# (7,4)=7#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|xxxxx|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask xxxxx|xx..x|xxxxx at (7,5)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,1)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (2,7)
  _01111: a rectangle with size (1,2) and color orange and mask Full at (0,8)
diff: 
delta: (0,0)=7# (5,8)=7# (7,4)=7#
! 11 wrong pixels (generated / expected)

TRAIN 228f6490.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,4) and color brown and mask Full (and Border) at (1,6)
  _0111: a rectangle with size (2,3) and color green and mask xxx|..x at (5,0)
  _01111: a rectangle with size (2,2) and color pink and mask Full (and Border) at (8,0)
diff: 
delta: (4,7)=6  (4,9)=6  (5,6)=6  (5,7)=6 
   (322.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _0: a rectangle with size (2,3) and color green and mask Full (and Border) at (1,1)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,4) and color brown and mask Full (and Border) at (7,4)
  _0111: a rectangle with size (2,2) and color pink and mask .x|xx at (4,6)
  _01111: a rectangle with size (2,2) and color pink and mask Full (and Border) at (8,0)
diff: 
delta: (4,9)=6 
   (150.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,4) and color brown and mask Full (and Border) at (1,6)
  _0111: a rectangle with size (2,2) and color pink and mask Full (and Border) at (8,0)
  _01111: a rectangle with size (2,3) and color green and mask xxx|..x at (5,0)
diff: 
delta: (4,7)=6  (4,9)=6  (5,6)=6  (5,7)=6 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask xxxxx|x...x|xxx.x|xxxxx at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (6,3)
  _011: a rectangle with size (2,4) and color brown and mask Full (and Border) at (1,6)
  _0111: a rectangle with size (2,3) and color green and mask xxx|..x at (5,0)
  _01111: a rectangle with size (2,2) and color pink and mask Full (and Border) at (8,0)
diff: 
delta: (4,7)=6  (4,9)=6  (5,6)=6  (5,7)=6 
! 16 wrong pixels (generated / expected)

TRAIN 228f6490.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _01: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _011: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _0111: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
diff: 
delta: (4,5)=4  (5,7)=4  (5,8)=4  (7,9)=4 
   (359.3 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _0: a rectangle with size (2,3) and color red and mask Full (and Border) at (7,1)
  _01: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _011: a rectangle with size (2,4) and color cyan and mask Full (and Border) at (1,5)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
diff: 
delta: (4,5)=4  (7,9)=4 
   (169.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x...x|xxxxx at (5,0)
  _01: a rectangle with size (4,6) and color grey and mask xxxxxx|x...xx|xxx..x|xxxxxx at (0,4)
  _011: a rectangle with size (2,3) and color red and mask xx.|xxx at (0,0)
  _0111: a rectangle with size (2,4) and color cyan and mask xxx.|..xx at (8,6)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,1)
diff: 
delta: (4,5)=4  (5,7)=4  (5,8)=4  (7,9)=4 
! 18 wrong pixels (generated / expected)

TRAIN 228f6490.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x...x|xx.xx|xxxxx|xxxxx at (0,2)
  _01: a rectangle with size (3,7) and color grey and mask xxxxxxx|x...xxx|xxxxxxx at (7,3)
  _011: a rectangle with size (2,3) and color orange and mask xxx|.x. at (5,0)
  _0111: a rectangle with size (1,3) and color yellow and mask Full at (2,7)
  _01111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,0)
diff: 
delta: (0,9)=2  (1,0)=2  (4,9)=2  (5,5)=2  (5,7)=2 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|x...x|xx.xx|xxxxx|xxxxx at (0,2)
  _01: a rectangle with size (3,7) and color grey and mask xxxxxxx|x...xxx|xxxxxxx at (7,3)
  _011: a rectangle with size (2,3) and color orange and mask xxx|.x. at (5,0)
  _0111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,0)
  _01111: a rectangle with size (1,3) and color yellow and mask Full at (2,7)
diff: 
delta: (0,9)=2  (1,0)=2  (4,9)=2  (5,5)=2  (5,7)=2 
! 20 wrong pixels (generated / expected)

TEST 228f6490.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 4818.3 bits (4818.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-356] Checking task 22eb0ac0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7341.0 = 7356.6
DL output with Mo: L = 15.6 + 13360.6 = 13376.2
DL input+output M: L = 31.2 + 20701.6 = 20732.8

# learning a model for train pairs
2.000	
1.679	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.521	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.475	OUT DEF: ^.size=^.size
1.444	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.388	OUT OBJECT at ^.layer_00: ^.layer_0
1.357	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.325	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.294	IN  OBJECT at ^.layer_001: a point with color ? at (?,?)
1.237	OUT OBJECT at ^.layer_011: ^.layer_01
1.205	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.172	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.115	OUT OBJECT at ^.layer_0111: ^.layer_0111
1.081	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.044	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _001: a point with color ? at (?,?)
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 173.4 + 5264.9 = 5438.3
DL output with Mo: L = 92.6 + 3990.4 = 4083.0
DL input+output M: L = 266.0 + 9255.3 = 9521.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (1,0)
  _001: a point with color pink at (1,9)
  _0: a point with color cyan at (3,0)
  _01: a point with color brown at (3,9)
  _011: a point with color yellow at (5,0)
  _0111: a point with color pink at (7,0)
  _01111: a point with color yellow at (5,9)
  _011111: a point with color cyan at (7,9)
diff: 
delta:
   (157.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color cyan at (3,0)
  _0: a rectangle with size (1,10) and color yellow and mask Full at (5,0)
  _01: a rectangle with size (1,1) and color brown and mask Full at (1,0)
  _011: a point with color brown at (3,9)
  _0111: a point with color pink at (7,0)
diff: 
delta: (1,9)=6  (7,9)=8 
   (115.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (1,0)
  _001: a point with color pink at (1,9)
  _0: a point with color cyan at (3,0)
  _01: a point with color brown at (3,9)
  _011: a point with color yellow at (5,0)
  _0111: a point with color yellow at (5,9)
  _01111: a point with color pink at (7,0)
  _011111: a point with color cyan at (7,9)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color brown at (1,0)
  _001: a point with color pink at (1,9)
  _0: a point with color cyan at (3,0)
  _01: a point with color brown at (3,9)
  _011: a point with color yellow at (5,0)
  _0111: a point with color pink at (7,0)
  _01111: a point with color yellow at (5,9)
  _011111: a point with color cyan at (7,9)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color cyan at (1,0)
  _001: a point with color cyan at (1,9)
  _0: a point with color yellow at (3,0)
  _01: a point with color red at (3,9)
  _011: a point with color green at (5,0)
  _0111: a point with color yellow at (5,9)
  _01111: a point with color blue at (7,0)
  _011111: a point with color blue at (7,9)
diff: 
delta: (9,0)=2  (9,9)=3 
   (210.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (3,0)
  _0: a rectangle with size (1,10) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (1,10) and color blue and mask Full at (7,0)
  _011: a point with color red at (3,9)
  _0111: a point with color yellow at (5,9)
diff: 
delta: (5,0)=3  (9,0)=2  (9,9)=3 
   (148.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color cyan at (1,0)
  _001: a point with color cyan at (1,9)
  _0: a point with color yellow at (3,0)
  _01: a point with color red at (3,9)
  _011: a point with color green at (5,0)
  _0111: a point with color yellow at (5,9)
  _01111: a point with color blue at (7,0)
  _011111: a point with color blue at (7,9)
diff: 
delta: (9,0)=2  (9,9)=3 
! 25 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (1,0)
  _001: a point with color cyan at (1,9)
  _0: a point with color green at (3,0)
  _01: a point with color yellow at (3,9)
  _011: a point with color grey at (5,0)
  _0111: a point with color green at (5,9)
  _01111: a point with color cyan at (7,0)
  _011111: a point with color red at (7,9)
diff: 
delta:
   (157.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (3,0)
  _0: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,9)
  _011: a point with color yellow at (3,9)
  _0111: a point with color green at (5,9)
diff: 
delta: (5,0)=5# (7,0)=8  (7,9)=2 
   (134.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (1,0)
  _001: a point with color cyan at (1,9)
  _0: a point with color green at (3,0)
  _01: a point with color yellow at (3,9)
  _011: a point with color grey at (5,0)
  _0111: a point with color green at (5,9)
  _01111: a point with color cyan at (7,0)
  _011111: a point with color red at (7,9)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (1,0)
  _001: a point with color cyan at (1,9)
  _0: a point with color green at (3,0)
  _01: a point with color yellow at (3,9)
  _011: a point with color grey at (5,0)
  _0111: a point with color cyan at (7,0)
  _01111: a point with color green at (5,9)
  _011111: a point with color red at (7,9)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 22eb0ac0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (1,0)
  _001: a point with color red at (1,9)
  _0: a point with color green at (3,0)
  _01: a point with color green at (3,9)
  _011: a point with color red at (5,0)
  _0111: a point with color brown at (5,9)
  _01111: a point with color pink at (7,0)
  _011111: a point with color pink at (7,9)
diff: 
delta: (9,0)=9# (9,9)=4 
! 26 wrong pixels (generated / expected)

TEST 22eb0ac0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.4 sec (23.4 sec/task)
bits-train-error = 3990.4 bits (3990.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-355] Checking task 234bbc79.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10802.4 = 10818.0
DL output with Mo: L = 15.6 + 10627.5 = 10643.2
DL input+output M: L = 31.2 + 21430.0 = 21461.2

# learning a model for train pairs
2.000	
1.710	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.528	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.388	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.302	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.231	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.172	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.139	OUT DEF: ^.size.j=^.size.j - area(^.layer_01.shape)
1.108	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.077	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.042	IN  OBJECT at ^.layer_0110: a point with color ? at (?,?)
1.018	OUT DEF: ^.size.i=^.size.i
0.997	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.j
0.976	IN  DEF: ^.layer_01111.shape.color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j - area(^.layer_01.shape)) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color grey at (?,?)

DL input  with Mi: L = 174.0 + 6296.4 = 6470.4
DL output with Mo: L = 149.2 + 3871.3 = 4020.5
DL input+output M: L = 323.2 + 10167.7 = 10490.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _0110: a point with color grey at (0,1)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,3)
  _0111: a point with color blue at (1,4)
  _01111: a point with color grey at (1,6)
diff: 
delta:
   (145.4 bits)
data: a background with size (3,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,4)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _011: a rectangle with size (2,2) and color blue and mask xx|.x at (0,2)
diff: 
delta:
   (93.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _0110: a point with color grey at (0,1)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,3)
  _0111: a point with color blue at (1,4)
  _01111: a point with color grey at (1,6)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 234bbc79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _0110: a point with color blue at (0,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,3)
  _0111: a point with color grey at (2,1)
  _01111: a point with color grey at (2,7)
diff: 
delta:
   (153.7 bits)
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask .xxx|xx.. at (1,5)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,2)
  _011: a rectangle with size (2,2) and color red and mask xx|.x at (1,0)
diff: 
delta:
   (99.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask xxx|x.. at (1,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _0110: a point with color blue at (0,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (0,3)
  _0111: a point with color grey at (2,1)
  _01111: a point with color grey at (2,7)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 234bbc79.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (1,2) and color pink and mask Full at (2,9)
  _0111: a point with color grey at (1,4)
  _01111: a point with color grey at (2,2)
diff: 
delta: (2,8)=5#
   (167.9 bits)
data: a background with size (3,9) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask ..x|xxx at (1,3)
  _011: a rectangle with size (1,3) and color pink and mask Full at (1,6)
diff: 
delta:
   (100.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (1,5)
  _0110: a point with color grey at (0,6)
  _011: a rectangle with size (1,2) and color pink and mask Full at (2,9)
  _0111: a point with color grey at (1,4)
  _01111: a point with color grey at (2,2)
diff: 
delta: (2,8)=5#
! 14 wrong pixels (generated / expected)

TRAIN 234bbc79.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _0110: a point with color grey at (0,2)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,4)
  _0111: a point with color red at (1,5)
  _01111: a point with color grey at (1,7)
diff: 
delta:
   (162.6 bits)
data: a background with size (3,8) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xx.xx|.xxx. at (0,3)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,0)
diff: 
delta:
   (93.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|x. at (0,8)
  _0110: a point with color grey at (0,2)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,4)
  _0111: a point with color red at (1,5)
  _01111: a point with color grey at (1,7)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 234bbc79.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (0,4)
  _0110: a point with color grey at (0,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,10)
  _0111: a point with color grey at (0,3)
  _01111: a point with color grey at (0,7)
diff: 
delta: (0,9)=5# (1,6)=5# (1,7)=3  (2,4)=5#
! size mismatch, 3x9 instead of 3x8

TEST 234bbc79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 3871.3 bits (3871.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-354] Checking task 23581191.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1482.8 = 1498.4
DL output with Mo: L = 15.6 + 16377.1 = 16392.8
DL input+output M: L = 31.2 + 17859.9 = 17891.1

# learning a model for train pairs
2.000	
1.747	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.504	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.377	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.152	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.032	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.959	IN  DEF: ^.layer_0.shape.color=cyan
0.885	IN  DEF: ^.layer_01.shape.color=orange
0.851	IN  DEF: ^.color=black
0.828	OUT DEF: ^.size=^.size
0.816	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.805	OUT DEF: ^.layer_01.shape.size.j=^.size.j
0.794	OUT DEF: ^.layer_011.shape.size.i=^.size.i
0.783	OUT DEF: ^.layer_0111.shape.size.i=^.size.i
0.773	OUT OBJECT at ^.layer_010: a point with color ? at (?,?)
0.760	OUT DEF: ^.layer_010.pos=corner(^.layer_0.pos, ^.layer_01.pos)
0.749	OUT OBJECT at ^.layer_00: a point with color ? at (?,?)
0.737	OUT DEF: ^.layer_00.pos=corner(^.layer_01.pos, ^.layer_0.pos)
0.731	OUT DEF: ^.layer_0.pos.j='0
0.724	OUT DEF: ^.layer_01.pos.j='0
0.718	OUT DEF: ^.layer_011.pos.i='0
0.711	OUT DEF: ^.layer_00.shape.color=red
0.704	OUT DEF: ^.layer_0.shape.color=orange
0.697	OUT DEF: ^.layer_010.shape.color=red
0.691	OUT DEF: ^.layer_0111.pos.i='0
0.684	OUT DEF: ^.layer_01.shape.color=cyan
0.677	OUT DEF: ^.layer_011.shape.color=cyan
0.671	OUT DEF: ^.layer_0111.shape.color=orange
0.664	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i
0.658	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.j
0.652	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j
0.646	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.i
0.642	OUT DEF: ^.layer_0.shape.size.i=1
0.638	OUT DEF: ^.layer_0.shape.mask=Full
0.634	OUT DEF: ^.layer_01.shape.size.i=1
0.630	OUT DEF: ^.layer_01.shape.mask=Full
0.626	OUT DEF: ^.layer_011.shape.size.j=1
0.622	OUT DEF: ^.layer_011.shape.mask=Full
0.618	OUT DEF: ^.layer_0111.shape.size.j=1
0.614	OUT DEF: ^.layer_0111.shape.mask=Full
0.611	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color red at corner(^.layer_01.pos, ^.layer_0.pos)
  _0: a rectangle with size (1,^.size.j) and color orange and mask Full at (^.layer_01.pos.i,'0)
  _010: a point with color red at corner(^.layer_0.pos, ^.layer_01.pos)
  _01: a rectangle with size (1,^.size.j) and color cyan and mask Full at (^.layer_0.pos.i,'0)
  _011: a rectangle with size (^.size.i,1) and color cyan and mask Full at ('0,^.layer_0.pos.j)
  _0111: a rectangle with size (^.size.i,1) and color orange and mask Full at ('0,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color orange at (?,?)

DL input  with Mi: L = 60.4 + 825.8 = 886.2
DL output with Mo: L = 313.5 + 0.0 = 313.5
DL input+output M: L = 373.9 + 825.8 = 1199.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (2,2)
  _01: a point with color orange at (6,6)
diff: 
delta:
   (41.3 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (6,2)
  _0: a rectangle with size (1,9) and color orange and mask Full at (6,0)
  _010: a point with color red at (2,6)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _0111: a rectangle with size (9,1) and color orange and mask Full at (0,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (2,2)
  _01: a point with color orange at (6,6)
diff: 
delta:
correct output grid

TRAIN 23581191.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,3)
  _01: a point with color orange at (7,6)
diff: 
delta:
   (41.3 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color red at (7,3)
  _0: a rectangle with size (1,9) and color orange and mask Full at (7,0)
  _010: a point with color red at (1,6)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,3)
  _0111: a rectangle with size (9,1) and color orange and mask Full at (0,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,3)
  _01: a point with color orange at (7,6)
diff: 
delta:
correct output grid

TRAIN 23581191.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color cyan at (1,4)
  _01: a point with color orange at (6,1)
diff: 
delta:
correct output grid

TEST 23581191.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 7.5 sec (7.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-353] Checking task 239be575.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 27736.2 = 27751.8
DL output with Mo: L = 15.6 + 741.3 = 757.0
DL input+output M: L = 31.2 + 28477.5 = 28508.8

# learning a model for train pairs
2.000	
1.737	OUT DEF: ^.size.i=1
1.473	OUT DEF: ^.size.j=1
1.225	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.048	OUT DEF: ^.color=^.layer_0.shape.color

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 20805.9 = 20854.8
DL output with Mo: L = 22.3 + 202.5 = 224.8
DL input+output M: L = 71.1 + 21008.5 = 21079.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask ...x.|...xx|..xx.|xxx..|..x.. at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=8  (0,4)=8  (1,2)=8  (2,4)=8  (4,0)=8  (4,1)=8 
   (275.6 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask ...x.|...xx|..xx.|xxx..|..x.. at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=8  (0,4)=8  (1,2)=8  (2,4)=8  (4,0)=8  (4,1)=8 
correct output grid

TRAIN 239be575.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask ..xxx|.xx..|.x...|x.... at (1,1)
diff: 
delta: (0,1)=8  (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (2,5)=2  (2,6)=2  (3,5)=2  (3,6)=2  (4,4)=8 
   (316.1 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask ..xxx|.xx..|.x...|x.... at (1,1)
diff: 
delta: (0,1)=8  (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (2,5)=2  (2,6)=2  (3,5)=2  (3,6)=2  (4,4)=8 
correct output grid

TRAIN 239be575.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask xx..|.x..|.xxx at (2,1)
diff: 
delta: (0,0)=8  (0,1)=2  (0,2)=2  (0,3)=8  (0,4)=8  (1,1)=2  (1,2)=2  (1,6)=8  (2,5)=8  (3,6)=8  (4,0)=8  (4,5)=2  (4,6)=2  (5,0)=8  (5,5)=2  (5,6)=2 
   (454.1 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask xx..|.x..|.xxx at (2,1)
diff: 
delta: (0,0)=8  (0,1)=2  (0,2)=2  (0,3)=8  (0,4)=8  (1,1)=2  (1,2)=2  (1,6)=8  (2,5)=8  (3,6)=8  (4,0)=8  (4,5)=2  (4,6)=2  (5,0)=8  (5,5)=2  (5,6)=2 
correct output grid

TRAIN 239be575.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (6,7) and color cyan and layers
  _0: a rectangle with size (6,7) and color black and mask ..xx...|x..x...|xxx.x.x|.xxxxxx|x..x.x.|x....x. at (0,0)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=0  (1,4)=2  (1,5)=2  (4,1)=2  (4,2)=2  (5,1)=2  (5,2)=2 
   (328.0 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color cyan and layers
  _0: a rectangle with size (6,7) and color black and mask ..xx...|x..x...|xxx.x.x|.xxxxxx|x..x.x.|x....x. at (0,0)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=0  (1,4)=2  (1,5)=2  (4,1)=2  (4,2)=2  (5,1)=2  (5,2)=2 
correct output grid

TRAIN 239be575.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,2)
diff: 
delta: (0,0)=8  (0,5)=8  (1,5)=8  (2,0)=8  (3,2)=8  (3,5)=8  (4,2)=8  (4,3)=2  (4,4)=2  (4,6)=8  (5,0)=8  (5,3)=2  (5,4)=2  (5,5)=8 
   (388.4 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta: (0,0)=8 
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,2)
diff: 
delta: (0,0)=8  (0,5)=8  (1,5)=8  (2,0)=8  (3,2)=8  (3,5)=8  (4,2)=8  (4,3)=2  (4,4)=2  (4,6)=8  (5,0)=8  (5,3)=2  (5,4)=2  (5,5)=8 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask Even Checkboard at (3,5)
diff: 
delta: (0,0)=8  (0,5)=8  (1,2)=2  (1,3)=2  (1,5)=8  (2,0)=8  (2,2)=2  (2,3)=2  (3,2)=8  (4,2)=8  (4,3)=2  (4,4)=2  (5,0)=8  (5,3)=2  (5,4)=2 
correct output grid

TRAIN 239be575.json/5: 1 2nd (SUCCESS)

## instance 6

> Input and output best reading:
data: a background with size (6,6) and color cyan and layers
  _0: a rectangle with size (6,6) and color black and mask .xx...|.x...x|xxxx.x|...x.x|..xxx.|...x.x at (0,0)
diff: 
delta: (0,3)=2  (0,4)=2  (1,3)=2  (1,4)=2  (3,0)=2  (3,1)=2  (4,0)=2  (4,1)=2  (5,0)=0 
   (318.5 bits)
data: a background with size (1,1) and color black and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color cyan and layers
  _0: a rectangle with size (6,6) and color black and mask .xx...|.x...x|xxxx.x|...x.x|..xxx.|...x.x at (0,0)
diff: 
delta: (0,3)=2  (0,4)=2  (1,3)=2  (1,4)=2  (3,0)=2  (3,1)=2  (4,0)=2  (4,1)=2  (5,0)=0 
correct output grid

TRAIN 239be575.json/6: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color cyan and layers
  _0: a rectangle with size (8,6) and color black and mask ....x.|..x.xx|..xxx.|x...xx|.x.xx.|xx...x|.xx..x|x.xxx. at (0,0)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx..|.xxx|x.x.|..x. at (2,0)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=8  (0,3)=8  (0,5)=8  (1,0)=2  (1,1)=2  (1,3)=8  (2,5)=8  (4,5)=8  (5,3)=2  (5,4)=2  (6,0)=8  (6,3)=2  (6,4)=2  (7,1)=8  (7,5)=8 
correct output grid

TEST 239be575.json/1: 1 2nd (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|x.. at (1,1)
diff: 
delta: (0,1)=8  (1,4)=2  (1,5)=2  (2,4)=2  (2,5)=2  (3,5)=8  (4,3)=8  (5,0)=8  (5,1)=2  (5,2)=2  (5,5)=8  (6,1)=2  (6,2)=2  (7,1)=8  (7,3)=8  (7,4)=8 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,4)
diff: 
delta: (0,1)=8  (1,3)=8  (2,1)=8  (2,2)=8  (2,3)=8  (3,1)=8  (3,5)=8  (4,3)=8  (5,0)=8  (5,1)=2  (5,2)=2  (5,5)=8  (6,1)=2  (6,2)=2  (7,1)=8  (7,3)=8  (7,4)=8 
! 1 wrong pixels (generated / expected)

TEST 239be575.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 202.5 bits (202.5 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.92
acc-test-micro = 0.50 tasks (50.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.25

=====================================
[-352] Checking task 23b5c85d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 117930.2 = 117945.8
DL output with Mo: L = 15.6 + 1059.0 = 1074.6
DL input+output M: L = 31.2 + 118989.2 = 119020.4

# learning a model for train pairs
2.000	
1.461	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.237	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.970	OUT DEF: ^.size.j=^.layer_0.shape.size.i / 2
0.969	IN  DEF: ^.layer_01.shape.mask=Full
0.968	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.layer_0.shape.size.i / 2) and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 27886.8 = 27967.1
DL output with Mo: L = 35.7 + 749.5 = 785.2
DL input+output M: L = 116.1 + 28636.3 = 28752.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask xxxxxx|xxxxxx|xxxxxx|xxxxxx|xx...x|xx...x at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
diff: 
delta:
   (114.1 bits)
data: a background with size (3,3) and color cyan and layers
diff: 
delta:
   (15.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (6,6) and color red and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x1 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask xxxxxx|xxxxxx|xxxxxx|xxxxxx|xx...x|xx...x at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
diff: 
delta:
! size mismatch, 10x3 instead of 3x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
diff: 
delta: (5,1)=2  (5,2)=2  (5,6)=2  (6,1)=2  (6,2)=2  (6,6)=2 
! size mismatch, 10x2 instead of 3x3

TRAIN 23b5c85d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color cyan and mask Full at (2,12)
  _01: a rectangle with size (9,8) and color green and mask Full at (3,1)
diff: 
delta: (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (12,4)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (13,4)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (14,4)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
   (1727.7 bits)
data: a background with size (2,3) and color blue and layers
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (9,8) and color green and mask Full at (3,1)
  _01: a rectangle with size (7,7) and color cyan and mask Full at (2,12)
diff: 
delta: (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (12,4)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (13,4)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (14,4)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x4 instead of 2x3
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color cyan and mask Full at (2,12)
  _01: a rectangle with size (9,8) and color green and mask Full at (3,1)
diff: 
delta: (3,10)=4  (3,11)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (4,10)=4  (4,11)=4  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=4  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=4  (5,15)=4  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=4  (6,15)=4  (10,4)=2  (10,5)=2  (10,6)=2  (10,7)=2  (10,8)=2  (10,9)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,7)=2  (11,8)=2  (11,9)=2  (12,4)=2  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (13,4)=2  (13,5)=2  (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (14,4)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,9)=2  (15,14)=1  (15,15)=1  (15,16)=1  (16,14)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x3 instead of 2x3

TRAIN 23b5c85d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (0,9)
  _01: a rectangle with size (9,4) and color green and mask Full at (1,2)
diff: 
delta: (5,5)=6  (5,6)=6  (6,5)=6  (6,6)=6  (7,5)=6  (7,6)=6 
   (248.8 bits)
data: a background with size (3,2) and color pink and layers
diff: 
delta:
   (15.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (9,4) and color green and mask Full at (1,2)
  _01: a rectangle with size (4,3) and color red and mask Full at (0,9)
diff: 
delta: (5,5)=6  (5,6)=6  (6,5)=6  (6,6)=6  (7,5)=6  (7,6)=6 
! size mismatch, 10x4 instead of 3x2
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (0,9)
  _01: a rectangle with size (9,4) and color green and mask Full at (1,2)
diff: 
delta: (5,5)=6  (5,6)=6  (6,5)=6  (6,6)=6  (7,5)=6  (7,6)=6 
! size mismatch, 10x2 instead of 3x2

TRAIN 23b5c85d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (8,13) and color red and mask xxxxxxxxxxxxx|xxxxxxxxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxxxx.......x at (2,1)
  _01: a rectangle with size (4,7) and color green and mask Full at (9,6)
diff: 
delta: (4,3)=7# (4,4)=7# (4,5)=7# (4,6)=7# (5,3)=7# (5,4)=7# (5,5)=7# (5,6)=7# (6,3)=7# (6,4)=7# (6,5)=7# (6,6)=7#
   (490.8 bits)
data: a background with size (3,4) and color orange and layers
diff: 
delta:
   (15.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (4,7) and color green and mask Full at (9,6)
  _01: a rectangle with size (8,13) and color red and mask Full at (2,1)
diff: 
delta: (4,3)=7# (4,4)=7# (4,5)=7# (4,6)=7# (5,3)=7# (5,4)=7# (5,5)=7# (5,6)=7# (6,3)=7# (6,4)=7# (6,5)=7# (6,6)=7#
! size mismatch, 10x2 instead of 3x4
>> Trial 2
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (8,13) and color red and mask xxxxxxxxxxxxx|xxxxxxxxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xx....xxxxxxx|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxxxx.......x at (2,1)
  _01: a rectangle with size (4,7) and color green and mask Full at (9,6)
diff: 
delta: (4,3)=7# (4,4)=7# (4,5)=7# (4,6)=7# (5,3)=7# (5,4)=7# (5,5)=7# (5,6)=7# (6,3)=7# (6,4)=7# (6,5)=7# (6,6)=7#
! size mismatch, 10x4 instead of 3x4

TRAIN 23b5c85d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (4,7) and color pink and mask Full at (11,4)
  _01: a rectangle with size (7,8) and color blue and mask Full at (2,1)
diff: 
delta: (3,11)=4  (3,12)=4  (4,11)=4  (4,12)=4 
   (207.3 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (7,8) and color blue and mask Full at (2,1)
  _01: a rectangle with size (4,7) and color pink and mask Full at (11,4)
diff: 
delta: (3,11)=4  (3,12)=4  (4,11)=4  (4,12)=4 
! size mismatch, 10x3 instead of 2x2
>> Trial 2
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (4,7) and color pink and mask Full at (11,4)
  _01: a rectangle with size (7,8) and color blue and mask Full at (2,1)
diff: 
delta: (3,11)=4  (3,12)=4  (4,11)=4  (4,12)=4 
! size mismatch, 10x2 instead of 2x2

TRAIN 23b5c85d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (11,8) and color yellow and mask Full at (3,9)
  _01: a rectangle with size (6,6) and color blue and mask Full at (2,2)
diff: 
delta: (9,7)=6  (9,8)=6  (9,9)=6  (10,7)=6  (10,8)=6  (10,9)=6  (11,7)=6  (11,8)=6  (11,9)=6  (13,2)=3  (13,3)=3  (13,4)=3  (13,5)=3  (13,6)=3  (14,2)=3  (14,3)=3  (14,4)=3  (14,5)=3  (14,6)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=3  (15,6)=3  (16,2)=3  (16,3)=3  (16,4)=3  (16,5)=3  (16,6)=3 
! size mismatch, 10x5 instead of 3x3
>> Trial 2
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Full at (2,2)
  _01: a rectangle with size (11,8) and color yellow and mask Full at (3,9)
diff: 
delta: (9,7)=6  (9,8)=6  (9,9)=6  (10,7)=6  (10,8)=6  (10,9)=6  (11,7)=6  (11,8)=6  (11,9)=6  (13,2)=3  (13,3)=3  (13,4)=3  (13,5)=3  (13,6)=3  (14,2)=3  (14,3)=3  (14,4)=3  (14,5)=3  (14,6)=3  (15,2)=3  (15,3)=3  (15,4)=3  (15,5)=3  (15,6)=3  (16,2)=3  (16,3)=3  (16,4)=3  (16,5)=3  (16,6)=3 
! size mismatch, 10x3 instead of 3x3

TEST 23b5c85d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 749.5 bits (749.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-351] Checking task 253bf280.json: 8 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7600.3 = 7615.9
DL output with Mo: L = 15.6 + 18717.0 = 18732.6
DL input+output M: L = 31.2 + 26317.3 = 26348.5

# learning a model for train pairs
2.000	
1.647	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.555	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.477	OUT DEF: ^.size=^.size
1.418	IN  DEF: ^.layer_0.shape.color=cyan
1.392	IN  DEF: ^.color=black
1.378	OUT DEF: ^.layer_0.shape.mask=Full
1.367	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)

DL input  with Mi: L = 38.0 + 6233.3 = 6271.3
DL output with Mo: L = 42.0 + 10144.1 = 10186.1
DL input+output M: L = 80.0 + 16377.4 = 16457.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta: (3,9)=8 
   (57.6 bits)
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (3,3)
diff: 
delta: (3,2)=8  (3,9)=8 
   (81.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta: (3,9)=8 
! 12 wrong pixels (generated / expected)

TRAIN 253bf280.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _0: a point with color cyan at (1,4)
diff: 
delta: (2,8)=8  (6,8)=8  (7,4)=8 
   (110.7 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (2,4)
diff: 
delta: (1,4)=8  (2,8)=8  (3,8)=3  (4,8)=3  (5,8)=3  (6,8)=8  (7,4)=8 
   (209.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a point with color cyan at (1,4)
diff: 
delta: (2,8)=8  (6,8)=8  (7,4)=8 
! 16 wrong pixels (generated / expected)

TRAIN 253bf280.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (1,9)=8  (8,2)=8  (8,7)=8 
   (112.3 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (1,7) and color green and mask Full at (1,2)
diff: 
delta: (1,1)=8  (1,9)=8  (8,2)=8  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=8 
   (238.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (1,9)=8  (8,2)=8  (8,7)=8 
! 18 wrong pixels (generated / expected)

TRAIN 253bf280.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,6) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (7,2)=8 
   (54.6 bits)
data: a background with size (9,6) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (2,2)
diff: 
delta: (1,2)=8  (7,2)=8 
   (78.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,6) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (7,2)=8 
! 11 wrong pixels (generated / expected)

TRAIN 253bf280.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta:
   (20.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta:
   (20.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 253bf280.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (3,4)=8 
   (51.2 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta: (3,4)=8 
   (47.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (3,4)=8 
! 5 wrong pixels (generated / expected)

TRAIN 253bf280.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (7,6) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (3,1)=8  (6,3)=8 
   (77.9 bits)
data: a background with size (7,6) and color black and layers
  _0: a rectangle with size (4,1) and color green and mask Full at (2,3)
diff: 
delta: (1,3)=8  (3,1)=8  (6,3)=8 
   (101.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (3,1)=8  (6,3)=8 
! 11 wrong pixels (generated / expected)

TRAIN 253bf280.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (4,6)=8  (4,10)=8  (5,1)=8  (9,3)=8 
   (138.3 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (7,1) and color green and mask Full at (2,3)
diff: 
delta: (1,3)=8  (4,6)=8  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=8  (5,1)=8  (9,3)=8 
   (238.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (1,3)
diff: 
delta: (4,6)=8  (4,10)=8  (5,1)=8  (9,3)=8 
! 19 wrong pixels (generated / expected)

TRAIN 253bf280.json/8: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (1,10)=8  (5,6)=8  (5,12)=8  (7,1)=8  (9,8)=8  (10,1)=8 
! 25 wrong pixels (generated / expected)

TEST 253bf280.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 10144.1 bits (10144.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-350] Checking task 25d487eb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9603.7 = 9619.3
DL output with Mo: L = 15.6 + 15788.8 = 15804.4
DL input+output M: L = 31.2 + 25392.5 = 25423.8

# learning a model for train pairs
2.000	
1.347	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT OBJECT at ^.layer_0: ^.layer_0
0.461	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.420	OUT DEF: ^.size=^.size
0.391	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.380	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.369	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.361	IN  DEF: ^.color=black
0.355	OUT DEF: ^.layer_01.shape.mask=Full
0.350	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 68.1 + 2917.2 = 2985.3
DL output with Mo: L = 45.5 + 586.2 = 631.7
DL input+output M: L = 113.6 + 3503.4 = 3617.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _01: a point with color blue at (4,3)
diff: 
delta:
   (91.9 bits)
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _01: a rectangle with size (1,12) and color blue and mask Full at (4,3)
diff: 
delta:
   (19.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask x..|xx.|.xx|xx.|x.. at (2,3)
  _01: a point with color blue at (4,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _01: a point with color red at (3,4)
diff: 
delta: (4,3)=1  (4,4)=2  (4,5)=2  (5,4)=2 
! 18 wrong pixels (generated / expected)

TRAIN 25d487eb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _01: a point with color green at (8,6)
diff: 
delta:
   (106.9 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _01: a rectangle with size (9,1) and color green and mask Full at (0,6)
diff: 
delta:
   (18.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,7) and color cyan and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (5,3)
  _01: a point with color green at (8,6)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full (and Border) at (7,4)
  _01: a point with color cyan at (5,6)
diff: 
delta: (6,5)=8  (6,6)=8  (6,7)=8  (7,6)=8  (8,3)=8  (8,6)=3  (8,9)=8 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full (and Border) at (7,4)
  _01: a point with color cyan at (6,5)
diff: 
delta: (5,6)=8  (6,6)=8  (6,7)=8  (7,6)=8  (8,3)=8  (8,6)=3  (8,9)=8 
! 14 wrong pixels (generated / expected)

TRAIN 25d487eb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _01: a point with color red at (2,4)
diff: 
delta:
   (93.0 bits)
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _01: a rectangle with size (13,1) and color red and mask Full at (2,4)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xx.xx|.xxx.|..x.. at (2,2)
  _01: a point with color red at (2,4)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,2)
  _01: a point with color green at (3,3)
diff: 
delta: (2,4)=2  (3,4)=3  (3,5)=3  (4,4)=3 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,2)
  _01: a point with color green at (3,4)
diff: 
delta: (2,4)=2  (3,3)=3  (3,5)=3  (4,4)=3 
! 19 wrong pixels (generated / expected)

TRAIN 25d487eb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xxxxx.|xxx.xxx at (11,1)
  _01: a point with color cyan at (14,4)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (2,5) and color yellow and mask Full (and Border) at (13,2)
  _01: a point with color yellow at (11,4)
diff: 
delta: (12,3)=4  (12,4)=4  (12,5)=4  (13,4)=4  (14,1)=4  (14,4)=8  (14,7)=4 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (2,5) and color yellow and mask Full (and Border) at (13,2)
  _01: a point with color yellow at (12,3)
diff: 
delta: (11,4)=4  (12,4)=4  (12,5)=4  (13,4)=4  (14,1)=4  (14,4)=8  (14,7)=4 
! 20 wrong pixels (generated / expected)

TEST 25d487eb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 586.2 bits (586.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-349] Checking task 25d8a9c8.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5806.8 = 5822.4
DL output with Mo: L = 15.6 + 3413.6 = 3429.2
DL input+output M: L = 31.2 + 9220.4 = 9251.6

# learning a model for train pairs
2.000	
1.510	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.245	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.092	OUT DEF: ^.size=^.size
0.969	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.876	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.800	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.735	OUT DEF: ^.layer_0.shape.color=grey
0.696	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.667	OUT DEF: ^.color=black
0.645	IN  DEF: ^.layer_0.shape.mask=Full
0.637	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j - area(^.layer_01.shape)
0.613	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
0.590	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.j - area(^.layer_01.shape),^.layer_0.shape.size.j) and color grey and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 101.0 + 3211.2 = 3312.2
DL output with Mo: L = 71.4 + 0.0 = 71.4
DL input+output M: L = 172.4 + 3211.2 = 3383.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
  _010: a point with color green at (1,1)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,1)
diff: 
delta:
   (80.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
  _010: a point with color green at (1,1)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,1)
diff: 
delta:
correct output grid

TRAIN 25d8a9c8.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _010: a point with color orange at (0,0)
  _01: a rectangle with size (1,2) and color orange and mask Full at (2,1)
diff: 
delta:
   (80.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _010: a point with color orange at (0,0)
  _01: a rectangle with size (1,2) and color orange and mask Full at (2,1)
diff: 
delta:
correct output grid

TRAIN 25d8a9c8.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
  _010: a point with color red at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,2)
diff: 
delta:
   (78.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
  _010: a point with color red at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN 25d8a9c8.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _010: a point with color yellow at (0,2)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (80.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _010: a point with color yellow at (0,2)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN 25d8a9c8.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _010: a point with color green at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta: (1,2)=3 
! 3 wrong pixels (generated / expected)

TEST 25d8a9c8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-348] Checking task 25ff71a9.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3348.5 = 3364.1
DL output with Mo: L = 15.6 + 3348.5 = 3364.1
DL input+output M: L = 31.2 + 6697.0 = 6728.2

# learning a model for train pairs
2.000	
1.551	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.838	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.682	OUT DEF: ^.size=^.size
0.635	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.591	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i + 1
0.561	IN  DEF: ^.color=black
0.532	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i + 1,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 1708.0 = 1755.9
DL output with Mo: L = 32.9 + 0.0 = 32.9
DL input+output M: L = 80.9 + 1708.0 = 1788.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (39.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
   (39.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
   (45.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,1)
diff: 
delta:
   (45.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,1)
diff: 
delta:
correct output grid

TRAIN 25ff71a9.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta:
correct output grid

TEST 25ff71a9.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
diff: 
delta:
correct output grid

TEST 25ff71a9.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-347] Checking task 264363fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 352420.4 = 352436.0
DL output with Mo: L = 15.6 + 343155.9 = 343171.5
DL input+output M: L = 31.2 + 695576.3 = 695607.5

# learning a model for train pairs
2.000	
1.118	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.381	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.363	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.300	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.293	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.291	OUT DEF: ^.size=^.size
0.288	OUT DEF: ^.layer_0.shape.size=^.size
0.227	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.183	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.168	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.size and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 10419.2 = 10564.3
DL output with Mo: L = 139.4 + 47338.3 = 47477.6
DL input+output M: L = 284.5 + 57757.5 = 58041.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color cyan and layers
  _0: a rectangle with size (15,17) and color blue and mask Full at (1,2)
  _01: a rectangle with size (9,18) and color blue and mask Full at (18,8)
  _011: a rectangle with size (3,3) and color green and mask Even Checkboard at (3,24)
  _0111: a rectangle with size (5,5) and color red and mask +-cross at (2,23)
diff: 
delta: (5,5)=3  (25,17)=3 
   (269.8 bits)
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xx.................xxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxx..................xxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (9,18) and color red and mask .........x........|.........x........|.........x........|.........x........|.........x........|.........x........|.........x........|xxxxxxxxx.xxxxxxxx|.........x........ at (18,8)
  _011: a rectangle with size (1,17) and color red and mask Full at (5,2)
  _0111: a rectangle with size (15,1) and color red and mask Full at (1,5)
diff: 
delta: (4,4)=3  (4,6)=3  (5,5)=3  (6,4)=3  (6,6)=3  (24,16)=3  (24,18)=3  (25,17)=3  (26,16)=3  (26,18)=3 
   (1448.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color cyan and layers
  _0: a rectangle with size (15,17) and color blue and mask Full at (1,2)
  _01: a rectangle with size (9,18) and color blue and mask Full at (18,8)
  _011: a rectangle with size (3,3) and color green and mask Even Checkboard at (3,24)
  _0111: a rectangle with size (5,5) and color red and mask +-cross at (2,23)
diff: 
delta: (5,5)=3  (25,17)=3 
! 900 wrong pixels (generated / expected)

TRAIN 264363fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (13,18) and color red and mask Full at (15,6)
  _01: a rectangle with size (9,17) and color red and mask Full at (5,1)
  _011: a rectangle with size (5,5) and color green and mask ..x..|..x..|xx.xx|..x..|..x.. at (3,22)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (5,24)
diff: 
delta: (7,14)=4  (10,5)=4  (24,16)=4 
   (309.3 bits)
data: a background with size (30,30) and color red and layers
  _0: a rectangle with size (30,30) and color blue and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|x.................xxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxx..................xxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (9,17) and color green and mask ....x........x...|....x........x...|xxxxxxxxxxxxx.xxx|....x........x...|....x........x...|xxxx.xxxxxxxxxxxx|....x........x...|....x........x...|....x........x... at (5,1)
  _011: a rectangle with size (1,18) and color green and mask Full at (24,6)
  _0111: a rectangle with size (13,1) and color green and mask Full at (15,16)
diff: 
delta: (7,14)=4  (10,5)=4  (24,16)=4 
   (1273.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color blue and layers
  _0: a rectangle with size (13,18) and color red and mask Full at (15,6)
  _01: a rectangle with size (9,17) and color red and mask Full at (5,1)
  _011: a rectangle with size (5,5) and color green and mask ..x..|..x..|xx.xx|..x..|..x.. at (3,22)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (5,24)
diff: 
delta: (7,14)=4  (10,5)=4  (24,16)=4 
! 900 wrong pixels (generated / expected)

TRAIN 264363fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color cyan and layers
  _0: a rectangle with size (13,16) and color green and mask Full at (2,11)
  _01: a rectangle with size (15,9) and color green and mask Full at (9,1)
  _011: a rectangle with size (7,10) and color green and mask Full at (16,12)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (25,23)
diff: 
delta: (6,23)=4  (10,15)=4  (12,4)=4  (20,18)=4  (24,24)=5# (25,24)=5# (26,24)=4  (27,24)=5# (28,24)=5#
   (462.9 bits)
data: a background with size (30,30) and color green and layers
  _0: a rectangle with size (30,30) and color cyan and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|xxxxxxxxxxx................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........x................xxx|x.........xxxxxxxxxxxxxxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xx..........xxxxxxxx|x.........xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (15,1) and color grey and mask Full at (9,4)
  _011: a rectangle with size (13,1) and color grey and mask Full at (2,15)
  _0111: a rectangle with size (13,1) and color grey and mask Full at (2,23)
diff: 
delta: (5,22)=6  (5,24)=6  (6,22)=6  (6,23)=4  (6,24)=6  (7,22)=6  (7,24)=6  (9,14)=6  (9,16)=6  (10,14)=6  (10,15)=4  (10,16)=6  (11,3)=6  (11,5)=6  (11,14)=6  (11,16)=6  (12,3)=6  (12,4)=4  (12,5)=6  (13,3)=6  (13,5)=6  (16,18)=5# (17,18)=5# (18,18)=5# (19,17)=6  (19,18)=5# (19,19)=6  (20,17)=6  (20,18)=4  (20,19)=6  (21,17)=6  (21,18)=5# (21,19)=6  (22,18)=5#
   (2011.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color cyan and layers
  _0: a rectangle with size (13,16) and color green and mask Full at (2,11)
  _01: a rectangle with size (15,9) and color green and mask Full at (9,1)
  _011: a rectangle with size (7,10) and color green and mask Full at (16,12)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (25,23)
diff: 
delta: (6,23)=4  (10,15)=4  (12,4)=4  (20,18)=4  (24,24)=5# (25,24)=5# (26,24)=4  (27,24)=5# (28,24)=5#
! 900 wrong pixels (generated / expected)

TRAIN 264363fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color yellow and layers
  _0: a rectangle with size (14,17) and color blue and mask Full at (14,12)
  _01: a rectangle with size (10,12) and color blue and mask Full at (2,3)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (23,1)
  _0111: a rectangle with size (3,3) and color green and mask Full at (22,2)
diff: 
delta: (9,6)=2  (17,23)=2  (23,3)=2  (24,18)=2 
! 900 wrong pixels (generated / expected)

TEST 264363fd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.5 sec (28.5 sec/task)
bits-train-error = 47338.3 bits (47338.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-346] Checking task 272f95fa.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 31713.5 = 31729.1
DL output with Mo: L = 15.6 + 87575.8 = 87591.5
DL input+output M: L = 31.2 + 119289.3 = 119320.5

# learning a model for train pairs
2.000	
1.173	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	OUT OBJECT at ^.layer_0: ^.layer_0
0.575	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.428	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.328	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.263	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.222	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.217	OUT DEF: ^.size=^.size
0.213	IN  DEF: ^.layer_0.shape.color=cyan
0.212	IN  DEF: ^.color=black
0.210	OUT DEF: ^.layer_01111.shape.size.j=^.size.i / 3
0.209	OUT DEF: ^.layer_011111.pos.j='0
0.207	OUT DEF: ^.layer_0111.shape.color=pink
0.206	OUT DEF: ^.layer_011.pos.i='0
0.205	OUT DEF: ^.layer_011.shape.color=red
0.203	OUT DEF: ^.layer_011111.shape.color=yellow
0.202	OUT DEF: ^.layer_011.pos.j=bottom(^.layer_0) / 3
0.201	OUT DEF: ^.layer_0111.pos.j=bottom(^.layer_0) / 3
0.200	OUT DEF: ^.layer_01111.pos.i=bottom(^.layer_0) / 2
0.199	OUT DEF: ^.layer_01.shape.mask=Full
0.198	OUT DEF: ^.layer_011.shape.mask=Full
0.198	OUT DEF: ^.layer_0111.shape.mask=Full
0.197	OUT DEF: ^.layer_01111.shape.mask=Full
0.196	OUT DEF: ^.layer_011111.shape.mask=Full
0.195	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at ('0,bottom(^.layer_0) / 3)
  _0111: a rectangle with size (?,?) and color pink and mask Full at (?,bottom(^.layer_0) / 3)
  _01111: a rectangle with size (?,^.size.i / 3) and color ? and mask Full at (bottom(^.layer_0) / 2,?)
  _011111: a rectangle with size (?,?) and color yellow and mask Full at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 5266.6 = 5316.9
DL output with Mo: L = 274.9 + 2170.7 = 2445.6
DL input+output M: L = 325.2 + 7437.4 = 7762.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
diff: 
delta:
   (318.7 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
  _01: a rectangle with size (4,7) and color green and mask Full at (3,12)
  _011: a rectangle with size (2,6) and color red and mask Full at (0,5)
  _0111: a rectangle with size (4,6) and color pink and mask Full at (3,5)
  _01111: a rectangle with size (10,6) and color blue and mask Full at (8,5)
  _011111: a rectangle with size (4,4) and color yellow and mask Full at (3,0)
diff: 
delta:
   (114.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color cyan and mask ....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|xxxxxxxxxxxxxxxxxxx|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x.......|....x......x....... at (0,0)
diff: 
delta:
! 148 wrong pixels (generated / expected)

TRAIN 272f95fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
diff: 
delta:
   (208.0 bits)
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
  _01: a rectangle with size (4,6) and color blue and mask Full at (8,3)
  _011: a rectangle with size (4,6) and color red and mask Full at (0,3)
  _0111: a rectangle with size (2,6) and color pink and mask Full at (5,3)
  _01111: a rectangle with size (2,4) and color green and mask Full at (5,10)
  _011111: a rectangle with size (2,2) and color yellow and mask Full at (5,0)
diff: 
delta:
   (102.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask ..x......x....|..x......x....|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|xxxxxxxxxxxxxx|..x......x....|..x......x....|..x......x....|..x......x.... at (0,0)
diff: 
delta:
! 72 wrong pixels (generated / expected)

TRAIN 272f95fa.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 272f95fa.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 2170.7 bits (2170.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-345] Checking task 27a28665.json: 7 train, 3 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7860.1 = 7875.7
DL output with Mo: L = 15.6 + 1092.7 = 1108.3
DL input+output M: L = 31.2 + 8952.8 = 8984.0

# learning a model for train pairs
2.000	
1.483	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	OUT DEF: ^.size=^.size - 2
1.045	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size - 2 and color ? and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 3586.3 = 3634.2
DL output with Mo: L = 18.7 + 627.6 = 646.3
DL input+output M: L = 66.6 + 4213.9 = 4280.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
   (54.4 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
   (47.1 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Even Checkboard at (0,0)
diff: 
delta:
   (47.1 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Even Checkboard at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
   (54.4 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
   (54.4 bits)
data: a background with size (1,1) and color green and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
   (54.4 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
   (47.1 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 27a28665.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 27a28665.json/3: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 627.6 bits (627.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-344] Checking task 28bf18c6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4672.3 = 4688.0
DL output with Mo: L = 15.6 + 5313.8 = 5329.4
DL input+output M: L = 31.2 + 9986.1 = 10017.4

# learning a model for train pairs
2.000	
1.405	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.780	OUT DEF: ^.layer_0.pos='(0,0)
0.734	OUT DEF: ^.size.j=^.size.j - 2
0.688	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j * 2
0.652	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.616	OUT DEF: ^.size.i=3
0.584	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.568	IN  DEF: ^.color=black
0.554	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (3,^.size.j - 2) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_0.shape.size.j * 2) and color ^.layer_0.shape.color and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 1872.3 = 1920.3
DL output with Mo: L = 65.9 + 703.7 = 769.6
DL input+output M: L = 113.9 + 2576.0 = 2689.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|.x.|xxx at (1,1)
diff: 
delta:
   (62.2 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xx.xx.|.x..x.|xxxxxx at (0,0)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|.x.|xxx at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,1)
diff: 
delta: (1,1)=8  (1,2)=8  (2,2)=8 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (1,2)
diff: 
delta: (1,1)=8  (3,1)=8  (3,3)=8 
! 8 wrong pixels (generated / expected)

TRAIN 28bf18c6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (5,2)
diff: 
delta:
   (62.2 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color red and mask .x..x.|xxxxxx|xx.xx. at (0,0)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (5,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (6,2)
diff: 
delta: (5,3)=2  (6,4)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (6,2)
diff: 
delta: (5,3)=2  (7,2)=2  (7,3)=2 
! 14 wrong pixels (generated / expected)

TRAIN 28bf18c6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x..|.x. at (1,4)
diff: 
delta:
   (62.8 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask .xx.xx|x..x..|.x..x. at (0,0)
diff: 
delta:
   (24.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x..|.x. at (1,4)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,5)
diff: 
delta: (2,4)=1  (3,5)=1 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,4)
diff: 
delta: (1,5)=1  (1,6)=1  (3,5)=1 
! 8 wrong pixels (generated / expected)

TRAIN 28bf18c6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|x.. at (4,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (5,1)
diff: 
delta: (4,3)=3  (6,1)=3 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (4,3)
diff: 
delta: (5,1)=3  (5,2)=3  (6,1)=3 
! 10 wrong pixels (generated / expected)

TEST 28bf18c6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 703.7 bits (703.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-343] Checking task 28e73c20.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1115.7 = 1131.3
DL output with Mo: L = 15.6 + 64579.1 = 64594.8
DL input+output M: L = 31.2 + 65694.8 = 65726.0

# learning a model for train pairs
2.000	
1.125	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.016	IN  DEF: ^.color=black
1.000	OUT DEF: ^.size=^.size
0.993	OUT DEF: ^.layer_0.shape.size.j=^.size.j - 1
0.986	OUT DEF: ^.layer_0.shape.size.i=^.size.i - 2
0.980	OUT DEF: ^.color=green
0.975	OUT DEF: ^.layer_0.shape.color=black
0.971	OUT DEF: ^.layer_0.pos.j='0
0.967	OUT DEF: ^.layer_0.pos.i=1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: a rectangle with size (^.size.i - 2,^.size.j - 1) and color black and mask ? at (1,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 14.7 + 992.8 = 1007.5
DL output with Mo: L = 91.0 + 4817.7 = 4908.7
DL input+output M: L = 105.8 + 5810.5 = 5916.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
diff: 
delta:
   (17.0 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (4,5) and color black and mask xxxxx|....x|.x..x|.xxxx at (1,0)
diff: 
delta:
   (26.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 28e73c20.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
diff: 
delta:
   (18.6 bits)
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (6,7) and color black and mask xxxxxxx|......x|.xxxx.x|.x..x.x|.x....x|.xxxxxx at (1,0)
diff: 
delta:
   (48.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 28e73c20.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
diff: 
delta:
   (22.3 bits)
data: a background with size (15,15) and color green and layers
  _0: a rectangle with size (13,14) and color black and mask xxxxxxxxxxxxxx|.............x|.xxxxxxxxxxx.x|.x.........x.x|.x.xxxxxxx.x.x|.x.x.....x.x.x|.x.x.xxx.x.x.x|.x.x.x...x.x.x|.x.x.xxxxx.x.x|.x.x.......x.x|.x.xxxxxxxxx.x|.x...........x|.xxxxxxxxxxxxx at (1,0)
diff: 
delta:
   (189.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
diff: 
delta:
! 84 wrong pixels (generated / expected)

TRAIN 28e73c20.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
diff: 
delta:
   (21.4 bits)
data: a background with size (13,13) and color green and layers
  _0: a rectangle with size (11,12) and color black and mask xxxxxxxxxxxx|...........x|.xxxxxxxxx.x|.x.......x.x|.x.xxxxx.x.x|.x.x...x.x.x|.x.x.xxx.x.x|.x.x.....x.x|.x.xxxxxxx.x|.x.........x|.xxxxxxxxxxx at (1,0)
diff: 
delta:
   (139.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
diff: 
delta:
! 60 wrong pixels (generated / expected)

TRAIN 28e73c20.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
diff: 
delta:
   (19.9 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (8,9) and color black and mask xxxxxxxxx|........x|.xxxxxx.x|.x....x.x|.x.x..x.x|.x.xxxx.x|.x......x|.xxxxxxxx at (1,0)
diff: 
delta:
   (78.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 28e73c20.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
diff: 
delta:
! 128 wrong pixels (generated / expected)

TEST 28e73c20.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 4817.7 bits (4817.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-342] Checking task 29623171.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 38787.0 = 38802.6
DL output with Mo: L = 15.6 + 40300.5 = 40316.1
DL input+output M: L = 31.2 + 79087.5 = 79118.7

# learning a model for train pairs
2.000	
1.340	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.588	OUT OBJECT at ^.layer_0: ^.layer_0
0.441	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.352	IN  DEF: ^.layer_0.shape.mask=...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.320	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.301	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.286	OUT DEF: ^.size=^.size
0.276	OUT DEF: ^.layer_01.shape.size=^.size / 3
0.270	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.264	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.258	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.252	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.246	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.239	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.235	IN  DEF: ^.layer_0.shape.color=grey
0.231	OUT DEF: ^.layer_00.pos.j='0
0.227	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.224	OUT DEF: ^.layer_00.shape.mask=Full
0.222	OUT DEF: ^.layer_01.shape.mask=Full
0.220	IN  DEF: ^.color=black
0.218	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,'0)
  _0: ^.layer_0
  _01: a rectangle with size ^.size / 3 and color ^.layer_01.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 314.7 + 7006.0 = 7320.7
DL output with Mo: L = 92.1 + 1090.7 = 1182.8
DL input+output M: L = 406.8 + 8096.7 = 8503.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,6)
  _011: a point with color blue at (1,0)
  _0111: a point with color blue at (1,9)
  _01111: a point with color blue at (5,9)
  _011111: a point with color blue at (8,8)
  _0111111: a point with color blue at (9,1)
  _01111111: a point with color blue at (9,10)
diff: 
delta:
   (186.1 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,11) and color grey and mask Full at (3,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (8,8)
diff: 
delta:
   (36.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,6)
  _011: a point with color blue at (1,0)
  _0111: a point with color blue at (1,9)
  _01111: a point with color blue at (5,9)
  _011111: a point with color blue at (8,8)
  _0111111: a point with color blue at (9,1)
  _01111111: a point with color blue at (9,10)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 29623171.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011: a point with color red at (0,5)
  _0111: a point with color red at (0,8)
  _01111: a point with color red at (1,0)
  _011111: a point with color red at (1,10)
  _0111111: a point with color red at (5,6)
  _01111111: a point with color red at (6,9)
diff: 
delta: (9,0)=2  (9,6)=2  (9,10)=2 
   (264.5 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (4,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,8)
diff: 
delta:
   (36.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011: a point with color red at (0,5)
  _0111: a point with color red at (0,8)
  _01111: a point with color red at (1,0)
  _011111: a point with color red at (1,10)
  _0111111: a point with color red at (5,6)
  _01111111: a point with color red at (6,9)
diff: 
delta: (9,0)=2  (9,6)=2  (9,10)=2 
! 27 wrong pixels (generated / expected)

TRAIN 29623171.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,3) and color green and mask xx.|..x at (9,8)
  _011: a point with color green at (0,0)
  _0111: a point with color green at (0,1)
  _01111: a point with color green at (1,9)
  _011111: a point with color green at (5,1)
  _0111111: a point with color green at (5,5)
  _01111111: a point with color green at (6,4)
diff: 
delta: (9,1)=3  (9,4)=3 
   (250.0 bits)
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,11) and color grey and mask Full at (3,0)
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color green and mask Full at (8,8)
diff: 
delta:
   (36.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,3) and color green and mask xx.|..x at (9,8)
  _011: a point with color green at (0,0)
  _0111: a point with color green at (0,1)
  _01111: a point with color green at (1,9)
  _011111: a point with color green at (5,1)
  _0111111: a point with color green at (5,5)
  _01111111: a point with color green at (6,4)
diff: 
delta: (9,1)=3  (9,4)=3 
! 18 wrong pixels (generated / expected)

TRAIN 29623171.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,2) and color yellow and mask xx|.x|x. at (0,0)
  _011: a point with color yellow at (1,6)
  _0111: a point with color yellow at (1,8)
  _01111: a point with color yellow at (1,9)
  _011111: a point with color yellow at (2,9)
  _0111111: a point with color yellow at (4,9)
  _01111111: a point with color yellow at (5,0)
diff: 
delta: (5,5)=4  (5,8)=4  (5,10)=4  (8,5)=4  (8,10)=4  (9,0)=4  (9,6)=4  (9,9)=4  (10,4)=4  (10,5)=4 
! 13 wrong pixels (generated / expected)

TEST 29623171.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.0 sec (14.0 sec/task)
bits-train-error = 1090.7 bits (1090.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-341] Checking task 29c11459.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1438.1 = 1453.7
DL output with Mo: L = 15.6 + 5844.4 = 5860.0
DL input+output M: L = 31.2 + 7282.4 = 7313.7

# learning a model for train pairs
2.000	
1.695	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.383	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.271	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.148	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.085	OUT DEF: ^.size=^.size
1.048	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.014	IN  DEF: ^.color=black
0.983	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.951	OUT DEF: ^.layer_011.pos=average(^.layer_0.pos, ^.layer_01.pos)
0.925	OUT DEF: ^.layer_0.shape.size.j=^.size.i
0.900	OUT DEF: ^.layer_01.shape.size.j=^.size.i
0.881	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.861	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.842	OUT DEF: ^.layer_011.shape.color=grey
0.826	OUT DEF: ^.layer_01.pos.j=^.size.i + 1
0.810	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.799	OUT DEF: ^.layer_0.shape.size.i=1
0.788	OUT DEF: ^.layer_0.shape.mask=Full
0.776	OUT DEF: ^.layer_01.shape.size.i=1
0.765	OUT DEF: ^.layer_01.shape.mask=Full
0.756	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.i) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _01: a rectangle with size (1,^.size.i) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i,^.size.i + 1)
  _011: a point with color grey at average(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 1006.9 = 1062.7
DL output with Mo: L = 148.7 + 0.0 = 148.7
DL input+output M: L = 204.4 + 1006.9 = 1211.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,11) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color red at (1,10)
diff: 
delta:
   (50.3 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (1,6)
  _011: a point with color grey at (1,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color red at (1,10)
diff: 
delta:
correct output grid

TRAIN 29c11459.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,11) and color black and layers
  _0: a point with color green at (3,0)
  _01: a point with color orange at (3,10)
diff: 
delta:
   (50.3 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (3,0)
  _01: a rectangle with size (1,5) and color orange and mask Full at (3,6)
  _011: a point with color grey at (3,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color green at (3,0)
  _01: a point with color orange at (3,10)
diff: 
delta:
correct output grid

TRAIN 29c11459.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,11) and color black and layers
  _0: a point with color yellow at (1,0)
  _01: a point with color cyan at (1,10)
diff: 
delta: (4,0)=6  (4,10)=9#
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,11) and color black and layers
  _0: a point with color cyan at (1,10)
  _01: a point with color yellow at (1,0)
diff: 
delta: (4,0)=6  (4,10)=9#
! 20 wrong pixels (generated / expected)

TEST 29c11459.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-340] Checking task 29ec7d0e.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 234605.6 = 234621.2
DL output with Mo: L = 15.6 + 218641.3 = 218656.9
DL input+output M: L = 31.2 + 453246.9 = 453278.1

# learning a model for train pairs
2.000	
1.900	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.879	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.854	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.848	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.842	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.837	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.832	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.827	IN  OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.822	OUT DEF: ^.size=^.size
1.818	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 240.1 + 194934.9 = 195175.1
DL output with Mo: L = 75.3 + 215608.3 = 215683.5
DL input+output M: L = 315.4 + 410543.2 = 410858.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (3,4) and color black and mask Full at (10,0)
  _01: a rectangle with size (2,3) and color black and mask Full (and Border) at (5,11)
  _011: a rectangle with size (3,2) and color black and mask Full (and Border) at (0,3)
  _0111: a rectangle with size (2,2) and color black and mask Full (and Border) at (2,10)
  _01111: a rectangle with size (2,2) and color black and mask Full (and Border) at (4,6)
  _011111: a rectangle with size (11,1) and color yellow and mask Full at (3,1)
  _0111111: a rectangle with size (2,7) and color red and mask Full (and Border) at (2,7)
diff: 
delta: (1,1)=2  (1,2)=3  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,11)=2  (1,12)=3  (1,13)=4  (1,14)=5# (1,16)=2  (1,17)=3  (2,1)=3  (2,2)=5# (2,6)=3  (2,7)=5# (2,9)=4  (2,12)=5# (2,14)=4  (2,16)=3  (2,17)=5# (3,2)=2  (3,3)=5# (3,4)=3  (3,6)=4  (3,8)=5# (3,9)=3  (3,13)=5# (3,14)=3  (3,16)=4  (3,17)=2  (4,1)=5# (4,2)=4  (4,3)=3  (4,4)=2  (4,8)=3  (4,9)=2  (4,11)=5# (4,12)=4  (4,13)=3  (4,14)=2  (4,16)=5# (4,17)=4  (5,1)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,6)=2  (6,7)=3  (6,8)=4  (6,9)=5# (6,14)=5# (6,16)=2  (6,17)=3  (7,1)=3  (7,2)=5# (7,3)=2  (7,4)=4  (7,6)=3  (7,7)=5# (7,8)=2  (7,9)=4  (7,11)=3  (7,12)=5# (7,13)=2  (7,14)=4  (7,16)=3  (7,17)=5# (8,2)=2  (8,3)=5# (8,4)=3  (8,6)=4  (8,7)=2  (8,8)=5# (8,9)=3  (8,11)=4  (8,12)=2  (8,13)=5# (8,14)=3  (8,16)=4  (8,17)=2  (9,1)=5# (9,2)=4  (9,3)=3  (9,4)=2  (9,6)=5# (9,7)=4  (9,8)=3  (9,9)=2  (9,11)=5# (9,12)=4  (9,13)=3  (9,14)=2  (9,16)=5# (9,17)=4  (11,4)=5# (11,6)=2  (11,7)=3  (11,8)=4  (11,9)=5# (11,11)=2  (11,12)=3  (11,13)=4  (11,14)=5# (11,16)=2  (11,17)=3  (12,4)=4  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=4  (12,11)=3  (12,12)=5# (12,13)=2  (12,14)=4  (12,16)=3  (12,17)=5# (13,2)=2  (13,3)=5# (13,4)=3  (13,6)=4  (13,7)=2  (13,8)=5# (13,9)=3  (13,11)=4  (13,12)=2  (13,13)=5# (13,14)=3  (13,16)=4  (13,17)=2  (14,1)=5# (14,2)=4  (14,3)=3  (14,4)=2  (14,6)=5# (14,7)=4  (14,8)=3  (14,9)=2  (14,11)=5# (14,12)=4  (14,13)=3  (14,14)=2  (14,16)=5# (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,4)=5# (16,6)=2  (16,7)=3  (16,8)=4  (16,9)=5# (16,11)=2  (16,12)=3  (16,13)=4  (16,14)=5# (16,16)=2  (16,17)=3  (17,1)=3  (17,2)=5# (17,3)=2  (17,4)=4  (17,6)=3  (17,7)=5# (17,8)=2  (17,9)=4  (17,11)=3  (17,12)=5# (17,13)=2  (17,14)=4  (17,16)=3  (17,17)=5#
   (4888.0 bits)
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,3)
diff: 
delta: (1,1)=2  (1,2)=3  (1,4)=5# (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,11)=2  (1,12)=3  (1,13)=4  (1,14)=5# (1,16)=2  (1,17)=3  (2,1)=3  (2,2)=5# (2,6)=3  (2,7)=5# (2,8)=2  (2,9)=4  (2,11)=3  (2,12)=5# (2,13)=2  (2,14)=4  (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=5# (3,4)=3  (3,6)=4  (3,7)=2  (3,8)=5# (3,9)=3  (3,11)=4  (3,12)=2  (3,13)=5# (3,14)=3  (3,16)=4  (3,17)=2  (4,1)=5# (4,2)=4  (4,3)=3  (4,4)=2  (4,6)=5# (4,7)=4  (4,8)=3  (4,9)=2  (4,11)=5# (4,12)=4  (4,13)=3  (4,14)=2  (4,16)=5# (4,17)=4  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,6)=2  (6,7)=3  (6,8)=4  (6,9)=5# (6,11)=2  (6,12)=3  (6,13)=4  (6,14)=5# (6,16)=2  (6,17)=3  (7,1)=3  (7,2)=5# (7,3)=2  (7,4)=4  (7,6)=3  (7,7)=5# (7,8)=2  (7,9)=4  (7,11)=3  (7,12)=5# (7,13)=2  (7,14)=4  (7,16)=3  (7,17)=5# (8,1)=4  (8,2)=2  (8,3)=5# (8,4)=3  (8,6)=4  (8,7)=2  (8,8)=5# (8,9)=3  (8,11)=4  (8,12)=2  (8,13)=5# (8,14)=3  (8,16)=4  (8,17)=2  (9,1)=5# (9,2)=4  (9,3)=3  (9,4)=2  (9,6)=5# (9,7)=4  (9,8)=3  (9,9)=2  (9,11)=5# (9,12)=4  (9,13)=3  (9,14)=2  (9,16)=5# (9,17)=4  (11,1)=2  (11,2)=3  (11,3)=4  (11,4)=5# (11,6)=2  (11,7)=3  (11,8)=4  (11,9)=5# (11,11)=2  (11,12)=3  (11,13)=4  (11,14)=5# (11,16)=2  (11,17)=3  (12,1)=3  (12,2)=5# (12,3)=2  (12,4)=4  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=4  (12,11)=3  (12,12)=5# (12,13)=2  (12,14)=4  (12,16)=3  (12,17)=5# (13,1)=4  (13,2)=2  (13,3)=5# (13,4)=3  (13,6)=4  (13,7)=2  (13,8)=5# (13,9)=3  (13,11)=4  (13,12)=2  (13,13)=5# (13,14)=3  (13,16)=4  (13,17)=2  (14,1)=5# (14,2)=4  (14,3)=3  (14,4)=2  (14,6)=5# (14,7)=4  (14,8)=3  (14,9)=2  (14,11)=5# (14,12)=4  (14,13)=3  (14,14)=2  (14,16)=5# (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,4)=5# (16,6)=2  (16,7)=3  (16,8)=4  (16,9)=5# (16,11)=2  (16,12)=3  (16,13)=4  (16,14)=5# (16,16)=2  (16,17)=3  (17,1)=3  (17,2)=5# (17,3)=2  (17,4)=4  (17,6)=3  (17,7)=5# (17,8)=2  (17,9)=4  (17,11)=3  (17,12)=5# (17,13)=2  (17,14)=4  (17,16)=3  (17,17)=5#
   (5199.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (3,4) and color black and mask Full at (10,0)
  _01: a rectangle with size (2,3) and color black and mask Full (and Border) at (5,11)
  _011: a rectangle with size (3,2) and color black and mask Full (and Border) at (0,3)
  _0111: a rectangle with size (2,2) and color black and mask Full (and Border) at (2,10)
  _01111: a rectangle with size (2,2) and color black and mask Full (and Border) at (4,6)
  _011111: a rectangle with size (11,1) and color yellow and mask Full at (3,1)
  _0111111: a rectangle with size (2,7) and color red and mask Full (and Border) at (2,7)
diff: 
delta: (1,1)=2  (1,2)=3  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,11)=2  (1,12)=3  (1,13)=4  (1,14)=5# (1,16)=2  (1,17)=3  (2,1)=3  (2,2)=5# (2,6)=3  (2,7)=5# (2,9)=4  (2,12)=5# (2,14)=4  (2,16)=3  (2,17)=5# (3,2)=2  (3,3)=5# (3,4)=3  (3,6)=4  (3,8)=5# (3,9)=3  (3,13)=5# (3,14)=3  (3,16)=4  (3,17)=2  (4,1)=5# (4,2)=4  (4,3)=3  (4,4)=2  (4,8)=3  (4,9)=2  (4,11)=5# (4,12)=4  (4,13)=3  (4,14)=2  (4,16)=5# (4,17)=4  (5,1)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,6)=2  (6,7)=3  (6,8)=4  (6,9)=5# (6,14)=5# (6,16)=2  (6,17)=3  (7,1)=3  (7,2)=5# (7,3)=2  (7,4)=4  (7,6)=3  (7,7)=5# (7,8)=2  (7,9)=4  (7,11)=3  (7,12)=5# (7,13)=2  (7,14)=4  (7,16)=3  (7,17)=5# (8,2)=2  (8,3)=5# (8,4)=3  (8,6)=4  (8,7)=2  (8,8)=5# (8,9)=3  (8,11)=4  (8,12)=2  (8,13)=5# (8,14)=3  (8,16)=4  (8,17)=2  (9,1)=5# (9,2)=4  (9,3)=3  (9,4)=2  (9,6)=5# (9,7)=4  (9,8)=3  (9,9)=2  (9,11)=5# (9,12)=4  (9,13)=3  (9,14)=2  (9,16)=5# (9,17)=4  (11,4)=5# (11,6)=2  (11,7)=3  (11,8)=4  (11,9)=5# (11,11)=2  (11,12)=3  (11,13)=4  (11,14)=5# (11,16)=2  (11,17)=3  (12,4)=4  (12,6)=3  (12,7)=5# (12,8)=2  (12,9)=4  (12,11)=3  (12,12)=5# (12,13)=2  (12,14)=4  (12,16)=3  (12,17)=5# (13,2)=2  (13,3)=5# (13,4)=3  (13,6)=4  (13,7)=2  (13,8)=5# (13,9)=3  (13,11)=4  (13,12)=2  (13,13)=5# (13,14)=3  (13,16)=4  (13,17)=2  (14,1)=5# (14,2)=4  (14,3)=3  (14,4)=2  (14,6)=5# (14,7)=4  (14,8)=3  (14,9)=2  (14,11)=5# (14,12)=4  (14,13)=3  (14,14)=2  (14,16)=5# (14,17)=4  (16,1)=2  (16,2)=3  (16,3)=4  (16,4)=5# (16,6)=2  (16,7)=3  (16,8)=4  (16,9)=5# (16,11)=2  (16,12)=3  (16,13)=4  (16,14)=5# (16,16)=2  (16,17)=3  (17,1)=3  (17,2)=5# (17,3)=2  (17,4)=4  (17,6)=3  (17,7)=5# (17,8)=2  (17,9)=4  (17,11)=3  (17,12)=5# (17,13)=2  (17,14)=4  (17,16)=3  (17,17)=5#
! 324 wrong pixels (generated / expected)

TRAIN 29ec7d0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (3,9) and color black and mask Full at (11,7)
  _01: a rectangle with size (3,4) and color black and mask Full at (5,3)
  _011: a rectangle with size (4,3) and color black and mask Full at (0,7)
  _0111: a rectangle with size (1,17) and color yellow and mask Full at (9,1)
  _01111: a rectangle with size (1,17) and color yellow and mask Full at (15,1)
  _011111: a rectangle with size (2,3) and color black and mask Full (and Border) at (4,11)
  _0111111: a rectangle with size (16,1) and color grey and mask Full at (1,4)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,4)=1  (3,5)=4  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (7,1)=2  (7,2)=3  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,2)=1  (9,4)=1  (9,6)=1  (9,8)=1  (9,10)=1  (9,12)=1  (9,14)=1  (9,16)=1  (10,1)=5# (10,2)=3  (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,10)=3  (11,11)=2  (11,16)=3  (11,17)=2  (12,4)=1  (12,10)=1  (12,11)=1  (13,1)=2  (13,2)=3  (13,3)=4  (13,5)=6  (13,10)=5# (13,11)=6  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,2)=1  (15,4)=1  (15,6)=1  (15,8)=1  (15,10)=1  (15,12)=1  (15,14)=1  (15,16)=1  (16,1)=5# (16,2)=3  (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
   (4475.6 bits)
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (1,17) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
diff: 
delta: (1,1)=2  (1,3)=4  (1,4)=5# (1,5)=6  (1,7)=2  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,2)=5# (2,4)=3  (2,5)=5# (2,7)=3  (2,8)=5# (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,2)=1  (3,4)=1  (3,6)=1  (3,8)=1  (3,10)=1  (3,12)=1  (3,14)=1  (3,16)=1  (4,1)=5# (4,2)=3  (4,4)=5# (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,11)=3  (4,13)=5# (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,3)=4  (5,4)=3  (5,5)=2  (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,11)=2  (5,13)=6  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (7,1)=2  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,1)=4  (9,3)=4  (9,5)=4  (9,7)=4  (9,9)=4  (9,11)=4  (9,13)=4  (9,15)=4  (9,17)=4  (10,1)=5# (10,2)=3  (10,4)=5# (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,7)=6  (11,8)=5# (11,9)=4  (11,10)=3  (11,11)=2  (11,13)=6  (11,14)=5# (11,15)=4  (11,16)=3  (11,17)=2  (13,1)=2  (13,2)=3  (13,3)=4  (13,4)=5# (13,5)=6  (13,7)=2  (13,8)=3  (13,9)=4  (13,10)=5# (13,11)=6  (13,13)=2  (13,14)=3  (13,15)=4  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,1)=4  (15,3)=4  (15,5)=4  (15,7)=4  (15,9)=4  (15,11)=4  (15,13)=4  (15,15)=4  (15,17)=4  (16,1)=5# (16,2)=3  (16,4)=5# (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
   (5044.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (3,9) and color black and mask Full at (11,7)
  _01: a rectangle with size (3,4) and color black and mask Full at (5,3)
  _011: a rectangle with size (4,3) and color black and mask Full at (0,7)
  _0111: a rectangle with size (1,17) and color yellow and mask Full at (9,1)
  _01111: a rectangle with size (1,17) and color yellow and mask Full at (15,1)
  _011111: a rectangle with size (2,3) and color black and mask Full (and Border) at (4,11)
  _0111111: a rectangle with size (16,1) and color grey and mask Full at (1,4)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,10)=5# (1,11)=6  (1,13)=2  (1,14)=3  (1,15)=4  (1,16)=5# (1,17)=6  (2,1)=3  (2,2)=5# (2,4)=3  (2,5)=5# (2,10)=3  (2,11)=5# (2,13)=3  (2,14)=5# (2,16)=3  (2,17)=5# (3,1)=4  (3,3)=4  (3,4)=1  (3,5)=4  (3,11)=4  (3,13)=4  (3,15)=4  (3,17)=4  (4,1)=5# (4,2)=3  (4,5)=3  (4,7)=5# (4,8)=3  (4,10)=5# (4,14)=3  (4,16)=5# (4,17)=3  (5,1)=6  (5,2)=5# (5,7)=6  (5,8)=5# (5,9)=4  (5,10)=3  (5,14)=5# (5,15)=4  (5,16)=3  (5,17)=2  (7,1)=2  (7,2)=3  (7,7)=2  (7,8)=3  (7,9)=4  (7,10)=5# (7,11)=6  (7,13)=2  (7,14)=3  (7,15)=4  (7,16)=5# (7,17)=6  (8,1)=3  (8,2)=5# (8,4)=3  (8,5)=5# (8,7)=3  (8,8)=5# (8,10)=3  (8,11)=5# (8,13)=3  (8,14)=5# (8,16)=3  (8,17)=5# (9,2)=1  (9,4)=1  (9,6)=1  (9,8)=1  (9,10)=1  (9,12)=1  (9,14)=1  (9,16)=1  (10,1)=5# (10,2)=3  (10,5)=3  (10,7)=5# (10,8)=3  (10,10)=5# (10,11)=3  (10,13)=5# (10,14)=3  (10,16)=5# (10,17)=3  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=3  (11,5)=2  (11,10)=3  (11,11)=2  (11,16)=3  (11,17)=2  (12,4)=1  (12,10)=1  (12,11)=1  (13,1)=2  (13,2)=3  (13,3)=4  (13,5)=6  (13,10)=5# (13,11)=6  (13,16)=5# (13,17)=6  (14,1)=3  (14,2)=5# (14,4)=3  (14,5)=5# (14,7)=3  (14,8)=5# (14,10)=3  (14,11)=5# (14,13)=3  (14,14)=5# (14,16)=3  (14,17)=5# (15,2)=1  (15,4)=1  (15,6)=1  (15,8)=1  (15,10)=1  (15,12)=1  (15,14)=1  (15,16)=1  (16,1)=5# (16,2)=3  (16,5)=3  (16,7)=5# (16,8)=3  (16,10)=5# (16,11)=3  (16,13)=5# (16,14)=3  (16,16)=5# (16,17)=3  (17,1)=6  (17,2)=5# (17,3)=4  (17,4)=3  (17,5)=2  (17,7)=6  (17,8)=5# (17,9)=4  (17,10)=3  (17,11)=2  (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
! 324 wrong pixels (generated / expected)

TRAIN 29ec7d0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (6,10) and color black and mask ......xxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx..xxxx|xxxx...xxx|.......xxx at (2,6)
  _01: a rectangle with size (4,2) and color black and mask Full (and Border) at (5,1)
  _011: a rectangle with size (2,16) and color orange and mask Full (and Border) at (2,2)
  _0111: a rectangle with size (2,16) and color red and mask Full (and Border) at (4,2)
  _01111: a rectangle with size (2,9) and color green and mask Full (and Border) at (1,1)
  _011111: a rectangle with size (15,1) and color orange and mask Full at (1,13)
  _0111111: a rectangle with size (1,15) and color grey and mask Full at (6,3)
diff: 
delta: (1,1)=2  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=1  (1,8)=2  (1,10)=4  (1,11)=5# (1,12)=6  (1,15)=2  (1,16)=3  (1,17)=4  (2,2)=5# (2,4)=2  (2,5)=4  (2,6)=6  (2,7)=1  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,16)=5# (3,1)=4  (3,3)=3  (3,4)=6  (3,5)=2  (3,17)=3  (4,1)=5# (4,3)=6  (4,4)=3  (4,5)=7# (4,17)=6  (5,4)=7# (5,5)=5# (5,10)=2  (5,11)=7# (5,16)=4  (6,4)=4  (6,5)=3  (6,11)=4  (6,12)=3  (6,16)=6  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (14,13)=1  (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
   (5019.9 bits)
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (1,5)
diff: 
delta: (1,1)=2  (1,3)=4  (1,4)=5# (1,6)=7# (1,8)=2  (1,9)=3  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,15)=2  (1,16)=3  (1,17)=4  (2,2)=5# (2,3)=7# (2,4)=2  (2,5)=4  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,12)=4  (2,13)=6  (2,15)=3  (2,16)=5# (2,17)=7# (3,1)=4  (3,2)=7# (3,3)=3  (3,4)=6  (3,5)=2  (3,6)=5# (3,8)=4  (3,9)=7# (3,10)=3  (3,11)=6  (3,12)=2  (3,13)=5# (3,15)=4  (3,16)=7# (3,17)=3  (4,1)=5# (4,2)=2  (4,3)=6  (4,4)=3  (4,5)=7# (4,6)=4  (4,8)=5# (4,9)=2  (4,10)=6  (4,11)=3  (4,12)=7# (4,13)=4  (4,15)=5# (4,16)=2  (4,17)=6  (5,1)=6  (5,2)=4  (5,3)=2  (5,4)=7# (5,5)=5# (5,6)=3  (5,8)=6  (5,9)=4  (5,10)=2  (5,11)=7# (5,12)=5# (5,13)=3  (5,15)=6  (5,16)=4  (5,17)=2  (6,1)=7# (6,2)=6  (6,3)=5# (6,4)=4  (6,5)=3  (6,6)=2  (6,8)=7# (6,9)=6  (6,10)=5# (6,11)=4  (6,12)=3  (6,13)=2  (6,15)=7# (6,16)=6  (6,17)=5# (8,1)=2  (8,2)=3  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,13)=7# (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,13)=7# (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
   (5975.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (6,10) and color black and mask ......xxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx..xxxx|xxxx...xxx|.......xxx at (2,6)
  _01: a rectangle with size (4,2) and color black and mask Full (and Border) at (5,1)
  _011: a rectangle with size (2,16) and color orange and mask Full (and Border) at (2,2)
  _0111: a rectangle with size (2,16) and color red and mask Full (and Border) at (4,2)
  _01111: a rectangle with size (2,9) and color green and mask Full (and Border) at (1,1)
  _011111: a rectangle with size (15,1) and color orange and mask Full at (1,13)
  _0111111: a rectangle with size (1,15) and color grey and mask Full at (6,3)
diff: 
delta: (1,1)=2  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=1  (1,8)=2  (1,10)=4  (1,11)=5# (1,12)=6  (1,15)=2  (1,16)=3  (1,17)=4  (2,2)=5# (2,4)=2  (2,5)=4  (2,6)=6  (2,7)=1  (2,8)=3  (2,9)=5# (2,10)=7# (2,11)=2  (2,16)=5# (3,1)=4  (3,3)=3  (3,4)=6  (3,5)=2  (3,17)=3  (4,1)=5# (4,3)=6  (4,4)=3  (4,5)=7# (4,17)=6  (5,4)=7# (5,5)=5# (5,10)=2  (5,11)=7# (5,16)=4  (6,4)=4  (6,5)=3  (6,11)=4  (6,12)=3  (6,16)=6  (8,3)=4  (8,4)=5# (8,5)=6  (8,6)=7# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,12)=6  (8,15)=2  (8,16)=3  (8,17)=4  (9,1)=3  (9,2)=5# (9,3)=7# (9,4)=2  (9,5)=4  (9,6)=6  (9,8)=3  (9,9)=5# (9,10)=7# (9,11)=2  (9,12)=4  (9,13)=6  (9,15)=3  (9,16)=5# (9,17)=7# (10,1)=4  (10,2)=7# (10,3)=3  (10,4)=6  (10,5)=2  (10,6)=5# (10,8)=4  (10,9)=7# (10,10)=3  (10,11)=6  (10,12)=2  (10,13)=5# (10,15)=4  (10,16)=7# (10,17)=3  (11,1)=5# (11,2)=2  (11,3)=6  (11,4)=3  (11,5)=7# (11,6)=4  (11,8)=5# (11,9)=2  (11,10)=6  (11,11)=3  (11,12)=7# (11,13)=4  (11,15)=5# (11,16)=2  (11,17)=6  (12,1)=6  (12,2)=4  (12,3)=2  (12,4)=7# (12,5)=5# (12,6)=3  (12,8)=6  (12,9)=4  (12,10)=2  (12,11)=7# (12,12)=5# (12,13)=3  (12,15)=6  (12,16)=4  (12,17)=2  (13,1)=7# (13,2)=6  (13,3)=5# (13,4)=4  (13,5)=3  (13,6)=2  (13,8)=7# (13,9)=6  (13,10)=5# (13,11)=4  (13,12)=3  (13,13)=2  (13,15)=7# (13,16)=6  (13,17)=5# (14,13)=1  (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,5)=6  (15,6)=7# (15,8)=2  (15,9)=3  (15,10)=4  (15,11)=5# (15,12)=6  (15,15)=2  (15,16)=3  (15,17)=4  (16,1)=3  (16,2)=5# (16,3)=7# (16,4)=2  (16,5)=4  (16,6)=6  (16,8)=3  (16,9)=5# (16,10)=7# (16,11)=2  (16,12)=4  (16,13)=6  (16,15)=3  (16,16)=5# (16,17)=7# (17,1)=4  (17,2)=7# (17,3)=3  (17,4)=6  (17,5)=2  (17,6)=5# (17,8)=4  (17,9)=7# (17,10)=3  (17,11)=6  (17,12)=2  (17,13)=5# (17,15)=4  (17,16)=7# (17,17)=3 
! 324 wrong pixels (generated / expected)

TRAIN 29ec7d0e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (3,5) and color black and mask Full at (8,3)
  _01: a rectangle with size (1,17) and color grey and mask Full at (12,1)
  _011: a rectangle with size (17,1) and color grey and mask Full at (1,12)
  _0111: a rectangle with size (1,17) and color grey and mask Full at (4,1)
  _01111: a rectangle with size (4,4) and color black and mask ..xx|..xx|xx..|xx.. at (13,4)
  _011111: a rectangle with size (17,1) and color grey and mask Full at (1,4)
  _0111111: a rectangle with size (1,17) and color orange and mask Full at (14,1)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=1  (2,5)=3  (2,6)=5# (2,7)=7# (2,9)=3  (2,10)=5# (2,11)=7# (2,12)=1  (2,13)=3  (2,14)=5# (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,2)=1  (4,4)=1  (4,6)=1  (4,8)=1  (4,10)=1  (4,12)=1  (4,14)=0  (4,15)=0  (4,16)=1  (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,2)=5# (6,3)=3  (6,4)=1  (6,5)=7# (6,6)=5# (6,7)=3  (6,9)=7# (6,10)=5# (6,11)=3  (6,12)=1  (6,13)=7# (6,14)=5# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,12)=1  (9,1)=2  (9,2)=3  (9,9)=2  (9,10)=3  (9,11)=4  (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,2)=5# (10,3)=7# (10,9)=3  (10,10)=5# (10,11)=7# (10,12)=1  (10,13)=3  (10,14)=5# (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,2)=1  (12,4)=1  (12,6)=1  (12,8)=1  (12,10)=1  (12,12)=1  (12,14)=1  (12,16)=1  (13,1)=6  (13,2)=3  (13,3)=8  (13,5)=2  (13,9)=6  (13,10)=3  (13,11)=8  (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,2)=5# (14,3)=3  (14,4)=1  (14,8)=1  (14,10)=5# (14,11)=3  (14,12)=1  (14,14)=5# (14,15)=3  (14,16)=1  (15,1)=8  (15,2)=7# (15,3)=6  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,12)=1  (17,1)=2  (17,2)=3  (17,3)=4  (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
   (5110.0 bits)
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (3,3)
  _01: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (3,11)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,12)=5# (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,2)=5# (2,3)=7# (2,5)=3  (2,6)=5# (2,7)=7# (2,9)=3  (2,10)=5# (2,11)=7# (2,13)=3  (2,14)=5# (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=3  (3,15)=6  (3,17)=4  (4,1)=5# (4,7)=5# (4,9)=5# (4,15)=5# (4,17)=5# (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=7# (5,15)=4  (5,17)=6  (6,1)=7# (6,2)=5# (6,3)=3  (6,5)=7# (6,6)=5# (6,7)=3  (6,9)=7# (6,10)=5# (6,11)=3  (6,13)=7# (6,14)=5# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,4)=5# (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,12)=5# (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (9,1)=2  (9,2)=3  (9,3)=4  (9,4)=5# (9,5)=6  (9,6)=7# (9,7)=8  (9,9)=2  (9,10)=3  (9,11)=4  (9,12)=5# (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,2)=5# (10,3)=7# (10,5)=3  (10,6)=5# (10,7)=7# (10,9)=3  (10,10)=5# (10,11)=7# (10,13)=3  (10,14)=5# (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,4)=5# (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,12)=5# (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,1)=5# (12,3)=5# (12,5)=5# (12,7)=5# (12,9)=5# (12,11)=5# (12,13)=5# (12,15)=5# (12,17)=5# (13,1)=6  (13,2)=3  (13,3)=8  (13,4)=5# (13,5)=2  (13,6)=7# (13,7)=4  (13,9)=6  (13,10)=3  (13,11)=8  (13,12)=5# (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,1)=7# (14,2)=5# (14,3)=3  (14,5)=7# (14,6)=5# (14,7)=3  (14,9)=7# (14,10)=5# (14,11)=3  (14,13)=7# (14,14)=5# (14,15)=3  (14,17)=7# (15,1)=8  (15,2)=7# (15,3)=6  (15,4)=5# (15,5)=4  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,12)=5# (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (17,1)=2  (17,2)=3  (17,3)=4  (17,4)=5# (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,12)=5# (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
   (5341.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (3,5) and color black and mask Full at (8,3)
  _01: a rectangle with size (1,17) and color grey and mask Full at (12,1)
  _011: a rectangle with size (17,1) and color grey and mask Full at (1,12)
  _0111: a rectangle with size (1,17) and color grey and mask Full at (4,1)
  _01111: a rectangle with size (4,4) and color black and mask ..xx|..xx|xx..|xx.. at (13,4)
  _011111: a rectangle with size (17,1) and color grey and mask Full at (1,4)
  _0111111: a rectangle with size (1,17) and color orange and mask Full at (14,1)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,5)=6  (1,6)=7# (1,7)=8  (1,9)=2  (1,10)=3  (1,11)=4  (1,13)=6  (1,14)=7# (1,15)=8  (1,17)=2  (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=1  (2,5)=3  (2,6)=5# (2,7)=7# (2,9)=3  (2,10)=5# (2,11)=7# (2,12)=1  (2,13)=3  (2,14)=5# (2,15)=7# (2,17)=3  (3,1)=4  (3,2)=7# (3,3)=2  (3,5)=8  (3,6)=3  (3,7)=6  (3,9)=4  (3,10)=7# (3,11)=2  (3,13)=8  (3,14)=0  (3,15)=0  (3,17)=4  (4,2)=1  (4,4)=1  (4,6)=1  (4,8)=1  (4,10)=1  (4,12)=1  (4,14)=0  (4,15)=0  (4,16)=1  (5,1)=6  (5,2)=3  (5,3)=8  (5,5)=2  (5,6)=7# (5,7)=4  (5,9)=6  (5,10)=3  (5,11)=8  (5,13)=2  (5,14)=0  (5,15)=0  (5,17)=6  (6,1)=7# (6,2)=5# (6,3)=3  (6,4)=1  (6,5)=7# (6,6)=5# (6,7)=3  (6,9)=7# (6,10)=5# (6,11)=3  (6,12)=1  (6,13)=7# (6,14)=5# (6,15)=3  (6,17)=7# (7,1)=8  (7,2)=7# (7,3)=6  (7,5)=4  (7,6)=3  (7,7)=2  (7,9)=8  (7,10)=7# (7,11)=6  (7,13)=4  (7,14)=3  (7,15)=2  (7,17)=8  (8,12)=1  (9,1)=2  (9,2)=3  (9,9)=2  (9,10)=3  (9,11)=4  (9,13)=6  (9,14)=7# (9,15)=8  (9,17)=2  (10,1)=3  (10,2)=5# (10,3)=7# (10,9)=3  (10,10)=5# (10,11)=7# (10,12)=1  (10,13)=3  (10,14)=5# (10,15)=7# (10,17)=3  (11,1)=4  (11,2)=7# (11,3)=2  (11,5)=8  (11,6)=3  (11,7)=6  (11,9)=4  (11,10)=7# (11,11)=2  (11,13)=8  (11,14)=3  (11,15)=6  (11,17)=4  (12,2)=1  (12,4)=1  (12,6)=1  (12,8)=1  (12,10)=1  (12,12)=1  (12,14)=1  (12,16)=1  (13,1)=6  (13,2)=3  (13,3)=8  (13,5)=2  (13,9)=6  (13,10)=3  (13,11)=8  (13,13)=2  (13,14)=7# (13,15)=4  (13,17)=6  (14,2)=5# (14,3)=3  (14,4)=1  (14,8)=1  (14,10)=5# (14,11)=3  (14,12)=1  (14,14)=5# (14,15)=3  (14,16)=1  (15,1)=8  (15,2)=7# (15,3)=6  (15,6)=3  (15,7)=2  (15,9)=8  (15,10)=7# (15,11)=6  (15,13)=4  (15,14)=3  (15,15)=2  (15,17)=8  (16,12)=1  (17,1)=2  (17,2)=3  (17,3)=4  (17,5)=6  (17,6)=7# (17,7)=8  (17,9)=2  (17,10)=3  (17,11)=4  (17,13)=6  (17,14)=7# (17,15)=8  (17,17)=2 
! 324 wrong pixels (generated / expected)

TRAIN 29ec7d0e.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color blue and layers
  _0: a rectangle with size (4,7) and color black and mask ....xxx|xxxxxxx|xxxx...|xxxx... at (5,9)
  _01: a rectangle with size (4,3) and color black and mask Full at (5,3)
  _011: a rectangle with size (4,3) and color black and mask Full at (13,1)
  _0111: a rectangle with size (3,3) and color black and mask Full at (0,13)
  _01111: a rectangle with size (13,1) and color orange and mask Full at (4,15)
  _011111: a rectangle with size (2,11) and color green and mask Full (and Border) at (7,7)
  _0111111: a rectangle with size (1,16) and color orange and mask Full at (6,1)
diff: 
delta: (1,1)=2  (1,2)=3  (1,3)=4  (1,4)=5# (1,5)=6  (1,6)=7# (1,7)=8  (1,8)=9# (1,10)=2  (1,11)=3  (1,12)=4  (1,16)=8  (1,17)=9# (2,1)=3  (2,2)=5# (2,3)=7# (2,4)=9# (2,5)=2  (2,6)=4  (2,7)=6  (2,8)=8  (2,10)=3  (2,11)=5# (2,12)=7# (2,16)=6  (2,17)=8  (3,1)=4  (3,2)=7# (3,4)=4  (3,5)=7# (3,7)=4  (3,8)=7# (3,10)=4  (3,11)=7# (3,13)=4  (3,14)=7# (3,16)=4  (3,17)=7# (4,1)=5# (4,2)=9# (4,3)=4  (4,4)=8  (4,5)=3  (4,6)=7# (4,7)=2  (4,8)=6  (4,10)=5# (4,11)=9# (4,12)=4  (4,13)=8  (4,14)=3  (4,16)=2  (4,17)=6  (5,1)=6  (5,2)=2  (5,6)=4  (5,7)=9# (5,8)=5# (5,10)=6  (5,11)=2  (5,12)=7# (5,16)=9# (5,17)=5# (6,2)=4  (6,6)=1  (6,8)=4  (6,17)=4  (7,1)=8  (7,2)=6  (7,6)=7# (7,7)=5# (7,13)=2  (7,14)=9# (7,16)=5# (8,1)=9# (8,2)=8  (8,6)=4  (8,8)=2  (8,13)=6  (8,14)=5# (8,15)=4  (8,17)=2  (9,15)=1  (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,5)=6  (10,6)=7# (10,7)=8  (10,8)=9# (10,10)=2  (10,11)=3  (10,12)=4  (10,13)=5# (10,14)=6  (10,16)=8  (10,17)=9# (11,1)=3  (11,2)=5# (11,3)=7# (11,4)=9# (11,5)=2  (11,6)=4  (11,7)=6  (11,8)=8  (11,10)=3  (11,11)=5# (11,12)=7# (11,13)=9# (11,14)=2  (11,15)=4  (11,16)=6  (11,17)=8  (12,1)=4  (12,2)=7# (12,4)=4  (12,5)=7# (12,7)=4  (12,8)=7# (12,10)=4  (12,11)=7# (12,13)=4  (12,14)=7# (12,15)=1  (12,16)=4  (12,17)=7# (13,4)=8  (13,5)=3  (13,6)=7# (13,7)=2  (13,8)=6  (13,10)=5# (13,11)=9# (13,12)=4  (13,13)=8  (13,14)=3  (13,16)=2  (13,17)=6  (14,4)=3  (14,5)=8  (14,6)=4  (14,7)=9# (14,8)=5# (14,10)=6  (14,11)=2  (14,12)=7# (14,13)=3  (14,14)=8  (14,15)=4  (14,16)=9# (14,17)=5# (15,4)=7# (15,5)=4  (15,7)=7# (15,8)=4  (15,10)=7# (15,11)=4  (15,13)=7# (15,14)=4  (15,15)=1  (15,16)=7# (15,17)=4  (16,4)=2  (16,5)=9# (16,6)=7# (16,7)=5# (16,8)=3  (16,10)=8  (16,11)=6  (16,12)=4  (16,13)=2  (16,14)=9# (16,16)=5# (16,17)=3  (17,1)=9# (17,2)=8  (17,3)=7# (17,4)=6  (17,5)=5# (17,6)=4  (17,7)=3  (17,8)=2  (17,10)=9# (17,11)=8  (17,12)=7# (17,13)=6  (17,14)=5# (17,15)=4  (17,16)=3  (17,17)=2 
! 324 wrong pixels (generated / expected)

TEST 29ec7d0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.2 sec (29.2 sec/task)
bits-train-error = 215608.3 bits (215608.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-339] Checking task 2bcee788.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7346.7 = 7362.3
DL output with Mo: L = 15.6 + 9878.9 = 9894.5
DL input+output M: L = 31.2 + 17225.6 = 17256.9

# learning a model for train pairs
2.000	
1.310	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.951	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.824	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.742	OUT DEF: ^.size=^.size
0.707	OUT DEF: ^.color=green
0.676	IN  DEF: ^.layer_01.shape.color=red
0.653	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.635	IN  DEF: ^.layer_01.shape.mask=Full
0.622	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 82.7 + 3246.2 = 3328.9
DL output with Mo: L = 48.2 + 1632.1 = 1680.3
DL input+output M: L = 130.9 + 4878.3 = 5009.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (3,5)
diff: 
delta:
   (85.9 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (3,6) and color yellow and mask +-cross at (3,2)
diff: 
delta:
   (33.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (3,5)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (3,5)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|..x at (3,2)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,3)
diff: 
delta:
   (84.7 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (6,3) and color pink and mask .xx|.x.|xx.|xx.|.x.|.xx at (1,3)
diff: 
delta:
   (50.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color pink and mask xx.|.x.|.xx at (4,3)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 14 wrong pixels (generated / expected)

TRAIN 2bcee788.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (4,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,3)
diff: 
delta:
   (76.2 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (2,4) and color orange and mask .xx.|xxxx at (4,2)
diff: 
delta:
   (36.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (4,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 2bcee788.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,5)
diff: 
delta:
   (77.9 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|..x|..x|xxx at (4,3)
diff: 
delta:
   (42.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (6,5)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (6,5)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|..x at (4,3)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 12 wrong pixels (generated / expected)

TRAIN 2bcee788.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|xx|.x at (3,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,6)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (4,6)
  _01: a rectangle with size (3,2) and color blue and mask x.|xx|.x at (3,4)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color
delta:
! 12 wrong pixels (generated / expected)

TEST 2bcee788.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.3 sec (3.3 sec/task)
bits-train-error = 1632.1 bits (1632.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-338] Checking task 2bee17df.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 46022.2 = 46037.9
DL output with Mo: L = 15.6 + 64889.7 = 64905.4
DL input+output M: L = 31.2 + 110912.0 = 110943.2

# learning a model for train pairs
2.000	
1.557	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.187	OUT OBJECT at ^.layer_0: ^.layer_0
0.819	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.506	OUT OBJECT at ^.layer_01: ^.layer_01
0.264	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.254	OUT DEF: ^.size=^.size
0.245	OUT DEF: ^.layer_011.shape.size=^.size - 2
0.240	OUT DEF: ^.layer_011.pos=^.layer_01.pos + 1
0.237	OUT DEF: ^.layer_011.shape.color=green
0.236	IN  DEF: ^.color=black
0.235	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size ^.size - 2 and color green and mask ? at ^.layer_01.pos + 1
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 8752.6 = 8833.0
DL output with Mo: L = 69.9 + 2707.6 = 2777.5
DL input+output M: L = 150.3 + 11460.2 = 11610.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
   (297.8 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
  _011: a rectangle with size (10,10) and color green and mask ..x.......|..x.......|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxxxxxxxx|..x.......|..x....... at (1,1)
diff: 
delta:
   (102.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,12) and color red and mask xxxxxxxxxxxx|....xx.xxxxx|.....x..xx.x|...........x|...........x|...........x|...........x at (0,0)
  _01: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color cyan and mask x...........|x...........|x...........|x...........|x...........|x...........|x..........x|x..........x|xx....xx...x|xxx..xxx..xx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (2,8) and color red and mask Full (and Border) at (0,4)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,6)=2  (1,6)=0  (2,5)=2  (2,8)=2  (2,9)=2  (2,11)=2  (3,11)=2  (4,11)=2  (5,11)=2  (6,11)=2 
! 50 wrong pixels (generated / expected)

TRAIN 2bee17df.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
   (311.8 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
  _011: a rectangle with size (10,10) and color green and mask ...xx.....|...xx.....|...xx.....|xxxxxxxxxx|...xx.....|...xx.....|...xx.....|xxxxxxxxxx|...xx.....|...xx..... at (1,1)
diff: 
delta:
   (102.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
diff: 
delta:
! 45 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (9,12) and color cyan and mask xxxxxxxxxxxx|......xxxxxx|.......xx..x|.......x...x|...........x|...........x|...........x|...........x|...........x at (0,0)
  _01: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,12) and color red and mask x...........|xx..........|x...........|x...........|xxx.........|xx..........|xx..........|x...........|x.........xx|xx.x..x..xxx|xxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (0,0)
diff: 
delta: (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (2,7)=8  (2,8)=8  (2,11)=8  (3,7)=8  (3,11)=8  (4,11)=8  (5,11)=8  (6,11)=8  (7,11)=8  (8,11)=8 
! 61 wrong pixels (generated / expected)

TRAIN 2bee17df.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx.......|x........|x........|x........|x........|x........|x........ at (0,0)
diff: 
delta:
   (265.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx.......|x........|x........|x........|x........|x........|x........ at (0,0)
  _011: a rectangle with size (8,8) and color green and mask ..x.....|..x.....|..x.....|..x.....|xxxxxxxx|xxxxxxxx|..x.....|..x..... at (1,1)
diff: 
delta:
   (66.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx.......|x........|x........|x........|x........|x........|x........ at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color cyan and mask xxxxxxxxx|xxx.xx.x.|xx..x....|xx.......|x........|x........|x........|x........|x........|x........ at (0,0)
  _01: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,9) and color red and mask ........x|........x|........x|.......xx|.......xx|........x|........x|.....xx.x|x...xxxxx|xxxxxxxxx at (0,1)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,1)=8  (0,2)=8  (0,3)=8  (0,4)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (1,1)=8  (1,2)=8  (1,4)=8  (1,5)=8  (1,7)=8  (2,1)=8  (2,4)=8  (3,1)=8 
! 41 wrong pixels (generated / expected)

TRAIN 2bee17df.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..x..|xxx...........|x.............|xxx...........|xx............|x.............|xx............|xx............|xx............|x.............|xx............|xx............|x............. at (0,0)
  _01: a rectangle with size (13,13) and color red and mask ...........xx|............x|............x|...........xx|..........xxx|............x|............x|............x|............x|............x|...........xx|..x.xx....xxx|xxxxxxxxxxxxx at (1,1)
diff: 
delta:
! 59 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (13,13) and color red and mask ...........xx|............x|............x|...........xx|..........xxx|............x|............x|............x|............x|............x|...........xx|..x.xx....xxx|xxxxxxxxxxxxx at (1,1)
  _01: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..x..|xxx...........|x.............|xxx...........|xx............|x.............|xx............|xx............|xx............|x.............|xx............|xx............|x............. at (0,0)
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,14) and color cyan and mask xxxxxxxxxxxxxx|xxxx..xxx..x..|xxx...........|x.............|xxx...........|xx............|x.............|xx............|xx............|xx............|x.............|xx............|xx............|x............. at (0,0)
  _01: a rectangle with size (1,13) and color red and mask Full at (13,1)
diff: 
delta: (1,12)=2  (1,13)=2  (2,13)=2  (3,13)=2  (4,12)=2  (4,13)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,13)=2  (7,13)=2  (8,13)=2  (9,13)=2  (10,13)=2  (11,12)=2  (11,13)=2  (12,3)=2  (12,5)=2  (12,6)=2  (12,11)=2  (12,12)=2  (12,13)=2 
! 85 wrong pixels (generated / expected)

TEST 2bee17df.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.9 sec (5.9 sec/task)
bits-train-error = 2707.6 bits (2707.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-337] Checking task 2c608aff.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18980.4 = 18996.0
DL output with Mo: L = 15.6 + 24401.8 = 24417.5
DL input+output M: L = 31.2 + 43382.2 = 43413.5

# learning a model for train pairs
2.000	
1.296	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.694	OUT OBJECT at ^.layer_0: ^.layer_0
0.554	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.509	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.474	OUT DEF: ^.size=^.size
0.456	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.446	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.437	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.430	IN  DEF: ^.layer_0.shape.mask=Full
0.424	OUT DEF: ^.layer_01.shape.size.j=1
0.419	OUT DEF: ^.layer_01.shape.mask=Full
0.413	OUT DEF: ^.layer_011.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 68.9 + 5086.3 = 5155.2
DL output with Mo: L = 78.4 + 3391.1 = 3469.5
DL input+output M: L = 147.4 + 8477.4 = 8624.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a point with color yellow at (7,7)
diff: 
delta: (3,9)=4 
   (104.0 bits)
data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (7,7)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (3,5)
diff: 
delta:
   (46.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a point with color yellow at (3,9)
diff: 
delta: (7,7)=4 
! 96 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,12) and color cyan and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (1,2)
  _01: a point with color yellow at (7,7)
diff: 
delta: (3,9)=4 
! 96 wrong pixels (generated / expected)

TRAIN 2c608aff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color red and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
  _01: a point with color cyan at (8,3)
diff: 
delta:
   (76.8 bits)
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
  _01: a rectangle with size (4,1) and color cyan and mask Full at (5,3)
  _011: a rectangle with size (10,12) and color red and mask Full at (0,0)
diff: 
delta:
   (53.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color red and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,3)
  _01: a point with color cyan at (8,3)
diff: 
delta:
! 111 wrong pixels (generated / expected)

TRAIN 2c608aff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (0,4)
diff: 
delta: (6,10)=2  (11,1)=2 
   (134.9 bits)
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (1,4) and color red and mask Full at (6,7)
diff: 
delta: (11,1)=2 
   (78.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (0,4)
diff: 
delta: (6,10)=2  (11,1)=2 
! 150 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (6,10)
diff: 
delta: (0,4)=2  (11,1)=2 
! 152 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color blue and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (4,3)
  _01: a point with color red at (11,1)
diff: 
delta: (0,4)=2  (6,10)=2 
! 152 wrong pixels (generated / expected)

TRAIN 2c608aff.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (1,8)
diff: 
delta: (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
   (192.9 bits)
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (1,8)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (5,2)
diff: 
delta: (3,11)=4  (4,11)=4  (4,15)=4  (11,13)=4 
   (161.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (1,8)
diff: 
delta: (3,11)=4  (4,15)=4  (5,2)=4  (11,13)=4 
! 231 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (3,11)
diff: 
delta: (1,8)=4  (4,15)=4  (5,2)=4  (11,13)=4 
! 232 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,18) and color blue and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (5,7)
  _01: a point with color yellow at (4,15)
diff: 
delta: (1,8)=4  (3,11)=4  (5,2)=4  (11,13)=4 
! 232 wrong pixels (generated / expected)

TRAIN 2c608aff.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color red and layers
  _0: a rectangle with size (6,8) and color cyan and mask Full at (5,7)
  _01: a point with color blue at (1,9)
diff: 
delta: (2,2)=1  (2,17)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 350 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,21) and color red and layers
  _0: a rectangle with size (6,8) and color cyan and mask Full at (5,7)
  _01: a point with color blue at (2,2)
diff: 
delta: (1,9)=1  (2,17)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 351 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,21) and color red and layers
  _0: a rectangle with size (6,8) and color cyan and mask Full at (5,7)
  _01: a point with color blue at (2,17)
diff: 
delta: (1,9)=1  (2,2)=1  (3,13)=1  (7,19)=1  (9,2)=1  (13,15)=1  (17,3)=1  (17,11)=1 
! 351 wrong pixels (generated / expected)

TEST 2c608aff.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 3391.1 bits (3391.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-336] Checking task 2dc579da.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 12218.8 = 12234.4
DL output with Mo: L = 15.6 + 1370.3 = 1385.9
DL input+output M: L = 31.2 + 13589.1 = 13620.4

# learning a model for train pairs
2.000	
1.236	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.953	OUT DEF: ^.size=^.size / 2
0.753	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
0.558	OUT DEF: ^.color=^.color
0.535	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.418	OUT DEF: ^.layer_0.shape=^.layer_01.shape
0.400	IN  DEF: ^.layer_0.shape.mask=+-cross

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size / 2 and color ^.color and layers
  _0: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask +-cross at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 73.3 + 2315.5 = 2388.8
DL output with Mo: L = 45.6 + 237.5 = 283.1
DL input+output M: L = 118.9 + 2553.0 = 2671.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color green and mask +-cross at (0,0)
  _01: a point with color yellow at (4,0)
diff: 
delta:
   (70.7 bits)
data: a background with size (2,2) and color cyan and layers
  _0: a point with color yellow at (1,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color green and mask +-cross at (0,0)
  _01: a point with color yellow at (4,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 2dc579da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (7,7) and color red and mask +-cross at (0,0)
  _01: a point with color blue at (1,5)
diff: 
delta:
   (76.5 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a point with color blue at (1,1)
diff: 
delta:
   (7.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (7,7) and color red and mask +-cross at (0,0)
  _01: a point with color blue at (1,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 2dc579da.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (11,11) and color blue and mask +-cross at (0,0)
  _01: a point with color cyan at (2,1)
diff: 
delta:
   (84.3 bits)
data: a background with size (5,5) and color green and layers
  _0: a point with color cyan at (2,1)
diff: 
delta:
   (9.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (11,11) and color blue and mask +-cross at (0,0)
  _01: a point with color cyan at (2,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 2dc579da.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color blue and layers
  _0: a rectangle with size (13,13) and color black and mask +-cross at (0,0)
  _01: a point with color red at (3,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST 2dc579da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 237.5 bits (237.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-335] Checking task 2dd70a9a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 55664.1 = 55679.7
DL output with Mo: L = 15.6 + 67271.1 = 67286.7
DL input+output M: L = 31.2 + 122935.2 = 122966.4

# learning a model for train pairs
2.000	
1.623	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.255	OUT OBJECT at ^.layer_0: ^.layer_0
1.103	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.001	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.890	OUT OBJECT at ^.layer_011: ^.layer_01
0.808	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.741	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.690	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.630	OUT OBJECT at ^.layer_0110: ^.layer_011
0.586	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 18992.7 = 19169.6
DL output with Mo: L = 98.6 + 16188.1 = 16286.7
DL input+output M: L = 275.4 + 35180.9 = 35456.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _01: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
   (919.1 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _01: a rectangle with size (12,15) and color green and mask ..............x|..............x|xxxxxxxxxxxxxxx|x..............|x..............|x..............|x..............|x..............|x..............|x..............|x..............|x.............. at (4,3)
  _0110: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _011: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _0111: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (6,18)=8  (7,2)=8  (7,18)=8  (7,19)=8  (8,0)=8  (8,18)=8  (8,19)=8  (9,18)=8  (9,19)=8  (10,1)=8  (11,0)=8  (16,1)=8  (18,9)=8  (19,10)=8 
   (795.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _010: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _01: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask ...xxx|...x.x|..xxx.|xxxxxx|.x.x..|...x.. at (0,10)
  _010: a rectangle with size (12,17) and color cyan and mask .........x.......|......x..x.......|...xxx.x..x.xx...|..x....xxxxxxxxxx|...xxx..xxx.x..xx|...xx....x...x..x|....x.x.x..x..x.x|...xxx...xxxx....|....x.xx.x.x.x...|....x...x.....xx.|x...x....xxx....x|.xxxx.......xxx.. at (8,3)
  _01: a rectangle with size (5,5) and color cyan and mask .x...|xxxxx|x.xx.|x..xx|...x. at (1,0)
  _011: a rectangle with size (3,5) and color cyan and mask xxxxx|...x.|..x.x at (0,4)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|xx|xx|xx at (6,18)
diff: 
delta: (0,11)=8  (0,17)=8  (0,19)=8  (2,17)=2  (3,17)=2  (6,0)=8  (7,2)=8  (8,0)=8  (10,1)=8  (11,0)=8  (14,3)=3  (15,3)=3  (16,1)=8  (18,9)=8  (19,10)=8 
! size mismatch, 10x10 instead of 20x20

TRAIN 2dd70a9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
diff: 
delta: (1,2)=8  (3,9)=8  (4,1)=8  (9,0)=8 
   (298.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _01: a rectangle with size (5,5) and color green and mask x....|x....|xxxxx|....x|....x at (1,1)
  _0110: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _011: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
diff: 
delta: (1,2)=8  (3,9)=8  (4,1)=8  (9,0)=8 
   (216.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
diff: 
delta: (1,2)=8  (3,9)=8  (4,1)=8  (9,0)=8 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|.x. at (4,1)
  _010: a rectangle with size (2,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (6,5)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
  _0111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,6)
diff: 
delta: (1,2)=8  (3,9)=8  (4,1)=8  (9,0)=8 
! 18 wrong pixels (generated / expected)

TRAIN 2dd70a9a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _01: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _011: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _0111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (5,1)=3  (5,2)=3  (5,8)=8  (7,5)=8  (7,8)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
   (681.3 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _01: a rectangle with size (5,7) and color green and mask xxxxxxx|......x|......x|......x|..xxxxx at (5,1)
  _0110: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _011: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _0111: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
diff: 
delta: (2,0)=8  (4,9)=8  (5,8)=8  (7,1)=8  (7,2)=8  (7,5)=8  (7,8)=8  (8,1)=8  (9,0)=8  (9,1)=2  (9,2)=2  (9,13)=8  (10,0)=8  (11,1)=8  (13,11)=8  (13,14)=8  (14,1)=8 
   (606.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _01: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _011: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _0111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (5,1)=3  (5,2)=3  (5,8)=8  (7,5)=8  (7,8)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _01: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _011: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
  _0111: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
diff: 
delta: (2,0)=8  (4,9)=8  (5,1)=3  (5,2)=3  (5,8)=8  (7,5)=8  (7,8)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,10) and color cyan and mask ...xxx....|x.x...xxxx|.x.x......|.xx.x.....|xx........ at (10,4)
  _010: a rectangle with size (3,5) and color cyan and mask x..x.|.x.xx|.xxx. at (0,10)
  _01: a rectangle with size (4,5) and color cyan and mask ..x.x|x..x.|.xxx.|..x.x at (0,3)
  _011: a rectangle with size (4,4) and color cyan and mask ...x|..x.|.x.x|xx.. at (4,10)
  _0111: a rectangle with size (5,3) and color cyan and mask .xx|.x.|x..|x..|.x. at (7,0)
diff: 
delta: (2,0)=8  (4,9)=8  (5,1)=3  (5,2)=3  (5,8)=8  (7,5)=8  (7,8)=8  (9,1)=2  (9,2)=2  (9,13)=8  (13,11)=8  (13,14)=8  (14,1)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN 2dd70a9a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask xxxx|x...|.x..|..x.|..x.|...x at (0,0)
  _010: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (7,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (8,5)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (5,10)
  _0111: a rectangle with size (2,2) and color cyan and mask .x|xx at (1,4)
diff: 
delta: (0,9)=8  (0,10)=8  (1,6)=2  (1,7)=2  (3,8)=8  (3,12)=8  (4,6)=8  (4,12)=8  (5,8)=8  (7,3)=3  (7,4)=3  (10,1)=8  (10,2)=8  (11,3)=8  (12,11)=8 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask xxxx|x...|.x..|..x.|..x.|...x at (0,0)
  _010: a rectangle with size (2,3) and color cyan and mask x.x|.xx at (7,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|.x. at (8,5)
  _011: a rectangle with size (2,2) and color cyan and mask .x|xx at (1,4)
  _0111: a rectangle with size (4,1) and color cyan and mask Full at (5,10)
diff: 
delta: (0,9)=8  (0,10)=8  (1,6)=2  (1,7)=2  (3,8)=8  (3,12)=8  (4,6)=8  (4,12)=8  (5,8)=8  (7,3)=3  (7,4)=3  (10,1)=8  (10,2)=8  (11,3)=8  (12,11)=8 
! size mismatch, 10x10 instead of 13x13

TEST 2dd70a9a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.2 sec (28.2 sec/task)
bits-train-error = 16188.1 bits (16188.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-334] Checking task 2dee498d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13569.2 = 13584.8
DL output with Mo: L = 15.6 + 4671.2 = 4686.8
DL input+output M: L = 31.2 + 18240.4 = 18271.6

# learning a model for train pairs
2.000	
1.898	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.778	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.677	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.495	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.418	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.368	OUT DEF: ^.layer_0.pos='(0,0)
1.319	OUT DEF: ^.layer_01.pos=^.layer_0.pos
1.278	OUT DEF: ^.size.i=^.size.i
1.238	OUT DEF: ^.size.j=^.size.i
1.199	OUT DEF: ^.layer_0.shape.size.i=^.size.i
1.164	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
1.138	OUT DEF: ^.layer_01.shape.size.i=bottom(^.layer_01) + ^.layer_01.shape.size.i
1.114	OUT DEF: ^.layer_01.shape.size.j=bottom(^.layer_01) + ^.layer_01.shape.size.i
1.091	OUT DEF: ^.layer_011.shape.size.i=^.layer_01.shape.size.i
1.068	OUT DEF: ^.layer_011.shape.size.j=bottom(^.layer_01) + ^.layer_01.shape.size.i
1.046	OUT DEF: ^.layer_011.shape.mask=Full
1.025	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j / 2
1.018	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.i) and color ? and layers
  _0: a rectangle with size (^.size.i,^.layer_0.shape.size.i) and color ? and mask ? at '(0,0)
  _01: a rectangle with size (bottom(^.layer_01) + ^.layer_01.shape.size.i,bottom(^.layer_01) + ^.layer_01.shape.size.i) and color ? and mask ? at ^.layer_0.pos
  _011: a rectangle with size (^.layer_01.shape.size.i,bottom(^.layer_01) + ^.layer_01.shape.size.i) and color ? and mask Full at (?,^.layer_01.pos.j / 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 81.2 + 9567.7 = 9648.9
DL output with Mo: L = 234.0 + 1208.7 = 1442.8
DL input+output M: L = 315.3 + 10776.4 = 11091.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,9) and color blue and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,5)
diff: 
delta: (0,0)=4  (2,2)=4  (2,3)=4  (2,8)=4 
   (210.2 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
diff: 
delta:
   (40.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,9) and color blue and layers
  _0: a rectangle with size (3,9) and color grey and mask .x..x..x.|xxxxxxxxx|.x..x..x. at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (0,5)
diff: 
delta: (0,0)=4  (2,2)=4  (2,3)=4  (2,8)=4 
! 9 wrong pixels (generated / expected)

TRAIN 2dee498d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,4)=2  (0,7)=1  (0,8)=2  (0,11)=1  (1,1)=2  (1,5)=2  (1,6)=1  (1,9)=2  (1,10)=1  (2,2)=2  (2,5)=1  (2,6)=2  (2,9)=1  (2,10)=2  (3,3)=2  (3,4)=1  (3,7)=2  (3,8)=1  (3,11)=2 
   (587.4 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (4,4) and color red and mask x-cross at (0,0)
  _011: a rectangle with size (2,4) and color yellow and mask Full at (1,0)
diff: 
delta:
   (50.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|..x.|.x..|x... at (0,0)
  _01: a rectangle with size (2,12) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=2  (0,4)=2  (0,7)=1  (0,8)=2  (0,11)=1  (1,1)=2  (1,5)=2  (1,6)=1  (1,9)=2  (1,10)=1  (2,2)=2  (2,5)=1  (2,6)=2  (2,9)=1  (2,10)=2  (3,3)=2  (3,4)=1  (3,7)=2  (3,8)=1  (3,11)=2 
! 16 wrong pixels (generated / expected)

TRAIN 2dee498d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,5)=1  (1,1)=3  (1,3)=3  (1,5)=3 
   (159.1 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta:
   (29.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,5)=1  (1,1)=3  (1,3)=3  (1,5)=3 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,3)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,1)
diff: 
delta: (0,5)=1  (1,1)=3  (1,3)=3  (1,5)=3 
! 4 wrong pixels (generated / expected)

TRAIN 2dee498d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (0,3)
  _01: a rectangle with size (2,7) and color yellow and mask Full at (0,8)
diff: 
delta: (0,0)=0  (0,2)=0  (0,5)=0  (0,7)=0  (0,10)=0  (0,11)=2  (0,12)=0  (1,2)=0  (1,7)=0  (1,10)=2  (1,11)=2  (1,12)=0  (2,0)=0  (2,4)=0  (2,5)=0  (2,9)=0  (2,10)=0  (2,14)=0  (3,0)=1  (3,1)=1  (3,2)=0  (3,5)=1  (3,6)=1  (3,7)=0  (3,10)=1  (3,11)=1  (3,12)=0  (4,0)=1  (4,1)=1  (4,2)=0  (4,4)=0  (4,5)=1  (4,6)=1  (4,7)=0  (4,9)=0  (4,10)=1  (4,11)=1  (4,12)=0  (4,14)=0 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (0,13)
  _01: a rectangle with size (2,7) and color yellow and mask Full at (0,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,5)=0  (0,6)=2  (0,7)=0  (0,10)=0  (0,12)=0  (1,2)=0  (1,5)=2  (1,6)=2  (1,7)=0  (1,12)=0  (2,0)=0  (2,4)=0  (2,5)=0  (2,9)=0  (2,10)=0  (2,14)=0  (3,0)=1  (3,1)=1  (3,2)=0  (3,5)=1  (3,6)=1  (3,7)=0  (3,10)=1  (3,11)=1  (3,12)=0  (4,0)=1  (4,1)=1  (4,2)=0  (4,4)=0  (4,5)=1  (4,6)=1  (4,7)=0  (4,9)=0  (4,10)=1  (4,11)=1  (4,12)=0  (4,14)=0 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,15) and color red and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (3,0)
  _01: a rectangle with size (2,7) and color blue and mask Full at (3,5)
diff: 
delta: (0,0)=0  (0,2)=0  (0,3)=4  (0,4)=4  (0,5)=0  (0,7)=0  (0,8)=4  (0,9)=4  (0,10)=0  (0,12)=0  (0,13)=4  (0,14)=4  (1,2)=0  (1,3)=4  (1,4)=4  (1,7)=0  (1,8)=4  (1,9)=4  (1,12)=0  (1,13)=4  (1,14)=4  (2,0)=0  (2,4)=0  (2,5)=0  (2,9)=0  (2,10)=0  (2,14)=0  (3,2)=0  (3,7)=0  (3,8)=2  (3,9)=2  (3,12)=0  (4,2)=0  (4,4)=0  (4,7)=0  (4,8)=2  (4,9)=0  (4,12)=0  (4,14)=0 
! 24 wrong pixels (generated / expected)

TEST 2dee498d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.4 sec (9.4 sec/task)
bits-train-error = 1208.7 bits (1208.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-333] Checking task 31aa019c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16372.0 = 16387.6
DL output with Mo: L = 15.6 + 7593.3 = 7608.9
DL input+output M: L = 31.2 + 23965.3 = 23996.5

# learning a model for train pairs
2.000	
1.332	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.252	OUT DEF: ^.size=^.size
1.216	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	OUT OBJECT at ^.layer_00: a point with color ? at (?,?)
1.146	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	OUT DEF: ^.layer_0.shape.size.i=3
1.096	OUT DEF: ^.layer_0.shape.size.j=3
1.074	OUT DEF: ^.layer_0.shape.color=red
1.056	OUT DEF: ^.layer_00.pos.i=span(^.layer_0.pos.j, ^.layer_01.pos.j)
1.039	OUT DEF: ^.layer_0.pos.i=span(^.layer_0.pos.j, ^.layer_01.pos.j) - 1
1.025	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.011	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.997	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.983	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.970	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.956	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.940	OUT DEF: ^.layer_00.pos.j=average(^.layer_01111.pos.j, ^.layer_01111111.pos.j)
0.926	IN  OBJECT at ^.layer_011111111: a point with color ? at (?,?)
0.912	IN  OBJECT at ^.layer_011111110: a point with color ? at (?,?)
0.899	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.889	OUT DEF: ^.color=black
0.883	IN  DEF: ^.layer_0.shape.mask=Full
0.879	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color ? at (span(^.layer_0.pos.j, ^.layer_01.pos.j),average(^.layer_01111.pos.j, ^.layer_01111111.pos.j))
  _0: a rectangle with size (3,3) and color red and mask ^.layer_0.shape.mask at (span(^.layer_0.pos.j, ^.layer_01.pos.j) - 1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _011111110: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
  _011111111: a point with color ? at (?,?)

DL input  with Mi: L = 235.6 + 13017.4 = 13252.9
DL output with Mo: L = 193.9 + 338.6 = 532.6
DL input+output M: L = 429.5 + 13356.0 = 13785.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (8,7)
  _011: a point with color blue at (0,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color red at (2,0)
  _011111: a point with color red at (2,5)
  _0111111: a point with color blue at (2,9)
  _011111110: a point with color blue at (3,2)
  _01111111: a point with color cyan at (4,2)
  _011111111: a point with color grey at (3,9)
diff: 
delta: (6,1)=4  (7,1)=5# (7,4)=1  (8,1)=8  (8,6)=1 
   (345.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color yellow at (6,1)
  _0: a rectangle with size (3,3) and color red and mask Full at (5,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (7,2)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (8,7)
  _011: a point with color blue at (0,3)
  _0111: a point with color grey at (0,7)
  _01111: a point with color red at (2,0)
  _011111: a point with color red at (2,5)
  _0111111: a point with color blue at (2,9)
  _011111110: a point with color blue at (3,2)
  _01111111: a point with color cyan at (4,2)
  _011111111: a point with color grey at (3,9)
diff: 
delta: (6,1)=4  (7,1)=5# (7,4)=1  (8,1)=8  (8,6)=1 
! 1 wrong pixels (generated / expected)

TRAIN 31aa019c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a point with color red at (0,0)
  _0111: a point with color blue at (0,3)
  _01111: a point with color green at (0,5)
  _011111: a point with color green at (0,9)
  _0111111: a point with color brown at (1,3)
  _011111110: a point with color green at (1,8)
  _01111111: a point with color orange at (1,9)
  _011111111: a point with color blue at (2,3)
diff: 
delta: (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
   (616.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color pink at (2,7)
  _0: a rectangle with size (3,3) and color red and mask Full at (1,6)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a point with color red at (0,0)
  _0111: a point with color blue at (0,3)
  _01111: a point with color green at (0,5)
  _011111: a point with color green at (0,9)
  _0111111: a point with color brown at (1,3)
  _011111110: a point with color green at (1,8)
  _01111111: a point with color orange at (1,9)
  _011111111: a point with color blue at (2,3)
diff: 
delta: (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (7,0)
  _011: a point with color red at (0,0)
  _0111: a point with color blue at (0,3)
  _01111: a point with color green at (0,5)
  _011111: a point with color green at (0,9)
  _0111111: a point with color brown at (1,3)
  _011111110: a point with color green at (1,8)
  _01111111: a point with color blue at (2,3)
  _011111111: a point with color orange at (1,9)
diff: 
delta: (2,7)=6  (2,9)=9# (3,7)=1  (4,0)=9# (5,4)=2  (5,8)=3  (6,1)=5# (6,3)=7# (6,4)=3  (6,8)=1  (7,5)=1  (7,9)=5# (8,7)=5# (8,8)=3  (9,4)=4  (9,5)=5#
! 19 wrong pixels (generated / expected)

TRAIN 31aa019c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a point with color pink at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _011111110: a point with color grey at (2,6)
  _01111111: a point with color blue at (3,3)
  _011111111: a point with color blue at (4,9)
diff: 
delta: (5,5)=6  (6,1)=1  (6,3)=7# (8,6)=3  (9,2)=5#
   (339.5 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color green at (8,6)
  _0: a rectangle with size (3,3) and color red and mask Full at (7,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a point with color pink at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _011111110: a point with color grey at (2,6)
  _01111111: a point with color blue at (3,3)
  _011111111: a point with color blue at (4,9)
diff: 
delta: (5,5)=6  (6,1)=1  (6,3)=7# (8,6)=3  (9,2)=5#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,8)
  _01: a rectangle with size (2,1) and color brown and mask Full at (3,1)
  _011: a point with color pink at (0,0)
  _0111: a point with color cyan at (0,4)
  _01111: a point with color cyan at (1,9)
  _011111: a point with color orange at (2,1)
  _0111111: a point with color red at (2,4)
  _011111110: a point with color grey at (2,6)
  _01111111: a point with color blue at (4,9)
  _011111111: a point with color blue at (3,3)
diff: 
delta: (5,5)=6  (6,1)=1  (6,3)=7# (8,6)=3  (9,2)=5#
! 19 wrong pixels (generated / expected)

TRAIN 31aa019c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Span: same int

TEST 31aa019c.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 15.4 sec (15.4 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-332] Checking task 321b1fc6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9580.4 = 9596.0
DL output with Mo: L = 15.6 + 7324.1 = 7339.7
DL input+output M: L = 31.2 + 16904.5 = 16935.7

# learning a model for train pairs
2.000	
1.841	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.680	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.519	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.464	OUT DEF: ^.size=^.size
1.409	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.354	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.299	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.255	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.183	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at (?,?)
1.110	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at (?,?)
1.036	OUT OBJECT at ^.layer_01110: ^.layer_0111.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_0111.shape at (?,?)
  _0111: ^.layer_0111.shape at (?,?)
  _01111: ^.layer_0111.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 4413.3 = 4558.4
DL output with Mo: L = 166.8 + 3950.3 = 4117.0
DL input+output M: L = 311.9 + 8363.5 = 8675.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
diff: 
delta: (1,2)=6  (2,1)=9# (2,2)=4 
   (220.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (4,6)
  _01: a rectangle with size (1,1) and color brown and mask Full at (5,5)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (5,6)
  _01110: a rectangle with size (1,1) and color orange and mask Full at (4,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (7,2)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (8,8)
diff: 
delta: (7,3)=6  (8,2)=9# (8,3)=4  (8,9)=6  (9,8)=9# (9,9)=4 
   (272.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (4,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (7,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
diff: 
delta: (1,2)=6  (2,1)=9# (2,2)=4 
! 16 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (1,1)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (2,6)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (7,3)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (6,5)
diff: 
delta: (5,5)=7# (5,6)=7#
   (220.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (1,1)
  _01: a rectangle with size (1,2) and color orange and mask Full at (2,6)
  _011: a rectangle with size (1,2) and color orange and mask Full at (7,3)
  _01110: a rectangle with size (1,3) and color pink and mask Full at (2,1)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (3,6)
  _01111: a rectangle with size (1,3) and color pink and mask Full at (8,3)
diff: 
delta:
   (123.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (1,1)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (2,6)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (7,3)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (6,5)
diff: 
delta: (5,5)=7# (5,6)=7#
! 19 wrong pixels (generated / expected)

TRAIN 321b1fc6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (2,7) and color cyan and mask Full (and Border) at (1,1)
  _0111: a rectangle with size (1,4) and color green and mask Full at (6,0)
diff: 
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,2)=8  (3,7)=8  (5,1)=4  (5,2)=4  (6,1)=4  (7,2)=3 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (2,7) and color cyan and mask Full (and Border) at (1,1)
  _0111: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (5,1)
diff: 
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,2)=8  (3,7)=8  (6,0)=3  (6,2)=3  (6,3)=3  (7,2)=3 
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (3,4) and color cyan and mask .xx.|xxxx|..x. at (6,5)
  _011: a rectangle with size (1,4) and color green and mask Full at (6,0)
  _0111: a rectangle with size (2,7) and color cyan and mask Full (and Border) at (1,1)
diff: 
delta: (1,3)=0  (1,4)=0  (1,5)=0  (2,4)=0  (3,2)=8  (3,7)=8  (5,1)=4  (5,2)=4  (6,1)=4  (7,2)=3 
! 32 wrong pixels (generated / expected)

TEST 321b1fc6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 3950.3 bits (3950.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-331] Checking task 32597951.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 104056.6 = 104072.2
DL output with Mo: L = 15.6 + 105842.9 = 105858.5
DL input+output M: L = 31.2 + 209899.5 = 209930.7

# learning a model for train pairs
2.000	
1.568	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.109	OUT OBJECT at ^.layer_0: ^.layer_0
0.986	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.876	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.806	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.761	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.720	OUT OBJECT at ^.layer_010: ^.layer_011.shape at (?,?)
0.693	IN  OBJECT at ^.layer_0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.663	OUT OBJECT at ^.layer_0100: ^.layer_0110
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _0100: ^.layer_0110
  _010: ^.layer_011.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 38810.3 = 38955.4
DL output with Mo: L = 131.7 + 30434.0 = 30565.7
DL input+output M: L = 276.8 + 69244.3 = 69521.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
   (2193.6 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _0100: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _010: a rectangle with size (1,17) and color blue and mask Full at (7,0)
  _01: a rectangle with size (1,17) and color blue and mask Full at (9,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (11,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,0)=1  (3,1)=1  (3,2)=1  (3,4)=1  (3,5)=3  (3,6)=3  (3,8)=3  (3,9)=3  (3,10)=1  (3,12)=1  (3,13)=1  (3,14)=1  (3,16)=1  (5,0)=1  (5,1)=1  (5,3)=1  (5,4)=1  (5,5)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,11)=1  (5,12)=1  (5,13)=1  (5,15)=1  (5,16)=1  (7,3)=0  (7,7)=0  (7,11)=0  (7,15)=0  (9,2)=0  (9,6)=0  (9,10)=0  (9,14)=0  (11,3)=0  (11,7)=0  (11,11)=0  (11,15)=0  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
   (1920.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (5,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (3,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxxxx|..x..|xxxxx|.x...|xxxxx at (2,5)
  _01: a rectangle with size (1,17) and color blue and mask Full at (3,0)
  _0110: a rectangle with size (1,17) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,17) and color blue and mask Full at (5,0)
diff: 
delta: (1,2)=0  (1,6)=0  (1,10)=0  (1,14)=0  (3,3)=0  (3,11)=0  (3,15)=0  (5,2)=0  (5,10)=0  (5,14)=0  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (7,5)=1  (7,6)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,16)=1  (9,0)=1  (9,1)=1  (9,3)=1  (9,4)=1  (9,5)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=1  (9,16)=1  (11,0)=1  (11,1)=1  (11,2)=1  (11,4)=1  (11,5)=1  (11,6)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,16)=1  (13,0)=1  (13,1)=1  (13,3)=1  (13,4)=1  (13,5)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,11)=1  (13,12)=1  (13,13)=1  (13,15)=1  (13,16)=1  (15,0)=1  (15,1)=1  (15,2)=1  (15,4)=1  (15,5)=1  (15,6)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,12)=1  (15,13)=1  (15,14)=1  (15,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _0110: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _011: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
   (1130.5 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _0100: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _010: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
  _01: a rectangle with size (7,14) and color blue and mask .......x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (10,1)
  _011: a rectangle with size (3,2) and color green and mask Full (and Border) at (7,1)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (8,1)=8  (8,4)=3  (8,5)=3  (8,6)=3  (9,4)=3  (9,5)=3  (9,7)=3  (10,1)=1  (10,4)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
   (981.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _0110: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _011: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _01: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _0110: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
  _011: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (9,14) and color blue and mask ...xxx........|...xx.x.......|...x...x......|.....x.x.x....|...x..x...x.x.|.x.x.x.x.x.x.x|.xx.xxxxxx....|xx.xx.....x...|.x........x... at (8,1)
  _01: a rectangle with size (10,13) and color blue and mask .x.......x...|x.x.xxxxx....|x...x..xx....|.x.x.x.xx....|..xx.....xx..|..xxx....xx..|...xx.....x..|......x..x.xx|.......xx....|........xx... at (0,3)
  _0110: a rectangle with size (3,6) and color cyan and mask Full at (7,3)
  _011: a rectangle with size (5,3) and color blue and mask x.x|xx.|..x|.x.|.xx at (0,14)
diff: 
delta: (0,0)=1  (1,0)=1  (1,1)=1  (4,2)=1  (5,9)=1  (5,10)=1  (6,3)=1  (7,0)=1  (7,1)=8  (7,2)=1  (8,1)=8  (8,2)=1  (9,1)=1  (9,2)=1  (10,1)=1  (10,15)=1  (11,1)=1  (11,15)=1  (11,16)=1  (12,0)=1  (12,16)=1  (14,16)=1  (15,13)=1  (16,9)=1  (16,15)=1  (16,16)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _0110: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (4,7)=1  (6,7)=1 
   (557.0 bits)
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _0100: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _010: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
  _01: a rectangle with size (1,2) and color green and mask Full at (3,5)
  _011: a rectangle with size (5,5) and color green and mask Full at (3,4)
diff: 
delta: (6,7)=3 
   (141.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _0110: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (4,7)=1  (6,7)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (6,5)
  _0110: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (4,7)=1  (6,7)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (17,17) and color black and mask x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.....x.xx.xx.|.x........x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx.|.x..x..x..x..x..x|x.xx.xx.xx.xx.xx. at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,5)
  _0110: a rectangle with size (5,1) and color cyan and mask Full at (3,7)
  _011: a rectangle with size (5,5) and color cyan and mask x..x.|.xx.x|x..x.|.xx.x|x..x. at (3,4)
diff: 
delta: (4,7)=1  (6,7)=1 
! size mismatch, 10x10 instead of 17x17

TRAIN 32597951.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask x................|.x...............|..x..............|...x.............|....x............|.....x...........|......x..........|.......x.........|........x........|.........x.......|..........x......|...........x.....|............x....|.............x...|..............x..|...............x.|................x at (0,0)
  _01: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (3,0)
  _0110: a rectangle with size (4,6) and color cyan and mask Full at (11,7)
  _011: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (0,3)
diff: 
delta: (0,6)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,7)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,8)=1  (2,11)=1  (2,14)=1  (3,9)=1  (3,12)=1  (3,15)=1  (4,10)=1  (4,13)=1  (4,16)=1  (5,11)=1  (5,14)=1  (6,0)=1  (6,12)=1  (6,15)=1  (7,1)=1  (7,13)=1  (7,16)=1  (8,2)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,15)=1  (10,1)=1  (10,4)=1  (10,16)=1  (11,2)=1  (11,5)=1  (12,0)=1  (12,3)=1  (12,6)=1  (13,1)=1  (13,4)=1  (13,7)=1  (14,2)=1  (14,5)=1  (14,8)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask x................|.x...............|..x..............|...x.............|....x............|.....x...........|......x..........|.......x.........|........x........|.........x.......|..........x......|...........x.....|............x....|.............x...|..............x..|...............x.|................x at (0,0)
  _01: a rectangle with size (4,6) and color cyan and mask x.xx.x|xx.xx.|.xx.xx|x.xx.x at (11,7)
  _0110: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (0,3)
  _011: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (3,0)
diff: 
delta: (0,6)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,7)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,8)=1  (2,11)=1  (2,14)=1  (3,9)=1  (3,12)=1  (3,15)=1  (4,10)=1  (4,13)=1  (4,16)=1  (5,11)=1  (5,14)=1  (6,0)=1  (6,12)=1  (6,15)=1  (7,1)=1  (7,13)=1  (7,16)=1  (8,2)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,15)=1  (10,1)=1  (10,4)=1  (10,16)=1  (11,2)=1  (11,5)=1  (12,0)=1  (12,3)=1  (12,6)=1  (13,1)=1  (13,4)=1  (13,7)=1  (14,2)=1  (14,5)=1  (14,8)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1 
! size mismatch, 10x10 instead of 17x17
>> Trial 3
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (17,17) and color blue and mask x................|.x...............|..x..............|...x.............|....x............|.....x...........|......x..........|.......x.........|........x........|.........x.......|..........x......|...........x.....|............x....|.............x...|..............x..|...............x.|................x at (0,0)
  _01: a rectangle with size (4,6) and color cyan and mask x.xx.x|xx.xx.|.xx.xx|x.xx.x at (11,7)
  _0110: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (3,0)
  _011: a rectangle with size (14,14) and color blue and mask x.............|.x............|..x...........|...x..........|....x.........|.....x........|......x.......|.......x......|........x.....|.........x....|..........x...|...........x..|............x.|.............x at (0,3)
diff: 
delta: (0,6)=1  (0,9)=1  (0,12)=1  (0,15)=1  (1,7)=1  (1,10)=1  (1,13)=1  (1,16)=1  (2,8)=1  (2,11)=1  (2,14)=1  (3,9)=1  (3,12)=1  (3,15)=1  (4,10)=1  (4,13)=1  (4,16)=1  (5,11)=1  (5,14)=1  (6,0)=1  (6,12)=1  (6,15)=1  (7,1)=1  (7,13)=1  (7,16)=1  (8,2)=1  (8,14)=1  (9,0)=1  (9,3)=1  (9,15)=1  (10,1)=1  (10,4)=1  (10,16)=1  (11,2)=1  (11,5)=1  (12,0)=1  (12,3)=1  (12,6)=1  (13,1)=1  (13,4)=1  (13,7)=1  (14,2)=1  (14,5)=1  (14,8)=1  (15,0)=1  (15,3)=1  (15,6)=1  (15,9)=1  (16,1)=1  (16,4)=1  (16,7)=1  (16,10)=1 
! size mismatch, 10x10 instead of 17x17

TEST 32597951.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.4 sec (28.4 sec/task)
bits-train-error = 30434.0 bits (30434.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-330] Checking task 3345333e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22245.0 = 22260.6
DL output with Mo: L = 15.6 + 18032.2 = 18047.8
DL input+output M: L = 31.2 + 40277.2 = 40308.4

# learning a model for train pairs
2.000	
1.144	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.618	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.315	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.290	OUT DEF: ^.size=^.size
0.276	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.265	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.256	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.shape.size.i * 2
0.250	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.247	IN  DEF: ^.layer_01.shape.mask=Full
0.244	OUT DEF: ^.color=black
0.242	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_01.shape.size.i * 2) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 3621.8 = 3702.2
DL output with Mo: L = 59.9 + 1309.7 = 1369.6
DL input+output M: L = 140.2 + 4931.6 = 5071.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (3,4) and color blue and mask Full at (3,6)
diff: 
delta: (2,7)=6  (2,8)=6 
   (198.3 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,6) and color pink and mask xx..xx|xx..xx|.xxxx.|..xx..|..xx..|.xxxx.|.x..x.|.xxxx.|..xx.. at (2,3)
diff: 
delta:
   (61.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (3,4) and color blue and mask Full at (3,6)
diff: 
delta: (2,7)=6  (2,8)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (9,5) and color pink and mask xx...|xx...|.xx..|..x..|..xx.|.xxxx|.x..x|.xxxx|..xx. at (2,3)
  _01: a rectangle with size (1,2) and color pink and mask Full at (2,7)
diff: 
delta: (3,6)=1  (3,7)=1  (3,8)=1  (3,9)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,6)=1  (5,7)=1  (5,8)=1  (5,9)=1 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Full at (3,6)
  _01: a rectangle with size (5,2) and color pink and mask Full at (6,5)
diff: 
delta: (2,3)=6  (2,4)=6  (2,7)=6  (2,8)=6  (3,3)=6  (3,4)=6  (4,4)=6  (4,5)=6  (5,5)=6  (7,4)=6  (7,7)=6  (8,4)=6  (8,5)=0  (8,6)=0  (8,7)=6  (9,4)=6  (9,7)=6 
! 53 wrong pixels (generated / expected)

TRAIN 3345333e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|...xxxx.|...xxxxx|...xx.x.|......x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (4,0)
diff: 
delta:
   (163.9 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|.xxxxxx.|xxxxxxxx|.x.xx.x.|.x....x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
diff: 
delta:
   (69.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..x..x..|...xxxx.|...xxxxx|...xx.x.|......x.|.xxxxxx.|xx.xx.xx|xx....xx at (3,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (4,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 3345333e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (8,8) and color grey and mask .x...x..|..xxx.x.|......xx|..xxxxxx|...x....|..xxxxxx|xx.x.xx.|.x...x.. at (5,6)
  _01: a rectangle with size (5,4) and color cyan and mask Full at (6,4)
diff: 
delta:
! 49 wrong pixels (generated / expected)

TEST 3345333e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 1309.7 bits (1309.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-329] Checking task 3428a4f5.json: 4 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 30990.4 = 31006.1
DL output with Mo: L = 15.6 + 12765.6 = 12781.2
DL input+output M: L = 31.2 + 43756.0 = 43787.2

# learning a model for train pairs
2.000	
1.366	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.031	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.845	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.738	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.687	OUT DEF: ^.size=^.layer_0.shape.size
0.660	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.637	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.615	OUT DEF: ^.layer_0.shape.size.j=max(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.590	OUT DEF: ^.layer_0.pos=max(^.layer_01.shape.size, ^.layer_0111.shape.size) - ^.layer_01.shape.size
0.573	OUT DEF: ^.layer_0.shape.color=green
0.562	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.544	OUT DEF: ^.layer_00.shape.color=green
0.532	OUT DEF: ^.layer_00.shape.size.j=^.layer_0111.shape.size.i
0.522	OUT DEF: ^.layer_00.shape.mask=Full
0.512	OUT DEF: ^.layer_00.shape.size.i=bottom(^.layer_0111) / 3
0.505	OUT DEF: ^.color=black
0.500	IN  DEF: ^.layer_011.shape.mask=Full
0.496	OUT DEF: ^.layer_00.pos=max(^.layer_0.pos, ^.layer_0111.pos) - min(^.layer_011.pos, ^.layer_0111.pos)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _00: a rectangle with size (bottom(^.layer_0111) / 3,^.layer_0111.shape.size.i) and color green and mask Full at max(^.layer_0.pos, ^.layer_0111.pos) - min(^.layer_011.pos, ^.layer_0111.pos)
  _0: a rectangle with size (^.layer_0.shape.size.i,max(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)) and color green and mask ? at max(^.layer_01.shape.size, ^.layer_0111.shape.size) - ^.layer_01.shape.size
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 10529.5 = 10674.6
DL output with Mo: L = 320.8 + 1622.4 = 1943.2
DL input+output M: L = 465.9 + 12151.9 = 12617.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _01: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color red and mask x.|xx at (2,0)
diff: 
delta: (5,1)=2  (12,0)=2 
   (254.3 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (5,0)
  _0: a rectangle with size (6,5) and color green and mask x..xx|xxx.x|..xxx|xxx.x|...x.|...x. at (0,0)
diff: 
delta:
   (36.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _01: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color red and mask x.|xx at (2,0)
diff: 
delta: (5,1)=2  (12,0)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (5,3) and color red and mask .xx|x.x|.xx|..x|..x at (0,2)
  _01: a rectangle with size (6,5) and color red and mask x....|xx...|x.x..|..x..|...xx|...x. at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color red and mask x.|xx at (2,0)
diff: 
delta: (5,1)=2  (12,0)=2 
! size mismatch, 5x3 instead of 6x5

TRAIN 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,0)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (8,2)=2  (9,0)=2 
   (249.2 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (4,0)
  _0: a rectangle with size (6,4) and color green and mask xxxx|.x.x|.xx.|.x..|.x..|.xxx at (0,1)
diff: 
delta:
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,0)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (8,2)=2  (9,0)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask .xxxx|....x|..xxx|..xx.|xxxx.|xx..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|..x.|x.x.|xxx. at (9,1)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (8,2)
diff: 
delta: (2,0)=2  (9,0)=2 
! 15 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask ..x..|.x...|.xxxx|x.x.x|...x.|...xx at (0,0)
  _01: a rectangle with size (6,5) and color black and mask .xx..|xx.x.|..xxx|xx.x.|x.x..|x..x. at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (1,1) and color black and mask Full at (5,1)
diff: 
delta:
   (219.9 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _0: a rectangle with size (6,5) and color green and mask .x...|x....|.x...|.xxxx|x.xx.|xx..x at (0,0)
diff: 
delta: (1,3)=3 
   (61.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .xx..|xx.x.|..xxx|xx.x.|x.x..|x..x. at (7,0)
  _01: a rectangle with size (6,5) and color black and mask ..x..|.x...|.xxxx|x.x.x|...x.|...xx at (0,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (1,1) and color black and mask Full at (5,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _01: a rectangle with size (4,2) and color black and mask x.|x.|x.|.x at (2,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,3)=0 
   (329.6 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (5,3)
  _0: a rectangle with size (6,5) and color green and mask xxx.x|x.xxx|xx.xx|xxx.x|x.x.x|...xx at (0,0)
diff: 
delta:
   (33.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _01: a rectangle with size (4,2) and color black and mask x.|x.|x.|.x at (2,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,3)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _01: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (4,2) and color black and mask x.|x.|x.|.x at (2,0)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,3)=0 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask .x...|x..xx|.x.x.|.xxx.|..x.x|.x..x at (7,0)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _011: a rectangle with size (3,1) and color black and mask Full at (2,0)
  _0111: a rectangle with size (2,2) and color black and mask .x|xx at (2,3)
diff: 
delta: (0,0)=0  (0,2)=0  (0,4)=0  (1,2)=0  (5,1)=0  (5,3)=0 
! 12 wrong pixels (generated / expected)

TRAIN 3428a4f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask xxx..|.xxx.|...x.|...xx|....x at (7,0)
  _01: a rectangle with size (3,4) and color black and mask x...|xx..|..xx at (0,1)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (3,2) and color black and mask x.|.x|.x at (10,0)
diff: 
delta: (0,4)=0  (4,0)=0  (4,3)=0  (4,4)=0 
! size mismatch, 5x5 instead of 6x5
>> Trial 2
data: a background with size (13,5) and color red and layers
  _0: a rectangle with size (3,4) and color black and mask x...|xx..|..xx at (0,1)
  _01: a rectangle with size (5,5) and color black and mask xxx..|.xxx.|...x.|...xx|....x at (7,0)
  _011: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
  _0111: a rectangle with size (3,2) and color black and mask x.|.x|.x at (10,0)
diff: 
delta: (0,4)=0  (4,0)=0  (4,3)=0  (4,4)=0 
! size mismatch, 3x4 instead of 6x5

TEST 3428a4f5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,5) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask ..x.x|..x.x|...x.|.xxx.|x.xx.|xxx.x at (0,0)
  _01: a rectangle with size (6,5) and color red and mask xx...|.xxxx|..xx.|.x...|.xx..|x.... at (7,0)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,0)
diff: 
delta: (11,4)=2 
! 14 wrong pixels (generated / expected)

TEST 3428a4f5.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.1 sec (12.1 sec/task)
bits-train-error = 1622.4 bits (1622.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-328] Checking task 3618c87e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6468.9 = 6484.5
DL output with Mo: L = 15.6 + 5307.3 = 5322.9
DL input+output M: L = 31.2 + 11776.2 = 11807.4

# learning a model for train pairs
2.000	
1.483	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.060	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.969	OUT DEF: ^.size=^.size
0.893	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.822	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.769	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.729	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.697	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.665	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.639	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.613	IN  DEF: ^.layer_0.shape.color=grey
0.587	IN  DEF: ^.layer_01.shape.color=blue
0.563	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i + 2
0.544	OUT DEF: ^.layer_01.shape.size.i=1
0.525	OUT DEF: ^.layer_01.shape.mask=Full
0.511	OUT DEF: ^.color=black
0.500	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (1,?) and color ^.layer_01.shape.color and mask Full at (^.layer_01.pos.i + 2,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 72.7 + 2387.7 = 2460.4
DL output with Mo: L = 70.7 + 569.4 = 640.1
DL input+output M: L = 143.4 + 2957.1 = 3100.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (3,0)
  _01: a point with color blue at (2,2)
diff: 
delta:
   (63.6 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (3,0)
  _01: a point with color blue at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (4,0)
  _01: a point with color blue at (2,2)
diff: 
delta: (3,2)=5#
! 2 wrong pixels (generated / expected)

TRAIN 3618c87e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x.x.|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,3)=1 
   (87.6 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
   (14.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x.x.|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,3)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (4,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,3)=1  (3,1)=5# (3,3)=5#
! 4 wrong pixels (generated / expected)

TRAIN 3618c87e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x..x|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,4)=1 
   (87.6 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x..x|x.xx. at (3,0)
  _01: a rectangle with size (1,4) and color blue and mask Full at (4,1)
diff: 
delta:
   (23.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask .x..x|xxxxx at (3,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,4)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (4,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (2,4)=1  (3,1)=5# (3,4)=5#
! 4 wrong pixels (generated / expected)

TRAIN 3618c87e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask ..x.x|xxxxx at (3,0)
  _01: a point with color blue at (2,2)
diff: 
delta: (2,4)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (4,0)
  _01: a point with color blue at (2,2)
diff: 
delta: (2,4)=1  (3,2)=5# (3,4)=5#
! 4 wrong pixels (generated / expected)

TEST 3618c87e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 569.4 bits (569.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-327] Checking task 3631a71a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 517170.8 = 517186.4
DL output with Mo: L = 15.6 + 474497.2 = 474512.8
DL input+output M: L = 31.2 + 991668.1 = 991699.3

# learning a model for train pairs
2.000	
1.909	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.833	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.771	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.731	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.695	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.663	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 403081.0 = 403226.1
DL output with Mo: L = 81.2 + 419008.8 = 419090.0
DL input+output M: L = 226.3 + 822089.8 = 822316.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx..|xxxxxx.. at (5,22)
  _01: a rectangle with size (6,7) and color brown and mask Full at (9,12)
  _011: a rectangle with size (5,8) and color blue and mask xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (15,12)
  _0111: a rectangle with size (3,7) and color brown and mask Full at (8,0)
diff: 
delta: (0,8)=6  (0,9)=6  (0,10)=5# (0,11)=5# (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,10)=5# (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,8)=5# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,10)=4  (8,21)=4  (9,7)=7# (9,9)=8  (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (6478.8 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.xx..xx.|xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (12,12)
  _01: a rectangle with size (4,4) and color grey and mask ..xx|..x.|xx..|x... at (0,8)
diff: 
delta: (0,8)=6  (0,9)=6  (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (5,23)=1  (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (6,25)=3  (6,28)=7# (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (7,22)=7# (7,29)=7# (8,0)=6  (8,1)=6  (8,2)=5# (8,3)=5# (8,5)=1  (8,10)=4  (8,21)=4  (8,26)=1  (8,28)=5# (8,29)=5# (9,0)=6  (9,1)=6  (9,2)=5# (9,4)=1  (9,7)=7# (9,9)=8  (9,22)=8  (9,24)=7# (9,27)=1  (9,29)=5# (10,0)=5# (10,1)=5# (10,2)=4  (10,8)=4  (10,11)=5# (10,15)=7# (10,16)=7# (10,20)=5# (10,23)=4  (10,29)=4  (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,14)=7# (11,17)=7# (11,21)=5# (11,24)=2  (11,26)=7# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,12)=1  (12,19)=1  (12,25)=4  (12,27)=7# (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
   (7228.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx..|xxxxxx.. at (5,22)
  _01: a rectangle with size (6,7) and color brown and mask Full at (9,12)
  _011: a rectangle with size (5,8) and color blue and mask xx.xx.xx|xx.xx.xx|.xx..xx.|..xxxx..|...xx... at (15,12)
  _0111: a rectangle with size (3,7) and color brown and mask Full at (8,0)
diff: 
delta: (0,8)=6  (0,9)=6  (0,10)=5# (0,11)=5# (0,13)=1  (0,18)=1  (0,20)=5# (0,21)=5# (0,22)=6  (0,23)=6  (1,5)=5# (1,8)=6  (1,9)=6  (1,10)=5# (1,12)=1  (1,15)=7# (1,16)=7# (1,19)=1  (1,21)=5# (1,22)=6  (1,23)=6  (1,26)=5# (2,2)=7# (2,3)=7# (2,7)=7# (2,8)=5# (2,9)=5# (2,10)=4  (2,21)=4  (2,22)=5# (2,23)=5# (2,24)=7# (2,28)=7# (2,29)=7# (3,2)=7# (3,3)=7# (3,6)=7# (3,8)=5# (3,11)=4  (3,13)=7# (3,15)=2  (3,16)=2  (3,18)=7# (3,20)=4  (3,23)=5# (3,25)=7# (3,28)=7# (3,29)=7# (4,9)=1  (4,12)=7# (4,14)=4  (4,17)=4  (4,19)=7# (4,22)=1  (5,1)=5# (5,8)=1  (5,11)=7# (5,13)=7# (5,18)=7# (5,20)=7# (6,3)=7# (6,6)=3  (6,12)=4  (6,14)=8  (6,17)=8  (6,19)=4  (7,2)=7# (7,9)=7# (7,11)=2  (7,20)=2  (8,10)=4  (8,21)=4  (9,7)=7# (9,9)=8  (10,8)=4  (10,11)=5# (10,20)=5# (11,0)=5# (11,3)=4  (11,5)=7# (11,7)=2  (11,10)=5# (11,21)=5# (11,28)=4  (12,1)=1  (12,4)=7# (12,6)=4  (12,19)=1  (13,0)=1  (13,3)=7# (13,5)=7# (13,26)=7# (13,28)=7# (14,4)=4  (14,6)=8  (14,11)=7# (14,20)=7# (14,25)=8  (14,27)=4  (15,1)=7# (15,3)=2  (15,10)=7# (15,21)=7# (15,28)=2  (16,1)=7# (16,3)=2  (16,10)=7# (16,21)=7# (16,28)=2  (17,4)=4  (17,6)=8  (17,11)=7# (17,20)=7# (17,25)=8  (17,27)=4  (18,0)=1  (18,3)=7# (18,5)=7# (18,26)=7# (18,28)=7# (19,1)=1  (19,4)=7# (19,6)=4  (19,12)=1  (19,19)=1  (19,25)=4  (19,27)=7# (20,0)=5# (20,3)=4  (20,5)=7# (20,7)=2  (20,10)=5# (20,14)=7# (20,17)=7# (20,21)=5# (20,24)=2  (20,26)=7# (20,28)=4  (21,0)=5# (21,1)=5# (21,2)=4  (21,8)=4  (21,11)=5# (21,15)=7# (21,16)=7# (21,20)=5# (21,23)=4  (21,29)=4  (22,0)=6  (22,1)=6  (22,2)=5# (22,4)=1  (22,7)=7# (22,9)=8  (22,22)=8  (22,24)=7# (22,27)=1  (22,29)=5# (23,0)=6  (23,1)=6  (23,2)=5# (23,3)=5# (23,5)=1  (23,10)=4  (23,21)=4  (23,26)=1  (23,28)=5# (23,29)=5# (24,2)=7# (24,9)=7# (24,11)=2  (24,20)=2  (24,22)=7# (24,29)=7# (25,3)=7# (25,6)=3  (25,12)=4  (25,14)=8  (25,17)=8  (25,19)=4  (25,25)=3  (25,28)=7# (26,1)=5# (26,8)=1  (26,11)=7# (26,13)=7# (26,18)=7# (26,20)=7# (26,23)=1  (27,9)=1  (27,12)=7# (27,14)=4  (27,17)=4  (27,19)=7# (27,22)=1  (28,2)=7# (28,3)=7# (28,6)=7# (28,8)=5# (28,11)=4  (28,13)=7# (28,15)=2  (28,16)=2  (28,18)=7# (28,20)=4  (28,23)=5# (28,25)=7# (28,28)=7# (28,29)=7# (29,2)=7# (29,3)=7# (29,7)=7# (29,8)=5# (29,9)=5# (29,10)=4  (29,21)=4  (29,22)=5# (29,23)=5# (29,24)=7# (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,5) and color brown and mask Full at (1,21)
  _01: a rectangle with size (2,7) and color brown and mask Full (and Border) at (28,17)
  _011: a rectangle with size (2,6) and color brown and mask Full (and Border) at (25,20)
  _0111: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,13)=7# (20,14)=7# (20,17)=7# (20,18)=7# (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,12)=7# (21,15)=7# (21,16)=7# (21,19)=7# (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,15)=7# (22,16)=7# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,14)=7# (23,17)=7# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
   (11039.6 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
  _01: a rectangle with size (4,8) and color orange and mask .xx..xx.|x..xx..x|...xx...|..x..x.. at (20,12)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (1,21)=3  (1,23)=8  (1,24)=3  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,21)=4  (2,22)=3  (2,23)=3  (2,25)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,21)=4  (3,23)=3  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (4,21)=8  (4,23)=1  (4,24)=1  (4,25)=1  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=7# (16,10)=7# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=7# (19,22)=5# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,21)=2  (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,20)=6  (25,21)=6  (25,23)=8  (25,24)=2  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,22)=1  (26,24)=1  (26,25)=1  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,17)=6  (28,21)=4  (28,23)=3  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,17)=6  (29,19)=8  (29,20)=4  (29,21)=4  (29,22)=3  (29,23)=3  (29,25)=4  (29,28)=7# (29,29)=7#
   (11337.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,5) and color brown and mask Full at (1,21)
  _01: a rectangle with size (2,7) and color brown and mask Full (and Border) at (28,17)
  _011: a rectangle with size (2,6) and color brown and mask Full (and Border) at (25,20)
  _0111: a rectangle with size (4,8) and color orange and mask ..x..x..|...xx...|x..xx..x|.xx..xx. at (8,12)
diff: 
delta: (0,0)=3  (0,9)=8  (0,10)=3  (0,11)=3  (0,12)=1  (0,14)=8  (0,17)=8  (0,19)=1  (0,20)=3  (0,21)=3  (0,22)=8  (1,7)=3  (1,8)=8  (1,10)=3  (1,13)=1  (1,18)=1  (2,2)=7# (2,3)=7# (2,6)=4  (2,8)=3  (2,9)=3  (2,10)=4  (2,11)=4  (2,12)=8  (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,19)=8  (2,20)=4  (2,28)=7# (2,29)=7# (3,2)=7# (3,5)=3  (3,8)=3  (3,10)=4  (3,14)=6  (3,15)=6  (3,16)=6  (3,17)=6  (3,26)=3  (3,29)=7# (4,6)=1  (4,7)=1  (4,8)=1  (4,10)=8  (4,12)=3  (4,14)=8  (4,17)=8  (4,19)=3  (5,3)=3  (5,6)=1  (5,7)=1  (5,9)=1  (5,13)=3  (5,18)=3  (5,22)=1  (5,24)=1  (5,25)=1  (5,28)=3  (6,2)=4  (6,4)=1  (6,5)=1  (6,7)=2  (6,8)=8  (6,10)=6  (6,11)=6  (6,12)=8  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,19)=8  (6,20)=6  (6,21)=6  (6,23)=8  (6,24)=2  (6,26)=1  (6,27)=1  (6,29)=4  (7,1)=3  (7,4)=1  (7,5)=1  (7,6)=2  (7,7)=2  (7,10)=6  (7,11)=6  (7,14)=1  (7,17)=1  (7,20)=6  (7,21)=6  (7,24)=2  (7,25)=2  (7,26)=1  (7,27)=1  (8,1)=8  (8,2)=3  (8,3)=3  (8,4)=1  (8,6)=8  (8,10)=1  (8,13)=5# (8,18)=5# (8,21)=1  (8,25)=8  (8,27)=1  (8,28)=3  (8,29)=3  (9,0)=8  (9,2)=3  (9,5)=1  (9,9)=8  (9,12)=5# (9,19)=5# (9,22)=8  (9,26)=1  (9,29)=3  (10,0)=3  (10,1)=3  (10,2)=4  (10,3)=4  (10,4)=8  (10,6)=6  (10,7)=6  (10,8)=1  (10,10)=2  (10,11)=2  (10,20)=2  (10,21)=2  (10,23)=1  (10,24)=6  (10,25)=6  (10,27)=8  (10,28)=4  (10,29)=4  (11,0)=3  (11,2)=4  (11,6)=6  (11,7)=6  (11,10)=2  (11,21)=2  (11,24)=6  (11,25)=6  (11,29)=4  (12,0)=1  (12,2)=8  (12,4)=3  (12,6)=8  (12,9)=5# (12,10)=7# (12,13)=5# (12,18)=5# (12,21)=7# (12,22)=5# (12,25)=8  (12,27)=3  (12,29)=8  (13,1)=1  (13,5)=3  (13,8)=5# (13,11)=7# (13,12)=5# (13,13)=5# (13,18)=5# (13,19)=5# (13,20)=7# (13,23)=5# (13,26)=3  (14,0)=8  (14,2)=6  (14,3)=6  (14,4)=8  (14,6)=1  (14,7)=1  (14,8)=7# (14,11)=7# (14,20)=7# (14,23)=7# (14,24)=1  (14,25)=1  (14,27)=8  (14,28)=6  (14,29)=6  (15,2)=6  (15,3)=6  (15,6)=1  (15,9)=7# (15,10)=7# (15,15)=8  (15,16)=8  (15,21)=7# (15,22)=7# (15,25)=1  (15,28)=6  (15,29)=6  (16,2)=6  (16,3)=6  (16,6)=1  (16,9)=9# (16,10)=9# (16,15)=8  (16,16)=8  (16,21)=7# (16,22)=7# (16,25)=1  (16,28)=6  (16,29)=6  (17,0)=8  (17,2)=6  (17,3)=6  (17,4)=8  (17,6)=1  (17,7)=1  (17,8)=7# (17,9)=9# (17,10)=9# (17,11)=7# (17,20)=7# (17,23)=7# (17,24)=1  (17,25)=1  (17,27)=8  (17,28)=6  (17,29)=6  (18,1)=1  (18,5)=3  (18,8)=5# (18,11)=7# (18,12)=5# (18,13)=5# (18,18)=5# (18,19)=5# (18,20)=7# (18,21)=9# (18,22)=9# (18,23)=5# (18,26)=3  (19,0)=1  (19,2)=8  (19,4)=3  (19,6)=8  (19,9)=5# (19,10)=7# (19,13)=5# (19,18)=5# (19,21)=9# (19,22)=9# (19,25)=8  (19,27)=3  (19,29)=8  (20,0)=3  (20,2)=4  (20,6)=6  (20,7)=6  (20,10)=2  (20,13)=7# (20,14)=7# (20,17)=7# (20,18)=7# (20,21)=9# (20,22)=9# (20,24)=6  (20,25)=6  (20,29)=4  (21,0)=3  (21,1)=3  (21,2)=4  (21,3)=4  (21,4)=8  (21,6)=6  (21,7)=6  (21,8)=1  (21,10)=2  (21,11)=2  (21,12)=7# (21,15)=7# (21,16)=7# (21,19)=7# (21,20)=2  (21,21)=2  (21,23)=1  (21,24)=6  (21,25)=6  (21,27)=8  (21,28)=4  (21,29)=4  (22,0)=8  (22,2)=3  (22,5)=1  (22,9)=8  (22,12)=5# (22,15)=7# (22,16)=7# (22,19)=5# (22,22)=8  (22,26)=1  (22,29)=3  (23,1)=8  (23,2)=3  (23,3)=3  (23,4)=1  (23,6)=8  (23,10)=1  (23,13)=5# (23,14)=7# (23,17)=7# (23,18)=5# (23,21)=1  (23,25)=8  (23,27)=1  (23,28)=3  (23,29)=3  (24,1)=3  (24,4)=1  (24,5)=1  (24,6)=2  (24,7)=2  (24,10)=6  (24,11)=6  (24,14)=1  (24,17)=1  (24,20)=6  (24,21)=6  (24,24)=2  (24,25)=2  (24,26)=1  (24,27)=1  (25,2)=4  (25,4)=1  (25,5)=1  (25,7)=2  (25,8)=8  (25,10)=6  (25,11)=6  (25,12)=8  (25,14)=1  (25,15)=1  (25,16)=1  (25,17)=1  (25,19)=8  (25,26)=1  (25,27)=1  (25,29)=4  (26,3)=3  (26,6)=1  (26,7)=1  (26,9)=1  (26,13)=3  (26,18)=3  (26,28)=3  (27,6)=1  (27,7)=1  (27,8)=1  (27,10)=8  (27,12)=3  (27,14)=8  (27,17)=8  (27,19)=3  (27,21)=8  (27,23)=1  (27,24)=1  (27,25)=1  (28,2)=7# (28,5)=3  (28,8)=3  (28,10)=4  (28,14)=6  (28,15)=6  (28,16)=6  (28,26)=3  (28,29)=7# (29,2)=7# (29,3)=7# (29,6)=4  (29,8)=3  (29,9)=3  (29,10)=4  (29,11)=4  (29,12)=8  (29,14)=6  (29,15)=6  (29,16)=6  (29,25)=4  (29,28)=7# (29,29)=7#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (7,4) and color brown and mask Full at (0,17)
  _01: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _011: a rectangle with size (7,3) and color brown and mask Full at (7,0)
  _0111: a rectangle with size (6,12) and color cyan and mask x..........x|xx........xx|..xx....xx..|..xx....xx..|....x..x....|....xxxx.... at (24,10)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,15)=7# (27,16)=7# (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (11049.3 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _01: a rectangle with size (6,12) and color cyan and mask ....xxxx....|....x..x....|..xx....xx..|..xx....xx..|xx........xx|x..........x at (2,10)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,18)=4  (0,19)=4  (0,20)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,18)=4  (1,19)=4  (1,20)=4  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,18)=3  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,14)=7# (5,15)=7# (5,16)=7# (5,17)=7# (5,20)=3  (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,13)=7# (6,15)=5# (6,16)=5# (6,18)=7# (6,25)=1  (6,28)=4  (6,29)=4  (7,2)=4  (7,7)=1  (7,9)=3  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,22)=3  (7,24)=1  (7,29)=4  (8,0)=8  (8,1)=8  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,0)=8  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,1)=4  (10,2)=2  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,0)=4  (11,1)=4  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,0)=4  (12,1)=4  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,0)=4  (13,1)=4  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,10)=8  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,21)=8  (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,10)=8  (25,11)=8  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,20)=8  (25,21)=8  (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,12)=8  (26,13)=8  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,18)=8  (26,19)=8  (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,12)=8  (27,13)=8  (27,15)=7# (27,16)=7# (27,18)=8  (27,19)=8  (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,14)=8  (28,17)=8  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,14)=8  (29,15)=8  (29,16)=8  (29,17)=8  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
   (11813.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (7,4) and color brown and mask Full at (0,17)
  _01: a rectangle with size (12,12) and color pink and mask .....xx.....|....x..x....|...x....x...|..xx....xx..|.x........x.|x..........x|x..........x|.x........x.|..xx....xx..|...x....x...|....x..x....|.....xx..... at (10,10)
  _011: a rectangle with size (7,3) and color brown and mask Full at (7,0)
  _0111: a rectangle with size (6,12) and color cyan and mask x..........x|xx........xx|..xx....xx..|..xx....xx..|....x..x....|....xxxx.... at (24,10)
diff: 
delta: (0,1)=5# (0,5)=5# (0,8)=8  (0,9)=8  (0,11)=4  (0,12)=4  (0,13)=4  (0,22)=8  (0,23)=8  (0,26)=5# (1,0)=5# (1,4)=5# (1,8)=8  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=4  (1,15)=3  (1,16)=3  (1,21)=4  (1,23)=8  (1,27)=5# (2,3)=1  (2,6)=4  (2,7)=4  (2,9)=4  (2,10)=2  (2,14)=8  (2,15)=8  (2,16)=8  (2,21)=2  (2,22)=4  (2,24)=4  (2,25)=4  (2,28)=1  (3,2)=1  (3,3)=1  (3,6)=4  (3,8)=4  (3,9)=4  (3,13)=3  (3,14)=8  (3,22)=4  (3,23)=4  (3,25)=4  (3,28)=1  (3,29)=1  (4,1)=5# (4,4)=1  (4,8)=4  (4,9)=4  (4,12)=8  (4,13)=8  (4,15)=7# (4,16)=7# (4,22)=4  (4,23)=4  (4,27)=1  (5,0)=5# (5,5)=1  (5,8)=4  (5,9)=4  (5,11)=3  (5,12)=8  (5,13)=8  (5,14)=7# (5,15)=7# (5,16)=7# (5,22)=4  (5,23)=4  (5,26)=1  (6,2)=4  (6,3)=4  (6,6)=1  (6,10)=8  (6,11)=8  (6,13)=7# (6,15)=5# (6,16)=5# (6,21)=8  (6,25)=1  (6,28)=4  (6,29)=4  (7,7)=1  (7,9)=3  (7,10)=8  (7,12)=7# (7,13)=7# (7,14)=5# (7,17)=5# (7,18)=7# (7,19)=7# (7,21)=8  (7,22)=3  (7,24)=1  (7,29)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,8)=2  (8,9)=2  (8,10)=1  (8,12)=4  (8,14)=5# (8,17)=5# (8,19)=4  (8,21)=1  (8,22)=2  (8,23)=2  (8,26)=4  (8,27)=4  (8,28)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,7)=3  (9,8)=2  (9,15)=5# (9,16)=5# (9,23)=2  (9,24)=3  (9,26)=4  (9,27)=4  (9,28)=4  (9,29)=4  (10,6)=8  (10,7)=8  (10,8)=1  (10,10)=3  (10,12)=5# (10,19)=5# (10,21)=3  (10,23)=1  (10,24)=8  (10,25)=8  (10,29)=2  (11,5)=3  (11,6)=8  (11,11)=3  (11,13)=5# (11,18)=5# (11,20)=3  (11,25)=8  (11,26)=3  (12,4)=8  (12,5)=8  (12,7)=7# (12,8)=4  (12,10)=5# (12,14)=7# (12,17)=7# (12,21)=5# (12,23)=4  (12,24)=7# (12,26)=8  (12,27)=8  (13,3)=3  (13,4)=8  (13,5)=8  (13,6)=7# (13,7)=7# (13,11)=5# (13,15)=7# (13,16)=7# (13,20)=5# (13,24)=7# (13,25)=7# (13,26)=8  (13,27)=8  (13,28)=3  (14,2)=8  (14,3)=8  (14,5)=7# (14,7)=5# (14,8)=5# (14,12)=7# (14,14)=2  (14,17)=2  (14,19)=7# (14,23)=5# (14,24)=5# (14,26)=7# (14,28)=8  (14,29)=8  (15,1)=3  (15,2)=8  (15,4)=7# (15,5)=7# (15,6)=5# (15,9)=5# (15,13)=7# (15,15)=2  (15,16)=2  (15,18)=7# (15,22)=5# (15,25)=5# (15,26)=7# (15,27)=7# (15,29)=8  (16,1)=3  (16,2)=8  (16,4)=7# (16,5)=7# (16,6)=5# (16,9)=5# (16,13)=7# (16,15)=2  (16,16)=2  (16,18)=7# (16,22)=5# (16,25)=5# (16,26)=7# (16,27)=7# (16,29)=8  (17,2)=8  (17,3)=8  (17,5)=7# (17,7)=5# (17,8)=5# (17,12)=7# (17,14)=2  (17,17)=2  (17,19)=7# (17,23)=5# (17,24)=5# (17,26)=7# (17,28)=8  (17,29)=8  (18,0)=4  (18,1)=4  (18,3)=3  (18,4)=8  (18,5)=8  (18,6)=7# (18,7)=7# (18,11)=5# (18,15)=7# (18,16)=7# (18,20)=5# (18,24)=7# (18,25)=7# (18,26)=8  (18,27)=8  (18,28)=3  (19,0)=4  (19,1)=4  (19,4)=8  (19,5)=8  (19,7)=7# (19,8)=4  (19,10)=5# (19,14)=7# (19,17)=7# (19,21)=5# (19,23)=4  (19,24)=7# (19,26)=8  (19,27)=8  (20,0)=4  (20,1)=4  (20,5)=3  (20,6)=8  (20,11)=3  (20,13)=5# (20,18)=5# (20,20)=3  (20,25)=8  (20,26)=3  (21,1)=4  (21,2)=2  (21,6)=8  (21,7)=8  (21,8)=1  (21,10)=3  (21,12)=5# (21,19)=5# (21,21)=3  (21,23)=1  (21,24)=8  (21,25)=8  (21,29)=2  (22,0)=8  (22,2)=4  (22,3)=4  (22,4)=4  (22,5)=4  (22,7)=3  (22,8)=2  (22,15)=5# (22,16)=5# (22,23)=2  (22,24)=3  (22,26)=4  (22,27)=4  (22,28)=4  (22,29)=4  (23,0)=8  (23,1)=8  (23,3)=4  (23,4)=4  (23,5)=4  (23,8)=2  (23,9)=2  (23,10)=1  (23,12)=4  (23,14)=5# (23,17)=5# (23,19)=4  (23,21)=1  (23,22)=2  (23,23)=2  (23,26)=4  (23,27)=4  (23,28)=4  (24,2)=4  (24,7)=1  (24,9)=3  (24,12)=7# (24,13)=7# (24,14)=5# (24,17)=5# (24,18)=7# (24,19)=7# (24,22)=3  (24,24)=1  (24,29)=4  (25,2)=4  (25,3)=4  (25,6)=1  (25,13)=7# (25,15)=5# (25,16)=5# (25,18)=7# (25,25)=1  (25,28)=4  (25,29)=4  (26,0)=5# (26,5)=1  (26,8)=4  (26,9)=4  (26,11)=3  (26,14)=7# (26,15)=7# (26,16)=7# (26,17)=7# (26,20)=3  (26,22)=4  (26,23)=4  (26,26)=1  (27,1)=5# (27,4)=1  (27,8)=4  (27,9)=4  (27,15)=7# (27,16)=7# (27,22)=4  (27,23)=4  (27,27)=1  (28,2)=1  (28,3)=1  (28,6)=4  (28,8)=4  (28,9)=4  (28,13)=3  (28,18)=3  (28,22)=4  (28,23)=4  (28,25)=4  (28,28)=1  (28,29)=1  (29,3)=1  (29,6)=4  (29,7)=4  (29,9)=4  (29,10)=2  (29,21)=2  (29,22)=4  (29,24)=4  (29,25)=4  (29,28)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|.....x....xx....|.....x.xx.x.x...|......xxxx.xxx..|.....x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (7,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxx.....|xxx..... at (11,5)
  _011: a rectangle with size (20,9) and color red and mask ......x..|.......xx|.......x.|......x..|.....x...|....x....|...x.....|..x......|.x.......|x........|x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|.......xx|......x.. at (6,0)
  _0111: a rectangle with size (14,18) and color red and mask ...xx.............|..x..x............|.x....x...........|x......x..........|........x.........|.........x........|..........x..x....|...........xx.....|............x.....|.............x....|..............x...|...............x..|................x.|.................x at (0,12)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,14)=7# (3,17)=7# (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,27)=9# (7,28)=9# (7,29)=9# (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,26)=3  (8,27)=9# (8,28)=9# (8,29)=9# (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,27)=9# (9,28)=9# (9,29)=9# (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,27)=9# (10,28)=9# (10,29)=9# (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (13,0)=3  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,9)=9# (23,10)=9# (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,9)=9# (24,10)=9# (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,9)=9# (25,10)=9# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,9)=9# (26,10)=9# (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=9# (27,10)=9# (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=9# (28,10)=9# (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=9# (29,10)=9# (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (11740.4 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x.x.xx.x.x...|..xxx.xxxx.xxx..|.x...x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (30,30) and color red and mask ...............xx.............|..............x..x............|.............x....x...........|............x......x..........|...........x........x.........|..........x..........x........|......x..x............x..x....|.......xx..............xx.....|.......x................x.....|......x..................x....|.....x....................x...|....x......................x..|...x........................x.|..x..........................x|.x............................|x.............................|x.............................|.x............................|..x...........................|...x..........................|....x.........................|.....x........................|......x.......................|.......x......................|.......xx.....................|......x..x....................|..........x...................|...........x..................|............x.................|.............x................ at (0,0)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,14)=7# (3,17)=7# (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=3  (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,10)=7# (6,11)=7# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,26)=3  (8,27)=3  (8,28)=6  (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,27)=3  (9,28)=6  (9,29)=6  (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,28)=3  (10,29)=3  (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,6)=7# (11,8)=1  (11,9)=1  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,5)=4  (12,6)=1  (12,8)=7# (12,9)=7# (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (13,0)=3  (13,4)=4  (13,5)=4  (13,8)=7# (13,23)=7# (13,26)=4  (13,27)=4  (14,2)=7# (14,3)=7# (14,4)=1  (14,10)=4  (14,11)=4  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,7)=4  (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,7)=4  (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,9)=8  (23,10)=1  (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,10)=7# (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,10)=7# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=3  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=6  (28,10)=3  (28,11)=3  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=6  (29,10)=3  (29,11)=3  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
   (11522.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask .......xx.......|......xxxx......|.....x....x.....|.....x....xx....|.....x.xx.x.x...|......xxxx.xxx..|.....x....x...x.|xx..xx....xx..xx|xx..xx....xx..xx|.x...x....x...x.|..xxx.xxxx.xxx..|...x.x.xx.x.x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (8,8)
  _01: a rectangle with size (7,8) and color brown and mask xxxxxxxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|xxx.....|xxx.....|xxx..... at (11,5)
  _011: a rectangle with size (20,9) and color red and mask ......x..|.......xx|.......x.|......x..|.....x...|....x....|...x.....|..x......|.x.......|x........|x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|.......xx|......x.. at (6,0)
  _0111: a rectangle with size (14,18) and color red and mask ...xx.............|..x..x............|.x....x...........|x......x..........|........x.........|.........x........|..........x..x....|...........xx.....|............x.....|.............x....|..............x...|...............x..|................x.|.................x at (0,12)
diff: 
delta: (0,3)=1  (0,4)=7# (0,6)=6  (0,11)=6  (0,12)=3  (0,13)=3  (0,18)=3  (0,19)=3  (0,20)=6  (0,25)=6  (0,27)=7# (0,28)=1  (1,1)=7# (1,2)=1  (1,5)=7# (1,9)=4  (1,10)=6  (1,11)=6  (1,12)=3  (1,19)=3  (1,20)=6  (1,21)=6  (1,22)=4  (1,26)=7# (1,29)=1  (2,1)=1  (2,2)=5# (2,4)=6  (2,9)=6  (2,10)=3  (2,11)=3  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,20)=3  (2,21)=3  (2,22)=6  (2,27)=6  (2,29)=5# (3,0)=1  (3,3)=5# (3,8)=6  (3,9)=6  (3,10)=3  (3,11)=3  (3,14)=7# (3,17)=7# (3,20)=3  (3,21)=3  (3,22)=6  (3,23)=6  (3,28)=5# (4,0)=7# (4,2)=6  (4,4)=8  (4,5)=8  (4,6)=6  (4,8)=3  (4,9)=9# (4,10)=9# (4,11)=9# (4,12)=4  (4,13)=4  (4,14)=1  (4,17)=1  (4,18)=4  (4,19)=4  (4,22)=3  (4,23)=3  (4,25)=6  (4,26)=8  (4,27)=8  (4,29)=6  (5,1)=7# (5,4)=8  (5,8)=3  (5,9)=9# (5,10)=9# (5,11)=9# (5,12)=4  (5,13)=4  (5,18)=4  (5,19)=4  (5,23)=3  (5,27)=8  (6,0)=6  (6,4)=6  (6,9)=9# (6,10)=9# (6,11)=9# (6,12)=1  (6,19)=1  (6,20)=7# (6,21)=7# (6,27)=6  (7,10)=7# (7,15)=4  (7,16)=4  (7,21)=7# (7,27)=9# (7,28)=9# (7,29)=9# (8,3)=6  (8,4)=3  (8,5)=3  (8,9)=8  (8,10)=1  (8,11)=1  (8,12)=7# (8,13)=7# (8,18)=7# (8,19)=7# (8,20)=1  (8,21)=1  (8,22)=8  (8,26)=3  (8,27)=9# (8,28)=9# (8,29)=9# (9,1)=4  (9,2)=6  (9,3)=6  (9,4)=3  (9,8)=8  (9,9)=8  (9,10)=1  (9,11)=1  (9,12)=7# (9,19)=7# (9,20)=1  (9,21)=1  (9,22)=8  (9,23)=8  (9,27)=9# (9,28)=9# (9,29)=9# (10,1)=6  (10,2)=3  (10,3)=3  (10,6)=7# (10,7)=7# (10,8)=1  (10,9)=1  (10,14)=4  (10,15)=4  (10,16)=4  (10,17)=4  (10,22)=1  (10,23)=1  (10,24)=7# (10,25)=7# (10,27)=9# (10,28)=9# (10,29)=9# (11,0)=6  (11,1)=6  (11,2)=3  (11,3)=3  (11,14)=4  (11,17)=4  (11,22)=1  (11,23)=1  (11,25)=7# (11,28)=3  (11,29)=3  (12,0)=3  (12,1)=3  (12,4)=4  (12,22)=7# (12,23)=7# (12,25)=1  (12,26)=4  (12,27)=4  (13,0)=3  (13,4)=4  (13,23)=7# (13,26)=4  (13,27)=4  (14,2)=7# (14,3)=7# (14,4)=1  (14,14)=6  (14,15)=6  (14,16)=6  (14,17)=6  (14,20)=4  (14,21)=4  (14,27)=1  (14,28)=7# (14,29)=7# (15,2)=7# (15,10)=4  (15,14)=6  (15,17)=6  (15,21)=4  (15,24)=4  (15,29)=7# (16,2)=7# (16,10)=4  (16,14)=6  (16,17)=6  (16,21)=4  (16,24)=4  (16,29)=7# (17,2)=7# (17,3)=7# (17,4)=1  (17,10)=4  (17,11)=4  (17,14)=6  (17,15)=6  (17,16)=6  (17,17)=6  (17,20)=4  (17,21)=4  (17,27)=1  (17,28)=7# (17,29)=7# (18,0)=3  (18,4)=4  (18,5)=4  (18,8)=7# (18,23)=7# (18,26)=4  (18,27)=4  (18,29)=2  (19,0)=3  (19,1)=3  (19,4)=4  (19,5)=4  (19,6)=1  (19,8)=7# (19,9)=7# (19,22)=7# (19,23)=7# (19,25)=1  (19,26)=4  (19,27)=4  (19,28)=2  (20,0)=6  (20,1)=6  (20,2)=3  (20,3)=3  (20,6)=7# (20,8)=1  (20,9)=1  (20,14)=4  (20,17)=4  (20,22)=1  (20,23)=1  (20,25)=7# (20,27)=2  (20,28)=3  (20,29)=3  (21,1)=6  (21,2)=3  (21,3)=3  (21,6)=7# (21,7)=7# (21,8)=1  (21,9)=1  (21,14)=4  (21,15)=4  (21,16)=4  (21,17)=4  (21,22)=1  (21,23)=1  (21,24)=7# (21,25)=7# (21,26)=2  (21,28)=3  (21,29)=3  (22,1)=4  (22,2)=6  (22,3)=6  (22,4)=3  (22,8)=8  (22,9)=8  (22,10)=1  (22,11)=1  (22,12)=7# (22,19)=7# (22,20)=1  (22,21)=1  (22,22)=8  (22,23)=8  (22,25)=2  (22,27)=3  (22,28)=6  (22,29)=6  (23,3)=6  (23,4)=3  (23,5)=3  (23,9)=9# (23,10)=9# (23,11)=1  (23,12)=7# (23,13)=7# (23,18)=7# (23,19)=7# (23,20)=1  (23,21)=1  (23,22)=8  (23,24)=2  (23,26)=3  (23,27)=3  (23,28)=6  (24,9)=9# (24,10)=9# (24,15)=4  (24,16)=4  (24,21)=7# (24,23)=2  (24,24)=2  (25,0)=6  (25,4)=6  (25,9)=9# (25,10)=9# (25,11)=7# (25,12)=1  (25,19)=1  (25,20)=7# (25,21)=7# (25,22)=2  (25,25)=2  (25,27)=6  (26,1)=7# (26,4)=8  (26,8)=3  (26,9)=9# (26,10)=9# (26,12)=4  (26,13)=4  (26,18)=4  (26,19)=4  (26,21)=2  (26,23)=3  (26,27)=8  (27,0)=7# (27,2)=6  (27,4)=8  (27,5)=8  (27,6)=6  (27,8)=3  (27,9)=9# (27,10)=9# (27,11)=2  (27,12)=4  (27,13)=4  (27,14)=1  (27,17)=1  (27,18)=4  (27,19)=4  (27,20)=2  (27,22)=3  (27,23)=3  (27,25)=6  (27,26)=8  (27,27)=8  (27,29)=6  (28,0)=1  (28,3)=5# (28,8)=6  (28,9)=9# (28,10)=9# (28,11)=3  (28,12)=2  (28,14)=7# (28,17)=7# (28,19)=2  (28,20)=3  (28,21)=3  (28,22)=6  (28,23)=6  (28,28)=5# (29,1)=1  (29,2)=5# (29,4)=6  (29,9)=9# (29,10)=9# (29,11)=3  (29,13)=2  (29,14)=7# (29,15)=7# (29,16)=7# (29,17)=7# (29,18)=2  (29,20)=3  (29,21)=3  (29,22)=6  (29,27)=6  (29,29)=5#
! size mismatch, 10x10 instead of 30x30

TRAIN 3631a71a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (9,7) and color brown and mask xxxxx..|xxxxx..|xxxxx..|xxxxx..|xxxxxxx|..xxxxx|..xxxxx|..xxxxx|..xxxxx at (3,20)
  _01: a rectangle with size (3,7) and color brown and mask Full at (2,0)
  _011: a rectangle with size (12,12) and color pink and mask ...........x|..........xx|.........x..|........xx..|.......x....|......xx....|.....x......|....xx......|...x........|..xx........|.x..........|xx.......... at (0,0)
  _0111: a rectangle with size (2,7) and color brown and mask Full (and Border) at (27,18)
diff: 
delta: (0,0)=8  (0,2)=7# (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,9)=3  (0,13)=8  (0,18)=8  (0,20)=6  (0,22)=3  (0,24)=1  (0,25)=1  (0,26)=7# (0,27)=7# (0,29)=7# (1,1)=8  (1,4)=7# (1,5)=7# (1,6)=1  (1,7)=1  (1,8)=3  (1,9)=3  (1,12)=8  (1,13)=8  (1,18)=8  (1,19)=8  (1,20)=6  (1,21)=6  (1,22)=3  (1,23)=3  (1,24)=1  (1,25)=1  (1,26)=7# (1,27)=7# (2,7)=8  (2,10)=7# (2,11)=7# (2,15)=6  (2,16)=6  (2,20)=7# (2,21)=7# (2,22)=6  (2,24)=8  (2,26)=1  (2,27)=1  (2,29)=2  (3,10)=7# (3,11)=7# (3,14)=6  (3,17)=6  (3,25)=8  (3,26)=1  (3,27)=1  (4,9)=8  (4,12)=6  (4,13)=6  (4,18)=6  (4,19)=6  (4,28)=1  (4,29)=1  (5,0)=7# (5,1)=7# (5,2)=1  (5,3)=1  (5,5)=5# (5,8)=8  (5,9)=8  (5,12)=6  (5,13)=6  (5,18)=6  (5,19)=6  (5,25)=6  (5,26)=5# (5,28)=1  (5,29)=1  (6,0)=1  (6,1)=1  (6,3)=8  (6,6)=2  (6,11)=6  (6,14)=5# (6,15)=5# (6,16)=5# (6,17)=5# (6,25)=2  (6,26)=6  (6,28)=8  (7,0)=1  (7,1)=1  (7,2)=8  (7,7)=2  (7,10)=6  (7,14)=5# (7,17)=5# (7,27)=6  (7,29)=8  (8,1)=3  (8,5)=8  (8,12)=6  (8,14)=3  (8,17)=3  (8,19)=6  (8,28)=6  (9,0)=3  (9,1)=3  (9,4)=8  (9,5)=8  (9,9)=6  (9,11)=5# (9,15)=3  (9,16)=3  (9,20)=5# (9,27)=8  (9,28)=6  (9,29)=6  (10,2)=7# (10,3)=7# (10,7)=6  (10,12)=3  (10,15)=6  (10,16)=6  (10,19)=3  (10,28)=7# (10,29)=7# (11,2)=7# (11,3)=7# (11,6)=6  (11,9)=5# (11,13)=3  (11,14)=6  (11,15)=6  (11,16)=6  (11,17)=6  (11,18)=3  (11,28)=7# (11,29)=7# (12,1)=8  (12,4)=6  (12,5)=6  (12,8)=6  (12,10)=3  (12,13)=4  (12,14)=3  (12,17)=3  (12,18)=4  (12,21)=3  (12,23)=6  (12,26)=6  (12,27)=6  (13,0)=8  (13,1)=8  (13,4)=6  (13,5)=6  (13,11)=3  (13,12)=4  (13,19)=4  (13,20)=3  (13,26)=6  (13,27)=6  (14,3)=6  (14,6)=5# (14,7)=5# (14,8)=3  (14,11)=6  (14,12)=3  (14,14)=2  (14,17)=2  (14,19)=3  (14,20)=6  (14,23)=3  (14,24)=5# (14,25)=5# (14,28)=6  (15,2)=6  (15,6)=5# (15,9)=3  (15,10)=6  (15,11)=6  (15,15)=2  (15,16)=2  (15,20)=6  (15,21)=6  (15,22)=3  (15,25)=5# (15,29)=6  (16,2)=6  (16,6)=5# (16,9)=3  (16,10)=6  (16,11)=6  (16,15)=2  (16,16)=2  (16,20)=6  (16,21)=6  (16,22)=3  (16,25)=5# (16,29)=6  (17,3)=6  (17,6)=5# (17,7)=5# (17,8)=3  (17,11)=6  (17,12)=3  (17,14)=2  (17,17)=2  (17,19)=3  (17,20)=6  (17,23)=3  (17,24)=5# (17,25)=5# (17,28)=6  (18,0)=8  (18,1)=8  (18,4)=6  (18,5)=6  (18,11)=3  (18,12)=4  (18,19)=4  (18,20)=3  (18,26)=6  (18,27)=6  (19,1)=8  (19,4)=6  (19,5)=6  (19,8)=6  (19,10)=3  (19,13)=4  (19,14)=3  (19,17)=3  (19,18)=4  (19,21)=3  (19,23)=6  (19,26)=6  (19,27)=6  (20,0)=6  (20,1)=6  (20,2)=7# (20,3)=7# (20,6)=6  (20,9)=5# (20,13)=3  (20,14)=6  (20,15)=6  (20,16)=6  (20,17)=6  (20,18)=3  (20,22)=5# (20,25)=6  (20,28)=7# (20,29)=7# (21,1)=6  (21,2)=7# (21,3)=7# (21,7)=6  (21,12)=3  (21,15)=6  (21,16)=6  (21,19)=3  (21,24)=6  (21,28)=7# (21,29)=7# (22,0)=3  (22,1)=3  (22,2)=6  (22,3)=6  (22,4)=8  (22,5)=8  (22,9)=6  (22,11)=5# (22,15)=3  (22,16)=3  (22,20)=5# (22,22)=6  (22,26)=8  (22,27)=8  (22,28)=6  (22,29)=6  (23,1)=3  (23,3)=6  (23,5)=8  (23,12)=6  (23,14)=3  (23,17)=3  (23,19)=6  (23,26)=8  (23,28)=6  (24,0)=1  (24,1)=1  (24,2)=8  (24,4)=6  (24,5)=6  (24,7)=2  (24,10)=6  (24,14)=5# (24,17)=5# (24,21)=6  (24,24)=2  (24,26)=6  (24,27)=6  (24,29)=8  (25,0)=1  (25,1)=1  (25,3)=8  (25,5)=6  (25,6)=2  (25,11)=6  (25,14)=5# (25,15)=5# (25,16)=5# (25,17)=5# (25,20)=6  (25,25)=2  (25,26)=6  (25,28)=8  (26,0)=7# (26,1)=7# (26,2)=1  (26,3)=1  (26,5)=5# (26,6)=6  (26,7)=6  (26,8)=8  (26,9)=8  (26,12)=6  (26,13)=6  (26,18)=6  (26,19)=6  (26,22)=8  (26,23)=8  (26,24)=6  (26,25)=6  (26,26)=5# (26,28)=1  (26,29)=1  (27,0)=7# (27,1)=7# (27,2)=1  (27,3)=1  (27,7)=6  (27,9)=8  (27,12)=6  (27,13)=6  (27,28)=1  (27,29)=1  (28,4)=1  (28,5)=1  (28,6)=8  (28,8)=6  (28,9)=6  (28,10)=7# (28,11)=7# (28,14)=6  (28,17)=6  (28,25)=8  (28,26)=1  (28,27)=1  (29,0)=7# (29,2)=2  (29,4)=1  (29,5)=1  (29,7)=8  (29,9)=6  (29,10)=7# (29,11)=7# (29,15)=6  (29,16)=6  (29,20)=7# (29,21)=7# (29,22)=6  (29,24)=8  (29,26)=1  (29,27)=1  (29,29)=2 
! size mismatch, 10x10 instead of 30x30

TEST 3631a71a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.4 sec (29.4 sec/task)
bits-train-error = 419008.8 bits (419008.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-326] Checking task 363442ee.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 17790.9 = 17806.5
DL output with Mo: L = 15.6 + 43997.6 = 44013.2
DL input+output M: L = 31.2 + 61788.4 = 61819.6

# learning a model for train pairs
2.000	
1.675	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.521	OUT OBJECT at ^.layer_0: ^.layer_0
1.396	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.288	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.194	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.143	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.093	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
1.051	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.021	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 9253.6 = 9366.9
DL output with Mo: L = 170.4 + 21602.3 = 21772.7
DL input+output M: L = 283.7 + 30855.9 = 31139.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,3) and color red and mask Full (and Border) at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (4,8)=1  (7,8)=1 
   (274.1 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (5,8)
  _01: a rectangle with size (2,7) and color red and mask Full (and Border) at (0,0)
  _011: a rectangle with size (5,3) and color red and mask Full at (3,7)
  _0111: a rectangle with size (1,6) and color yellow and mask Full at (2,1)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (8,8)
diff: 
delta: (0,0)=4  (0,4)=4  (1,1)=6  (1,5)=6  (2,0)=6  (2,4)=6  (3,7)=4  (4,8)=6  (5,7)=6  (6,7)=4  (7,8)=6  (8,7)=6 
   (474.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,3) and color red and mask Full (and Border) at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (4,8)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full (and Border) at (0,0)
  _010: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (4,8)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full (and Border) at (0,0)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (9,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,0)=4  (1,1)=6  (1,5)=1  (2,0)=6  (4,8)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _010: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
   (326.2 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _010: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (6,9) and color green and mask ........x|.......xx|......x..|..x..x...|.xx.xx...|x..x..... at (3,4)
  _011: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _0111: a rectangle with size (6,6) and color green and mask .....x|....xx|...x..|..x...|.xx...|x..... at (0,4)
  _01111: a rectangle with size (4,2) and color orange and mask Full (and Border) at (5,5)
diff: 
delta: (0,0)=2  (0,1)=7# (0,7)=2  (0,8)=7# (1,0)=2  (1,7)=2  (2,8)=7# (2,9)=7# (3,4)=2  (3,5)=7# (3,10)=2  (3,11)=7# (4,4)=2  (4,10)=2  (5,11)=7# (5,12)=7# (6,4)=2  (6,7)=2  (6,8)=7# (7,4)=2  (7,7)=2  (8,8)=7# (8,9)=7#
   (840.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _01: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (2,1)
  _010: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,0)=2  (1,8)=1  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (2,3) and color brown and mask Full (and Border) at (1,0)
diff: 
delta: (0,0)=3  (0,2)=6  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
   (325.1 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,3) and color brown and mask Full (and Border) at (1,10)
  _01: a rectangle with size (2,6) and color brown and mask x..x..|xxxxxx at (7,7)
  _011: a rectangle with size (2,7) and color brown and mask Full (and Border) at (1,0)
  _0111: a rectangle with size (2,3) and color brown and mask Full (and Border) at (4,7)
  _01111: a rectangle with size (2,4) and color cyan and mask Full (and Border) at (6,8)
diff: 
delta: (0,0)=3  (0,1)=8  (0,2)=6  (0,4)=3  (0,5)=8  (0,6)=6  (0,10)=3  (0,11)=8  (0,12)=6  (1,1)=8  (1,2)=2  (1,5)=8  (1,6)=2  (1,11)=8  (1,12)=2  (3,7)=3  (3,8)=8  (3,9)=6  (4,8)=8  (4,9)=2  (6,7)=3  (6,9)=6  (6,10)=3  (6,12)=6  (7,9)=2  (7,12)=2 
   (845.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (2,3) and color brown and mask Full (and Border) at (1,0)
diff: 
delta: (0,0)=3  (0,2)=6  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _010: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (2,3) and color brown and mask Full (and Border) at (1,0)
diff: 
delta: (0,0)=3  (0,2)=6  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (2,3) and color brown and mask x..|xxx at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
diff: 
delta: (0,0)=3  (0,2)=6  (1,2)=2  (1,5)=1  (1,11)=1  (4,8)=1  (7,8)=1  (7,11)=1 
! size mismatch, 10x10 instead of 9x13

TRAIN 363442ee.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
diff: 
delta: (0,2)=9# (1,0)=8  (1,8)=1  (1,11)=1  (2,0)=8  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 2
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff: 
delta: (0,2)=9# (1,1)=4  (1,2)=4  (1,8)=1  (1,11)=1  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13
>> Trial 3
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,3)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=9# (1,0)=8  (1,8)=1  (1,11)=1  (2,0)=8  (2,1)=9# (2,2)=8  (4,5)=1  (4,11)=1  (7,5)=1  (7,8)=1 
! size mismatch, 10x10 instead of 9x13

TEST 363442ee.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.9 sec (27.9 sec/task)
bits-train-error = 21602.3 bits (21602.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-325] Checking task 36d67576.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 17920.4 = 17936.0
DL output with Mo: L = 15.6 + 24103.0 = 24118.6
DL input+output M: L = 31.2 + 42023.4 = 42054.6

# learning a model for train pairs
2.000	
1.851	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.691	OUT OBJECT at ^.layer_0: ^.layer_0
1.541	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.381	OUT OBJECT at ^.layer_01: ^.layer_01
1.231	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.071	OUT OBJECT at ^.layer_011: ^.layer_011
1.044	OUT DEF: ^.size=^.size
1.021	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.968	OUT OBJECT at ^.layer_0111: ^.layer_0111
0.930	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at (?,?)
0.914	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.900	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.868	OUT OBJECT at ^.layer_011110: ^.layer_01111
0.852	OUT OBJECT at ^.layer_0111111: ^.layer_01111.shape at (?,?)
0.835	OUT OBJECT at ^.layer_0111110: ^.layer_01111.shape at (?,?)
0.822	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.790	OUT OBJECT at ^.layer_01111111: ^.layer_011111
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _011110: ^.layer_01111
  _01111: ^.layer_0111.shape at (?,?)
  _0111110: ^.layer_01111.shape at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: ^.layer_01111.shape at (?,?)
  _01111111: ^.layer_011111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 184.0 + 8823.4 = 9007.3
DL output with Mo: L = 138.1 + 6800.3 = 6938.4
DL input+output M: L = 322.1 + 15623.7 = 15945.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01111: a point with color blue at (1,4)
  _011111: a point with color red at (1,5)
diff: 
delta: (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
   (317.3 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _011110: a point with color blue at (1,4)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (3,11)
  _0111110: a point with color blue at (5,11)
  _011111: a rectangle with size (1,1) and color green and mask Full at (2,9)
  _0111111: a point with color blue at (9,4)
  _01111111: a point with color red at (1,5)
diff: 
delta: (3,1)=3  (3,3)=3  (3,5)=3  (4,9)=3  (6,9)=3  (6,11)=2  (7,3)=3  (7,5)=3  (7,7)=3  (9,3)=2  (9,6)=1 
   (355.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01111: a point with color blue at (1,4)
  _011111: a point with color red at (1,5)
diff: 
delta: (3,1)=3  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (8,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (2,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01111: a point with color blue at (1,4)
  _011111: a point with color green at (3,1)
diff: 
delta: (1,5)=2  (3,3)=3  (3,5)=3  (6,11)=2  (9,3)=2 
! 19 wrong pixels (generated / expected)

TRAIN 36d67576.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a point with color red at (1,4)
  _011111: a point with color blue at (2,5)
diff: 
delta: (4,9)=2  (11,6)=2 
   (282.2 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _011110: a point with color red at (1,4)
  _01111: a rectangle with size (1,4) and color green and mask Full at (7,8)
  _0111110: a point with color red at (4,9)
  _011111: a rectangle with size (4,1) and color green and mask Full at (9,3)
  _0111111: a point with color red at (11,6)
  _01111111: a point with color blue at (2,5)
diff: 
delta: (5,8)=1  (12,5)=1 
   (124.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a point with color red at (1,4)
  _011111: a point with color blue at (2,5)
diff: 
delta: (4,9)=2  (11,6)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (5,9)
  _011: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (9,3)
  _0111: a rectangle with size (1,4) and color green and mask Full at (4,2)
  _01111: a point with color red at (1,4)
  _011111: a point with color red at (4,9)
diff: 
delta: (2,5)=1  (11,6)=2 
! 16 wrong pixels (generated / expected)

TRAIN 36d67576.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color blue at (2,1)
  _011111: a point with color green at (3,2)
diff: 
delta: (4,3)=1  (5,7)=2  (11,3)=2 
   (282.8 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _011110: a point with color blue at (2,1)
  _01111: a rectangle with size (1,1) and color red and mask Full at (5,7)
  _0111110: a point with color blue at (4,3)
  _011111: a rectangle with size (1,1) and color blue and mask Full at (6,10)
  _0111111: a point with color blue at (8,4)
  _01111111: a point with color green at (3,2)
diff: 
delta: (7,9)=3  (8,8)=1  (9,5)=3  (10,6)=1  (11,3)=2 
   (199.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color blue at (2,1)
  _011111: a point with color green at (3,2)
diff: 
delta: (4,3)=1  (5,7)=2  (11,3)=2 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (5,7)
  _011: a rectangle with size (3,3) and color yellow and mask +-cross at (9,3)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color blue at (2,1)
  _011111: a point with color blue at (4,3)
diff: 
delta: (3,2)=3  (5,7)=2  (11,3)=2 
! 13 wrong pixels (generated / expected)

TRAIN 36d67576.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (3,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (3,10)
  _011: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (9,1)
  _0111: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (9,8)
  _01111: a point with color blue at (2,2)
  _011111: a point with color green at (2,3)
diff: 
delta: (3,4)=2  (4,5)=3  (5,5)=1  (5,12)=2  (9,8)=2  (11,1)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (3,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (3,10)
  _011: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (9,1)
  _0111: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (9,8)
  _01111: a point with color blue at (2,2)
  _011111: a point with color red at (3,4)
diff: 
delta: (2,3)=3  (4,5)=3  (5,5)=1  (5,12)=2  (9,8)=2  (11,1)=2 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (3,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (3,10)
  _011: a rectangle with size (3,3) and color yellow and mask xx.|x.x|.xx at (9,1)
  _0111: a rectangle with size (3,3) and color yellow and mask .xx|x.x|xx. at (9,8)
  _01111: a point with color green at (2,3)
  _011111: a point with color blue at (2,2)
diff: 
delta: (3,4)=2  (4,5)=3  (5,5)=1  (5,12)=2  (9,8)=2  (11,1)=2 
! 26 wrong pixels (generated / expected)

TEST 36d67576.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 6800.3 bits (6800.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-324] Checking task 36fdfd69.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 96508.9 = 96524.5
DL output with Mo: L = 15.6 + 98276.6 = 98292.2
DL input+output M: L = 31.2 + 194785.5 = 194816.7

# learning a model for train pairs
2.000	
1.419	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.958	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	OUT OBJECT at ^.layer_01: ^.layer_0
0.810	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.783	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.747	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.726	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.712	OUT OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 46616.2 = 46665.0
DL output with Mo: L = 215.1 + 22201.0 = 22416.1
DL input+output M: L = 263.9 + 68817.2 = 69081.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,18) and color blue and layers
  _0: a rectangle with size (17,18) and color black and mask .......xxxxxx.....|.........xx.x.....|.........x...xx...|.x.......x.xxx....|x...xx...xxx.x..xx|.x.xx..xxx....xxxx|.x.xxx.x.xxxxx..x.|xxx.xx.xxx.xxx...x|x.x..xxxx.xxxx....|xxxxx.xxxxxxxx..xx|x..x........x.xxxx|xxxxxx.....xx..xx.|xxxxx......xx.x...|x.xxxxxx..x.x.....|xx.xxx.xx.xxxxx...|xxxxxx...x.x.xx...|.xx.xx...x..xxxxx. at (0,0)
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,4)=0  (0,14)=0  (0,15)=0  (0,16)=0  (1,2)=2  (1,16)=0  (1,17)=0  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,17)=0  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (7,15)=2  (8,14)=2  (8,15)=2  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,16)=0  (13,17)=0  (14,17)=0 
   (1299.9 bits)
data: a background with size (17,18) and color blue and layers
  _0: a rectangle with size (2,8) and color black and mask Full (and Border) at (8,6)
  _01: a rectangle with size (17,18) and color black and mask .......xxxxxx.....|.........xx.x.....|.........x...xx...|.x.......x.xxx....|x...xx...xxx.x..xx|.x.xx..xxx....xxxx|.x.xxx.x.xxxxx..x.|xxx.xx.xxx.xxx...x|x.x..xxxx.xxxx....|xxxxx.xxxxxxxx..xx|x..x........x.xxxx|xxxxxx.....xx..xx.|xxxxx......xx.x...|x.xxxxxx..x.x.....|xx.xxx.xx.xxxxx...|xxxxxx...x.x.xx...|.xx.xx...x..xxxxx. at (0,0)
  _011: a rectangle with size (3,7) and color red and mask x......|.x.xxxx|x.xxxxx at (1,2)
  _0111: a rectangle with size (3,5) and color yellow and mask .x.x.|xxxxx|x.x.. at (10,6)
  _01111: a rectangle with size (3,7) and color yellow and mask Full at (1,2)
  _011111: a rectangle with size (3,4) and color black and mask xxx.|..xx|...x at (0,14)
  _0111111: a rectangle with size (1,4) and color black and mask Full at (0,1)
diff: 
delta: (7,14)=4  (7,15)=2  (8,9)=1  (8,14)=2  (8,15)=2  (9,9)=0  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,16)=0  (13,17)=0  (14,17)=0 
   (709.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color blue and layers
  _0: a rectangle with size (17,18) and color black and mask .......xxxxxx.....|.........xx.x.....|.........x...xx...|.x.......x.xxx....|x...xx...xxx.x..xx|.x.xx..xxx....xxxx|.x.xxx.x.xxxxx..x.|xxx.xx.xxx.xxx...x|x.x..xxxx.xxxx....|xxxxx.xxxxxxxx..xx|x..x........x.xxxx|xxxxxx.....xx..xx.|xxxxx......xx.x...|x.xxxxxx..x.x.....|xx.xxx.xx.xxxxx...|xxxxxx...x.x.xx...|.xx.xx...x..xxxxx. at (0,0)
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,4)=0  (0,14)=0  (0,15)=0  (0,16)=0  (1,2)=2  (1,16)=0  (1,17)=0  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,17)=0  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (7,15)=2  (8,14)=2  (8,15)=2  (10,6)=2  (10,8)=2  (10,10)=2  (12,7)=2  (12,9)=2  (12,10)=2  (13,16)=0  (13,17)=0  (14,17)=0 
! size mismatch, 10x10 instead of 17x18
>> Trial 2
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,13) and color blue and mask x....xx......|xx.xxxxxx....|xxx.x........|x..x.........|.xxx.........|x.x..........|x.x..........|...x.........|...xx........|.....x.......|....xx.x.x.x.|......xxxxx..|.....xx.x....|........xx...|......x..x...|......xxx.x.x|......xxx.xx. at (0,0)
diff: 
delta: (0,13)=1  (0,17)=1  (1,2)=2  (1,11)=1  (1,13)=1  (1,14)=1  (1,15)=1  (2,3)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (2,10)=1  (2,11)=1  (2,12)=1  (2,15)=1  (2,16)=1  (3,2)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,10)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,12)=1  (4,14)=1  (4,15)=1  (5,5)=1  (5,6)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,13)=1  (6,6)=1  (6,8)=1  (6,14)=1  (6,15)=1  (6,17)=1  (7,6)=1  (7,10)=1  (7,14)=1  (7,15)=2  (7,16)=1  (8,1)=1  (8,9)=1  (8,14)=2  (8,15)=2  (8,16)=1  (8,17)=1  (9,14)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,6)=2  (10,8)=2  (10,10)=2  (10,13)=1  (11,13)=1  (11,14)=1  (11,17)=1  (12,7)=2  (12,9)=2  (12,10)=2  (12,13)=1  (12,15)=1  (12,16)=1  (12,17)=1  (13,1)=1  (13,11)=1  (13,13)=1  (13,14)=1  (13,15)=1  (14,2)=1  (14,15)=1  (14,16)=1  (15,15)=1  (15,16)=1  (15,17)=1  (16,0)=1  (16,3)=1  (16,17)=1 
! size mismatch, 10x10 instead of 17x18

TRAIN 36fdfd69.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,16) and color cyan and layers
  _0: a rectangle with size (15,16) and color black and mask .xxxx.xx........|x.xxxxxxx.......|xx...x..........|xx...xxxx.x.....|xx......xxx.....|.x......xxx.xx..|.xx..x....x..xxx|.x.x.x.x..x...x.|.xxx.xxxxxxxxxxx|.x......x.xxx...|.x......x.xx....|x.xxx..xx...x...|.xx....xx...xxx.|x..x...xxx.x....|...x...xxx...... at (0,0)
diff: 
delta: (0,13)=0  (0,14)=0  (0,15)=0  (1,10)=0  (1,12)=0  (1,14)=0  (1,15)=0  (2,12)=0  (2,14)=0  (3,3)=0  (3,13)=2  (3,15)=0  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,13)=2  (4,15)=0  (5,2)=2  (5,4)=2  (9,4)=2  (10,2)=2  (10,5)=2  (10,14)=0  (11,9)=2  (12,9)=2  (12,11)=2  (14,5)=0 
   (1081.3 bits)
data: a background with size (15,16) and color cyan and layers
  _0: a rectangle with size (5,4) and color black and mask .xxx|x.xx|x.x.|...x|...x at (0,12)
  _01: a rectangle with size (15,16) and color black and mask .xxxx.xx........|x.xxxxxxx.......|xx...x..........|xx...xxxx.x.....|xx......xxx.....|.x......xxx.xx..|.xx..x....x..xxx|.x.x.x.x..x...x.|.xxx.xxxxxxxxxxx|.x......x.xxx...|.x......x.xx....|x.xxx..xx...x...|.xx....xx...xxx.|x..x...xxx.x....|...x...xxx...... at (0,0)
  _011: a rectangle with size (2,5) and color red and mask Full (and Border) at (4,2)
  _0111: a rectangle with size (2,4) and color yellow and mask xx.x|.xx. at (9,2)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|.x at (3,11)
  _011111: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (11,10)
  _0111111: a rectangle with size (1,4) and color red and mask Full at (10,2)
diff: 
delta: (1,10)=0  (3,3)=0  (3,13)=2  (4,3)=4  (4,11)=2  (4,13)=2  (5,3)=4  (5,5)=4  (5,6)=4  (9,4)=2  (10,14)=0  (11,9)=2  (12,9)=2  (12,11)=2  (14,5)=0 
   (673.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color cyan and layers
  _0: a rectangle with size (15,16) and color black and mask .xxxx.xx........|x.xxxxxxx.......|xx...x..........|xx...xxxx.x.....|xx......xxx.....|.x......xxx.xx..|.xx..x....x..xxx|.x.x.x.x..x...x.|.xxx.xxxxxxxxxxx|.x......x.xxx...|.x......x.xx....|x.xxx..xx...x...|.xx....xx...xxx.|x..x...xxx.x....|...x...xxx...... at (0,0)
diff: 
delta: (0,13)=0  (0,14)=0  (0,15)=0  (1,10)=0  (1,12)=0  (1,14)=0  (1,15)=0  (2,12)=0  (2,14)=0  (3,3)=0  (3,13)=2  (3,15)=0  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,13)=2  (4,15)=0  (5,2)=2  (5,4)=2  (9,4)=2  (10,2)=2  (10,5)=2  (10,14)=0  (11,9)=2  (12,9)=2  (12,11)=2  (14,5)=0 
! size mismatch, 10x10 instead of 15x16
>> Trial 2
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,10) and color cyan and mask x.........|.x........|..xxx.....|..x.x.....|...x...x..|x..x.xxx..|x..xx.xxxx|x.x.x.x.xx|x...x.....|x.xx.xxx..|x..xx.xx..|.x...xx...|x..xxxx...|.xx.xxx...|xxx.x.x... at (0,0)
diff: 
delta: (0,5)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (1,9)=8  (1,11)=8  (1,13)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,13)=8  (2,15)=8  (3,9)=8  (3,11)=8  (3,12)=8  (3,13)=2  (3,14)=8  (4,2)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=2  (4,12)=8  (4,13)=2  (4,14)=8  (5,2)=2  (5,4)=2  (5,11)=8  (5,14)=8  (5,15)=8  (6,11)=8  (6,12)=8  (7,11)=8  (7,12)=8  (7,13)=8  (7,15)=8  (9,4)=2  (9,9)=8  (9,13)=8  (9,14)=8  (9,15)=8  (10,2)=2  (10,5)=2  (10,9)=8  (10,12)=8  (10,13)=8  (10,15)=8  (11,9)=2  (11,10)=8  (11,11)=8  (11,13)=8  (11,14)=8  (11,15)=8  (12,9)=2  (12,10)=8  (12,11)=2  (12,15)=8  (13,10)=8  (13,12)=8  (13,13)=8  (13,14)=8  (13,15)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=8 
! size mismatch, 10x10 instead of 15x16
>> Trial 3
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (8,10) and color cyan and mask ..xxxxx...|...x.x.x..|xxxxxx.x.x|...x.xx.x.|......x.x.|.....x..xx|.....xx...|.....xxx.. at (0,6)
diff: 
delta: (0,0)=8  (0,5)=8  (1,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,2)=8  (3,4)=8  (3,13)=2  (4,2)=2  (4,3)=8  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=8  (4,11)=2  (4,13)=2  (5,0)=8  (5,2)=2  (5,3)=8  (5,4)=2  (5,5)=8  (5,6)=8  (5,7)=8  (6,0)=8  (6,3)=8  (6,4)=8  (6,6)=8  (6,7)=8  (6,8)=8  (6,9)=8  (7,0)=8  (7,2)=8  (7,4)=8  (7,6)=8  (7,8)=8  (7,9)=8  (7,15)=8  (8,0)=8  (8,4)=8  (9,0)=8  (9,2)=8  (9,3)=8  (9,4)=2  (9,5)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,13)=8  (9,14)=8  (9,15)=8  (10,0)=8  (10,2)=2  (10,3)=8  (10,4)=8  (10,5)=2  (10,6)=8  (10,7)=8  (10,9)=8  (10,12)=8  (10,13)=8  (10,15)=8  (11,1)=8  (11,5)=8  (11,6)=8  (11,9)=2  (11,10)=8  (11,11)=8  (11,13)=8  (11,14)=8  (11,15)=8  (12,0)=8  (12,3)=8  (12,4)=8  (12,5)=8  (12,6)=8  (12,9)=2  (12,10)=8  (12,11)=2  (12,15)=8  (13,1)=8  (13,2)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,10)=8  (13,12)=8  (13,13)=8  (13,14)=8  (13,15)=8  (14,0)=8  (14,1)=8  (14,2)=8  (14,4)=8  (14,6)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (14,15)=8 
! size mismatch, 10x10 instead of 15x16

TRAIN 36fdfd69.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,7)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,5)=3  (5,6)=3  (5,11)=3  (5,12)=3  (6,1)=3  (6,6)=3  (6,10)=3  (7,5)=3  (7,6)=3  (7,8)=3  (7,13)=3  (8,2)=3  (8,3)=3  (8,5)=3  (8,6)=3  (8,8)=3  (8,9)=3  (8,12)=3  (8,13)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=2  (9,5)=3  (9,6)=3  (9,10)=3  (9,12)=3  (10,1)=3  (10,2)=2  (10,3)=3  (10,7)=3  (10,8)=3  (10,12)=3  (11,1)=3  (11,2)=3  (11,4)=3  (11,5)=3  (11,8)=3  (11,9)=3  (11,11)=3  (11,13)=3  (12,2)=3  (12,4)=3  (12,5)=3  (12,8)=3  (12,10)=3  (12,11)=3  (12,13)=3  (13,1)=3  (13,2)=3  (13,4)=3  (13,6)=3  (13,8)=3  (14,0)=3  (14,3)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3 
   (2280.4 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (8,9) and color green and mask xx......x|xx.....xx|xx.....x.|..xx...x.|...xx.x.x|...x.xx.x|...x.....|....xx... at (7,5)
  _01: a rectangle with size (3,5) and color red and mask Full at (4,3)
  _011: a rectangle with size (7,7) and color green and mask ..xx...|xx.....|.x.....|.xx.xx.|..x.xx.|.xx.x.x|x..x... at (8,0)
  _0111: a rectangle with size (4,6) and color green and mask ..x.xx|xx.x..|..xxx.|..xxx. at (0,5)
  _01111: a rectangle with size (4,4) and color green and mask ..xx|.x.x|.xx.|x... at (3,10)
  _011111: a rectangle with size (3,4) and color green and mask xx..|..x.|..xx at (0,0)
  _0111111: a rectangle with size (3,3) and color green and mask x..|xx.|..x at (7,8)
diff: 
delta: (1,12)=3  (3,0)=3  (4,7)=4  (5,1)=3  (5,2)=3  (5,5)=4  (5,6)=4  (6,1)=3  (6,6)=4  (9,2)=4  (9,3)=2  (10,2)=2  (10,3)=4  (14,12)=3  (14,13)=3 
   (837.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (15,9) and color green and mask ..x.xx...|xx.x.....|..xxx....|..xxx....|..x......|xx.......|.x.......|xx......x|xx.....xx|xx.....x.|..xx...x.|...xx.x.x|...x.xx.x|...x.....|....xx... at (0,5)
diff: 
delta: (0,0)=3  (0,1)=3  (1,2)=3  (1,12)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,12)=3  (3,13)=3  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,3)=2  (5,4)=2  (5,7)=2  (5,11)=3  (5,12)=3  (6,1)=3  (6,3)=2  (6,4)=2  (6,5)=2  (6,7)=2  (6,10)=3  (7,8)=3  (8,2)=3  (8,3)=3  (8,8)=3  (8,9)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=2  (9,10)=3  (10,1)=3  (10,2)=2  (10,3)=3  (11,1)=3  (11,2)=3  (11,4)=3  (11,5)=3  (12,2)=3  (12,4)=3  (12,5)=3  (13,1)=3  (13,2)=3  (13,4)=3  (13,6)=3  (14,0)=3  (14,3)=3  (14,12)=3  (14,13)=3 
! size mismatch, 10x10 instead of 15x14
>> Trial 2
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask ..xx...|xxx....|.x.x...|.xx.xx.|..x.xx.|.xx.x.x|x..x... at (8,0)
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,3)=2  (5,4)=2  (5,5)=3  (5,6)=3  (5,7)=2  (5,11)=3  (5,12)=3  (6,1)=3  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=3  (6,7)=2  (6,10)=3  (7,5)=3  (7,6)=3  (7,8)=3  (7,13)=3  (8,5)=3  (8,6)=3  (8,8)=3  (8,9)=3  (8,12)=3  (8,13)=3  (9,3)=2  (9,5)=3  (9,6)=3  (9,10)=3  (9,12)=3  (10,2)=2  (10,7)=3  (10,8)=3  (10,12)=3  (11,8)=3  (11,9)=3  (11,11)=3  (11,13)=3  (12,8)=3  (12,10)=3  (12,11)=3  (12,13)=3  (13,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3 
! size mismatch, 10x10 instead of 15x14
>> Trial 3
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask Full at (4,3)
diff: 
delta: (0,0)=3  (0,1)=3  (0,7)=3  (0,9)=3  (0,10)=3  (1,2)=3  (1,5)=3  (1,6)=3  (1,8)=3  (1,12)=3  (2,2)=3  (2,3)=3  (2,7)=3  (2,8)=3  (2,9)=3  (3,0)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,13)=3  (4,7)=3  (4,11)=3  (4,13)=3  (5,1)=3  (5,2)=3  (5,5)=3  (5,6)=3  (5,11)=3  (5,12)=3  (6,1)=3  (6,6)=3  (6,10)=3  (7,5)=3  (7,6)=3  (7,8)=3  (7,13)=3  (8,2)=3  (8,3)=3  (8,5)=3  (8,6)=3  (8,8)=3  (8,9)=3  (8,12)=3  (8,13)=3  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=2  (9,5)=3  (9,6)=3  (9,10)=3  (9,12)=3  (10,1)=3  (10,2)=2  (10,3)=3  (10,7)=3  (10,8)=3  (10,12)=3  (11,1)=3  (11,2)=3  (11,4)=3  (11,5)=3  (11,8)=3  (11,9)=3  (11,11)=3  (11,13)=3  (12,2)=3  (12,4)=3  (12,5)=3  (12,8)=3  (12,10)=3  (12,11)=3  (12,13)=3  (13,1)=3  (13,2)=3  (13,4)=3  (13,6)=3  (13,8)=3  (14,0)=3  (14,3)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3 
! size mismatch, 10x10 instead of 15x14

TRAIN 36fdfd69.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (17,18) and color brown and mask ........xx........|.........x..x.....|........xxx..x..x.|.........xxxxxx.x.|......x.xx.x..xxxx|.....x.x..x..x....|.....x....x.xx....|..xx.x..x.xx.xxx..|...x...xxxxx.x....|xx.x.x.xx..xx.....|.xx.x.x.x..x......|.xx..x.xxx........|x.xx.xxx..x.......|xxxxxx....x.......|.xxxxxx.x.........|.x.x..xx.x........|x................. at (0,0)
diff: 
delta: (0,3)=9# (0,4)=9# (0,5)=9# (0,16)=9# (1,0)=9# (1,1)=2  (1,2)=9# (1,3)=2  (1,4)=2  (1,5)=9# (2,1)=2  (2,2)=2  (2,3)=9# (2,4)=9# (2,5)=2  (4,1)=9# (4,2)=9# (5,0)=9# (5,1)=9# (5,2)=9# (5,3)=9# (5,6)=2  (5,8)=2  (5,9)=2  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,0)=9# (7,17)=9# (9,17)=9# (10,7)=2  (10,14)=9# (10,15)=9# (10,16)=9# (10,17)=9# (11,6)=2  (11,13)=9# (11,14)=9# (11,15)=9# (11,17)=9# (12,14)=9# (12,15)=9# (12,16)=9# (13,11)=2  (13,12)=2  (13,13)=9# (13,14)=2  (13,15)=2  (13,16)=9# (14,11)=2  (14,12)=9# (14,13)=2  (14,14)=9# (14,15)=9# (14,16)=2  (14,17)=9# (15,11)=2  (15,12)=2  (15,13)=9# (15,14)=2  (15,15)=2  (15,16)=9# (16,12)=9# (16,14)=9# (16,15)=9# (16,16)=9#
! size mismatch, 10x10 instead of 17x18
>> Trial 2
data: a background with size (17,18) and color brown and layers
  _0: a rectangle with size (13,18) and color black and mask ..........x.xx....|...........xx.xxxx|...........x..xxxx|............x...x.|............x.xxxx|.........xx..xxxx.|.........xx.xx....|..........xxx.....|........xx.xxx....|......xxxx........|x......x.xx.......|x.x.xx..x.x.......|.xxxxxxxxxxx...... at (4,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=0  (0,6)=0  (0,7)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,14)=0  (0,15)=0  (0,17)=0  (1,1)=2  (1,3)=2  (1,4)=2  (1,6)=0  (1,7)=0  (1,8)=0  (1,10)=0  (1,11)=0  (1,13)=0  (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=0  (2,0)=0  (2,1)=2  (2,2)=2  (2,5)=2  (2,6)=0  (2,7)=0  (2,11)=0  (2,12)=0  (2,14)=0  (2,15)=0  (2,17)=0  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=0  (3,5)=0  (3,6)=0  (3,7)=0  (3,8)=0  (3,15)=0  (3,17)=0  (4,0)=0  (4,3)=0  (4,4)=0  (4,5)=0  (4,7)=0  (5,4)=0  (5,6)=2  (5,8)=2  (5,9)=2  (6,0)=0  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,1)=0  (7,4)=0  (7,6)=0  (7,7)=0  (7,9)=0  (8,0)=0  (8,1)=0  (8,2)=0  (8,4)=0  (8,5)=0  (8,6)=0  (9,2)=0  (9,4)=0  (9,6)=0  (10,0)=0  (10,3)=0  (10,5)=0  (10,7)=2  (11,0)=0  (11,3)=0  (11,4)=0  (11,6)=2  (11,16)=0  (12,1)=0  (12,4)=0  (12,17)=0  (13,11)=2  (13,12)=2  (13,14)=2  (13,15)=2  (13,17)=0  (14,11)=2  (14,13)=2  (14,16)=2  (15,11)=2  (15,12)=2  (15,14)=2  (15,15)=2  (15,17)=0  (16,13)=0  (16,17)=0 
! size mismatch, 10x10 instead of 17x18

TEST 36fdfd69.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.5 sec (28.5 sec/task)
bits-train-error = 22201.0 bits (22201.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-323] Checking task 3906de3d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 23873.4 = 23889.0
DL output with Mo: L = 15.6 + 23873.4 = 23889.0
DL input+output M: L = 31.2 + 47746.7 = 47778.0

# learning a model for train pairs
2.000	
1.306	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.629	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.484	OUT OBJECT at ^.layer_00: ^.layer_0
0.398	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.373	OUT DEF: ^.size=^.size
0.359	OUT OBJECT at ^.layer_000: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.345	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.326	OUT OBJECT at ^.layer_001: ^.layer_01.shape at (?,?)
0.317	OUT DEF: ^.layer_0.shape.size=min(^.layer_01.shape.size, ^.layer_011.shape.size)
0.308	OUT DEF: ^.layer_000.shape.size.i=^.layer_01.shape.size.i
0.301	IN  DEF: ^.layer_0.shape.color=blue
0.294	IN  DEF: ^.layer_011.shape.color=red
0.287	OUT DEF: ^.layer_0.shape.color=red
0.280	OUT DEF: ^.layer_001.pos.j=^.layer_01.pos.j
0.275	OUT DEF: ^.layer_000.pos.i=^.layer_011.shape.size.j - 1
0.269	OUT DEF: ^.layer_0.pos.i=right(^.layer_01) - ^.layer_0.shape.size.i
0.263	OUT DEF: ^.layer_000.shape.size.j=2
0.257	OUT DEF: ^.layer_000.pos.j=right(^.layer_0) / 3
0.253	OUT DEF: ^.layer_0.shape.mask=Full
0.250	OUT DEF: ^.color=black
0.247	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _000: a rectangle with size (^.layer_01.shape.size.i,2) and color ? and mask ? at (^.layer_011.shape.size.j - 1,right(^.layer_0) / 3)
  _00: ^.layer_0
  _001: ^.layer_01.shape at (?,^.layer_01.pos.j)
  _0: a rectangle with size min(^.layer_01.shape.size, ^.layer_011.shape.size) and color red and mask Full at (right(^.layer_01) - ^.layer_0.shape.size.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 117.0 + 4803.6 = 4920.7
DL output with Mo: L = 263.2 + 710.1 = 973.3
DL input+output M: L = 380.3 + 5513.7 = 5894.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,5)
  _01: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
   (119.8 bits)
data: a background with size (10,10) and color black and layers
  _000: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,2)
  _00: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,5)
  _001: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _0: a rectangle with size (3,1) and color red and mask Full at (2,4)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,2)
  _01: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,5)
  _01: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color blue and mask Full (and Border) at (0,2)
  _01: a rectangle with size (4,5) and color blue and mask xxxxx|xxxxx|xx.xx|xx.xx at (0,2)
  _011: a rectangle with size (3,1) and color red and mask Full at (7,4)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 3906de3d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (9,4)
diff: 
delta:
   (137.4 bits)
data: a background with size (10,10) and color black and layers
  _000: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,2)
  _00: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _001: a rectangle with size (4,1) and color red and mask Full at (2,6)
  _0: a rectangle with size (1,1) and color red and mask Full at (1,4)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (9,4)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _01: a rectangle with size (1,1) and color red and mask Full at (9,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (0,5)
  _01: a rectangle with size (5,7) and color blue and mask xxxxxxx|xx.xxxx|xx.x.xx|xx.x.xx|.....xx at (0,2)
  _011: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta: (9,4)=2 
! 19 wrong pixels (generated / expected)

TRAIN 3906de3d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
  _011: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
diff: 
delta: (7,8)=2  (8,8)=2  (9,8)=2 
   (223.1 bits)
data: a background with size (10,10) and color black and layers
  _000: a rectangle with size (4,2) and color red and mask x.|x.|xx|.x at (1,3)
  _00: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _001: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _0: a rectangle with size (3,1) and color red and mask Full at (2,8)
diff: 
delta:
   (30.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _01: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta: (7,8)=2  (8,8)=2  (9,8)=2 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _01: a rectangle with size (4,1) and color red and mask Full at (6,6)
  _011: a rectangle with size (3,2) and color red and mask x.|xx|xx at (7,3)
diff: 
delta: (7,8)=2  (8,8)=2  (9,8)=2 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,9) and color blue and mask xxxxxxxxx|xx.xxxxxx|xx.xxxx.x|xx..x.x.x at (0,1)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (8,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (6,6)
diff: 
delta: (7,3)=2  (7,8)=2  (8,8)=2  (9,8)=2 
! 17 wrong pixels (generated / expected)

TRAIN 3906de3d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _01: a rectangle with size (4,3) and color red and mask .x.|.x.|xx.|xxx at (6,4)
  _011: a rectangle with size (6,1) and color red and mask Full at (4,8)
diff: 
delta: (7,2)=2  (8,2)=2  (9,2)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (4,8)
  _011: a rectangle with size (4,3) and color red and mask .x.|.x.|xx.|xxx at (6,4)
diff: 
delta: (7,2)=2  (8,2)=2  (9,2)=2 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,9) and color blue and mask xxxxxxxxx|x.xxxxx.x|x.x.x.x.x|x.x...x.x|..x.....x at (0,1)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (8,4)
  _011: a rectangle with size (6,1) and color red and mask Full at (4,8)
diff: 
delta: (6,5)=2  (7,2)=2  (7,5)=2  (8,2)=2  (9,2)=2  (9,6)=2 
! 22 wrong pixels (generated / expected)

TEST 3906de3d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.0 sec (11.0 sec/task)
bits-train-error = 710.1 bits (710.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-322] Checking task 39a8645d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21446.3 = 21461.9
DL output with Mo: L = 15.6 + 3303.5 = 3319.1
DL input+output M: L = 31.2 + 24749.8 = 24781.0

# learning a model for train pairs
2.000	
1.484	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.349	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.079	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.960	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.843	OUT DEF: ^.size=^.layer_0.shape.size
0.768	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.697	OUT DEF: ^.layer_0.pos='(0,0)
0.641	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.618	OUT DEF: ^.color=black
0.615	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.0 + 9708.4 = 9884.4
DL output with Mo: L = 40.2 + 471.5 = 511.7
DL input+output M: L = 216.3 + 10179.9 = 10396.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (2,10)
  _011: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (7,3)
  _0111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (7,9)
  _01111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (11,1)
diff: 
delta:
   (229.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
   (13.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (2,10)
  _011: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (7,3)
  _0111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (7,9)
  _01111: a rectangle with size (3,3) and color red and mask x.x|x.x|.x. at (11,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (0,7)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (6,1)
  _011: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (11,11)
  _0111: a rectangle with size (3,3) and color red and mask Even Checkboard at (5,6)
  _01111: a rectangle with size (3,3) and color yellow and mask x..|.xx|x.. at (1,2)
diff: 
delta: (3,11)=4  (4,12)=4  (4,13)=4  (5,11)=4  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (12,2)=4 
   (559.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x..|.xx|x.. at (0,0)
diff: 
delta:
   (20.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (0,7)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (6,1)
  _011: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (11,11)
  _0111: a rectangle with size (3,3) and color red and mask Even Checkboard at (5,6)
  _01111: a rectangle with size (3,3) and color yellow and mask x..|.xx|x.. at (1,2)
diff: 
delta: (3,11)=4  (4,12)=4  (4,13)=4  (5,11)=4  (8,9)=4  (9,10)=4  (9,11)=4  (10,2)=4  (10,9)=4  (11,3)=4  (11,4)=4  (12,2)=4 
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (2,2)
  _01: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,9)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (9,8)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (8,9)
  _01111: a rectangle with size (1,1) and color pink and mask Full at (4,11)
diff: 
delta:
   (182.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,0)
diff: 
delta:
   (13.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (2,2)
  _01: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,9)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (9,8)
  _0111: a rectangle with size (3,1) and color cyan and mask Full at (8,9)
  _01111: a rectangle with size (1,1) and color pink and mask Full at (4,11)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 39a8645d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|.xx|x.x at (2,3)
  _01: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (2,9)
  _011: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (8,0)
  _0111: a rectangle with size (3,3) and color red and mask .x.|xxx|xx. at (11,4)
  _01111: a rectangle with size (3,3) and color green and mask x.x|.xx|x.x at (11,9)
diff: 
delta: (7,7)=8  (8,6)=8  (8,8)=8  (9,7)=8 
! 9 wrong pixels (generated / expected)

TEST 39a8645d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.5 sec (5.5 sec/task)
bits-train-error = 471.5 bits (471.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-321] Checking task 39e1d7f9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 280824.5 = 280840.1
DL output with Mo: L = 15.6 + 324049.7 = 324065.4
DL input+output M: L = 31.2 + 604874.3 = 604905.5

# learning a model for train pairs
2.000	
1.333	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.728	OUT OBJECT at ^.layer_0: ^.layer_0
0.657	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.585	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.516	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.450	OUT OBJECT at ^.layer_011: ^.layer_01
0.386	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
0.335	OUT OBJECT at ^.layer_0111: ^.layer_011.shape at (?,?)
0.302	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.268	OUT OBJECT at ^.layer_0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.246	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.216	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011.shape at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 33983.4 = 34160.3
DL output with Mo: L = 167.0 + 30405.9 = 30572.9
DL input+output M: L = 343.9 + 64389.3 = 64733.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (4,4) and color pink and mask Full at (5,5)
  _01: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _011: a rectangle with size (14,4) and color green and mask Full at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask Full at (20,15)
diff: 
delta:
   (749.3 bits)
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _0100: a rectangle with size (4,4) and color pink and mask Full at (20,15)
  _010: a rectangle with size (4,14) and color green and mask Full at (20,10)
  _01: a rectangle with size (4,4) and color pink and mask Full at (5,5)
  _011: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _0111: a rectangle with size (14,4) and color green and mask Full at (0,5)
  _01111: a rectangle with size (4,4) and color green and mask Full at (15,15)
diff: 
delta:
   (167.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (4,4) and color pink and mask Full at (5,5)
  _01: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _011: a rectangle with size (14,4) and color green and mask Full at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask Full at (20,15)
diff: 
delta:
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (4,14) and color green and mask Full at (5,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color green and mask Full at (10,5)
  _0111: a rectangle with size (4,4) and color pink and mask Full at (20,15)
diff: 
delta: (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (6,5)=6  (6,6)=6  (6,7)=6  (6,8)=6  (7,5)=6  (7,6)=6  (7,7)=6  (7,8)=6  (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6 
! size mismatch, 10x10 instead of 24x24

TRAIN 39e1d7f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _01: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (20,12)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
   (1196.8 bits)
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _0100: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _010: a rectangle with size (11,3) and color pink and mask Full at (16,12)
  _01: a rectangle with size (3,11) and color pink and mask Full at (20,8)
  _011: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _01111: a rectangle with size (3,3) and color pink and mask Full at (0,20)
diff: 
delta: (4,24)=6  (4,25)=6  (4,26)=6  (5,24)=6  (5,25)=6  (5,26)=6  (6,24)=6  (6,25)=6  (6,26)=6  (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4  (20,12)=4  (20,13)=4  (20,14)=4  (21,12)=4  (21,13)=4  (21,14)=4  (22,12)=4  (22,13)=4  (22,14)=4 
   (931.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _01: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (20,12)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
! size mismatch, 10x10 instead of 27x27
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color pink and mask Full at (8,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,24)
  _011: a rectangle with size (11,3) and color pink and mask Full at (4,8)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (20,12)
diff: 
delta: (8,8)=4  (8,9)=4  (8,10)=4  (9,8)=4  (9,9)=4  (9,10)=4  (10,8)=4  (10,9)=4  (10,10)=4 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color yellow and mask Full at (12,12)
  _01: a rectangle with size (3,11) and color yellow and mask Full at (20,12)
  _011: a rectangle with size (3,11) and color yellow and mask Full at (16,12)
  _0111: a rectangle with size (3,3) and color red and mask Full at (0,24)
diff: 
delta: (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2 
   (1452.3 bits)
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _0100: a rectangle with size (3,23) and color yellow and mask Full at (0,0)
  _010: a rectangle with size (3,11) and color yellow and mask Full at (8,0)
  _01: a rectangle with size (3,27) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,11) and color yellow and mask Full at (20,12)
  _0111: a rectangle with size (3,11) and color yellow and mask Full at (12,12)
  _01111: a rectangle with size (3,11) and color yellow and mask Full at (16,12)
diff: 
delta: (0,12)=0  (0,13)=0  (0,14)=0  (0,16)=0  (0,17)=0  (0,18)=0  (0,24)=2  (0,25)=2  (0,26)=2  (1,12)=0  (1,13)=0  (1,14)=0  (1,16)=0  (1,17)=0  (1,18)=0  (1,24)=2  (1,25)=2  (1,26)=2  (2,12)=0  (2,13)=0  (2,14)=0  (2,16)=0  (2,17)=0  (2,18)=0  (2,24)=2  (2,25)=2  (2,26)=2  (4,4)=2  (4,5)=2  (4,6)=2  (4,12)=0  (4,13)=0  (4,14)=0  (4,16)=0  (4,17)=0  (4,18)=0  (5,4)=2  (5,5)=2  (5,6)=2  (5,12)=0  (5,13)=0  (5,14)=0  (5,16)=0  (5,17)=0  (5,18)=0  (6,4)=2  (6,5)=2  (6,6)=2  (6,12)=0  (6,13)=0  (6,14)=0  (6,16)=0  (6,17)=0  (6,18)=0  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2 
   (1941.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
  _010: a rectangle with size (3,11) and color yellow and mask Full at (12,12)
  _01: a rectangle with size (3,11) and color yellow and mask Full at (20,12)
  _011: a rectangle with size (3,11) and color yellow and mask Full at (16,12)
  _0111: a rectangle with size (3,3) and color red and mask Full at (0,24)
diff: 
delta: (4,4)=2  (4,5)=2  (4,6)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,4)=2  (6,5)=2  (6,6)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 27x27

TRAIN 39e1d7f9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color yellow and layers
  _0: a rectangle with size (2,29) and color black and mask Full (and Border) at (0,0)
  _010: a rectangle with size (2,29) and color black and mask Full (and Border) at (15,0)
  _01: a rectangle with size (2,29) and color black and mask Full (and Border) at (18,0)
  _011: a rectangle with size (2,29) and color black and mask Full (and Border) at (27,0)
  _0111: a rectangle with size (2,26) and color black and mask Full (and Border) at (24,3)
diff: 
delta: (0,2)=4  (0,5)=4  (0,8)=4  (0,11)=4  (0,14)=4  (0,17)=4  (0,20)=4  (0,23)=4  (0,26)=4  (1,2)=4  (1,5)=4  (1,8)=4  (1,11)=4  (1,14)=4  (1,17)=4  (1,20)=4  (1,23)=4  (1,26)=4  (3,0)=0  (3,1)=0  (3,3)=0  (3,4)=0  (3,6)=0  (3,7)=0  (3,9)=0  (3,10)=0  (3,12)=0  (3,13)=0  (3,15)=0  (3,16)=0  (3,18)=0  (3,19)=0  (3,21)=6  (3,22)=6  (3,24)=0  (3,25)=0  (3,27)=0  (3,28)=0  (4,0)=0  (4,1)=0  (4,3)=0  (4,4)=0  (4,6)=0  (4,7)=0  (4,9)=0  (4,10)=0  (4,12)=0  (4,13)=0  (4,15)=0  (4,16)=0  (4,18)=0  (4,19)=0  (4,21)=6  (4,22)=6  (4,24)=0  (4,25)=0  (4,27)=0  (4,28)=0  (6,0)=0  (6,1)=0  (6,3)=0  (6,4)=0  (6,6)=8  (6,7)=8  (6,9)=3  (6,10)=3  (6,12)=8  (6,13)=8  (6,15)=0  (6,16)=0  (6,18)=0  (6,19)=0  (6,21)=0  (6,22)=0  (6,24)=0  (6,25)=0  (6,27)=0  (6,28)=0  (7,0)=0  (7,1)=0  (7,3)=0  (7,4)=0  (7,6)=8  (7,7)=8  (7,9)=3  (7,10)=3  (7,12)=8  (7,13)=8  (7,15)=0  (7,16)=0  (7,18)=0  (7,19)=0  (7,21)=0  (7,22)=0  (7,24)=0  (7,25)=0  (7,27)=0  (7,28)=0  (9,0)=0  (9,1)=0  (9,3)=0  (9,4)=0  (9,6)=3  (9,7)=3  (9,9)=6  (9,10)=6  (9,12)=3  (9,13)=3  (9,15)=0  (9,16)=0  (9,18)=0  (9,19)=0  (9,21)=0  (9,22)=0  (9,24)=0  (9,25)=0  (9,27)=0  (9,28)=0  (10,0)=0  (10,1)=0  (10,3)=0  (10,4)=0  (10,6)=3  (10,7)=3  (10,9)=6  (10,10)=6  (10,12)=3  (10,13)=3  (10,15)=0  (10,16)=0  (10,18)=0  (10,19)=0  (10,21)=0  (10,22)=0  (10,24)=0  (10,25)=0  (10,27)=0  (10,28)=0  (12,0)=0  (12,1)=0  (12,3)=0  (12,4)=0  (12,6)=8  (12,7)=8  (12,9)=3  (12,10)=3  (12,12)=8  (12,13)=8  (12,15)=0  (12,16)=0  (12,18)=0  (12,19)=0  (12,21)=0  (12,22)=0  (12,24)=0  (12,25)=0  (12,27)=0  (12,28)=0  (13,0)=0  (13,1)=0  (13,3)=0  (13,4)=0  (13,6)=8  (13,7)=8  (13,9)=3  (13,10)=3  (13,12)=8  (13,13)=8  (13,15)=0  (13,16)=0  (13,18)=0  (13,19)=0  (13,21)=0  (13,22)=0  (13,24)=0  (13,25)=0  (13,27)=0  (13,28)=0  (15,2)=4  (15,5)=4  (15,8)=4  (15,11)=4  (15,14)=4  (15,17)=4  (15,20)=4  (15,23)=4  (15,26)=4  (16,2)=4  (16,5)=4  (16,8)=4  (16,11)=4  (16,14)=4  (16,17)=4  (16,20)=4  (16,23)=4  (16,26)=4  (18,2)=4  (18,5)=4  (18,8)=4  (18,11)=4  (18,14)=4  (18,17)=4  (18,20)=4  (18,23)=4  (18,26)=4  (19,2)=4  (19,5)=4  (19,8)=4  (19,11)=4  (19,14)=4  (19,17)=4  (19,20)=4  (19,23)=4  (19,26)=4  (21,0)=0  (21,1)=0  (21,3)=0  (21,4)=0  (21,6)=0  (21,7)=0  (21,9)=0  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=6  (21,16)=6  (21,18)=0  (21,19)=0  (21,21)=0  (21,22)=0  (21,24)=0  (21,25)=0  (21,27)=0  (21,28)=0  (22,0)=0  (22,1)=0  (22,3)=0  (22,4)=0  (22,6)=0  (22,7)=0  (22,9)=0  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=6  (22,16)=6  (22,18)=0  (22,19)=0  (22,21)=0  (22,22)=0  (22,24)=0  (22,25)=0  (22,27)=0  (22,28)=0  (24,0)=6  (24,1)=6  (24,5)=4  (24,8)=4  (24,11)=4  (24,14)=4  (24,17)=4  (24,20)=4  (24,23)=4  (24,26)=4  (25,0)=6  (25,1)=6  (25,5)=4  (25,8)=4  (25,11)=4  (25,14)=4  (25,17)=4  (25,20)=4  (25,23)=4  (25,26)=4  (27,2)=4  (27,5)=4  (27,8)=4  (27,11)=4  (27,14)=4  (27,17)=4  (27,20)=4  (27,23)=4  (27,26)=4  (28,2)=4  (28,5)=4  (28,8)=4  (28,11)=4  (28,14)=4  (28,17)=4  (28,20)=4  (28,23)=4  (28,26)=4 
! size mismatch, 10x10 instead of 29x29

TEST 39e1d7f9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 30405.9 bits (30405.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-320] Checking task 3aa6fb7a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4109.4 = 4125.1
DL output with Mo: L = 15.6 + 5317.7 = 5333.3
DL input+output M: L = 31.2 + 9427.1 = 9458.3

# learning a model for train pairs
2.000	
1.826	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.554	OUT OBJECT at ^.layer_0: ^.layer_0
1.372	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT OBJECT at ^.layer_01: ^.layer_01
1.025	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.957	OUT DEF: ^.size=^.size
0.916	IN  DEF: ^.layer_0.shape.mask=xx|.x
0.875	IN  DEF: ^.layer_01.shape.mask=x.|xx
0.843	OUT DEF: ^.layer_011.shape.size=^.layer_01.pos
0.812	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.785	IN  DEF: ^.layer_0.shape.color=cyan
0.758	IN  DEF: ^.layer_01.shape.color=cyan
0.741	OUT DEF: ^.layer_0111.pos.j=^.layer_0.pos.j
0.720	OUT DEF: ^.layer_0111.shape.color=blue
0.703	OUT DEF: ^.layer_011.pos.j=right(^.layer_01)
0.686	OUT DEF: ^.layer_0111.pos.i=bottom(^.layer_0)
0.673	OUT DEF: ^.layer_011.shape.mask=Full
0.661	IN  DEF: ^.color=black
0.652	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_01.pos and color ? and mask Full at (?,right(^.layer_01))
  _0111: a point with color blue at (bottom(^.layer_0),^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask xx|.x at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask x.|xx at (?,?)

DL input  with Mi: L = 95.8 + 1949.6 = 2045.4
DL output with Mo: L = 107.5 + 724.5 = 832.1
DL input+output M: L = 203.4 + 2674.1 = 2877.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,1)
diff: 
delta:
   (59.7 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,1)
  _011: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _0111: a point with color blue at (4,4)
diff: 
delta:
   (10.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.mask
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (3,4)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,1)
diff:   ^.layer_01.shape.mask
delta: (1,1)=8 
! 3 wrong pixels (generated / expected)

TRAIN 3aa6fb7a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
diff: 
delta: (5,4)=8  (6,3)=8  (6,4)=8 
   (135.3 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full at (5,3)
  _0111: a point with color blue at (1,4)
diff: 
delta: (2,3)=1  (5,3)=1 
   (61.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
diff: 
delta: (5,4)=8  (6,3)=8  (6,4)=8 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,4)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
diff:   ^.layer_01.shape.mask
delta: (2,2)=8  (3,2)=8  (3,3)=8 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (5,3)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (2,2)
diff:   ^.layer_0.shape.mask
delta: (0,4)=8  (0,5)=8  (1,5)=8 
! 8 wrong pixels (generated / expected)

TRAIN 3aa6fb7a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,5)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,3)
diff: 
delta: (1,0)=8  (1,1)=8  (2,0)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,0)
  _01: a rectangle with size (2,2) and color cyan and mask x.|xx at (3,3)
diff:   ^.layer_0.shape.mask
delta: (0,5)=8  (0,6)=8  (1,6)=8  (5,1)=8  (6,0)=8  (6,1)=8 
! 15 wrong pixels (generated / expected)

TEST 3aa6fb7a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 724.5 bits (724.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-319] Checking task 3ac3eb23.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1179.4 = 1195.0
DL output with Mo: L = 15.6 + 7036.4 = 7052.0
DL input+output M: L = 31.2 + 8215.8 = 8247.0

# learning a model for train pairs
2.000	
1.492	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.270	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.128	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.076	OUT DEF: ^.size=^.size
1.034	IN  DEF: ^.color=black
1.005	OUT DEF: ^.layer_01.pos='(0,0)
0.982	OUT DEF: ^.layer_01.shape.size.i=^.size.i
0.961	OUT DEF: ^.layer_01.shape.mask=Odd Checkboard
0.943	OUT DEF: ^.layer_01.shape.size.j=3
0.927	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.912	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - 1
0.905	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j - 1)
  _01: a rectangle with size (^.size.i,3) and color ? and mask Odd Checkboard at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 939.2 = 974.9
DL output with Mo: L = 94.4 + 536.9 = 631.3
DL input+output M: L = 130.0 + 1476.2 = 1606.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,10) and color black and layers
  _0: a point with color cyan at (0,5)
diff: 
delta: (0,1)=2 
   (60.8 bits)
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,3) and color cyan and mask Odd Checkboard at (0,4)
  _01: a rectangle with size (6,3) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (33.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta: (0,5)=8 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,10) and color black and layers
  _0: a point with color cyan at (0,5)
diff: 
delta: (0,1)=2 
! 18 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,7) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (33.1 bits)
data: a background with size (6,7) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (6,3) and color yellow and mask Odd Checkboard at (0,0)
diff: 
delta:
   (20.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,7) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3ac3eb23.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,12) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (0,6)=6  (0,9)=7#
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,12) and color black and layers
  _0: a point with color pink at (0,6)
diff: 
delta: (0,2)=3  (0,9)=7#
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,12) and color black and layers
  _0: a point with color orange at (0,9)
diff: 
delta: (0,2)=3  (0,6)=6 
! 36 wrong pixels (generated / expected)

TEST 3ac3eb23.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 536.9 bits (536.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-318] Checking task 3af2c5a8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3983.3 = 3998.9
DL output with Mo: L = 15.6 + 15238.8 = 15254.4
DL input+output M: L = 31.2 + 19222.1 = 19253.3

# learning a model for train pairs
2.000	
1.176	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.600	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.565	OUT DEF: ^.size=^.size * 2
0.533	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size * 2
0.513	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.502	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.492	OUT DEF: ^.color=^.color

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ^.color and layers
  _0: a rectangle with size ^.layer_0.shape.size * 2 and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 1644.8 = 1693.7
DL output with Mo: L = 48.3 + 1002.0 = 1050.3
DL input+output M: L = 97.2 + 2646.8 = 2744.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (0,1)
diff: 
delta:
   (50.8 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask .x..x.|x.xx.x|.x..x.|.x..x.|x.xx.x|.x..x. at (0,1)
diff: 
delta:
   (42.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (0,1)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
diff: 
delta: (1,1)=8  (1,3)=8  (2,2)=8 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta: (0,2)=8  (1,3)=8  (2,2)=8 
! 16 wrong pixels (generated / expected)

TRAIN 3af2c5a8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask ..xx|.x.x|xxx. at (0,0)
diff: 
delta:
   (61.9 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask ..xxxx..|.x.xx.x.|xxx..xxx|xxx..xxx|.x.xx.x.|..xxxx.. at (0,0)
diff: 
delta:
   (54.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask ..xx|.x.x|xxx. at (0,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (3,4) and color black and mask xx..|x.x.|...x at (0,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (0,0)
diff: 
delta: (1,0)=0  (1,2)=0  (2,3)=0 
! 20 wrong pixels (generated / expected)

TRAIN 3af2c5a8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (2,3) and color black and mask Full (and Border) at (1,1)
diff: 
delta:
   (51.8 bits)
data: a background with size (6,8) and color green and layers
  _0: a rectangle with size (4,6) and color black and mask Full at (1,1)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (2,3) and color black and mask Full (and Border) at (1,1)
diff: 
delta:
correct output grid

TRAIN 3af2c5a8.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
diff: 
delta: (0,0)=4  (1,3)=4 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (1,3)=4  (2,0)=4  (2,1)=4 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,3)
diff: 
delta: (0,0)=4  (2,0)=4  (2,1)=4 
! 16 wrong pixels (generated / expected)

TEST 3af2c5a8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 1002.0 bits (1002.0 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-317] Checking task 3bd67248.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7008.6 = 7024.2
DL output with Mo: L = 15.6 + 17951.2 = 17966.8
DL input+output M: L = 31.2 + 24959.8 = 24991.0

# learning a model for train pairs
2.000	
1.227	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.887	OUT OBJECT at ^.layer_0: ^.layer_0
0.631	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.437	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.407	OUT DEF: ^.size=^.size
0.380	OUT DEF: ^.layer_011.shape.size=^.size - 1
0.366	IN  DEF: ^.layer_0.shape.mask=Full
0.352	OUT DEF: ^.layer_01.shape.size.j=bottom(^.layer_0)
0.342	IN  DEF: ^.color=black
0.333	OUT DEF: ^.layer_011.pos.i='0
0.324	OUT DEF: ^.layer_01.shape.color=yellow
0.315	OUT DEF: ^.layer_011.shape.color=red
0.307	OUT DEF: ^.layer_01.pos.j=1
0.298	OUT DEF: ^.layer_011.pos.j=1
0.290	OUT DEF: ^.layer_01.pos.i=bottom(^.layer_0)
0.285	OUT DEF: ^.layer_01.shape.size.i=1
0.279	OUT DEF: ^.layer_01.shape.mask=Full
0.275	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (1,bottom(^.layer_0)) and color yellow and mask Full at (bottom(^.layer_0),1)
  _011: a rectangle with size ^.size - 1 and color red and mask ? at ('0,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 48.0 + 1371.2 = 1419.2
DL output with Mo: L = 124.4 + 1189.9 = 1314.3
DL input+output M: L = 172.3 + 2561.1 = 2733.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
diff: 
delta:
   (54.8 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (1,14) and color yellow and mask Full at (14,1)
  _011: a rectangle with size (14,14) and color red and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (0,1)
diff: 
delta:
   (81.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,1) and color pink and mask Full at (0,0)
diff: 
delta:
! 182 wrong pixels (generated / expected)

TRAIN 3bd67248.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
diff: 
delta:
   (36.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,1)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 3bd67248.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (46.0 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
  _011: a rectangle with size (6,6) and color red and mask .....x|....x.|...x..|..x...|.x....|x..... at (0,1)
diff: 
delta:
   (30.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (0,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN 3bd67248.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,0)
diff: 
delta:
! 72 wrong pixels (generated / expected)

TEST 3bd67248.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 1189.9 bits (1189.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-316] Checking task 3bdb4ada.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 49052.3 = 49068.0
DL output with Mo: L = 15.6 + 41508.9 = 41524.5
DL input+output M: L = 31.2 + 90561.3 = 90592.5

# learning a model for train pairs
2.000	
1.380	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.786	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.449	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.126	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.115	OUT DEF: ^.size=^.size
0.106	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.098	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.092	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.086	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.083	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.080	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.079	IN  DEF: ^.layer_0.shape.mask=Full
0.078	IN  DEF: ^.layer_01.shape.mask=Full
0.076	OUT DEF: ^.color=black
0.075	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 1849.8 = 1930.2
DL output with Mo: L = 49.9 + 1444.8 = 1494.7
DL input+output M: L = 130.2 + 3294.7 = 3424.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,29) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,13) and color cyan and mask Full at (5,12)
diff: 
delta:
   (95.6 bits)
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,29) and color yellow and mask xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx at (1,0)
  _01: a rectangle with size (3,13) and color cyan and mask xxxxxxxxxxxxx|x.x.x.x.x.x.x|xxxxxxxxxxxxx at (5,12)
diff: 
delta:
   (94.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,30) and color black and layers
  _0: a rectangle with size (3,29) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,13) and color cyan and mask Full at (5,12)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask Full at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask Full at (1,1)
diff: 
delta:
   (89.4 bits)
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask xxxxxxxxxxx|x.x.x.x.x.x|xxxxxxxxxxx at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask xxxxxxxxx|x.x.x.x.x|xxxxxxxxx at (1,1)
diff: 
delta:
   (50.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,20) and color black and layers
  _0: a rectangle with size (3,11) and color orange and mask Full at (5,7)
  _01: a rectangle with size (3,9) and color blue and mask Full at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 3bdb4ada.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (3,7) and color grey and mask Full at (1,2)
diff: 
delta: (8,15)=8  (8,16)=8  (8,17)=8  (8,18)=8  (8,19)=8  (9,15)=8  (9,16)=8  (9,17)=8  (9,18)=8  (9,19)=8  (10,15)=8  (10,16)=8  (10,17)=8  (10,18)=8  (10,19)=8 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (8,15)
diff: 
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5#
! 26 wrong pixels (generated / expected)

TEST 3bdb4ada.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.8 sec (4.8 sec/task)
bits-train-error = 1444.8 bits (1444.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-315] Checking task 3befdf3e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11109.5 = 11125.1
DL output with Mo: L = 15.6 + 30115.4 = 30131.0
DL input+output M: L = 31.2 + 41224.9 = 41256.1

# learning a model for train pairs
2.000	
1.369	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.599	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.470	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.422	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.402	OUT DEF: ^.size=^.size
0.388	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size
0.377	OUT DEF: ^.layer_011.pos=^.layer_01.pos
0.366	OUT DEF: ^.layer_01.pos=^.layer_0.pos
0.355	OUT DEF: ^.layer_0.pos=^.layer_01.pos - ^.layer_0.shape.size
0.346	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size
0.337	IN  DEF: ^.layer_0.shape.mask=Full
0.328	IN  DEF: ^.layer_01.shape.mask=Full
0.320	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.i + area(^.layer_0.shape)
0.312	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.pos.i + area(^.layer_0.shape)
0.306	IN  DEF: ^.color=black
0.300	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.295	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.289	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.286	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.283	OUT DEF: ^.layer_011.shape.mask=Full
0.280	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.pos.i + area(^.layer_0.shape),^.layer_0.pos.i + area(^.layer_0.shape)) and color ^.layer_01.shape.color and mask ? at ^.layer_01.pos - ^.layer_0.shape.size
  _01: a rectangle with size ^.layer_0.shape.size and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_0.pos
  _011: a rectangle with size ^.layer_01.shape.size and color ^.layer_0.shape.color and mask Full at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 2315.9 = 2396.2
DL output with Mo: L = 212.4 + 1744.7 = 1957.2
DL input+output M: L = 292.8 + 4060.6 = 4353.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (4,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta:
   (73.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask .xxx.|x...x|x...x|x...x|.xxx. at (2,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,4)
  _011: a rectangle with size (3,3) and color pink and mask Full at (3,3)
diff: 
delta:
   (31.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (4,4)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (3,3)
  _01: a rectangle with size (1,1) and color pink and mask Full at (4,4)
diff:   ^.layer_0.shape.mask
delta:
! 73 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (3,3)
diff: 
delta: (4,4)=6 
! 29 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta:
   (79.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask ..xxxx..|..xxxx..|xx....xx|xx....xx|xx....xx|xx....xx|..xxxx..|..xxxx.. at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (4,4)
  _011: a rectangle with size (4,4) and color orange and mask Full at (3,3)
diff: 
delta:
   (71.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full at (4,4)
  _01: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Border at (3,3)
  _01: a rectangle with size (2,2) and color orange and mask Full at (4,4)
diff:   ^.layer_0.shape.mask
delta:
! 88 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (3,3)
  _01: a rectangle with size (4,4) and color red and mask Full at (3,3)
diff: 
delta: (4,4)=7# (4,5)=7# (5,4)=7# (5,5)=7#
! 40 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (4,3)
  _01: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta:
   (79.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask ..xxxx..|..xxxx..|xx....xx|xx....xx|xx....xx|xx....xx|..xxxx..|..xxxx.. at (1,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (4,3)
  _011: a rectangle with size (4,4) and color blue and mask Full at (3,2)
diff: 
delta:
   (71.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (4,3)
  _01: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (3,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (4,3)
diff:   ^.layer_0.shape.mask
delta:
! 88 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color green and mask Full at (3,2)
  _01: a rectangle with size (4,4) and color green and mask Full at (3,2)
diff: 
delta: (4,3)=1  (4,4)=1  (5,3)=1  (5,4)=1 
! 33 wrong pixels (generated / expected)

TRAIN 3befdf3e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask Full at (6,6)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (1,1)
diff: 
delta: (2,2)=3  (7,7)=3  (7,8)=3  (8,7)=3  (8,8)=3 
! 95 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (6,6)
diff: 
delta: (2,2)=3  (7,7)=3  (7,8)=3  (8,7)=3  (8,8)=3 
! 60 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (7,7)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (6,6)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (2,1)=8  (2,2)=3  (2,3)=8  (3,1)=8  (3,2)=8  (3,3)=8 
! 49 wrong pixels (generated / expected)

TEST 3befdf3e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.8 sec (11.8 sec/task)
bits-train-error = 1744.7 bits (1744.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-314] Checking task 3c9b0459.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4930.5 = 4946.1
DL output with Mo: L = 15.6 + 4930.5 = 4946.1
DL input+output M: L = 31.2 + 9860.9 = 9892.2

# learning a model for train pairs
2.000	
1.701	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.403	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	OUT DEF: ^.size=^.size
1.202	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.130	OUT DEF: ^.color=^.color
1.084	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.053	OUT DEF: ^.layer_0.pos.j='0
1.027	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.004	OUT DEF: ^.layer_0.pos.i=span(^.layer_0.pos.i, ^.layer_00.pos.i) - ^.layer_0.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (span(^.layer_0.pos.i, ^.layer_00.pos.i) - ^.layer_0.shape.size.i,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 68.9 + 3272.8 = 3341.7
DL output with Mo: L = 81.4 + 1543.4 = 1624.8
DL input+output M: L = 150.3 + 4816.2 = 4966.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _00: a point with color cyan at (2,1)
  _0: a rectangle with size (3,2) and color blue and mask Odd Checkboard at (0,1)
diff: 
delta:
   (68.3 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,0)
diff: 
delta: (0,1)=8 
   (31.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _00: a point with color cyan at (2,1)
  _0: a rectangle with size (3,2) and color blue and mask Odd Checkboard at (0,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _00: a point with color cyan at (2,1)
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|x.. at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _00: a point with color brown at (2,1)
  _0: a rectangle with size (2,2) and color yellow and mask .x|xx at (0,1)
diff: 
delta: (0,0)=9#
   (91.7 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (1,0)
diff: 
delta: (0,1)=9# (2,2)=9#
   (54.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _00: a point with color brown at (2,1)
  _0: a rectangle with size (2,2) and color yellow and mask .x|xx at (0,1)
diff: 
delta: (0,0)=9#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _00: a point with color yellow at (0,2)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
diff: 
delta: (0,0)=9# (2,1)=9#
! 3 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _00: a point with color grey at (2,1)
  _0: a rectangle with size (2,3) and color grey and mask xx.|.xx at (1,0)
diff: 
delta:
   (71.9 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|.xx at (0,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _00: a point with color grey at (2,1)
  _0: a rectangle with size (2,3) and color grey and mask xx.|.xx at (1,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _00: a point with color red at (2,0)
  _0: a rectangle with size (2,3) and color brown and mask ..x|xxx at (0,0)
diff: 
delta: (0,1)=2 
   (95.4 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color brown and mask xxx|x.. at (1,0)
diff: 
delta: (0,2)=2  (2,1)=2 
   (57.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _00: a point with color red at (2,0)
  _0: a rectangle with size (2,3) and color brown and mask ..x|xxx at (0,0)
diff: 
delta: (0,1)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color brown and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (1,2) and color green and mask Full at (2,1)
diff: 
delta: (0,1)=2  (2,0)=2 
! 6 wrong pixels (generated / expected)

TRAIN 3c9b0459.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _00: a point with color orange at (2,2)
  _0: a rectangle with size (3,2) and color pink and mask x.|xx|.x at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _00: a point with color yellow at (2,0)
  _0: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
diff: 
delta: (2,2)=7#
! 3 wrong pixels (generated / expected)

TEST 3c9b0459.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.6 sec (2.6 sec/task)
bits-train-error = 1543.4 bits (1543.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-313] Checking task 3de23699.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 12018.4 = 12034.0
DL output with Mo: L = 15.6 + 6350.1 = 6365.7
DL input+output M: L = 31.2 + 18368.5 = 18399.7

# learning a model for train pairs
2.000	
1.506	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.157	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.055	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.971	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.944	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.893	OUT DEF: ^.layer_0.pos=span(^.layer_0.pos, ^.layer_01.pos) - 2
0.859	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.832	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.791	OUT DEF: ^.size.j=span(^.layer_01.pos.j, ^.layer_011.pos.j) - 2
0.763	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.733	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.717	OUT DEF: ^.color=black
0.709	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,span(^.layer_01.pos.j, ^.layer_011.pos.j) - 2) and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_01.shape.color and mask ^.layer_0.shape.mask at span(^.layer_0.pos, ^.layer_01.pos) - 2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 126.9 + 6248.5 = 6375.4
DL output with Mo: L = 127.3 + 1013.9 = 1141.2
DL input+output M: L = 254.1 + 7262.4 = 7516.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.xx at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,5)
  _0111: a point with color yellow at (5,1)
  _01111: a point with color yellow at (5,5)
diff: 
delta:
   (124.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xxx|.xx at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,5)
  _0111: a point with color yellow at (5,1)
  _01111: a point with color yellow at (5,5)
diff: 
delta:
! size mismatch, 10x3 instead of 3x3

TRAIN 3de23699.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,9) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .xx..|.xx.x|x..x. at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (5,1)
  _01111: a point with color green at (5,7)
diff: 
delta:
   (141.1 bits)
data: a background with size (3,5) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask .xx..|.xx.x|x..x. at (0,0)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,9) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .xx..|.xx.x|x..x. at (2,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (5,1)
  _01111: a point with color green at (5,7)
diff: 
delta:
! size mismatch, 10x5 instead of 3x5

TRAIN 3de23699.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .x.|.x.|xxx|.xx at (6,4)
  _01: a point with color pink at (5,3)
  _011: a point with color pink at (5,8)
  _0111: a point with color pink at (10,3)
  _01111: a point with color pink at (10,8)
diff: 
delta:
   (141.6 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|.xx at (0,0)
diff: 
delta:
   (7.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .x.|.x.|xxx|.xx at (6,4)
  _01: a point with color pink at (5,3)
  _011: a point with color pink at (5,8)
  _0111: a point with color pink at (10,3)
  _01111: a point with color pink at (10,8)
diff: 
delta:
! size mismatch, 10x4 instead of 4x4

TRAIN 3de23699.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color yellow at (5,7)
diff: 
delta: (5,9)=4  (6,2)=8  (6,11)=8 
   (217.5 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask .xx|xx. at (0,2)
diff: 
delta: (2,6)=8  (3,4)=8  (3,6)=8 
   (81.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xx. at (2,5)
  _01: a point with color cyan at (1,2)
  _011: a point with color cyan at (1,11)
  _0111: a point with color yellow at (4,9)
  _01111: a point with color yellow at (5,7)
diff: 
delta: (5,9)=4  (6,2)=8  (6,11)=8 
! size mismatch, 10x8 instead of 4x8

TRAIN 3de23699.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|xxx|..x at (6,6)
  _01: a point with color red at (2,2)
  _011: a point with color red at (2,13)
  _0111: a point with color green at (4,4)
  _01111: a point with color green at (4,9)
diff: 
delta: (4,10)=3  (5,4)=3  (8,11)=3  (9,11)=3  (10,7)=3  (10,8)=3  (11,2)=2  (11,13)=2 
! size mismatch, 10x10 instead of 8x10

TEST 3de23699.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 1013.9 bits (1013.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-312] Checking task 3e980e27.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10971.7 = 10987.3
DL output with Mo: L = 15.6 + 19760.4 = 19776.0
DL input+output M: L = 31.2 + 30732.0 = 30763.2

# learning a model for train pairs
2.000	
1.762	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.540	OUT OBJECT at ^.layer_0: ^.layer_0
1.408	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.307	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.220	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.101	OUT OBJECT at ^.layer_010: ^.layer_01
1.031	OUT OBJECT at ^.layer_00: ^.layer_0.shape at (?,?)
0.987	OUT DEF: ^.size=^.size
0.956	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
0.944	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.933	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.j
0.923	OUT DEF: ^.layer_00.pos.j=span(^.layer_0.pos.i, ^.layer_00.pos.i) / 2
0.913	OUT DEF: ^.layer_011.pos.j=average(^.layer_01.pos.j, ^.layer_00.pos.j) + 2
0.904	IN  DEF: ^.color=black
0.898	OUT DEF: ^.layer_011.shape.size.j=min(^.layer_0.pos.j, ^.layer_01.pos.j) / 2
0.892	OUT DEF: ^.layer_011.shape.size.i=min(^.layer_0.pos.j, ^.layer_01.pos.j) / 2
0.887	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0.shape at (?,span(^.layer_0.pos.i, ^.layer_00.pos.i) / 2)
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _011: a rectangle with size (min(^.layer_0.pos.j, ^.layer_01.pos.j) / 2,min(^.layer_0.pos.j, ^.layer_01.pos.j) / 2) and color ? and mask ? at (?,average(^.layer_01.pos.j, ^.layer_00.pos.j) + 2)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 100.1 + 6877.6 = 6977.7
DL output with Mo: L = 310.4 + 4674.4 = 4984.8
DL input+output M: L = 410.5 + 11552.1 = 11962.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (3,3)
  _0: a rectangle with size (1,1) and color red and mask Full at (8,7)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
diff: 
delta:
   (112.4 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (1,1) and color red and mask Full at (3,3)
  _0: a rectangle with size (1,1) and color red and mask Full at (8,7)
  _010: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
  _01: a rectangle with size (2,1) and color blue and mask Full at (8,6)
  _011: a rectangle with size (1,1) and color blue and mask Full at (10,5)
  _0111: a point with color blue at (9,7)
diff: 
delta:
   (65.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (3,3)
  _0: a rectangle with size (1,1) and color red and mask Full at (8,7)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (8,7)
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (3,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 3e980e27.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _00: a point with color green at (2,6)
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (6,2)
diff: 
delta: (9,9)=3 
   (140.0 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (5,1)
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _010: a rectangle with size (1,1) and color green and mask Full at (6,2)
  _01: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (8,8)
  _011: a rectangle with size (1,1) and color green and mask Full at (2,6)
  _0111: a point with color green at (9,9)
diff: 
delta:
   (77.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color green at (2,6)
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (6,2)
diff: 
delta: (9,9)=3 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color green at (6,2)
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|xx. at (1,5)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,6)
diff: 
delta: (9,9)=3 
! 26 wrong pixels (generated / expected)

TRAIN 3e980e27.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (1,10)
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
diff: 
delta: (2,2)=3  (7,7)=2  (8,1)=3 
   (202.6 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (8,1)
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _010: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
  _01: a rectangle with size (2,3) and color yellow and mask ..x|xx. at (1,9)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,10)
  _0111: a point with color green at (2,2)
diff: 
delta: (7,7)=2  (8,1)=3 
   (127.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (1,10)
  _0: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
  _01: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
diff: 
delta: (2,2)=3  (7,7)=2  (8,1)=3 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (1,10)
  _0: a rectangle with size (2,3) and color yellow and mask x..|.xx at (7,6)
  _01: a rectangle with size (2,3) and color cyan and mask .xx|x.. at (2,2)
diff: 
delta: (2,2)=3  (7,7)=2  (8,1)=3 
! 20 wrong pixels (generated / expected)

TRAIN 3e980e27.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
   (232.8 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (2,3) and color blue and mask .xx|x.x at (8,3)
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _010: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (1,2)
  _011: a rectangle with size (3,3) and color yellow and mask xxx|x..|x.. at (10,7)
  _0111: a point with color red at (2,3)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
   (196.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
  _01: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _00: a point with color red at (2,3)
  _0: a rectangle with size (2,3) and color blue and mask .xx|x.x at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|..x|..x at (1,7)
diff: 
delta: (2,8)=2  (8,10)=3  (9,4)=3  (11,8)=2 
! 31 wrong pixels (generated / expected)

TRAIN 3e980e27.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,0) and color col10 and mask Full at (0,5)

TEST 3e980e27.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 11.1 sec (11.1 sec/task)
bits-train-error = 4674.4 bits (4674.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-311] Checking task 3eda0437.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 31469.9 = 31485.5
DL output with Mo: L = 15.6 + 37614.6 = 37630.2
DL input+output M: L = 31.2 + 69084.4 = 69115.7

# learning a model for train pairs
2.000	
1.493	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.120	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.974	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.894	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.727	OUT OBJECT at ^.layer_00: ^.layer_0
0.643	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 11089.0 = 11202.3
DL output with Mo: L = 120.1 + 10703.5 = 10823.5
DL input+output M: L = 233.3 + 21792.4 = 22025.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _0: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _01: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,5)=1  (2,26)=1 
   (441.5 bits)
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _01: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _011: a rectangle with size (2,4) and color pink and mask Full (and Border) at (1,15)
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,5)=1  (2,26)=1 
   (414.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _0: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _01: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,5)=1  (2,26)=1 
! size mismatch, 10x10 instead of 3x30
>> Trial 2
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _0: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
  _01: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,5)=1  (2,26)=1 
! size mismatch, 10x10 instead of 3x30
>> Trial 3
data: a background with size (3,30) and color black and layers
  _00: a rectangle with size (3,7) and color blue and mask xx.x..x|..xxx.x|..x..xx at (0,17)
  _0: a rectangle with size (2,8) and color blue and mask xxxx.xxx|x.xxx.xx at (1,7)
  _01: a rectangle with size (3,6) and color blue and mask .xxxxx|.x.x..|xx.... at (0,0)
diff: 
delta: (0,0)=5# (0,6)=5# (0,28)=1  (1,25)=1  (1,26)=1  (1,27)=1  (1,28)=1  (1,29)=1  (2,5)=1  (2,26)=1 
! size mismatch, 10x10 instead of 3x30

TRAIN 3eda0437.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,20) and color blue and layers
  _00: a rectangle with size (4,13) and color black and mask ...x....xxxxx|..xx.x.x..xxx|.xx.x.x..x.x.|xxx..x...xxx. at (0,4)
  _0: a rectangle with size (2,3) and color black and mask xx.|x.x at (2,0)
  _01: a rectangle with size (2,2) and color black and mask xx|x. at (0,3)
diff: 
delta: (0,18)=0  (2,19)=0 
   (250.1 bits)
data: a background with size (4,20) and color blue and layers
  _00: a rectangle with size (2,3) and color black and mask xx.|x.x at (2,0)
  _0: a rectangle with size (4,10) and color black and mask ...x....xx|..xx.x.x..|.xx.x.x...|xxx..x.... at (0,4)
  _01: a rectangle with size (2,3) and color pink and mask Full (and Border) at (0,14)
  _011: a rectangle with size (2,3) and color black and mask x.x|xxx at (2,13)
diff: 
delta: (0,3)=0  (0,4)=0  (0,18)=0  (1,3)=0  (2,19)=0 
   (305.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color blue and layers
  _00: a rectangle with size (4,13) and color black and mask ...x....xxxxx|..xx.x.x..xxx|.xx.x.x..x.x.|xxx..x...xxx. at (0,4)
  _0: a rectangle with size (2,3) and color black and mask xx.|x.x at (2,0)
  _01: a rectangle with size (2,2) and color black and mask xx|x. at (0,3)
diff: 
delta: (0,18)=0  (2,19)=0 
! size mismatch, 10x10 instead of 4x20

TRAIN 3eda0437.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _0: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _01: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
diff: 
delta: (0,17)=1  (0,19)=1 
   (189.1 bits)
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0: a rectangle with size (2,5) and color pink and mask Full (and Border) at (0,2)
  _01: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _011: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
diff: 
delta: (0,17)=1  (0,19)=1 
   (179.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _0: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _01: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
diff: 
delta: (0,17)=1  (0,19)=1 
! size mismatch, 10x10 instead of 2x20
>> Trial 2
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
diff: 
delta: (0,17)=1  (0,19)=1 
! size mismatch, 10x10 instead of 2x20
>> Trial 3
data: a background with size (2,20) and color black and layers
  _00: a rectangle with size (2,4) and color blue and mask x..x|.xx. at (0,12)
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (0,7)
  _01: a rectangle with size (2,2) and color blue and mask xx|.x at (0,0)
diff: 
delta: (0,17)=1  (0,19)=1 
! size mismatch, 10x10 instead of 2x20

TRAIN 3eda0437.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,0)
diff: 
delta: (0,2)=1  (3,19)=1 
   (228.2 bits)
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _0: a rectangle with size (3,3) and color pink and mask Full at (0,17)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,0)
diff: 
delta: (0,2)=1  (3,19)=1 
   (171.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,0)
diff: 
delta: (0,2)=1  (3,19)=1 
! size mismatch, 10x10 instead of 4x20
>> Trial 2
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
diff: 
delta: (0,2)=1  (3,19)=1 
! size mismatch, 10x10 instead of 4x20
>> Trial 3
data: a background with size (4,20) and color black and layers
  _00: a rectangle with size (2,2) and color blue and mask xx|x. at (2,2)
  _0: a rectangle with size (4,12) and color blue and mask x...xxxxx...|xx..x.....x.|.x.x.x.x...x|.xx..xxxxxxx at (0,5)
  _01: a rectangle with size (2,1) and color blue and mask Full at (1,0)
diff: 
delta: (0,2)=1  (3,19)=1 
! size mismatch, 10x10 instead of 4x20

TRAIN 3eda0437.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,24) and color black and layers
  _00: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _0: a rectangle with size (3,5) and color blue and mask x.x.x|xxxx.|.xxx. at (0,4)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
diff: 
delta: (1,0)=1 
! size mismatch, 10x10 instead of 4x24
>> Trial 2
data: a background with size (4,24) and color black and layers
  _00: a rectangle with size (3,5) and color blue and mask x.x.x|xxxx.|.xxx. at (0,4)
  _0: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
diff: 
delta: (1,0)=1 
! size mismatch, 10x10 instead of 4x24
>> Trial 3
data: a background with size (4,24) and color black and layers
  _00: a rectangle with size (4,15) and color blue and mask .....x....xx.x.|...xx.xx.xxxxx.|xx.x...xx..xxxx|xxxxx.xx.xx...x at (0,9)
  _0: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _01: a rectangle with size (3,5) and color blue and mask x.x.x|xxxx.|.xxx. at (0,4)
diff: 
delta: (1,0)=1 
! size mismatch, 10x10 instead of 4x24

TEST 3eda0437.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 10703.5 bits (10703.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-310] Checking task 3f7978a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 17209.7 = 17225.3
DL output with Mo: L = 15.6 + 9593.6 = 9609.2
DL input+output M: L = 31.2 + 26803.2 = 26834.4

# learning a model for train pairs
2.000	
1.702	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.605	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.513	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.448	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
1.335	OUT OBJECT at ^.layer_00: ^.layer_01.shape at (?,?)
1.282	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.234	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.202	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.175	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.152	OUT DEF: ^.layer_011.shape.size.i=area(^.layer_01.shape) + 2
1.129	OUT DEF: ^.size.i=area(^.layer_01.shape) + 2
1.107	OUT DEF: ^.size.j=span(^.layer_0.pos.j, ^.layer_01.pos.j)
1.091	OUT DEF: ^.layer_011.shape.color=^.layer_010.shape.color
1.075	OUT DEF: ^.layer_0111.shape.color=^.layer_010.shape.color
1.059	OUT DEF: ^.layer_0.shape.color=^.layer_010.shape.color
1.043	OUT DEF: ^.layer_0.shape.size.i=center(^.layer_01) - ^.layer_010.shape.size.j
1.028	OUT DEF: ^.layer_00.pos.j='0
1.014	OUT DEF: ^.layer_011.pos.i='0
0.988	OUT DEF: ^.layer_0111.pos=min(^.layer_01.shape.size, ^.layer_010.shape.size) * 2
0.974	OUT DEF: ^.layer_00.pos.i=1
0.960	OUT DEF: ^.layer_01.pos.i=1
0.949	OUT DEF: ^.layer_0.shape.size.j=^.layer_010.shape.size.i
0.939	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.928	OUT DEF: ^.layer_0.shape.mask=Full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (area(^.layer_01.shape) + 2,span(^.layer_0.pos.j, ^.layer_01.pos.j)) and color ? and layers
  _00: ^.layer_01.shape at (1,'0)
  _0: a rectangle with size (center(^.layer_01) - ^.layer_010.shape.size.j,^.layer_010.shape.size.i) and color ^.layer_010.shape.color and mask Full at (?,?)
  _01: ^.layer_01.shape at (1,?)
  _011: a rectangle with size (area(^.layer_01.shape) + 2,?) and color ^.layer_010.shape.color and mask ^.layer_011.shape.mask at ('0,?)
  _0111: a point with color ^.layer_010.shape.color at min(^.layer_01.shape.size, ^.layer_010.shape.size) * 2
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 12453.1 = 12598.2
DL output with Mo: L = 393.7 + 1498.8 = 1892.5
DL input+output M: L = 538.8 + 13951.9 = 14490.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _010: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
diff: 
delta: (1,8)=8  (3,3)=8  (3,7)=8  (5,1)=8  (7,3)=8  (7,7)=8  (8,1)=8 
   (317.3 bits)
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (3,1) and color grey and mask Full at (1,0)
  _0: a rectangle with size (5,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (0,4)
  _0111: a point with color cyan at (2,2)
diff: 
delta:
   (24.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _010: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
diff: 
delta: (1,8)=8  (3,3)=8  (3,7)=8  (5,1)=8  (7,3)=8  (7,7)=8  (8,1)=8 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _010: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
diff: 
delta: (1,8)=8  (3,3)=8  (3,7)=8  (5,1)=8  (7,3)=8  (7,7)=8  (8,1)=8 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _010: a rectangle with size (3,1) and color grey and mask Full at (2,5)
  _01: a rectangle with size (5,1) and color cyan and mask Full at (1,5)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta: (1,8)=8  (3,3)=8  (3,7)=8  (5,1)=8  (7,3)=8  (7,7)=8  (8,1)=8 
! size mismatch, 7x5 instead of 5x5

TRAIN 3f7978a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.. at (1,8)
  _010: a rectangle with size (2,2) and color cyan and mask x.|xx at (7,8)
  _01: a rectangle with size (3,1) and color grey and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta: (0,1)=8  (1,2)=8  (1,6)=8  (3,2)=8  (4,0)=8  (5,5)=8  (5,6)=8  (7,2)=8  (7,4)=8  (8,1)=8 
   (419.3 bits)
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (3,1) and color grey and mask Full at (1,0)
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (1,6)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (0,0)
  _0111: a point with color cyan at (4,2)
diff: 
delta: (0,6)=8  (4,6)=8 
   (75.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.. at (1,8)
  _010: a rectangle with size (2,2) and color cyan and mask x.|xx at (7,8)
  _01: a rectangle with size (3,1) and color grey and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta: (0,1)=8  (1,2)=8  (1,6)=8  (3,2)=8  (4,0)=8  (5,5)=8  (5,6)=8  (7,2)=8  (7,4)=8  (8,1)=8 
! 12 wrong pixels (generated / expected)

TRAIN 3f7978a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _010: a rectangle with size (1,2) and color cyan and mask Full at (0,9)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (9,2)
diff: 
delta: (2,3)=8  (2,7)=8  (3,9)=8  (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,7)=8  (7,10)=8  (8,10)=8  (9,7)=8  (10,8)=8 
   (508.7 bits)
data: a background with size (6,5) and color black and layers
  _00: a rectangle with size (4,1) and color grey and mask Full at (1,0)
  _0: a rectangle with size (6,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color grey and mask Full at (1,4)
  _011: a rectangle with size (6,1) and color cyan and mask Full at (0,4)
  _0111: a point with color cyan at (2,2)
diff: 
delta: (4,2)=8 
   (49.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _010: a rectangle with size (1,2) and color cyan and mask Full at (0,9)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (9,2)
diff: 
delta: (2,3)=8  (2,7)=8  (3,9)=8  (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,7)=8  (7,10)=8  (8,10)=8  (9,7)=8  (10,8)=8 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,9)
  _010: a rectangle with size (4,1) and color grey and mask Full at (3,3)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (9,2)
diff: 
delta: (2,3)=8  (2,7)=8  (3,9)=8  (4,2)=8  (4,5)=8  (5,8)=8  (6,2)=8  (6,5)=8  (7,3)=8  (7,7)=8  (7,10)=8  (8,10)=8  (9,7)=8  (10,8)=8 
! size mismatch, 6x3 instead of 6x5

TRAIN 3f7978a0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (4,0)
  _010: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (3,0)
  _01: a rectangle with size (8,1) and color grey and mask Full at (4,3)
  _011: a rectangle with size (10,1) and color cyan and mask Full at (3,3)
diff: 
delta: (0,0)=8  (2,8)=8  (4,12)=8  (7,6)=8  (7,9)=8  (8,2)=8  (8,4)=8  (8,12)=8  (9,5)=8  (10,1)=8  (10,10)=8  (10,12)=8  (11,7)=8  (12,0)=8  (13,12)=8 
! 20 wrong pixels (generated / expected)

TEST 3f7978a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 1498.8 bits (1498.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-309] Checking task 40853293.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5995.8 = 6011.4
DL output with Mo: L = 15.6 + 19503.5 = 19519.1
DL input+output M: L = 31.2 + 25499.3 = 25530.5

# learning a model for train pairs
2.000	
1.749	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.551	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.408	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.291	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.212	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.187	OUT DEF: ^.size=^.size
1.163	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.139	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.115	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.090	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.066	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.041	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
1.015	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.989	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.962	IN  OBJECT at ^.layer_011111111: a point with color ? at (?,?)
0.932	IN  OBJECT at ^.layer_0111111111: a point with color ? at (?,?)
0.914	IN  DEF: ^.layer_01.shape.color=green
0.895	IN  DEF: ^.layer_011.shape.color=green
0.881	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.868	OUT DEF: ^.layer_011.pos=^.layer_01.pos
0.855	OUT DEF: ^.layer_01.pos=^.layer_0111111.pos
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0111111.pos
  _011: a rectangle with size (?,?) and color ? and mask ? at ^.layer_01.pos
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
  _011111111: a point with color ? at (?,?)
  _0111111111: a point with color ? at (?,?)

DL input  with Mi: L = 216.5 + 4038.5 = 4255.0
DL output with Mo: L = 175.5 + 2701.2 = 2876.7
DL input+output M: L = 392.0 + 6739.8 = 7131.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color green at (6,3)
  _011: a point with color green at (6,11)
  _0111: a point with color cyan at (12,14)
  _01111: a point with color red at (13,6)
  _011111: a point with color cyan at (17,14)
  _0111111: a point with color pink at (18,4)
  _01111111: a point with color grey at (20,2)
  _011111111: a point with color grey at (20,7)
  _0111111111: a point with color pink at (27,4)
diff: 
delta:
   (211.4 bits)
data: a background with size (30,20) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (2,6)
  _01: a rectangle with size (10,1) and color pink and mask Full at (18,4)
  _011: a rectangle with size (1,9) and color green and mask Full at (6,3)
  _0111: a rectangle with size (6,1) and color cyan and mask Full at (12,14)
  _01111: a rectangle with size (1,6) and color grey and mask Full at (20,2)
diff: 
delta:
   (138.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,20) and color black and layers
  _0: a point with color red at (2,6)
  _01: a point with color green at (6,3)
  _011: a point with color green at (6,11)
  _0111: a point with color cyan at (12,14)
  _01111: a point with color red at (13,6)
  _011111: a point with color cyan at (17,14)
  _0111111: a point with color pink at (18,4)
  _01111111: a point with color grey at (20,2)
  _011111111: a point with color grey at (20,7)
  _0111111111: a point with color pink at (27,4)
diff: 
delta:
! 51 wrong pixels (generated / expected)

TRAIN 40853293.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _01: a point with color green at (4,2)
  _011: a point with color green at (4,7)
  _0111: a point with color orange at (8,2)
  _01111: a point with color orange at (8,5)
  _011111: a point with color yellow at (10,3)
  _0111111: a point with color brown at (12,5)
  _01111111: a point with color cyan at (14,1)
  _011111111: a point with color cyan at (14,6)
  _0111111111: a point with color brown at (18,5)
diff: 
delta:
   (192.4 bits)
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (9,1) and color yellow and mask Full at (2,3)
  _01: a rectangle with size (7,1) and color brown and mask Full at (12,5)
  _011: a rectangle with size (1,6) and color green and mask Full at (4,2)
  _0111: a rectangle with size (1,6) and color cyan and mask Full at (14,1)
  _01111: a rectangle with size (1,4) and color orange and mask Full at (8,2)
diff: 
delta:
   (131.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a point with color yellow at (2,3)
  _01: a point with color green at (4,2)
  _011: a point with color green at (4,7)
  _0111: a point with color orange at (8,2)
  _01111: a point with color orange at (8,5)
  _011111: a point with color yellow at (10,3)
  _0111111: a point with color brown at (12,5)
  _01111111: a point with color cyan at (14,1)
  _011111111: a point with color cyan at (14,6)
  _0111111111: a point with color brown at (18,5)
diff: 
delta:
! 38 wrong pixels (generated / expected)

TRAIN 40853293.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a point with color grey at (2,9)
  _01: a point with color green at (1,3)
  _011: a point with color green at (18,3)
  _0111: a point with color red at (3,1)
  _01111: a point with color red at (3,16)
  _011111: a point with color orange at (7,7)
  _0111111: a point with color orange at (7,13)
  _01111111: a point with color grey at (9,9)
  _011111111: a point with color cyan at (14,8)
  _0111111111: a point with color cyan at (14,14)
diff: 
delta:
! 63 wrong pixels (generated / expected)

TEST 40853293.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 2701.2 bits (2701.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-308] Checking task 4093f84a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 47903.5 = 47919.1
DL output with Mo: L = 15.6 + 47903.5 = 47919.1
DL input+output M: L = 31.2 + 95807.0 = 95838.2

# learning a model for train pairs
2.000	
1.093	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.284	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.270	OUT DEF: ^.size=^.size
0.265	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.254	OUT DEF: ^.layer_0.shape.size=min(^.layer_0.pos, ^.layer_01.pos) + ^.layer_0.shape.size
0.249	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
0.244	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.241	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.237	IN  DEF: ^.layer_0.shape.color=grey
0.234	OUT DEF: ^.layer_0.pos.j=min(^.layer_0.pos.j, ^.layer_01.pos.j)
0.232	IN  DEF: ^.layer_0.shape.mask=Full
0.230	OUT DEF: ^.color=black
0.229	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size min(^.layer_0.pos, ^.layer_01.pos) + ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 109.7 + 7991.6 = 8101.4
DL output with Mo: L = 104.3 + 2745.2 = 2849.5
DL input+output M: L = 214.0 + 10736.8 = 10950.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _010: a point with color red at (0,8)
  _01: a point with color red at (2,2)
  _011: a point with color red at (3,10)
diff: 
delta: (9,9)=2  (10,1)=2  (11,4)=2  (12,11)=2 
   (214.2 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (6,14) and color grey and mask ..x.....x.x...|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|.x..x....x.x.. at (4,0)
diff: 
delta:
   (81.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _010: a point with color red at (0,8)
  _01: a point with color red at (2,2)
  _011: a point with color red at (3,10)
diff: 
delta: (9,9)=2  (10,1)=2  (11,4)=2  (12,11)=2 
! 113 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (4,14) and color grey and mask Full at (5,0)
  _010: a point with color red at (0,8)
  _01: a point with color red at (3,10)
  _011: a point with color red at (2,2)
diff: 
delta: (9,9)=2  (10,1)=2  (11,4)=2  (12,11)=2 
! 99 wrong pixels (generated / expected)

TRAIN 4093f84a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _010: a point with color green at (0,12)
  _01: a point with color green at (2,3)
  _011: a point with color green at (1,9)
diff: 
delta: (2,11)=3  (4,0)=3  (6,10)=3  (6,12)=3  (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
   (320.0 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,8) and color grey and mask .xxxxxx.|.xxxxxx.|xxxxxxx.|.xxxxx..|xxxxxx..|.xxxxx..|.xxxxxxx|xxxxxx..|.xxxxx..|xxxxxxx.|.xxxxx..|.xxxxx..|.xxxxxx.|.xxxxx.. at (0,3)
diff: 
delta:
   (109.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _010: a point with color green at (0,12)
  _01: a point with color green at (1,9)
  _011: a point with color green at (2,3)
diff: 
delta: (2,11)=3  (4,0)=3  (6,10)=3  (6,12)=3  (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _010: a point with color green at (0,12)
  _01: a point with color green at (2,3)
  _011: a point with color green at (1,9)
diff: 
delta: (2,11)=3  (4,0)=3  (6,10)=3  (6,12)=3  (7,1)=3  (9,2)=3  (9,12)=3  (12,10)=3 
! 31 wrong pixels (generated / expected)

TRAIN 4093f84a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _010: a point with color blue at (1,7)
  _01: a point with color blue at (3,3)
  _011: a point with color blue at (3,7)
diff: 
delta: (3,12)=1  (5,8)=1  (9,1)=1  (10,11)=1  (11,3)=1  (11,8)=1 
   (264.9 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,14) and color grey and mask .......x......|...x...xx...x.|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|.x.x....x..x.. at (5,0)
diff: 
delta:
   (83.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (2,14) and color grey and mask Full at (7,0)
  _010: a point with color blue at (1,7)
  _01: a point with color blue at (3,3)
  _011: a point with color blue at (3,7)
diff: 
delta: (3,12)=1  (5,8)=1  (9,1)=1  (10,11)=1  (11,3)=1  (11,8)=1 
! 107 wrong pixels (generated / expected)

TRAIN 4093f84a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,2) and color grey and mask Full at (0,5)
  _010: a point with color yellow at (1,2)
  _01: a point with color yellow at (1,9)
  _011: a point with color yellow at (3,3)
diff: 
delta: (4,1)=4  (6,7)=4  (6,11)=4  (11,1)=4  (11,3)=4  (11,10)=4  (13,12)=4 
! 70 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (14,2) and color grey and mask Full at (0,5)
  _010: a point with color yellow at (1,2)
  _01: a point with color yellow at (3,3)
  _011: a point with color yellow at (1,9)
diff: 
delta: (4,1)=4  (6,7)=4  (6,11)=4  (11,1)=4  (11,3)=4  (11,10)=4  (13,12)=4 
! 34 wrong pixels (generated / expected)

TEST 4093f84a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 2745.2 bits (2745.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-307] Checking task 41e4d17e.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13319.7 = 13335.3
DL output with Mo: L = 15.6 + 32400.8 = 32416.4
DL input+output M: L = 31.2 + 45720.5 = 45751.7

# learning a model for train pairs
2.000	
1.429	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.167	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.909	OUT OBJECT at ^.layer_0: ^.layer_01
0.699	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.519	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.413	OUT OBJECT at ^.layer_00: ^.layer_0
0.338	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.275	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.261	OUT DEF: ^.size=^.size
0.248	IN  DEF: ^.color=cyan
0.240	IN  DEF: ^.layer_0.shape.color=blue
0.232	IN  DEF: ^.layer_01.shape.color=blue
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color cyan and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 91.5 + 1737.1 = 1828.6
DL output with Mo: L = 156.5 + 2910.5 = 3067.0
DL input+output M: L = 248.0 + 4647.6 = 4895.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (5,5) and color blue and mask Border at (1,3)
diff: 
delta:
   (83.4 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _0: a rectangle with size (5,5) and color blue and mask Border at (1,3)
  _01: a rectangle with size (1,15) and color pink and mask Full at (3,0)
  _011: a rectangle with size (9,1) and color pink and mask Full at (6,5)
  _0111: a rectangle with size (3,1) and color pink and mask Full at (2,5)
  _01111: a rectangle with size (1,1) and color pink and mask Full at (0,5)
diff: 
delta:
   (138.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (1,3)
  _01: a rectangle with size (5,5) and color blue and mask Border at (1,3)
diff: 
delta:
! 209 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
  _01: a rectangle with size (5,5) and color blue and mask Border at (9,8)
diff: 
delta:
   (90.3 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (5,5) and color blue and mask Border at (3,3)
  _0: a rectangle with size (5,5) and color blue and mask Border at (9,8)
  _01: a rectangle with size (1,15) and color pink and mask Full at (5,0)
  _011: a rectangle with size (1,15) and color pink and mask Full at (11,0)
  _0111: a rectangle with size (15,1) and color pink and mask Full at (0,5)
  _01111: a rectangle with size (15,1) and color pink and mask Full at (0,10)
diff: 
delta:
   (152.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (3,3)
  _01: a rectangle with size (5,5) and color blue and mask Border at (9,8)
diff: 
delta:
! 193 wrong pixels (generated / expected)

TRAIN 41e4d17e.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (1,6)
  _01: a rectangle with size (5,5) and color blue and mask Border at (9,3)
diff: 
delta:
! 193 wrong pixels (generated / expected)

TEST 41e4d17e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 2910.5 bits (2910.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-306] Checking task 4258a5f9.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2243.6 = 2259.2
DL output with Mo: L = 15.6 + 16129.8 = 16145.4
DL input+output M: L = 31.2 + 18373.4 = 18404.6

# learning a model for train pairs
2.000	
1.524	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.395	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.324	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.256	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.186	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.110	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.061	IN  DEF: ^.layer_0.shape.color=grey
1.012	IN  DEF: ^.layer_01.shape.color=grey
0.963	IN  DEF: ^.layer_011.shape.color=grey
0.932	OUT OBJECT at ^.layer_00: ^.layer_0
0.907	OUT DEF: ^.size=^.size
0.885	IN  DEF: ^.color=black
0.866	OUT DEF: ^.layer_0.shape.size=span(^.layer_0.pos, ^.layer_011.pos) + 2
0.854	OUT DEF: ^.layer_0.pos=min(^.layer_0.pos, ^.layer_011.pos) - 1
0.847	OUT DEF: ^.layer_0.shape.color=blue
0.842	OUT DEF: ^.layer_011.pos.j=^.layer_011.pos.i / 2
0.836	OUT DEF: ^.layer_01.pos.j=span(^.layer_0.pos.j, ^.layer_01.pos.j) - 3
0.832	OUT DEF: ^.layer_011.pos.i=span(^.layer_01.pos.j, ^.layer_011.pos.j) + 1
0.828	OUT DEF: ^.layer_01.shape.mask=Full
0.823	OUT DEF: ^.layer_011.shape.mask=Full
0.820	OUT DEF: ^.layer_011.shape.size.j=min(^.layer_01.pos.j, ^.layer_011.pos.j)
0.816	OUT DEF: ^.layer_011.shape.size.i=min(^.layer_01.pos.j, ^.layer_011.pos.j)
0.812	OUT DEF: ^.layer_01.shape.size.j=min(^.layer_01.pos.j, ^.layer_011.pos.j)
0.809	OUT DEF: ^.layer_01.shape.size.i=min(^.layer_01.pos.j, ^.layer_011.pos.j)
0.806	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) + 2 and color blue and mask ? at min(^.layer_0.pos, ^.layer_011.pos) - 1
  _01: a rectangle with size (min(^.layer_01.pos.j, ^.layer_011.pos.j),min(^.layer_01.pos.j, ^.layer_011.pos.j)) and color ? and mask Full at (?,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 3)
  _011: a rectangle with size (min(^.layer_01.pos.j, ^.layer_011.pos.j),min(^.layer_01.pos.j, ^.layer_011.pos.j)) and color ? and mask Full at (span(^.layer_01.pos.j, ^.layer_011.pos.j) + 1,^.layer_011.pos.i / 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color grey at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)

DL input  with Mi: L = 82.5 + 1311.4 = 1393.9
DL output with Mo: L = 409.9 + 2636.5 = 3046.4
DL input+output M: L = 492.4 + 3947.9 = 4440.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,1)
diff: 
delta:
   (52.3 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (1,6)
  _0: a rectangle with size (9,8) and color blue and mask .....xxx|.....x.x|.....xxx|..xxx...|..x.x...|..xxx...|xxx.....|x.x.....|xxx..... at (0,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (7,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,3)
diff: 
delta:
   (90.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (7,1)
diff: 
delta:
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,6)
  _01: a point with color grey at (7,1)
  _011: a point with color grey at (4,3)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (4,3)
  _01: a point with color grey at (1,6)
  _011: a point with color grey at (7,1)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (5,7)
diff: 
delta: (7,3)=5#
   (78.9 bits)
data: a background with size (9,9) and color black and layers
  _00: a point with color grey at (1,7)
  _0: a rectangle with size (7,3) and color blue and mask Full at (0,6)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (6,2)
diff: 
delta: (2,3)=5# (3,6)=0  (3,7)=0  (3,8)=0  (5,7)=5# (7,3)=5#
   (173.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (5,7)
diff: 
delta: (7,3)=5#
! 25 wrong pixels (generated / expected)

TRAIN 4258a5f9.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (2,7)
  _011: a point with color grey at (4,3)
diff: 
delta: (7,1)=5# (7,5)=5#
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (2,7)
  _011: a point with color grey at (7,1)
diff: 
delta: (4,3)=5# (7,5)=5#
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,3)
  _011: a point with color grey at (2,7)
diff: 
delta: (7,1)=5# (7,5)=5#
! 43 wrong pixels (generated / expected)

TEST 4258a5f9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.7 sec (12.7 sec/task)
bits-train-error = 2636.5 bits (2636.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-305] Checking task 4290ef0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 33034.1 = 33049.7
DL output with Mo: L = 15.6 + 34089.9 = 34105.5
DL input+output M: L = 31.2 + 67124.0 = 67155.2

# learning a model for train pairs
2.000	
1.842	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.681	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
1.575	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.468	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.395	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.325	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 25345.7 = 25426.9
DL output with Mo: L = 129.2 + 18811.4 = 18940.6
DL input+output M: L = 210.4 + 44157.1 = 44367.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,17) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (1,12)
  _01: a rectangle with size (1,5) and color blue and mask Full at (2,3)
diff: 
delta: (2,5)=4  (3,3)=1  (3,7)=1  (5,3)=1  (5,7)=1  (6,3)=1  (6,4)=1  (6,6)=1  (6,7)=1  (7,10)=6  (7,11)=6  (7,15)=6  (7,16)=6  (8,10)=6  (8,16)=6  (12,10)=6  (12,16)=6 
   (551.6 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (2,2)
  _01: a rectangle with size (2,5) and color blue and mask Full (and Border) at (1,1)
  _011: a rectangle with size (2,5) and color blue and mask Full (and Border) at (4,1)
  _0111: a rectangle with size (2,7) and color pink and mask Full (and Border) at (0,0)
diff: 
delta: (0,2)=4  (0,3)=4  (0,4)=4  (1,3)=4  (5,0)=6  (5,3)=4  (5,6)=6  (6,0)=6  (6,1)=6  (6,5)=6  (6,6)=6 
   (405.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (1,12)
  _01: a rectangle with size (1,5) and color blue and mask Full at (2,3)
diff: 
delta: (2,5)=4  (3,3)=1  (3,7)=1  (5,3)=1  (5,7)=1  (6,3)=1  (6,4)=1  (6,6)=1  (6,7)=1  (7,10)=6  (7,11)=6  (7,15)=6  (7,16)=6  (8,10)=6  (8,16)=6  (12,10)=6  (12,16)=6 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (13,17) and color yellow and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (2,3)
  _01: a rectangle with size (3,3) and color green and mask Border at (1,12)
diff: 
delta: (2,5)=4  (3,3)=1  (3,7)=1  (5,3)=1  (5,7)=1  (6,3)=1  (6,4)=1  (6,6)=1  (6,7)=1  (7,10)=6  (7,11)=6  (7,15)=6  (7,16)=6  (8,10)=6  (8,16)=6  (12,10)=6  (12,16)=6 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (11,1)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,2)
diff: 
delta: (2,5)=8  (3,2)=1  (3,8)=1  (4,2)=1  (4,8)=1  (6,2)=1  (6,8)=1  (6,13)=0  (7,2)=1  (7,8)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,6)=1  (8,7)=1  (8,8)=1  (12,7)=2  (12,8)=2  (12,10)=2  (12,11)=2  (13,7)=2  (13,11)=2  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
   (858.1 bits)
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (2,2)
  _01: a rectangle with size (2,5) and color red and mask Full (and Border) at (1,1)
  _011: a rectangle with size (2,5) and color red and mask Full (and Border) at (4,1)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (3,0)
diff: 
delta: (0,3)=8  (1,3)=8  (3,3)=0  (5,3)=8  (6,3)=8 
   (258.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (11,1)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,2)
diff: 
delta: (2,5)=8  (3,2)=1  (3,8)=1  (4,2)=1  (4,8)=1  (6,2)=1  (6,8)=1  (6,13)=0  (7,2)=1  (7,8)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,6)=1  (8,7)=1  (8,8)=1  (12,7)=2  (12,8)=2  (12,10)=2  (12,11)=2  (13,7)=2  (13,11)=2  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (1,7) and color blue and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask Border at (11,1)
diff: 
delta: (2,5)=8  (3,2)=1  (3,8)=1  (4,2)=1  (4,8)=1  (6,2)=1  (6,8)=1  (6,13)=0  (7,2)=1  (7,8)=1  (8,2)=1  (8,3)=1  (8,4)=1  (8,6)=1  (8,7)=1  (8,8)=1  (12,7)=2  (12,8)=2  (12,10)=2  (12,11)=2  (13,7)=2  (13,11)=2  (15,7)=2  (15,11)=2  (16,7)=2  (16,8)=2  (16,10)=2  (16,11)=2 
! size mismatch, 10x10 instead of 7x7

TRAIN 4290ef0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Border at (6,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (1,2)
diff: 
delta: (1,0)=2  (1,1)=2  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=8  (2,16)=8  (3,5)=1  (3,13)=1  (3,15)=8  (4,2)=3  (4,5)=1  (4,13)=1  (5,15)=8  (6,15)=8  (6,16)=8  (7,0)=2  (7,1)=2  (8,5)=1  (8,13)=1  (9,5)=1  (9,13)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
   (1124.9 bits)
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Border at (4,4)
  _01: a rectangle with size (3,7) and color red and mask Full at (2,2)
  _011: a rectangle with size (3,7) and color red and mask Full at (6,2)
  _0111: a rectangle with size (3,9) and color blue and mask Full at (1,1)
diff: 
delta: (0,0)=4  (0,1)=4  (0,9)=4  (0,10)=4  (1,0)=4  (1,4)=3  (1,5)=3  (1,6)=3  (1,10)=4  (2,5)=3  (3,3)=8  (3,4)=8  (3,5)=3  (3,6)=8  (3,7)=8  (4,3)=8  (4,7)=8  (5,5)=6  (6,3)=8  (6,7)=8  (7,1)=1  (7,3)=8  (7,4)=8  (7,5)=3  (7,6)=8  (7,7)=8  (7,9)=1  (8,1)=1  (8,5)=3  (8,9)=1  (9,0)=4  (9,1)=1  (9,2)=1  (9,3)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,10)=4  (10,0)=4  (10,1)=4  (10,9)=4  (10,10)=4 
   (1217.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask Border at (6,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (1,2)
diff: 
delta: (1,0)=2  (1,1)=2  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=8  (2,16)=8  (3,5)=1  (3,13)=1  (3,15)=8  (4,2)=3  (4,5)=1  (4,13)=1  (5,15)=8  (6,15)=8  (6,16)=8  (7,0)=2  (7,1)=2  (8,5)=1  (8,13)=1  (9,5)=1  (9,13)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,2)
  _01: a rectangle with size (3,3) and color orange and mask Border at (6,7)
diff: 
delta: (1,0)=2  (1,1)=2  (2,5)=1  (2,6)=1  (2,7)=1  (2,11)=1  (2,12)=1  (2,13)=1  (2,15)=8  (2,16)=8  (3,5)=1  (3,13)=1  (3,15)=8  (4,2)=3  (4,5)=1  (4,13)=1  (5,15)=8  (6,15)=8  (6,16)=8  (7,0)=2  (7,1)=2  (8,5)=1  (8,13)=1  (9,5)=1  (9,13)=1  (10,5)=1  (10,6)=1  (10,7)=1  (10,11)=1  (10,12)=1  (10,13)=1  (13,3)=4  (13,4)=4  (13,12)=4  (13,13)=4  (14,3)=4  (14,13)=4  (16,16)=6 
! size mismatch, 10x10 instead of 11x11

TRAIN 4290ef0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color blue and layers
  _0: a rectangle with size (5,5) and color yellow and mask x....|x....|x....|x....|xxxxx at (2,13)
  _01: a rectangle with size (3,3) and color cyan and mask Border at (3,7)
diff: 
delta: (0,13)=4  (8,3)=3  (8,4)=3  (8,6)=3  (8,7)=3  (9,3)=3  (9,7)=3  (11,3)=3  (11,7)=3  (12,3)=3  (12,4)=3  (12,6)=3  (12,7)=3  (13,14)=6  (13,15)=6  (14,14)=6  (15,4)=2  (15,5)=2  (15,6)=2  (15,10)=2  (15,11)=2  (15,12)=2  (16,4)=2  (16,12)=2  (17,4)=2  (17,12)=2  (18,14)=6 
! size mismatch, 10x10 instead of 11x11
>> Trial 2
data: a background with size (19,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (3,7)
  _01: a rectangle with size (5,5) and color yellow and mask x....|x....|x....|x....|xxxxx at (2,13)
diff: 
delta: (0,13)=4  (8,3)=3  (8,4)=3  (8,6)=3  (8,7)=3  (9,3)=3  (9,7)=3  (11,3)=3  (11,7)=3  (12,3)=3  (12,4)=3  (12,6)=3  (12,7)=3  (13,14)=6  (13,15)=6  (14,14)=6  (15,4)=2  (15,5)=2  (15,6)=2  (15,10)=2  (15,11)=2  (15,12)=2  (16,4)=2  (16,12)=2  (17,4)=2  (17,12)=2  (18,14)=6 
! size mismatch, 10x10 instead of 11x11

TEST 4290ef0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.6 sec (27.6 sec/task)
bits-train-error = 18811.4 bits (18811.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-304] Checking task 42a50994.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 34137.6 = 34153.2
DL output with Mo: L = 15.6 + 23241.7 = 23257.3
DL input+output M: L = 31.2 + 57379.3 = 57410.6

# learning a model for train pairs
2.000	
1.848	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.729	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.626	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.467	OUT OBJECT at ^.layer_00: ^.layer_0
1.382	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.253	OUT OBJECT at ^.layer_011: ^.layer_01
1.200	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.104	OUT OBJECT at ^.layer_010: ^.layer_010
1.061	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.002	OUT OBJECT at ^.layer_000: ^.layer_011.shape at (?,?)
0.964	OUT DEF: ^.size=^.size
0.939	IN  OBJECT at ^.layer_0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_011.shape at (?,?)
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_010
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 23647.0 = 23823.9
DL output with Mo: L = 123.2 + 5500.4 = 5623.6
DL input+output M: L = 300.1 + 29147.4 = 29447.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _010: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _0101: a rectangle with size (1,3) and color cyan and mask Full at (2,7)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (5,8)
diff: 
delta: (2,8)=0  (6,6)=8  (8,10)=8  (10,1)=8  (12,1)=8  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
   (455.5 bits)
data: a background with size (16,11) and color black and layers
  _000: a rectangle with size (1,1) and color cyan and mask Full at (6,2)
  _00: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (10,4)
  _010: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
diff: 
delta:
   (70.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _010: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _0101: a rectangle with size (1,3) and color cyan and mask Full at (2,7)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (5,8)
diff: 
delta: (2,8)=0  (6,6)=8  (8,10)=8  (10,1)=8  (12,1)=8  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,11) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask ..x|..x|xx.|.x.|x.. at (2,2)
  _010: a rectangle with size (3,3) and color cyan and mask .x.|.xx|x.. at (8,4)
  _0101: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (2,7)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (5,8)
diff: 
delta: (2,8)=0  (6,6)=8  (8,10)=8  (10,1)=8  (12,1)=8  (13,6)=8  (13,9)=8  (14,4)=8  (15,8)=8 
! 7 wrong pixels (generated / expected)

TRAIN 42a50994.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _010: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _0101: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _01: a rectangle with size (1,2) and color pink and mask Full at (11,16)
  _011: a rectangle with size (2,1) and color pink and mask Full at (9,11)
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,13)=6  (10,7)=6  (11,2)=6 
   (633.8 bits)
data: a background with size (12,18) and color black and layers
  _000: a rectangle with size (2,1) and color pink and mask Full at (9,11)
  _00: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _0: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _010: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,10)
  _011: a rectangle with size (1,2) and color pink and mask Full at (11,16)
diff: 
delta: (4,7)=6  (5,8)=6 
   (136.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _010: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _0101: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _01: a rectangle with size (1,2) and color pink and mask Full at (11,16)
  _011: a rectangle with size (2,1) and color pink and mask Full at (9,11)
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,13)=6  (10,7)=6  (11,2)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _010: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _0101: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _01: a rectangle with size (2,1) and color pink and mask Full at (9,11)
  _011: a rectangle with size (1,2) and color pink and mask Full at (11,16)
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,13)=6  (10,7)=6  (11,2)=6 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,18) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (1,14)
  _010: a rectangle with size (3,2) and color pink and mask Even Checkboard at (1,1)
  _0101: a rectangle with size (1,2) and color pink and mask Full at (11,16)
  _01: a rectangle with size (1,2) and color pink and mask Full at (8,7)
  _011: a rectangle with size (2,1) and color pink and mask Full at (9,11)
diff: 
delta: (0,11)=6  (1,5)=6  (1,8)=6  (1,10)=6  (3,9)=6  (3,11)=6  (3,17)=6  (4,7)=6  (5,8)=6  (5,14)=6  (6,2)=6  (6,12)=6  (7,5)=6  (9,2)=6  (9,13)=6  (10,7)=6  (11,2)=6 
! 12 wrong pixels (generated / expected)

TRAIN 42a50994.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _010: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _0101: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _01: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (4,4)=5# (4,6)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,13)=5# (9,0)=5# (10,1)=5# (10,13)=5#
   (669.0 bits)
data: a background with size (11,19) and color black and layers
  _000: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
  _00: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _0: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _010: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _01: a rectangle with size (3,2) and color grey and mask x.|x.|.x at (8,0)
  _011: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
diff: 
delta: (6,14)=5# (6,15)=5#
   (152.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _010: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _0101: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _01: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _011: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (4,4)=5# (4,6)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,13)=5# (9,0)=5# (10,1)=5# (10,13)=5#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _010: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _0101: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _01: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (4,4)=5# (4,6)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,13)=5# (9,0)=5# (10,1)=5# (10,13)=5#
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,19) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|xx.|..x at (7,16)
  _010: a rectangle with size (5,3) and color grey and mask x..|.x.|.x.|..x|..x at (4,1)
  _0101: a rectangle with size (4,5) and color grey and mask x....|.x...|x.xx.|....x at (1,9)
  _01: a rectangle with size (3,2) and color grey and mask .x|.x|xx at (2,15)
  _011: a rectangle with size (3,3) and color grey and mask ..x|x.x|.x. at (8,9)
diff: 
delta: (0,12)=5# (0,15)=5# (1,4)=5# (2,7)=5# (4,4)=5# (4,6)=5# (5,8)=5# (6,12)=5# (6,14)=5# (6,15)=5# (8,0)=5# (8,13)=5# (9,0)=5# (10,1)=5# (10,13)=5#
! 22 wrong pixels (generated / expected)

TRAIN 42a50994.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (17,9) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _010: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
  _0101: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|.x. at (10,6)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
diff: 
delta: (0,5)=4  (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,4)=4  (6,0)=4  (8,6)=4  (11,4)=4  (15,0)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
   (606.4 bits)
data: a background with size (17,9) and color black and layers
  _000: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _00: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _0: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
  _010: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (15,7)
  _011: a rectangle with size (3,3) and color yellow and mask x.x|.x.|.x. at (10,6)
diff: 
delta: (0,5)=4  (1,4)=4  (15,2)=4  (16,2)=4 
   (191.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,9) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask ..x|..x|.x.|x.x|.x. at (8,0)
  _010: a rectangle with size (4,3) and color yellow and mask .xx|x..|x..|x.. at (3,2)
  _0101: a rectangle with size (3,2) and color yellow and mask .x|xx|x. at (13,4)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|.x. at (10,6)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
diff: 
delta: (0,5)=4  (0,7)=4  (1,4)=4  (2,1)=4  (2,6)=4  (5,4)=4  (6,0)=4  (8,6)=4  (11,4)=4  (15,0)=4  (15,2)=4  (15,7)=4  (15,8)=4  (16,2)=4 
! 16 wrong pixels (generated / expected)

TRAIN 42a50994.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask ..x.x..|.x.x...|.xxx.xx|.x..x..|x...... at (10,2)
  _010: a rectangle with size (3,5) and color green and mask ....x|.xxxx|x.... at (0,6)
  _0101: a rectangle with size (2,3) and color green and mask xxx|.x. at (3,9)
  _01: a rectangle with size (3,1) and color green and mask Full at (13,0)
  _011: a rectangle with size (3,2) and color green and mask .x|x.|x. at (0,0)
diff: 
delta: (0,4)=3  (0,13)=3  (1,13)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,4)=3  (7,5)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,12)=3  (14,8)=3  (14,11)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask ..x.x..|.x.x...|.xxx.xx|.x..x..|x...... at (10,2)
  _010: a rectangle with size (3,5) and color green and mask ....x|.xxxx|x.... at (0,6)
  _0101: a rectangle with size (2,3) and color green and mask xxx|.x. at (3,9)
  _01: a rectangle with size (3,2) and color green and mask .x|x.|x. at (0,0)
  _011: a rectangle with size (3,1) and color green and mask Full at (13,0)
diff: 
delta: (0,4)=3  (0,13)=3  (1,13)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,4)=3  (7,5)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,12)=3  (14,8)=3  (14,11)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask ..x.x..|.x.x...|.xxx.xx|.x..x..|x...... at (10,2)
  _010: a rectangle with size (3,5) and color green and mask ....x|.xxxx|x.... at (0,6)
  _0101: a rectangle with size (2,3) and color green and mask xxx|.x. at (3,9)
  _01: a rectangle with size (1,2) and color green and mask Full at (7,4)
  _011: a rectangle with size (3,1) and color green and mask Full at (13,0)
diff: 
delta: (0,1)=3  (0,4)=3  (0,13)=3  (1,0)=3  (1,13)=3  (2,0)=3  (3,2)=3  (3,4)=3  (4,0)=3  (4,2)=3  (4,13)=3  (5,5)=3  (6,0)=3  (6,11)=3  (7,8)=3  (8,10)=3  (8,11)=3  (9,1)=3  (9,13)=3  (10,10)=3  (13,12)=3  (14,8)=3  (14,11)=3  (15,5)=3  (16,2)=3  (16,3)=3  (16,6)=3  (16,12)=3  (16,13)=3 
! 24 wrong pixels (generated / expected)

TEST 42a50994.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 5500.4 bits (5500.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-303] Checking task 4347f46a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 43788.2 = 43803.8
DL output with Mo: L = 15.6 + 29324.2 = 29339.9
DL input+output M: L = 31.2 + 73112.5 = 73143.7

# learning a model for train pairs
2.000	
1.517	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.087	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.822	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.749	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.668	OUT DEF: ^.size=^.size
0.656	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.647	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.639	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.i
0.632	OUT DEF: ^.layer_0111.shape.size.j=^.layer_0.shape.size.j
0.626	OUT DEF: ^.layer_011.pos.i=1
0.620	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.616	OUT DEF: ^.layer_011.shape.size.j=bottom(^.layer_0) - 3
0.612	OUT DEF: ^.layer_0111.shape.mask=Border
0.610	OUT DEF: ^.color=black
0.608	IN  DEF: ^.layer_0.shape.mask=Full
0.606	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,bottom(^.layer_0) - 3) and color ? and mask ? at (1,?)
  _0111: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask Border at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 48.0 + 22440.3 = 22488.3
DL output with Mo: L = 180.0 + 2532.6 = 2712.6
DL input+output M: L = 228.0 + 24972.9 = 25200.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (3,6)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
   (1523.2 bits)
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Border at (3,6)
  _01: a rectangle with size (5,3) and color orange and mask Border at (10,12)
  _011: a rectangle with size (3,4) and color cyan and mask Border at (1,1)
  _0111: a rectangle with size (4,7) and color pink and mask Border at (10,2)
diff: 
delta:
   (94.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (3,6)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (10,12)=7# (10,13)=7# (10,14)=7# (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (11,12)=7# (11,13)=7# (11,14)=7# (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (12,12)=7# (12,13)=7# (12,14)=7# (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6  (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 72 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (4,7) and color pink and mask Full at (10,2)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (10,12)=7# (10,13)=7# (10,14)=7# (11,12)=7# (11,13)=7# (11,14)=7# (12,12)=7# (12,13)=7# (12,14)=7# (13,12)=7# (13,13)=7# (13,14)=7# (14,12)=7# (14,13)=7# (14,14)=7#
! 78 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (5,3) and color orange and mask Full at (10,12)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,10)=3  (3,11)=3  (3,12)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,11)=3  (4,12)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (5,12)=3  (6,6)=3  (6,7)=3  (6,8)=3  (6,9)=3  (6,10)=3  (6,11)=3  (6,12)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (10,2)=6  (10,3)=6  (10,4)=6  (10,5)=6  (10,6)=6  (10,7)=6  (10,8)=6  (11,2)=6  (11,3)=6  (11,4)=6  (11,5)=6  (11,6)=6  (11,7)=6  (11,8)=6  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=6  (12,6)=6  (12,7)=6  (12,8)=6  (13,2)=6  (13,3)=6  (13,4)=6  (13,5)=6  (13,6)=6  (13,7)=6  (13,8)=6 
! 78 wrong pixels (generated / expected)

TRAIN 4347f46a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (4,5) and color red and mask Full at (1,1)
diff: 
delta:
   (49.6 bits)
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (1,1)
  _01: a rectangle with size (4,1) and color red and mask Full at (1,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,5)
  _0111: a rectangle with size (4,5) and color red and mask Border at (1,1)
diff: 
delta:
   (74.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (4,5) and color red and mask Full at (1,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 4347f46a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,8) and color grey and mask Full at (1,2)
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
   (671.1 bits)
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (1,8) and color grey and mask Full at (1,2)
  _01: a rectangle with size (4,6) and color yellow and mask Border at (6,1)
  _011: a rectangle with size (4,1) and color grey and mask Full at (1,2)
  _0111: a rectangle with size (4,8) and color grey and mask Border at (1,2)
diff: 
delta:
   (85.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,8) and color grey and mask Full at (1,2)
diff: 
delta: (6,1)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (8,1)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (9,1)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4 
! 46 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,1)
diff: 
delta: (1,2)=5# (1,3)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,8)=5# (1,9)=5# (2,2)=5# (2,3)=5# (2,4)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,8)=5# (2,9)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (3,6)=5# (3,7)=5# (3,8)=5# (3,9)=5# (4,2)=5# (4,3)=5# (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (4,8)=5# (4,9)=5#
! 47 wrong pixels (generated / expected)

TRAIN 4347f46a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (6,8) and color blue and mask Full at (6,10)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,2)=4  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (8,2)=4  (8,3)=4  (8,4)=4  (8,5)=4  (8,6)=4  (8,7)=4  (9,2)=4  (9,3)=4  (9,4)=4  (9,5)=4  (9,6)=4  (9,7)=4  (10,2)=4  (10,3)=4  (10,4)=4  (10,5)=4  (10,6)=4  (10,7)=4  (11,2)=4  (11,3)=4  (11,4)=4  (11,5)=4  (11,6)=4  (11,7)=4  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 99 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (7,6) and color yellow and mask Full at (5,2)
diff: 
delta: (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,11)=6  (1,12)=6  (1,13)=6  (1,14)=6  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=6  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=6  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=1  (7,15)=1  (7,16)=1  (7,17)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=1  (8,15)=1  (8,16)=1  (8,17)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,14)=1  (9,15)=1  (9,16)=1  (9,17)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,14)=1  (10,15)=1  (10,16)=1  (10,17)=1  (11,10)=1  (11,11)=1  (11,12)=1  (11,13)=1  (11,14)=1  (11,15)=1  (11,16)=1  (11,17)=1  (13,5)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (14,5)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (15,5)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,9)=3 
! 99 wrong pixels (generated / expected)

TEST 4347f46a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.9 sec (9.9 sec/task)
bits-train-error = 2532.6 bits (2532.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-302] Checking task 444801d8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 17873.8 = 17889.4
DL output with Mo: L = 15.6 + 30868.5 = 30884.1
DL input+output M: L = 31.2 + 48742.4 = 48773.6

# learning a model for train pairs
2.000	
1.526	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.194	OUT OBJECT at ^.layer_0: ^.layer_0
0.912	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.659	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.497	OUT OBJECT at ^.layer_010: ^.layer_01
0.380	OUT OBJECT at ^.layer_0100: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	OUT DEF: ^.size=^.size
0.345	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.330	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.318	OUT DEF: ^.layer_0100.shape.size=^.layer_0.shape.size
0.308	OUT DEF: ^.layer_0100.pos=^.layer_011.pos - 2
0.299	IN  DEF: ^.layer_0.shape.color=blue
0.289	IN  DEF: ^.layer_01.shape.color=blue
0.284	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.279	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i - 1
0.274	IN  DEF: ^.color=black
0.271	OUT DEF: ^.layer_0100.shape.mask=Full
0.268	OUT DEF: ^.layer_01.shape.mask=Full
0.266	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _0100: a rectangle with size ^.layer_0.shape.size and color ? and mask Full at ^.layer_011.pos - 2
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask Full at (^.layer_01.pos.i - 1,^.layer_01.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 104.8 + 4388.2 = 4492.9
DL output with Mo: L = 104.7 + 338.6 = 443.4
DL input+output M: L = 209.5 + 4726.8 = 4936.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _01: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _011: a point with color red at (3,3)
diff: 
delta:
   (118.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _0100: a rectangle with size (1,2) and color blue and mask Full at (1,1)
  _010: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (5,5) and color red and mask Full at (0,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,1)
  _01: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _011: a point with color red at (3,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _01: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _011: a point with color red at (3,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (5,1)
  _01: a rectangle with size (5,5) and color blue and mask xx.xx|x...x|x...x|x...x|xxxxx at (1,1)
  _011: a point with color red at (3,3)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TRAIN 444801d8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a point with color red at (3,3)
diff: 
delta: (8,6)=3 
   (160.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _0100: a rectangle with size (4,5) and color red and mask Full at (1,1)
  _010: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _01: a rectangle with size (3,5) and color green and mask Full at (6,4)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a point with color red at (3,3)
diff: 
delta: (8,6)=3 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a point with color green at (8,6)
diff: 
delta: (3,3)=2 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (2,1)
  _011: a point with color red at (3,3)
diff: 
delta: (8,6)=3 
! 27 wrong pixels (generated / expected)

TRAIN 444801d8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a point with color pink at (2,3)
diff: 
delta: (8,6)=8 
   (160.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _0100: a rectangle with size (4,5) and color pink and mask Full at (0,1)
  _010: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (6,4)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a point with color pink at (2,3)
diff: 
delta: (8,6)=8 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _01: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _011: a point with color cyan at (8,6)
diff: 
delta: (2,3)=6 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask xx.xx|x...x|xxxxx at (7,4)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,1)
  _011: a point with color pink at (2,3)
diff: 
delta: (8,6)=8 
! 27 wrong pixels (generated / expected)

TRAIN 444801d8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,0)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (6,4)
  _011: a point with color yellow at (2,2)
diff: 
delta: (7,6)=7#
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,0)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (6,4)
  _011: a point with color orange at (7,6)
diff: 
delta: (2,2)=4 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (6,4)
  _01: a rectangle with size (4,5) and color blue and mask xx.xx|x...x|x...x|xxxxx at (1,0)
  _011: a point with color yellow at (2,2)
diff: 
delta: (7,6)=7#
! 32 wrong pixels (generated / expected)

TEST 444801d8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.7 sec (7.7 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-301] Checking task 445eab21.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22376.7 = 22392.3
DL output with Mo: L = 15.6 + 588.3 = 603.9
DL input+output M: L = 31.2 + 22965.0 = 22996.2

# learning a model for train pairs
2.000	
1.472	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.037	OUT DEF: ^.color=^.layer_0.shape.color
0.701	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.440	OUT DEF: ^.size.i=2
0.178	OUT DEF: ^.size.j=2
0.171	IN  DEF: ^.layer_0.shape.mask=Border
0.164	IN  DEF: ^.layer_01.shape.mask=Border
0.160	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (2,2) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)

DL input  with Mi: L = 85.0 + 2528.3 = 2613.3
DL output with Mo: L = 26.3 + 0.0 = 26.3
DL input+output M: L = 111.3 + 2528.3 = 2639.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask Border at (5,3)
  _01: a rectangle with size (4,4) and color orange and mask Border at (0,1)
diff: 
delta:
   (83.7 bits)
data: a background with size (2,2) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask Border at (5,3)
  _01: a rectangle with size (4,4) and color orange and mask Border at (0,1)
diff: 
delta:
correct output grid

TRAIN 445eab21.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask Border at (5,2)
  _01: a rectangle with size (4,5) and color pink and mask Border at (0,0)
diff: 
delta:
   (84.9 bits)
data: a background with size (2,2) and color orange and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color orange and mask Border at (5,2)
  _01: a rectangle with size (4,5) and color pink and mask Border at (0,0)
diff: 
delta:
correct output grid

TRAIN 445eab21.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,6) and color yellow and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color red and mask Border at (7,7)
diff: 
delta:
   (84.2 bits)
data: a background with size (2,2) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,6) and color yellow and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color red and mask Border at (7,7)
diff: 
delta:
correct output grid

TRAIN 445eab21.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,5) and color green and mask Border at (0,0)
  _01: a rectangle with size (10,4) and color brown and mask Border at (0,6)
diff: 
delta:
correct output grid

TEST 445eab21.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-300] Checking task 447fd412.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10945.5 = 10961.2
DL output with Mo: L = 15.6 + 24605.4 = 24621.0
DL input+output M: L = 31.2 + 35551.0 = 35582.2

# learning a model for train pairs
2.000	
1.550	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.013	OUT OBJECT at ^.layer_01: ^.layer_0
0.887	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.772	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.710	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.675	OUT OBJECT at ^.layer_0111: ^.layer_01
0.648	OUT DEF: ^.size=^.size
0.633	IN  DEF: ^.layer_011.shape.color=red
0.618	IN  DEF: ^.layer_0.shape.color=blue
0.603	IN  DEF: ^.layer_01.shape.color=red
0.593	IN  DEF: ^.layer_01.shape.mask=Full
0.584	IN  DEF: ^.layer_011.shape.mask=Full
0.577	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 120.2 + 4370.5 = 4490.7
DL output with Mo: L = 89.6 + 4040.5 = 4130.0
DL input+output M: L = 209.8 + 8411.0 = 8620.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff: 
delta: (2,1)=2  (2,4)=2 
   (163.0 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask xxxx..|xxxx..|..xx..|..xx..|xxxxxx|xxxxxx at (8,5)
  _01: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _011: a rectangle with size (2,2) and color red and mask Full (and Border) at (8,9)
  _0111: a rectangle with size (2,2) and color red and mask Full at (8,3)
diff: 
delta: (2,1)=2  (2,4)=2 
   (157.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff: 
delta: (2,1)=2  (2,4)=2 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.x.|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,9)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,3)
diff: 
delta: (2,1)=2  (2,4)=2 
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (8,3)
  _011: a rectangle with size (2,2) and color red and mask Full at (8,9)
diff: 
delta: (2,1)=2  (2,4)=2  (3,2)=0  (3,4)=0 
! 36 wrong pixels (generated / expected)

TRAIN 447fd412.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,2)
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
   (181.3 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (9,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (10,8)
  _0111: a rectangle with size (4,1) and color red and mask Full at (3,6)
diff: 
delta: (8,2)=2  (9,9)=2  (11,2)=2  (12,9)=2 
   (185.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (4,5)
  _01: a rectangle with size (4,1) and color red and mask Full at (3,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,2)
diff: 
delta: (9,9)=2  (11,2)=2  (12,9)=2 
! 16 wrong pixels (generated / expected)

TRAIN 447fd412.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta:
   (92.8 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,7) and color blue and mask Full at (7,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _0111: a rectangle with size (3,3) and color red and mask Full at (7,7)
diff: 
delta:
   (60.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _011: a rectangle with size (3,3) and color red and mask Full at (7,7)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (7,7)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,4)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 26 wrong pixels (generated / expected)

TRAIN 447fd412.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (2,2)
  _01: a rectangle with size (3,3) and color red and mask Full at (8,17)
  _011: a rectangle with size (2,2) and color red and mask Full at (11,5)
diff: 
delta: (2,12)=2  (3,4)=2 
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (11,5)
  _011: a rectangle with size (3,3) and color red and mask Full at (8,17)
diff: 
delta: (2,12)=2  (3,4)=2 
! 85 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,21) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (4,2)
  _01: a rectangle with size (3,3) and color red and mask Full at (8,17)
  _011: a rectangle with size (2,2) and color red and mask Full at (11,5)
diff: 
delta: (2,2)=1  (2,12)=2  (3,2)=1  (3,4)=2 
! 82 wrong pixels (generated / expected)

TEST 447fd412.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.6 sec (26.6 sec/task)
bits-train-error = 4040.5 bits (4040.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-299] Checking task 44d8ac46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 45610.2 = 45625.8
DL output with Mo: L = 15.6 + 53252.0 = 53267.6
DL input+output M: L = 31.2 + 98862.2 = 98893.4

# learning a model for train pairs
2.000	
1.551	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.146	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	OUT OBJECT at ^.layer_01: ^.layer_0
0.710	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.514	OUT OBJECT at ^.layer_00: ^.layer_01
0.322	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.207	OUT OBJECT at ^.layer_011: ^.layer_011
0.191	OUT DEF: ^.size=^.size
0.187	IN  DEF: ^.layer_0.shape.color=grey
0.182	IN  DEF: ^.layer_01.shape.color=grey
0.177	IN  DEF: ^.layer_011.shape.color=grey
0.172	IN  DEF: ^.layer_01.shape.mask=Border
0.169	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.shape.size.i - 2
0.165	OUT DEF: ^.layer_0.shape.size.j=span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1
0.162	OUT DEF: ^.layer_0.shape.mask=Full
0.160	IN  DEF: ^.color=black
0.158	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01
  _0: a rectangle with size (^.layer_01.shape.size.i - 2,span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Border at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 121.7 + 5023.9 = 5145.6
DL output with Mo: L = 137.2 + 2295.4 = 2432.6
DL input+output M: L = 258.9 + 7319.3 = 7578.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
diff: 
delta:
   (129.8 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _0: a rectangle with size (2,2) and color red and mask Full at (3,2)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
diff: 
delta: (10,3)=2 
   (44.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x.xx|xxxx at (8,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (8,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,1)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|x.xx|x..x|xxxx at (4,7)
diff: 
delta: (10,3)=0 
! 17 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _01: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
diff: 
delta:
   (138.4 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _0: a rectangle with size (4,4) and color red and mask Full at (4,7)
  _01: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
diff: 
delta: (2,3)=2  (9,1)=2  (9,2)=2  (10,1)=2  (10,2)=2 
   (149.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
  _01: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|xx.x|xxxx|xxxx at (1,1)
  _01: a rectangle with size (6,6) and color grey and mask Border at (3,6)
  _011: a rectangle with size (5,5) and color grey and mask xxxxx|xxxxx|x..xx|x..xx|xxxxx at (7,0)
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (3,7)
  _011: a rectangle with size (4,6) and color grey and mask Border at (8,3)
diff: 
delta:
   (114.6 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (4,4) and color grey and mask Border at (3,7)
  _0: a rectangle with size (2,2) and color red and mask Full at (4,8)
  _01: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _011: a rectangle with size (4,6) and color grey and mask Border at (8,3)
diff: 
delta:
   (17.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _011: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (3,7)
  _011: a rectangle with size (4,6) and color grey and mask Border at (8,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,3)
  _01: a rectangle with size (6,5) and color grey and mask Border at (1,1)
  _011: a rectangle with size (4,4) and color grey and mask Border at (3,7)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|x..x|xxxx|xxxx at (1,1)
  _01: a rectangle with size (3,2) and color grey and mask Border at (6,6)
  _011: a rectangle with size (5,5) and color grey and mask Border at (6,3)
diff: 
delta:
   (119.6 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (3,2) and color grey and mask Border at (6,6)
  _0: a rectangle with size (1,5) and color grey and mask Full at (10,3)
  _01: a rectangle with size (4,4) and color grey and mask xxxx|x..x|xxxx|xxxx at (1,1)
  _011: a rectangle with size (5,5) and color grey and mask Border at (6,3)
diff: 
delta:
   (17.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xxxx|x..x|xxxx|xxxx at (1,1)
  _01: a rectangle with size (3,2) and color grey and mask Border at (6,6)
  _011: a rectangle with size (5,5) and color grey and mask Border at (6,3)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask Full (and Border) at (3,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (1,1)
  _011: a rectangle with size (5,5) and color grey and mask xxxxx|x..xx|x..xx|x...x|xxxxx at (6,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 44d8ac46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Border at (8,2)
  _01: a rectangle with size (5,5) and color grey and mask Border at (1,0)
  _011: a rectangle with size (5,4) and color grey and mask xxxx|xx.x|x..x|x..x|xxxx at (1,7)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,0)
  _01: a rectangle with size (4,6) and color grey and mask Border at (8,2)
  _011: a rectangle with size (5,4) and color grey and mask xxxx|xx.x|x..x|x..x|xxxx at (1,7)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST 44d8ac46.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 2295.4 bits (2295.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-298] Checking task 44f52bb0.json: 6 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5371.7 = 5387.3
DL output with Mo: L = 15.6 + 936.6 = 952.2
DL input+output M: L = 31.2 + 6308.3 = 6339.5

# learning a model for train pairs
2.000	
1.585	OUT DEF: ^.size=^.size - 2
1.175	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size - 2 and color ? and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 3130.5 = 3179.4
DL output with Mo: L = 18.7 + 537.9 = 556.6
DL input+output M: L = 67.5 + 3668.5 = 3736.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
   (49.5 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask x.|x.|.x at (0,0)
diff: 
delta:
   (52.5 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask x.|x.|.x at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color black and mask Full at (0,1)
diff: 
delta:
   (48.5 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,1) and color black and mask Full at (0,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2 
   (62.3 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2 
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
diff: 
delta:
   (52.0 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,0)
diff: 
delta:
   (48.3 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN 44f52bb0.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|xxx|x.x at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TEST 44f52bb0.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 537.9 bits (537.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-297] Checking task 4522001f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2115.6 = 2131.2
DL output with Mo: L = 15.6 + 16377.1 = 16392.8
DL input+output M: L = 31.2 + 18492.7 = 18524.0

# learning a model for train pairs
2.000	
1.160	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.721	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
0.638	OUT DEF: ^.layer_0.shape.mask=xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx
0.586	IN  DEF: ^.layer_00.shape.color=red
0.534	IN  DEF: ^.layer_0.shape.color=green
0.503	IN  DEF: ^.layer_0.shape.mask=Full
0.479	IN  DEF: ^.color=black
0.456	OUT DEF: ^.size=^.size * 3
0.442	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.432	OUT DEF: ^.layer_0.shape.size.i=area(^.layer_0.shape) * 2
0.422	OUT DEF: ^.layer_0.shape.size.j=area(^.layer_0.shape) * 2
0.415	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.412	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 3 and color black and layers
  _0: a rectangle with size (area(^.layer_0.shape) * 2,area(^.layer_0.shape) * 2) and color ^.layer_0.shape.color and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color red at (?,?)
  _0: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 72.7 + 785.1 = 857.8
DL output with Mo: L = 151.6 + 0.0 = 151.6
DL input+output M: L = 224.3 + 785.1 = 1009.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
   (39.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN 4522001f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
diff: 
delta:
   (39.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xxxx....|xxxx....|xxxx....|xxxx....|....xxxx|....xxxx|....xxxx|....xxxx at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN 4522001f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,2) and color green and mask Full at (0,1)
diff: 
delta:
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (1,2) and color green and mask Full at (0,1)
diff: 
delta: (1,2)=3 
! 48 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (2,1) and color green and mask Full at (0,2)
diff: 
delta: (0,1)=3 
! 40 wrong pixels (generated / expected)

TEST 4522001f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-296] Checking task 4612dd53.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16481.4 = 16497.0
DL output with Mo: L = 15.6 + 24898.6 = 24914.2
DL input+output M: L = 31.2 + 41380.0 = 41411.2

# learning a model for train pairs
2.000	
1.856	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.693	OUT OBJECT at ^.layer_0: ^.layer_0
1.571	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.477	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.365	OUT OBJECT at ^.layer_011: ^.layer_01
1.281	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.193	OUT OBJECT at ^.layer_0111: ^.layer_011
1.139	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.102	IN  OBJECT at ^.layer_0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.043	OUT OBJECT at ^.layer_0110: ^.layer_0110
1.017	OUT DEF: ^.size=^.size
0.993	OUT OBJECT at ^.layer_01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.983	IN  DEF: ^.layer_0.shape.color=blue
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_0110
  _011: ^.layer_01
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 147.5 + 10697.2 = 10844.7
DL output with Mo: L = 127.6 + 7988.5 = 8116.1
DL input+output M: L = 275.1 + 18685.7 = 18960.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _01: a rectangle with size (1,9) and color blue and mask Full at (7,2)
  _0110: a rectangle with size (1,2) and color blue and mask Full at (1,7)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta: (1,4)=1  (2,10)=0  (4,10)=0  (6,2)=1  (7,4)=0  (7,5)=0  (7,8)=0 
   (323.5 bits)
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,4)
  _0110: a rectangle with size (1,2) and color blue and mask Full at (1,7)
  _011: a rectangle with size (1,9) and color blue and mask Full at (7,2)
  _01110: a rectangle with size (1,7) and color red and mask Full at (1,3)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (1,2)
  _01111: a rectangle with size (3,1) and color red and mask Full at (3,2)
diff: 
delta: (1,4)=1  (2,10)=2  (4,10)=2  (6,2)=1  (7,8)=2 
   (225.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (7,2)
  _01: a rectangle with size (7,1) and color blue and mask Full at (1,10)
  _0110: a rectangle with size (1,2) and color blue and mask Full at (1,7)
  _011: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta: (1,4)=1  (2,10)=0  (4,10)=0  (6,2)=1  (7,4)=0  (7,5)=0  (7,8)=0 
! 18 wrong pixels (generated / expected)

TRAIN 4612dd53.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (7,2)
  _01: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _0110: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _011: a rectangle with size (2,1) and color blue and mask Full at (4,4)
diff: 
delta: (2,7)=1  (4,8)=0  (5,2)=1  (6,2)=1  (8,7)=1 
   (296.2 bits)
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (7,2)
  _01: a rectangle with size (5,1) and color blue and mask Full at (2,2)
  _0110: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _011: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _01110: a rectangle with size (2,3) and color red and mask .xx|x.. at (2,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (4,4)
  _01111: a rectangle with size (1,3) and color red and mask Full at (8,6)
diff: 
delta: (2,7)=1  (4,2)=2  (4,8)=2  (6,4)=2  (7,2)=2  (8,7)=1 
   (264.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (2,4) and color blue and mask ..x.|xxxx at (7,2)
  _01: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _0110: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _011: a rectangle with size (2,1) and color blue and mask Full at (4,4)
diff: 
delta: (2,7)=1  (4,8)=0  (5,2)=1  (6,2)=1  (8,7)=1 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (8,2)
  _01: a rectangle with size (6,1) and color blue and mask Full at (2,8)
  _0110: a rectangle with size (2,3) and color blue and mask xxx|x.. at (2,2)
  _011: a rectangle with size (2,1) and color blue and mask Full at (4,4)
diff: 
delta: (2,7)=1  (4,8)=0  (5,2)=1  (6,2)=1  (7,4)=1  (8,6)=0 
! 17 wrong pixels (generated / expected)

TRAIN 4612dd53.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _0110: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,2)
  _011: a rectangle with size (8,1) and color blue and mask Full at (3,10)
diff: 
delta: (3,4)=0  (3,7)=0  (4,2)=1  (5,10)=0  (7,5)=1  (7,7)=1  (7,8)=1  (7,10)=0  (10,4)=0  (10,7)=0  (10,8)=0 
   (450.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,2) and color blue and mask Full at (7,7)
  _0110: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,2)
  _011: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _01110: a rectangle with size (1,7) and color red and mask Full at (7,4)
  _0111: a rectangle with size (8,1) and color blue and mask Full at (3,10)
  _01111: a rectangle with size (5,1) and color red and mask Full at (5,2)
diff: 
delta: (3,4)=2  (3,7)=2  (4,2)=1  (5,10)=2  (7,5)=1  (10,4)=2  (10,7)=2  (10,8)=2 
   (309.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _0110: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,2)
  _011: a rectangle with size (8,1) and color blue and mask Full at (3,10)
diff: 
delta: (3,4)=0  (3,7)=0  (4,2)=1  (5,10)=0  (7,5)=1  (7,7)=1  (7,8)=1  (7,10)=0  (10,4)=0  (10,7)=0  (10,8)=0 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,2)
  _01: a rectangle with size (1,9) and color blue and mask Full at (10,2)
  _0110: a rectangle with size (1,7) and color blue and mask Full at (7,2)
  _011: a rectangle with size (6,1) and color blue and mask Full at (3,2)
diff: 
delta: (3,4)=0  (3,7)=0  (4,10)=1  (5,2)=0  (6,10)=1  (7,4)=0  (7,6)=0  (8,10)=1  (9,10)=1  (10,4)=0  (10,7)=0  (10,8)=0 
! 20 wrong pixels (generated / expected)

TRAIN 4612dd53.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,4)
  _0110: a rectangle with size (1,7) and color blue and mask Full at (10,4)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (6,9)
diff: 
delta: (2,6)=0  (2,8)=0  (3,10)=1  (4,2)=0  (5,2)=0  (7,4)=1  (7,6)=1  (8,2)=0  (9,10)=1  (10,6)=0  (10,8)=0 
! 24 wrong pixels (generated / expected)

TEST 4612dd53.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.3 sec (27.3 sec/task)
bits-train-error = 7988.5 bits (7988.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-295] Checking task 46442a0e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3098.1 = 3113.7
DL output with Mo: L = 15.6 + 11200.8 = 11216.4
DL input+output M: L = 31.2 + 14298.9 = 14330.1

# learning a model for train pairs
2.000	
1.343	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.982	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.939	OUT DEF: ^.size=^.size * 2
0.915	OUT DEF: ^.color=^.layer_0.shape.color
0.896	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j + area(^.layer_0.shape)
0.878	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j + area(^.layer_0.shape)
0.863	OUT DEF: ^.layer_0.shape.color=^.color
0.852	OUT DEF: ^.layer_0.pos.i=bottom(^.layer_0) - 1
0.841	OUT DEF: ^.layer_0.pos.j=bottom(^.layer_0) - 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ^.layer_0.shape.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.j + area(^.layer_0.shape),^.layer_0.shape.size.j + area(^.layer_0.shape)) and color ^.color and mask ? at (bottom(^.layer_0) - 1,bottom(^.layer_0) - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 1941.2 = 1990.0
DL output with Mo: L = 141.6 + 2123.4 = 2264.9
DL input+output M: L = 190.4 + 4064.5 = 4254.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,2) and color cyan and layers
  _0: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
   (50.2 bits)
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color cyan and mask x-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color pink and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color cyan and layers
  _0: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,2) and color pink and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta: (1,1)=8 
! 9 wrong pixels (generated / expected)

TRAIN 46442a0e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,0)
diff: 
delta:
   (49.4 bits)
data: a background with size (6,6) and color orange and layers
  _0: a rectangle with size (6,6) and color cyan and mask +-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN 46442a0e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
diff: 
delta: (0,1)=9# (0,2)=9#
   (94.6 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta: (0,1)=9# (0,2)=9# (1,5)=9# (2,5)=9# (3,0)=9# (4,0)=9# (5,3)=9# (5,4)=9#
   (197.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
diff: 
delta: (0,1)=9# (0,2)=9#
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,1)
diff: 
delta: (0,1)=9# (0,2)=9#
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (0,1)
diff: 
delta: (0,0)=6  (1,0)=6  (2,0)=6 
! 26 wrong pixels (generated / expected)

TRAIN 46442a0e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,3) and color yellow and mask Odd Checkboard at (0,0)
diff: 
delta: (1,1)=9# (2,0)=9# (2,2)=9#
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,3) and color brown and mask Odd Checkboard at (1,0)
diff: 
delta: (0,1)=4  (1,0)=4  (1,2)=4 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color brown and mask Odd Checkboard at (1,0)
diff: 
delta: (0,0)=1  (0,2)=1  (2,1)=1 
! 26 wrong pixels (generated / expected)

TEST 46442a0e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 2123.4 bits (2123.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-294] Checking task 469497ad.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9710.1 = 9725.7
DL output with Mo: L = 15.6 + 108400.3 = 108415.9
DL input+output M: L = 31.2 + 118110.4 = 118141.6

# learning a model for train pairs
2.000	
1.663	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.352	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.103	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.919	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.687	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 4828.5 = 4909.7
DL output with Mo: L = 145.1 + 19575.9 = 19721.1
DL input+output M: L = 226.3 + 24404.4 = 24630.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta:
   (86.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,10) and color green and mask Full (and Border) at (8,0)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (2,2)
  _011: a rectangle with size (10,2) and color green and mask Full (and Border) at (0,8)
  _0111: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,0)
diff: 
delta: (0,7)=2  (1,6)=2  (6,1)=2  (6,6)=2  (7,0)=2  (7,7)=2 
   (318.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Full at (0,0)
diff: 
delta:
! 62 wrong pixels (generated / expected)

TRAIN 469497ad.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask ..x|..x|xxx at (2,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,0)
diff: 
delta: (0,4)=7# (1,4)=7# (4,0)=7# (4,1)=7#
   (186.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (10,9) and color pink and mask ......xxx|......xxx|......xxx|......xxx|......xxx|......xxx|......xxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (5,6)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (3,0)
  _011: a rectangle with size (3,6) and color orange and mask Full at (12,0)
  _0111: a rectangle with size (5,3) and color orange and mask Full at (0,12)
diff: 
delta: (0,8)=2  (1,7)=2  (2,6)=2  (9,6)=2  (10,7)=2  (11,8)=2 
   (432.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask ..x|..x|xxx at (2,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,0)
diff: 
delta: (0,4)=7# (1,4)=7# (4,0)=7# (4,1)=7#
! size mismatch, 10x10 instead of 15x15

TRAIN 469497ad.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,1)
  _01: a rectangle with size (3,3) and color green and mask ..x|..x|xx. at (2,2)
diff: 
delta: (0,4)=9# (1,4)=9# (4,0)=9# (4,1)=9# (4,4)=4 
   (209.8 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (4,4)
  _01: a rectangle with size (12,12) and color green and mask ........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|........xxxx|xxxxxxxx....|xxxxxxxx....|xxxxxxxx....|xxxxxxxx.... at (8,8)
  _011: a rectangle with size (4,8) and color brown and mask Full at (16,0)
  _0111: a rectangle with size (8,4) and color brown and mask Full at (0,16)
diff: 
delta: (0,0)=2  (0,15)=2  (1,1)=2  (1,14)=2  (2,2)=2  (2,13)=2  (3,3)=2  (3,12)=2  (12,3)=2  (12,12)=2  (13,2)=2  (13,13)=2  (14,1)=2  (14,14)=2  (15,0)=2  (15,15)=2  (16,16)=4  (16,17)=4  (16,18)=4  (16,19)=4  (17,16)=4  (17,17)=4  (17,18)=4  (17,19)=4  (18,16)=4  (18,17)=4  (18,18)=4  (18,19)=4  (19,16)=4  (19,17)=4  (19,18)=4  (19,19)=4 
   (1206.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,1)
  _01: a rectangle with size (3,3) and color green and mask ..x|..x|xx. at (2,2)
diff: 
delta: (0,4)=9# (1,4)=9# (4,0)=9# (4,1)=9# (4,4)=4 
! size mismatch, 10x10 instead of 20x20

TRAIN 469497ad.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (0,1)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
diff: 
delta: (0,4)=8  (1,4)=8  (2,4)=1  (3,4)=7# (4,2)=1  (4,3)=7# (4,4)=9#
! size mismatch, 10x10 instead of 25x25

TEST 469497ad.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 19575.9 bits (19575.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-293] Checking task 46f33fce.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5068.2 = 5083.8
DL output with Mo: L = 15.6 + 74343.3 = 74358.9
DL input+output M: L = 31.2 + 79411.5 = 79442.7

# learning a model for train pairs
2.000	
1.726	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.567	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.409	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.249	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.203	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.157	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.109	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.061	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.009	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.994	IN  DEF: ^.color=black
0.992	OUT DEF: ^.layer_0111.shape.size.i=area(^.layer_0111.shape) + 3
0.986	OUT DEF: ^.layer_011.shape.size=min(^.layer_0.pos, ^.layer_01111.pos) + 3
0.981	OUT DEF: ^.layer_01.shape.size=min(^.layer_0.pos, ^.layer_011.pos) + 3
0.978	OUT DEF: ^.layer_0111.shape.size=min(^.layer_0.pos, ^.layer_0111.pos) + 3
0.976	OUT DEF: ^.layer_0.shape.size.i=area(^.layer_0.shape) + 3
0.973	OUT DEF: ^.layer_01.pos.j='0
0.968	OUT DEF: ^.layer_0111.pos=translationOnto(^.layer_0, ^.layer_0111) + span(^.layer_0.pos, ^.layer_0111.pos)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape) + 3,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size min(^.layer_0.pos, ^.layer_011.pos) + 3 and color ? and mask ? at (?,'0)
  _011: a rectangle with size min(^.layer_0.pos, ^.layer_01111.pos) + 3 and color ? and mask ? at (?,?)
  _0111: a rectangle with size min(^.layer_0.pos, ^.layer_0111.pos) + 3 and color ? and mask ? at translationOnto(^.layer_0, ^.layer_0111) + span(^.layer_0.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 114.6 + 3675.6 = 3790.2
DL output with Mo: L = 323.7 + 16217.2 = 16540.9
DL input+output M: L = 438.3 + 19892.8 = 20331.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color green at (5,5)
  _01111: a point with color yellow at (7,7)
diff: 
delta: (9,9)=3 
   (131.5 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (4,4)
  _0111: a rectangle with size (4,4) and color green and mask Full at (8,8)
diff: 
delta: (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=4  (13,12)=4  (13,13)=4  (13,14)=4  (13,15)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,15)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4  (16,16)=3  (16,17)=3  (16,18)=3  (16,19)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,19)=3  (18,16)=3  (18,17)=3  (18,18)=3  (18,19)=3  (19,16)=3  (19,17)=3  (19,18)=3  (19,19)=3 
   (973.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color green at (5,5)
  _01111: a point with color yellow at (7,7)
diff: 
delta: (9,9)=3 
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (3,1)
  _011: a point with color blue at (3,3)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color green at (5,5)
diff: 
delta: (9,9)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN 46f33fce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,7)
diff: 
delta: (9,9)=2 
   (131.5 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,8) and color red and mask Full at (16,12)
  _01: a rectangle with size (4,4) and color blue and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color cyan and mask Full at (12,16)
diff: 
delta: (4,4)=4  (4,5)=4  (4,6)=4  (4,7)=4  (5,4)=4  (5,5)=4  (5,6)=4  (5,7)=4  (6,4)=4  (6,5)=4  (6,6)=4  (6,7)=4  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4 
   (543.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color cyan at (7,9)
  _01111: a point with color red at (9,7)
diff: 
delta: (9,9)=2 
! size mismatch, 10x10 instead of 20x20

TRAIN 46f33fce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,1)
  _0111: a point with color yellow at (9,9)
  _01111: a point with color blue at (9,3)
diff: 
delta:
   (104.6 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,8) and color blue and mask Full at (16,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,4) and color yellow and mask Full at (16,16)
diff: 
delta:
   (104.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color red at (1,3)
  _011: a point with color blue at (9,1)
  _0111: a point with color blue at (9,3)
  _01111: a point with color yellow at (9,9)
diff: 
delta:
! size mismatch, 10x10 instead of 20x20

TRAIN 46f33fce.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (3,3)
  _01: a point with color blue at (5,5)
  _011: a point with color green at (7,3)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color red at (9,1)
diff: 
delta:
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (3,3)
  _01: a point with color blue at (5,5)
  _011: a point with color green at (7,3)
  _0111: a point with color red at (9,1)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (3,3)
  _01: a point with color blue at (5,5)
  _011: a point with color yellow at (7,7)
  _0111: a point with color green at (7,3)
  _01111: a point with color red at (9,1)
diff: 
delta:
! size mismatch, 10x10 instead of 20x20

TEST 46f33fce.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.3 sec (26.3 sec/task)
bits-train-error = 16217.2 bits (16217.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-292] Checking task 47c1f68c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16932.4 = 16948.0
DL output with Mo: L = 15.6 + 14464.7 = 14480.3
DL input+output M: L = 31.2 + 31397.1 = 31428.3

# learning a model for train pairs
2.000	
1.330	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.011	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.879	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.789	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.701	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.608	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.570	OUT DEF: ^.size=^.size - 1
0.557	OUT DEF: ^.layer_011.pos.j='0
0.532	OUT DEF: ^.layer_0.pos=^.layer_01.pos
0.510	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size / 3
0.488	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size / 3
0.467	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size / 3
0.456	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.450	OUT DEF: ^.color=black
0.446	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size - 1 and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size / 3 and color ? and mask ? at ^.layer_01.pos
  _01: a rectangle with size ^.layer_0.shape.size / 3 and color ? and mask ? at (^.layer_01.pos.i,?)
  _011: a rectangle with size ^.layer_0.shape.size / 3 and color ? and mask ? at (?,'0)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 3215.0 = 3295.4
DL output with Mo: L = 181.5 + 3462.3 = 3643.8
DL input+output M: L = 261.8 + 6677.3 = 6939.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask +-cross at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|.xx at (1,0)
diff: 
delta:
   (110.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .x.|xx.|.xx at (1,0)
  _01: a rectangle with size (3,3) and color red and mask .x.|.xx|xx. at (1,7)
  _011: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (6,0)
  _0111: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (6,7)
diff: 
delta:
   (117.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask +-cross at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|.xx at (1,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|.xx at (1,0)
  _01: a rectangle with size (11,11) and color red and mask +-cross at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask +-cross at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (1,1)
diff: 
delta: (2,0)=1  (3,2)=1 
! 30 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask +-cross at (0,0)
  _01: a rectangle with size (3,3) and color green and mask x.x|xx.|x.. at (0,0)
diff: 
delta:
   (107.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xx.|x.. at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,5)
  _011: a rectangle with size (3,3) and color cyan and mask x..|xx.|x.x at (5,0)
  _0111: a rectangle with size (3,3) and color cyan and mask ..x|.xx|x.x at (5,5)
diff: 
delta:
   (116.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask +-cross at (0,0)
  _01: a rectangle with size (3,3) and color green and mask x.x|xx.|x.. at (0,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|xx.|x.. at (0,0)
  _01: a rectangle with size (9,9) and color cyan and mask +-cross at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|.xx|.x. at (0,0)
  _01: a rectangle with size (7,7) and color yellow and mask +-cross at (0,0)
diff: 
delta:
   (103.1 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,5)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (5,0)
  _0111: a rectangle with size (6,6) and color yellow and mask x....x|.xxxx.|.x..x.|.x..x.|.xxxx.|x....x at (0,0)
diff: 
delta:
   (111.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|.xx|.x. at (0,0)
  _01: a rectangle with size (7,7) and color yellow and mask +-cross at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 47c1f68c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 47c1f68c.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 24.2 sec (24.2 sec/task)
bits-train-error = 3462.3 bits (3462.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-291] Checking task 484b58aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 472604.4 = 472620.0
DL output with Mo: L = 15.6 + 445748.1 = 445763.8
DL input+output M: L = 31.2 + 918352.5 = 918383.8

# learning a model for train pairs
2.000	
1.806	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.653	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.651	OUT DEF: ^.size=^.size
1.650	OUT DEF: ^.layer_0.pos=^.layer_0.pos

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 400377.0 = 400425.9
DL output with Mo: L = 36.9 + 358014.8 = 358051.7
DL input+output M: L = 85.7 + 758391.8 = 758477.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (28,29) and color red and mask ..........................x.x|...........................x.|........................x.x..|.........................x...|......................x.x....|.......................x.....|....................x.x......|.....................x.......|..................x.x........|...................x.........|................x.x..........|.................x...........|..............x.x............|...............x.............|............x.x..............|.............x...............|..........x.x................|...........x.................|........x.x..................|.........x...................|......x.x....................|.......x.....................|....x.x......................|.....x.......................|..x.x........................|...x.........................|x.x..........................|.x........................... at (1,0)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,14)=2  (1,15)=1  (1,16)=2  (1,17)=3  (1,18)=4  (1,20)=2  (1,21)=1  (1,22)=2  (1,23)=3  (1,24)=4  (1,27)=1  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=6  (2,20)=1  (2,21)=2  (2,23)=4  (2,25)=6  (2,26)=1  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,8)=2  (3,9)=3  (3,10)=4  (3,12)=2  (3,13)=1  (3,14)=2  (3,15)=3  (3,16)=4  (3,18)=2  (3,19)=1  (3,20)=2  (3,21)=3  (3,22)=4  (3,25)=1  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,13)=2  (4,15)=4  (4,17)=6  (4,18)=1  (4,19)=2  (4,21)=4  (4,23)=6  (4,24)=1  (4,27)=4  (5,0)=2  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=3  (5,20)=4  (5,23)=1  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=2  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,11)=2  (6,13)=4  (6,15)=6  (6,16)=1  (6,17)=2  (6,19)=4  (6,21)=6  (6,22)=1  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=2  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,14)=2  (7,15)=1  (7,16)=2  (7,17)=3  (7,18)=4  (7,21)=1  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,9)=2  (8,11)=4  (8,13)=6  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=6  (8,20)=1  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=0  (9,5)=0  (9,6)=2  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=3  (9,16)=4  (9,19)=1  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,7)=2  (10,9)=4  (10,11)=6  (10,12)=1  (10,13)=2  (10,15)=4  (10,17)=6  (10,18)=1  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=3  (11,14)=4  (11,17)=1  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,5)=2  (12,7)=4  (12,9)=6  (12,10)=1  (12,11)=2  (12,13)=4  (12,15)=6  (12,16)=1  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,2)=2  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=3  (13,12)=4  (13,15)=1  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=6  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=6  (14,14)=1  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,6)=2  (15,7)=1  (15,8)=2  (15,9)=3  (15,10)=4  (15,13)=1  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,1)=2  (16,3)=4  (16,5)=6  (16,6)=1  (16,7)=2  (16,9)=4  (16,11)=6  (16,12)=1  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,0)=2  (17,1)=3  (17,2)=4  (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=3  (17,8)=4  (17,11)=1  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,5)=2  (18,7)=4  (18,9)=6  (18,10)=1  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,2)=2  (19,3)=1  (19,4)=2  (19,5)=3  (19,6)=4  (19,9)=1  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=6  (20,8)=1  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,0)=2  (21,1)=1  (21,2)=2  (21,3)=3  (21,4)=4  (21,7)=1  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,1)=2  (22,3)=4  (22,5)=6  (22,6)=1  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,0)=2  (23,1)=3  (23,2)=4  (23,5)=1  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,3)=1  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,1)=1  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
   (17128.8 bits)
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (28,29) and color red and mask ..........................x.x|...........................x.|........................x.x..|.........................x...|......................x.x....|.......................x.....|....................x.x......|.....................x.......|..................x.x........|...................x.........|................x.x..........|.................x...........|..............x.x............|...............x.............|............x.x..............|.............x...............|..........x.x................|...........x.................|........x.x..................|.........x...................|......x.x....................|.......x.....................|....x.x......................|.....x.......................|..x.x........................|...x.........................|x.x..........................|.x........................... at (1,0)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,14)=2  (1,15)=1  (1,16)=2  (1,17)=3  (1,18)=4  (1,20)=2  (1,21)=1  (1,22)=2  (1,23)=3  (1,24)=4  (1,27)=1  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=6  (2,20)=1  (2,21)=2  (2,23)=4  (2,25)=6  (2,26)=1  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=2  (3,7)=1  (3,8)=2  (3,9)=3  (3,10)=4  (3,12)=2  (3,13)=1  (3,14)=2  (3,15)=3  (3,16)=4  (3,18)=2  (3,19)=1  (3,20)=2  (3,21)=3  (3,22)=4  (3,25)=1  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=1  (4,7)=2  (4,9)=4  (4,11)=6  (4,12)=1  (4,13)=2  (4,15)=4  (4,17)=6  (4,18)=1  (4,19)=2  (4,21)=4  (4,23)=6  (4,24)=1  (4,27)=4  (5,0)=2  (5,1)=3  (5,2)=4  (5,4)=2  (5,5)=1  (5,6)=2  (5,7)=3  (5,8)=4  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=3  (5,20)=4  (5,23)=1  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=4  (6,3)=6  (6,4)=1  (6,5)=2  (6,7)=4  (6,9)=6  (6,10)=1  (6,11)=2  (6,13)=4  (6,15)=6  (6,16)=1  (6,17)=2  (6,19)=4  (6,21)=6  (6,22)=1  (6,25)=4  (6,27)=6  (6,28)=1  (7,0)=4  (7,2)=2  (7,3)=1  (7,4)=2  (7,5)=3  (7,6)=4  (7,8)=2  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,14)=2  (7,15)=1  (7,16)=2  (7,17)=3  (7,18)=4  (7,21)=1  (7,23)=3  (7,24)=4  (7,26)=2  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,5)=4  (8,7)=6  (8,8)=1  (8,9)=2  (8,11)=4  (8,13)=6  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=6  (8,20)=1  (8,23)=4  (8,25)=6  (8,26)=1  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=4  (9,6)=2  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=3  (9,16)=4  (9,19)=1  (9,21)=3  (9,22)=4  (9,24)=2  (9,25)=1  (9,26)=2  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,7)=2  (10,9)=4  (10,11)=6  (10,12)=1  (10,13)=2  (10,15)=4  (10,17)=6  (10,18)=1  (10,21)=4  (10,23)=6  (10,24)=1  (10,25)=2  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=3  (11,14)=4  (11,17)=1  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=2  (11,25)=3  (11,26)=4  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,5)=2  (12,7)=4  (12,9)=6  (12,10)=1  (12,11)=2  (12,13)=4  (12,15)=6  (12,16)=1  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,2)=2  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=3  (13,12)=4  (13,15)=1  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=6  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=6  (14,14)=1  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,6)=2  (15,7)=1  (15,8)=2  (15,9)=3  (15,10)=4  (15,13)=1  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,1)=2  (16,3)=4  (16,5)=6  (16,6)=1  (16,7)=2  (16,9)=4  (16,11)=6  (16,12)=1  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,0)=2  (17,1)=3  (17,2)=4  (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=3  (17,8)=4  (17,11)=1  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,5)=2  (18,7)=4  (18,9)=6  (18,10)=1  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,2)=2  (19,3)=1  (19,4)=2  (19,5)=3  (19,6)=4  (19,9)=1  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=6  (20,8)=1  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,0)=2  (21,1)=1  (21,2)=2  (21,3)=3  (21,4)=4  (21,7)=1  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=1  (21,14)=2  (21,15)=3  (21,16)=4  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,1)=2  (22,3)=4  (22,5)=6  (22,6)=1  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=2  (22,15)=4  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,0)=2  (23,1)=3  (23,2)=4  (23,5)=1  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=3  (23,14)=4  (23,16)=2  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,3)=1  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,1)=1  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
   (16640.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (28,29) and color red and mask ..........................x.x|...........................x.|........................x.x..|.........................x...|......................x.x....|.......................x.....|....................x.x......|.....................x.......|..................x.x........|...................x.........|................x.x..........|.................x...........|..............x.x............|...............x.............|............x.x..............|.............x...............|..........x.x................|...........x.................|........x.x..................|.........x...................|......x.x....................|.......x.....................|....x.x......................|.....x.......................|..x.x........................|...x.........................|x.x..........................|.x........................... at (1,0)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,14)=2  (1,15)=1  (1,16)=2  (1,17)=3  (1,18)=4  (1,20)=2  (1,21)=1  (1,22)=2  (1,23)=3  (1,24)=4  (1,27)=1  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=6  (2,20)=1  (2,21)=2  (2,23)=4  (2,25)=6  (2,26)=1  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,8)=2  (3,9)=3  (3,10)=4  (3,12)=2  (3,13)=1  (3,14)=2  (3,15)=3  (3,16)=4  (3,18)=2  (3,19)=1  (3,20)=2  (3,21)=3  (3,22)=4  (3,25)=1  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,13)=2  (4,15)=4  (4,17)=6  (4,18)=1  (4,19)=2  (4,21)=4  (4,23)=6  (4,24)=1  (4,27)=4  (5,0)=2  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=3  (5,20)=4  (5,23)=1  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=2  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,11)=2  (6,13)=4  (6,15)=6  (6,16)=1  (6,17)=2  (6,19)=4  (6,21)=6  (6,22)=1  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=2  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,14)=2  (7,15)=1  (7,16)=2  (7,17)=3  (7,18)=4  (7,21)=1  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,9)=2  (8,11)=4  (8,13)=6  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=6  (8,20)=1  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=0  (9,5)=0  (9,6)=2  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=3  (9,16)=4  (9,19)=1  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,7)=2  (10,9)=4  (10,11)=6  (10,12)=1  (10,13)=2  (10,15)=4  (10,17)=6  (10,18)=1  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=3  (11,14)=4  (11,17)=1  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,5)=2  (12,7)=4  (12,9)=6  (12,10)=1  (12,11)=2  (12,13)=4  (12,15)=6  (12,16)=1  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,2)=2  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=3  (13,12)=4  (13,15)=1  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=6  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=6  (14,14)=1  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,6)=2  (15,7)=1  (15,8)=2  (15,9)=3  (15,10)=4  (15,13)=1  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,1)=2  (16,3)=4  (16,5)=6  (16,6)=1  (16,7)=2  (16,9)=4  (16,11)=6  (16,12)=1  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,0)=2  (17,1)=3  (17,2)=4  (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=3  (17,8)=4  (17,11)=1  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,5)=2  (18,7)=4  (18,9)=6  (18,10)=1  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,2)=2  (19,3)=1  (19,4)=2  (19,5)=3  (19,6)=4  (19,9)=1  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=6  (20,8)=1  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,0)=2  (21,1)=1  (21,2)=2  (21,3)=3  (21,4)=4  (21,7)=1  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,1)=2  (22,3)=4  (22,5)=6  (22,6)=1  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,0)=2  (23,1)=3  (23,2)=4  (23,5)=1  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,3)=1  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,1)=1  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
! 841 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (24,24) and color red and mask .......................x|....................x.x.|.....................x..|..................x.x...|...................x....|................x.x.....|.................x......|..............x.x.......|...............x........|............x.x.........|.............x..........|..........x.x...........|...........x............|........x.x.............|.........x..............|......x.x...............|.......x................|....x.x.................|.....x..................|..x.x...................|...x....................|x.x.....................|.x......................|x....................... at (0,0)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,14)=2  (1,15)=1  (1,16)=2  (1,17)=3  (1,18)=4  (1,21)=1  (1,23)=3  (1,24)=4  (1,26)=2  (1,27)=1  (1,28)=2  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=6  (2,20)=1  (2,23)=4  (2,25)=6  (2,26)=1  (2,27)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,6)=0  (3,7)=0  (3,8)=2  (3,9)=3  (3,10)=4  (3,12)=2  (3,13)=1  (3,14)=2  (3,15)=3  (3,16)=4  (3,19)=1  (3,21)=3  (3,22)=4  (3,24)=2  (3,25)=1  (3,26)=2  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,6)=0  (4,7)=0  (4,9)=4  (4,11)=6  (4,12)=1  (4,13)=2  (4,15)=4  (4,17)=6  (4,18)=1  (4,21)=4  (4,23)=6  (4,24)=1  (4,25)=2  (4,27)=4  (5,0)=2  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,5)=1  (5,6)=0  (5,7)=0  (5,8)=4  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,17)=1  (5,19)=3  (5,20)=4  (5,22)=2  (5,23)=1  (5,24)=2  (5,25)=3  (5,26)=4  (5,28)=2  (6,1)=0  (6,2)=0  (6,3)=0  (6,4)=0  (6,5)=2  (6,6)=0  (6,7)=0  (6,9)=6  (6,10)=1  (6,11)=2  (6,13)=4  (6,15)=6  (6,16)=1  (6,19)=4  (6,21)=6  (6,22)=1  (6,23)=2  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0  (7,5)=0  (7,6)=0  (7,7)=0  (7,8)=2  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,15)=1  (7,17)=3  (7,18)=4  (7,20)=2  (7,21)=1  (7,22)=2  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,4)=0  (8,5)=0  (8,6)=0  (8,7)=0  (8,8)=1  (8,9)=2  (8,11)=4  (8,13)=6  (8,14)=1  (8,17)=4  (8,19)=6  (8,20)=1  (8,21)=2  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,4)=0  (9,5)=0  (9,6)=2  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,13)=1  (9,15)=3  (9,16)=4  (9,18)=2  (9,19)=1  (9,20)=2  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,7)=2  (10,9)=4  (10,11)=6  (10,12)=1  (10,15)=4  (10,17)=6  (10,18)=1  (10,19)=2  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,11)=1  (11,13)=3  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,5)=2  (12,7)=4  (12,9)=6  (12,10)=1  (12,13)=4  (12,15)=6  (12,16)=1  (12,17)=2  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,2)=2  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,9)=1  (13,11)=3  (13,12)=4  (13,14)=2  (13,15)=1  (13,16)=2  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=6  (14,8)=1  (14,11)=4  (14,13)=6  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,7)=1  (15,9)=3  (15,10)=4  (15,12)=2  (15,13)=1  (15,14)=2  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,1)=2  (16,3)=4  (16,5)=6  (16,6)=1  (16,9)=4  (16,11)=6  (16,12)=1  (16,13)=2  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,0)=2  (17,1)=3  (17,2)=4  (17,5)=1  (17,7)=3  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,7)=4  (18,9)=6  (18,10)=1  (18,11)=2  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,3)=1  (19,5)=3  (19,6)=4  (19,8)=2  (19,9)=1  (19,10)=2  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,5)=4  (20,7)=6  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,1)=1  (21,3)=3  (21,4)=4  (21,6)=2  (21,7)=1  (21,8)=2  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,3)=4  (22,5)=6  (22,6)=1  (22,7)=2  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,1)=3  (23,2)=4  (23,4)=2  (23,5)=1  (23,6)=2  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,5)=2  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,2)=2  (25,3)=1  (25,4)=2  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,3)=2  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,0)=2  (27,1)=1  (27,2)=2  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,1)=2  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
! 841 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (29,29) and color grey and layers
  _0: a rectangle with size (7,7) and color black and mask .....xx|.....xx|xxxx.xx|xxxx.xx|xxxxxxx|...xxxx|...xx.. at (3,1)
diff: 
delta: (0,1)=4  (0,3)=6  (0,4)=1  (0,5)=2  (0,7)=4  (0,9)=6  (0,10)=1  (0,11)=2  (0,13)=4  (0,15)=6  (0,16)=1  (0,17)=2  (0,19)=4  (0,21)=6  (0,22)=1  (0,23)=2  (0,25)=4  (0,27)=6  (0,28)=1  (1,0)=4  (1,2)=2  (1,3)=1  (1,4)=2  (1,5)=3  (1,6)=4  (1,8)=2  (1,9)=1  (1,10)=2  (1,11)=3  (1,12)=4  (1,14)=2  (1,15)=1  (1,16)=2  (1,17)=3  (1,18)=4  (1,20)=2  (1,21)=1  (1,22)=2  (1,23)=3  (1,24)=4  (1,26)=2  (1,27)=1  (1,28)=2  (2,1)=6  (2,2)=1  (2,3)=2  (2,5)=4  (2,7)=6  (2,8)=1  (2,9)=2  (2,11)=4  (2,13)=6  (2,14)=1  (2,15)=2  (2,17)=4  (2,19)=6  (2,20)=1  (2,21)=2  (2,23)=4  (2,25)=6  (2,26)=1  (2,27)=2  (3,0)=2  (3,1)=1  (3,2)=2  (3,3)=3  (3,4)=4  (3,8)=2  (3,9)=3  (3,10)=4  (3,12)=2  (3,13)=1  (3,14)=2  (3,15)=3  (3,16)=4  (3,18)=2  (3,19)=1  (3,20)=2  (3,21)=3  (3,22)=4  (3,24)=2  (3,25)=1  (3,26)=2  (3,27)=3  (3,28)=4  (4,0)=1  (4,1)=2  (4,3)=4  (4,5)=6  (4,9)=4  (4,11)=6  (4,12)=1  (4,13)=2  (4,15)=4  (4,17)=6  (4,18)=1  (4,19)=2  (4,21)=4  (4,23)=6  (4,24)=1  (4,25)=2  (4,27)=4  (5,0)=2  (5,5)=1  (5,8)=4  (5,10)=2  (5,11)=1  (5,12)=2  (5,13)=3  (5,14)=4  (5,16)=2  (5,17)=1  (5,18)=2  (5,19)=3  (5,20)=4  (5,22)=2  (5,23)=1  (5,24)=2  (5,25)=3  (5,26)=4  (5,28)=2  (6,5)=2  (6,9)=6  (6,10)=1  (6,11)=2  (6,13)=4  (6,15)=6  (6,16)=1  (6,17)=2  (6,19)=4  (6,21)=6  (6,22)=1  (6,23)=2  (6,24)=0  (6,25)=0  (6,26)=0  (6,27)=6  (6,28)=1  (7,0)=4  (7,8)=2  (7,9)=1  (7,10)=2  (7,11)=3  (7,12)=4  (7,14)=2  (7,15)=1  (7,16)=2  (7,17)=3  (7,18)=4  (7,20)=2  (7,21)=1  (7,22)=2  (7,23)=3  (7,24)=0  (7,25)=0  (7,26)=0  (7,27)=1  (7,28)=2  (8,1)=6  (8,2)=1  (8,3)=2  (8,8)=1  (8,9)=2  (8,11)=4  (8,13)=6  (8,14)=1  (8,15)=2  (8,17)=4  (8,19)=6  (8,20)=1  (8,21)=2  (8,23)=4  (8,24)=0  (8,25)=0  (8,26)=0  (8,27)=2  (9,0)=2  (9,1)=1  (9,2)=2  (9,3)=3  (9,6)=2  (9,7)=1  (9,8)=2  (9,9)=3  (9,10)=4  (9,12)=2  (9,13)=1  (9,14)=2  (9,15)=3  (9,16)=4  (9,18)=2  (9,19)=1  (9,20)=2  (9,21)=3  (9,22)=4  (9,24)=0  (9,25)=0  (9,26)=0  (9,27)=3  (9,28)=4  (10,0)=1  (10,1)=2  (10,3)=4  (10,5)=6  (10,6)=1  (10,7)=2  (10,9)=4  (10,11)=6  (10,12)=1  (10,13)=2  (10,15)=4  (10,17)=6  (10,18)=1  (10,19)=2  (10,21)=4  (10,23)=6  (10,24)=0  (10,25)=0  (10,26)=0  (10,27)=4  (11,0)=2  (11,1)=3  (11,2)=4  (11,4)=2  (11,5)=1  (11,6)=2  (11,7)=3  (11,8)=4  (11,10)=2  (11,11)=1  (11,12)=2  (11,13)=3  (11,14)=4  (11,16)=2  (11,17)=1  (11,18)=2  (11,19)=3  (11,20)=4  (11,22)=2  (11,23)=1  (11,24)=0  (11,25)=0  (11,26)=0  (11,28)=2  (12,1)=4  (12,3)=6  (12,4)=1  (12,5)=2  (12,7)=4  (12,9)=6  (12,10)=1  (12,11)=2  (12,13)=4  (12,15)=6  (12,16)=1  (12,17)=2  (12,19)=4  (12,21)=6  (12,22)=1  (12,23)=2  (12,25)=4  (12,27)=6  (12,28)=1  (13,0)=4  (13,2)=2  (13,3)=1  (13,4)=2  (13,5)=3  (13,6)=4  (13,8)=2  (13,9)=1  (13,10)=2  (13,11)=3  (13,12)=4  (13,14)=2  (13,15)=1  (13,16)=2  (13,17)=3  (13,18)=4  (13,20)=2  (13,21)=1  (13,22)=2  (13,23)=3  (13,24)=4  (13,26)=2  (13,27)=1  (13,28)=2  (14,1)=6  (14,2)=1  (14,3)=2  (14,5)=4  (14,7)=6  (14,8)=1  (14,9)=2  (14,11)=4  (14,13)=6  (14,14)=1  (14,15)=2  (14,17)=4  (14,19)=6  (14,20)=1  (14,21)=2  (14,23)=4  (14,25)=6  (14,26)=1  (14,27)=2  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=3  (15,4)=4  (15,6)=2  (15,7)=1  (15,8)=2  (15,9)=3  (15,10)=4  (15,12)=2  (15,13)=1  (15,14)=2  (15,15)=3  (15,16)=4  (15,18)=2  (15,19)=1  (15,20)=2  (15,21)=3  (15,22)=4  (15,24)=2  (15,25)=1  (15,26)=2  (15,27)=3  (15,28)=4  (16,0)=1  (16,1)=2  (16,3)=4  (16,5)=6  (16,6)=1  (16,7)=2  (16,9)=4  (16,11)=6  (16,12)=1  (16,13)=2  (16,15)=4  (16,17)=6  (16,18)=1  (16,19)=2  (16,21)=4  (16,23)=6  (16,24)=1  (16,25)=2  (16,27)=4  (17,0)=2  (17,1)=3  (17,2)=4  (17,4)=2  (17,5)=1  (17,6)=2  (17,7)=3  (17,8)=4  (17,10)=2  (17,11)=1  (17,12)=2  (17,13)=3  (17,14)=4  (17,16)=2  (17,17)=1  (17,18)=2  (17,19)=3  (17,20)=4  (17,22)=2  (17,23)=1  (17,24)=2  (17,25)=3  (17,26)=4  (17,28)=2  (18,1)=4  (18,3)=6  (18,4)=1  (18,5)=2  (18,7)=4  (18,9)=6  (18,10)=1  (18,11)=2  (18,13)=4  (18,15)=6  (18,16)=1  (18,17)=2  (18,19)=4  (18,21)=6  (18,22)=1  (18,23)=2  (18,25)=4  (18,27)=6  (18,28)=1  (19,0)=4  (19,2)=2  (19,3)=1  (19,4)=2  (19,5)=3  (19,6)=4  (19,8)=2  (19,9)=1  (19,10)=2  (19,11)=3  (19,12)=4  (19,14)=2  (19,15)=1  (19,16)=2  (19,17)=3  (19,18)=4  (19,20)=2  (19,21)=1  (19,22)=2  (19,23)=3  (19,24)=4  (19,26)=2  (19,27)=1  (19,28)=2  (20,1)=6  (20,2)=1  (20,3)=2  (20,5)=4  (20,7)=6  (20,8)=1  (20,9)=2  (20,11)=4  (20,13)=6  (20,14)=1  (20,15)=2  (20,17)=4  (20,19)=6  (20,20)=1  (20,21)=2  (20,23)=4  (20,25)=6  (20,26)=1  (20,27)=2  (21,0)=2  (21,1)=1  (21,2)=2  (21,3)=3  (21,4)=4  (21,6)=2  (21,7)=1  (21,8)=2  (21,9)=3  (21,10)=4  (21,12)=2  (21,13)=0  (21,14)=0  (21,15)=0  (21,16)=0  (21,18)=2  (21,19)=1  (21,20)=2  (21,21)=3  (21,22)=4  (21,24)=2  (21,25)=1  (21,26)=2  (21,27)=3  (21,28)=4  (22,0)=1  (22,1)=2  (22,3)=4  (22,5)=6  (22,6)=1  (22,7)=2  (22,9)=4  (22,11)=6  (22,12)=1  (22,13)=0  (22,14)=0  (22,15)=0  (22,16)=0  (22,17)=6  (22,18)=1  (22,19)=2  (22,21)=4  (22,23)=6  (22,24)=1  (22,25)=2  (22,27)=4  (23,0)=2  (23,1)=3  (23,2)=4  (23,4)=2  (23,5)=1  (23,6)=2  (23,7)=3  (23,8)=4  (23,10)=2  (23,11)=1  (23,12)=2  (23,13)=0  (23,14)=0  (23,15)=0  (23,16)=0  (23,17)=1  (23,18)=2  (23,19)=3  (23,20)=4  (23,22)=2  (23,23)=1  (23,24)=2  (23,25)=3  (23,26)=4  (23,28)=2  (24,1)=4  (24,3)=6  (24,4)=1  (24,5)=2  (24,7)=4  (24,9)=6  (24,10)=1  (24,11)=2  (24,13)=4  (24,15)=6  (24,16)=1  (24,17)=2  (24,19)=4  (24,21)=6  (24,22)=1  (24,23)=2  (24,25)=4  (24,27)=6  (24,28)=1  (25,0)=4  (25,2)=2  (25,3)=1  (25,4)=2  (25,5)=3  (25,6)=4  (25,8)=2  (25,9)=1  (25,10)=2  (25,11)=3  (25,12)=4  (25,14)=2  (25,15)=1  (25,16)=2  (25,17)=3  (25,18)=4  (25,20)=2  (25,21)=1  (25,22)=2  (25,23)=3  (25,24)=4  (25,26)=2  (25,27)=1  (25,28)=2  (26,1)=6  (26,2)=1  (26,3)=2  (26,5)=4  (26,7)=6  (26,8)=1  (26,9)=2  (26,11)=4  (26,13)=6  (26,14)=1  (26,15)=2  (26,17)=4  (26,19)=6  (26,20)=1  (26,21)=2  (26,23)=4  (26,25)=6  (26,26)=1  (26,27)=2  (27,0)=2  (27,1)=1  (27,2)=2  (27,3)=3  (27,4)=4  (27,6)=2  (27,7)=1  (27,8)=2  (27,9)=3  (27,10)=4  (27,12)=2  (27,13)=1  (27,14)=2  (27,15)=3  (27,16)=4  (27,18)=2  (27,19)=1  (27,20)=2  (27,21)=3  (27,22)=4  (27,24)=2  (27,25)=1  (27,26)=2  (27,27)=3  (27,28)=4  (28,0)=1  (28,1)=2  (28,3)=4  (28,5)=6  (28,6)=1  (28,7)=2  (28,9)=4  (28,11)=6  (28,12)=1  (28,13)=2  (28,15)=4  (28,17)=6  (28,18)=1  (28,19)=2  (28,21)=4  (28,23)=6  (28,24)=1  (28,25)=2  (28,27)=4 
! 841 wrong pixels (generated / expected)

TRAIN 484b58aa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color red and mask ........x..x..x.x.x.x....xx..|........x.xx..x..x..x.x.x.x..|.....x...x....x.xx..x..x..x..|......x.x..x...x....x.xx..x..|.......xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x...........x.x|..x.x.x.x....xx............x.|..x..x..x.....x.........x.x..|..x.xx..x.....x.x.x......xx..|...x....x.xx..x..x......x.x..|x.x......x....x.xx.....x..x..|.xx.....x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.....x....xx...x.x..x...x.|..x.....x.x.x.x....xx...x.x..|..x.....x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x...x.x....xx.. at (0,0)
diff: 
delta: (0,0)=5# (0,1)=4  (0,2)=2  (0,3)=1  (0,4)=2  (0,5)=2  (0,6)=5# (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,19)=5# (0,21)=5# (0,22)=5# (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,4)=5# (1,5)=7# (1,6)=5# (1,7)=4  (1,9)=1  (1,12)=5# (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (1,25)=5# (1,27)=5# (1,28)=5# (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,10)=5# (2,11)=7# (2,12)=5# (2,13)=4  (2,15)=1  (2,18)=5# (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (2,28)=2  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,16)=5# (3,17)=7# (3,18)=5# (3,19)=4  (3,21)=1  (3,24)=5# (3,25)=3  (3,27)=7# (3,28)=1  (4,4)=5# (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,22)=5# (4,23)=7# (4,24)=5# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,7)=5# (5,9)=5# (5,10)=5# (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (5,28)=5# (6,0)=5# (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,13)=5# (6,15)=5# (6,16)=5# (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,0)=5# (7,1)=4  (7,3)=1  (7,6)=5# (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,19)=5# (7,21)=5# (7,22)=5# (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,4)=5# (8,5)=7# (8,6)=5# (8,7)=4  (8,9)=1  (8,12)=5# (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (8,25)=5# (8,27)=5# (8,28)=5# (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,10)=5# (9,11)=7# (9,12)=5# (9,13)=4  (9,15)=1  (9,18)=5# (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (9,28)=2  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,16)=5# (10,17)=7# (10,18)=5# (10,19)=4  (10,21)=1  (10,24)=5# (10,25)=3  (10,27)=7# (10,28)=1  (11,1)=5# (11,3)=5# (11,4)=5# (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,17)=2  (11,18)=3  (11,24)=5# (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,7)=5# (12,9)=5# (12,10)=5# (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,18)=2  (12,24)=3  (12,25)=7# (12,26)=1  (12,28)=5# (13,0)=5# (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,15)=5# (13,16)=5# (13,17)=7# (13,18)=1  (13,25)=1  (13,27)=3  (13,28)=3  (14,0)=5# (14,1)=4  (14,3)=1  (14,6)=5# (14,7)=3  (14,15)=6  (14,17)=1  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,4)=5# (15,5)=7# (15,6)=5# (15,7)=4  (15,9)=1  (15,12)=5# (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,23)=1  (15,25)=5# (15,27)=5# (15,28)=5# (16,1)=1  (16,3)=3  (16,7)=7# (16,8)=1  (16,10)=5# (16,11)=7# (16,12)=5# (16,13)=4  (16,15)=1  (16,18)=5# (16,24)=3  (16,25)=6  (16,27)=6  (16,28)=2  (17,0)=1  (17,3)=4  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,16)=5# (17,17)=7# (17,18)=5# (17,19)=4  (17,21)=1  (17,24)=5# (17,25)=3  (17,27)=7# (17,28)=1  (18,1)=5# (18,3)=5# (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,22)=5# (18,23)=7# (18,24)=5# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,7)=5# (19,9)=5# (19,10)=5# (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (19,28)=5# (20,0)=5# (20,1)=3  (20,3)=7# (20,7)=6  (20,9)=6  (20,11)=1  (20,13)=5# (20,15)=5# (20,16)=5# (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,0)=5# (21,1)=4  (21,3)=1  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,19)=5# (21,21)=5# (21,22)=5# (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,4)=5# (22,5)=7# (22,6)=5# (22,7)=4  (22,9)=1  (22,12)=5# (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (22,25)=5# (22,27)=5# (22,28)=5# (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,10)=5# (23,11)=7# (23,12)=5# (23,13)=4  (23,15)=1  (23,18)=5# (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (23,28)=2  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,16)=5# (24,17)=7# (24,18)=5# (24,19)=4  (24,21)=1  (24,24)=5# (24,25)=3  (24,27)=7# (24,28)=1  (25,1)=5# (25,3)=5# (25,4)=5# (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,22)=5# (25,23)=7# (25,24)=5# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,7)=5# (26,9)=5# (26,10)=5# (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (26,28)=5# (27,0)=5# (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,13)=5# (27,15)=5# (27,16)=5# (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,0)=5# (28,1)=4  (28,3)=1  (28,6)=5# (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,16)=2  (28,17)=1  (28,19)=5# (28,21)=5# (28,22)=5# (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
   (15008.2 bits)
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (25,25) and color blue and mask ........................x|.......................x.|......................x..|.....................x...|....................x....|...................x.....|..................x......|.................x.......|................x........|...............x.........|..............x..........|.............x...........|............x............|...........x.............|..........x..............|.........x...............|........x................|.......x.................|......x..................|.....x...................|....x....................|...x.....................|..x......................|.x.......................|x........................ at (0,0)
diff: 
delta: (0,0)=5# (0,1)=4  (0,3)=1  (0,6)=5# (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,19)=5# (0,21)=5# (0,22)=5# (0,23)=7# (0,27)=4  (0,28)=3  (1,0)=3  (1,1)=7# (1,2)=1  (1,4)=5# (1,5)=7# (1,6)=5# (1,7)=4  (1,9)=1  (1,12)=5# (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,25)=5# (1,27)=5# (1,28)=5# (2,1)=1  (2,3)=3  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,10)=5# (2,11)=7# (2,12)=5# (2,13)=4  (2,15)=1  (2,18)=5# (2,19)=3  (2,21)=7# (2,24)=3  (2,25)=6  (2,27)=6  (3,0)=1  (3,3)=4  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,16)=5# (3,17)=7# (3,18)=5# (3,19)=4  (3,24)=5# (3,25)=3  (3,27)=7# (3,28)=1  (4,1)=5# (4,3)=5# (4,4)=5# (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,22)=5# (4,23)=7# (4,24)=5# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,7)=5# (5,9)=5# (5,10)=5# (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (5,28)=5# (6,0)=5# (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,13)=5# (6,15)=5# (6,16)=5# (6,17)=7# (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,0)=5# (7,1)=4  (7,3)=1  (7,6)=5# (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,19)=5# (7,21)=5# (7,22)=5# (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,4)=5# (8,5)=7# (8,6)=5# (8,7)=4  (8,9)=1  (8,12)=5# (8,13)=3  (8,15)=7# (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (8,25)=5# (8,27)=5# (8,28)=5# (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,10)=5# (9,11)=7# (9,12)=5# (9,13)=4  (9,18)=5# (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,16)=5# (10,17)=7# (10,18)=5# (10,19)=4  (10,21)=1  (10,24)=5# (10,25)=3  (10,27)=7# (10,28)=1  (11,1)=5# (11,3)=5# (11,4)=5# (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,15)=3  (11,16)=3  (11,18)=3  (11,19)=7# (11,20)=1  (11,22)=5# (11,23)=7# (11,24)=5# (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,7)=5# (12,9)=5# (12,10)=5# (12,11)=7# (12,15)=4  (12,16)=3  (12,17)=7# (12,19)=1  (12,21)=3  (12,22)=3  (12,24)=3  (12,25)=7# (12,26)=1  (12,28)=5# (13,0)=5# (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=6  (13,13)=5# (13,15)=5# (13,16)=5# (13,17)=7# (13,18)=1  (13,21)=4  (13,22)=3  (13,23)=7# (13,25)=1  (13,27)=3  (13,28)=3  (14,0)=5# (14,1)=4  (14,3)=1  (14,6)=5# (14,7)=3  (14,9)=7# (14,12)=3  (14,13)=6  (14,15)=6  (14,17)=1  (14,19)=5# (14,21)=5# (14,22)=5# (14,23)=7# (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,4)=5# (15,5)=7# (15,6)=5# (15,7)=4  (15,12)=5# (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,19)=6  (15,21)=6  (15,23)=1  (15,25)=5# (15,27)=5# (15,28)=5# (16,1)=1  (16,3)=3  (16,4)=3  (16,6)=3  (16,7)=7# (16,10)=5# (16,11)=7# (16,12)=5# (16,13)=4  (16,15)=1  (16,18)=5# (16,19)=3  (16,21)=7# (16,22)=1  (16,24)=3  (16,25)=6  (16,27)=6  (17,0)=1  (17,3)=4  (17,4)=3  (17,5)=7# (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,16)=5# (17,17)=7# (17,18)=5# (17,19)=4  (17,21)=1  (17,24)=5# (17,25)=3  (17,27)=7# (17,28)=1  (18,1)=5# (18,3)=5# (18,4)=5# (18,5)=7# (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,22)=5# (18,23)=7# (18,24)=5# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,7)=5# (19,9)=5# (19,10)=5# (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (19,28)=5# (20,0)=5# (20,1)=3  (20,3)=7# (20,6)=3  (20,7)=6  (20,9)=6  (20,11)=1  (20,13)=5# (20,15)=5# (20,16)=5# (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,0)=5# (21,1)=4  (21,6)=5# (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,19)=5# (21,21)=5# (21,22)=5# (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,4)=5# (22,5)=7# (22,6)=5# (22,7)=4  (22,9)=1  (22,12)=5# (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (22,25)=5# (22,27)=5# (22,28)=5# (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,10)=5# (23,11)=7# (23,12)=5# (23,13)=4  (23,15)=1  (23,18)=5# (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,16)=5# (24,17)=7# (24,18)=5# (24,19)=4  (24,21)=1  (24,24)=5# (24,25)=3  (24,27)=7# (24,28)=1  (25,1)=5# (25,3)=5# (25,4)=5# (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,22)=5# (25,23)=7# (25,24)=5# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,7)=5# (26,9)=5# (26,10)=5# (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (26,28)=5# (27,0)=5# (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,13)=5# (27,15)=5# (27,16)=5# (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,0)=5# (28,1)=4  (28,3)=1  (28,6)=5# (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,17)=1  (28,19)=5# (28,21)=5# (28,22)=5# (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
   (14678.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color red and mask ........x..x..x.x.x.x....xx..|........x.xx..x..x..x.x.x.x..|.....x...x....x.xx..x..x..x..|......x.x..x...x....x.xx..x..|.......xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x...........x.x|..x.x.x.x....xx............x.|..x..x..x.....x.........x.x..|..x.xx..x.....x.x.x......xx..|...x....x.xx..x..x......x.x..|x.x......x....x.xx.....x..x..|.xx.....x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.....x....xx...x.x..x...x.|..x.....x.x.x.x....xx...x.x..|..x.....x..x..x.x.x.x....xx..|...x....x.xx..x..x..x.x.x.x..|x.x..x...x....x.xx..x..x..x..|.xx...x.x..x...x....x.xx..x..|x.x....xx...x.x..x...x....x.x|..x.x.x.x....xx...x.x..x...x.|..x..x..x.x.x.x....xx...x.x..|..x.xx..x..x..x...x.x....xx.. at (0,0)
diff: 
delta: (0,0)=5# (0,1)=4  (0,2)=2  (0,3)=1  (0,4)=2  (0,5)=2  (0,6)=5# (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,19)=5# (0,21)=5# (0,22)=5# (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,4)=5# (1,5)=7# (1,6)=5# (1,7)=4  (1,9)=1  (1,12)=5# (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (1,25)=5# (1,27)=5# (1,28)=5# (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,10)=5# (2,11)=7# (2,12)=5# (2,13)=4  (2,15)=1  (2,18)=5# (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (2,28)=2  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,16)=5# (3,17)=7# (3,18)=5# (3,19)=4  (3,21)=1  (3,24)=5# (3,25)=3  (3,27)=7# (3,28)=1  (4,4)=5# (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,22)=5# (4,23)=7# (4,24)=5# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,7)=5# (5,9)=5# (5,10)=5# (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (5,28)=5# (6,0)=5# (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,13)=5# (6,15)=5# (6,16)=5# (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,0)=5# (7,1)=4  (7,3)=1  (7,6)=5# (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,19)=5# (7,21)=5# (7,22)=5# (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,4)=5# (8,5)=7# (8,6)=5# (8,7)=4  (8,9)=1  (8,12)=5# (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (8,25)=5# (8,27)=5# (8,28)=5# (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,10)=5# (9,11)=7# (9,12)=5# (9,13)=4  (9,15)=1  (9,18)=5# (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (9,28)=2  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,16)=5# (10,17)=7# (10,18)=5# (10,19)=4  (10,21)=1  (10,24)=5# (10,25)=3  (10,27)=7# (10,28)=1  (11,1)=5# (11,3)=5# (11,4)=5# (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,17)=2  (11,18)=3  (11,24)=5# (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,7)=5# (12,9)=5# (12,10)=5# (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,18)=2  (12,24)=3  (12,25)=7# (12,26)=1  (12,28)=5# (13,0)=5# (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,15)=5# (13,16)=5# (13,17)=7# (13,18)=1  (13,25)=1  (13,27)=3  (13,28)=3  (14,0)=5# (14,1)=4  (14,3)=1  (14,6)=5# (14,7)=3  (14,15)=6  (14,17)=1  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,4)=5# (15,5)=7# (15,6)=5# (15,7)=4  (15,9)=1  (15,12)=5# (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,23)=1  (15,25)=5# (15,27)=5# (15,28)=5# (16,1)=1  (16,3)=3  (16,7)=7# (16,8)=1  (16,10)=5# (16,11)=7# (16,12)=5# (16,13)=4  (16,15)=1  (16,18)=5# (16,24)=3  (16,25)=6  (16,27)=6  (16,28)=2  (17,0)=1  (17,3)=4  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,16)=5# (17,17)=7# (17,18)=5# (17,19)=4  (17,21)=1  (17,24)=5# (17,25)=3  (17,27)=7# (17,28)=1  (18,1)=5# (18,3)=5# (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,22)=5# (18,23)=7# (18,24)=5# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,7)=5# (19,9)=5# (19,10)=5# (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (19,28)=5# (20,0)=5# (20,1)=3  (20,3)=7# (20,7)=6  (20,9)=6  (20,11)=1  (20,13)=5# (20,15)=5# (20,16)=5# (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,0)=5# (21,1)=4  (21,3)=1  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,19)=5# (21,21)=5# (21,22)=5# (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,4)=5# (22,5)=7# (22,6)=5# (22,7)=4  (22,9)=1  (22,12)=5# (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (22,25)=5# (22,27)=5# (22,28)=5# (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,10)=5# (23,11)=7# (23,12)=5# (23,13)=4  (23,15)=1  (23,18)=5# (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (23,28)=2  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,16)=5# (24,17)=7# (24,18)=5# (24,19)=4  (24,21)=1  (24,24)=5# (24,25)=3  (24,27)=7# (24,28)=1  (25,1)=5# (25,3)=5# (25,4)=5# (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,22)=5# (25,23)=7# (25,24)=5# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,7)=5# (26,9)=5# (26,10)=5# (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (26,28)=5# (27,0)=5# (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,13)=5# (27,15)=5# (27,16)=5# (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,0)=5# (28,1)=4  (28,3)=1  (28,6)=5# (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,16)=2  (28,17)=1  (28,19)=5# (28,21)=5# (28,22)=5# (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
! 841 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (6,5) and color black and mask xxxxx|xxxxx|xxxxx|xxxxx|xxxx.|xxxx. at (11,19)
diff: 
delta: (0,0)=5# (0,1)=4  (0,3)=1  (0,6)=5# (0,7)=3  (0,9)=7# (0,10)=1  (0,12)=3  (0,13)=6  (0,15)=6  (0,17)=1  (0,19)=5# (0,21)=5# (0,22)=5# (0,23)=7# (0,24)=1  (0,27)=4  (0,28)=3  (1,0)=0  (1,1)=0  (1,2)=0  (1,3)=0  (1,4)=5# (1,5)=7# (1,6)=5# (1,7)=4  (1,9)=1  (1,12)=5# (1,13)=3  (1,15)=7# (1,16)=1  (1,18)=3  (1,19)=6  (1,21)=6  (1,23)=1  (1,25)=5# (1,27)=5# (1,28)=5# (2,0)=0  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=3  (2,6)=3  (2,7)=7# (2,8)=1  (2,10)=5# (2,11)=7# (2,12)=5# (2,13)=4  (2,15)=1  (2,18)=5# (2,19)=3  (2,21)=7# (2,22)=1  (2,24)=3  (2,25)=6  (2,27)=6  (3,0)=0  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=7# (3,7)=1  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=7# (3,14)=1  (3,16)=5# (3,17)=7# (3,18)=5# (3,19)=4  (3,21)=1  (3,24)=5# (3,25)=3  (3,27)=7# (3,28)=1  (4,0)=0  (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=5# (4,5)=7# (4,6)=1  (4,9)=4  (4,10)=3  (4,11)=7# (4,13)=1  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=7# (4,20)=1  (4,22)=5# (4,23)=7# (4,24)=5# (4,25)=4  (4,27)=1  (5,0)=3  (5,1)=6  (5,3)=6  (5,5)=1  (5,7)=5# (5,9)=5# (5,10)=5# (5,11)=7# (5,12)=1  (5,15)=4  (5,16)=3  (5,17)=7# (5,19)=1  (5,21)=3  (5,22)=3  (5,24)=3  (5,25)=7# (5,26)=1  (5,28)=5# (6,0)=5# (6,1)=3  (6,3)=7# (6,4)=1  (6,6)=3  (6,7)=6  (6,9)=6  (6,11)=1  (6,13)=5# (6,15)=5# (6,16)=5# (6,17)=7# (6,18)=1  (6,21)=4  (6,22)=3  (6,23)=7# (6,25)=1  (6,27)=3  (6,28)=3  (7,0)=5# (7,1)=4  (7,3)=1  (7,6)=5# (7,7)=3  (7,9)=7# (7,10)=1  (7,12)=3  (7,13)=6  (7,15)=6  (7,17)=1  (7,19)=5# (7,21)=5# (7,22)=5# (7,23)=7# (7,24)=1  (7,27)=4  (7,28)=3  (8,0)=3  (8,1)=7# (8,2)=1  (8,4)=5# (8,5)=7# (8,6)=5# (8,7)=4  (8,9)=1  (8,12)=5# (8,13)=3  (8,15)=7# (8,16)=1  (8,18)=3  (8,19)=6  (8,21)=6  (8,23)=1  (8,25)=5# (8,27)=5# (8,28)=5# (9,1)=1  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=7# (9,8)=1  (9,10)=5# (9,11)=7# (9,12)=5# (9,13)=4  (9,15)=1  (9,18)=5# (9,19)=3  (9,21)=7# (9,22)=1  (9,24)=3  (9,25)=6  (9,27)=6  (10,0)=1  (10,3)=4  (10,4)=3  (10,5)=7# (10,7)=1  (10,9)=3  (10,10)=3  (10,12)=3  (10,13)=7# (10,14)=1  (10,16)=5# (10,17)=7# (10,18)=5# (10,19)=4  (10,21)=1  (10,24)=5# (10,25)=3  (10,27)=7# (10,28)=1  (11,1)=5# (11,3)=5# (11,4)=5# (11,5)=7# (11,6)=1  (11,9)=4  (11,10)=3  (11,11)=7# (11,13)=1  (11,15)=3  (11,16)=3  (11,18)=3  (11,24)=5# (11,25)=4  (11,27)=1  (12,0)=3  (12,1)=6  (12,3)=6  (12,5)=1  (12,7)=5# (12,9)=5# (12,10)=5# (12,11)=7# (12,12)=1  (12,15)=4  (12,16)=3  (12,17)=7# (12,24)=3  (12,25)=7# (12,26)=1  (12,28)=5# (13,0)=5# (13,1)=3  (13,3)=7# (13,4)=1  (13,6)=3  (13,7)=6  (13,9)=0  (13,10)=0  (13,11)=0  (13,12)=0  (13,13)=0  (13,15)=5# (13,16)=5# (13,17)=7# (13,18)=1  (13,25)=1  (13,27)=3  (13,28)=3  (14,0)=5# (14,1)=4  (14,3)=1  (14,6)=5# (14,7)=3  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,15)=6  (14,17)=1  (14,24)=1  (14,27)=4  (14,28)=3  (15,0)=3  (15,1)=7# (15,2)=1  (15,4)=5# (15,5)=7# (15,6)=5# (15,7)=4  (15,9)=1  (15,12)=5# (15,13)=3  (15,15)=7# (15,16)=1  (15,18)=3  (15,23)=1  (15,25)=5# (15,27)=5# (15,28)=5# (16,1)=1  (16,3)=3  (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=7# (16,8)=1  (16,10)=5# (16,11)=7# (16,12)=5# (16,13)=4  (16,15)=1  (16,18)=5# (16,24)=3  (16,25)=6  (16,27)=6  (17,0)=1  (17,3)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=1  (17,9)=3  (17,10)=3  (17,12)=3  (17,13)=7# (17,14)=1  (17,16)=5# (17,17)=7# (17,18)=5# (17,19)=4  (17,21)=1  (17,24)=5# (17,25)=3  (17,27)=7# (17,28)=1  (18,1)=5# (18,3)=5# (18,4)=0  (18,5)=0  (18,6)=0  (18,9)=4  (18,10)=3  (18,11)=7# (18,13)=1  (18,15)=3  (18,16)=3  (18,18)=3  (18,19)=7# (18,20)=1  (18,22)=5# (18,23)=7# (18,24)=5# (18,25)=4  (18,27)=1  (19,0)=3  (19,1)=6  (19,3)=6  (19,4)=0  (19,5)=0  (19,6)=0  (19,7)=5# (19,9)=5# (19,10)=5# (19,11)=7# (19,12)=1  (19,15)=4  (19,16)=3  (19,17)=7# (19,19)=1  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=7# (19,26)=1  (19,28)=5# (20,0)=5# (20,1)=3  (20,3)=7# (20,4)=0  (20,5)=0  (20,6)=0  (20,7)=6  (20,9)=6  (20,11)=1  (20,13)=5# (20,15)=5# (20,16)=5# (20,17)=7# (20,18)=1  (20,21)=4  (20,22)=3  (20,23)=7# (20,25)=1  (20,27)=3  (20,28)=3  (21,0)=5# (21,1)=4  (21,3)=1  (21,4)=0  (21,5)=0  (21,6)=0  (21,7)=3  (21,9)=7# (21,10)=1  (21,12)=3  (21,13)=6  (21,15)=6  (21,17)=1  (21,19)=5# (21,21)=5# (21,22)=5# (21,23)=7# (21,24)=1  (21,27)=4  (21,28)=3  (22,0)=3  (22,1)=7# (22,2)=1  (22,4)=5# (22,5)=7# (22,6)=5# (22,7)=4  (22,9)=1  (22,12)=5# (22,13)=3  (22,15)=7# (22,16)=1  (22,18)=3  (22,19)=6  (22,21)=6  (22,23)=1  (22,25)=5# (22,27)=5# (22,28)=5# (23,1)=1  (23,3)=3  (23,4)=3  (23,6)=3  (23,7)=7# (23,8)=1  (23,10)=5# (23,11)=7# (23,12)=5# (23,13)=4  (23,15)=1  (23,18)=5# (23,19)=3  (23,21)=7# (23,22)=1  (23,24)=3  (23,25)=6  (23,27)=6  (24,0)=1  (24,3)=4  (24,4)=3  (24,5)=7# (24,7)=1  (24,9)=3  (24,10)=3  (24,12)=3  (24,13)=7# (24,14)=1  (24,16)=5# (24,17)=7# (24,18)=5# (24,19)=4  (24,21)=1  (24,24)=5# (24,25)=3  (24,27)=7# (24,28)=1  (25,1)=5# (25,3)=5# (25,4)=5# (25,5)=7# (25,6)=1  (25,9)=4  (25,10)=3  (25,11)=7# (25,13)=1  (25,15)=3  (25,16)=3  (25,18)=3  (25,19)=7# (25,20)=1  (25,22)=5# (25,23)=7# (25,24)=5# (25,25)=4  (25,27)=1  (26,0)=3  (26,1)=6  (26,3)=6  (26,5)=1  (26,7)=5# (26,9)=5# (26,10)=5# (26,11)=7# (26,12)=1  (26,15)=4  (26,16)=3  (26,17)=7# (26,19)=1  (26,21)=3  (26,22)=3  (26,24)=3  (26,25)=7# (26,26)=1  (26,28)=5# (27,0)=5# (27,1)=3  (27,3)=7# (27,4)=1  (27,6)=3  (27,7)=6  (27,9)=6  (27,11)=1  (27,13)=5# (27,15)=5# (27,16)=5# (27,17)=7# (27,18)=1  (27,21)=4  (27,22)=3  (27,23)=7# (27,25)=1  (27,27)=3  (27,28)=3  (28,0)=5# (28,1)=4  (28,3)=1  (28,6)=5# (28,7)=3  (28,9)=7# (28,10)=1  (28,12)=3  (28,13)=6  (28,15)=6  (28,17)=1  (28,19)=5# (28,21)=5# (28,22)=5# (28,23)=7# (28,24)=1  (28,27)=4  (28,28)=3 
! 841 wrong pixels (generated / expected)

TRAIN 484b58aa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (29,29) and color blue and mask x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.x.....x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x..........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x.x......|.x.x.x.x.x.x.x.x.x.x.x.x.....|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x at (0,0)
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,1)=8  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (20,28)=1  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (22,28)=1  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (24,28)=1  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
   (7900.7 bits)
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (29,29) and color blue and mask Even Checkboard at (0,0)
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,7)=4  (4,9)=6  (4,11)=8  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (6,1)=8  (6,5)=4  (6,7)=6  (6,9)=8  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (8,3)=4  (8,5)=6  (8,7)=8  (8,11)=4  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (10,1)=4  (10,3)=6  (10,5)=8  (10,9)=4  (10,11)=6  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=8  (16,27)=4  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,25)=4  (18,27)=6  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,23)=4  (20,25)=6  (20,27)=8  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=4  (22,23)=6  (22,25)=8  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,27)=4  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
   (4482.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color red and layers
  _0: a rectangle with size (29,29) and color blue and mask x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.......x.x.x.x.x.x.x.x.|x.x.x.........x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.x.....x.|x.x.x.x.x.x.x.x.x.x.x.x.....x|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x..........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x........|.x.x.x.x.x.x.x.x.x.x.........|x.x.x.x.x.x.x.x.x.x.x.x......|.x.x.x.x.x.x.x.x.x.x.x.x.....|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x|.x.x.x.x.x.x.x.x.x.x.x.x.x.x.|x.x.x.x.x.x.x.x.x.x.x.x.x.x.x at (0,0)
diff: 
delta: (0,3)=4  (0,5)=6  (0,7)=8  (0,11)=4  (0,13)=6  (0,15)=8  (0,19)=4  (0,21)=6  (0,23)=8  (0,27)=4  (2,1)=4  (2,3)=6  (2,5)=8  (2,9)=4  (2,11)=6  (2,13)=8  (2,17)=4  (2,19)=6  (2,21)=8  (2,25)=4  (2,27)=6  (4,1)=6  (4,3)=8  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,15)=4  (4,17)=6  (4,19)=8  (4,23)=4  (4,25)=6  (4,27)=8  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (6,1)=8  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,21)=4  (6,23)=6  (6,25)=8  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,19)=4  (8,21)=6  (8,23)=8  (8,27)=4  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,17)=4  (10,19)=6  (10,21)=8  (10,25)=4  (10,27)=6  (12,1)=6  (12,3)=8  (12,7)=4  (12,9)=6  (12,11)=8  (12,15)=4  (12,17)=6  (12,19)=8  (12,23)=4  (12,25)=6  (12,27)=8  (14,1)=8  (14,5)=4  (14,7)=6  (14,9)=8  (14,13)=4  (14,15)=6  (14,17)=8  (14,21)=4  (14,23)=6  (14,25)=8  (16,3)=4  (16,5)=6  (16,7)=8  (16,11)=4  (16,13)=6  (16,15)=8  (16,19)=4  (16,21)=6  (16,23)=0  (16,24)=0  (16,25)=0  (16,26)=0  (16,27)=4  (17,23)=0  (17,24)=0  (17,25)=0  (17,26)=0  (18,1)=4  (18,3)=6  (18,5)=8  (18,9)=4  (18,11)=6  (18,13)=8  (18,17)=4  (18,19)=6  (18,21)=8  (18,23)=0  (18,24)=0  (18,25)=0  (18,26)=0  (18,27)=6  (19,21)=0  (19,22)=0  (19,23)=0  (19,24)=0  (19,25)=0  (19,26)=0  (19,27)=0  (20,1)=6  (20,3)=8  (20,7)=4  (20,9)=6  (20,11)=8  (20,15)=4  (20,17)=6  (20,19)=8  (20,20)=0  (20,21)=0  (20,22)=0  (20,23)=0  (20,24)=0  (20,25)=0  (20,26)=0  (20,27)=0  (20,28)=1  (21,20)=0  (21,21)=0  (21,22)=0  (21,23)=0  (21,24)=0  (21,25)=0  (21,26)=0  (21,27)=0  (22,1)=8  (22,5)=4  (22,7)=6  (22,9)=8  (22,13)=4  (22,15)=6  (22,17)=8  (22,21)=0  (22,22)=0  (22,23)=0  (22,24)=0  (22,25)=0  (22,26)=0  (22,27)=0  (22,28)=1  (23,21)=0  (23,22)=0  (23,23)=0  (23,24)=0  (23,25)=0  (23,26)=0  (23,27)=0  (24,3)=4  (24,5)=6  (24,7)=8  (24,11)=4  (24,13)=6  (24,15)=8  (24,19)=4  (24,21)=6  (24,23)=8  (24,24)=0  (24,25)=0  (24,26)=0  (24,27)=0  (24,28)=1  (25,24)=0  (25,25)=0  (25,26)=0  (25,27)=0  (26,1)=4  (26,3)=6  (26,5)=8  (26,9)=4  (26,11)=6  (26,13)=8  (26,17)=4  (26,19)=6  (26,21)=8  (26,25)=4  (26,27)=6  (28,1)=6  (28,3)=8  (28,7)=4  (28,9)=6  (28,11)=8  (28,15)=4  (28,17)=6  (28,19)=8  (28,23)=4  (28,25)=6  (28,27)=8 
! 841 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color blue and layers
  _0: a rectangle with size (10,8) and color black and mask ...xxxx.|...xxxx.|...xxxx.|.xxxxxxx|xxxxxxxx|xxxxxxxx|.xxxxxxx|.xxxxxxx|....xxxx|....xxxx at (16,20)
diff: 
delta: (0,1)=2  (0,3)=4  (0,5)=6  (0,7)=8  (0,9)=2  (0,11)=4  (0,13)=6  (0,15)=8  (0,17)=2  (0,19)=4  (0,21)=6  (0,23)=8  (0,25)=2  (0,27)=4  (1,0)=2  (1,2)=2  (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (1,12)=2  (1,14)=2  (1,16)=2  (1,18)=2  (1,20)=2  (1,22)=2  (1,24)=2  (1,26)=2  (1,28)=2  (2,1)=4  (2,3)=6  (2,5)=8  (2,7)=2  (2,9)=4  (2,11)=6  (2,13)=8  (2,15)=2  (2,17)=4  (2,19)=6  (2,21)=8  (2,23)=2  (2,25)=4  (2,27)=6  (3,0)=2  (3,2)=2  (3,4)=2  (3,6)=2  (3,8)=2  (3,10)=2  (3,12)=2  (3,14)=2  (3,16)=2  (3,18)=2  (3,20)=2  (3,22)=2  (3,24)=2  (3,26)=2  (3,28)=2  (4,1)=6  (4,3)=8  (4,5)=2  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=0  (4,11)=0  (4,12)=0  (4,13)=2  (4,15)=4  (4,17)=6  (4,19)=8  (4,21)=2  (4,23)=4  (4,25)=6  (4,27)=8  (5,0)=2  (5,2)=2  (5,4)=2  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=0  (5,10)=0  (5,11)=0  (5,12)=0  (5,14)=2  (5,16)=2  (5,18)=2  (5,20)=2  (5,22)=2  (5,24)=2  (5,26)=2  (5,28)=2  (6,1)=8  (6,3)=2  (6,5)=4  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=0  (6,10)=0  (6,11)=0  (6,12)=0  (6,13)=4  (6,15)=6  (6,17)=8  (6,19)=2  (6,21)=4  (6,23)=6  (6,25)=8  (6,27)=2  (7,0)=2  (7,2)=2  (7,4)=2  (7,6)=0  (7,7)=0  (7,8)=0  (7,9)=0  (7,10)=0  (7,11)=0  (7,12)=0  (7,14)=2  (7,16)=2  (7,18)=2  (7,20)=2  (7,22)=2  (7,24)=2  (7,26)=2  (7,28)=2  (8,1)=2  (8,3)=4  (8,5)=6  (8,6)=0  (8,7)=0  (8,8)=0  (8,9)=0  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,15)=8  (8,17)=2  (8,19)=4  (8,21)=6  (8,23)=8  (8,25)=2  (8,27)=4  (9,0)=2  (9,2)=2  (9,4)=2  (9,6)=0  (9,7)=0  (9,8)=0  (9,9)=0  (9,10)=0  (9,11)=0  (9,12)=0  (9,14)=2  (9,16)=2  (9,18)=2  (9,20)=2  (9,22)=2  (9,24)=2  (9,26)=2  (9,28)=2  (10,1)=4  (10,3)=6  (10,5)=8  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,10)=0  (10,11)=0  (10,12)=0  (10,13)=8  (10,15)=2  (10,17)=4  (10,19)=6  (10,21)=8  (10,23)=2  (10,25)=4  (10,27)=6  (11,0)=2  (11,2)=2  (11,4)=2  (11,6)=2  (11,8)=2  (11,10)=2  (11,12)=2  (11,14)=2  (11,16)=2  (11,18)=2  (11,20)=2  (11,22)=2  (11,24)=2  (11,26)=2  (11,28)=2  (12,1)=6  (12,3)=8  (12,5)=2  (12,7)=4  (12,9)=6  (12,11)=8  (12,13)=2  (12,15)=4  (12,17)=6  (12,19)=8  (12,21)=2  (12,23)=4  (12,25)=6  (12,27)=8  (13,0)=2  (13,2)=2  (13,4)=2  (13,6)=2  (13,8)=2  (13,10)=2  (13,12)=2  (13,14)=2  (13,16)=2  (13,18)=2  (13,20)=2  (13,22)=2  (13,24)=2  (13,26)=2  (13,28)=2  (14,1)=8  (14,3)=2  (14,5)=4  (14,7)=6  (14,9)=8  (14,11)=2  (14,13)=4  (14,15)=6  (14,17)=8  (14,19)=2  (14,21)=4  (14,23)=6  (14,25)=8  (14,27)=2  (15,0)=2  (15,2)=2  (15,4)=2  (15,6)=2  (15,8)=2  (15,10)=2  (15,12)=2  (15,14)=2  (15,16)=2  (15,18)=2  (15,20)=2  (15,22)=2  (15,24)=2  (15,26)=2  (15,28)=2  (16,1)=2  (16,3)=4  (16,5)=6  (16,7)=8  (16,9)=2  (16,11)=4  (16,13)=6  (16,15)=8  (16,17)=2  (16,19)=4  (16,21)=6  (16,27)=4  (17,0)=2  (17,2)=2  (17,4)=2  (17,6)=2  (17,8)=2  (17,10)=2  (17,12)=2  (17,14)=2  (17,16)=2  (17,18)=2  (17,20)=2  (17,22)=2  (17,28)=2  (18,1)=4  (18,3)=6  (18,5)=8  (18,7)=2  (18,9)=4  (18,11)=6  (18,13)=8  (18,15)=2  (18,17)=4  (18,19)=6  (18,21)=8  (18,27)=6  (19,0)=2  (19,2)=2  (19,4)=2  (19,6)=2  (19,8)=2  (19,10)=2  (19,12)=2  (19,14)=2  (19,16)=2  (19,18)=2  (19,20)=2  (19,28)=2  (20,1)=6  (20,3)=8  (20,5)=2  (20,7)=4  (20,9)=6  (20,11)=8  (20,13)=2  (20,15)=4  (20,17)=6  (20,19)=8  (21,0)=2  (21,2)=2  (21,4)=2  (21,6)=2  (21,8)=2  (21,10)=2  (21,12)=2  (21,14)=2  (21,16)=2  (21,18)=2  (21,28)=2  (22,1)=8  (22,3)=2  (22,5)=4  (22,7)=6  (22,9)=8  (22,11)=2  (22,13)=4  (22,15)=6  (22,17)=8  (22,19)=2  (23,0)=2  (23,2)=2  (23,4)=2  (23,6)=2  (23,8)=2  (23,10)=2  (23,12)=2  (23,14)=2  (23,16)=2  (23,18)=2  (23,20)=2  (23,28)=2  (24,1)=2  (24,3)=4  (24,5)=6  (24,7)=8  (24,9)=2  (24,11)=4  (24,13)=6  (24,15)=8  (24,17)=2  (24,19)=4  (24,21)=6  (24,23)=8  (25,0)=2  (25,2)=2  (25,4)=2  (25,6)=2  (25,8)=2  (25,10)=2  (25,12)=2  (25,14)=2  (25,16)=2  (25,18)=2  (25,20)=2  (25,22)=2  (25,28)=2  (26,1)=4  (26,3)=6  (26,5)=8  (26,7)=2  (26,9)=4  (26,11)=6  (26,13)=8  (26,15)=2  (26,17)=4  (26,19)=6  (26,21)=8  (26,23)=2  (26,25)=4  (26,27)=6  (27,0)=2  (27,2)=2  (27,4)=2  (27,6)=2  (27,8)=2  (27,10)=2  (27,12)=2  (27,14)=2  (27,16)=2  (27,18)=2  (27,20)=2  (27,22)=2  (27,24)=2  (27,26)=2  (27,28)=2  (28,1)=6  (28,3)=8  (28,5)=2  (28,7)=4  (28,9)=6  (28,11)=8  (28,13)=2  (28,15)=4  (28,17)=6  (28,19)=8  (28,21)=2  (28,23)=4  (28,25)=6  (28,27)=8 
! 841 wrong pixels (generated / expected)

TRAIN 484b58aa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color blue and layers
  _0: a rectangle with size (23,24) and color red and mask .....................x..|.....................x.x|......................x.|..................xx.x..|....................xx..|.................x.x....|...............x..x.....|...............x.x......|................x.......|............xx.x........|..............xx........|...........x.x..........|.........x..x...........|.........x.x............|..........x.............|......xx.x..............|........xx..............|.....x.x................|...x..x.................|...x.x..................|....x...................|xx.x....................|..xx.................... at (6,5)
diff: 
delta: (0,0)=8  (0,2)=2  (0,3)=6  (0,5)=2  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,11)=2  (0,12)=5# (0,14)=2  (0,15)=9# (0,17)=2  (0,18)=8  (0,20)=2  (0,21)=6  (0,23)=2  (0,24)=2  (0,26)=2  (0,27)=3  (1,1)=8  (1,2)=2  (1,4)=5# (1,5)=9# (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=8  (1,11)=9# (1,13)=5# (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=9# (1,19)=8  (1,20)=2  (1,22)=5# (1,23)=9# (1,25)=2  (1,26)=2  (1,28)=8  (2,0)=5# (2,1)=3  (2,3)=8  (2,4)=2  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=8  (2,12)=8  (2,13)=9# (2,14)=0  (2,15)=0  (2,16)=0  (2,18)=5# (2,19)=3  (2,21)=8  (2,22)=2  (2,24)=2  (2,25)=6  (2,27)=5# (2,28)=8  (3,0)=5# (3,2)=2  (3,3)=9# (3,5)=2  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=2  (3,12)=2  (3,14)=0  (3,15)=0  (3,16)=0  (3,17)=2  (3,18)=5# (3,20)=2  (3,21)=9# (3,23)=2  (3,24)=8  (3,26)=2  (3,27)=6  (4,1)=5# (4,2)=2  (4,4)=2  (4,5)=9# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=5# (4,11)=9# (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=9# (4,19)=5# (4,20)=2  (4,22)=2  (4,23)=9# (4,25)=8  (4,26)=2  (4,28)=5# (5,0)=8  (5,1)=9# (5,3)=2  (5,4)=5# (5,6)=5# (5,7)=3  (5,9)=8  (5,10)=2  (5,12)=2  (5,13)=6  (5,14)=0  (5,15)=0  (5,16)=0  (5,18)=8  (5,19)=9# (5,21)=2  (5,22)=5# (5,24)=5# (5,25)=3  (5,27)=8  (5,28)=2  (6,0)=2  (6,2)=2  (6,3)=3  (6,5)=2  (6,6)=5# (6,8)=2  (6,9)=9# (6,11)=2  (6,12)=8  (6,14)=0  (6,15)=0  (6,16)=0  (6,17)=2  (6,18)=2  (6,20)=2  (6,21)=3  (6,23)=2  (6,24)=5# (6,27)=9# (7,1)=2  (7,2)=2  (7,4)=8  (7,5)=9# (7,7)=5# (7,8)=2  (7,10)=2  (7,11)=9# (7,13)=8  (7,14)=0  (7,15)=0  (7,16)=0  (7,17)=9# (7,19)=2  (7,20)=2  (7,22)=8  (7,23)=9# (7,25)=5# (8,0)=2  (8,1)=6  (8,3)=5# (8,4)=8  (8,6)=8  (8,7)=9# (8,9)=2  (8,10)=5# (8,12)=5# (8,13)=3  (8,15)=8  (8,16)=2  (8,18)=2  (8,19)=6  (8,21)=5# (8,22)=8  (8,24)=8  (8,25)=9# (8,28)=5# (9,0)=8  (9,2)=2  (9,3)=6  (9,5)=2  (9,6)=2  (9,8)=2  (9,9)=3  (9,11)=2  (9,12)=5# (9,14)=2  (9,15)=9# (9,17)=2  (9,18)=8  (9,20)=2  (9,21)=6  (9,27)=3  (10,1)=8  (10,2)=2  (10,4)=5# (10,5)=9# (10,7)=2  (10,8)=2  (10,10)=8  (10,11)=9# (10,13)=5# (10,14)=2  (10,16)=2  (10,17)=9# (10,19)=8  (10,20)=2  (10,22)=5# (10,23)=9# (10,28)=8  (11,0)=5# (11,1)=3  (11,3)=8  (11,4)=2  (11,6)=2  (11,7)=6  (11,9)=5# (11,10)=8  (11,12)=8  (11,13)=9# (11,15)=2  (11,16)=5# (11,18)=5# (11,19)=3  (11,21)=8  (11,25)=6  (11,27)=5# (11,28)=8  (12,0)=5# (12,2)=0  (12,3)=0  (12,5)=2  (12,6)=8  (12,8)=2  (12,9)=6  (12,11)=2  (12,12)=2  (12,13)=0  (12,14)=0  (12,15)=0  (12,17)=2  (12,18)=5# (12,21)=9# (12,24)=8  (12,26)=2  (12,27)=6  (13,1)=5# (13,2)=0  (13,3)=0  (13,4)=2  (13,5)=9# (13,7)=8  (13,8)=2  (13,10)=5# (13,11)=9# (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=8  (13,17)=9# (13,19)=5# (13,23)=9# (13,25)=8  (13,26)=2  (13,28)=5# (14,0)=8  (14,1)=9# (14,2)=0  (14,3)=0  (14,4)=5# (14,6)=5# (14,7)=3  (14,9)=8  (14,10)=2  (14,12)=2  (14,13)=6  (14,15)=5# (14,16)=8  (14,18)=8  (14,19)=9# (14,22)=5# (14,24)=5# (14,25)=3  (14,27)=8  (14,28)=2  (15,0)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=2  (15,6)=5# (15,8)=2  (15,9)=9# (15,11)=2  (15,12)=8  (15,14)=2  (15,15)=6  (15,21)=3  (15,23)=2  (15,24)=5# (15,26)=2  (15,27)=9# (16,1)=2  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=9# (16,7)=5# (16,8)=2  (16,10)=2  (16,11)=9# (16,13)=8  (16,14)=2  (16,16)=5# (16,17)=9# (16,22)=8  (16,23)=9# (16,25)=5# (16,26)=2  (16,28)=2  (17,0)=2  (17,1)=6  (17,3)=0  (17,4)=0  (17,6)=8  (17,7)=9# (17,9)=2  (17,10)=5# (17,12)=5# (17,13)=3  (17,15)=8  (17,19)=6  (17,21)=5# (17,22)=8  (17,24)=8  (17,25)=9# (17,27)=2  (17,28)=5# (18,0)=8  (18,2)=2  (18,3)=0  (18,4)=0  (18,5)=2  (18,6)=2  (18,8)=2  (18,9)=3  (18,11)=2  (18,12)=5# (18,15)=9# (18,18)=8  (18,20)=2  (18,21)=6  (18,23)=2  (18,24)=2  (18,26)=2  (18,27)=3  (19,1)=8  (19,2)=2  (19,4)=5# (19,5)=9# (19,7)=2  (19,8)=2  (19,10)=8  (19,11)=9# (19,13)=5# (19,17)=9# (19,19)=8  (19,20)=2  (19,22)=5# (19,23)=9# (19,25)=2  (19,26)=2  (19,28)=8  (20,0)=5# (20,1)=3  (20,3)=8  (20,4)=2  (20,6)=2  (20,7)=6  (20,9)=5# (20,10)=8  (20,12)=8  (20,13)=9# (20,16)=5# (20,18)=5# (20,19)=3  (20,21)=8  (20,22)=2  (20,24)=2  (20,25)=6  (20,27)=5# (20,28)=8  (21,0)=5# (21,2)=2  (21,3)=9# (21,5)=2  (21,6)=8  (21,8)=2  (21,9)=6  (21,15)=3  (21,17)=2  (21,18)=5# (21,20)=2  (21,21)=9# (21,23)=2  (21,24)=8  (21,26)=2  (21,27)=6  (22,1)=5# (22,2)=2  (22,4)=2  (22,5)=9# (22,7)=8  (22,8)=2  (22,10)=5# (22,11)=9# (22,16)=8  (22,17)=9# (22,19)=5# (22,20)=2  (22,22)=2  (22,23)=9# (22,25)=8  (22,26)=2  (22,28)=5# (23,0)=8  (23,1)=9# (23,3)=2  (23,4)=5# (23,6)=5# (23,7)=3  (23,9)=8  (23,13)=6  (23,15)=5# (23,16)=8  (23,18)=8  (23,19)=9# (23,21)=2  (23,22)=5# (23,24)=5# (23,25)=3  (23,27)=8  (23,28)=2  (24,0)=2  (24,2)=2  (24,3)=3  (24,5)=2  (24,6)=5# (24,9)=9# (24,12)=8  (24,14)=2  (24,15)=6  (24,17)=2  (24,18)=2  (24,20)=2  (24,21)=3  (24,23)=2  (24,24)=5# (24,26)=2  (24,27)=9# (25,1)=2  (25,2)=2  (25,4)=8  (25,5)=9# (25,7)=5# (25,11)=9# (25,13)=8  (25,14)=2  (25,16)=5# (25,17)=9# (25,19)=2  (25,20)=2  (25,22)=8  (25,23)=9# (25,25)=5# (25,26)=2  (25,28)=2  (26,0)=2  (26,1)=6  (26,3)=5# (26,4)=8  (26,6)=8  (26,7)=9# (26,10)=5# (26,12)=5# (26,13)=3  (26,15)=8  (26,16)=2  (26,18)=2  (26,19)=6  (26,21)=5# (26,22)=8  (26,24)=8  (26,25)=9# (26,27)=2  (26,28)=5# (27,0)=8  (27,2)=2  (27,3)=6  (27,9)=3  (27,11)=2  (27,12)=5# (27,14)=2  (27,15)=9# (27,17)=2  (27,18)=8  (27,20)=2  (27,21)=6  (27,23)=2  (27,24)=2  (27,26)=2  (27,27)=3  (28,1)=8  (28,2)=2  (28,4)=5# (28,5)=9# (28,10)=8  (28,11)=9# (28,13)=5# (28,14)=2  (28,16)=2  (28,17)=9# (28,19)=8  (28,20)=2  (28,22)=5# (28,23)=9# (28,25)=2  (28,26)=2  (28,28)=8 
! 841 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (29,29) and color blue and layers
  _0: a rectangle with size (7,3) and color black and mask Full at (1,14)
diff: 
delta: (0,0)=8  (0,2)=2  (0,3)=6  (0,5)=2  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,11)=2  (0,12)=5# (0,14)=2  (0,15)=9# (0,17)=2  (0,18)=8  (0,20)=2  (0,21)=6  (0,23)=2  (0,24)=2  (0,26)=2  (0,27)=3  (1,1)=8  (1,2)=2  (1,4)=5# (1,5)=9# (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=8  (1,11)=9# (1,13)=5# (1,17)=9# (1,19)=8  (1,20)=2  (1,22)=5# (1,23)=9# (1,25)=2  (1,26)=2  (1,28)=8  (2,0)=5# (2,1)=3  (2,3)=8  (2,4)=2  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=8  (2,12)=8  (2,13)=9# (2,18)=5# (2,19)=3  (2,21)=8  (2,22)=2  (2,24)=2  (2,25)=6  (2,27)=5# (2,28)=8  (3,0)=5# (3,2)=2  (3,3)=9# (3,5)=2  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=2  (3,12)=2  (3,17)=2  (3,18)=5# (3,20)=2  (3,21)=9# (3,23)=2  (3,24)=8  (3,26)=2  (3,27)=6  (4,1)=5# (4,2)=2  (4,4)=2  (4,5)=9# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=5# (4,11)=9# (4,13)=2  (4,17)=9# (4,19)=5# (4,20)=2  (4,22)=2  (4,23)=9# (4,25)=8  (4,26)=2  (4,28)=5# (5,0)=8  (5,1)=9# (5,3)=2  (5,4)=5# (5,6)=5# (5,7)=3  (5,9)=8  (5,10)=2  (5,12)=2  (5,13)=6  (5,18)=8  (5,19)=9# (5,21)=2  (5,22)=5# (5,24)=5# (5,25)=3  (5,27)=8  (5,28)=2  (6,0)=2  (6,2)=2  (6,3)=3  (6,5)=2  (6,6)=5# (6,8)=2  (6,9)=9# (6,11)=2  (6,12)=8  (6,17)=2  (6,18)=2  (6,20)=2  (6,21)=3  (6,23)=2  (6,24)=5# (6,26)=2  (6,27)=9# (7,1)=2  (7,2)=2  (7,4)=8  (7,5)=9# (7,7)=5# (7,8)=2  (7,10)=2  (7,11)=9# (7,13)=8  (7,17)=9# (7,19)=2  (7,20)=2  (7,22)=8  (7,23)=9# (7,25)=5# (7,26)=2  (7,28)=2  (8,0)=2  (8,1)=6  (8,3)=5# (8,4)=8  (8,6)=8  (8,7)=9# (8,9)=2  (8,10)=5# (8,12)=5# (8,13)=3  (8,15)=8  (8,16)=2  (8,18)=2  (8,19)=6  (8,21)=5# (8,22)=8  (8,24)=8  (8,25)=9# (8,27)=2  (8,28)=5# (9,0)=8  (9,2)=2  (9,3)=6  (9,5)=2  (9,6)=2  (9,8)=2  (9,9)=3  (9,11)=2  (9,12)=5# (9,14)=2  (9,15)=9# (9,17)=2  (9,18)=8  (9,20)=2  (9,21)=6  (9,23)=2  (9,24)=2  (9,26)=2  (9,27)=3  (10,1)=8  (10,2)=2  (10,4)=5# (10,5)=9# (10,7)=2  (10,8)=2  (10,10)=8  (10,11)=9# (10,13)=5# (10,14)=2  (10,16)=2  (10,17)=9# (10,19)=8  (10,20)=2  (10,22)=5# (10,23)=9# (10,25)=2  (10,26)=2  (10,28)=8  (11,0)=5# (11,1)=3  (11,3)=8  (11,4)=2  (11,6)=2  (11,7)=6  (11,9)=5# (11,10)=8  (11,12)=8  (11,13)=9# (11,15)=2  (11,16)=5# (11,18)=5# (11,19)=3  (11,21)=8  (11,22)=2  (11,24)=2  (11,25)=6  (11,27)=5# (11,28)=8  (12,0)=5# (12,2)=0  (12,3)=0  (12,5)=2  (12,6)=8  (12,8)=2  (12,9)=6  (12,11)=2  (12,12)=2  (12,13)=0  (12,14)=0  (12,15)=0  (12,17)=2  (12,18)=5# (12,20)=2  (12,21)=9# (12,23)=2  (12,24)=8  (12,26)=2  (12,27)=6  (13,1)=5# (13,2)=0  (13,3)=0  (13,4)=2  (13,5)=9# (13,7)=8  (13,8)=2  (13,10)=5# (13,11)=9# (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=8  (13,17)=9# (13,19)=5# (13,20)=2  (13,22)=2  (13,23)=9# (13,25)=8  (13,26)=2  (13,28)=5# (14,0)=8  (14,1)=9# (14,2)=0  (14,3)=0  (14,4)=5# (14,6)=5# (14,7)=3  (14,9)=8  (14,10)=2  (14,12)=2  (14,13)=6  (14,15)=5# (14,16)=8  (14,18)=8  (14,19)=9# (14,21)=2  (14,22)=5# (14,24)=5# (14,25)=3  (14,27)=8  (14,28)=2  (15,0)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=2  (15,6)=5# (15,8)=2  (15,9)=9# (15,11)=2  (15,12)=8  (15,14)=2  (15,15)=6  (15,17)=2  (15,18)=2  (15,20)=2  (15,21)=3  (15,23)=2  (15,24)=5# (15,26)=2  (15,27)=9# (16,1)=2  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=9# (16,7)=5# (16,8)=2  (16,10)=2  (16,11)=9# (16,13)=8  (16,14)=2  (16,16)=5# (16,17)=9# (16,19)=2  (16,20)=2  (16,22)=8  (16,23)=9# (16,25)=5# (16,26)=2  (16,28)=2  (17,0)=2  (17,1)=6  (17,3)=0  (17,4)=0  (17,6)=8  (17,7)=9# (17,9)=2  (17,10)=5# (17,12)=5# (17,13)=3  (17,15)=8  (17,16)=2  (17,18)=2  (17,19)=6  (17,21)=5# (17,22)=8  (17,24)=8  (17,25)=9# (17,27)=2  (17,28)=5# (18,0)=8  (18,2)=2  (18,3)=0  (18,4)=0  (18,5)=2  (18,6)=2  (18,8)=2  (18,9)=3  (18,11)=2  (18,12)=5# (18,14)=2  (18,15)=9# (18,17)=2  (18,18)=8  (18,20)=2  (18,21)=6  (18,23)=2  (18,24)=2  (18,26)=2  (18,27)=3  (19,1)=8  (19,2)=2  (19,4)=5# (19,5)=9# (19,7)=2  (19,8)=2  (19,10)=8  (19,11)=9# (19,13)=5# (19,14)=2  (19,16)=2  (19,17)=9# (19,19)=8  (19,20)=2  (19,22)=5# (19,23)=9# (19,25)=2  (19,26)=2  (19,28)=8  (20,0)=5# (20,1)=3  (20,3)=8  (20,4)=2  (20,6)=2  (20,7)=6  (20,9)=5# (20,10)=8  (20,12)=8  (20,13)=9# (20,15)=2  (20,16)=5# (20,18)=5# (20,19)=3  (20,21)=8  (20,22)=2  (20,24)=2  (20,25)=6  (20,27)=5# (20,28)=8  (21,0)=5# (21,2)=2  (21,3)=9# (21,5)=2  (21,6)=8  (21,8)=2  (21,9)=6  (21,11)=2  (21,12)=2  (21,14)=2  (21,15)=3  (21,17)=2  (21,18)=5# (21,20)=2  (21,21)=9# (21,23)=2  (21,24)=8  (21,26)=2  (21,27)=6  (22,1)=5# (22,2)=2  (22,4)=2  (22,5)=9# (22,7)=8  (22,8)=2  (22,10)=5# (22,11)=9# (22,13)=2  (22,14)=2  (22,16)=8  (22,17)=9# (22,19)=5# (22,20)=2  (22,22)=2  (22,23)=9# (22,25)=8  (22,26)=2  (22,28)=5# (23,0)=8  (23,1)=9# (23,3)=2  (23,4)=5# (23,6)=5# (23,7)=3  (23,9)=8  (23,10)=2  (23,12)=2  (23,13)=6  (23,15)=5# (23,16)=8  (23,18)=8  (23,19)=9# (23,21)=2  (23,22)=5# (23,24)=5# (23,25)=3  (23,27)=8  (23,28)=2  (24,0)=2  (24,2)=2  (24,3)=3  (24,5)=2  (24,6)=5# (24,8)=2  (24,9)=9# (24,11)=2  (24,12)=8  (24,14)=2  (24,15)=6  (24,17)=2  (24,18)=2  (24,20)=2  (24,21)=3  (24,23)=2  (24,24)=5# (24,26)=2  (24,27)=9# (25,1)=2  (25,2)=2  (25,4)=8  (25,5)=9# (25,7)=5# (25,8)=2  (25,10)=2  (25,11)=9# (25,13)=8  (25,14)=2  (25,16)=5# (25,17)=9# (25,19)=2  (25,20)=2  (25,22)=8  (25,23)=9# (25,25)=5# (25,26)=2  (25,28)=2  (26,0)=2  (26,1)=6  (26,3)=5# (26,4)=8  (26,6)=8  (26,7)=9# (26,9)=2  (26,10)=5# (26,12)=5# (26,13)=3  (26,15)=8  (26,16)=2  (26,18)=2  (26,19)=6  (26,21)=5# (26,22)=8  (26,24)=8  (26,25)=9# (26,27)=2  (26,28)=5# (27,0)=8  (27,2)=2  (27,3)=6  (27,5)=2  (27,6)=2  (27,8)=2  (27,9)=3  (27,11)=2  (27,12)=5# (27,14)=2  (27,15)=9# (27,17)=2  (27,18)=8  (27,20)=2  (27,21)=6  (27,23)=2  (27,24)=2  (27,26)=2  (27,27)=3  (28,1)=8  (28,2)=2  (28,4)=5# (28,5)=9# (28,7)=2  (28,8)=2  (28,10)=8  (28,11)=9# (28,13)=5# (28,14)=2  (28,16)=2  (28,17)=9# (28,19)=8  (28,20)=2  (28,22)=5# (28,23)=9# (28,25)=2  (28,26)=2  (28,28)=8 
! 841 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (29,29) and color blue and layers
  _0: a rectangle with size (14,13) and color red and mask ..........x..|..........x.x|...........x.|.......xx.x..|.........xx..|......x.x....|....x..x.....|....x.x......|.....x.......|.xx.x........|...xx........|x.x..........|.x...........|x............ at (15,16)
diff: 
delta: (0,0)=8  (0,2)=2  (0,3)=6  (0,5)=2  (0,6)=0  (0,7)=0  (0,8)=0  (0,9)=0  (0,11)=2  (0,12)=5# (0,14)=2  (0,15)=9# (0,17)=2  (0,18)=8  (0,20)=2  (0,21)=6  (0,23)=2  (0,24)=2  (0,26)=2  (0,27)=3  (1,1)=8  (1,2)=2  (1,4)=5# (1,5)=9# (1,6)=0  (1,7)=0  (1,8)=0  (1,9)=0  (1,10)=8  (1,11)=9# (1,13)=5# (1,14)=0  (1,15)=0  (1,16)=0  (1,17)=9# (1,19)=8  (1,20)=2  (1,22)=5# (1,23)=9# (1,25)=2  (1,26)=2  (1,28)=8  (2,0)=5# (2,1)=3  (2,3)=8  (2,4)=2  (2,6)=0  (2,7)=0  (2,8)=0  (2,9)=0  (2,10)=8  (2,12)=8  (2,13)=9# (2,14)=0  (2,15)=0  (2,16)=0  (2,18)=5# (2,19)=3  (2,21)=8  (2,22)=2  (2,24)=2  (2,25)=6  (2,27)=5# (2,28)=8  (3,0)=5# (3,2)=2  (3,3)=9# (3,5)=2  (3,6)=0  (3,7)=0  (3,8)=0  (3,9)=0  (3,11)=2  (3,12)=2  (3,14)=0  (3,15)=0  (3,16)=0  (3,17)=2  (3,18)=5# (3,20)=2  (3,21)=9# (3,23)=2  (3,24)=8  (3,26)=2  (3,27)=6  (4,1)=5# (4,2)=2  (4,4)=2  (4,5)=9# (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=0  (4,10)=5# (4,11)=9# (4,13)=2  (4,14)=0  (4,15)=0  (4,16)=0  (4,17)=9# (4,19)=5# (4,20)=2  (4,22)=2  (4,23)=9# (4,25)=8  (4,26)=2  (4,28)=5# (5,0)=8  (5,1)=9# (5,3)=2  (5,4)=5# (5,6)=5# (5,7)=3  (5,9)=8  (5,10)=2  (5,12)=2  (5,13)=6  (5,14)=0  (5,15)=0  (5,16)=0  (5,18)=8  (5,19)=9# (5,21)=2  (5,22)=5# (5,24)=5# (5,25)=3  (5,27)=8  (5,28)=2  (6,0)=2  (6,2)=2  (6,3)=3  (6,5)=2  (6,6)=5# (6,8)=2  (6,9)=9# (6,11)=2  (6,12)=8  (6,14)=0  (6,15)=0  (6,16)=0  (6,17)=2  (6,18)=2  (6,20)=2  (6,21)=3  (6,23)=2  (6,24)=5# (6,26)=2  (6,27)=9# (7,1)=2  (7,2)=2  (7,4)=8  (7,5)=9# (7,7)=5# (7,8)=2  (7,10)=2  (7,11)=9# (7,13)=8  (7,14)=0  (7,15)=0  (7,16)=0  (7,17)=9# (7,19)=2  (7,20)=2  (7,22)=8  (7,23)=9# (7,25)=5# (7,26)=2  (7,28)=2  (8,0)=2  (8,1)=6  (8,3)=5# (8,4)=8  (8,6)=8  (8,7)=9# (8,9)=2  (8,10)=5# (8,12)=5# (8,13)=3  (8,15)=8  (8,16)=2  (8,18)=2  (8,19)=6  (8,21)=5# (8,22)=8  (8,24)=8  (8,25)=9# (8,27)=2  (8,28)=5# (9,0)=8  (9,2)=2  (9,3)=6  (9,5)=2  (9,6)=2  (9,8)=2  (9,9)=3  (9,11)=2  (9,12)=5# (9,14)=2  (9,15)=9# (9,17)=2  (9,18)=8  (9,20)=2  (9,21)=6  (9,23)=2  (9,24)=2  (9,26)=2  (9,27)=3  (10,1)=8  (10,2)=2  (10,4)=5# (10,5)=9# (10,7)=2  (10,8)=2  (10,10)=8  (10,11)=9# (10,13)=5# (10,14)=2  (10,16)=2  (10,17)=9# (10,19)=8  (10,20)=2  (10,22)=5# (10,23)=9# (10,25)=2  (10,26)=2  (10,28)=8  (11,0)=5# (11,1)=3  (11,3)=8  (11,4)=2  (11,6)=2  (11,7)=6  (11,9)=5# (11,10)=8  (11,12)=8  (11,13)=9# (11,15)=2  (11,16)=5# (11,18)=5# (11,19)=3  (11,21)=8  (11,22)=2  (11,24)=2  (11,25)=6  (11,27)=5# (11,28)=8  (12,0)=5# (12,2)=0  (12,3)=0  (12,5)=2  (12,6)=8  (12,8)=2  (12,9)=6  (12,11)=2  (12,12)=2  (12,13)=0  (12,14)=0  (12,15)=0  (12,17)=2  (12,18)=5# (12,20)=2  (12,21)=9# (12,23)=2  (12,24)=8  (12,26)=2  (12,27)=6  (13,1)=5# (13,2)=0  (13,3)=0  (13,4)=2  (13,5)=9# (13,7)=8  (13,8)=2  (13,10)=5# (13,11)=9# (13,13)=0  (13,14)=0  (13,15)=0  (13,16)=8  (13,17)=9# (13,19)=5# (13,20)=2  (13,22)=2  (13,23)=9# (13,25)=8  (13,26)=2  (13,28)=5# (14,0)=8  (14,1)=9# (14,2)=0  (14,3)=0  (14,4)=5# (14,6)=5# (14,7)=3  (14,9)=8  (14,10)=2  (14,12)=2  (14,13)=6  (14,15)=5# (14,16)=8  (14,18)=8  (14,19)=9# (14,21)=2  (14,22)=5# (14,24)=5# (14,25)=3  (14,27)=8  (14,28)=2  (15,0)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=2  (15,6)=5# (15,8)=2  (15,9)=9# (15,11)=2  (15,12)=8  (15,14)=2  (15,15)=6  (15,17)=2  (15,18)=2  (15,20)=2  (15,21)=3  (15,23)=2  (15,24)=5# (15,27)=9# (16,1)=2  (16,2)=0  (16,3)=0  (16,4)=0  (16,5)=9# (16,7)=5# (16,8)=2  (16,10)=2  (16,11)=9# (16,13)=8  (16,14)=2  (16,16)=5# (16,17)=9# (16,19)=2  (16,20)=2  (16,22)=8  (16,23)=9# (16,25)=5# (17,0)=2  (17,1)=6  (17,3)=0  (17,4)=0  (17,6)=8  (17,7)=9# (17,9)=2  (17,10)=5# (17,12)=5# (17,13)=3  (17,15)=8  (17,16)=2  (17,18)=2  (17,19)=6  (17,21)=5# (17,22)=8  (17,24)=8  (17,25)=9# (17,28)=5# (18,0)=8  (18,2)=2  (18,3)=0  (18,4)=0  (18,5)=2  (18,6)=2  (18,8)=2  (18,9)=3  (18,11)=2  (18,12)=5# (18,14)=2  (18,15)=9# (18,17)=2  (18,18)=8  (18,20)=2  (18,21)=6  (18,27)=3  (19,1)=8  (19,2)=2  (19,4)=5# (19,5)=9# (19,7)=2  (19,8)=2  (19,10)=8  (19,11)=9# (19,13)=5# (19,14)=2  (19,16)=2  (19,17)=9# (19,19)=8  (19,20)=2  (19,22)=5# (19,23)=9# (19,28)=8  (20,0)=5# (20,1)=3  (20,3)=8  (20,4)=2  (20,6)=2  (20,7)=6  (20,9)=5# (20,10)=8  (20,12)=8  (20,13)=9# (20,15)=2  (20,16)=5# (20,18)=5# (20,19)=3  (20,21)=8  (20,25)=6  (20,27)=5# (20,28)=8  (21,0)=5# (21,2)=2  (21,3)=9# (21,5)=2  (21,6)=8  (21,8)=2  (21,9)=6  (21,11)=2  (21,12)=2  (21,14)=2  (21,15)=3  (21,17)=2  (21,18)=5# (21,21)=9# (21,24)=8  (21,26)=2  (21,27)=6  (22,1)=5# (22,2)=2  (22,4)=2  (22,5)=9# (22,7)=8  (22,8)=2  (22,10)=5# (22,11)=9# (22,13)=2  (22,14)=2  (22,16)=8  (22,17)=9# (22,19)=5# (22,23)=9# (22,25)=8  (22,26)=2  (22,28)=5# (23,0)=8  (23,1)=9# (23,3)=2  (23,4)=5# (23,6)=5# (23,7)=3  (23,9)=8  (23,10)=2  (23,12)=2  (23,13)=6  (23,15)=5# (23,16)=8  (23,18)=8  (23,19)=9# (23,22)=5# (23,24)=5# (23,25)=3  (23,27)=8  (23,28)=2  (24,0)=2  (24,2)=2  (24,3)=3  (24,5)=2  (24,6)=5# (24,8)=2  (24,9)=9# (24,11)=2  (24,12)=8  (24,14)=2  (24,15)=6  (24,21)=3  (24,23)=2  (24,24)=5# (24,26)=2  (24,27)=9# (25,1)=2  (25,2)=2  (25,4)=8  (25,5)=9# (25,7)=5# (25,8)=2  (25,10)=2  (25,11)=9# (25,13)=8  (25,14)=2  (25,16)=5# (25,17)=9# (25,22)=8  (25,23)=9# (25,25)=5# (25,26)=2  (25,28)=2  (26,0)=2  (26,1)=6  (26,3)=5# (26,4)=8  (26,6)=8  (26,7)=9# (26,9)=2  (26,10)=5# (26,12)=5# (26,13)=3  (26,15)=8  (26,19)=6  (26,21)=5# (26,22)=8  (26,24)=8  (26,25)=9# (26,27)=2  (26,28)=5# (27,0)=8  (27,2)=2  (27,3)=6  (27,5)=2  (27,6)=2  (27,8)=2  (27,9)=3  (27,11)=2  (27,12)=5# (27,14)=2  (27,15)=9# (27,18)=8  (27,20)=2  (27,21)=6  (27,23)=2  (27,24)=2  (27,26)=2  (27,27)=3  (28,1)=8  (28,2)=2  (28,4)=5# (28,5)=9# (28,7)=2  (28,8)=2  (28,10)=8  (28,11)=9# (28,13)=5# (28,14)=2  (28,17)=9# (28,19)=8  (28,20)=2  (28,22)=5# (28,23)=9# (28,25)=2  (28,26)=2  (28,28)=8 
! 841 wrong pixels (generated / expected)

TEST 484b58aa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.0 sec (20.0 sec/task)
bits-train-error = 358014.8 bits (358014.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-290] Checking task 48d8fb45.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10858.0 = 10873.6
DL output with Mo: L = 15.6 + 3082.9 = 3098.5
DL input+output M: L = 31.2 + 13940.8 = 13972.0

# learning a model for train pairs
2.000	
1.564	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.295	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.745	OUT DEF: ^.layer_0.shape=^.layer_01.shape
0.620	OUT DEF: ^.size=^.layer_0.shape.size
0.543	OUT DEF: ^.layer_0.pos='(0,0)
0.470	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.446	OUT DEF: ^.color=black
0.439	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 112.4 + 4517.2 = 4629.6
DL output with Mo: L = 40.3 + 0.0 = 40.3
DL input+output M: L = 152.7 + 4517.2 = 4669.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.xx at (7,5)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (3,2)
  _011: a rectangle with size (3,3) and color blue and mask .xx|xx.|.x. at (1,7)
diff: 
delta: (2,3)=5#
   (178.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.xx at (7,5)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xxx|.xx at (3,2)
  _011: a rectangle with size (3,3) and color blue and mask .xx|xx.|.x. at (1,7)
diff: 
delta: (2,3)=5#
correct output grid

TRAIN 48d8fb45.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|.xx at (3,1)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (2,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,7)
diff: 
delta:
   (136.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|x.x|.xx at (3,1)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|..x|.x. at (2,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,7)
diff: 
delta:
correct output grid

TRAIN 48d8fb45.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x.x|.x. at (2,1)
  _01: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (5,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,7)
diff: 
delta:
   (136.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|x.x|.x. at (2,1)
  _01: a rectangle with size (3,3) and color red and mask .xx|xx.|.x. at (5,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (4,7)
diff: 
delta:
correct output grid

TRAIN 48d8fb45.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|xxx|.xx at (6,5)
  _01: a rectangle with size (3,3) and color green and mask .x.|xx.|.xx at (1,5)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (4,1)
diff: 
delta: (0,6)=5#
correct output grid

TEST 48d8fb45.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-289] Checking task 4938f0c2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14500.9 = 14516.5
DL output with Mo: L = 15.6 + 27286.8 = 27302.4
DL input+output M: L = 31.2 + 41787.7 = 41819.0

# learning a model for train pairs
2.000	
1.718	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.515	OUT OBJECT at ^.layer_0: ^.layer_0
1.354	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.205	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.056	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.905	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT OBJECT at ^.layer_010: ^.layer_01
0.758	OUT DEF: ^.size=^.size
0.743	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size
0.728	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size
0.715	OUT DEF: ^.layer_0111.pos=^.layer_01.pos + ^.layer_01.shape.size
0.704	IN  DEF: ^.layer_0.shape.color=red
0.697	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j
0.691	OUT DEF: ^.layer_01.shape.color=red
0.685	OUT DEF: ^.layer_011.shape.color=red
0.679	OUT DEF: ^.layer_01.pos.i=bottom(^.layer_0) + 3
0.674	IN  DEF: ^.color=black
0.671	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_0.shape.size and color red and mask ? at (bottom(^.layer_0) + 3,^.layer_0.pos.j)
  _011: a rectangle with size ^.layer_0.shape.size and color red and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_01.pos + ^.layer_01.shape.size
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 82.7 + 7752.5 = 7835.2
DL output with Mo: L = 176.5 + 3406.8 = 3583.2
DL input+output M: L = 259.1 + 11159.3 = 11418.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (7,9)
diff: 
delta:
   (108.8 bits)
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _010: a rectangle with size (2,2) and color green and mask Full (and Border) at (7,9)
  _01: a rectangle with size (4,4) and color red and mask xxxx|x..x|x..x|x..x at (9,5)
  _011: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,11)
  _0111: a rectangle with size (4,4) and color red and mask xxxx|x..x|x..x|x..x at (9,11)
diff: 
delta:
   (99.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (7,9)
diff: 
delta:
! 43 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (7,9)
  _01: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
diff:   ^.layer_0.shape.color
delta:
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,30) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (6,5)
  _01: a rectangle with size (4,4) and color red and mask x..x|x..x|x..x|xxxx at (3,5)
diff: 
delta: (7,9)=3  (7,10)=3  (8,9)=3  (8,10)=3 
! 34 wrong pixels (generated / expected)

TRAIN 4938f0c2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,4)
diff: 
delta:
   (89.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _010: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,4)
  _01: a rectangle with size (3,3) and color red and mask .xx|x.x|xx. at (5,1)
  _011: a rectangle with size (3,3) and color red and mask .xx|x.x|xx. at (0,6)
  _0111: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (5,6)
diff: 
delta:
   (72.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,4)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,4)
  _01: a rectangle with size (3,3) and color red and mask xx.|x.x|.xx at (0,1)
diff:   ^.layer_0.shape.color
delta:
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,4)
diff: 
delta: (0,3)=0  (1,2)=0  (2,1)=0 
! 22 wrong pixels (generated / expected)

TRAIN 4938f0c2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
  _01: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
diff: 
delta: (1,4)=2  (1,7)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
   (577.1 bits)
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
  _010: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask xxx|..x|..x at (6,7)
  _011: a rectangle with size (3,3) and color red and mask xxx|x..|x.. at (6,2)
  _0111: a rectangle with size (2,2) and color green and mask Full (and Border) at (4,5)
diff: 
delta: (1,4)=2  (1,7)=2  (8,4)=2  (8,7)=2 
   (168.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
diff: 
delta: (1,4)=2  (1,7)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
  _01: a rectangle with size (3,3) and color red and mask xxx|x..|x.. at (6,2)
diff: 
delta: (1,4)=2  (1,7)=2  (1,9)=2  (2,9)=2  (3,7)=2  (3,8)=2  (3,9)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,7)=2  (6,8)=2  (6,9)=2  (7,9)=2  (8,4)=2  (8,7)=2  (8,9)=2 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|..x|xxx at (1,7)
  _01: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (1,2)
diff: 
delta: (1,4)=2  (1,7)=2  (4,5)=3  (4,6)=3  (5,5)=3  (5,6)=3  (6,2)=2  (6,3)=2  (6,4)=2  (6,7)=2  (6,8)=2  (6,9)=2  (7,2)=2  (7,9)=2  (8,2)=2  (8,4)=2  (8,7)=2  (8,9)=2 
! 22 wrong pixels (generated / expected)

TRAIN 4938f0c2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,14) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|.x..|..x.|..xx at (2,2)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (6,6)
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,14) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (6,6)
  _01: a rectangle with size (4,4) and color red and mask xxxx|.x..|..x.|..xx at (2,2)
diff:   ^.layer_0.shape.color
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,14) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (6,6)
diff: 
delta: (3,3)=2  (4,4)=2  (5,4)=2  (5,5)=2 
! 33 wrong pixels (generated / expected)

TEST 4938f0c2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.6 sec (18.6 sec/task)
bits-train-error = 3406.8 bits (3406.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-288] Checking task 496994bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5002.8 = 5018.5
DL output with Mo: L = 15.6 + 9514.2 = 9529.8
DL input+output M: L = 31.2 + 14517.0 = 14548.3

# learning a model for train pairs
2.000	
1.604	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.989	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.781	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.649	OUT OBJECT at ^.layer_00: ^.layer_0
0.510	OUT OBJECT at ^.layer_011: ^.layer_01
0.473	OUT DEF: ^.size=^.size
0.448	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.426	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.404	IN  DEF: ^.layer_0.shape.color=red
0.390	IN  DEF: ^.layer_0.shape.mask=Full
0.377	IN  DEF: ^.layer_01.shape.mask=Full
0.367	IN  DEF: ^.color=black
0.357	OUT DEF: ^.layer_0.pos.i=^.size.i - 2
0.348	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.339	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.332	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.325	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.320	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at (^.size.i - 2,^.layer_0.pos.j)
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at (?,^.layer_01.pos.j)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 82.7 + 1295.6 = 1378.2
DL output with Mo: L = 95.1 + 338.6 = 433.7
DL input+output M: L = 177.7 + 1634.2 = 1811.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
   (62.8 bits)
data: a background with size (10,3) and color black and layers
  _00: a rectangle with size (2,3) and color red and mask Full at (0,0)
  _0: a rectangle with size (2,3) and color red and mask Full at (8,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (7,0)
  _011: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _01: a rectangle with size (2,3) and color red and mask Full at (0,0)
diff:   ^.layer_0.shape.color
delta:
! 15 wrong pixels (generated / expected)

TRAIN 496994bd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (1,0)
diff: 
delta:
   (66.7 bits)
data: a background with size (10,5) and color black and layers
  _00: a rectangle with size (1,5) and color red and mask Full at (0,0)
  _0: a rectangle with size (1,5) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (9,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (1,0)
diff: 
delta:
   (16.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (1,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,5) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (0,0)
diff:   ^.layer_0.shape.color
delta:
! 15 wrong pixels (generated / expected)

TRAIN 496994bd.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
  _0: a rectangle with size (2,6) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,6) and color green and mask Full at (0,0)
diff:   ^.layer_0.shape.color
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,6) and color black and layers
  _0: a rectangle with size (1,6) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,6) and color grey and mask Full at (1,0)
diff:   ^.layer_0.shape.color
delta:
! 24 wrong pixels (generated / expected)

TEST 496994bd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-287] Checking task 49d1d64f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3277.7 = 3293.3
DL output with Mo: L = 15.6 + 10396.5 = 10412.1
DL input+output M: L = 31.2 + 13674.2 = 13705.4

# learning a model for train pairs
2.000	
1.892	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.787	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.699	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.626	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.551	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.470	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.420	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.376	OUT DEF: ^.size=^.size + 2
1.363	OUT DEF: ^.layer_011.shape.size.i=area(^.layer_011.shape) + 1
1.349	OUT DEF: ^.layer_01.shape.size.i=area(^.layer_01.shape) + 1
1.335	OUT DEF: ^.layer_01.shape.size.j=area(^.layer_01.shape) + 1
1.318	OUT DEF: ^.layer_011.shape.size.j=^.layer_0.pos.j + 1
1.294	OUT OBJECT at ^.layer_0110: ^.layer_011.shape at (?,?)
1.269	OUT DEF: ^.layer_0111.pos.i=^.layer_01.pos.i * 2
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size + 2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (area(^.layer_01.shape) + 1,area(^.layer_01.shape) + 1) and color ? and mask ? at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (area(^.layer_011.shape) + 1,^.layer_0.pos.j + 1) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_01.pos.i * 2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 76.4 + 2464.6 = 2541.0
DL output with Mo: L = 258.3 + 4925.0 = 5183.2
DL input+output M: L = 334.7 + 7389.6 = 7724.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,2) and color blue and layers
  _0: a point with color red at (0,1)
  _01: a point with color green at (1,0)
  _011: a point with color cyan at (1,1)
diff: 
delta:
   (56.5 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (0,2)
  _0110: a point with color cyan at (2,3)
  _011: a rectangle with size (2,2) and color green and mask xx|.x at (2,0)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (2,2)
diff: 
delta:
   (112.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color blue and layers
  _0: a point with color red at (0,1)
  _01: a point with color green at (1,0)
  _011: a point with color cyan at (1,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color blue and layers
  _0: a point with color green at (1,0)
  _01: a point with color red at (0,1)
  _011: a point with color cyan at (1,1)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color green at (1,1)
  _011: a point with color yellow at (0,2)
diff: 
delta:
   (59.4 bits)
data: a background with size (4,5) and color black and layers
  _0: a rectangle with size (4,5) and color cyan and mask ..x..|..x..|xx.xx|.x.x. at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _0110: a point with color yellow at (1,4)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,3)
  _0111: a rectangle with size (2,1) and color green and mask Full at (2,2)
diff: 
delta:
   (130.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (1,1)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,3) and color cyan and layers
  _0: a point with color blue at (0,0)
  _01: a point with color green at (1,1)
  _011: a point with color yellow at (0,2)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,3) and color cyan and layers
  _0: a point with color yellow at (0,2)
  _01: a point with color blue at (0,0)
  _011: a point with color green at (1,1)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color yellow at (0,2)
  _011: a point with color cyan at (1,0)
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
   (130.6 bits)
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (0,3)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,0)
  _0110: a point with color cyan at (2,0)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (3,3)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (0,2)
diff: 
delta: (0,0)=0  (0,4)=0  (2,1)=8  (2,2)=0  (4,0)=0  (4,4)=0 
   (248.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color yellow at (0,2)
  _011: a point with color cyan at (1,0)
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a point with color blue at (0,1)
  _01: a point with color cyan at (1,0)
  _011: a point with color yellow at (0,2)
diff: 
delta: (1,1)=0  (2,0)=3  (2,2)=8 
! 21 wrong pixels (generated / expected)

TRAIN 49d1d64f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color yellow and layers
  _0: a point with color red at (0,0)
  _01: a point with color cyan at (0,1)
  _011: a point with color blue at (1,0)
diff: 
delta: (2,0)=3 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color yellow and layers
  _0: a point with color red at (0,0)
  _01: a point with color blue at (1,0)
  _011: a point with color cyan at (0,1)
diff: 
delta: (2,0)=3 
! 17 wrong pixels (generated / expected)

TEST 49d1d64f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.0 sec (26.0 sec/task)
bits-train-error = 4925.0 bits (4925.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-286] Checking task 4be741c5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 59512.6 = 59528.2
DL output with Mo: L = 15.6 + 2076.2 = 2091.8
DL input+output M: L = 31.2 + 61588.9 = 61620.1

# learning a model for train pairs
2.000	
1.480	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.168	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.042	OUT DEF: ^.color=red
0.983	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.913	OUT DEF: ^.size.i=^.layer_01.shape.size.j / 2
0.870	OUT DEF: ^.size.j=bottom(^.layer_01) - ^.layer_011.shape.size.j
0.869	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_01.shape.size.j / 2,bottom(^.layer_01) - ^.layer_011.shape.size.j) and color red and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 6333.4 = 6446.7
DL output with Mo: L = 85.9 + 1504.5 = 1590.4
DL input+output M: L = 199.1 + 7837.9 = 8037.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,16) and color red and layers
  _0: a rectangle with size (14,8) and color yellow and mask xxxxxxx.|xxxxxxxx|xxxxxxxx|xxxxxxx.|xxxxxx..|xxxxxx..|xxxxxxx.|xxxxxxx.|xxxxx...|xxxxx...|xxxx....|xxxx....|xxxxx...|xxxxxx.. at (0,0)
  _01: a rectangle with size (7,3) and color cyan and mask Full at (1,13)
  _011: a rectangle with size (14,4) and color cyan and mask ..xx|xxxx|xxxx|xxxx|.xxx|xxxx|xxxx|.xxx|..xx|..xx|.xxx|xxxx|xxxx|.xxx at (0,12)
diff: 
delta:
   (281.7 bits)
data: a background with size (1,3) and color red and layers
diff: 
delta: (0,0)=4  (0,2)=8 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color red and layers
  _0: a rectangle with size (14,8) and color yellow and mask xxxxxxx.|xxxxxxxx|xxxxxxxx|xxxxxxx.|xxxxxx..|xxxxxx..|xxxxxxx.|xxxxxxx.|xxxxx...|xxxxx...|xxxx....|xxxx....|xxxxx...|xxxxxx.. at (0,0)
  _01: a rectangle with size (4,3) and color cyan and mask Full at (10,13)
  _011: a rectangle with size (14,4) and color cyan and mask ..xx|xxxx|xxxx|xxxx|.xxx|xxxx|xxxx|.xxx|..xx|..xx|.xxx|xxxx|xxxx|.xxx at (0,12)
diff: 
delta:
! size mismatch, 1x9 instead of 1x3
>> Trial 2
data: a background with size (14,16) and color red and layers
  _0: a rectangle with size (14,8) and color yellow and mask xxxxxxx.|xxxxxxxx|xxxxxxxx|xxxxxxx.|xxxxxx..|xxxxxx..|xxxxxxx.|xxxxxxx.|xxxxx...|xxxxx...|xxxx....|xxxx....|xxxxx...|xxxxxx.. at (0,0)
  _01: a rectangle with size (7,3) and color cyan and mask Full at (1,13)
  _011: a rectangle with size (14,4) and color cyan and mask ..xx|xxxx|xxxx|xxxx|.xxx|xxxx|xxxx|.xxx|..xx|..xx|.xxx|xxxx|xxxx|.xxx at (0,12)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 4be741c5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,7) and color red and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _01: a rectangle with size (1,7) and color grey and mask Full at (8,0)
  _011: a rectangle with size (3,7) and color grey and mask Full at (6,0)
diff: 
delta:
   (162.7 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (1,0)=8  (2,0)=5#
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,7) and color red and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _01: a rectangle with size (3,2) and color grey and mask Full at (6,3)
  _011: a rectangle with size (3,7) and color grey and mask Full at (6,0)
diff: 
delta:
! size mismatch, 1x1 instead of 3x1
>> Trial 2
data: a background with size (9,7) and color red and layers
  _0: a rectangle with size (5,7) and color cyan and mask .xxx..x|xxxxxxx|xxxxxxx|xxx..xx|.x..... at (3,0)
  _01: a rectangle with size (1,7) and color grey and mask Full at (8,0)
  _011: a rectangle with size (3,7) and color grey and mask Full at (6,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 4be741c5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,9) and color yellow and layers
  _0: a rectangle with size (3,9) and color red and mask .xx...xx.|xxxxxxxxx|x.xxxxx.. at (6,0)
  _01: a rectangle with size (3,9) and color green and mask Full at (8,0)
  _011: a rectangle with size (3,9) and color pink and mask xxxxxxxxx|xx..xxxxx|x...x.x.. at (0,0)
diff: 
delta:
   (189.0 bits)
data: a background with size (4,1) and color red and layers
diff: 
delta: (0,0)=6  (1,0)=4  (3,0)=3 
   (64.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color yellow and layers
  _0: a rectangle with size (3,9) and color red and mask .xx...xx.|xxxxxxxxx|x.xxxxx.. at (6,0)
  _01: a rectangle with size (3,9) and color green and mask Full at (8,0)
  _011: a rectangle with size (3,9) and color pink and mask xxxxxxxxx|xx..xxxxx|x...x.x.. at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 4be741c5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color red and layers
  _0: a rectangle with size (14,6) and color blue and mask ..xxx.|.xxx..|xxx...|xxxx..|..xxx.|..xxxx|.xxxx.|.xxx..|.xxxx.|..xxx.|..xx..|.xxxx.|.xxxx.|..xxx. at (0,7)
  _01: a rectangle with size (14,4) and color cyan and mask Full at (0,10)
  _011: a rectangle with size (14,6) and color green and mask xxxx..|xxx...|xxxxx.|xxxxx.|xxxx..|xxxxx.|xxx...|xxxx..|xxxx..|xxx...|xxx...|xxxx..|xxxxx.|xxxxxx at (0,0)
diff: 
delta:
! size mismatch, 2x7 instead of 1x4
>> Trial 2
data: a background with size (14,14) and color red and layers
  _0: a rectangle with size (14,6) and color green and mask xxxx..|xxx...|xxxxx.|xxxxx.|xxxx..|xxxxx.|xxx...|xxxx..|xxxx..|xxx...|xxx...|xxxx..|xxxxx.|xxxxxx at (0,0)
  _01: a rectangle with size (14,2) and color cyan and mask Full at (0,12)
  _011: a rectangle with size (14,6) and color blue and mask ..xxx.|.xxx..|xxx...|xxxx..|..xxx.|..xxxx|.xxxx.|.xxx..|.xxxx.|..xxx.|..xx..|.xxxx.|.xxxx.|..xxx. at (0,7)
diff: 
delta: (1,11)=8  (2,10)=8  (2,11)=8  (3,11)=8  (5,12)=1  (5,13)=8  (7,11)=8  (10,11)=8 
! size mismatch, 1x7 instead of 1x4
>> Trial 3
data: a background with size (14,14) and color red and layers
  _0: a rectangle with size (14,6) and color blue and mask ..xxx.|.xxx..|xxx...|xxxx..|..xxx.|..xxxx|.xxxx.|.xxx..|.xxxx.|..xxx.|..xx..|.xxxx.|.xxxx.|..xxx. at (0,7)
  _01: a rectangle with size (14,3) and color green and mask Full at (0,0)
  _011: a rectangle with size (14,4) and color cyan and mask Full at (0,10)
diff: 
delta: (0,3)=3  (2,3)=3  (2,4)=3  (3,3)=3  (3,4)=3  (4,3)=3  (5,3)=3  (5,4)=3  (7,3)=3  (8,3)=3  (11,3)=3  (12,3)=3  (12,4)=3  (13,3)=3  (13,4)=3  (13,5)=3 
! size mismatch, 1x9 instead of 1x4

TEST 4be741c5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 1504.5 bits (1504.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-285] Checking task 4c4377d9.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5261.2 = 5276.8
DL output with Mo: L = 15.6 + 9939.8 = 9955.4
DL input+output M: L = 31.2 + 15201.0 = 15232.2

# learning a model for train pairs
2.000	
1.328	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.796	OUT DEF: ^.color=^.color
0.763	OUT DEF: ^.size.i=^.size.i * 2
0.731	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i * 2
0.702	OUT DEF: ^.size.j=^.size.j
0.674	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.651	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.634	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.617	OUT DEF: ^.layer_0.pos.i=^.size.i - ^.layer_0.shape.size.i

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i * 2,^.size.j) and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.i * 2,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at (^.size.i - ^.layer_0.shape.size.i,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 2613.9 = 2662.7
DL output with Mo: L = 96.5 + 1024.6 = 1121.1
DL input+output M: L = 145.4 + 3638.5 = 3783.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xx.|.x. at (0,0)
diff: 
delta:
   (64.6 bits)
data: a background with size (6,4) and color brown and layers
  _0: a rectangle with size (6,3) and color grey and mask .x.|xx.|..x|..x|xx.|.x. at (0,0)
diff: 
delta:
   (24.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xx.|.x. at (0,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color grey and layers
  _0: a rectangle with size (3,4) and color brown and mask xx.x|..xx|..xx at (0,0)
diff: 
delta: (2,0)=9#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
diff: 
delta: (0,2)=5# (2,1)=5#
! 12 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (3,4) and color blue and mask .xx.|xxxx|...x at (0,0)
diff: 
delta:
   (68.4 bits)
data: a background with size (6,4) and color yellow and layers
  _0: a rectangle with size (6,4) and color blue and mask ...x|xxxx|.xx.|.xx.|xxxx|...x at (0,0)
diff: 
delta:
   (30.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (3,4) and color blue and mask .xx.|xxxx|...x at (0,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color blue and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (2,0)
diff: 
delta: (0,0)=4  (0,3)=4 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (1,0)
diff: 
delta: (0,1)=1  (0,2)=1  (2,3)=1 
! 14 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,0)
diff: 
delta:
   (59.7 bits)
data: a background with size (6,4) and color yellow and layers
  _0: a rectangle with size (4,3) and color brown and mask xx.|x.x|x.x|xx. at (1,0)
diff: 
delta:
   (17.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,4) and color yellow and mask .x.x|..xx|xxxx at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (1,0)
diff: 
delta: (0,0)=9# (0,2)=9#
! 8 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (3,4) and color grey and mask ..xx|.xx.|xx.. at (0,0)
diff: 
delta:
   (68.7 bits)
data: a background with size (6,4) and color green and layers
  _0: a rectangle with size (6,4) and color grey and mask xx..|.xx.|..xx|..xx|.xx.|xx.. at (0,0)
diff: 
delta:
   (30.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color green and layers
  _0: a rectangle with size (3,4) and color grey and mask ..xx|.xx.|xx.. at (0,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color grey and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (0,0)
diff: 
delta: (1,3)=3  (2,2)=3  (2,3)=3 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color grey and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (1,2)
diff: 
delta: (0,0)=3  (0,1)=3  (1,0)=3 
! 16 wrong pixels (generated / expected)

TRAIN 4c4377d9.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color brown and layers
  _0: a rectangle with size (3,4) and color yellow and mask xx..|xxxx|xx.. at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (0,2)
diff: 
delta: (2,2)=9# (2,3)=9#
! 4 wrong pixels (generated / expected)

TEST 4c4377d9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 1024.6 bits (1024.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-284] Checking task 4c5c2cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10471.0 = 10486.6
DL output with Mo: L = 15.6 + 27560.3 = 27575.9
DL input+output M: L = 31.2 + 38031.3 = 38062.5

# learning a model for train pairs
2.000	
1.597	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.334	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.128	OUT OBJECT at ^.layer_0: ^.layer_0
0.976	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.826	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.676	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.533	OUT OBJECT at ^.layer_010: ^.layer_01
0.509	OUT DEF: ^.size=^.size
0.488	IN  DEF: ^.layer_01.shape.mask=Even Checkboard
0.473	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size
0.457	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size
0.442	OUT DEF: ^.layer_0111.shape.size=^.layer_0.shape.size
0.435	IN  DEF: ^.color=black
0.429	OUT DEF: ^.layer_01.pos.i=3
0.422	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j
0.417	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.411	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.405	OUT DEF: ^.layer_0111.shape.color=^.layer_0.shape.color
0.399	OUT DEF: ^.layer_0111.pos.i=^.layer_01.shape.size.i * 3
0.396	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (3,?)
  _011: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
  _0111: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (^.layer_01.shape.size.i * 3,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Even Checkboard at (?,?)

DL input  with Mi: L = 84.7 + 3117.5 = 3202.2
DL output with Mo: L = 184.0 + 2328.7 = 2512.7
DL input+output M: L = 268.7 + 5446.3 = 5714.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (7,6)
diff: 
delta:
   (112.5 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _010: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (7,6)
  _01: a rectangle with size (5,4) and color red and mask x..x|x.xx|xx..|.xx.|...x at (3,8)
  _011: a rectangle with size (5,4) and color red and mask x...|.xx.|..xx|xx.x|x..x at (9,3)
  _0111: a rectangle with size (5,4) and color red and mask ...x|.xx.|xx..|x.xx|x..x at (9,8)
diff: 
delta:
   (98.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (7,6)
diff: 
delta:
! 76 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Even Checkboard at (7,6)
  _01: a rectangle with size (5,4) and color red and mask x..x|xx.x|..xx|.xx.|x... at (3,3)
diff:   ^.layer_01.shape.mask
delta:
! 48 wrong pixels (generated / expected)

TRAIN 4c5c2cf0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _01: a rectangle with size (3,3) and color green and mask Even Checkboard at (6,4)
diff: 
delta:
   (102.4 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _010: a rectangle with size (3,3) and color green and mask Even Checkboard at (6,4)
  _01: a rectangle with size (3,4) and color cyan and mask .x..|xxx.|.xxx at (3,1)
  _011: a rectangle with size (3,4) and color cyan and mask xxx.|.xxx|..x. at (9,6)
  _0111: a rectangle with size (3,4) and color cyan and mask .xxx|xxx.|.x.. at (9,1)
diff: 
delta:
   (72.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
  _01: a rectangle with size (3,3) and color green and mask Even Checkboard at (6,4)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Even Checkboard at (6,4)
  _01: a rectangle with size (3,4) and color cyan and mask ..x.|.xxx|xxx. at (3,6)
diff:   ^.layer_01.shape.mask
delta:
! 40 wrong pixels (generated / expected)

TRAIN 4c5c2cf0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (6,4)
diff: 
delta:
   (96.8 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
  _010: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (6,4)
  _01: a rectangle with size (3,3) and color blue and mask .x.|x.x|xx. at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask .x.|x.x|.xx at (3,1)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|x.x|.x. at (9,7)
diff: 
delta:
   (62.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (6,4)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Even Checkboard at (6,4)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x.x|.x. at (9,1)
diff:   ^.layer_01.shape.mask
delta:
! 36 wrong pixels (generated / expected)

TRAIN 4c5c2cf0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask ..x.|xx.x|.x..|.xx.|x...|x... at (8,7)
  _01: a rectangle with size (3,3) and color orange and mask Even Checkboard at (6,5)
diff: 
delta:
! 71 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Even Checkboard at (6,5)
  _01: a rectangle with size (6,4) and color yellow and mask ..x.|xx.x|.x..|.xx.|x...|x... at (8,7)
diff:   ^.layer_01.shape.mask
delta:
! 40 wrong pixels (generated / expected)

TEST 4c5c2cf0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 2328.7 bits (2328.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-283] Checking task 50846271.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 161774.3 = 161790.0
DL output with Mo: L = 15.6 + 167410.2 = 167425.9
DL input+output M: L = 31.2 + 329184.6 = 329215.8

# learning a model for train pairs
2.000	
1.254	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.673	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.668	OUT DEF: ^.size=^.size
0.666	IN  DEF: ^.layer_0.shape.color=grey
0.634	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	OUT OBJECT at ^.layer_01: ^.layer_01
0.564	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 115.6 + 31230.6 = 31346.2
DL output with Mo: L = 47.0 + 62012.6 = 62059.6
DL input+output M: L = 162.6 + 93243.2 = 93405.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _011: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
diff: 
delta: (0,18)=5# (1,17)=5# (2,12)=2  (3,12)=2  (4,12)=2  (5,1)=5# (5,9)=2  (5,11)=2  (5,15)=2  (6,1)=5# (6,2)=5# (6,12)=2  (7,12)=2  (8,12)=2  (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
   (1435.9 bits)
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (19,16) and color grey and mask ..............xx|..............x.|...........xxx..|...........x.xx.|..........x.x...|..........x..xxx|.........xx.x...|.............x..|.............x..|..........xxx.xx|..........xx..xx|...........xx...|.......x..xx....|......xx.x..x...|x.x..x..xxx.....|.xx.x..x..xxx...|x...x...xx...xxx|.xxxx..xx.x...xx|.......x.x.x...x at (1,6)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
diff: 
delta: (0,7)=5# (0,18)=5# (1,1)=5# (1,4)=5# (1,5)=5# (1,6)=5# (1,7)=5# (1,17)=5# (2,0)=5# (2,2)=5# (2,3)=5# (2,5)=5# (2,6)=5# (2,7)=5# (2,12)=2  (3,0)=5# (3,3)=5# (3,4)=5# (3,8)=5# (3,12)=2  (3,13)=5# (3,14)=5# (3,15)=5# (4,5)=5# (4,9)=5# (4,12)=2  (4,13)=5# (4,14)=5# (5,1)=5# (5,4)=5# (5,8)=5# (5,9)=2  (5,10)=8  (5,11)=2  (5,12)=8  (5,13)=8  (5,14)=8  (5,15)=2  (6,1)=5# (6,2)=5# (6,4)=5# (6,10)=5# (6,12)=2  (6,13)=5# (7,5)=5# (7,9)=5# (7,10)=5# (7,12)=2  (7,13)=5# (8,0)=5# (8,6)=5# (8,8)=5# (8,12)=2  (8,21)=5# (9,0)=5# (9,3)=5# (9,9)=5# (9,10)=5# (9,12)=5# (9,13)=5# (10,1)=5# (10,3)=5# (10,5)=5# (10,6)=5# (10,7)=5# (10,8)=5# (10,9)=5# (10,14)=5# (11,1)=5# (11,2)=5# (11,5)=8  (11,8)=5# (11,10)=5# (11,11)=5# (11,13)=5# (11,14)=5# (12,2)=5# (12,3)=5# (12,5)=2  (12,6)=5# (12,7)=5# (12,8)=5# (12,11)=5# (13,0)=5# (13,2)=5# (13,5)=8  (13,6)=5# (13,7)=5# (13,21)=5# (14,2)=2  (14,3)=8  (14,4)=8  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (15,1)=5# (15,2)=5# (15,5)=8  (16,0)=5# (16,4)=5# (16,5)=2  (17,2)=5# (17,3)=5# (17,5)=2  (18,1)=5# (18,2)=5# (18,3)=5#
   (3251.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _011: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
diff: 
delta: (0,18)=5# (1,17)=5# (2,12)=2  (3,12)=2  (4,12)=2  (5,1)=5# (5,9)=2  (5,11)=2  (5,15)=2  (6,1)=5# (6,2)=5# (6,12)=2  (7,12)=2  (8,12)=2  (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
! 183 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _01: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
  _011: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
diff: 
delta: (0,18)=5# (1,17)=5# (2,12)=2  (3,12)=2  (4,12)=2  (5,1)=5# (5,9)=2  (5,11)=2  (5,15)=2  (6,1)=5# (6,2)=5# (6,12)=2  (7,12)=2  (8,12)=2  (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
! 187 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,22) and color black and layers
  _0: a rectangle with size (3,6) and color grey and mask xxxxxx|x.x.x.|xx.... at (0,10)
  _01: a rectangle with size (20,22) and color grey and mask .......x..............|.x..xxxx............xx|x.xx.xxx............x.|x..xx...x........xxx..|.....x...x.......x.xx.|....x...x.x.....x.x...|....x.....x.....x..xxx|.....x...xx....xx.x...|x.....x.x..........x..|x..x.....xx........x..|.x.x.xxxxx......xxx.xx|.xx..x..x.xx....xx..xx|..xx..xxx..x.....xx...|..x..xxx.....x..xx....|...xx.......xx.x..x...|.xx..xx.x..x..xxx.....|x...x..xx.x..x..xxx...|..xx..x...x...xx...xxx|.xxx...xxxx..xx.x...xx|.............x.x.x...x at (0,0)
  _011: a rectangle with size (5,4) and color grey and mask .xxx|.xx.|xxx.|.x..|.x.. at (3,12)
diff: 
delta: (0,18)=5# (1,17)=5# (2,12)=2  (3,12)=2  (4,12)=2  (5,1)=5# (5,9)=2  (5,11)=2  (5,15)=2  (6,1)=5# (6,2)=5# (6,12)=2  (7,12)=2  (8,12)=2  (8,21)=5# (9,12)=5# (9,13)=5# (10,14)=5# (11,13)=5# (11,14)=5# (12,5)=2  (13,0)=5# (13,21)=5# (14,2)=2  (14,5)=2  (14,6)=2  (14,7)=2  (14,8)=2  (14,20)=5# (16,5)=2  (17,5)=2 
! 62 wrong pixels (generated / expected)

TRAIN 50846271.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
  _011: a rectangle with size (1,5) and color red and mask Full at (10,12)
diff: 
delta: (4,4)=2  (8,0)=5# (9,0)=5# (10,0)=5# (15,7)=2  (15,8)=2  (16,7)=2 
   (746.9 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx..x.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x......xx.x.xx...|xx..xx.xxx.x..xx....|..xx...x..xx..x.....|...x.x.xxx.xxx......|....x..xxxx.xx......|...x.xxx.xx.x.......|..xx.xxxxx.x........|..x......xxx........|..x..x.xx.xxxx......|xx..xx....xxx.......|xx...xx..xx.xxxx..xx|..x.x.....x..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.x..xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
diff: 
delta: (2,6)=8  (4,4)=2  (4,5)=8  (6,6)=8  (6,17)=5# (6,19)=5# (7,16)=5# (7,17)=5# (7,19)=5# (8,0)=5# (8,14)=8  (8,17)=5# (8,19)=5# (9,0)=5# (9,14)=8  (9,15)=5# (9,16)=5# (9,17)=5# (9,18)=5# (9,19)=5# (10,0)=5# (10,12)=2  (10,13)=8  (10,14)=2  (10,15)=2  (10,16)=2  (10,19)=5# (11,14)=8  (11,17)=5# (11,19)=5# (12,14)=8  (12,15)=5# (12,16)=5# (12,17)=5# (12,18)=5# (13,7)=8  (14,7)=8  (15,5)=8  (15,6)=8  (15,7)=2  (15,8)=2  (15,9)=8  (16,7)=2  (17,7)=8 
   (1642.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
  _011: a rectangle with size (1,5) and color red and mask Full at (10,12)
diff: 
delta: (4,4)=2  (8,0)=5# (9,0)=5# (10,0)=5# (15,7)=2  (15,8)=2  (16,7)=2 
! 216 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (10,12)
  _011: a rectangle with size (3,3) and color red and mask x..|xxx|x.. at (3,6)
diff: 
delta: (4,4)=2  (8,0)=5# (9,0)=5# (10,0)=5# (15,7)=2  (15,8)=2  (16,7)=2 
! 217 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask .x.x...xx.xx...xx.xx|xx.xxx.xx.x..x...xx.|.x.xx.xx.x..x..x..xx|x..xx..x.x.x...xxxxx|.x.x.x....xx.x.xx...|xx..xx.xxx.x..xx....|..xx..xx..xx..x..x.x|...x.x.xxx.xxx..xx.x|....x..xxxx.xxx..x.x|...x.xxx.xx.x.xxxxxx|..xx.xxxxx.x.x.....x|..x......xxx..x..x.x|..x..x.xx.xxxxxxxxx.|xx..xx.x..xxx.......|xx...xxx.xx.xxxx..xx|..x.xxx..xx..x..xx..|.xx..xx.x.xx..x.xx..|..x.x.xx.xxx..x...x.|..x.xx.xxx.xxx.x..xx|xxx.x.x.xx..xx.....x at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (4,4)
  _011: a rectangle with size (1,5) and color red and mask Full at (10,12)
diff: 
delta: (3,6)=2  (5,6)=2  (8,0)=5# (9,0)=5# (10,0)=5# (15,7)=2  (15,8)=2  (16,7)=2 
! 217 wrong pixels (generated / expected)

TRAIN 50846271.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (2,5) and color red and mask ..x..|xx.xx at (5,9)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (9,1)
diff: 
delta: (8,11)=2  (13,18)=5#
   (549.3 bits)
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xx.x...x..|x.....x.x.x.x..x.xx|x.x..xx.x.....xx.x.|...xxxxx.x..xxx.xxx|..x.xxxx..x.xxx....|......x..xxxxxxxx..|..xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (2,5) and color red and mask ..x..|xx.xx at (5,9)
diff: 
delta: (4,11)=8  (6,11)=8  (7,1)=8  (7,11)=8  (8,0)=5# (8,1)=8  (8,11)=2  (9,0)=8  (9,1)=2  (9,2)=2  (9,3)=8  (10,0)=5# (10,1)=2  (11,1)=2  (13,18)=5#
   (802.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (2,5) and color red and mask ..x..|xx.xx at (5,9)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (9,1)
diff: 
delta: (8,11)=2  (13,18)=5#
! 197 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full (and Border) at (9,1)
  _011: a rectangle with size (2,5) and color red and mask ..x..|xx.xx at (5,9)
diff: 
delta: (8,11)=2  (13,18)=5#
! 198 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,19) and color black and layers
  _0: a rectangle with size (18,19) and color grey and mask ..x.x.xxxx.xx...xx.|..xxx.xxxx..xxxxx.x|.xxx.x.xx...xxx.x..|xxxxx...xxxxxx..x..|xx...xxx.xxxx...x..|x.....x.x.x.x..x.xx|x.x..xx.x..x..xx.x.|.x.xxxxx.x.xxxx.xxx|xxx.xxxx..x.xxx....|x..x..x..xxxxxxxx..|x.xxx..xxxx..xxxx.x|..x.xx..xxxxx.xxxx.|.x..xx..xx..x..x...|x..xxxxx..xxx.xxx..|.xxx..x...x.xxxx...|xx..xxxx.xx.x.x....|x.x.x......x..x.x.x|.xx.x.....x..x.xxxx at (0,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (6,9)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (9,1)
diff: 
delta: (5,11)=2  (8,11)=2  (13,18)=5#
! 198 wrong pixels (generated / expected)

TRAIN 50846271.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (4,3) and color red and mask x..|x..|xxx|x.. at (2,8)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
diff: 
delta: (0,6)=5# (1,8)=5# (4,6)=2  (5,11)=5#
   (390.9 bits)
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx......|xxx.xx......|xxx.x.......|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (4,3) and color red and mask x..|x..|xxx|x.. at (2,8)
diff: 
delta: (0,6)=5# (0,11)=5# (1,8)=5# (1,11)=5# (2,10)=5# (3,9)=5# (3,11)=5# (4,6)=2  (4,7)=8  (5,7)=5# (5,11)=5# (6,7)=5# (6,8)=8 
   (504.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (4,3) and color red and mask x..|x..|xxx|x.. at (2,8)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
diff: 
delta: (0,6)=5# (1,8)=5# (4,6)=2  (5,11)=5#
! 57 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
  _011: a rectangle with size (4,3) and color red and mask x..|x..|xxx|x.. at (2,8)
diff: 
delta: (0,6)=5# (1,8)=5# (4,6)=2  (5,11)=5#
! 58 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (11,12) and color grey and mask .x..........|x.x.........|x.x..xx.....|xx..x.x.....|x..xxx.x....|xxx.xx.x....|xxx.x..xx...|x....x......|.xx.x....x..|x...xxxxx...|x....x..xxxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (2,8)
  _011: a rectangle with size (4,3) and color grey and mask ..x|..x|.x.|x.x at (0,9)
diff: 
delta: (0,6)=5# (1,8)=5# (4,6)=2  (4,9)=2  (4,10)=2  (5,11)=5#
! 59 wrong pixels (generated / expected)

TRAIN 50846271.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (19,22) and color grey and mask .............x.....xx.|............xx.....xxx|...........xx..xx..xxx|...........x.x.xx.xxx.|............x.xxx..xx.|...........x....xxxx..|xx...........x...xxxxx|x..........xxx.x..x.x.|xxxxx..xx.x.x.xx..xxx.|...xxx..x...xx.xxx....|...xxx.x.x.xx.x.x..xx.|.xxx...xxxx..x.xx...xx|xx..xxx..xx.x.xx..xx.x|..xxxxxxxx..xxxxx..x.x|xx.xx...xxx.xxx.x..xx.|x...x.x.x.x.xxxx....xx|xxx....xx.......x.x.xx|x.x..x.x.......xxx.xx.|xxxxx.x.xxxx....xx.x.x at (0,0)
  _01: a rectangle with size (7,9) and color grey and mask ..x......|..xx.....|...xxx...|.xx.xxx.x|x.x..x..x|..x.x.xxx|...xx..xx at (0,1)
  _011: a rectangle with size (3,5) and color red and mask xx.xx|..x..|..x.. at (4,4)
diff: 
delta: (0,1)=5# (0,6)=5# (0,7)=5# (0,9)=5# (0,15)=5# (1,1)=5# (1,8)=5# (1,9)=5# (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (16,11)=2  (16,12)=2  (16,13)=2  (16,14)=2  (16,15)=2  (17,13)=5# (18,13)=5#
! 212 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (7,9) and color grey and mask ..x......|..xx.....|...xxx...|.xx.xxx.x|x.x..x..x|..x.x.xxx|...xx..xx at (0,1)
  _01: a rectangle with size (19,22) and color grey and mask .............x.....xx.|............xx.....xxx|...........xx..xx..xxx|...........x.x.xx.xxx.|............x.xxx..xx.|...........x....xxxx..|xx...........x...xxxxx|x..........xxx.x..x.x.|xxxxx..xx.x.x.xx..xxx.|...xxx..x...xx.xxx....|...xxx.x.x.xx.x.x..xx.|.xxx...xxxx..x.xx...xx|xx..xxx..xx.x.xx..xx.x|..xxxxxxxx..xxxxx..x.x|xx.xx...xxx.xxx.x..xx.|x...x.x.x.x.xxxx....xx|xxx....xx.......x.x.xx|x.x..x.x.......xxx.xx.|xxxxx.x.xxxx....xx.x.x at (0,0)
  _011: a rectangle with size (3,5) and color red and mask xx.xx|..x..|..x.. at (4,4)
diff: 
delta: (0,1)=5# (0,6)=5# (0,7)=5# (0,9)=5# (0,15)=5# (1,1)=5# (1,8)=5# (1,9)=5# (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (16,11)=2  (16,12)=2  (16,13)=2  (16,14)=2  (16,15)=2  (17,13)=5# (18,13)=5#
! 68 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (19,22) and color grey and mask .............x.....xx.|............xx.....xxx|...........xx..xx..xxx|...........x.x.xx.xxx.|............x.xxx..xx.|...........x....xxxx..|xx...........x...xxxxx|x..........xxx.x..x.x.|xxxxx..xx.x.x.xx..xxx.|...xxx..x...xx.xxx....|...xxx.x.x.xx.x.x..xx.|.xxx...xxxx..x.xx...xx|xx..xxx..xx.x.xx..xx.x|..xxxxxxxx..xxxxx..x.x|xx.xx...xxx.xxx.x..xx.|x...x.x.x.x.xxxx....xx|xxx....xx.......x.x.xx|x.x..x.x.......xxx.xx.|xxxxx.x.xxxx....xx.x.x at (0,0)
  _01: a rectangle with size (3,5) and color red and mask xx.xx|..x..|..x.. at (4,4)
  _011: a rectangle with size (7,9) and color grey and mask ..x......|..xx.....|...xxx...|.xx.xxx.x|x.x..x..x|..x.x.xxx|...xx..xx at (0,1)
diff: 
delta: (0,1)=5# (0,6)=5# (0,7)=5# (0,9)=5# (0,15)=5# (1,1)=5# (1,8)=5# (1,9)=5# (8,11)=2  (8,13)=2  (10,13)=2  (14,5)=2  (14,6)=2  (14,7)=2  (15,5)=2  (16,5)=2  (16,11)=2  (16,12)=2  (16,13)=2  (16,14)=2  (16,15)=2  (17,13)=5# (18,13)=5#
! 228 wrong pixels (generated / expected)

TEST 50846271.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.7 sec (28.7 sec/task)
bits-train-error = 62012.6 bits (62012.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-282] Checking task 508bd3b6.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 24390.5 = 24406.1
DL output with Mo: L = 15.6 + 31532.0 = 31547.6
DL input+output M: L = 31.2 + 55922.5 = 55953.7

# learning a model for train pairs
2.000	
1.164	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.484	OUT OBJECT at ^.layer_0: ^.layer_0
0.332	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.296	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.229	OUT OBJECT at ^.layer_011: ^.layer_01
0.208	OUT DEF: ^.size=^.size
0.200	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j * 3
0.195	OUT DEF: ^.layer_01.shape.color=green
0.190	OUT DEF: ^.layer_01.pos.j=right(^.layer_01) + 1
0.187	IN  DEF: ^.color=black
0.185	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_01.shape.size.j * 3) and color green and mask ? at (?,right(^.layer_01) + 1)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 2990.8 = 3071.2
DL output with Mo: L = 82.7 + 1769.4 = 1852.0
DL input+output M: L = 163.0 + 4760.2 = 4923.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,10)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
   (93.3 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,10)
  _01: a rectangle with size (10,6) and color green and mask .x....|..x...|...x..|....x.|.....x|....x.|...x..|..x...|.x....|x..... at (0,4)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
   (62.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,10)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (10,2)
  _01: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,10)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,10)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (10,3)
diff: 
delta: (11,2)=8 
! 13 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
   (103.5 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (6,9) and color green and mask ........x|.......x.|x.....x..|.x...x...|..x.x....|...x..... at (3,3)
  _011: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
   (56.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (2,0)
  _01: a rectangle with size (3,12) and color red and mask Full at (9,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask Full at (9,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,0)
diff: 
delta: (3,1)=8  (4,2)=8 
! 17 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
  _01: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta:
   (102.3 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
  _01: a rectangle with size (9,6) and color green and mask .....x|....x.|...x..|..x...|.x....|x.....|.x....|..x...|...x.. at (0,2)
  _011: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta:
   (57.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (9,6)
  _01: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,2) and color red and mask Full (and Border) at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (9,6)
diff: 
delta: (10,7)=8  (11,8)=8 
! 15 wrong pixels (generated / expected)

TRAIN 508bd3b6.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,4) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,3)
  _01: a rectangle with size (12,4) and color red and mask Full at (0,8)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,4) and color red and mask Full at (0,8)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,3)
diff: 
delta: (1,4)=8 
! 16 wrong pixels (generated / expected)

TEST 508bd3b6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.8 sec (3.8 sec/task)
bits-train-error = 1769.4 bits (1769.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-281] Checking task 50cb2852.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 47189.1 = 47204.7
DL output with Mo: L = 15.6 + 47189.1 = 47204.7
DL input+output M: L = 31.2 + 94378.1 = 94409.3

# learning a model for train pairs
2.000	
1.562	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.203	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.909	OUT OBJECT at ^.layer_0: ^.layer_0
0.659	OUT OBJECT at ^.layer_01: ^.layer_01
0.512	OUT OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.380	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.313	OUT OBJECT at ^.layer_0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.299	OUT DEF: ^.size=^.size
0.291	OUT DEF: ^.layer_00.shape.size=^.layer_0.shape.size - 2
0.283	OUT OBJECT at ^.layer_01011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.275	OUT DEF: ^.layer_010.shape.size=^.layer_01.shape.size - 2
0.267	OUT DEF: ^.layer_00.pos=^.layer_0.pos + 1
0.260	OUT DEF: ^.layer_010.pos=^.layer_01.pos + 1
0.256	OUT DEF: ^.layer_01011.shape.size.i=^.layer_01.shape.size.j / 2
0.252	IN  DEF: ^.layer_0.shape.color=red
0.249	OUT DEF: ^.layer_00.shape.color=cyan
0.245	OUT DEF: ^.layer_010.shape.color=cyan
0.243	OUT DEF: ^.layer_00.shape.mask=Full
0.241	OUT DEF: ^.layer_010.shape.mask=Full
0.239	OUT DEF: ^.layer_0101.shape.mask=Full
0.237	OUT DEF: ^.layer_01011.shape.mask=Full
0.235	IN  DEF: ^.layer_0.shape.mask=Full
0.233	IN  DEF: ^.layer_01.shape.mask=Full
0.231	OUT DEF: ^.layer_0101.shape.size.j=^.layer_0.shape.size.i - ^.layer_01.shape.size.i
0.229	IN  DEF: ^.color=black
0.228	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size ^.layer_0.shape.size - 2 and color cyan and mask Full at ^.layer_0.pos + 1
  _0: ^.layer_0
  _010: a rectangle with size ^.layer_01.shape.size - 2 and color cyan and mask Full at ^.layer_01.pos + 1
  _0101: a rectangle with size (?,^.layer_0.shape.size.i - ^.layer_01.shape.size.i) and color ? and mask Full at (?,?)
  _01011: a rectangle with size (^.layer_01.shape.size.j / 2,?) and color ? and mask Full at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 82.7 + 9041.1 = 9123.8
DL output with Mo: L = 240.8 + 1378.7 = 1619.5
DL input+output M: L = 323.5 + 10419.8 = 10743.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask Full at (1,2)
  _01: a rectangle with size (5,7) and color green and mask Full at (8,8)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
   (324.8 bits)
data: a background with size (13,15) and color black and layers
  _00: a rectangle with size (4,3) and color cyan and mask Full at (2,3)
  _0: a rectangle with size (6,5) and color red and mask Full at (1,2)
  _010: a rectangle with size (3,5) and color cyan and mask Full at (9,9)
  _0101: a rectangle with size (1,1) and color cyan and mask Full at (2,11)
  _01011: a rectangle with size (3,3) and color blue and mask Full at (1,10)
  _01: a rectangle with size (5,7) and color green and mask Full at (8,8)
diff: 
delta:
   (45.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask Full at (1,2)
  _01: a rectangle with size (5,7) and color green and mask Full at (8,8)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,11)=1  (2,12)=1  (3,10)=1  (3,11)=1  (3,12)=1 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color black and layers
  _0: a rectangle with size (5,7) and color green and mask Full at (8,8)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,10)
diff:   ^.layer_0.shape.color
delta: (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (4,2)=2  (4,3)=2  (4,4)=2  (4,5)=2  (4,6)=2  (5,2)=2  (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (6,2)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2 
! 34 wrong pixels (generated / expected)

TRAIN 50cb2852.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,6) and color blue and mask Full at (7,2)
diff: 
delta:
   (79.4 bits)
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _010: a rectangle with size (1,4) and color cyan and mask Full at (8,3)
  _0101: a rectangle with size (3,1) and color blue and mask Full at (7,2)
  _01011: a rectangle with size (3,1) and color blue and mask Full at (7,7)
  _01: a rectangle with size (3,6) and color blue and mask Full at (7,2)
diff: 
delta:
   (44.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,6) and color blue and mask Full at (7,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 50cb2852.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (6,4) and color red and mask Full at (1,6)
  _01: a rectangle with size (4,8) and color blue and mask Full at (8,2)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
   (500.0 bits)
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (4,2) and color cyan and mask Full at (2,7)
  _0: a rectangle with size (6,4) and color red and mask Full at (1,6)
  _010: a rectangle with size (2,6) and color cyan and mask Full at (9,3)
  _0101: a rectangle with size (2,2) and color cyan and mask Full at (3,1)
  _01011: a rectangle with size (4,4) and color green and mask Full at (2,0)
  _01: a rectangle with size (4,8) and color blue and mask Full at (8,2)
diff: 
delta:
   (47.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (6,4) and color red and mask Full at (1,6)
  _01: a rectangle with size (4,8) and color blue and mask Full at (8,2)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! 20 wrong pixels (generated / expected)

TRAIN 50cb2852.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (7,4) and color green and mask Full at (7,9)
  _01: a rectangle with size (6,6) and color red and mask Full at (5,2)
diff:   ^.layer_0.shape.color
delta: (0,1)=1  (0,2)=1  (0,3)=1  (0,4)=1  (0,5)=1  (1,1)=1  (1,2)=1  (1,3)=1  (1,4)=1  (1,5)=1  (1,8)=1  (1,9)=1  (1,10)=1  (2,1)=1  (2,2)=1  (2,3)=1  (2,4)=1  (2,5)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,1)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,5)=1  (3,8)=1  (3,9)=1  (3,10)=1 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (5,2)
  _01: a rectangle with size (4,5) and color blue and mask Full at (0,1)
diff: 
delta: (1,8)=1  (1,9)=1  (1,10)=1  (2,8)=1  (2,9)=1  (2,10)=1  (3,8)=1  (3,9)=1  (3,10)=1  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (10,9)=3  (10,10)=3  (10,11)=3  (10,12)=3  (11,9)=3  (11,10)=3  (11,11)=3  (11,12)=3  (12,9)=3  (12,10)=3  (12,11)=3  (12,12)=3  (13,9)=3  (13,10)=3  (13,11)=3  (13,12)=3 
! 41 wrong pixels (generated / expected)

TEST 50cb2852.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.4 sec (25.4 sec/task)
bits-train-error = 1378.7 bits (1378.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-280] Checking task 5117e062.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16372.8 = 16388.4
DL output with Mo: L = 15.6 + 2927.3 = 2942.9
DL input+output M: L = 31.2 + 19300.1 = 19331.3

# learning a model for train pairs
2.000	
1.567	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.317	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.128	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.994	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.862	OUT DEF: ^.size=^.layer_0.shape.size
0.730	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	OUT DEF: ^.layer_0.pos='(0,0)
0.596	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.543	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.518	OUT DEF: ^.color=black
0.513	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_011.shape.color and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 144.3 + 5952.8 = 6097.1
DL output with Mo: L = 53.8 + 362.0 = 415.8
DL input+output M: L = 198.1 + 6314.8 = 6513.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
diff: 
delta: (1,10)=8 
   (221.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
  _0111: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _011: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
diff: 
delta: (1,10)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .xx|x.x|xxx at (9,8)
  _01: a rectangle with size (3,3) and color red and mask x..|xxx|.x. at (4,4)
  _011: a rectangle with size (3,3) and color green and mask .x.|xxx|xx. at (0,1)
  _0111: a rectangle with size (3,3) and color yellow and mask Odd Checkboard at (0,9)
diff: 
delta: (1,10)=8 
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (0,7)
  _011: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
   (174.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .xx|xx.|.xx at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (0,7)
  _011: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|xxx|xxx at (8,7)
  _01: a rectangle with size (3,3) and color green and mask .xx|x..|.xx at (4,2)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (0,7)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (5,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 5117e062.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|xxx|..x at (3,8)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (8,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (4,1)
diff: 
delta: (3,2)=8 
   (199.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xx. at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|xxx|..x at (3,8)
  _01: a rectangle with size (3,3) and color blue and mask x.x|xxx|.x. at (8,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (4,1)
diff: 
delta: (3,2)=8 
! 3 wrong pixels (generated / expected)

TRAIN 5117e062.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _011: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
  _0111: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
diff: 
delta: (5,10)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _011: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
  _0111: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xxx|.x.|xxx at (9,7)
  _01: a rectangle with size (3,3) and color orange and mask .xx|x.x|.x. at (4,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|.xx|..x at (1,5)
  _0111: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (6,1)
diff: 
delta: (5,10)=8 
! 9 wrong pixels (generated / expected)

TEST 5117e062.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 362.0 bits (362.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-279] Checking task 5168d44c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10922.8 = 10938.4
DL output with Mo: L = 15.6 + 10922.8 = 10938.4
DL input+output M: L = 31.2 + 21845.5 = 21876.8

# learning a model for train pairs
2.000	
1.550	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.038	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.932	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.842	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.749	OUT DEF: ^.layer_01=^.layer_01
0.696	OUT DEF: ^.size=^.size
0.681	IN  DEF: ^.layer_0.shape.color=red
0.666	IN  DEF: ^.layer_0.shape.mask=Border
0.650	IN  DEF: ^.layer_01.shape.color=green
0.636	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.i
0.622	OUT DEF: ^.layer_0.pos.i=right(^.layer_0)
0.613	IN  DEF: ^.layer_01.shape.mask=Full
0.606	OUT DEF: ^.color=black
0.599	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (right(^.layer_0),^.layer_0.pos.i)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color green and mask Full at (?,?)

DL input  with Mi: L = 87.3 + 4343.8 = 4431.1
DL output with Mo: L = 45.3 + 2078.4 = 2123.7
DL input+output M: L = 132.6 + 6422.2 = 6554.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
   (172.2 bits)
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,2)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,6)=0  (3,8)=0  (3,10)=0 
   (78.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,11) and color green and mask Full at (3,1)
diff: 
delta: (3,4)=0  (3,6)=0  (3,8)=0  (3,10)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta: (3,3)=3  (3,5)=3  (3,7)=3  (3,9)=3  (3,11)=3 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (2,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,3)
diff: 
delta: (3,1)=3  (3,5)=3  (3,7)=3  (3,9)=3  (3,11)=3 
! 5 wrong pixels (generated / expected)

TRAIN 5168d44c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
   (172.7 bits)
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (5,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (3,4)=0  (9,4)=0  (11,4)=0 
   (103.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff: 
delta: (1,4)=0  (7,4)=0  (9,4)=0  (11,4)=0 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (3,3)
  _01: a rectangle with size (13,1) and color green and mask Full at (0,4)
diff:   ^.layer_0.shape.mask
delta: (1,4)=0  (4,4)=3  (7,4)=0  (9,4)=0  (11,4)=0 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,3)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,4)
diff: 
delta: (2,4)=3  (4,4)=3  (6,4)=3  (8,4)=3  (10,4)=3  (12,4)=3 
! 6 wrong pixels (generated / expected)

TRAIN 5168d44c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (5,2)=0 
   (89.5 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (1,2)=0 
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff: 
delta: (5,2)=0 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (1,1)
  _01: a rectangle with size (7,1) and color green and mask Full at (0,2)
diff:   ^.layer_0.shape.mask
delta: (2,2)=3  (5,2)=0 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,2)
diff: 
delta: (2,2)=3  (4,2)=3  (6,2)=3 
! 3 wrong pixels (generated / expected)

TRAIN 5168d44c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,17) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,7)
  _01: a rectangle with size (1,17) and color green and mask Full at (4,0)
diff: 
delta: (4,1)=0  (4,3)=0  (4,5)=0  (4,11)=0  (4,13)=0  (4,15)=0 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,17) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (3,7)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,0)
diff: 
delta: (4,2)=3  (4,4)=3  (4,6)=3  (4,8)=3  (4,10)=3  (4,12)=3  (4,14)=3  (4,16)=3 
! 16 wrong pixels (generated / expected)

TEST 5168d44c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.1 sec (4.1 sec/task)
bits-train-error = 2078.4 bits (2078.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-278] Checking task 539a4f51.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11852.7 = 11868.4
DL output with Mo: L = 15.6 + 34550.8 = 34566.4
DL input+output M: L = 31.2 + 46403.5 = 46434.8

# learning a model for train pairs
2.000	
1.668	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.383	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.128	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.941	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.828	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.689	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.680	OUT DEF: ^.layer_0111.pos=^.layer_011.pos
0.662	OUT DEF: ^.size=^.size * 2
0.653	OUT DEF: ^.layer_011.pos=^.layer_01.pos
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at ^.layer_01.pos
  _0111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 3732.8 = 3846.0
DL output with Mo: L = 148.6 + 11209.5 = 11358.1
DL input+output M: L = 261.8 + 14942.3 = 15204.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (0,3)
diff: 
delta:
   (107.4 bits)
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (7,0)
  _01: a rectangle with size (8,1) and color green and mask Full at (0,7)
  _011: a rectangle with size (1,4) and color green and mask Full at (3,0)
  _0111: a rectangle with size (4,1) and color green and mask Full at (0,3)
diff: 
delta:
   (114.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (0,3)
diff: 
delta:
! 100 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,4) and color green and mask Full at (3,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (0,3)
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 539a4f51.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask Full at (0,0)
diff: 
delta:
   (111.4 bits)
data: a background with size (10,10) and color blue and layers
  _0: a rectangle with size (8,8) and color pink and mask .......x|.......x|.......x|.......x|.......x|.......x|.......x|xxxxxxxx at (0,0)
  _01: a rectangle with size (7,7) and color yellow and mask ......x|......x|......x|......x|......x|......x|xxxxxxx at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask ...x|...x|...x|xxxx at (0,0)
  _0111: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (0,0)
diff: 
delta:
   (261.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (4,4) and color pink and mask Full at (0,0)
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 539a4f51.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (0,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (0,0)
diff: 
delta: (0,0)=2 
   (154.4 bits)
data: a background with size (10,10) and color pink and layers
  _0: a rectangle with size (9,9) and color blue and mask ........x|........x|........x|........x|........x|........x|........x|........x|xxxxxxxxx at (0,0)
  _01: a rectangle with size (8,8) and color yellow and mask .......x|.......x|.......x|.......x|.......x|.......x|.......x|xxxxxxxx at (0,0)
  _011: a rectangle with size (7,7) and color green and mask ......x|......x|......x|......x|......x|......x|xxxxxxx at (0,0)
  _0111: a rectangle with size (6,6) and color red and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
diff: 
delta: (0,0)=2  (0,1)=3  (0,2)=4  (0,3)=1  (1,0)=3  (1,1)=3  (1,2)=4  (1,3)=1  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=1  (3,0)=1  (3,1)=1  (3,2)=1  (3,3)=1 
   (745.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|..x|xxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (0,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (0,0)
diff: 
delta: (0,0)=2 
! 100 wrong pixels (generated / expected)

TRAIN 539a4f51.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,0)
  _01: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _011: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta:
! 100 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,0)
  _011: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta:
! 100 wrong pixels (generated / expected)

TEST 539a4f51.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.0 sec (26.0 sec/task)
bits-train-error = 11209.5 bits (11209.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-277] Checking task 53b68214.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7377.1 = 7392.7
DL output with Mo: L = 15.6 + 11109.9 = 11125.5
DL input+output M: L = 31.2 + 18487.0 = 18518.2

# learning a model for train pairs
2.000	
1.256	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.578	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.547	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.520	OUT DEF: ^.size.j=^.size.j
0.494	OUT DEF: ^.size.i=^.size.j
0.478	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.468	IN  DEF: ^.color=black
0.462	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.j,^.size.j) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2258.2 = 2306.1
DL output with Mo: L = 47.0 + 1617.7 = 1664.7
DL input+output M: L = 95.0 + 3875.8 = 3970.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask xxx....|..x....|..xxx..|....x..|....xxx|......x at (0,0)
diff: 
delta:
   (95.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,10) and color blue and mask xxx.......|..x.......|..xxx.....|....x.....|....xxx...|......x...|......xxx.|........x.|........xx at (0,0)
diff: 
delta:
   (92.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask xxx....|..x....|..xxx..|....x..|....xxx|......x at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,10) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (2,2)
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (1,2)=1  (3,4)=1  (4,4)=1  (4,5)=1  (4,6)=1  (5,6)=1 
! 18 wrong pixels (generated / expected)

TRAIN 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,2)
diff: 
delta:
   (48.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,2)
diff: 
delta:
   (16.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,2)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 53b68214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x. at (0,0)
diff: 
delta:
   (81.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x.|x.x|.x. at (0,0)
diff: 
delta:
   (52.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,3) and color red and mask .x.|.x.|x.x|.x.|.x.|x.x|.x.|.x. at (0,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (0,1)
diff: 
delta: (2,0)=2  (2,1)=0  (2,2)=2  (5,0)=2  (5,1)=0  (5,2)=2 
! 13 wrong pixels (generated / expected)

TRAIN 53b68214.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,10) and color black and layers
  _0: a rectangle with size (8,2) and color pink and mask Odd Checkboard at (0,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST 53b68214.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask xxx|x.x|xxx|x.x|xxx at (0,1)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST 53b68214.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 1617.7 bits (1617.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-276] Checking task 543a7ed5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 20908.3 = 20923.9
DL output with Mo: L = 15.6 + 57983.0 = 57998.6
DL input+output M: L = 31.2 + 78891.3 = 78922.6

# learning a model for train pairs
2.000	
1.588	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.249	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.940	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.774	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.629	OUT OBJECT at ^.layer_00: ^.layer_0
0.495	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.369	OUT OBJECT at ^.layer_010: ^.layer_01
0.286	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.258	OUT OBJECT at ^.layer_0110: ^.layer_011
0.242	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 2926.5 = 3039.7
DL output with Mo: L = 165.0 + 5442.6 = 5607.6
DL input+output M: L = 278.3 + 8369.0 = 8647.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Full at (10,5)
  _01: a rectangle with size (5,4) and color pink and mask Border at (2,8)
  _011: a rectangle with size (2,2) and color pink and mask Full (and Border) at (4,3)
diff: 
delta:
   (138.4 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (4,4) and color pink and mask Full at (10,5)
  _0: a rectangle with size (7,6) and color green and mask Border at (1,7)
  _010: a rectangle with size (5,4) and color pink and mask Border at (2,8)
  _01: a rectangle with size (6,6) and color green and mask Full at (9,4)
  _0110: a rectangle with size (2,2) and color pink and mask Full (and Border) at (4,3)
  _011: a rectangle with size (4,4) and color green and mask Full at (3,2)
  _0111: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (3,9)
diff: 
delta:
   (180.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Full at (10,5)
  _01: a rectangle with size (5,4) and color pink and mask Border at (2,8)
  _011: a rectangle with size (2,2) and color pink and mask Full (and Border) at (4,3)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 543a7ed5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (6,6) and color pink and mask Border at (8,8)
  _01: a rectangle with size (3,3) and color pink and mask Full at (1,8)
  _011: a rectangle with size (4,4) and color pink and mask xxxx|x.xx|x.xx|xxxx at (3,2)
diff: 
delta:
   (154.2 bits)
data: a background with size (15,15) and color cyan and layers
  _00: a rectangle with size (6,6) and color pink and mask Border at (8,8)
  _0: a rectangle with size (15,14) and color green and mask ......xxxxx...|......x...x...|xxxxxxx...x...|x....xx...x...|x....xxxxxx...|x....x........|x....x........|xxxxxxxxxxxxxx|......x......x|......x......x|......x......x|......x......x|......x......x|......x......x|......xxxxxxxx at (0,1)
  _010: a rectangle with size (3,3) and color pink and mask Full at (1,8)
  _01: a rectangle with size (1,4) and color pink and mask Full at (3,2)
  _0110: a rectangle with size (4,4) and color pink and mask xxxx|x.xx|x.xx|xxxx at (3,2)
  _011: a rectangle with size (4,4) and color yellow and mask Full at (9,9)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (4,3)
diff: 
delta:
   (364.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (6,6) and color pink and mask Border at (8,8)
  _01: a rectangle with size (4,4) and color pink and mask xxxx|x.xx|x.xx|xxxx at (3,2)
  _011: a rectangle with size (3,3) and color pink and mask Full at (1,8)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 543a7ed5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (3,7) and color pink and mask xxxxxxx|xx..xxx|xxxxxxx at (11,4)
  _01: a rectangle with size (6,3) and color pink and mask xxx|xxx|x.x|x.x|x.x|xxx at (2,9)
  _011: a rectangle with size (4,4) and color pink and mask Border at (3,2)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TEST 543a7ed5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 5442.6 bits (5442.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-275] Checking task 54d82841.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6687.1 = 6702.7
DL output with Mo: L = 15.6 + 7882.9 = 7898.5
DL input+output M: L = 31.2 + 14570.0 = 14601.2

# learning a model for train pairs
2.000	
1.632	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.178	OUT OBJECT at ^.layer_0: ^.layer_0
0.963	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.654	OUT OBJECT at ^.layer_00: ^.layer_00
0.588	OUT DEF: ^.size=^.size
0.547	IN  DEF: ^.layer_0.shape.mask=xxx|x.x
0.513	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.492	OUT DEF: ^.layer_01.shape.color=yellow
0.474	OUT DEF: ^.layer_01.pos.j=2
0.458	OUT DEF: ^.layer_01.pos.i=^.size.i - 1
0.446	IN  DEF: ^.color=black
0.437	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_00
  _0: ^.layer_0
  _01: a point with color yellow at (^.size.i - 1,2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask xxx|x.x at (?,?)

DL input  with Mi: L = 86.7 + 2351.2 = 2437.9
DL output with Mo: L = 62.7 + 516.4 = 579.0
DL input+output M: L = 149.4 + 2867.5 = 3016.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta:
   (84.5 bits)
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
  _01: a point with color yellow at (7,2)
diff: 
delta: (7,6)=4 
   (26.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _00: a rectangle with size (2,3) and color pink and mask Full (and Border) at (0,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,5)
diff: 
delta: (1,2)=0 
! 2 wrong pixels (generated / expected)

TRAIN 54d82841.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (0,1)
diff: 
delta:
   (69.6 bits)
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (0,1)
  _01: a point with color yellow at (4,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (0,1)
diff: 
delta:
correct output grid

TRAIN 54d82841.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta:
   (81.0 bits)
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
  _01: a point with color yellow at (4,2)
diff: 
delta: (4,5)=4 
   (25.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,3) and color cyan and mask Full (and Border) at (1,1)
  _0: a rectangle with size (2,3) and color pink and mask xxx|x.x at (2,4)
diff: 
delta: (2,2)=0 
! 2 wrong pixels (generated / expected)

TRAIN 54d82841.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _00: a rectangle with size (2,3) and color grey and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color cyan and mask xxx|x.x at (1,5)
diff: 
delta: (2,8)=3  (2,9)=3  (2,10)=3  (3,8)=3  (3,10)=3 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,11) and color black and layers
  _00: a rectangle with size (2,3) and color grey and mask xxx|x.x at (0,1)
  _0: a rectangle with size (2,3) and color green and mask xxx|x.x at (2,8)
diff: 
delta: (1,5)=8  (1,6)=8  (1,7)=8  (2,5)=8  (2,7)=8 
! 7 wrong pixels (generated / expected)

TEST 54d82841.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 516.4 bits (516.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-274] Checking task 54d9e175.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14490.8 = 14506.4
DL output with Mo: L = 15.6 + 29352.4 = 29368.0
DL input+output M: L = 31.2 + 43843.2 = 43874.4

# learning a model for train pairs
2.000	
1.599	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.353	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.129	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.997	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.911	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.875	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.837	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.813	OUT DEF: ^.size=^.size
0.791	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.767	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 120.6 + 6660.8 = 6781.4
DL output with Mo: L = 170.9 + 8635.1 = 8806.0
DL input+output M: L = 291.5 + 15296.0 = 15587.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,1)
  _0111: a point with color red at (1,5)
diff: 
delta: (1,9)=1 
   (132.1 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,8)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (154.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color blue at (1,1)
  _0111: a point with color red at (1,5)
diff: 
delta: (1,9)=1 
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,1)
  _0111: a point with color green at (1,5)
diff: 
delta: (1,9)=1 
   (132.1 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,8)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (154.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color red at (1,1)
  _0111: a point with color green at (1,5)
diff: 
delta: (1,9)=1 
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,1)
  _0111: a point with color blue at (1,5)
diff: 
delta: (1,9)=4 
   (132.1 bits)
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color brown and mask Full at (0,8)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01111: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta:
   (154.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a point with color green at (1,1)
  _0111: a point with color blue at (1,5)
diff: 
delta: (1,9)=4 
! 33 wrong pixels (generated / expected)

TRAIN 54d9e175.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (1,9)
diff: 
delta: (5,1)=2  (5,5)=3  (5,9)=4 
   (269.8 bits)
data: a background with size (7,11) and color grey and layers
  _0: a rectangle with size (3,3) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color pink and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color orange and mask Full at (0,8)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (4,0)
  _01111: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
diff: 
delta: (4,8)=9# (4,9)=9# (4,10)=9# (5,8)=9# (5,9)=9# (5,10)=9# (6,8)=9# (6,9)=9# (6,10)=9#
   (400.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
  _011: a point with color blue at (1,5)
  _0111: a point with color red at (1,9)
diff: 
delta: (5,1)=2  (5,5)=3  (5,9)=4 
! 77 wrong pixels (generated / expected)

TRAIN 54d9e175.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,11) and color black and layers
  _0: a rectangle with size (7,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _011: a point with color green at (1,5)
  _0111: a point with color yellow at (1,9)
diff: 
delta: (5,1)=1  (5,5)=1  (5,9)=3 
! 77 wrong pixels (generated / expected)

TEST 54d9e175.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.6 sec (23.6 sec/task)
bits-train-error = 8635.1 bits (8635.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-273] Checking task 5521c0d9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22923.1 = 22938.7
DL output with Mo: L = 15.6 + 22923.1 = 22938.7
DL input+output M: L = 31.2 + 45846.3 = 45877.5

# learning a model for train pairs
2.000	
1.522	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.014	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.807	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.571	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
0.426	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.255	OUT OBJECT at ^.layer_011: ^.layer_011.shape at (?,?)
0.225	OUT DEF: ^.size=^.size
0.217	OUT DEF: ^.layer_011.pos.j=^.layer_011.pos.j
0.209	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.201	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.193	IN  DEF: ^.layer_0.shape.color=yellow
0.186	IN  DEF: ^.layer_01.shape.color=red
0.179	IN  DEF: ^.layer_011.shape.color=blue
0.172	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i - ^.layer_0.shape.size.i
0.164	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i - ^.layer_01.shape.size.i
0.157	OUT DEF: ^.layer_011.pos.i=^.layer_011.pos.i - ^.layer_011.shape.size.i
0.153	IN  DEF: ^.layer_0.shape.mask=Full
0.148	IN  DEF: ^.layer_01.shape.mask=Full
0.144	IN  DEF: ^.layer_011.shape.mask=Full
0.141	IN  DEF: ^.color=black
0.138	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i - ^.layer_0.shape.size.i,^.layer_0.pos.j)
  _01: ^.layer_01.shape at (^.layer_01.pos.i - ^.layer_01.shape.size.i,^.layer_01.pos.j)
  _011: ^.layer_011.shape at (^.layer_011.pos.i - ^.layer_011.shape.size.i,^.layer_011.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 119.4 + 2917.1 = 3036.5
DL output with Mo: L = 117.9 + 0.0 = 117.9
DL input+output M: L = 237.3 + 2917.1 = 3154.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (11,9)
  _01: a rectangle with size (2,4) and color red and mask Full at (13,4)
  _011: a rectangle with size (4,2) and color blue and mask Full at (11,1)
diff: 
delta:
   (99.6 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (7,9)
  _01: a rectangle with size (2,4) and color red and mask Full at (11,4)
  _011: a rectangle with size (4,2) and color blue and mask Full at (7,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (11,9)
  _01: a rectangle with size (2,4) and color red and mask Full at (13,4)
  _011: a rectangle with size (4,2) and color blue and mask Full at (11,1)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask Full at (9,1)
  _01: a rectangle with size (5,2) and color red and mask Full at (10,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta:
   (99.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (5,2) and color red and mask Full at (5,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (11,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,4) and color yellow and mask Full at (9,1)
  _01: a rectangle with size (5,2) and color red and mask Full at (10,11)
  _011: a rectangle with size (2,2) and color blue and mask Full at (13,7)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (12,11)
  _01: a rectangle with size (1,4) and color red and mask Full at (14,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (11,7)
diff: 
delta:
   (92.7 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (9,11)
  _01: a rectangle with size (1,4) and color red and mask Full at (13,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full at (12,11)
  _01: a rectangle with size (1,4) and color red and mask Full at (14,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (11,7)
diff: 
delta:
correct output grid

TRAIN 5521c0d9.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,3) and color yellow and mask Full at (9,5)
  _01: a rectangle with size (7,4) and color red and mask Full at (8,0)
  _011: a rectangle with size (3,5) and color blue and mask Full at (12,10)
diff: 
delta:
correct output grid

TEST 5521c0d9.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-272] Checking task 5582e5ca.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4683.1 = 4698.8
DL output with Mo: L = 15.6 + 658.5 = 674.1
DL input+output M: L = 31.2 + 5341.6 = 5372.8

# learning a model for train pairs
2.000	
1.413	OUT DEF: ^.size=^.size
1.014	OUT DEF: ^.color=^.color
0.903	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.765	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.706	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.684	IN  DEF: ^.layer_0.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 120.6 + 3029.8 = 3150.4
DL output with Mo: L = 9.3 + 0.0 = 9.3
DL input+output M: L = 129.9 + 3029.8 = 3159.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
  _011: a point with color cyan at (0,2)
  _0111: a point with color black at (2,2)
diff: 
delta:
   (102.7 bits)
data: a background with size (3,3) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
  _011: a point with color cyan at (0,2)
  _0111: a point with color black at (2,2)
diff: 
delta:
correct output grid

TRAIN 5582e5ca.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (1,0)
  _011: a point with color pink at (0,0)
  _0111: a point with color yellow at (2,1)
diff: 
delta:
   (97.6 bits)
data: a background with size (3,3) and color brown and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (1,0)
  _011: a point with color pink at (0,0)
  _0111: a point with color yellow at (2,1)
diff: 
delta:
correct output grid

TRAIN 5582e5ca.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,0)
  _011: a point with color brown at (0,2)
  _0111: a point with color blue at (1,2)
diff: 
delta:
   (102.7 bits)
data: a background with size (3,3) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,0)
  _011: a point with color brown at (0,2)
  _0111: a point with color blue at (1,2)
diff: 
delta:
correct output grid

TRAIN 5582e5ca.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,1)
  _011: a point with color brown at (1,2)
  _0111: a point with color green at (2,1)
diff: 
delta: (2,2)=0 
correct output grid

TEST 5582e5ca.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-271] Checking task 5614dbcf.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 17854.4 = 17870.0
DL output with Mo: L = 15.6 + 1891.9 = 1907.5
DL input+output M: L = 31.2 + 19746.2 = 19777.5

# learning a model for train pairs
2.000	
1.790	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.607	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.471	OUT DEF: ^.size=^.layer_0.shape.size
1.382	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.292	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.203	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.122	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.035	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.962	OUT DEF: ^.layer_0.pos=min(^.layer_0.pos, ^.layer_011.pos)
0.903	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.844	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.813	OUT DEF: ^.layer_01.pos.j=center(^.layer_0111)
0.782	OUT DEF: ^.layer_01.pos.i=middle(^.layer_01) / 3
0.756	OUT DEF: ^.color=black
0.747	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.741	IN  DEF: ^.layer_011111.shape.color=grey
0.736	IN  DEF: ^.layer_011.shape.mask=Full
0.729	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.723	IN  DEF: ^.layer_0111111.shape.color=grey
0.717	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.711	IN  DEF: ^.layer_01111111.shape.color=grey
0.707	IN  DEF: ^.layer_0.shape.mask=Full
0.704	IN  DEF: ^.layer_0111.shape.mask=Full
0.700	IN  DEF: ^.layer_01111.shape.mask=Full
0.697	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at min(^.layer_0.pos, ^.layer_011.pos)
  _01: a point with color ^.layer_01.shape.color at (middle(^.layer_01) / 3,center(^.layer_0111))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a point with color grey at (?,?)
  _0111111: a point with color grey at (?,?)
  _01111111: a point with color grey at (?,?)

DL input  with Mi: L = 240.9 + 4756.4 = 4997.4
DL output with Mo: L = 113.7 + 682.7 = 796.4
DL input+output M: L = 354.6 + 5439.1 = 5793.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Border at (0,6)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,3)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (6,0)
  _01111: a rectangle with size (3,3) and color brown and mask Full at (6,6)
  _011111: a point with color grey at (1,7)
  _0111111: a point with color grey at (6,5)
  _01111111: a point with color grey at (8,4)
diff: 
delta: (3,4)=5# (8,1)=5# (8,8)=5#
   (283.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color cyan at (0,2)
diff: 
delta: (1,1)=7# (2,0)=6  (2,2)=9#
   (68.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Border at (0,6)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,3)
  _0111: a rectangle with size (3,3) and color pink and mask Full at (6,0)
  _01111: a rectangle with size (3,3) and color brown and mask Full at (6,6)
  _011111: a point with color grey at (1,7)
  _0111111: a point with color grey at (6,5)
  _01111111: a point with color grey at (8,4)
diff: 
delta: (3,4)=5# (8,1)=5# (8,8)=5#
! 3 wrong pixels (generated / expected)

TRAIN 5614dbcf.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask xxx|xx.|xxx at (6,3)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (3,0)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,3)
  _011111: a point with color grey at (4,7)
  _0111111: a point with color grey at (6,1)
  _01111111: a point with color grey at (7,5)
diff: 
delta:
   (191.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color orange at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask xxx|xx.|xxx at (6,3)
  _011: a rectangle with size (1,1) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (3,0)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (4,3)
  _011111: a point with color grey at (4,7)
  _0111111: a point with color grey at (6,1)
  _01111111: a point with color grey at (7,5)
diff: 
delta:
correct output grid

TRAIN 5614dbcf.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (0,0)
  _011: a rectangle with size (3,3) and color brown and mask Full at (6,3)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,7)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (1,0)
  _011111: a point with color grey at (2,4)
  _0111111: a point with color grey at (3,7)
  _01111111: a point with color grey at (6,2)
diff: 
delta: (7,4)=5#
! 3 wrong pixels (generated / expected)

TEST 5614dbcf.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.5 sec (11.5 sec/task)
bits-train-error = 682.7 bits (682.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-270] Checking task 56dc2b01.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11188.9 = 11204.5
DL output with Mo: L = 15.6 + 14648.7 = 14664.3
DL input+output M: L = 31.2 + 25837.6 = 25868.9

# learning a model for train pairs
2.000	
1.524	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.075	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.841	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.603	OUT OBJECT at ^.layer_01: ^.layer_01
0.424	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.384	OUT DEF: ^.size=^.size
0.362	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size
0.341	OUT DEF: ^.layer_0.pos=^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
0.326	IN  DEF: ^.layer_0.shape.color=green
0.311	IN  DEF: ^.layer_01.shape.color=red
0.300	OUT DEF: ^.layer_011.shape.color=cyan
0.290	OUT DEF: ^.layer_011.pos.j=^.layer_01.pos.j / 2
0.281	IN  DEF: ^.layer_01.shape.mask=Full
0.275	OUT DEF: ^.layer_011.shape.mask=Full
0.268	IN  DEF: ^.color=black
0.263	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_01.shape.size and color cyan and mask Full at (?,^.layer_01.pos.j / 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 85.0 + 2647.7 = 2732.7
DL output with Mo: L = 107.4 + 171.4 = 278.8
DL input+output M: L = 192.4 + 2819.1 = 3011.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
diff: 
delta:
   (87.4 bits)
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,6)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
  _011: a rectangle with size (4,1) and color cyan and mask Full at (0,5)
diff: 
delta:
   (4.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,16) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|xx..|.xxx at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,10)
diff: 
delta:
correct output grid

TRAIN 56dc2b01.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta:
   (94.7 bits)
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (10,0)
diff: 
delta:
   (6.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask xx...|x....|xx.xx|.xxx. at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (4,1)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta: (1,0)=3  (1,1)=3  (2,0)=3  (3,0)=3  (3,1)=3  (3,3)=3  (3,4)=3 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (1,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (15,0)
diff: 
delta: (1,1)=3  (3,1)=3  (3,3)=3  (3,4)=3  (4,1)=3  (4,2)=3  (4,3)=3 
! 19 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta:
   (82.6 bits)
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (4,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (7,0)
diff: 
delta:
   (6.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (3,0)
  _01: a rectangle with size (3,4) and color green and mask xxxx|x..x|xx.x at (11,0)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 45 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,5) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask Full at (11,0)
  _01: a rectangle with size (1,5) and color red and mask Full at (3,0)
diff: 
delta: (12,1)=0  (12,2)=0  (13,2)=0 
! 13 wrong pixels (generated / expected)

TRAIN 56dc2b01.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask .xx|x.x|xxx|x.. at (0,11)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (4,3) and color green and mask .xx|x.x|xxx|x.. at (0,11)
diff:   ^.layer_01.shape.mask  ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,18) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask Full at (0,11)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,4)
diff: 
delta: (0,11)=0  (1,12)=0  (3,12)=0  (3,13)=0 
! 12 wrong pixels (generated / expected)

TEST 56dc2b01.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 171.4 bits (171.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-269] Checking task 56ff96f3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3965.4 = 3981.0
DL output with Mo: L = 15.6 + 24626.3 = 24641.9
DL input+output M: L = 31.2 + 28591.7 = 28622.9

# learning a model for train pairs
2.000	
1.329	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.245	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.156	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.124	OUT DEF: ^.size=^.size
1.099	IN  DEF: ^.color=black
1.077	OUT DEF: ^.layer_0.shape.size=span(^.layer_0.pos, ^.layer_01.pos)
1.059	OUT DEF: ^.layer_0.pos=min(^.layer_0.pos, ^.layer_01.pos)
1.050	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.045	OUT DEF: ^.layer_0.shape.mask=Full
1.041	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) and color ^.layer_0.shape.color and mask Full at min(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 3136.9 = 3192.7
DL output with Mo: L = 83.9 + 5802.9 = 5886.8
DL input+output M: L = 139.7 + 8939.8 = 9079.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,1)
diff: 
delta: (5,3)=2  (7,7)=2 
   (106.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color blue and mask Full at (1,1)
diff: 
delta: (5,3)=2  (5,4)=2  (5,5)=2  (5,6)=2  (5,7)=2  (6,3)=2  (6,4)=2  (6,5)=2  (6,6)=2  (6,7)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2 
   (381.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,1)
diff: 
delta: (5,3)=2  (7,7)=2 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color red at (5,3)
diff: 
delta: (3,1)=1  (7,7)=2 
! 25 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,2)
diff: 
delta: (3,7)=7# (4,4)=7#
   (101.7 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask Full at (1,1)
diff: 
delta: (3,4)=7# (3,5)=7# (3,6)=7# (3,7)=7# (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7#
   (198.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta: (4,2)=3  (4,4)=7#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color black and layers
  _0: a point with color green at (1,1)
  _01: a point with color green at (4,2)
diff: 
delta: (3,7)=7# (4,4)=7#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  _0: a point with color orange at (3,7)
  _01: a point with color green at (1,1)
diff: 
delta: (4,2)=3  (4,4)=7#
! 23 wrong pixels (generated / expected)

TRAIN 56ff96f3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color yellow at (6,5)
diff: 
delta:
   (53.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color yellow at (6,5)
diff: 
delta:
correct output grid

TRAIN 56ff96f3.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (6,11) and color black and layers
  _0: a point with color orange at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta:
   (51.4 bits)
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (3,7) and color orange and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  _0: a point with color orange at (1,1)
  _01: a point with color orange at (3,7)
diff: 
delta:
correct output grid

TRAIN 56ff96f3.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color cyan at (1,2)
diff: 
delta: (4,5)=6  (7,1)=6 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color pink at (4,5)
diff: 
delta: (1,2)=8  (7,1)=6 
! 39 wrong pixels (generated / expected)

TEST 56ff96f3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 5802.9 bits (5802.9 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-268] Checking task 57aa92db.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18170.0 = 18185.6
DL output with Mo: L = 15.6 + 41734.3 = 41749.9
DL input+output M: L = 31.2 + 59904.3 = 59935.6

# learning a model for train pairs
2.000	
1.437	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.198	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.006	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.859	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.719	OUT OBJECT at ^.layer_01: ^.layer_0
0.616	OUT OBJECT at ^.layer_011: ^.layer_011
0.581	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.559	OUT DEF: ^.size=^.size
0.552	OUT DEF: ^.layer_0111.shape.size.i=^.layer_01.shape.size.i * 3
0.545	IN  DEF: ^.layer_01.shape.mask=Full
0.525	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.514	OUT OBJECT at ^.layer_00: ^.layer_0111
0.508	OUT DEF: ^.layer_0111.shape.size.j=^.layer_0.pos.j
0.502	IN  DEF: ^.color=black
0.497	OUT DEF: ^.layer_0.shape.size.i=max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j)
0.495	OUT DEF: ^.color=black
0.494	OUT DEF: ^.layer_0.shape.size.j=span(^.layer_011.pos.i, ^.layer_0111.pos.i) / 2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0111
  _0: a rectangle with size (max(^.layer_0.shape.size.j, ^.layer_011.shape.size.j),span(^.layer_011.pos.i, ^.layer_0111.pos.i) / 2) and color ? and mask ? at (?,?)
  _01: ^.layer_0
  _011: ^.layer_011
  _0111: a rectangle with size (^.layer_01.shape.size.i * 3,^.layer_0.pos.j) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 132.0 + 6954.5 = 7086.5
DL output with Mo: L = 232.0 + 4131.6 = 4363.6
DL input+output M: L = 364.0 + 11086.1 = 11450.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (9,7)
  _0111: a point with color blue at (2,4)
diff: 
delta:
   (141.0 bits)
data: a background with size (16,12) and color black and layers
  _00: a point with color blue at (2,4)
  _0: a rectangle with size (2,4) and color yellow and mask Full (and Border) at (9,3)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (9,7)
  _0111: a rectangle with size (6,2) and color yellow and mask Full (and Border) at (7,5)
diff: 
delta:
   (42.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (9,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (9,7)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
  _0111: a point with color blue at (2,4)
diff: 
delta:
! 41 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (9,7)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _011: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
  _0111: a point with color blue at (2,4)
diff: 
delta:
! 53 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask .x|xx|.x at (1,2)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (9,5)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (9,7)
  _0111: a point with color blue at (2,4)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN 57aa92db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
  _0111: a point with color red at (12,5)
diff: 
delta: (7,11)=6  (12,6)=3 
   (197.4 bits)
data: a background with size (16,18) and color black and layers
  _00: a point with color red at (12,5)
  _0: a rectangle with size (3,3) and color pink and mask ..x|xxx|..x at (6,11)
  _01: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
  _0111: a rectangle with size (3,3) and color green and mask ..x|xxx|..x at (11,6)
diff: 
delta: (2,2)=2 
   (95.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|..x at (1,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (7,10)
  _0111: a point with color red at (12,5)
diff: 
delta: (7,11)=6  (12,6)=3 
! 19 wrong pixels (generated / expected)

TRAIN 57aa92db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _0111: a point with color yellow at (3,3)
diff: 
delta:
   (152.5 bits)
data: a background with size (17,18) and color black and layers
  _00: a point with color yellow at (3,3)
  _0: a rectangle with size (3,1) and color blue and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _0111: a rectangle with size (9,9) and color cyan and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxx...xxx|xxx...xxx|xxx...xxx|xxx...xxx|xxx...xxx|xxx...xxx at (7,6)
diff: 
delta:
   (109.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _0111: a point with color yellow at (3,3)
diff: 
delta:
! 130 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _011: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _0111: a point with color yellow at (3,3)
diff: 
delta:
! 130 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (17,18) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (7,9)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (10,9)
  _0111: a point with color yellow at (3,3)
diff: 
delta:
! 87 wrong pixels (generated / expected)

TRAIN 57aa92db.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (9,6)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
  _0111: a point with color green at (2,4)
diff: 
delta: (2,5)=2  (4,14)=2 
   (204.6 bits)
data: a background with size (15,18) and color black and layers
  _00: a point with color green at (2,4)
  _0: a rectangle with size (3,1) and color green and mask Full at (1,5)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (9,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
  _0111: a rectangle with size (6,6) and color yellow and mask ....xx|....xx|xxxx..|xxxx..|....xx|....xx at (7,2)
diff: 
delta: (2,3)=3  (2,5)=2  (4,14)=2 
   (165.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (7,6)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
  _0111: a point with color green at (2,4)
diff: 
delta: (2,5)=2  (4,14)=2 
! 52 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (7,6)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
  _0111: a point with color red at (2,5)
diff: 
delta: (2,4)=3  (4,14)=2 
! 52 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (9,6)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (7,6)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (3,12)
  _0111: a point with color green at (2,4)
diff: 
delta: (2,5)=2  (4,14)=2 
! 52 wrong pixels (generated / expected)

TRAIN 57aa92db.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (4,4) and color red and mask Full at (7,25)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (3,10)
  _0111: a point with color cyan at (2,4)
diff: 
delta: (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,13)=1  (3,14)=1  (3,15)=1  (4,3)=8  (4,4)=8  (4,13)=1  (4,14)=1  (4,15)=1  (5,13)=1  (5,14)=1  (5,15)=1  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 326 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (4,4) and color red and mask Full at (7,25)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (3,10)
  _0111: a point with color cyan at (2,5)
diff: 
delta: (2,4)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,13)=1  (3,14)=1  (3,15)=1  (4,3)=8  (4,4)=8  (4,13)=1  (4,14)=1  (4,15)=1  (5,13)=1  (5,14)=1  (5,15)=1  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 326 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (7,21)
  _01: a rectangle with size (4,4) and color red and mask Full at (7,25)
  _011: a rectangle with size (3,3) and color blue and mask Full at (3,13)
  _0111: a point with color cyan at (2,4)
diff: 
delta: (2,5)=8  (3,3)=8  (3,4)=1  (3,5)=8  (3,10)=4  (3,11)=4  (3,12)=4  (4,3)=8  (4,4)=8  (4,10)=4  (4,11)=4  (4,12)=4  (5,10)=4  (5,11)=4  (5,12)=4  (10,6)=1  (10,7)=1  (11,6)=1  (11,7)=1  (12,6)=3  (12,7)=3  (13,6)=3  (13,7)=3 
! 326 wrong pixels (generated / expected)

TEST 57aa92db.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.0 sec (20.0 sec/task)
bits-train-error = 4131.6 bits (4131.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-267] Checking task 5ad4f10b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 96082.7 = 96098.3
DL output with Mo: L = 15.6 + 3082.9 = 3098.5
DL input+output M: L = 31.2 + 99165.5 = 99196.8

# learning a model for train pairs
2.000	
1.330	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.890	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.813	OUT DEF: ^.layer_0.pos='(0,0)
0.751	OUT DEF: ^.size.i=3
0.689	OUT DEF: ^.size.j=3
0.628	OUT DEF: ^.layer_0.shape.size.j=3
0.570	OUT DEF: ^.layer_0.shape.size.i=3
0.546	OUT DEF: ^.color=black
0.529	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.475	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.463	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.459	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.453	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.449	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.446	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.445	IN  DEF: ^.layer_01111.shape.mask=Full
0.444	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color ^.layer_0.shape.color and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 239.3 + 26962.4 = 27201.7
DL output with Mo: L = 57.4 + 441.4 = 498.7
DL input+output M: L = 296.7 + 27403.8 = 27700.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,24) and color black and layers
  _00: a rectangle with size (12,12) and color yellow and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxx....|....xxxx....|....xxxx....|....xxxx....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,3)
  _0: a rectangle with size (1,4) and color cyan and mask Full at (11,19)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,9)
  _011: a rectangle with size (2,3) and color cyan and mask ..x|xx. at (14,15)
  _0111: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,20)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (19,0)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (13,19)
diff: 
delta: (0,23)=8  (2,1)=8  (2,18)=8  (3,7)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,21)=0  (12,17)=8  (14,0)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
   (1002.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.x.|xxx at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,24) and color black and layers
  _00: a rectangle with size (12,12) and color yellow and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxx....|....xxxx....|....xxxx....|....xxxx....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,3)
  _0: a rectangle with size (1,4) and color cyan and mask Full at (11,19)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,9)
  _011: a rectangle with size (2,3) and color cyan and mask ..x|xx. at (14,15)
  _0111: a rectangle with size (3,2) and color cyan and mask Odd Checkboard at (1,20)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (19,0)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (13,19)
diff: 
delta: (0,23)=8  (2,1)=8  (2,18)=8  (3,7)=8  (5,17)=8  (8,15)=8  (8,18)=8  (9,11)=8  (9,23)=8  (10,15)=8  (11,21)=0  (12,17)=8  (14,0)=8  (17,12)=8  (17,16)=8  (17,20)=8  (17,22)=8  (19,3)=8  (19,5)=8  (19,10)=8  (19,18)=8 
! 3 wrong pixels (generated / expected)

TRAIN 5ad4f10b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,23) and color black and layers
  _00: a rectangle with size (9,9) and color blue and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx......|xxx......|xxx...... at (1,10)
  _0: a rectangle with size (2,5) and color red and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (3,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,15)
  _0111: a rectangle with size (1,2) and color red and mask Full at (12,4)
  _01111: a rectangle with size (2,1) and color red and mask Full at (1,5)
  _011111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,6)
diff: 
delta: (0,2)=2  (1,21)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,22)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
   (966.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,23) and color black and layers
  _00: a rectangle with size (9,9) and color blue and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx......|xxx......|xxx...... at (1,10)
  _0: a rectangle with size (2,5) and color red and mask Even Checkboard at (5,8)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (3,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (9,15)
  _0111: a rectangle with size (1,2) and color red and mask Full at (12,4)
  _01111: a rectangle with size (2,1) and color red and mask Full at (1,5)
  _011111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (8,6)
diff: 
delta: (0,2)=2  (1,21)=2  (4,20)=2  (5,18)=2  (6,1)=2  (8,22)=2  (10,0)=2  (10,12)=2  (10,21)=2  (11,15)=2  (12,10)=2  (13,19)=2  (14,9)=2  (14,15)=2  (15,11)=2  (15,19)=2  (17,10)=2  (20,7)=2  (20,10)=2  (20,13)=2  (21,4)=2  (21,11)=2 
! 5 wrong pixels (generated / expected)

TRAIN 5ad4f10b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,23) and color black and layers
  _00: a rectangle with size (15,15) and color pink and mask .....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (5,2)
  _0: a rectangle with size (2,1) and color green and mask Full at (10,3)
  _01: a rectangle with size (2,1) and color green and mask Full at (17,8)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color green and mask Full at (1,15)
  _011111: a rectangle with size (1,1) and color green and mask Full at (2,0)
diff: 
delta: (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (23,21)=3 
   (727.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|.xx|x.x at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,23) and color black and layers
  _00: a rectangle with size (15,15) and color pink and mask .....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|.....xxxxxxxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (5,2)
  _0: a rectangle with size (2,1) and color green and mask Full at (10,3)
  _01: a rectangle with size (2,1) and color green and mask Full at (17,8)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color green and mask Full at (1,6)
  _01111: a rectangle with size (1,1) and color green and mask Full at (1,15)
  _011111: a rectangle with size (1,1) and color green and mask Full at (2,0)
diff: 
delta: (3,4)=3  (3,13)=3  (4,10)=3  (6,21)=3  (8,15)=3  (12,18)=3  (12,22)=3  (15,19)=3  (23,21)=3 
! 4 wrong pixels (generated / expected)

TRAIN 5ad4f10b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,26) and color black and layers
  _00: a rectangle with size (12,12) and color cyan and mask xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|xxxx....xxxx|....xxxxxxxx|....xxxxxxxx|....xxxxxxxx|....xxxxxxxx|........xxxx|........xxxx|........xxxx|........xxxx at (4,2)
  _0: a rectangle with size (2,5) and color yellow and mask .x..x|x.xx. at (15,1)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (2,18)
  _011: a rectangle with size (4,2) and color yellow and mask Odd Checkboard at (15,16)
  _0111: a rectangle with size (2,3) and color yellow and mask Odd Checkboard at (6,21)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (9,15)
  _011111: a rectangle with size (3,2) and color yellow and mask x.|x.|.x at (11,1)
diff: 
delta: (0,21)=4  (1,3)=4  (1,10)=4  (1,23)=4  (2,8)=4  (2,13)=4  (3,4)=4  (3,9)=4  (3,12)=4  (4,19)=4  (7,14)=4  (9,24)=4  (12,4)=4  (12,9)=4  (13,25)=4  (14,0)=4  (14,8)=4  (14,19)=4  (15,19)=4  (15,25)=4  (16,9)=4  (16,11)=4  (18,4)=4  (18,13)=4  (18,21)=4  (18,25)=4  (19,8)=4  (19,11)=4  (21,11)=4  (21,14)=4  (21,15)=4  (21,20)=4 
! 4 wrong pixels (generated / expected)

TEST 5ad4f10b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 441.4 bits (441.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-266] Checking task 5bd6f4ac.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 29046.3 = 29061.9
DL output with Mo: L = 15.6 + 4886.9 = 4902.5
DL input+output M: L = 31.2 + 33933.1 = 33964.3

# learning a model for train pairs
2.000	
1.895	OUT DEF: ^.size=^.size / 3
1.829	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.762	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.692	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.641	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.610	OUT DEF: ^.layer_011.pos.j='0
1.583	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.553	OUT DEF: ^.layer_011.pos.i=^.layer_01.shape.size.j
1.525	OUT DEF: ^.layer_01.pos.i=^.layer_01.shape.size.i - 1
1.497	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j / 2
1.471	OUT DEF: ^.layer_0.pos.j=right(^.layer_01) / 2
1.451	OUT DEF: ^.color=black
1.447	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size / 3 and color black and layers
  _0: a point with color ? at (?,right(^.layer_01) / 2)
  _01: a point with color ? at (^.layer_01.shape.size.i - 1,^.layer_01.pos.j / 2)
  _011: a point with color ? at (^.layer_01.shape.size.j,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 26666.3 = 26746.6
DL output with Mo: L = 149.8 + 2433.2 = 2583.0
DL input+output M: L = 230.2 + 29099.5 = 29329.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full (and Border) at (2,0)
diff: 
delta: (0,0)=3  (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
   (792.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color yellow at (1,0)
  _011: a point with color yellow at (2,0)
diff: 
delta: (0,1)=7# (1,1)=8  (1,2)=4 
   (89.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
  _01: a rectangle with size (2,2) and color blue and mask Full (and Border) at (2,0)
diff: 
delta: (0,0)=3  (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (2,0)
  _01: a rectangle with size (3,3) and color orange and mask ..x|xx.|x.. at (3,4)
diff: 
delta: (0,0)=3  (0,3)=7# (0,6)=9# (0,7)=7# (1,0)=8  (1,1)=4  (1,3)=6  (1,4)=6  (1,6)=4  (1,7)=8  (1,8)=4  (2,1)=7# (2,6)=4  (3,3)=9# (3,4)=1  (5,0)=8  (5,3)=1  (5,6)=8  (5,7)=4  (6,1)=7# (6,3)=9# (6,4)=9# (6,5)=2  (6,6)=1  (7,6)=5# (8,3)=2  (8,4)=4  (8,6)=8 
! 7 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color orange and mask Full at (4,8)
  _01: a rectangle with size (2,2) and color orange and mask Even Checkboard at (1,3)
diff: 
delta: (0,0)=9# (0,7)=6  (1,1)=4  (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,5)=1  (2,6)=4  (2,7)=4  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
   (905.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (1,2)
  _01: a point with color cyan at (1,1)
  _011: a point with color yellow at (2,0)
diff: 
delta: (0,1)=6  (2,1)=4  (2,2)=5#
   (89.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color orange and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,7)=6  (1,1)=4  (1,3)=7# (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,6)
  _01: a rectangle with size (3,1) and color orange and mask Full at (4,8)
diff: 
delta: (0,0)=9# (0,7)=6  (1,1)=4  (1,3)=7# (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,4)=7# (2,5)=1  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,1) and color orange and mask Full at (4,8)
  _01: a rectangle with size (2,2) and color orange and mask Even Checkboard at (1,3)
diff: 
delta: (0,0)=9# (0,7)=6  (1,1)=4  (1,5)=5# (1,7)=8  (1,8)=1  (2,1)=2  (2,5)=1  (2,6)=4  (2,7)=4  (2,8)=5# (3,1)=6  (3,4)=4  (4,0)=8  (4,1)=3  (4,3)=4  (4,4)=2  (4,7)=9# (5,2)=2  (5,3)=3  (5,5)=2  (5,7)=6  (6,0)=4  (6,2)=4  (6,4)=3  (6,5)=4  (6,6)=7# (7,0)=7# (7,1)=1  (7,6)=3  (8,0)=3  (8,1)=2  (8,4)=4 
! 7 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
diff: 
delta: (0,4)=6  (1,3)=7# (1,6)=6  (1,8)=1  (2,1)=3  (2,5)=1  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
   (510.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color pink at (1,0)
  _011: a point with color brown at (2,0)
diff: 
delta: (1,2)=1 
   (44.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,4)=6  (1,3)=7# (1,6)=6  (1,8)=1  (2,1)=3  (2,5)=1  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (0,1)
diff: 
delta: (0,4)=6  (1,3)=7# (1,6)=6  (1,8)=1  (2,1)=3  (2,5)=1  (2,6)=9# (2,7)=4  (3,1)=7# (3,3)=6  (4,1)=9# (4,5)=1  (4,8)=8  (6,2)=4  (7,3)=1  (7,8)=4  (8,1)=5#
! 5 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
diff: 
delta: (0,1)=5# (0,8)=4  (1,6)=3  (2,4)=2  (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
   (457.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color yellow at (0,2)
  _011: a point with color green at (1,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
diff: 
delta: (0,4)=8  (0,8)=4  (1,6)=3  (2,4)=2  (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,4)
diff: 
delta: (0,1)=5# (0,8)=4  (1,6)=3  (2,4)=2  (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (3,0)
diff: 
delta: (0,4)=8  (0,8)=4  (1,6)=3  (2,4)=2  (2,5)=1  (2,8)=3  (3,6)=3  (4,3)=1  (5,7)=8  (7,2)=9# (7,3)=4  (8,0)=3  (8,2)=7# (8,5)=2  (8,8)=6 
! 5 wrong pixels (generated / expected)

TRAIN 5bd6f4ac.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask ...x|..x.|xx.. at (0,5)
  _01: a rectangle with size (2,2) and color brown and mask Full (and Border) at (7,0)
diff: 
delta: (0,0)=6  (0,1)=9# (0,4)=1  (0,6)=5# (0,7)=8  (1,0)=2  (1,1)=9# (1,3)=6  (1,5)=8  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,0)=7# (4,1)=7# (4,2)=4  (4,4)=7# (4,6)=9# (5,2)=7# (5,5)=1  (5,6)=5# (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,5)=5# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full (and Border) at (7,0)
  _01: a rectangle with size (3,4) and color brown and mask ...x|..x.|xx.. at (0,5)
diff: 
delta: (0,0)=6  (0,1)=9# (0,4)=1  (0,6)=5# (0,7)=8  (1,0)=2  (1,1)=9# (1,3)=6  (1,5)=8  (2,7)=2  (3,0)=9# (3,1)=2  (3,2)=6  (3,5)=8  (3,7)=6  (3,8)=8  (4,0)=7# (4,1)=7# (4,2)=4  (4,4)=7# (4,6)=9# (5,2)=7# (5,5)=1  (5,6)=5# (5,7)=7# (5,8)=4  (6,0)=4  (6,1)=1  (6,4)=7# (6,5)=5# (6,8)=9# (7,6)=1  (8,0)=4  (8,2)=2  (8,6)=8  (8,7)=4 
! 7 wrong pixels (generated / expected)

TEST 5bd6f4ac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.3 sec (5.3 sec/task)
bits-train-error = 2433.2 bits (2433.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-265] Checking task 5c0a986e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6837.2 = 6852.9
DL output with Mo: L = 15.6 + 12364.5 = 12380.1
DL input+output M: L = 31.2 + 19201.7 = 19232.9

# learning a model for train pairs
2.000	
1.695	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.379	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.076	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.760	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.711	OUT DEF: ^.size=^.size
0.687	IN  DEF: ^.layer_0.shape.color=red
0.662	IN  DEF: ^.layer_01.shape.color=blue
0.644	OUT DEF: ^.layer_01.shape.size.j=right(^.layer_01) + 1
0.616	OUT DEF: ^.layer_01.pos=^.layer_0.pos
0.598	OUT DEF: ^.layer_01.shape.size.i=right(^.layer_01) + 1
0.580	OUT DEF: ^.layer_0.shape.size.j=right(^.layer_01) + 1
0.562	OUT DEF: ^.layer_0.shape.size.i=right(^.layer_01) + 1
0.548	IN  DEF: ^.layer_0.shape.mask=Full
0.533	IN  DEF: ^.layer_01.shape.mask=Full
0.520	OUT DEF: ^.layer_0.pos.j='0
0.506	OUT DEF: ^.layer_0.shape.color=blue
0.493	OUT DEF: ^.layer_01.shape.color=red
0.482	IN  DEF: ^.color=black
0.476	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (right(^.layer_01) + 1,right(^.layer_01) + 1) and color blue and mask ? at (?,'0)
  _01: a rectangle with size (right(^.layer_01) + 1,right(^.layer_01) + 1) and color red and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask Full at (?,?)

DL input  with Mi: L = 85.0 + 1913.8 = 1998.8
DL output with Mo: L = 167.4 + 2113.3 = 2280.7
DL input+output M: L = 252.4 + 4027.1 = 4279.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta:
   (63.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x...|.x..|..xx|..xx at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xx..|xx..|..x.|...x at (6,4)
diff: 
delta:
   (49.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,4)
  _01: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full at (6,4)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 48 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (7,6)
diff: 
delta:
   (63.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......xx|......xx at (1,0)
  _01: a rectangle with size (8,8) and color red and mask xx......|xx......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,2)
diff: 
delta:
   (100.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (7,6)
diff: 
delta:
! 72 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (7,6)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 32 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (5,3)
diff: 
delta:
   (63.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...xx|...xx at (2,0)
  _01: a rectangle with size (5,5) and color red and mask xx...|xx...|..x..|...x.|....x at (2,5)
diff: 
delta:
   (61.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color blue and mask Full at (5,3)
diff: 
delta:
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color red and mask Full at (2,5)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 68 wrong pixels (generated / expected)

TRAIN 5c0a986e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (5,2)
  _01: a rectangle with size (2,2) and color blue and mask Full at (3,6)
diff: 
delta:
! 77 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (3,6)
  _01: a rectangle with size (2,2) and color red and mask Full at (5,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 40 wrong pixels (generated / expected)

TEST 5c0a986e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 2113.3 bits (2113.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-264] Checking task 5c2c9af4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3392.9 = 3408.5
DL output with Mo: L = 15.6 + 147047.5 = 147063.1
DL input+output M: L = 31.2 + 150440.5 = 150471.7

# learning a model for train pairs
2.000	
1.714	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.512	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.323	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.132	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.061	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 36.5 + 3129.1 = 3165.6
DL output with Mo: L = 176.9 + 19278.0 = 19454.8
DL input+output M: L = 213.4 + 22407.0 = 22620.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (2,11)
diff: 
delta: (5,14)=8  (8,17)=8 
   (104.3 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (18,21) and color cyan and mask x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|x....................|xxxxxxxxxxxxxxxxxxxxx at (0,2)
  _01: a rectangle with size (12,13) and color cyan and mask x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|x...........x|xxxxxxxxxxxxx at (0,8)
  _011: a rectangle with size (15,18) and color cyan and mask x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|x.................|xxxxxxxxxxxxxxxxxx at (0,5)
  _0111: a rectangle with size (7,7) and color cyan and mask Border at (2,11)
  _01111: a rectangle with size (1,23) and color cyan and mask Full at (20,0)
diff: 
delta: (5,14)=8 
   (728.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color cyan at (2,11)
diff: 
delta: (5,14)=8  (8,17)=8 
! size mismatch, 10x10 instead of 23x23

TRAIN 5c2c9af4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a point with color red at (11,13)
diff: 
delta: (13,11)=2  (15,9)=2 
   (104.3 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (17,17) and color red and mask Border at (5,3)
  _01: a rectangle with size (20,21) and color red and mask xxxxxxxxxxxxxxxxxxxxx|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x|x...................x at (3,1)
  _011: a rectangle with size (13,13) and color red and mask Border at (7,5)
  _0111: a rectangle with size (9,9) and color red and mask Border at (9,7)
  _01111: a rectangle with size (1,23) and color red and mask Full at (1,0)
diff: 
delta: (11,9)=2  (11,10)=2  (11,11)=2  (11,12)=2  (11,13)=2  (12,9)=2  (12,13)=2  (13,9)=2  (13,11)=2  (13,13)=2  (14,9)=2  (14,13)=2  (15,9)=2  (15,10)=2  (15,11)=2  (15,12)=2  (15,13)=2 
   (974.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color red at (11,13)
diff: 
delta: (13,11)=2  (15,9)=2 
! size mismatch, 10x10 instead of 23x23

TRAIN 5c2c9af4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a point with color green at (4,12)
diff: 
delta: (8,8)=3  (12,4)=3 
   (104.3 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (17,17) and color green and mask Border at (0,0)
  _01: a rectangle with size (9,9) and color green and mask Border at (4,4)
  _011: a rectangle with size (1,21) and color green and mask Full at (20,0)
  _0111: a rectangle with size (21,1) and color green and mask Full at (0,20)
  _01111: a rectangle with size (1,1) and color green and mask Full at (8,8)
diff: 
delta:
   (224.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a point with color green at (4,12)
diff: 
delta: (8,8)=3  (12,4)=3 
! size mismatch, 10x10 instead of 23x23

TRAIN 5c2c9af4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color black and layers
  _0: a point with color yellow at (12,7)
diff: 
delta: (18,13)=4  (24,19)=4 
! size mismatch, 10x10 instead of 28x28

TEST 5c2c9af4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.8 sec (23.8 sec/task)
bits-train-error = 19278.0 bits (19278.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-263] Checking task 5daaa586.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 62297.1 = 62312.7
DL output with Mo: L = 15.6 + 39507.8 = 39523.5
DL input+output M: L = 31.2 + 101804.9 = 101836.1

# learning a model for train pairs
2.000	
1.617	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.418	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.237	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.068	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.903	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.738	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.580	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.456	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.442	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.434	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.430	OUT DEF: ^.layer_01.pos.i='0
0.425	OUT DEF: ^.layer_011.shape.size.j=right(^.layer_01111) + 1
0.421	OUT DEF: ^.layer_0.pos.j=1
0.417	OUT DEF: ^.layer_01.pos='(0,0)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,1)
  _01: a rectangle with size (?,?) and color ? and mask ? at '(0,0)
  _011: a rectangle with size (?,right(^.layer_01111) + 1) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 208.5 + 16228.1 = 16436.6
DL output with Mo: L = 173.3 + 5870.3 = 6043.6
DL input+output M: L = 381.9 + 22098.3 = 22480.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (22,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (22,1) and color cyan and mask Full at (0,16)
  _011: a rectangle with size (1,22) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,22) and color red and mask Full at (15,0)
  _01111: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011111: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,18)
diff: 
delta: (0,9)=2  (5,15)=2  (6,3)=2  (7,9)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
   (608.8 bits)
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (11,10) and color red and mask .........x|.........x|...x.....x|...x....xx|...x....xx|...x....xx|...x....xx|.x.x....xx|.x.x....xx|xx.x....xx|xxxxxxxxxx at (4,1)
  _01: a rectangle with size (15,1) and color green and mask Full at (0,0)
  _011: a rectangle with size (15,1) and color cyan and mask Full at (0,11)
  _0111: a rectangle with size (1,10) and color blue and mask Full at (0,1)
diff: 
delta:
   (257.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (22,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (22,1) and color cyan and mask Full at (0,16)
  _011: a rectangle with size (1,22) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,22) and color red and mask Full at (15,0)
  _01111: a rectangle with size (2,1) and color red and mask Full at (4,0)
  _011111: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,18)
diff: 
delta: (0,9)=2  (5,15)=2  (6,3)=2  (7,9)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
! size mismatch, 10x10 instead of 15x12
>> Trial 2
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (22,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (22,1) and color cyan and mask Full at (0,16)
  _011: a rectangle with size (1,22) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (1,22) and color red and mask Full at (15,0)
  _01111: a rectangle with size (2,2) and color red and mask Even Checkboard at (6,18)
  _011111: a rectangle with size (2,1) and color red and mask Full at (4,0)
diff: 
delta: (0,9)=2  (5,15)=2  (6,3)=2  (7,9)=2  (8,14)=2  (12,3)=2  (12,7)=2  (12,14)=2  (14,6)=2  (16,8)=2  (17,0)=2  (21,0)=2  (21,20)=2 
! size mismatch, 10x10 instead of 15x12

TRAIN 5daaa586.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,12) and color pink and mask Full at (9,0)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,2)
  _0111: a rectangle with size (1,12) and color cyan and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (5,6)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (10,6)
diff: 
delta: (5,11)=8  (6,3)=8  (8,7)=8  (8,11)=8  (11,1)=8 
   (359.3 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (7,6) and color cyan and mask xxxxxx|x..xx.|x..xx.|x..xx.|x..xx.|....x.|....x. at (0,1)
  _01: a rectangle with size (7,1) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (1,7) and color pink and mask Full at (7,0)
  _0111: a rectangle with size (8,1) and color blue and mask Full at (0,7)
diff: 
delta:
   (174.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color blue and mask Full at (0,9)
  _01: a rectangle with size (1,12) and color pink and mask Full at (9,0)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,2)
  _0111: a rectangle with size (1,12) and color cyan and mask Full at (2,0)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (5,6)
  _011111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (10,6)
diff: 
delta: (5,11)=8  (6,3)=8  (8,7)=8  (8,11)=8  (11,1)=8 
! size mismatch, 10x10 instead of 8x8

TRAIN 5daaa586.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (14,3) and color yellow and mask .x.|.x.|.x.|.x.|xxx|.x.|.x.|.x.|xx.|xx.|.x.|xx.|.x.|.x. at (0,10)
  _01: a rectangle with size (14,1) and color green and mask Full at (0,3)
  _011: a rectangle with size (1,15) and color red and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color cyan and mask Full at (10,0)
  _01111: a rectangle with size (3,2) and color yellow and mask Even Checkboard at (1,5)
  _011111: a rectangle with size (1,2) and color yellow and mask Full at (6,4)
diff: 
delta: (0,2)=4  (0,7)=4  (4,14)=4  (6,0)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
   (654.7 bits)
data: a background with size (6,9) and color yellow and layers
  _0: a rectangle with size (3,7) and color black and mask xxxxxxx|xxxx...|xx..... at (2,1)
  _01: a rectangle with size (6,1) and color green and mask Full at (0,0)
  _011: a rectangle with size (1,7) and color red and mask Full at (0,1)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (5,1)
diff: 
delta:
   (154.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (14,3) and color yellow and mask .x.|.x.|.x.|.x.|xxx|.x.|.x.|.x.|xx.|xx.|.x.|xx.|.x.|.x. at (0,10)
  _01: a rectangle with size (14,1) and color green and mask Full at (0,3)
  _011: a rectangle with size (1,15) and color red and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color cyan and mask Full at (10,0)
  _01111: a rectangle with size (3,2) and color yellow and mask Even Checkboard at (1,5)
  _011111: a rectangle with size (1,2) and color yellow and mask Full at (6,4)
diff: 
delta: (0,2)=4  (0,7)=4  (4,14)=4  (6,0)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
! size mismatch, 10x10 instead of 6x9
>> Trial 2
data: a background with size (14,15) and color black and layers
  _0: a rectangle with size (14,3) and color yellow and mask .x.|.x.|.x.|.x.|xxx|.x.|.x.|.x.|xx.|xx.|.x.|xx.|.x.|.x. at (0,10)
  _01: a rectangle with size (14,1) and color green and mask Full at (0,3)
  _011: a rectangle with size (1,15) and color red and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color cyan and mask Full at (10,0)
  _01111: a rectangle with size (1,2) and color yellow and mask Full at (6,4)
  _011111: a rectangle with size (3,2) and color yellow and mask Even Checkboard at (1,5)
diff: 
delta: (0,2)=4  (0,7)=4  (4,14)=4  (6,0)=4  (6,7)=4  (8,0)=4  (8,8)=4  (9,0)=4  (9,6)=4  (11,14)=4  (12,4)=4  (12,7)=4  (13,2)=4  (13,9)=4 
! size mismatch, 10x10 instead of 6x9

TRAIN 5daaa586.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
  _0: a rectangle with size (1,15) and color cyan and mask Full at (13,0)
  _01: a rectangle with size (13,3) and color blue and mask x..|x..|x..|x..|x..|x..|x..|x..|x..|xx.|x.x|x..|x.. at (0,3)
  _011: a rectangle with size (16,1) and color red and mask Full at (0,12)
  _0111: a rectangle with size (1,15) and color green and mask Full at (2,0)
  _01111: a rectangle with size (2,2) and color blue and mask xx|x. at (14,3)
  _011111: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (7,9)
diff: 
delta: (0,5)=1  (0,9)=1  (1,7)=1  (3,0)=1  (4,5)=1  (4,10)=1  (5,0)=1  (6,8)=1  (6,14)=1  (9,1)=1  (10,7)=1  (11,1)=1  (15,6)=1 
! size mismatch, 10x10 instead of 12x10

TEST 5daaa586.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 5870.3 bits (5870.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-262] Checking task 60b61512.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6734.1 = 6749.7
DL output with Mo: L = 15.6 + 9459.2 = 9474.8
DL input+output M: L = 31.2 + 16193.3 = 16224.5

# learning a model for train pairs
2.000	
1.613	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.247	OUT OBJECT at ^.layer_0: ^.layer_0
0.966	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.678	OUT OBJECT at ^.layer_01: ^.layer_01
0.560	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.519	OUT DEF: ^.size=^.size
0.500	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.484	IN  DEF: ^.layer_0.shape.color=yellow
0.468	IN  DEF: ^.layer_01.shape.color=yellow
0.458	OUT DEF: ^.layer_011.shape.size.i=right(^.layer_0)
0.435	OUT DEF: ^.layer_0111.pos=^.layer_0.pos * 2
0.414	OUT DEF: ^.layer_011.pos=^.layer_01.shape.size + 2
0.402	OUT DEF: ^.layer_011.shape.color=orange
0.390	OUT DEF: ^.layer_0111.shape.color=orange
0.383	IN  DEF: ^.color=black
0.376	OUT DEF: ^.layer_011.shape.mask=Full
0.369	OUT DEF: ^.layer_0111.shape.mask=Full
0.362	OUT DEF: ^.layer_0111.shape.size.i=area(^.layer_01.shape) / 3
0.356	OUT DEF: ^.layer_0111.shape.size.j=area(^.layer_01.shape) / 3
0.351	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (right(^.layer_0),?) and color orange and mask Full at ^.layer_01.shape.size + 2
  _0111: a rectangle with size (area(^.layer_01.shape) / 3,area(^.layer_01.shape) / 3) and color orange and mask Full at ^.layer_0.pos * 2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 85.0 + 1885.8 = 1970.8
DL output with Mo: L = 171.1 + 384.1 = 555.2
DL input+output M: L = 256.1 + 2269.9 = 2526.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
diff: 
delta:
   (95.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
  _011: a rectangle with size (2,2) and color orange and mask Full at (5,5)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (2,0)
diff: 
delta: (4,7)=7#
   (31.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|x.x|..x at (1,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (4,5)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (2,0)=4  (2,2)=4  (3,2)=4 
! 13 wrong pixels (generated / expected)

TRAIN 60b61512.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta:
   (92.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
  _011: a rectangle with size (2,3) and color orange and mask Full at (5,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (2,0)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.xx|xxx at (1,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color yellow and mask xxx|.x.|.x. at (4,5)
diff: 
delta: (2,0)=0 
! 3 wrong pixels (generated / expected)

TRAIN 60b61512.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.. at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (6,5)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TEST 60b61512.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.4 sec (5.4 sec/task)
bits-train-error = 384.1 bits (384.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-261] Checking task 6150a2bd.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2553.8 = 2569.4
DL output with Mo: L = 15.6 + 2553.8 = 2569.4
DL input+output M: L = 31.2 + 5107.5 = 5138.7

# learning a model for train pairs
2.000	
1.790	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.428	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
1.325	OUT DEF: ^.size=^.size
1.263	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.156	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
1.089	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.977	OUT OBJECT at ^.layer_011: ^.layer_011.shape at (?,?)
0.948	OUT DEF: ^.layer_01.pos.j='0
0.920	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.j
0.892	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j + 1
0.837	OUT DEF: ^.layer_011.pos=translationOnto(^.layer_011, ^.layer_01) + 1
0.812	IN  DEF: ^.layer_0.shape.mask=Full
0.786	OUT DEF: ^.layer_0.pos=^.size - ^.layer_0.shape.size
0.767	IN  DEF: ^.color=black
0.747	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.size - ^.layer_0.shape.size
  _01: ^.layer_01.shape at (^.layer_01.pos.j,'0)
  _011: ^.layer_011.shape at translationOnto(^.layer_011, ^.layer_01) + 1
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 87.8 + 1494.2 = 1582.1
DL output with Mo: L = 103.6 + 234.2 = 337.8
DL input+output M: L = 191.4 + 1728.5 = 1919.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a point with color cyan at (0,2)
  _011: a point with color grey at (2,0)
diff: 
delta: (1,1)=7#
   (87.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,1)
  _01: a point with color cyan at (2,0)
  _011: a point with color grey at (0,2)
diff: 
delta: (1,1)=7#
   (23.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a point with color cyan at (0,2)
  _011: a point with color grey at (2,0)
diff: 
delta: (1,1)=7#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _01: a point with color grey at (2,0)
  _011: a point with color cyan at (0,2)
diff: 
delta: (1,1)=7#
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color cyan at (0,2)
  _011: a point with color green at (1,0)
diff: 
delta: (1,1)=7# (2,0)=5#
! 2 wrong pixels (generated / expected)

TRAIN 6150a2bd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
  _01: a point with color red at (0,2)
  _011: a point with color blue at (1,0)
diff: 
delta:
   (62.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (2,1)
  _01: a point with color red at (2,0)
  _011: a point with color blue at (1,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
  _01: a point with color red at (0,2)
  _011: a point with color blue at (1,0)
diff: 
delta:
correct output grid

TRAIN 6150a2bd.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: TranslationOnto: two objects overlap

TEST 6150a2bd.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 3.1 sec (3.1 sec/task)
bits-train-error = 234.2 bits (234.2 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-260] Checking task 623ea044.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1517.9 = 1533.5
DL output with Mo: L = 15.6 + 14521.7 = 14537.3
DL input+output M: L = 31.2 + 16039.7 = 16070.9

# learning a model for train pairs
2.000	
1.305	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.124	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.075	IN  DEF: ^.color=black
1.032	OUT DEF: ^.size=^.size
1.011	OUT DEF: ^.layer_0.shape.size.i=^.size.i
0.999	OUT DEF: ^.layer_0.pos.i='0
0.987	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.976	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.i - 3
0.971	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,?) and color ^.layer_0.shape.color and mask ? at ('0,^.layer_0.pos.i - 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 1145.2 = 1180.9
DL output with Mo: L = 69.2 + 2855.8 = 2925.0
DL input+output M: L = 104.9 + 4001.0 = 4105.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (3,3)
diff: 
delta:
   (40.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,15) and color red and mask x.....x........|.x...x.........|..x.x..........|...x...........|..x.x..........|.x...x.........|x.....x........|.......x.......|........x......|.........x.....|..........x....|...........x...|............x..|.............x.|..............x at (0,0)
diff: 
delta:
   (120.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (3,3)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN 623ea044.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (5,11)
diff: 
delta:
   (40.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,13) and color orange and mask ....x........|.....x.......|......x.....x|.......x...x.|........x.x..|.........x...|........x.x..|.......x...x.|......x.....x|.....x.......|....x........|...x.........|..x..........|.x...........|x............ at (0,2)
diff: 
delta:
   (115.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color orange at (5,11)
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN 623ea044.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta:
   (33.8 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,6) and color cyan and mask .....x|x...x.|.x.x..|..x...|.x.x..|x...x.|.....x at (0,0)
diff: 
delta:
   (50.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color cyan at (3,2)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 623ea044.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a point with color pink at (7,12)
diff: 
delta:
! 53 wrong pixels (generated / expected)

TEST 623ea044.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 2855.8 bits (2855.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-259] Checking task 62c24649.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4399.4 = 4415.0
DL output with Mo: L = 15.6 + 16914.9 = 16930.5
DL input+output M: L = 31.2 + 21314.3 = 21345.5

# learning a model for train pairs
2.000	
1.737	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.599	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.473	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.365	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.280	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.243	IN  DEF: ^.layer_0.shape.color=green
1.183	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.145	IN  DEF: ^.layer_01.shape.color=red
1.107	IN  DEF: ^.layer_011.shape.color=blue
1.077	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.037	OUT OBJECT at ^.layer_010: ^.layer_011
1.007	OUT DEF: ^.size=^.size * 2
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color green and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a point with color blue at (?,?)

DL input  with Mi: L = 107.9 + 2565.2 = 2673.1
DL output with Mo: L = 162.1 + 6629.8 = 6791.8
DL input+output M: L = 270.0 + 9195.0 = 9465.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _011: a point with color blue at (2,0)
diff: 
delta: (2,1)=1 
   (87.4 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (2,2)
  _010: a point with color blue at (2,0)
  _01: a rectangle with size (2,6) and color blue and mask Full (and Border) at (2,0)
  _011: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _0111: a rectangle with size (1,6) and color black and mask Full at (1,0)
diff: 
delta: (4,0)=0  (4,5)=0 
   (185.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _011: a point with color blue at (2,0)
diff: 
delta: (2,1)=1 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _011: a point with color blue at (2,1)
diff: 
delta: (2,0)=1 
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (2,0)
  _011: a point with color red at (1,1)
diff:   ^.layer_011.shape.color  ^.layer_01.shape.color
delta: (1,2)=2 
! 29 wrong pixels (generated / expected)

TRAIN 62c24649.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,1)
  _011: a point with color blue at (1,0)
diff: 
delta: (0,2)=1 
   (93.7 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (2,4) and color red and mask Full (and Border) at (2,1)
  _010: a point with color blue at (1,0)
  _01: a rectangle with size (2,6) and color black and mask Full (and Border) at (2,0)
  _011: a rectangle with size (4,2) and color black and mask Full (and Border) at (1,2)
  _0111: a rectangle with size (6,2) and color blue and mask Full (and Border) at (0,2)
diff: 
delta: (1,5)=1  (4,0)=1  (4,5)=1 
   (211.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,1)
  _011: a point with color blue at (0,2)
diff: 
delta: (1,0)=1 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,1)
  _011: a point with color blue at (1,0)
diff: 
delta: (0,2)=1 
! 28 wrong pixels (generated / expected)

TRAIN 62c24649.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,0)
  _011: a point with color blue at (0,1)
diff: 
delta:
   (75.5 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|x..x|x..x|.xx. at (1,1)
  _010: a point with color blue at (0,1)
  _01: a rectangle with size (1,4) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,4) and color red and mask Full at (4,1)
  _0111: a rectangle with size (6,1) and color blue and mask Full at (0,4)
diff: 
delta: (0,0)=2  (0,5)=2  (5,0)=2  (5,1)=1  (5,5)=2 
   (266.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,0)
  _011: a point with color blue at (0,1)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 62c24649.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _011: a point with color blue at (0,0)
diff: 
delta: (0,1)=1 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,0)
  _011: a point with color red at (1,2)
diff:   ^.layer_011.shape.color  ^.layer_01.shape.color
delta:
! 24 wrong pixels (generated / expected)

TEST 62c24649.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.8 sec (25.8 sec/task)
bits-train-error = 6629.8 bits (6629.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-258] Checking task 63613498.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 20126.0 = 20141.7
DL output with Mo: L = 15.6 + 20126.0 = 20141.7
DL input+output M: L = 31.2 + 40252.1 = 40283.3

# learning a model for train pairs
2.000	
1.821	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.560	OUT OBJECT at ^.layer_0: ^.layer_0
1.454	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.348	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.201	OUT OBJECT at ^.layer_011: ^.layer_01
1.106	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.963	OUT OBJECT at ^.layer_0111: ^.layer_011
0.867	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.777	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.628	OUT OBJECT at ^.layer_01111: ^.layer_01111
0.586	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.544	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.514	OUT DEF: ^.size=^.size
0.496	OUT DEF: ^.layer_011111.shape.size=^.layer_011111.shape.size
0.479	OUT DEF: ^.layer_011111.pos=^.layer_011111.pos
0.462	OUT DEF: ^.layer_01.shape.size=^.layer_0111.shape.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_0111.shape.size and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_01111
  _011111: a rectangle with size ^.layer_011111.shape.size and color ? and mask ? at ^.layer_011111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 208.5 + 7768.5 = 7977.0
DL output with Mo: L = 92.2 + 1243.1 = 1335.3
DL input+output M: L = 300.8 + 9011.5 = 9312.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _011: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0111: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
  _01111: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
  _011111: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
diff: 
delta:
   (286.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
  _011: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _01111: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
  _011111: a rectangle with size (3,3) and color grey and mask xx.|.xx|..x at (5,5)
diff: 
delta:
   (47.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _011: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0111: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
  _01111: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
  _011111: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,4) and color cyan and mask .x..|xxxx at (8,3)
  _011: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _0111: a rectangle with size (3,3) and color orange and mask +-cross at (0,6)
  _01111: a rectangle with size (2,3) and color orange and mask xxx|..x at (6,0)
  _011111: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (5,5)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN 63613498.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,0)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0111: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _011111: a rectangle with size (2,2) and color brown and mask .x|xx at (7,7)
diff: 
delta:
   (246.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,0)
  _0111: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _011111: a rectangle with size (2,2) and color grey and mask .x|xx at (7,7)
diff: 
delta:
   (37.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,0)
  _011: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _0111: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _011111: a rectangle with size (2,2) and color brown and mask .x|xx at (7,7)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,0)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (0,0)
  _0111: a rectangle with size (1,3) and color orange and mask Full at (6,2)
  _01111: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,6)
  _011111: a rectangle with size (2,2) and color brown and mask .x|xx at (7,7)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 63613498.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _011: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0111: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _01111: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _011111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (244.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color grey and mask .x.|xxx at (0,6)
  _011: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _0111: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _01111: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _011111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
   (39.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _011: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0111: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _01111: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _011111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _011: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _0111: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _01111: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _011111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (3,0)
  _01: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (0,0)
  _011: a rectangle with size (2,3) and color pink and mask xxx|.x. at (7,1)
  _0111: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,6)
  _01111: a rectangle with size (3,2) and color green and mask x.|xx|x. at (4,6)
  _011111: a rectangle with size (4,1) and color grey and mask Full at (0,3)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 63613498.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _011: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0111: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
  _01111: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (0,7)
  _011111: a rectangle with size (3,2) and color green and mask x.|x.|xx at (3,5)
diff: 
delta: (6,8)=4  (7,8)=4  (8,8)=4 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _011: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0111: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
  _01111: a rectangle with size (3,2) and color green and mask x.|x.|xx at (3,5)
  _011111: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (0,7)
diff: 
delta: (6,8)=4  (7,8)=4  (8,8)=4 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,3) and color red and mask xxx|..x at (1,0)
  _011: a rectangle with size (2,3) and color cyan and mask xxx|x.. at (6,0)
  _0111: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (0,7)
  _01111: a rectangle with size (2,3) and color orange and mask xxx|..x at (8,4)
  _011111: a rectangle with size (3,2) and color green and mask x.|x.|xx at (3,5)
diff: 
delta: (6,8)=4  (7,8)=4  (8,8)=4 
! 23 wrong pixels (generated / expected)

TEST 63613498.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.9 sec (26.9 sec/task)
bits-train-error = 1243.1 bits (1243.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-257] Checking task 6430c8c4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 19632.1 = 19647.7
DL output with Mo: L = 15.6 + 4880.9 = 4896.6
DL input+output M: L = 31.2 + 24513.0 = 24544.3

# learning a model for train pairs
2.000	
1.697	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.427	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.219	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.104	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size)
0.991	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.956	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.910	OUT DEF: ^.layer_0.shape.color=green
0.880	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.i - 1
0.851	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	OUT DEF: ^.layer_00.shape.color=green
0.777	OUT DEF: ^.layer_0.shape.size.j=span(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_01.shape.size.j
0.750	OUT DEF: ^.layer_00.shape.size.j=^.layer_0.pos.j + 1
0.722	OUT DEF: ^.layer_00.shape.mask=Full
0.700	OUT DEF: ^.layer_00.pos.i=span(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_01.shape.size.j
0.680	OUT DEF: ^.color=black
0.668	IN  DEF: ^.layer_0.shape.color=orange
0.663	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) and color black and layers
  _00: a rectangle with size (?,^.layer_0.pos.j + 1) and color green and mask Full at (span(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_01.shape.size.j,?)
  _0: a rectangle with size (?,span(^.layer_0.pos.i, ^.layer_011.pos.i) - ^.layer_01.shape.size.j) and color green and mask ? at (^.layer_0.pos.i,^.layer_01.shape.size.i - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.7 + 6933.8 = 7048.5
DL output with Mo: L = 279.9 + 1210.5 = 1490.4
DL input+output M: L = 394.6 + 8144.3 = 8538.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (139.8 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (1,0)
  _0: a rectangle with size (1,1) and color green and mask Full at (0,2)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xx.x|.xx.|.xxx|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (3,4) and color red and mask .x.x|xxx.|x..x at (6,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
diff: 
delta:
   (145.6 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (2,3)
  _0: a rectangle with size (3,2) and color green and mask .x|x.|x. at (0,0)
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _01: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..xx|..xx|.xx.|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,2)
  _01: a rectangle with size (4,4) and color red and mask x.x.|.x.x|.xx.|..x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (2,1)=7# (2,2)=7# (3,0)=7# (3,1)=7#
! 9 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
diff: 
delta: (8,3)=2 
   (165.0 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (2,2)
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (0,0)
diff: 
delta: (3,0)=3 
   (46.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
  _01: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (8,3)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
diff: 
delta: (8,3)=2 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color orange and mask ..x|xxx|x..|xxx at (0,1)
  _01: a rectangle with size (4,4) and color red and mask ..x.|.xxx|xx..|.x.. at (5,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (8,3)
diff: 
delta: (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4 
! 8 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (5,2)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
   (243.0 bits)
data: a background with size (4,4) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (3,2)
  _0: a rectangle with size (4,3) and color green and mask .x.|xx.|.x.|..x at (0,0)
diff: 
delta:
   (32.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (5,2)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,1) and color red and mask Full at (7,3)
diff: 
delta: (0,0)=7# (5,2)=2  (5,3)=2  (7,0)=2  (8,1)=2 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|..xx|x.xx|xx.. at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (5,2)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (0,0)=7# (7,0)=2  (7,3)=2  (8,1)=2  (8,3)=2 
! 6 wrong pixels (generated / expected)

TRAIN 6430c8c4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (2,4) and color red and mask x.xx|.x.. at (7,0)
diff: 
delta: (3,2)=7# (5,1)=2  (5,2)=2  (5,3)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _01: a rectangle with size (2,4) and color red and mask x.xx|.x.. at (7,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (3,2)=7# (5,1)=2  (5,2)=2  (5,3)=2 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask xxxx|.xxx|x...|x... at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,3) and color red and mask Full at (5,1)
diff: 
delta: (3,2)=7# (7,0)=2  (7,2)=2  (7,3)=2  (8,1)=2 
! 7 wrong pixels (generated / expected)

TEST 6430c8c4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.1 sec (8.1 sec/task)
bits-train-error = 1210.5 bits (1210.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-256] Checking task 6455b5f5.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 45251.9 = 45267.5
DL output with Mo: L = 15.6 + 123196.9 = 123212.5
DL input+output M: L = 31.2 + 168448.8 = 168480.0

# learning a model for train pairs
2.000	
1.195	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.647	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.289	OUT OBJECT at ^.layer_01: ^.layer_0
0.243	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.235	OUT DEF: ^.size=^.size
0.230	IN  DEF: ^.layer_0.shape.color=red
0.226	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.223	IN  DEF: ^.color=black
0.221	OUT DEF: ^.layer_011.pos.i='0
0.220	OUT DEF: ^.layer_011.shape.color=cyan
0.218	OUT DEF: ^.layer_0111.shape.color=blue
0.217	OUT DEF: ^.layer_0.shape.mask=Full
0.216	OUT DEF: ^.layer_011.shape.mask=Full
0.215	OUT DEF: ^.layer_0111.shape.mask=Full
0.214	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color cyan and mask Full at ('0,?)
  _0111: a rectangle with size (?,?) and color blue and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 8454.5 = 8504.8
DL output with Mo: L = 121.1 + 3064.8 = 3185.9
DL input+output M: L = 171.4 + 11519.3 = 11690.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
diff: 
delta:
   (257.8 bits)
data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (8,12)
  _01: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _0111: a rectangle with size (8,10) and color blue and mask Full at (10,3)
diff: 
delta:
   (69.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,13) and color black and layers
  _0: a rectangle with size (18,13) and color red and mask .x....x......|xx....x......|.x....x......|.x....xxxxxxx|.x....x..x...|.xxxxxx..x...|.x....x..x...|.x....xxxxxxx|.x....x....x.|xxxxxxxxxxxxx|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x..........|..x.......... at (0,0)
diff: 
delta:
! 85 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
diff: 
delta:
   (152.7 bits)
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (5,0)
  _01: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
  _011: a rectangle with size (1,8) and color cyan and mask Full at (0,5)
  _0111: a rectangle with size (9,8) and color blue and mask Full at (2,5)
diff: 
delta:
   (78.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,13) and color red and mask ....x........|....xxxxxxxxx|....x........|....x........|....x........|xxxxx........|....x........|....x........|....x........|....x........|....x........ at (0,0)
diff: 
delta:
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (11,1) and color red and mask Full at (0,4)
diff: 
delta: (1,5)=2  (1,6)=2  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=2  (1,11)=2  (1,12)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2 
! 96 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,13) and color black and layers
  _0: a rectangle with size (1,9) and color red and mask Full at (1,4)
diff: 
delta: (0,4)=2  (2,4)=2  (3,4)=2  (4,4)=2  (5,0)=2  (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2  (6,4)=2  (7,4)=2  (8,4)=2  (9,4)=2  (10,4)=2 
! 98 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
diff: 
delta:
   (193.9 bits)
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask Full at (8,8)
  _01: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
  _011: a rectangle with size (5,3) and color cyan and mask Full at (0,4)
  _0111: a rectangle with size (7,8) and color blue and mask Full at (0,8)
diff: 
delta:
   (80.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,16) and color black and layers
  _0: a rectangle with size (11,16) and color red and mask ...x...x........|...x...x........|...xxxxx........|...x...x........|...x...x........|xxxxxxxx........|.......x........|.......xxxxxxxxx|.......x..x.....|.......x..x.....|.......x..x..... at (0,0)
diff: 
delta:
! 78 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
diff: 
delta:
   (241.1 bits)
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (9,0)
  _01: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
  _011: a rectangle with size (2,3) and color cyan and mask Full at (0,13)
  _0111: a rectangle with size (10,9) and color blue and mask Full at (5,3)
diff: 
delta:
   (78.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (15,16) and color red and mask ...x........x...|...x........x...|...x........xxxx|...x........x...|xxxxxxxxxxxxx...|..x.........x...|..x.........x...|..x.........x...|..x.........x...|xxx.........x...|..x.........xxxx|..x.........x...|..x.........x...|..x.........x...|..x.........x... at (0,0)
diff: 
delta:
! 100 wrong pixels (generated / expected)

TRAIN 6455b5f5.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color red and mask ..........x.....|..........x.....|xxxxxxxxxxx.....|..........x.....|..........xxxxxx|..........x.....|..........x.....|..........x.....|..........x.....|xxxxxxxxxxxxxxxx|...x......x.x...|xxxx......x.x...|...x......x.x... at (0,0)
diff: 
delta:
! 73 wrong pixels (generated / expected)

TEST 6455b5f5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.9 sec (7.9 sec/task)
bits-train-error = 3064.8 bits (3064.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-255] Checking task 662c240a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 20225.7 = 20241.3
DL output with Mo: L = 15.6 + 4050.1 = 4065.7
DL input+output M: L = 31.2 + 24275.9 = 24307.1

# learning a model for train pairs
2.000	
1.585	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.407	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.252	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.131	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size)
1.030	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.921	OUT DEF: ^.layer_0.shape.size=min(^.layer_0.shape.size, ^.layer_01.shape.size)
0.847	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT DEF: ^.layer_0.pos=max(^.layer_01.pos, ^.layer_011.pos) - ^.layer_011.pos
0.776	IN  DEF: ^.layer_011.shape.mask=Full
0.769	IN  DEF: ^.layer_0111.shape.mask=Full
0.763	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
0.736	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) and color ? and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) and color ? and mask ? at max(^.layer_01.pos, ^.layer_011.pos) - ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 196.3 + 8911.6 = 9107.8
DL output with Mo: L = 140.8 + 1023.7 = 1164.6
DL input+output M: L = 337.1 + 9935.3 = 10272.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (6,0)
  _010: a point with color brown at (0,1)
  _01: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (3,0)
  _011: a rectangle with size (2,3) and color green and mask Full at (7,0)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (3,0)
  _01111: a rectangle with size (1,1) and color brown and mask Full at (1,0)
diff: 
delta:
   (199.5 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (0,0)
diff: 
delta:
   (24.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color yellow and mask xxx|xx. at (6,0)
  _010: a point with color brown at (0,1)
  _01: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (3,0)
  _011: a rectangle with size (2,3) and color green and mask Full at (7,0)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (3,0)
  _01111: a rectangle with size (1,1) and color brown and mask Full at (1,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask xxx|x..|x.. at (6,0)
  _010: a point with color blue at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (0,0)
  _0111: a rectangle with size (2,2) and color red and mask Full at (7,1)
  _01111: a rectangle with size (2,2) and color pink and mask x.|xx at (4,1)
diff: 
delta:
   (200.3 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color pink and mask x.|xx at (1,1)
diff: 
delta:
   (23.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask xxx|x..|x.. at (6,0)
  _010: a point with color blue at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,1)
  _011: a rectangle with size (2,2) and color red and mask Full at (7,1)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (0,0)
  _01111: a rectangle with size (2,2) and color pink and mask x.|xx at (4,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask xxx|x..|x.. at (6,0)
  _010: a point with color blue at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (0,0)
  _0111: a rectangle with size (2,2) and color red and mask Full at (7,1)
  _01111: a rectangle with size (2,2) and color pink and mask x.|xx at (4,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,3) and color green and layers
  _0: a rectangle with size (3,3) and color orange and mask xxx|x..|x.. at (6,0)
  _010: a point with color blue at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (7,1)
  _011: a rectangle with size (2,2) and color blue and mask Full at (1,1)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (0,0)
  _01111: a rectangle with size (2,2) and color pink and mask x.|xx at (4,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _010: a point with color green at (1,2)
  _01: a rectangle with size (3,2) and color cyan and mask Full (and Border) at (6,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (6,2)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (3,0)
  _01111: a rectangle with size (1,2) and color green and mask Full at (2,1)
diff: 
delta: (7,0)=1  (8,0)=1 
   (242.4 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,2) and color cyan and mask xx|.x|.x at (0,0)
diff: 
delta:
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _010: a point with color green at (1,2)
  _01: a rectangle with size (3,2) and color cyan and mask Full (and Border) at (6,0)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,0)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (6,2)
  _01111: a rectangle with size (1,2) and color green and mask Full at (2,1)
diff: 
delta: (7,0)=1  (8,0)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|.xx at (3,0)
  _010: a point with color green at (1,2)
  _01: a rectangle with size (3,2) and color cyan and mask Full (and Border) at (6,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (6,2)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (3,0)
  _01111: a rectangle with size (1,2) and color green and mask Full at (2,1)
diff: 
delta: (7,0)=1  (8,0)=1 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
  _010: a point with color cyan at (2,2)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|xx. at (3,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (3,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (5,2)
diff: 
delta: (6,0)=6  (8,2)=6 
   (249.0 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
diff: 
delta:
   (28.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|xx. at (0,0)
  _010: a point with color cyan at (2,2)
  _01: a rectangle with size (3,3) and color green and mask ..x|.xx|xx. at (3,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (3,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (5,2)
diff: 
delta: (6,0)=6  (8,2)=6 
! 9 wrong pixels (generated / expected)

TRAIN 662c240a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (3,0)
  _010: a point with color grey at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (7,1)
  _011: a rectangle with size (3,3) and color blue and mask Full at (6,0)
  _0111: a rectangle with size (3,3) and color red and mask Full at (3,0)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (3,0)
  _010: a point with color grey at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (7,1)
  _011: a rectangle with size (3,3) and color red and mask Full at (3,0)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (6,0)
  _01111: a rectangle with size (2,1) and color grey and mask Full at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TEST 662c240a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.2 sec (6.2 sec/task)
bits-train-error = 1023.7 bits (1023.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-254] Checking task 67385a82.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7392.5 = 7408.1
DL output with Mo: L = 15.6 + 7772.9 = 7788.5
DL input+output M: L = 31.2 + 15165.4 = 15196.6

# learning a model for train pairs
2.000	
1.499	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.166	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.088	OUT DEF: ^.size=^.size
1.042	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.995	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.971	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.938	OUT DEF: ^.layer_0.shape.size=^.layer_0.pos + 2
0.909	OUT DEF: ^.layer_0.shape.color=cyan
0.881	OUT DEF: ^.layer_011.shape.color=green
0.860	OUT DEF: ^.layer_011.pos.j=^.size.j - 1
0.840	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.i / 2
0.821	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.i / 2
0.802	OUT OBJECT at ^.layer_00: a point with color ? at (?,?)
0.781	OUT DEF: ^.layer_00.pos.j=^.layer_0.pos.j
0.768	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color ? at (?,^.layer_0.pos.j)
  _0: a rectangle with size ^.layer_0.pos + 2 and color cyan and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_0.shape.size.i / 2,^.layer_0.shape.size.i / 2) and color ? and mask ? at (?,?)
  _011: a point with color green at (?,^.size.j - 1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 3647.2 = 3696.1
DL output with Mo: L = 190.7 + 1906.9 = 2097.5
DL input+output M: L = 239.5 + 5554.1 = 5793.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|.x.|x.x at (0,0)
diff: 
delta:
   (56.8 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color cyan at (0,0)
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,0)
  _011: a point with color green at (2,2)
diff: 
delta:
   (39.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|.x.|x.x at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,1) and color black and mask Full at (0,2)
diff: 
delta: (1,0)=0  (2,1)=0 
! 7 wrong pixels (generated / expected)

TRAIN 67385a82.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask x...|xxx.|...x at (0,1)
diff: 
delta: (0,5)=3  (3,1)=3 
   (113.8 bits)
data: a background with size (4,6) and color black and layers
  _00: a point with color green at (3,1)
  _0: a rectangle with size (2,3) and color cyan and mask x..|xxx at (0,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,4)
  _011: a point with color green at (0,5)
diff: 
delta:
   (43.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask x...|xxx.|...x at (0,1)
diff: 
delta: (0,5)=3  (3,1)=3 
! 6 wrong pixels (generated / expected)

TRAIN 67385a82.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color green and layers
  _0: a rectangle with size (4,4) and color black and mask ..x.|..xx|.xx.|xx.. at (0,0)
diff: 
delta:
   (74.8 bits)
data: a background with size (4,4) and color black and layers
  _00: a point with color cyan at (2,0)
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,2)
  _011: a point with color green at (0,3)
diff: 
delta:
   (40.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color green and layers
  _0: a rectangle with size (4,4) and color black and mask ..x.|..xx|.xx.|xx.. at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color green and layers
  _0: a rectangle with size (3,1) and color black and mask Full at (0,2)
diff: 
delta: (1,3)=0  (2,1)=0  (3,0)=0  (3,1)=0 
! 12 wrong pixels (generated / expected)

TRAIN 67385a82.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|.x.|x..|.xx|.xx at (0,0)
diff: 
delta: (1,4)=3  (4,5)=3 
   (119.4 bits)
data: a background with size (5,6) and color black and layers
  _00: a point with color green at (2,0)
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (3,1)
  _011: a point with color green at (4,5)
diff: 
delta: (1,4)=3 
   (67.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask xx.|.x.|x..|.xx|.xx at (0,0)
diff: 
delta: (1,4)=3  (4,5)=3 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,1)
diff: 
delta: (0,0)=3  (0,1)=3  (1,1)=3  (1,4)=3  (2,0)=3  (4,5)=3 
! 9 wrong pixels (generated / expected)

TRAIN 67385a82.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (5,5) and color black and mask ...x.|...xx|xxxx.|x..xx|x..xx at (0,0)
diff: 
delta: (0,1)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,1)
diff: 
delta: (0,0)=3  (0,2)=3  (0,4)=3  (1,0)=3  (1,1)=3  (1,2)=3  (2,4)=3 
! 9 wrong pixels (generated / expected)

TEST 67385a82.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 1906.9 bits (1906.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-253] Checking task 673ef223.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10231.6 = 10247.2
DL output with Mo: L = 15.6 + 30221.8 = 30237.4
DL input+output M: L = 31.2 + 40453.4 = 40484.6

# learning a model for train pairs
2.000	
1.716	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.428	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.172	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.889	OUT OBJECT at ^.layer_00: ^.layer_0
0.768	OUT OBJECT at ^.layer_011: ^.layer_01
0.675	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.628	OUT DEF: ^.size=^.size
0.612	IN  DEF: ^.layer_0.shape.color=red
0.595	IN  DEF: ^.layer_01.shape.color=red
0.579	IN  DEF: ^.layer_011.shape.color=cyan
0.569	IN  DEF: ^.layer_0.shape.mask=Full
0.560	IN  DEF: ^.layer_01.shape.mask=Full
0.551	OUT DEF: ^.layer_0.shape.size.j=^.size.j - 1
0.543	IN  DEF: ^.color=black
0.537	OUT DEF: ^.layer_0111.pos.i=^.layer_011.pos.i
0.532	OUT DEF: ^.layer_0.shape.color=cyan
0.526	OUT DEF: ^.layer_01.shape.color=cyan
0.520	OUT DEF: ^.layer_01.pos.i=bottom(^.layer_01) - 1
0.516	OUT DEF: ^.layer_0.pos.j=min(^.layer_0.pos.i, ^.layer_01.pos.i) / 2
0.512	OUT DEF: ^.layer_01.pos.j=min(^.layer_0.pos.i, ^.layer_011.pos.i) / 2
0.509	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.505	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.502	OUT DEF: ^.layer_01.shape.size.i=1
0.499	OUT DEF: ^.layer_0111.shape.size.i=^.layer_011.pos.i / 2
0.496	OUT DEF: ^.layer_0.shape.size.i=^.layer_011.pos.i / 2
0.493	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (^.layer_011.pos.i / 2,^.size.j - 1) and color cyan and mask ^.layer_0.shape.mask at (?,min(^.layer_0.pos.i, ^.layer_01.pos.i) / 2)
  _01: a rectangle with size (1,?) and color cyan and mask ^.layer_01.shape.mask at (bottom(^.layer_01) - 1,min(^.layer_0.pos.i, ^.layer_011.pos.i) / 2)
  _011: ^.layer_01
  _0111: a rectangle with size (^.layer_011.pos.i / 2,?) and color ? and mask ? at (^.layer_011.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a point with color cyan at (?,?)

DL input  with Mi: L = 107.1 + 3247.6 = 3354.7
DL output with Mo: L = 300.5 + 4716.7 = 5017.2
DL input+output M: L = 407.6 + 7964.3 = 8371.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (3,4)
diff: 
delta:
   (78.1 bits)
data: a background with size (19,8) and color black and layers
  _00: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _0: a rectangle with size (1,7) and color cyan and mask Full at (13,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (3,4)
diff: 
delta:
   (30.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _011: a point with color cyan at (3,4)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,8) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (11,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (3,4)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 673ef223.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _011: a point with color cyan at (2,7)
diff: 
delta: (4,5)=8 
   (109.3 bits)
data: a background with size (20,10) and color black and layers
  _00: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _0: a rectangle with size (1,9) and color cyan and mask Full at (12,0)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (14,0)
  _011: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _0111: a rectangle with size (1,6) and color cyan and mask Full at (2,1)
diff: 
delta: (2,7)=4  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=4 
   (200.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _011: a point with color cyan at (2,7)
diff: 
delta: (4,5)=8 
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _011: a point with color cyan at (4,5)
diff: 
delta: (2,7)=8 
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (11,9)
  _01: a rectangle with size (5,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (2,7)
diff: 
delta: (4,5)=8 
! 37 wrong pixels (generated / expected)

TRAIN 673ef223.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _011: a point with color cyan at (4,6)
diff: 
delta: (5,2)=8  (7,4)=8 
   (137.4 bits)
data: a background with size (20,10) and color black and layers
  _00: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _0: a rectangle with size (2,9) and color cyan and mask Full at (14,1)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (17,1)
  _011: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _0111: a rectangle with size (2,6) and color cyan and mask ....xx|xxxxxx at (4,3)
diff: 
delta: (4,6)=4  (5,2)=4  (7,4)=4  (7,5)=8  (7,6)=8  (7,7)=8  (7,8)=8 
   (240.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _011: a point with color cyan at (4,6)
diff: 
delta: (5,2)=8  (7,4)=8 
! 62 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _01: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _011: a point with color cyan at (5,2)
diff: 
delta: (4,6)=8  (7,4)=8 
! 62 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (13,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (3,9)
  _011: a point with color cyan at (4,6)
diff: 
delta: (5,2)=8  (7,4)=8 
! 66 wrong pixels (generated / expected)

TRAIN 673ef223.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,12) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (14,11)
  _011: a point with color cyan at (2,8)
diff: 
delta: (3,7)=8  (5,4)=8 
! 61 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,12) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (6,1) and color red and mask Full at (14,11)
  _011: a point with color cyan at (3,7)
diff: 
delta: (2,8)=8  (5,4)=8 
! 61 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,12) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (14,11)
  _01: a rectangle with size (6,1) and color red and mask Full at (1,0)
  _011: a point with color cyan at (2,8)
diff: 
delta: (3,7)=8  (5,4)=8 
! 61 wrong pixels (generated / expected)

TEST 673ef223.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.1 sec (19.1 sec/task)
bits-train-error = 4716.7 bits (4716.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-252] Checking task 6773b310.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 53229.8 = 53245.4
DL output with Mo: L = 15.6 + 2903.4 = 2919.0
DL input+output M: L = 31.2 + 56133.2 = 56164.4

# learning a model for train pairs
2.000	
1.359	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.182	OUT DEF: ^.size=^.size / 3
1.014	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.927	IN  DEF: ^.layer_0.shape.mask=...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.849	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.773	OUT DEF: ^.layer_0.shape.color=blue
0.696	OUT DEF: ^.layer_01.shape.color=blue
0.644	OUT DEF: ^.layer_01.pos.j=2
0.599	OUT DEF: ^.layer_0.shape.mask=Full
0.565	OUT DEF: ^.color=black
0.553	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.511	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.i - 1
0.506	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.502	IN  DEF: ^.layer_0.shape.color=cyan
0.498	IN  DEF: ^.layer_01.shape.color=pink
0.494	IN  DEF: ^.layer_011.shape.color=pink
0.492	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size / 3 and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask Full at (?,^.layer_01.shape.size.i - 1)
  _01: a point with color blue at (?,2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color pink and mask ? at (?,?)

DL input  with Mi: L = 234.7 + 12751.0 = 12985.7
DL output with Mo: L = 105.7 + 618.3 = 724.0
DL input+output M: L = 340.3 + 13369.4 = 13709.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
diff: 
delta: (1,5)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
   (337.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,0)
  _01: a point with color blue at (0,2)
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
  _011: a rectangle with size (1,1) and color pink and mask Full at (1,0)
diff: 
delta: (1,5)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (1,9)
diff: 
delta: (1,5)=6  (2,2)=6  (4,1)=6  (4,6)=6  (6,1)=6  (6,8)=6  (8,2)=6  (9,9)=6  (10,4)=6 
! 2 wrong pixels (generated / expected)

TRAIN 6773b310.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (6,6)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (9,0)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (5,9)=6  (10,5)=6  (10,10)=6 
   (289.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _01: a point with color blue at (1,2)
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,3) and color pink and mask Full at (6,6)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (9,0)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (5,9)=6  (10,5)=6  (10,10)=6 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (9,0)
  _011: a rectangle with size (1,3) and color pink and mask Full at (6,6)
diff: 
delta: (0,0)=6  (1,6)=6  (1,10)=6  (4,0)=6  (5,9)=6  (10,5)=6  (10,10)=6 
! 4 wrong pixels (generated / expected)

TRAIN 6773b310.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,5)
diff: 
delta: (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
   (337.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _01: a point with color blue at (2,2)
diff: 
delta:
   (16.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,5)
diff: 
delta: (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,5)
  _011: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (0,9)
diff: 
delta: (2,1)=6  (2,5)=6  (5,5)=6  (6,0)=6  (6,9)=6  (8,8)=6  (9,1)=6  (9,10)=6  (10,4)=6 
! 4 wrong pixels (generated / expected)

TRAIN 6773b310.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,10)
diff: 
delta: (1,2)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
   (311.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _01: a point with color blue at (0,2)
diff: 
delta:
   (14.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,10)
diff: 
delta: (1,2)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,10)
  _011: a rectangle with size (2,2) and color pink and mask Even Checkboard at (4,5)
diff: 
delta: (1,2)=6  (1,8)=6  (2,5)=6  (5,0)=6  (6,9)=6  (9,2)=6  (9,8)=6  (10,5)=6 
! 3 wrong pixels (generated / expected)

TRAIN 6773b310.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (5,4)
  _011: a rectangle with size (1,1) and color pink and mask Full at (0,8)
diff: 
delta: (0,10)=6  (1,1)=6  (1,6)=6  (4,9)=6  (5,2)=6  (6,10)=6  (8,2)=6  (9,0)=6  (9,9)=6  (10,5)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color cyan and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,8)
  _011: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (5,4)
diff: 
delta: (0,10)=6  (1,1)=6  (1,6)=6  (4,9)=6  (5,2)=6  (6,10)=6  (8,2)=6  (9,0)=6  (9,9)=6  (10,5)=6 
! 5 wrong pixels (generated / expected)

TEST 6773b310.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.6 sec (3.6 sec/task)
bits-train-error = 618.3 bits (618.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-251] Checking task 67a3c6ac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16990.8 = 17006.4
DL output with Mo: L = 15.6 + 16990.8 = 17006.4
DL input+output M: L = 31.2 + 33981.6 = 34012.8

# learning a model for train pairs
2.000	
1.773	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.545	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.429	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.312	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.255	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.199	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 10081.7 = 10195.0
DL output with Mo: L = 113.3 + 10081.7 = 10195.0
DL input+output M: L = 226.5 + 20163.5 = 20390.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color red and layers
  _0: a rectangle with size (2,3) and color pink and mask Full (and Border) at (0,0)
  _01: a rectangle with size (2,3) and color orange and mask Even Checkboard at (2,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (3,0)
diff: 
delta: (1,1)=1 
   (135.3 bits)
data: a background with size (4,4) and color red and layers
  _0: a rectangle with size (2,3) and color pink and mask Full (and Border) at (0,1)
  _01: a rectangle with size (2,3) and color orange and mask Even Checkboard at (2,1)
  _011: a rectangle with size (1,1) and color blue and mask Full at (3,3)
diff: 
delta: (1,2)=1 
   (135.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color red and layers
  _0: a rectangle with size (2,3) and color pink and mask Full (and Border) at (0,0)
  _01: a rectangle with size (2,3) and color orange and mask Even Checkboard at (2,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (3,0)
diff: 
delta: (1,1)=1 
! size mismatch, 10x10 instead of 4x4

TRAIN 67a3c6ac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color pink and layers
  _0: a rectangle with size (5,6) and color orange and mask xxx...|.x....|xx....|..xxx.|..x..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask .x..|..xx|.x.x|xx.. at (2,3)
  _011: a rectangle with size (3,3) and color red and mask Full at (2,0)
diff: 
delta: (0,6)=2  (1,2)=1  (1,3)=1  (1,4)=7# (1,5)=7# (1,6)=1  (2,3)=1  (4,0)=7# (4,3)=1  (5,5)=1  (5,6)=1  (6,1)=2 
   (473.3 bits)
data: a background with size (7,7) and color pink and layers
  _0: a rectangle with size (5,6) and color orange and mask ...xxx|....x.|....xx|.xxx..|x..x.. at (0,1)
  _01: a rectangle with size (4,4) and color red and mask ..x.|xx..|x.x.|..xx at (2,0)
  _011: a rectangle with size (3,3) and color red and mask Full at (2,4)
diff: 
delta: (0,0)=2  (1,0)=1  (1,1)=7# (1,2)=7# (1,3)=1  (1,4)=1  (2,3)=1  (4,3)=1  (4,6)=7# (5,0)=1  (5,1)=1  (6,5)=2 
   (473.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color pink and layers
  _0: a rectangle with size (5,6) and color orange and mask xxx...|.x....|xx....|..xxx.|..x..x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask .x..|..xx|.x.x|xx.. at (2,3)
  _011: a rectangle with size (3,3) and color red and mask Full at (2,0)
diff: 
delta: (0,6)=2  (1,2)=1  (1,3)=1  (1,4)=7# (1,5)=7# (1,6)=1  (2,3)=1  (4,0)=7# (4,3)=1  (5,5)=1  (5,6)=1  (6,1)=2 
! size mismatch, 10x10 instead of 7x7

TRAIN 67a3c6ac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (6,3) and color red and mask .x.|x..|x.x|.x.|x..|x.. at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask x..|.x.|.xx at (3,3)
  _011: a rectangle with size (2,2) and color orange and mask x.|xx at (0,2)
diff: 
delta: (1,4)=2  (1,5)=6  (2,3)=6  (2,4)=2  (3,4)=6  (3,5)=2  (4,1)=7# (4,3)=2  (5,2)=6  (5,3)=2 
   (399.6 bits)
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (6,3) and color red and mask .x.|..x|x.x|.x.|..x|..x at (0,3)
  _01: a rectangle with size (3,3) and color orange and mask ..x|.x.|xx. at (3,0)
  _011: a rectangle with size (2,2) and color orange and mask .x|xx at (0,2)
diff: 
delta: (1,0)=6  (1,1)=2  (2,1)=2  (2,2)=6  (3,0)=2  (3,1)=6  (4,2)=2  (4,4)=7# (5,2)=2  (5,3)=6 
   (399.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (6,3) and color red and mask .x.|x..|x.x|.x.|x..|x.. at (0,0)
  _01: a rectangle with size (3,3) and color orange and mask x..|.x.|.xx at (3,3)
  _011: a rectangle with size (2,2) and color orange and mask x.|xx at (0,2)
diff: 
delta: (1,4)=2  (1,5)=6  (2,3)=6  (2,4)=2  (3,4)=6  (3,5)=2  (4,1)=7# (4,3)=2  (5,2)=6  (5,3)=2 
! size mismatch, 10x10 instead of 6x6

TRAIN 67a3c6ac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask Even Checkboard at (0,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TEST 67a3c6ac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.1 sec (28.1 sec/task)
bits-train-error = 10081.7 bits (10081.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-250] Checking task 67a423a3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8560.5 = 8576.1
DL output with Mo: L = 15.6 + 10773.3 = 10788.9
DL input+output M: L = 31.2 + 19333.8 = 19365.0

# learning a model for train pairs
2.000	
1.609	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.232	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.912	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.659	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.611	OUT DEF: ^.size=^.size
0.575	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j + 3
0.559	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j + 2
0.533	OUT DEF: ^.layer_0.pos=corner(^.layer_01.pos, ^.layer_0.pos) - 1
0.508	OUT DEF: ^.layer_01.pos=max(^.layer_0.pos, ^.layer_01.pos) - ^.layer_01.pos
0.493	OUT DEF: ^.layer_0.shape.color=yellow
0.477	OUT DEF: ^.layer_0.shape.mask=Border
0.466	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.i / 2
0.454	IN  DEF: ^.layer_0.shape.mask=Full
0.443	IN  DEF: ^.layer_01.shape.mask=Full
0.432	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.pos.i + 1
0.423	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.414	OUT DEF: ^.layer_011.shape.size.i=1
0.405	OUT DEF: ^.layer_011.shape.mask=Full
0.396	IN  DEF: ^.color=black
0.389	OUT DEF: ^.color=black
0.388	OUT DEF: ^.layer_0.shape.size=min(^.layer_0.shape.size, ^.layer_01.shape.size) + 2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size min(^.layer_0.shape.size, ^.layer_01.shape.size) + 2 and color yellow and mask Border at corner(^.layer_01.pos, ^.layer_0.pos) - 1
  _01: a rectangle with size (?,^.layer_0.pos.i + 1) and color ? and mask ^.layer_01.shape.mask at max(^.layer_0.pos, ^.layer_01.pos) - ^.layer_01.pos
  _011: a rectangle with size (1,?) and color ? and mask Full at (?,^.layer_0.pos.i / 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 2347.9 = 2428.3
DL output with Mo: L = 219.8 + 906.9 = 1126.6
DL input+output M: L = 300.1 + 3254.8 = 3554.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,4) and color red and mask Full at (1,0)
diff: 
delta: (0,1)=3 
   (86.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,1) and color green and mask Full at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color green and mask Full at (2,1)
diff: 
delta: (0,1)=3 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,4) and color red and mask Full at (1,0)
diff: 
delta: (0,1)=3 
! 4 wrong pixels (generated / expected)

TRAIN 67a423a3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
   (76.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (3,3)
  _01: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
   (35.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (8,1) and color pink and mask Full at (0,4)
diff: 
delta: (4,4)=6 
! 27 wrong pixels (generated / expected)

TRAIN 67a423a3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
   (71.5 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Border at (1,1)
  _01: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _011: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
   (33.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,6) and color brown and mask Full at (2,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,6) and color brown and mask Full at (2,0)
  _01: a rectangle with size (6,1) and color blue and mask Full at (0,2)
diff: 
delta: (2,2)=1 
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,3) and color brown and mask Full at (2,3)
diff: 
delta: (2,0)=9# (2,1)=9#
! 10 wrong pixels (generated / expected)

TRAIN 67a423a3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,1) and color grey and mask Full at (0,8)
  _01: a rectangle with size (1,12) and color green and mask Full at (6,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,12) and color green and mask Full at (6,0)
  _01: a rectangle with size (12,1) and color grey and mask Full at (0,8)
diff: 
delta: (6,8)=5#
! 39 wrong pixels (generated / expected)

TEST 67a423a3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.4 sec (11.4 sec/task)
bits-train-error = 906.9 bits (906.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-249] Checking task 67e8384a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5148.0 = 5163.6
DL output with Mo: L = 15.6 + 19182.4 = 19198.0
DL input+output M: L = 31.2 + 24330.3 = 24361.6

# learning a model for train pairs
2.000	
1.726	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.589	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.524	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.454	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.405	OUT OBJECT at ^.layer_01: ^.layer_01
1.355	OUT OBJECT at ^.layer_011: ^.layer_011
1.320	OUT DEF: ^.size=^.size * 2
1.308	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j * 2
1.219	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.184	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.155	OUT OBJECT at ^.layer_01110: ^.layer_011.shape at (?,?)
1.126	OUT OBJECT at ^.layer_011111: ^.layer_01.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ? and layers
  _0: a rectangle with size (?,^.layer_01.pos.j * 2) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: ^.layer_011
  _01110: ^.layer_011.shape at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 88.7 + 3668.4 = 3757.1
DL output with Mo: L = 194.7 + 7449.8 = 7644.5
DL input+output M: L = 283.4 + 11118.2 = 11401.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,1)
  _01: a point with color grey at (1,2)
  _011: a point with color grey at (0,0)
diff: 
delta:
   (85.4 bits)
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (6,4) and color yellow and mask .xx.|x..x|xxxx|xxxx|x..x|.xx. at (0,1)
  _01: a point with color grey at (1,2)
  _011: a point with color grey at (0,0)
  _01110: a point with color grey at (0,5)
  _0111: a rectangle with size (4,2) and color grey and mask Full (and Border) at (1,2)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (5,0)
  _011111: a point with color grey at (5,5)
diff: 
delta:
   (138.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,1)
  _01: a point with color grey at (1,2)
  _011: a point with color grey at (0,0)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 67e8384a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (0,0)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (2,0)
diff: 
delta: (2,1)=3 
   (105.1 bits)
data: a background with size (6,6) and color orange and layers
  _0: a rectangle with size (6,4) and color blue and mask x..x|.xx.|.xx.|.xx.|.xx.|x..x at (0,1)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (2,0)
  _01110: a point with color grey at (0,3)
  _0111: a rectangle with size (2,4) and color green and mask Full (and Border) at (2,1)
  _01111: a rectangle with size (2,6) and color grey and mask Full (and Border) at (2,0)
  _011111: a point with color grey at (5,2)
diff: 
delta: (5,3)=5#
   (172.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (0,0)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (2,0)
diff: 
delta: (2,1)=3 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (0,0)
  _01: a point with color grey at (0,2)
  _011: a point with color green at (2,1)
diff: 
delta: (2,0)=5#
! 35 wrong pixels (generated / expected)

TRAIN 67e8384a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (1,1)
  _01: a point with color grey at (0,1)
  _011: a point with color yellow at (1,2)
diff: 
delta:
   (72.3 bits)
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (4,2)
  _01: a point with color grey at (0,1)
  _011: a point with color yellow at (1,2)
  _01110: a point with color yellow at (1,3)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (1,1)
  _01111: a rectangle with size (1,4) and color pink and mask Full at (4,1)
  _011111: a point with color grey at (0,4)
diff: 
delta: (5,1)=5# (5,4)=5#
   (159.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _01: a point with color pink at (1,1)
  _011: a point with color yellow at (1,2)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _01: a point with color yellow at (1,2)
  _011: a point with color pink at (1,1)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 67e8384a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
  _01: a point with color cyan at (1,1)
  _011: a point with color cyan at (2,0)
diff: 
delta: (2,2)=6 
   (104.0 bits)
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,2)
  _01: a point with color cyan at (1,1)
  _011: a point with color cyan at (2,0)
  _01110: a point with color cyan at (3,0)
  _0111: a rectangle with size (4,2) and color cyan and mask x.|.x|.x|x. at (1,4)
  _01111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
  _011111: a point with color cyan at (4,1)
diff: 
delta: (0,4)=2  (1,5)=2  (4,0)=2  (4,5)=2  (5,1)=2  (5,4)=2 
   (274.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
  _01: a point with color cyan at (1,1)
  _011: a point with color cyan at (2,0)
diff: 
delta: (2,2)=6 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
  _01: a point with color cyan at (1,1)
  _011: a point with color pink at (2,2)
diff: 
delta: (2,0)=8 
! 35 wrong pixels (generated / expected)

TRAIN 67e8384a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (2,0) and color col10 and mask Full at (0,0)

TEST 67e8384a.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 26.0 sec (26.0 sec/task)
bits-train-error = 7449.8 bits (7449.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-248] Checking task 681b3aeb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7593.3 = 7608.9
DL output with Mo: L = 15.6 + 3147.9 = 3163.5
DL input+output M: L = 31.2 + 10741.2 = 10772.4

# learning a model for train pairs
2.000	
1.548	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.924	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.703	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.622	OUT DEF: ^.color=^.layer_01.shape.color
0.547	OUT DEF: ^.layer_0.pos='(0,0)
0.486	OUT DEF: ^.size.i=3
0.426	OUT DEF: ^.size.j=3
0.416	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ^.layer_01.shape.color and layers
  _0: ^.layer_0.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 2971.2 = 3051.5
DL output with Mo: L = 46.6 + 0.0 = 46.6
DL input+output M: L = 127.0 + 2971.2 = 3098.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
  _01: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
diff: 
delta:
   (98.3 bits)
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
  _01: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask xx|x.|x. at (2,1)
  _01: a rectangle with size (3,2) and color orange and mask .x|xx|xx at (7,8)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (2,3)
  _01: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,8)
diff: 
delta:
   (100.4 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xxx|.xx|..x at (2,3)
  _01: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,8)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (8,1)
  _01: a rectangle with size (2,3) and color green and mask .x.|xxx at (4,3)
diff: 
delta:
   (98.3 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|x.x at (8,1)
  _01: a rectangle with size (2,3) and color green and mask .x.|xxx at (4,3)
diff: 
delta:
correct output grid

TRAIN 681b3aeb.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|x..|xxx at (6,7)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (2,3)
diff: 
delta:
correct output grid

TEST 681b3aeb.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.83
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-247] Checking task 6855a6e4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18479.0 = 18494.6
DL output with Mo: L = 15.6 + 18479.0 = 18494.6
DL input+output M: L = 31.2 + 36957.9 = 36989.2

# learning a model for train pairs
2.000	
1.754	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.519	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.286	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.039	OUT OBJECT at ^.layer_00: ^.layer_0
0.804	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.682	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.572	OUT OBJECT at ^.layer_011: ^.layer_01
0.481	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.445	OUT DEF: ^.size=^.size
0.436	OUT DEF: ^.layer_0.shape.size.i=^.layer_011.shape.size.i
0.418	OUT DEF: ^.layer_0.pos=max(^.layer_01.pos, ^.layer_011.pos) + translationOnto(^.layer_01, ^.layer_0)
0.409	IN  DEF: ^.layer_0.shape.color=red
0.400	OUT DEF: ^.layer_0.shape.color=grey
0.391	IN  DEF: ^.layer_01.shape.color=red
0.382	IN  DEF: ^.layer_011.shape.color=grey
0.373	IN  DEF: ^.layer_0111.shape.color=grey
0.365	OUT DEF: ^.layer_01.pos.j=right(^.layer_01) / 2
0.356	OUT DEF: ^.layer_01.shape.color=grey
0.348	OUT DEF: ^.layer_01.shape.size.i=^.layer_0111.shape.size.i
0.344	OUT DEF: ^.color=black
0.340	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (^.layer_011.shape.size.i,?) and color grey and mask ? at max(^.layer_01.pos, ^.layer_011.pos) + translationOnto(^.layer_01, ^.layer_0)
  _01: a rectangle with size (^.layer_0111.shape.size.i,?) and color grey and mask ? at (?,right(^.layer_01) / 2)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 153.6 + 5014.1 = 5167.7
DL output with Mo: L = 200.4 + 927.3 = 1127.7
DL input+output M: L = 353.9 + 5941.4 = 6295.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _01: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,4)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (13,3)
diff: 
delta:
   (153.6 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _0: a rectangle with size (2,1) and color grey and mask Full at (5,4)
  _01: a rectangle with size (1,3) and color grey and mask Full at (9,3)
  _011: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
diff: 
delta:
   (22.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _01: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _011: a rectangle with size (1,3) and color grey and mask Full at (13,3)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (0,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _01: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,4)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (13,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask x...x|xxxxx at (10,2)
  _01: a rectangle with size (2,5) and color red and mask xxxxx|x...x at (3,2)
  _011: a rectangle with size (1,3) and color grey and mask Full at (13,3)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (0,4)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _01: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _011: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _0111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,0)
diff: 
delta:
   (173.2 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _0: a rectangle with size (4,2) and color grey and mask .x|xx|xx|.x at (6,8)
  _01: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,5)
  _011: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
diff: 
delta:
   (32.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _01: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _011: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _0111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _01: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _011: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,0)
  _0111: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (6,2) and color red and mask xx|.x|.x|.x|.x|xx at (5,10)
  _01: a rectangle with size (6,2) and color red and mask xx|x.|x.|x.|x.|xx at (5,3)
  _011: a rectangle with size (4,2) and color grey and mask x.|xx|xx|x. at (6,13)
  _0111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _011: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
   (174.6 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _0: a rectangle with size (3,1) and color grey and mask Full at (5,5)
  _01: a rectangle with size (3,4) and color grey and mask x..x|xxxx|x.x. at (5,5)
  _011: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
diff: 
delta:
   (37.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _011: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
  _0111: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (4,9)
  _01: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (4,3)
  _011: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (5,0)
  _0111: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (5,12)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN 6855a6e4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (3,3)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,3)
  _011: a rectangle with size (2,5) and color grey and mask .xxx.|xx.xx at (0,4)
  _0111: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (13,4)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (3,3)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,3)
  _011: a rectangle with size (2,5) and color grey and mask ..x..|xxxxx at (13,4)
  _0111: a rectangle with size (2,5) and color grey and mask .xxx.|xx.xx at (0,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TEST 6855a6e4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 23.0 sec (23.0 sec/task)
bits-train-error = 927.3 bits (927.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-246] Checking task 68b16354.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18346.0 = 18361.6
DL output with Mo: L = 15.6 + 18346.0 = 18361.6
DL input+output M: L = 31.2 + 36691.9 = 36723.1

# learning a model for train pairs
2.000	
1.908	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.812	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
1.738	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.679	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.631	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.595	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.558	OUT OBJECT at ^.layer_001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 14859.5 = 14972.8
DL output with Mo: L = 129.2 + 13512.5 = 13641.7
DL input+output M: L = 242.5 + 28372.1 = 28614.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _0: a rectangle with size (3,2) and color orange and mask Full (and Border) at (2,1)
  _01: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
   (290.8 bits)
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (4,2) and color cyan and mask .x|x.|.x|.x at (0,3)
  _001: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _0: a rectangle with size (3,2) and color orange and mask Full (and Border) at (0,1)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta: (0,0)=8  (1,0)=2  (1,4)=7# (2,0)=3  (4,0)=8 
   (251.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _0: a rectangle with size (3,2) and color orange and mask Full (and Border) at (2,1)
  _01: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,2) and color orange and mask x.|xx|xx at (2,1)
  _0: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! size mismatch, 10x10 instead of 5x5
>> Trial 3
data: a background with size (5,5) and color yellow and layers
  _00: a rectangle with size (3,2) and color orange and mask x.|xx|xx at (2,1)
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
  _01: a rectangle with size (4,2) and color cyan and mask .x|.x|x.|.x at (1,3)
diff: 
delta: (0,0)=8  (0,1)=1  (0,3)=1  (2,0)=3  (3,0)=2  (3,4)=7# (4,0)=8 
! size mismatch, 10x10 instead of 5x5

TRAIN 68b16354.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color orange and layers
  _00: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,3)
  _0: a rectangle with size (1,2) and color green and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,4)
diff: 
delta: (1,0)=1  (1,1)=8  (1,2)=2  (1,3)=4  (2,0)=2  (2,2)=8  (3,2)=4  (3,3)=1  (3,4)=8  (4,0)=8  (4,1)=1  (4,4)=1 
   (395.3 bits)
data: a background with size (5,5) and color orange and layers
  _00: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (2,1)
  _001: a rectangle with size (1,5) and color blue and mask Full at (3,0)
  _0: a rectangle with size (1,2) and color green and mask Full at (4,1)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,4)
diff: 
delta: (0,0)=8  (0,1)=1  (0,4)=1  (1,2)=4  (1,3)=1  (1,4)=8  (2,0)=2  (3,2)=2  (3,3)=4  (4,3)=1 
   (360.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color orange and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,4)
diff: 
delta: (1,0)=1  (1,1)=8  (1,2)=2  (1,3)=4  (2,0)=2  (2,2)=8  (3,2)=4  (3,3)=1  (3,4)=8  (4,0)=8  (4,1)=1  (4,4)=1 
! size mismatch, 10x10 instead of 5x5

TRAIN 68b16354.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color yellow and layers
  _00: a rectangle with size (2,2) and color green and mask Full (and Border) at (0,5)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,4)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (3,3)
diff: 
delta: (0,0)=2  (0,1)=7# (0,3)=3  (0,5)=8  (1,0)=2  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,3)=3  (3,0)=1  (3,1)=1  (3,2)=2  (3,6)=7# (4,0)=2  (4,2)=3  (4,6)=1  (5,1)=8  (5,2)=7# (5,5)=8  (5,6)=2  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,5)=2  (6,6)=8 
   (799.9 bits)
data: a background with size (7,7) and color yellow and layers
  _00: a rectangle with size (2,2) and color blue and mask xx|x. at (2,3)
  _001: a rectangle with size (2,2) and color green and mask Full (and Border) at (5,5)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (4,4)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,0)
diff: 
delta: (0,0)=7# (0,1)=3  (0,2)=8  (0,4)=3  (0,5)=2  (0,6)=8  (1,1)=8  (1,2)=7# (1,5)=8  (1,6)=2  (2,2)=3  (2,6)=1  (3,0)=1  (3,1)=1  (3,2)=2  (3,6)=7# (4,0)=8  (4,1)=7# (4,3)=3  (5,1)=3  (5,2)=7# (5,3)=1  (6,1)=7# (6,3)=3  (6,5)=8 
   (738.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color yellow and layers
  _00: a rectangle with size (2,2) and color green and mask Full (and Border) at (0,5)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,4)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (3,3)
diff: 
delta: (0,0)=2  (0,1)=7# (0,3)=3  (0,5)=8  (1,0)=2  (1,1)=3  (1,2)=7# (1,3)=1  (2,0)=8  (2,1)=7# (2,3)=3  (3,0)=1  (3,1)=1  (3,2)=2  (3,6)=7# (4,0)=2  (4,2)=3  (4,6)=1  (5,1)=8  (5,2)=7# (5,5)=8  (5,6)=2  (6,0)=7# (6,1)=3  (6,2)=8  (6,4)=3  (6,5)=2  (6,6)=8 
! size mismatch, 10x10 instead of 7x7

TRAIN 68b16354.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
  _00: a rectangle with size (3,2) and color green and mask x.|.x|.x at (1,5)
  _0: a rectangle with size (6,1) and color yellow and mask Full at (1,6)
  _01: a rectangle with size (3,2) and color cyan and mask x.|.x|.x at (3,4)
diff: 
delta: (0,0)=2  (0,1)=8  (0,3)=3  (0,4)=2  (0,5)=4  (1,0)=4  (1,1)=4  (1,4)=4  (2,4)=4  (2,5)=7# (3,2)=2  (3,3)=3  (4,0)=4  (4,4)=7# (5,0)=3  (5,1)=2  (5,2)=8  (5,3)=4  (6,1)=4  (6,2)=7# (6,4)=2  (6,5)=3 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color blue and layers
  _00: a rectangle with size (3,3) and color yellow and mask .x.|x.x|x.. at (0,4)
  _0: a rectangle with size (3,1) and color yellow and mask Full at (4,6)
  _01: a rectangle with size (3,2) and color green and mask x.|.x|.x at (1,5)
diff: 
delta: (0,0)=2  (0,1)=8  (0,3)=3  (0,4)=2  (1,0)=4  (1,1)=4  (2,5)=7# (3,2)=2  (3,3)=3  (3,4)=8  (4,0)=4  (4,4)=7# (4,5)=8  (5,0)=3  (5,1)=2  (5,2)=8  (5,3)=4  (5,5)=8  (6,1)=4  (6,2)=7# (6,4)=2  (6,5)=3 
! size mismatch, 10x10 instead of 7x7
>> Trial 3
data: a background with size (7,7) and color blue and layers
  _00: a rectangle with size (3,3) and color yellow and mask .x.|x.x|x.. at (0,4)
  _0: a rectangle with size (3,2) and color green and mask x.|.x|.x at (1,5)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (4,6)
diff: 
delta: (0,0)=2  (0,1)=8  (0,3)=3  (0,4)=2  (1,0)=4  (1,1)=4  (2,5)=7# (3,2)=2  (3,3)=3  (3,4)=8  (4,0)=4  (4,4)=7# (4,5)=8  (5,0)=3  (5,1)=2  (5,2)=8  (5,3)=4  (5,5)=8  (6,1)=4  (6,2)=7# (6,4)=2  (6,5)=3 
! size mismatch, 10x10 instead of 7x7

TEST 68b16354.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.7 sec (27.7 sec/task)
bits-train-error = 13512.5 bits (13512.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-245] Checking task 694f12f3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 19830.9 = 19846.5
DL output with Mo: L = 15.6 + 19830.9 = 19846.5
DL input+output M: L = 31.2 + 39661.7 = 39692.9

# learning a model for train pairs
2.000	
1.421	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT OBJECT at ^.layer_0: ^.layer_0
0.695	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.417	OUT OBJECT at ^.layer_01: ^.layer_01
0.236	OUT OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.188	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.168	OUT DEF: ^.size=^.size
0.156	OUT DEF: ^.layer_00.shape.size=^.layer_0.shape.size - 2
0.145	OUT DEF: ^.layer_00.pos=^.layer_0.pos + 1
0.134	OUT DEF: ^.layer_010.pos=^.layer_01.pos + 1
0.124	OUT DEF: ^.layer_010.shape.size=^.layer_01.shape.size - 2
0.119	OUT DEF: ^.layer_00.shape.color=red
0.113	OUT DEF: ^.layer_010.shape.color=blue
0.108	IN  DEF: ^.layer_0.shape.color=yellow
0.102	IN  DEF: ^.layer_01.shape.color=yellow
0.099	OUT DEF: ^.layer_00.shape.mask=Full
0.095	IN  DEF: ^.layer_0.shape.mask=Full
0.092	IN  DEF: ^.layer_01.shape.mask=Full
0.089	OUT DEF: ^.layer_010.shape.mask=Full
0.086	IN  DEF: ^.color=black
0.084	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size ^.layer_0.shape.size - 2 and color red and mask Full at ^.layer_0.pos + 1
  _0: ^.layer_0
  _010: a rectangle with size ^.layer_01.shape.size - 2 and color blue and mask Full at ^.layer_01.pos + 1
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 85.0 + 1452.2 = 1537.2
DL output with Mo: L = 123.0 + 0.0 = 123.0
DL input+output M: L = 208.0 + 1452.2 = 1660.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
   (73.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,4) and color red and mask Full at (7,4)
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _010: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask Full at (6,3)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
   (72.3 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (2,2)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _010: a rectangle with size (1,2) and color blue and mask Full at (8,6)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (7,5)
diff: 
delta:
correct output grid

TRAIN 694f12f3.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,6) and color yellow and mask Full at (7,4)
diff: 
delta:
correct output grid

TEST 694f12f3.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-244] Checking task 6a1e5592.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 28223.3 = 28238.9
DL output with Mo: L = 15.6 + 28223.3 = 28238.9
DL input+output M: L = 31.2 + 56446.7 = 56477.9

# learning a model for train pairs
2.000	
1.395	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.816	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.626	OUT OBJECT at ^.layer_00: ^.layer_0
0.512	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.442	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.383	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.336	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.292	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.277	OUT DEF: ^.size=^.size
0.269	OUT DEF: ^.layer_01.shape.size=^.layer_011.shape.size
0.263	IN  OBJECT at ^.layer_0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.256	OUT DEF: ^.layer_011.shape.size=^.layer_0111.shape.size
0.252	OUT DEF: ^.layer_0.shape.size.j=area(^.layer_01.shape) - 3
0.248	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.shape.size.i
0.244	IN  DEF: ^.layer_0.shape.color=red
0.240	IN  DEF: ^.layer_01.shape.color=grey
0.236	IN  DEF: ^.layer_0110.shape.color=grey
0.232	IN  DEF: ^.layer_011.shape.color=grey
0.228	IN  DEF: ^.layer_0111.shape.color=grey
0.225	OUT DEF: ^.layer_011.pos.i=middle(^.layer_0) - 1
0.221	OUT DEF: ^.layer_01.pos.i=^.layer_0110.shape.size.i
0.218	OUT DEF: ^.layer_0.shape.color=blue
0.214	OUT DEF: ^.layer_01.shape.color=blue
0.210	OUT DEF: ^.layer_011.shape.color=blue
0.207	OUT DEF: ^.layer_0.pos.j=right(^.layer_01) + ^.layer_01.shape.size.j
0.204	OUT DEF: ^.layer_0.pos.i=area(^.layer_0111.shape) / 3
0.202	OUT DEF: ^.layer_01.shape.mask=Full
0.199	OUT DEF: ^.layer_011.shape.mask=Full
0.197	OUT DEF: ^.color=black
0.196	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (^.layer_01.shape.size.i,area(^.layer_01.shape) - 3) and color blue and mask ? at (area(^.layer_0111.shape) / 3,right(^.layer_01) + ^.layer_01.shape.size.j)
  _01: a rectangle with size ^.layer_011.shape.size and color blue and mask Full at (^.layer_0110.shape.size.i,?)
  _011: a rectangle with size ^.layer_0111.shape.size and color blue and mask Full at (middle(^.layer_0) - 1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 187.6 + 4420.0 = 4607.6
DL output with Mo: L = 286.6 + 630.4 = 917.0
DL input+output M: L = 474.2 + 5050.4 = 5524.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full (and Border) at (8,1)
  _0110: a rectangle with size (1,3) and color grey and mask Full at (9,6)
  _011: a rectangle with size (4,1) and color grey and mask Full at (6,13)
  _0111: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (7,6)
diff: 
delta:
   (205.1 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _0: a rectangle with size (2,3) and color blue and mask Full (and Border) at (2,6)
  _01: a rectangle with size (4,1) and color blue and mask Full at (1,14)
  _011: a rectangle with size (3,3) and color blue and mask Full at (1,1)
diff: 
delta:
   (15.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full (and Border) at (8,1)
  _0110: a rectangle with size (1,3) and color grey and mask Full at (9,6)
  _011: a rectangle with size (4,1) and color grey and mask Full at (6,13)
  _0111: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (7,6)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxxxxxxxxxx.|x..xxx...xxxxx. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Full (and Border) at (8,1)
  _0110: a rectangle with size (2,2) and color grey and mask Full (and Border) at (8,6)
  _011: a rectangle with size (4,1) and color grey and mask Full at (6,13)
  _0111: a rectangle with size (3,3) and color grey and mask x..|xx.|xxx at (7,6)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _0110: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _011: a rectangle with size (2,3) and color grey and mask .x.|xxx at (8,6)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
diff: 
delta:
   (236.9 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _0: a rectangle with size (4,7) and color blue and mask .x..xx.|xxx.xx.|...xxxx|....xx. at (1,7)
  _01: a rectangle with size (2,3) and color blue and mask Full at (2,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (1,4)
diff: 
delta:
   (47.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _0110: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _011: a rectangle with size (2,3) and color grey and mask .x.|xxx at (8,6)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|xxxx.xxx.xx..xx|x..x.xx...x..xx at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask .xx.|.xx.|xxxx|.xx. at (6,0)
  _0110: a rectangle with size (2,3) and color grey and mask .xx|xxx at (8,12)
  _011: a rectangle with size (1,3) and color grey and mask Full at (9,6)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (7,10)
diff: 
delta: (8,7)=5#
! 13 wrong pixels (generated / expected)

TRAIN 6a1e5592.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask xxxxxxxxxxxxxxx|x.xxxx.x.xx.xxx|x..xxx...xx...x at (0,0)
  _01: a rectangle with size (4,3) and color grey and mask x.x|xxx|xxx|xxx at (6,11)
  _0110: a rectangle with size (3,4) and color grey and mask x...|xxx.|xxxx at (7,1)
  _011: a rectangle with size (1,2) and color grey and mask Full at (7,7)
  _0111: a rectangle with size (4,2) and color grey and mask x.|xx|x.|xx at (6,7)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TEST 6a1e5592.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.4 sec (20.4 sec/task)
bits-train-error = 630.4 bits (630.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-243] Checking task 6aa20dc0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 15794.4 = 15810.0
DL output with Mo: L = 15.6 + 39847.6 = 39863.2
DL input+output M: L = 31.2 + 55642.0 = 55673.2

# learning a model for train pairs
2.000	
1.525	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.278	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.101	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.972	OUT OBJECT at ^.layer_01: ^.layer_0
0.852	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.753	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.678	OUT OBJECT at ^.layer_010: ^.layer_01
0.635	OUT OBJECT at ^.layer_0111: ^.layer_011
0.617	OUT DEF: ^.size=^.size
0.602	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 132.8 + 6821.3 = 6954.1
DL output with Mo: L = 95.8 + 6349.1 = 6444.8
DL input+output M: L = 228.6 + 13170.3 = 13398.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (11,9)
  _011: a rectangle with size (2,2) and color green and mask Full (and Border) at (15,5)
  _0111: a point with color red at (1,13)
diff: 
delta: (3,15)=3  (4,5)=2  (6,7)=3 
   (248.5 bits)
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxx..|xxxx..|..xxxx|..xxxx|....xx|....xx at (11,5)
  _010: a rectangle with size (2,2) and color red and mask Full (and Border) at (11,9)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _011: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (1,13)
  _0111: a rectangle with size (2,2) and color green and mask Full (and Border) at (15,5)
diff: 
delta: (1,13)=2  (3,15)=3  (4,5)=2  (6,7)=3 
   (246.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,19) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask .xx|xx.|x.. at (4,5)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (11,9)
  _011: a rectangle with size (2,2) and color green and mask Full (and Border) at (15,5)
  _0111: a point with color red at (1,13)
diff: 
delta: (3,15)=3  (4,5)=2  (6,7)=3 
! 367 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _01: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _011: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (2,3)
  _0111: a point with color pink at (2,5)
diff: 
delta: (4,3)=2 
   (197.9 bits)
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (9,9) and color blue and mask xxxxxx...|xxxxxx...|xxxxxx...|xxx...xxx|xxx...xxx|xxx...xxx|...xxxxxx|...xxxxxx|...xxxxxx at (7,5)
  _010: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _01: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _011: a rectangle with size (1,1) and color pink and mask Full at (2,5)
  _0111: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (2,3)
diff: 
delta: (4,3)=2 
   (187.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,21) and color yellow and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (7,11)
  _01: a rectangle with size (3,3) and color pink and mask Full at (13,5)
  _011: a rectangle with size (3,3) and color blue and mask xx.|x.x|.xx at (2,3)
  _0111: a point with color pink at (2,5)
diff: 
delta: (4,3)=2 
! 396 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0111: a point with color yellow at (10,13)
diff: 
delta: (12,15)=2  (14,7)=2  (16,5)=4 
   (235.7 bits)
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (10,13)
  _010: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _01: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _011: a rectangle with size (3,3) and color green and mask +-cross at (14,5)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
diff: 
delta: (10,13)=4  (12,15)=2  (14,7)=2  (16,5)=4 
   (201.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,8)
  _0111: a point with color yellow at (10,13)
diff: 
delta: (12,15)=2  (14,7)=2  (16,5)=4 
! 455 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,22) and color cyan and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (5,6)
  _01: a rectangle with size (1,1) and color red and mask Full at (5,6)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (10,13)
  _0111: a point with color yellow at (7,8)
diff: 
delta: (12,15)=2  (14,7)=2  (16,5)=4 
! 455 wrong pixels (generated / expected)

TRAIN 6aa20dc0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color green and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (7,16)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (13,15)
  _0111: a point with color cyan at (4,6)
diff: 
delta: (4,7)=4  (5,5)=8  (5,7)=8  (6,5)=1  (6,6)=8  (13,1)=1  (15,3)=4  (17,11)=4  (17,12)=4  (18,11)=4  (18,12)=4 
! 462 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (22,22) and color green and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (7,16)
  _011: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (17,11)
  _0111: a point with color cyan at (4,6)
diff: 
delta: (4,7)=4  (5,5)=8  (5,7)=8  (6,5)=1  (6,6)=8  (13,1)=1  (13,15)=1  (13,16)=1  (14,15)=1  (14,16)=1  (15,3)=4 
! 462 wrong pixels (generated / expected)

TEST 6aa20dc0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 6349.1 bits (6349.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-242] Checking task 6b9890af.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 27864.2 = 27879.8
DL output with Mo: L = 15.6 + 31038.5 = 31054.1
DL input+output M: L = 31.2 + 58902.7 = 58934.0

# learning a model for train pairs
2.000	
1.228	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.724	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.319	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.215	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.198	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size)
0.189	OUT DEF: ^.layer_01.pos=^.layer_01.shape.size / 3
0.180	OUT DEF: ^.layer_0.pos='(0,0)
0.173	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.shape.size.i - 2
0.166	OUT DEF: ^.layer_01.shape.size.j=right(^.layer_0) / 2
0.160	IN  DEF: ^.layer_0.shape.color=red
0.154	IN  DEF: ^.layer_0.shape.mask=Border
0.151	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) and color ? and layers
  _0: ^.layer_0.shape at '(0,0)
  _01: a rectangle with size (^.layer_0.shape.size.i - 2,right(^.layer_0) / 2) and color ? and mask ? at ^.layer_01.shape.size / 3
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 85.0 + 3012.3 = 3097.2
DL output with Mo: L = 138.8 + 1102.4 = 1241.2
DL input+output M: L = 223.8 + 4114.7 = 4338.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,21) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (7,6)
  _01: a rectangle with size (3,3) and color cyan and mask +-cross at (2,5)
diff: 
delta:
   (95.1 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask +-cross at (1,1)
diff: 
delta:
   (15.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,21) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask Border at (7,6)
  _01: a rectangle with size (3,3) and color cyan and mask +-cross at (2,5)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,21) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (2,5)
  _01: a rectangle with size (8,8) and color red and mask Border at (7,6)
diff:   ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 52 wrong pixels (generated / expected)

TRAIN 6b9890af.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (9,10)
diff: 
delta:
   (100.2 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (1,1)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,22) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|x..|.xx at (9,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 6b9890af.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,24) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|..x at (15,13)
diff: 
delta:
   (105.9 bits)
data: a background with size (11,11) and color yellow and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (0,0)
  _01: a rectangle with size (9,6) and color black and mask xxx...|xxx...|xxx...|...xxx|...xxx|...xxx|xxxxxx|xxxxxx|xxxxxx at (1,1)
diff: 
delta:
   (71.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,24) and color black and layers
  _0: a rectangle with size (11,11) and color red and mask Border at (1,2)
  _01: a rectangle with size (3,3) and color yellow and mask .xx|x.x|..x at (15,13)
diff: 
delta:
! 81 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,24) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .xx|x.x|..x at (15,13)
  _01: a rectangle with size (11,11) and color red and mask Border at (1,2)
diff:   ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 88 wrong pixels (generated / expected)

TRAIN 6b9890af.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,26) and color black and layers
  _0: a rectangle with size (14,14) and color red and mask Border at (4,2)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (4,20)
diff: 
delta:
! 108 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (24,26) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (4,20)
  _01: a rectangle with size (14,14) and color red and mask Border at (4,2)
diff:   ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 123 wrong pixels (generated / expected)

TEST 6b9890af.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.4 sec (2.4 sec/task)
bits-train-error = 1102.4 bits (1102.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-241] Checking task 6c434453.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14834.6 = 14850.2
DL output with Mo: L = 15.6 + 11833.8 = 11849.4
DL input+output M: L = 31.2 + 26668.4 = 26699.6

# learning a model for train pairs
2.000	
1.719	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.499	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.354	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.208	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.812	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.675	OUT OBJECT at ^.layer_010: ^.layer_01
0.613	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.579	OUT DEF: ^.size=^.size
0.557	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.535	OUT DEF: ^.layer_0.shape.size=^.layer_01.shape.size
0.522	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.510	OUT DEF: ^.layer_0.shape.mask=^.layer_01.shape.mask
0.500	IN  DEF: ^.layer_01.shape.mask=+-cross
0.479	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.420	OUT DEF: ^.layer_0111=^.layer_01111
0.400	OUT DEF: ^.layer_011.shape.size=^.layer_0111.shape.size
0.391	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.381	OUT DEF: ^.layer_0.pos.i='0
0.373	OUT DEF: ^.layer_01.pos.j=^.layer_011.pos.j
0.365	OUT DEF: ^.layer_01.pos.i=right(^.layer_0) - 1
0.355	OUT DEF: ^.layer_0.shape.color=red
0.348	OUT DEF: ^.layer_011.pos.i=middle(^.layer_0) - 1
0.340	IN  DEF: ^.layer_0.shape.color=blue
0.333	IN  DEF: ^.layer_01.shape.color=blue
0.325	IN  DEF: ^.layer_011.shape.color=blue
0.318	IN  DEF: ^.layer_0111.shape.color=blue
0.310	IN  DEF: ^.layer_01111.shape.color=blue
0.306	OUT DEF: ^.color=black
0.303	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size and color red and mask ^.layer_01.shape.mask at ('0,^.layer_0.pos.j)
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at (right(^.layer_0) - 1,^.layer_011.pos.j)
  _011: a rectangle with size ^.layer_0111.shape.size and color ? and mask ? at (middle(^.layer_0) - 1,?)
  _0111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask +-cross at (?,?)
  _011: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 191.9 + 3496.4 = 3688.4
DL output with Mo: L = 195.5 + 448.3 = 643.8
DL input+output M: L = 387.5 + 3944.7 = 4332.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask .x....|xxx...|.x.xxx|...x.x|...xxx at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (1,6)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (7,8)
diff: 
delta:
   (186.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask +-cross at (0,0)
  _010: a rectangle with size (3,3) and color blue and mask +-cross at (1,6)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (4,0)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (6,3)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (7,8)
diff: 
delta:
   (24.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask .x....|xxx...|.x.xxx|...x.x|...xxx at (4,0)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (1,6)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,3) and color blue and mask Border at (0,0)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (7,8)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 6c434453.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Border at (5,1)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
  _01111: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
diff: 
delta:
   (163.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask +-cross at (0,4)
  _010: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (5,1)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
  _0111: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Border at (5,1)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
  _01111: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Border at (5,1)
  _0111: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
  _01111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (3,7)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
  _0111: a rectangle with size (3,3) and color blue and mask Border at (5,1)
  _01111: a rectangle with size (2,3) and color blue and mask x..|xxx at (7,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 6c434453.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (0,7)
  _011: a rectangle with size (3,3) and color blue and mask Border at (7,1)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (8,8)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (6,6)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (0,7)
  _011: a rectangle with size (3,3) and color blue and mask Border at (7,1)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,6)
  _01111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (8,8)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (0,7)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (8,8)
  _0111: a rectangle with size (3,3) and color blue and mask Border at (7,1)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (6,6)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TEST 6c434453.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 448.3 bits (448.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-240] Checking task 6cdd2623.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 31746.1 = 31761.7
DL output with Mo: L = 15.6 + 28082.1 = 28097.8
DL input+output M: L = 31.2 + 59828.3 = 59859.5

# learning a model for train pairs
2.000	
1.364	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.107	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.041	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.017	OUT DEF: ^.size=^.size
1.000	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.987	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.977	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.970	OUT DEF: ^.layer_0.pos.j='0
0.965	OUT DEF: ^.layer_0.pos.i=right(^.layer_011) + ^.layer_011.shape.size.i
0.962	OUT DEF: ^.layer_0.shape.size.i=1
0.958	OUT DEF: ^.layer_0.shape.mask=Full
0.955	OUT DEF: ^.layer_01.shape.mask=Full
0.952	OUT DEF: ^.color=black
0.950	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (1,^.size.j) and color ? and mask Full at (right(^.layer_011) + ^.layer_011.shape.size.i,'0)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 144.3 + 28566.0 = 28710.3
DL output with Mo: L = 132.1 + 1150.4 = 1282.5
DL input+output M: L = 276.4 + 29716.4 = 29992.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,5)
  _01: a rectangle with size (1,5) and color grey and mask Full at (8,3)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (3,2) and color red and mask .x|.x|x. at (4,2)
diff: 
delta: (0,11)=3  (0,17)=2  (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,5)=2  (4,14)=2  (5,7)=2  (5,10)=2  (5,18)=2  (5,20)=5# (6,9)=5# (6,10)=5# (6,13)=5# (6,19)=2  (6,20)=5# (7,13)=2  (7,18)=2  (8,0)=3  (8,5)=0  (8,6)=2  (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
   (1216.3 bits)
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (1,22) and color green and mask Full at (8,0)
  _01: a rectangle with size (11,1) and color green and mask Full at (0,11)
diff: 
delta:
   (37.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,22) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,5)
  _01: a rectangle with size (1,5) and color grey and mask Full at (8,3)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (3,2) and color red and mask .x|.x|x. at (4,2)
diff: 
delta: (0,11)=3  (0,17)=2  (1,0)=2  (1,13)=2  (2,9)=5# (2,10)=2  (2,12)=5# (2,18)=2  (3,14)=2  (3,20)=2  (4,0)=5# (4,5)=2  (4,14)=2  (5,7)=2  (5,10)=2  (5,18)=2  (5,20)=5# (6,9)=5# (6,10)=5# (6,13)=5# (6,19)=2  (6,20)=5# (7,13)=2  (7,18)=2  (8,0)=3  (8,5)=0  (8,6)=2  (8,20)=2  (8,21)=3  (9,9)=2  (9,11)=2  (9,12)=5# (9,14)=5# (9,18)=2  (10,2)=2  (10,8)=5# (10,11)=3  (10,17)=5# (10,19)=5#
! 36 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
diff: 
delta: (2,8)=1  (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
   (654.0 bits)
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (1,20) and color red and mask Full at (11,0)
  _01: a rectangle with size (1,20) and color red and mask Full at (3,0)
diff: 
delta:
   (39.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
diff: 
delta: (2,8)=1  (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
! 64 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,20) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,12)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (8,13)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (1,10)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
diff: 
delta: (2,8)=1  (3,0)=2  (3,19)=2  (4,17)=8  (4,18)=1  (6,5)=1  (6,8)=1  (6,11)=1  (6,13)=8  (8,1)=8  (8,4)=8  (8,14)=1  (9,19)=1  (11,0)=2  (11,8)=8  (11,11)=1  (11,19)=2  (12,0)=8  (12,17)=8 
! 44 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _01: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _011: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (13,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (14,0)=4  (14,2)=4  (14,4)=4  (14,9)=5# (14,13)=8 
   (986.3 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,17) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (15,1) and color cyan and mask Full at (0,13)
diff: 
delta:
   (38.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _01: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _011: a rectangle with size (2,1) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (2,1) and color yellow and mask Full at (13,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (14,0)=4  (14,2)=4  (14,4)=4  (14,9)=5# (14,13)=8 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (14,0)
  _01: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,1)
  _011: a rectangle with size (3,2) and color yellow and mask x.|.x|.x at (11,14)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (4,8)
diff: 
delta: (0,7)=4  (0,13)=8  (0,15)=4  (1,4)=4  (2,14)=4  (2,16)=5# (3,0)=4  (3,3)=4  (4,4)=4  (5,7)=4  (5,16)=5# (6,1)=4  (6,5)=5# (6,10)=4  (6,14)=4  (7,15)=5# (7,16)=4  (8,12)=4  (9,6)=4  (9,11)=4  (10,0)=8  (10,16)=8  (11,0)=4  (12,1)=5# (12,12)=4  (13,6)=4  (13,8)=4  (14,1)=0  (14,3)=0  (14,8)=4  (14,9)=5# (14,13)=8 
! 35 wrong pixels (generated / expected)

TRAIN 6cdd2623.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color black and layers
  _0: a rectangle with size (6,1) and color orange and mask Full at (5,10)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,15)
  _011: a rectangle with size (1,2) and color orange and mask Full at (5,16)
  _0111: a rectangle with size (2,1) and color cyan and mask Full at (1,6)
diff: 
delta: (0,3)=6  (0,12)=7# (0,16)=7# (0,17)=8  (1,0)=7# (1,9)=8  (1,15)=7# (2,1)=7# (4,11)=8  (5,0)=6  (5,18)=6  (6,1)=7# (6,8)=7# (6,12)=8  (7,3)=8  (7,6)=7# (7,8)=7# (7,10)=0  (8,12)=8  (8,14)=8  (8,18)=7# (9,4)=7# (9,10)=0  (10,15)=7# (10,18)=7# (11,9)=7# (11,17)=8  (12,18)=7# (14,12)=7# (14,13)=8  (15,0)=7# (15,3)=6  (15,4)=7# (15,6)=8  (15,7)=7#
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,19) and color black and layers
  _0: a rectangle with size (6,1) and color orange and mask Full at (5,10)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,15)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (8,12)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (5,16)
diff: 
delta: (0,3)=6  (0,12)=7# (0,16)=7# (0,17)=8  (1,0)=7# (1,6)=8  (1,9)=8  (1,15)=7# (2,1)=7# (2,6)=8  (4,11)=8  (5,0)=6  (5,18)=6  (6,1)=7# (6,8)=7# (6,12)=8  (7,3)=8  (7,6)=7# (7,8)=7# (7,10)=0  (8,13)=0  (8,18)=7# (9,4)=7# (9,10)=0  (10,15)=7# (10,18)=7# (11,9)=7# (11,17)=8  (12,18)=7# (14,12)=7# (14,13)=8  (15,0)=7# (15,3)=6  (15,4)=7# (15,6)=8  (15,7)=7#
! 56 wrong pixels (generated / expected)

TEST 6cdd2623.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 1150.4 bits (1150.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-239] Checking task 6cf79266.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 138069.4 = 138085.0
DL output with Mo: L = 15.6 + 138069.4 = 138085.0
DL input+output M: L = 31.2 + 276138.9 = 276170.1

# learning a model for train pairs
2.000	
1.126	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.227	OUT OBJECT at ^.layer_0: ^.layer_0
0.182	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.174	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.154	OUT DEF: ^.layer_01.shape.size.i=3
0.149	OUT DEF: ^.size=^.size
0.147	OUT DEF: ^.layer_00.shape.size.i=3
0.145	OUT DEF: ^.layer_01.shape.size.j=3
0.144	OUT DEF: ^.layer_01.shape.color=blue
0.144	OUT DEF: ^.layer_01.shape.mask=Full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (3,?) and color ? and mask ? at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (3,3) and color blue and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 17380.7 = 17429.5
DL output with Mo: L = 90.9 + 2296.2 = 2387.1
DL input+output M: L = 139.7 + 19676.9 = 19816.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
diff: 
delta:
   (450.7 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (3,1) and color grey and mask Full at (0,0)
  _0: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (6,16)
diff: 
delta:
   (41.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color grey and mask x..x..xxxxxx..xxxx..|x.xxxxxx..xxxx.xx.xx|xxxxxxxxxxxxxxxx..xx|.xxxxx...x.xx.xx...x|xxxxxx.x..xxx...xx.x|.x.x.x..x.x.x.x.xxxx|xxxxxxxxx..x.xxx...x|...xxx...xxx.x.x...x|xx..x..xxxx..x.x...x|..x...xx.xxxx.xxx.xx|xxx.xxxxx..x..xxxxxx|x.xxxxx.xxxx.x.xxx.x|x..xxxx..xxx.xxxxxxx|xx.xxxxxxxx.xxx.xx.x|..xxxx.xx.xxxx.xxx.x|x..x.x...xxx.x.xx.x.|.x.x.xx..x..x.x...x.|xxxxx.xxxxx...x.xx.x|xxxxxxxxxxxxx..xx.xx|xxx..xxxx.xx.x.x...x at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 6cf79266.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
diff: 
delta: (14,0)=3  (17,6)=3  (17,7)=3  (17,8)=3  (18,5)=3  (18,6)=3  (18,8)=3  (19,5)=3  (19,6)=3  (19,7)=3 
   (752.8 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (3,4) and color green and mask .xxx|xx.x|xxx. at (17,5)
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (6,3)
diff: 
delta: (14,0)=3 
   (86.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color green and mask xxxx.x.x.xx..xxx.x..|..xx..x.xx.x.xx..xx.|xxxxx..x...x.xx.xxxx|x.xx....x.xx.xxx.xx.|...x.x.xxx.xxx.xxx..|xx..xx.xxxx..x.xxxx.|.x....xx.x..x...x.x.|x.x......xxx.xxxxxxx|.xx....x.xx.xx..xxxx|...xx..xxxxx.x.x.xxx|x.xx.xxx..x.x...xx.x|x..x...xxxx..x.x.xxx|.xx...xx.xxxx..x..xx|..x.xxxx...xxx..x.x.|..xxx.xx.xxxxxxxx..x|..x.xx..x.x.xx.xxx..|xx.xx.......x.x...xx|.x.x......xxx..xx...|x..x.......x..xxxxxx|x.xx.......x.x.xxx.x at (0,0)
diff: 
delta: (14,0)=3  (17,6)=3  (17,7)=3  (17,8)=3  (18,5)=3  (18,6)=3  (18,8)=3  (19,5)=3  (19,6)=3  (19,7)=3 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color green and layers
  _0: a rectangle with size (20,20) and color black and mask ....x.x.x..xx.......|....xx.x..x.x.......|.....xx.xxx.x.......|.x..xxxx.x..x.......|xxx.x.x...x...x.....|..xx..x....xx.x.....|x.xxxx..x.xx.xxx....|.x.xxxxxx...x.......|x..xxxx.x..x..xx....|xxx..xx.....x.x.x...|.x..x......x.xxx....|.xx.xxx....xx.x.x...|x..xxx.......xx.xx..|xx.x..........xx.x.x|.x...............xx.|xx.x..........x...xx|..x..........x.xxx..|x.x..........xx..xxx|.xx.........xx......|.x..........x.x..... at (0,0)
diff: 
delta: (0,16)=0  (0,18)=0  (0,19)=0  (1,0)=0  (1,1)=0  (1,15)=0  (1,16)=0  (1,19)=0  (2,15)=0  (3,16)=0  (3,19)=0  (4,18)=0  (4,19)=0  (5,19)=0  (6,17)=0  (6,19)=0  (10,8)=0  (10,9)=0  (10,18)=0  (12,8)=0  (13,8)=0  (13,9)=0  (13,10)=0  (14,5)=0  (14,8)=0  (15,6)=0  (15,7)=0  (15,9)=0  (15,11)=0  (16,5)=0  (16,6)=0  (16,7)=0  (16,8)=0  (16,9)=0  (16,10)=0  (16,11)=0  (17,4)=0  (17,5)=0  (17,9)=0  (18,4)=0  (18,7)=0  (18,9)=0  (18,10)=0  (19,4)=0  (19,8)=0  (19,9)=0  (19,10)=0  (19,18)=0 
! 233 wrong pixels (generated / expected)

TRAIN 6cf79266.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
diff: 
delta: (0,0)=7# (3,0)=7#
   (534.6 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (3,3) and color blue and mask Full at (5,14)
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (16,3)
diff: 
delta: (0,0)=7# (3,0)=7#
   (101.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color orange and mask ..xxxx.xx..xx..x.xxx|..x.x.x.xxx....xx..x|.....x..xxxx.x....x.|..x.x.xx...xx..xx.x.|..x..x..x.xxxx..x..x|xxxxxxxx.xx.xx...x.x|...x.x..xx.x.x....xx|.xxxx.x.x..xxx.....x|...x....xxx..xx...xx|xx.xxx.x..x.xx.xx.x.|x........x..x....xx.|xx..xxx.xxxx.x..xxxx|.x.xxx...xx.xx.x..xx|..xx.xxxxx.xx.xxx.xx|..xxx.x.xx.x.xxx.xxx|x.xxx.x.xxxxx..xxx..|xxx...xxx.xx.x.x....|xxx...x.xx.x..x.....|x.....xx.x...x.xxx.x|.xx.xx.x..xxxx..x.xx at (0,0)
diff: 
delta: (0,0)=7# (3,0)=7#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color orange and layers
  _0: a rectangle with size (20,20) and color black and mask .x....x..xx..xx.x...|xx.x.x.x...xxxx..xx.|xxxxx.xx....x.xxxx.x|.x.x.x..xxx..xx..x.x|xx.xx.xx.x....xx.xx.|........x..x..xxx.x.|xxx.x.xx..x.x.xxxx..|x....x.x.xx...xxxxx.|xxx.xxxx...xx..xxx..|..x...x.xx.x..x..x..|.xxxxxxxx.xx.xxxx...|..xx...x....x.xx....|x.x...xxx..x..x.xx..|xx........x..x...x..|xx........x.x...x...|.x...........xx...xx|.........x..x.x.xxxx|.......x..x.xx.xxxxx|........x.xxx.x...x.|........xx....xx.x.. at (0,0)
diff: 
delta: (9,19)=0  (10,19)=0  (13,4)=0  (14,5)=0  (14,7)=0  (15,5)=0  (15,7)=0  (16,3)=0  (16,4)=0  (16,5)=0  (17,3)=0  (17,4)=0  (17,5)=0  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (19,0)=0  (19,3)=0  (19,6)=0 
! 232 wrong pixels (generated / expected)

TRAIN 6cf79266.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color yellow and layers
  _0: a rectangle with size (20,20) and color black and mask .....x...xxx.x.....x|....xx.x..xxxx.....x|...xx.x.x.x......x.x|..x.xx.xxxxxx...x.xx|.xx..x.......x..x.x.|..xx.xx......xx..x.x|xxx.xxxx.....x.x..x.|.x..xxx..xxxx..xxxxx|x...xxx...xx.x...xxx|.xxx..xx.xx.x...x.x.|xxx.x.x...xx.x...x..|x..xx....xxx.....x..|xx.xx.xx.xx.x..xxx..|.x..x.xx...xxxx...xx|x....xx.x.xx..x.....|.xx..x.x.xx.x.x.x.xx|..x.x.x..xx...xxxx..|.xxxx..x..x.x.xxx...|xxxxx....x.xx.xxxxxx|..xxxxx..xxx.x.x.x.. at (0,0)
diff: 
delta: (0,0)=0  (0,2)=0  (1,0)=0  (1,1)=0  (11,19)=0 
! 236 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (20,20) and color yellow and mask .x.xx.xxx.....xxxxx.|..xx..x.xx....xxxxx.|xxx..x.x.x.xxxxxx.x.|xx.x..x......xxx.x..|x..xx.xxxxxxx.xx.x.x|xx..x..xxxxxx..xx.x.|...x....xxxxx.x.xx.x|x.xx...xx....xx.....|.xxx...xxx..x.xxx...|x...xx..x..x.xxx.x.x|...x.x.xxx..x.xxx.xx|.xx..xxxx...xxxxx.x.|..x..x..x..x.xx...xx|x.xx.x..xxx....xxx..|.xxxx..x.x..xx.xxxxx|x..xx.x.x..x.x.x.x..|xx.x.x.xx..xxx....xx|x....xx.xx.x.x...xxx|.....xxxx.x..x......|.......xx...x.x..... at (0,0)
diff: 
delta: (0,12)=4  (19,0)=4  (19,1)=4  (19,16)=4  (19,18)=4  (19,19)=4 
! 40 wrong pixels (generated / expected)

TEST 6cf79266.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.9 sec (28.9 sec/task)
bits-train-error = 2296.2 bits (2296.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-238] Checking task 6d0160f0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 65401.3 = 65416.9
DL output with Mo: L = 15.6 + 45155.5 = 45171.2
DL input+output M: L = 31.2 + 110556.8 = 110588.0

# learning a model for train pairs
2.000	
1.242	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.767	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.749	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.731	OUT DEF: ^.size=^.size
0.720	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.618	OUT DEF: ^.layer_0.shape.mask=...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...
0.610	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.603	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.595	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.590	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.585	OUT DEF: ^.layer_0111.shape.color=orange
0.580	OUT DEF: ^.layer_01.shape.color=yellow
0.577	IN  DEF: ^.layer_0.shape.color=grey
0.572	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.567	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.j
0.562	OUT DEF: ^.layer_0111.pos.i=^.layer_01.pos.j + 1
0.557	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.555	OUT DEF: ^.color=black
0.553	IN  DEF: ^.layer_01.shape.mask=Full
0.552	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at ^.layer_0.pos
  _01: a point with color yellow at (^.layer_01.pos.j,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color orange at (^.layer_01.pos.j + 1,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 102.4 + 33195.2 = 33297.6
DL output with Mo: L = 232.5 + 1694.2 = 1926.7
DL input+output M: L = 334.9 + 34889.4 = 35224.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...xx..x...|...xx..x...|xxxxxxxxxxx|.x.x..xxx..|...xx..x.x.|...x...x...|xxxxxxxxxxx|...xx..x.x.|.xxx.x.xxx.|...xx..x... at (0,0)
  _01: a rectangle with size (1,5) and color orange and mask Full at (9,0)
  _011: a point with color green at (0,0)
diff: 
delta: (0,4)=7# (0,6)=6  (0,8)=8  (0,9)=5# (0,10)=7# (1,2)=9# (1,5)=3  (1,9)=6  (2,0)=7# (2,1)=2  (2,6)=2  (2,9)=3  (4,0)=7# (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
   (1092.5 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (0,10)
  _011: a point with color green at (0,9)
  _0111: a point with color orange at (1,8)
diff: 
delta: (2,10)=2 
   (55.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...xx..x...|...xx..x...|xxxxxxxxxxx|.x.x..xxx..|...xx..x.x.|...x...x...|xxxxxxxxxxx|...xx..x.x.|.xxx.x.xxx.|...xx..x... at (0,0)
  _01: a rectangle with size (1,5) and color orange and mask Full at (9,0)
  _011: a point with color green at (0,0)
diff: 
delta: (0,4)=7# (0,6)=6  (0,8)=8  (0,9)=5# (0,10)=7# (1,2)=9# (1,5)=3  (1,9)=6  (2,0)=7# (2,1)=2  (2,6)=2  (2,9)=3  (4,0)=7# (4,2)=2  (4,4)=8  (4,5)=7# (4,9)=2  (4,10)=3  (5,2)=6  (5,6)=3  (5,10)=7# (6,0)=3  (6,4)=2  (6,9)=6  (8,1)=3  (8,2)=4  (8,5)=2  (8,8)=2  (8,10)=7# (9,6)=3  (9,10)=1  (10,2)=2  (10,5)=6  (10,9)=3 
! 6 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,5)
  _011: a point with color green at (0,0)
diff: 
delta: (0,9)=6  (1,2)=7# (1,10)=9# (2,1)=6  (2,5)=1  (4,1)=3  (5,0)=1  (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
   (673.8 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (5,10)
  _011: a point with color brown at (4,9)
  _0111: a point with color orange at (6,8)
diff: 
delta:
   (28.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _011: a point with color red at (0,5)
diff: 
delta: (0,9)=6  (1,2)=7# (1,10)=9# (2,1)=6  (2,5)=1  (4,1)=3  (5,0)=1  (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,5)
  _011: a point with color green at (0,0)
diff: 
delta: (0,9)=6  (1,2)=7# (1,10)=9# (2,1)=6  (2,5)=1  (4,1)=3  (5,0)=1  (5,2)=9# (5,6)=6  (5,9)=7# (5,10)=3  (8,0)=9# (8,5)=9# (8,9)=9# (9,1)=6  (9,6)=4  (9,10)=1  (10,4)=7#
! 6 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (2,5)
  _011: a point with color orange at (0,1)
diff: 
delta: (0,5)=6  (0,8)=7# (1,0)=8  (1,1)=3  (1,2)=6  (1,9)=8  (4,1)=8  (4,2)=7# (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
   (828.8 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (5,0)
  _011: a point with color cyan at (5,2)
  _0111: a point with color orange at (6,2)
diff: 
delta: (6,1)=6 
   (55.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (2,5)
  _011: a point with color orange at (0,1)
diff: 
delta: (0,5)=6  (0,8)=7# (1,0)=8  (1,1)=3  (1,2)=6  (1,9)=8  (4,1)=8  (4,2)=7# (4,10)=7# (5,4)=8  (5,9)=8  (5,10)=6  (6,2)=6  (6,8)=3  (8,1)=6  (8,5)=8  (9,0)=8  (9,4)=3  (9,8)=4  (9,10)=8  (10,1)=7# (10,5)=6  (10,9)=6  (10,10)=7#
! 5 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _011: a point with color blue at (0,5)
diff: 
delta: (0,10)=2  (1,1)=2  (1,5)=3  (1,9)=6  (4,1)=1  (4,9)=3  (5,0)=7# (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
   (724.4 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a point with color yellow at (0,5)
  _011: a point with color green at (2,5)
  _0111: a point with color orange at (1,5)
diff: 
delta:
   (28.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _011: a point with color blue at (0,5)
diff: 
delta: (0,10)=2  (1,1)=2  (1,5)=3  (1,9)=6  (4,1)=1  (4,9)=3  (5,0)=7# (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,5)
  _011: a point with color green at (0,0)
diff: 
delta: (0,10)=2  (1,1)=2  (1,5)=3  (1,9)=6  (4,1)=1  (4,9)=3  (5,0)=7# (5,2)=6  (5,4)=2  (5,6)=7# (5,9)=7# (6,9)=6  (8,0)=7# (8,5)=4  (8,10)=3  (9,5)=7# (9,8)=2  (10,1)=3  (10,5)=3  (10,10)=6 
! 6 wrong pixels (generated / expected)

TRAIN 6d0160f0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (5,1) and color red and mask Full at (5,5)
  _011: a point with color red at (0,0)
diff: 
delta: (0,2)=3  (0,4)=2  (0,9)=3  (1,0)=7# (1,1)=6  (1,5)=7# (1,8)=6  (1,9)=7# (2,4)=6  (2,6)=3  (2,10)=2  (4,0)=7# (4,8)=6  (4,10)=4  (5,1)=6  (5,6)=7# (5,9)=2  (6,0)=6  (6,2)=2  (6,5)=3  (6,9)=7# (8,0)=7# (8,5)=6  (8,8)=2  (8,9)=3  (9,2)=6  (10,0)=2  (10,5)=7# (10,9)=6  (10,10)=7#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (11,11) and color grey and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (4,1) and color pink and mask Full at (1,8)
  _011: a point with color red at (0,0)
diff: 
delta: (0,2)=3  (0,4)=2  (0,9)=3  (1,0)=7# (1,1)=6  (1,5)=7# (1,9)=7# (2,4)=6  (2,6)=3  (2,8)=0  (2,10)=2  (4,0)=7# (4,10)=4  (5,1)=6  (5,5)=2  (5,6)=7# (5,9)=2  (6,0)=6  (6,2)=2  (6,5)=3  (6,9)=7# (8,0)=7# (8,5)=6  (8,8)=2  (8,9)=3  (9,2)=6  (9,5)=2  (10,0)=2  (10,5)=7# (10,9)=6  (10,10)=7#
! 7 wrong pixels (generated / expected)

TEST 6d0160f0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.1 sec (5.1 sec/task)
bits-train-error = 1694.2 bits (1694.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-237] Checking task 6d0aefbc.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4711.0 = 4726.6
DL output with Mo: L = 15.6 + 8841.3 = 8856.9
DL input+output M: L = 31.2 + 13552.3 = 13583.5

# learning a model for train pairs
2.000	
1.601	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.334	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.240	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.196	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.158	OUT DEF: ^.size.j=^.size.j * 2
1.122	OUT DEF: ^.layer_0.shape.size.j=^.size.j * 2
1.093	OUT DEF: ^.size.i=^.size.i
1.070	OUT DEF: ^.layer_0.shape.size.i=bottom(^.layer_0) + 1
1.045	OUT DEF: ^.layer_01.pos=max(^.layer_0.pos, ^.layer_01.pos)
1.023	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j * 2) and color ? and layers
  _0: a rectangle with size (bottom(^.layer_0) + 1,^.size.j * 2) and color ? and mask ? at (?,^.layer_0.pos.j)
  _01: a rectangle with size (?,?) and color ? and mask ? at max(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 68.9 + 3183.9 = 3252.8
DL output with Mo: L = 137.2 + 2827.7 = 2964.9
DL input+output M: L = 206.1 + 6011.6 = 6217.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a point with color blue at (1,0)
diff: 
delta: (1,2)=1 
   (84.3 bits)
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (3,6) and color pink and mask xxxxxx|.x..x.|..xx.. at (0,0)
  _01: a rectangle with size (1,6) and color cyan and mask Full at (2,0)
diff: 
delta:
   (63.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _01: a point with color blue at (1,0)
diff: 
delta: (1,2)=1 
! 18 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|.xx|xx. at (0,0)
  _01: a point with color cyan at (0,1)
diff: 
delta:
   (76.8 bits)
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (3,6) and color blue and mask ..xx..|.xxxx.|xx..xx at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (0,1)
diff: 
delta:
   (62.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|.xx|xx. at (0,0)
  _01: a point with color cyan at (0,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01: a point with color cyan at (0,1)
diff: 
delta: (2,2)=6 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,0)
  _01: a point with color pink at (2,2)
diff: 
delta: (0,1)=8 
! 18 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (2,0)=6 
   (95.4 bits)
data: a background with size (3,6) and color cyan and layers
  _0: a rectangle with size (2,6) and color blue and mask xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (1,2)
diff: 
delta: (2,0)=6  (2,5)=6 
   (101.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (2,0)=6 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,0)
  _01: a point with color pink at (2,0)
diff: 
delta: (1,2)=6 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,3) and color cyan and mask x..|.xx at (1,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (2,0)=6 
! 18 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a point with color blue at (1,0)
diff: 
delta:
   (62.0 bits)
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (1,6) and color pink and mask Full at (2,0)
  _01: a rectangle with size (2,6) and color pink and mask .xxxx.|xxxxxx at (1,0)
diff: 
delta:
   (55.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a point with color blue at (1,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (1,1)
  _01: a point with color pink at (2,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,0)
  _01: a point with color blue at (0,1)
diff: 
delta: (0,2)=1 
! 18 wrong pixels (generated / expected)

TRAIN 6d0aefbc.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color cyan and mask Odd Checkboard at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta: (2,2)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color cyan and mask Odd Checkboard at (0,0)
  _01: a point with color blue at (2,2)
diff: 
delta: (2,0)=1 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color pink and mask x.x|.x.|.x. at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta: (2,2)=1 
! 18 wrong pixels (generated / expected)

TEST 6d0aefbc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.7 sec (12.7 sec/task)
bits-train-error = 2827.7 bits (2827.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-236] Checking task 6d58a25d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 19624.1 = 19639.7
DL output with Mo: L = 15.6 + 38508.6 = 38524.2
DL input+output M: L = 31.2 + 58132.7 = 58163.9

# learning a model for train pairs
2.000	
1.666	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.148	OUT OBJECT at ^.layer_00: ^.layer_0
0.992	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.943	IN  DEF: ^.layer_0.shape.mask=...x...|..xxx..|.xx.xx.|x.....x
0.924	OUT DEF: ^.size=^.size
0.913	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.892	OUT OBJECT at ^.layer_011: ^.layer_01
0.880	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.859	OUT OBJECT at ^.layer_0111: ^.layer_011
0.848	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.827	OUT OBJECT at ^.layer_01111: ^.layer_0111
0.815	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ...x...|..xxx..|.xx.xx.|x.....x at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 157.5 + 11569.7 = 11727.2
DL output with Mo: L = 102.4 + 8284.9 = 8387.2
DL input+output M: L = 259.9 + 19854.5 = 20114.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
diff: 
delta: (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
   (249.5 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _0: a rectangle with size (13,1) and color cyan and mask Full at (7,9)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (10,1)
  _011: a point with color cyan at (2,5)
  _0111: a point with color cyan at (3,16)
  _01111: a point with color cyan at (4,3)
diff: 
delta: (10,18)=8  (18,15)=8  (19,1)=8 
   (152.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (4,3)
  _01111: a point with color cyan at (10,1)
diff: 
delta: (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color brown and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,6)
  _01: a point with color cyan at (2,5)
  _011: a point with color cyan at (3,16)
  _0111: a point with color cyan at (10,1)
  _01111: a point with color cyan at (4,3)
diff: 
delta: (10,18)=8  (13,9)=8  (18,15)=8  (19,1)=8 
! 21 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,13)
  _01111: a point with color red at (4,16)
diff: 
delta: (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
   (331.6 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _0: a rectangle with size (12,1) and color red and mask Full at (8,6)
  _01: a rectangle with size (12,1) and color red and mask Full at (8,9)
  _011: a point with color red at (1,8)
  _0111: a point with color red at (2,2)
  _01111: a point with color red at (4,13)
diff: 
delta: (4,16)=2  (9,17)=2  (10,1)=2  (14,16)=2  (17,14)=2  (18,1)=2 
   (241.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,13)
  _01111: a point with color red at (4,16)
diff: 
delta: (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color orange and mask ...x...|..xxx..|.xx.xx.|x.....x at (5,4)
  _01: a point with color red at (1,8)
  _011: a point with color red at (2,2)
  _0111: a point with color red at (4,16)
  _01111: a point with color red at (4,13)
diff: 
delta: (9,17)=2  (10,1)=2  (10,9)=2  (12,6)=2  (14,16)=2  (17,14)=2  (18,1)=2 
! 34 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (2,10)
  _01111: a point with color green at (4,1)
diff: 
delta: (5,7)=3  (5,18)=3  (7,4)=3  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
   (575.8 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _0: a rectangle with size (14,2) and color green and mask Full (and Border) at (6,12)
  _01: a rectangle with size (13,1) and color green and mask Full at (7,10)
  _011: a point with color green at (1,14)
  _0111: a point with color green at (2,5)
  _01111: a point with color green at (2,10)
diff: 
delta: (4,1)=3  (5,7)=3  (5,18)=3  (7,4)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,18)=3  (15,4)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,19)=3 
   (434.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (2,10)
  _01111: a point with color green at (4,1)
diff: 
delta: (5,7)=3  (5,18)=3  (7,4)=3  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! 57 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color yellow and mask ...x...|..xxx..|.xx.xx.|x.....x at (4,9)
  _01: a point with color green at (1,14)
  _011: a point with color green at (2,5)
  _0111: a point with color green at (4,1)
  _01111: a point with color green at (2,10)
diff: 
delta: (5,7)=3  (5,18)=3  (7,4)=3  (9,10)=3  (10,2)=3  (12,0)=3  (12,7)=3  (12,13)=3  (12,18)=3  (15,4)=3  (16,12)=3  (17,1)=3  (17,16)=3  (18,7)=3  (18,13)=3  (18,19)=3 
! 57 wrong pixels (generated / expected)

TRAIN 6d58a25d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ...x...|..xxx..|.xx.xx.|x.....x at (3,3)
  _01: a point with color pink at (1,4)
  _011: a point with color pink at (1,10)
  _0111: a point with color pink at (1,18)
  _01111: a point with color pink at (2,11)
diff: 
delta: (3,2)=6  (5,13)=6  (5,18)=6  (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! 59 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ...x...|..xxx..|.xx.xx.|x.....x at (3,3)
  _01: a point with color pink at (1,4)
  _011: a point with color pink at (1,10)
  _0111: a point with color pink at (2,11)
  _01111: a point with color pink at (1,18)
diff: 
delta: (3,2)=6  (5,13)=6  (5,18)=6  (7,7)=6  (7,16)=6  (8,0)=6  (8,4)=6  (10,5)=6  (12,1)=6  (12,11)=6  (12,16)=6  (14,18)=6  (16,7)=6  (16,14)=6  (18,17)=6  (19,10)=6 
! 59 wrong pixels (generated / expected)

TEST 6d58a25d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.2 sec (26.2 sec/task)
bits-train-error = 8284.9 bits (8284.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-235] Checking task 6d75e8bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14988.2 = 15003.9
DL output with Mo: L = 15.6 + 23190.8 = 23206.4
DL input+output M: L = 31.2 + 38179.0 = 38210.2

# learning a model for train pairs
2.000	
1.184	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.574	OUT OBJECT at ^.layer_0: ^.layer_0
0.271	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.245	OUT DEF: ^.size=^.size
0.234	IN  DEF: ^.layer_0.shape.color=cyan
0.225	OUT DEF: ^.layer_01.shape.size.i=bottom(^.layer_0) - 1
0.217	OUT DEF: ^.layer_01.shape.color=red
0.210	OUT DEF: ^.layer_01.pos.i=2
0.204	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.i
0.199	IN  DEF: ^.color=black
0.195	OUT DEF: ^.layer_01.shape.mask=Full
0.191	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (bottom(^.layer_0) - 1,?) and color red and mask Full at (2,^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 2461.5 = 2511.8
DL output with Mo: L = 80.9 + 473.7 = 554.6
DL input+output M: L = 131.2 + 2935.2 = 3066.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
diff: 
delta:
   (91.3 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
  _01: a rectangle with size (9,3) and color red and mask Full at (2,2)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (9,4) and color cyan and mask xxx.|x...|xxxx|xx..|xxx.|x...|xxx.|xxx.|xx.. at (2,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
diff: 
delta:
   (73.3 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
  _01: a rectangle with size (3,5) and color red and mask Full at (2,1)
diff: 
delta:
   (8.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (4,6) and color cyan and mask xxxxxx|x.xx.x|x.x..x|..x.xx at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
diff: 
delta:
   (81.5 bits)
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
  _01: a rectangle with size (5,3) and color red and mask Full at (2,1)
diff: 
delta: (2,4)=2 
   (32.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (6,5) and color cyan and mask xxxxx|..x.x|.xxxx|..xxx|...xx|..xxx at (1,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 6d75e8bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color black and layers
  _0: a rectangle with size (6,7) and color cyan and mask x......|x...xx.|x.x..x.|xxx..x.|xxxx.xx|xxxxxxx at (2,2)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TEST 6d75e8bb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 473.7 bits (473.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-234] Checking task 6e02f1e3.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4025.1 = 4040.7
DL output with Mo: L = 15.6 + 4185.6 = 4201.2
DL input+output M: L = 31.2 + 8210.7 = 8241.9

# learning a model for train pairs
2.000	
1.613	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.399	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.243	OUT DEF: ^.size=^.size
1.149	OUT DEF: ^.layer_0.pos='(0,0)
1.072	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
1.005	OUT DEF: ^.layer_0.shape.color=grey
0.976	OUT DEF: ^.color=black
0.972	IN  DEF: ^.layer_0.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color grey and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 48.8 + 3111.2 = 3160.1
DL output with Mo: L = 41.1 + 756.0 = 797.0
DL input+output M: L = 89.9 + 3867.2 = 3957.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (1,1)=2 
   (68.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color green and mask x.x|xxx at (1,0)
diff:   ^.layer_0.shape.mask
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
diff: 
delta: (1,0)=4  (2,0)=4  (2,1)=4 
   (113.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
diff: 
delta: (1,0)=4  (2,0)=4  (2,1)=4 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff: 
delta: (1,1)=2  (1,2)=2  (2,2)=2 
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta:
   (41.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (41.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
   (45.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 6e02f1e3.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,0)
diff: 
delta: (1,1)=3  (2,0)=3  (2,2)=3 
! 5 wrong pixels (generated / expected)

TEST 6e02f1e3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 756.0 bits (756.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-233] Checking task 6e19193c.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3547.8 = 3563.4
DL output with Mo: L = 15.6 + 7073.2 = 7088.9
DL input+output M: L = 31.2 + 10621.0 = 10652.2

# learning a model for train pairs
2.000	
1.785	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.556	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.344	OUT OBJECT at ^.layer_0: ^.layer_0
1.131	OUT OBJECT at ^.layer_01: ^.layer_01
0.966	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.840	OUT DEF: ^.size=^.size
0.792	IN  DEF: ^.layer_0.shape.mask=xx|.x
0.745	IN  DEF: ^.layer_01.shape.mask=x.|xx
0.730	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.715	OUT DEF: ^.layer_0111.shape.color=^.layer_01.shape.color
0.701	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.j
0.687	IN  DEF: ^.color=black
0.673	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.j + 2
0.660	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.i / 2
0.647	OUT DEF: ^.layer_0111.pos.i=^.layer_01.pos.j / 2
0.634	OUT DEF: ^.layer_011.shape.size.i=min(^.layer_0.pos.i, ^.layer_01.pos.i) + 2
0.621	OUT DEF: ^.layer_0111.shape.size.i=span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1
0.609	OUT DEF: ^.layer_011.shape.size.j=min(^.layer_0.pos.i, ^.layer_01.pos.i) + 2
0.596	OUT DEF: ^.layer_0111.shape.size.j=span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1
0.589	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (min(^.layer_0.pos.i, ^.layer_01.pos.i) + 2,min(^.layer_0.pos.i, ^.layer_01.pos.i) + 2) and color ^.layer_01.shape.color and mask ? at (^.layer_0.pos.j,^.layer_0.pos.i / 2)
  _0111: a rectangle with size (span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1,span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.j / 2,^.layer_01.pos.j + 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask xx|.x at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask x.|xx at (?,?)

DL input  with Mi: L = 91.2 + 1501.6 = 1592.8
DL output with Mo: L = 348.0 + 660.9 = 1008.9
DL input+output M: L = 439.2 + 2162.5 = 2601.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
diff: 
delta:
   (75.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _011: a rectangle with size (4,4) and color orange and mask ...x|..x.|.x..|x... at (6,2)
  _0111: a rectangle with size (2,2) and color orange and mask Odd Checkboard at (0,3)
diff: 
delta:
   (27.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask x.|xx at (2,1)
  _01: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.mask
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask xx|.x at (4,6)
  _01: a rectangle with size (1,2) and color orange and mask Full at (3,1)
diff:   ^.layer_01.shape.mask
delta: (2,1)=7#
! 20 wrong pixels (generated / expected)

TRAIN 6e19193c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
  _01: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
diff: 
delta:
   (75.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
  _01: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _011: a rectangle with size (3,3) and color brown and mask ..x|.x.|x.. at (3,0)
  _0111: a rectangle with size (5,5) and color brown and mask ....x|...x.|..x..|.x...|x.... at (1,5)
diff: 
delta:
   (39.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
  _01: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask x.|xx at (6,3)
  _01: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.mask
delta:
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask xx|.x at (1,3)
  _01: a rectangle with size (1,2) and color brown and mask Full at (7,3)
diff:   ^.layer_01.shape.mask
delta: (6,3)=9#
! 32 wrong pixels (generated / expected)

TRAIN 6e19193c.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (6,2)
  _01: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,3)
diff:   ^.layer_01.shape.mask
delta: (4,7)=8  (4,8)=8  (5,7)=8 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|.x at (6,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (4,7)
diff:   ^.layer_01.shape.mask
delta: (2,4)=8  (3,3)=8  (3,4)=8 
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask .x|xx at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (4,7)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.mask
delta: (6,2)=8  (6,3)=8  (7,3)=8 
! 20 wrong pixels (generated / expected)

TEST 6e19193c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.9 sec (6.9 sec/task)
bits-train-error = 660.9 bits (660.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-232] Checking task 6e82a1ae.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 12113.9 = 12129.5
DL output with Mo: L = 15.6 + 12113.9 = 12129.5
DL input+output M: L = 31.2 + 24227.8 = 24259.0

# learning a model for train pairs
2.000	
1.838	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.676	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.546	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.416	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.325	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.234	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.151	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.068	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT DEF: ^.size=^.size
0.988	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.960	OUT DEF: ^.layer_0111.pos=^.layer_0111.pos
0.931	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.903	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.875	OUT DEF: ^.layer_0.pos=^.layer_0.pos
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at ^.layer_01.pos
  _011: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011.pos
  _0111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0111.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 6330.2 = 6475.3
DL output with Mo: L = 109.3 + 4023.3 = 4132.6
DL input+output M: L = 254.5 + 10353.5 = 10607.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
diff: 
delta: (6,5)=5# (6,6)=5# (7,1)=5# (8,1)=5#
   (263.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,7)
  _01: a rectangle with size (2,3) and color blue and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,9)
diff: 
delta: (6,5)=3  (6,6)=3  (7,1)=3  (8,1)=3 
   (187.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (1,7)
  _01: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
diff: 
delta: (6,5)=5# (6,6)=5# (7,1)=5# (8,1)=5#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|.xx at (2,1)
  _01: a rectangle with size (2,2) and color grey and mask Full (and Border) at (1,7)
  _011: a rectangle with size (2,2) and color grey and mask .x|xx at (8,3)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (5,9)
diff: 
delta: (6,5)=5# (6,6)=5# (7,1)=5# (8,1)=5#
! 20 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (8,1)
  _01: a rectangle with size (2,3) and color grey and mask .x.|xxx at (7,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
diff: 
delta: (2,7)=5# (3,7)=5#
   (212.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (8,1)
  _01: a rectangle with size (2,3) and color blue and mask .x.|xxx at (7,6)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color red and mask xx|x. at (5,3)
diff: 
delta: (2,7)=3  (3,7)=3 
   (135.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (8,1)
  _01: a rectangle with size (2,3) and color grey and mask .x.|xxx at (7,6)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
diff: 
delta: (2,7)=5# (3,7)=5#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask .x.|xxx at (7,6)
  _01: a rectangle with size (2,2) and color grey and mask Full (and Border) at (8,1)
  _011: a rectangle with size (1,3) and color grey and mask Full at (2,1)
  _0111: a rectangle with size (2,2) and color grey and mask xx|x. at (5,3)
diff: 
delta: (2,7)=5# (3,7)=5#
! 20 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask xx|.x at (1,6)
  _01: a rectangle with size (3,2) and color grey and mask x.|xx|x. at (6,0)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
diff: 
delta:
   (156.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (1,6)
  _01: a rectangle with size (3,2) and color blue and mask x.|xx|x. at (6,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color green and mask Full at (1,2)
diff: 
delta:
   (79.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask x.|xx|x. at (6,0)
  _01: a rectangle with size (2,2) and color grey and mask xx|.x at (1,6)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask xx|.x at (1,6)
  _01: a rectangle with size (3,2) and color grey and mask x.|xx|x. at (6,0)
  _011: a rectangle with size (1,2) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (1,2)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 6e82a1ae.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|xx. at (2,1)
  _01: a rectangle with size (4,1) and color grey and mask Full at (0,9)
  _011: a rectangle with size (2,2) and color grey and mask xx|.x at (2,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,0)
diff: 
delta: (7,3)=5# (7,4)=5# (7,7)=5# (8,7)=5#
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|xx. at (2,1)
  _01: a rectangle with size (2,2) and color grey and mask xx|.x at (2,5)
  _011: a rectangle with size (4,1) and color grey and mask Full at (0,9)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (6,0)
diff: 
delta: (7,3)=5# (7,4)=5# (7,7)=5# (8,7)=5#
! 22 wrong pixels (generated / expected)

TEST 6e82a1ae.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 4023.3 bits (4023.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-231] Checking task 6ecd11f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 103194.4 = 103210.1
DL output with Mo: L = 15.6 + 5238.8 = 5254.4
DL input+output M: L = 31.2 + 108433.3 = 108464.5

# learning a model for train pairs
2.000	
1.167	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.123	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.077	OUT DEF: ^.layer_0.pos='(0,0)
1.032	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.987	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.941	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.892	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.860	OUT DEF: ^.layer_01111.shape.color=pink
0.838	OUT DEF: ^.layer_01.pos.i='0
0.815	OUT DEF: ^.layer_0111.pos.j='0
0.793	OUT DEF: ^.layer_01.pos.j=2
0.771	OUT DEF: ^.layer_011.pos.i=1
0.756	OUT DEF: ^.color=black
0.751	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.732	OUT DEF: ^.layer_0111.pos.i=area(^.layer_01.shape) - 1
0.712	OUT DEF: ^.layer_01111.pos.j=area(^.layer_01.shape) - 1
0.694	OUT DEF: ^.layer_011.pos.j=^.layer_01.shape.size.i / 2
0.692	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.662	OUT DEF: ^.size.i=span(^.layer_01.pos.i, ^.layer_011.pos.i) + 1
0.634	OUT DEF: ^.size.j=span(^.layer_01.pos.i, ^.layer_011.pos.i) + 1
0.632	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
0.628	OUT DEF: ^.size=span(^.layer_01.pos, ^.layer_010.pos) + span(^.layer_011.pos, ^.layer_010.pos)
0.626	OUT DEF: ^.layer_011.pos=span(^.layer_01.pos, ^.layer_011.pos) / 2
0.626	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size span(^.layer_01.pos, ^.layer_010.pos) + span(^.layer_011.pos, ^.layer_010.pos) and color black and layers
  _0: a point with color ? at '(0,0)
  _01: a point with color ? at ('0,2)
  _011: a point with color ? at span(^.layer_01.pos, ^.layer_011.pos) / 2
  _0111: a point with color ? at (area(^.layer_01.shape) - 1,'0)
  _01111: a point with color pink at (?,area(^.layer_01.shape) - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 119.7 + 16019.9 = 16139.6
DL output with Mo: L = 268.8 + 2197.2 = 2466.0
DL input+output M: L = 388.5 + 18217.2 = 18605.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a point with color blue at (19,8)
  _01: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _011: a point with color cyan at (20,8)
diff: 
delta: (19,9)=7# (20,7)=2  (20,9)=9# (21,8)=4  (21,9)=6 
   (511.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color orange at (0,2)
  _011: a point with color cyan at (1,1)
  _0111: a point with color green at (2,0)
  _01111: a point with color pink at (2,2)
diff: 
delta:
   (26.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a point with color blue at (19,8)
  _01: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _011: a point with color orange at (19,9)
diff: 
delta: (20,7)=2  (20,8)=8  (20,9)=9# (21,8)=4  (21,9)=6 
! size mismatch, 2x4 instead of 3x3
>> Trial 2
data: a background with size (27,21) and color black and layers
  _0: a rectangle with size (15,15) and color blue and mask xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|.....xxxxx.....|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx|xxxxx.....xxxxx at (1,1)
  _010: a point with color blue at (19,8)
  _01: a rectangle with size (3,1) and color green and mask Full at (19,7)
  _011: a point with color cyan at (20,8)
diff: 
delta: (19,9)=7# (20,7)=2  (20,9)=9# (21,8)=4  (21,9)=6 
! 5 wrong pixels (generated / expected)

TRAIN 6ecd11f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a point with color red at (19,8)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _011: a point with color blue at (19,9)
diff: 
delta: (19,10)=7# (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
   (367.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color orange at (0,2)
  _011: a point with color cyan at (1,1)
  _0111: a point with color yellow at (1,0)
  _01111: a point with color pink at (2,1)
diff: 
delta: (2,2)=1 
   (49.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask xxx...xxx|xxx...xxx|xxx...xxx|xxxxxx...|xxxxxx...|xxxxxx...|...xxxxxx|...xxxxxx|...xxxxxx at (3,9)
  _010: a point with color red at (19,8)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (20,8)
  _011: a point with color blue at (19,9)
diff: 
delta: (19,10)=7# (20,8)=4  (20,10)=9# (21,9)=6  (21,10)=1 
! 7 wrong pixels (generated / expected)

TRAIN 6ecd11f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a point with color yellow at (16,17)
  _01: a rectangle with size (1,3) and color grey and mask Full at (18,18)
  _011: a point with color blue at (16,18)
diff: 
delta: (16,19)=9# (16,20)=4  (17,17)=6  (17,18)=3  (17,19)=6  (17,20)=1  (18,17)=3  (18,19)=7# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
   (723.3 bits)
data: a background with size (4,4) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color brown at (0,2)
  _011: a point with color pink at (1,0)
  _0111: a point with color green at (2,0)
  _01111: a point with color pink at (1,2)
diff: 
delta: (0,3)=4  (2,3)=5# (3,0)=2  (3,1)=4  (3,2)=2 
   (143.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a point with color yellow at (16,17)
  _01: a rectangle with size (1,3) and color pink and mask Full at (17,17)
  _011: a point with color blue at (16,18)
diff: 
delta: (16,19)=9# (16,20)=4  (17,18)=3  (17,20)=1  (18,17)=3  (18,18)=5# (18,19)=7# (18,20)=5# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
! size mismatch, 3x3 instead of 4x4
>> Trial 2
data: a background with size (22,22) and color black and layers
  _0: a rectangle with size (16,16) and color cyan and mask xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxxxxxx|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx....xxxx....|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxx........xxxx|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx....|xxxxxxxxxxxx.... at (1,2)
  _010: a point with color yellow at (16,17)
  _01: a rectangle with size (1,3) and color grey and mask Full at (18,18)
  _011: a point with color blue at (16,18)
diff: 
delta: (16,19)=9# (16,20)=4  (17,17)=6  (17,18)=3  (17,19)=6  (17,20)=1  (18,17)=3  (18,19)=7# (19,17)=2  (19,18)=4  (19,19)=2  (19,20)=7#
! 10 wrong pixels (generated / expected)

TRAIN 6ecd11f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 6ecd11f4.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 5.7 sec (5.7 sec/task)
bits-train-error = 2197.2 bits (2197.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-230] Checking task 6f8cd79b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 683.7 = 699.4
DL output with Mo: L = 15.6 + 5910.7 = 5926.3
DL input+output M: L = 31.2 + 6594.4 = 6625.7

# learning a model for train pairs
2.000	
1.352	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.210	IN  DEF: ^.color=black
1.110	OUT DEF: ^.size=^.size
1.017	OUT DEF: ^.layer_0.shape.size=^.size
0.958	OUT DEF: ^.layer_0.pos='(0,0)
0.920	OUT DEF: ^.layer_0.shape.color=cyan
0.882	OUT DEF: ^.layer_0.shape.mask=Border
0.866	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color cyan and mask Border at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers

DL input  with Mi: L = 14.7 + 585.4 = 600.2
DL output with Mo: L = 43.9 + 0.0 = 43.9
DL input+output M: L = 58.6 + 585.4 = 644.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
diff: 
delta:
   (13.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (4,3) and color black and layers
diff: 
delta:
   (13.8 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,4) and color black and layers
diff: 
delta:
   (15.3 bits)
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (5,6) and color black and layers
diff: 
delta:
   (16.5 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (5,6) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
diff: 
delta:
correct output grid

TRAIN 6f8cd79b.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
diff: 
delta:
correct output grid

TEST 6f8cd79b.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-229] Checking task 6fa7a44f.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5588.1 = 5603.8
DL output with Mo: L = 15.6 + 10657.4 = 10673.0
DL input+output M: L = 31.2 + 16245.5 = 16276.8

# learning a model for train pairs
2.000	
1.692	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.502	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.430	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.350	OUT DEF: ^.layer_0.pos.i=area(^.layer_0.shape) - ^.layer_0.shape.size.i
1.288	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.224	OUT OBJECT at ^.layer_011: ^.layer_01
1.168	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
1.137	OUT DEF: ^.size.i=^.size.i * 2
1.113	OUT DEF: ^.size.j=^.size.j
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i * 2,^.size.j) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (area(^.layer_0.shape) - ^.layer_0.shape.size.i,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 4107.1 = 4188.3
DL output with Mo: L = 150.7 + 3752.5 = 3903.3
DL input+output M: L = 232.0 + 7859.6 = 8091.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (2,1) and color brown and mask Full at (0,0)
diff: 
delta: (2,0)=2 
   (96.2 bits)
data: a background with size (6,3) and color yellow and layers
  _0: a rectangle with size (6,2) and color blue and mask x.|x.|xx|xx|x.|x. at (0,1)
  _010: a rectangle with size (2,1) and color brown and mask Full at (4,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (2,0)
  _011: a rectangle with size (2,1) and color brown and mask Full at (0,0)
diff: 
delta:
   (84.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (2,0)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (2,1) and color brown and mask Full at (0,0)
diff: 
delta: (2,0)=2 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|x.|xx at (0,1)
  _01: a rectangle with size (2,1) and color brown and mask Full at (0,0)
diff: 
delta: (2,0)=2 
! 17 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (1,1)=6 
   (124.3 bits)
data: a background with size (6,3) and color cyan and layers
  _0: a rectangle with size (4,3) and color orange and mask x.x|.x.|.x.|x.x at (1,0)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (4,1) and color pink and mask Full at (1,1)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (5,0)=4  (5,2)=4 
   (135.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,2)=4  (1,1)=6 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,0)=4  (1,1)=6 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color orange and mask Even Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,1)
diff: 
delta: (0,0)=4  (0,2)=4 
! 18 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|x.. at (1,0)
  _01: a rectangle with size (1,1) and color brown and mask Full at (1,0)
diff: 
delta: (2,1)=1 
   (105.8 bits)
data: a background with size (6,3) and color orange and layers
  _0: a rectangle with size (4,3) and color grey and mask .xx|x..|x..|.xx at (1,0)
  _010: a rectangle with size (1,1) and color brown and mask Full at (4,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _011: a rectangle with size (1,1) and color brown and mask Full at (1,0)
diff: 
delta:
   (85.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|x.. at (1,0)
  _01: a rectangle with size (1,1) and color brown and mask Full at (1,0)
diff: 
delta: (2,1)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (2,3) and color grey and mask .xx|x.. at (1,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,1)
diff: 
delta: (1,0)=9#
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (1,0)
  _01: a rectangle with size (2,3) and color grey and mask .xx|x.. at (1,0)
diff: 
delta: (2,1)=1 
! 16 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|.x|x. at (0,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,1)
diff: 
delta:
   (84.4 bits)
data: a background with size (6,3) and color brown and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (0,0)
  _010: a rectangle with size (2,1) and color pink and mask Full at (4,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (2,1) and color pink and mask Full at (0,1)
diff: 
delta:
   (68.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color brown and mask .x|.x|x. at (0,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (0,1)
  _01: a rectangle with size (3,2) and color brown and mask .x|.x|x. at (0,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 6fa7a44f.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,0)
diff: 
delta: (1,1)=5# (2,2)=8 
! 18 wrong pixels (generated / expected)

TEST 6fa7a44f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.6 sec (24.6 sec/task)
bits-train-error = 3752.5 bits (3752.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-228] Checking task 72322fa7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9864.5 = 9880.1
DL output with Mo: L = 15.6 + 15931.2 = 15946.8
DL input+output M: L = 31.2 + 25795.7 = 25826.9

# learning a model for train pairs
2.000	
1.892	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.760	OUT OBJECT at ^.layer_0: ^.layer_0
1.653	OUT OBJECT at ^.layer_01: ^.layer_0.shape at (?,?)
1.545	OUT OBJECT at ^.layer_00: ^.layer_0.shape at (?,?)
1.459	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.343	OUT OBJECT at ^.layer_011: ^.layer_01
1.301	OUT DEF: ^.size=^.size
1.277	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.253	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.229	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.180	OUT OBJECT at ^.layer_010: ^.layer_0111
1.156	OUT OBJECT at ^.layer_001: ^.layer_0111.shape at (?,?)
1.131	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.106	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.079	OUT OBJECT at ^.layer_000: ^.layer_00.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_00.shape at (?,?)
  _00: ^.layer_0.shape at (?,?)
  _001: ^.layer_0111.shape at (?,?)
  _0: ^.layer_0
  _010: ^.layer_0111
  _01: ^.layer_0.shape at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 159.4 + 6841.4 = 7000.8
DL output with Mo: L = 167.8 + 5745.4 = 5913.2
DL input+output M: L = 327.2 + 12586.8 = 12914.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _011: a point with color pink at (4,6)
  _0111: a point with color blue at (9,1)
  _01111: a point with color pink at (5,19)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
   (314.6 bits)
data: a background with size (13,22) and color black and layers
  _000: a point with color green at (1,13)
  _00: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (4,18)
  _001: a point with color blue at (0,12)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _010: a point with color blue at (9,1)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,8)
  _011: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,14)
diff: 
delta: (2,12)=1  (2,14)=1  (4,6)=6  (5,19)=6  (9,3)=1  (10,2)=3  (10,9)=6  (10,16)=6  (11,1)=1  (11,3)=1 
   (353.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _011: a point with color pink at (4,6)
  _0111: a point with color pink at (5,19)
  _01111: a point with color blue at (9,1)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,22) and color black and layers
  _00: a point with color green at (1,13)
  _0: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (9,15)
  _011: a point with color pink at (4,6)
  _0111: a point with color blue at (9,1)
  _01111: a point with color pink at (5,19)
diff: 
delta: (9,3)=1  (10,2)=3  (10,9)=6  (11,1)=1  (11,3)=1 
! 27 wrong pixels (generated / expected)

TRAIN 72322fa7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,0)
  _0111: a point with color cyan at (10,7)
  _01111: a point with color yellow at (9,2)
diff: 
delta:
   (152.2 bits)
data: a background with size (13,12) and color black and layers
  _000: a point with color cyan at (9,1)
  _00: a rectangle with size (1,3) and color yellow and mask Full at (9,0)
  _001: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _010: a point with color cyan at (10,7)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (10,6)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _0111: a rectangle with size (1,3) and color yellow and mask Full at (4,9)
diff: 
delta:
   (80.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,0)
  _0111: a point with color yellow at (9,2)
  _01111: a point with color cyan at (10,7)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,0)
  _0111: a point with color cyan at (10,7)
  _01111: a point with color yellow at (9,2)
diff: 
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,12) and color black and layers
  _00: a point with color cyan at (3,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (4,10)
  _011: a point with color yellow at (9,2)
  _0111: a point with color yellow at (9,0)
  _01111: a point with color cyan at (10,7)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 72322fa7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _011: a point with color cyan at (3,8)
  _0111: a point with color red at (11,5)
  _01111: a point with color cyan at (3,10)
diff: 
delta: (5,3)=3  (12,12)=3 
   (217.3 bits)
data: a background with size (14,19) and color black and layers
  _000: a point with color red at (3,9)
  _00: a rectangle with size (1,3) and color cyan and mask Full at (3,8)
  _001: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _010: a point with color red at (11,5)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (11,4)
  _011: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (11,12)
diff: 
delta: (5,3)=3  (12,12)=3 
   (140.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _011: a point with color cyan at (3,8)
  _0111: a point with color cyan at (3,10)
  _01111: a point with color red at (11,5)
diff: 
delta: (5,3)=3  (12,12)=3 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,19) and color black and layers
  _00: a point with color red at (1,16)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,15)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,3)
  _011: a point with color cyan at (3,8)
  _0111: a point with color red at (11,5)
  _01111: a point with color cyan at (3,10)
diff: 
delta: (5,3)=3  (12,12)=3 
! 15 wrong pixels (generated / expected)

TRAIN 72322fa7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _00: a point with color green at (1,12)
  _0: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,15)
  _01: a rectangle with size (3,3) and color red and mask Odd Checkboard at (14,10)
  _011: a point with color orange at (1,13)
  _0111: a point with color green at (1,14)
  _01111: a point with color cyan at (2,8)
diff: 
delta: (3,3)=4  (6,5)=3  (6,7)=3  (8,16)=4  (10,1)=8  (10,9)=7# (15,17)=1  (16,5)=4  (16,17)=8  (17,17)=1 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _00: a point with color green at (1,12)
  _0: a rectangle with size (3,3) and color red and mask Odd Checkboard at (7,15)
  _01: a rectangle with size (3,3) and color red and mask Odd Checkboard at (14,10)
  _011: a point with color orange at (1,13)
  _0111: a point with color cyan at (2,8)
  _01111: a point with color green at (1,14)
diff: 
delta: (3,3)=4  (6,5)=3  (6,7)=3  (8,16)=4  (10,1)=8  (10,9)=7# (15,17)=1  (16,5)=4  (16,17)=8  (17,17)=1 
! 35 wrong pixels (generated / expected)

TEST 72322fa7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 5745.4 bits (5745.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-227] Checking task 72ca375d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13619.2 = 13634.8
DL output with Mo: L = 15.6 + 1541.8 = 1557.4
DL input+output M: L = 31.2 + 15161.0 = 15192.2

# learning a model for train pairs
2.000	
1.698	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.479	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.954	OUT OBJECT at ^.layer_0: ^.layer_01.shape at (?,?)
0.727	OUT DEF: ^.size=^.layer_01.shape.size
0.552	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.409	OUT DEF: ^.layer_0.pos='(0,0)
0.361	OUT DEF: ^.color=black
0.356	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: ^.layer_01.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 112.4 + 4356.3 = 4468.7
DL output with Mo: L = 43.9 + 0.0 = 43.9
DL input+output M: L = 156.3 + 4356.3 = 4512.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _01: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _011: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
diff: 
delta:
   (145.1 bits)
data: a background with size (2,4) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _01: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _011: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _01: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
  _011: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
diff: 
delta:
! size mismatch, 2x3 instead of 2x4
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask xx..|.xxx at (1,1)
  _01: a rectangle with size (2,4) and color pink and mask xxxx|.xx. at (6,3)
  _011: a rectangle with size (2,3) and color orange and mask .xx|x.x at (2,6)
diff: 
delta:
correct output grid

TRAIN 72ca375d.json/1: 1 3rd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,2)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
diff: 
delta:
   (138.0 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
  _011: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,2)
diff: 
delta:
! size mismatch, 2x4 instead of 2x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask .xxxx|xxx.. at (7,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,2)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|x.xx at (2,6)
diff: 
delta:
correct output grid

TRAIN 72ca375d.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,7) and color cyan and mask ...xxx.|xxxx.xx at (7,0)
  _01: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (2,5)
  _011: a rectangle with size (3,2) and color green and mask xx|.x|.x at (1,1)
diff: 
delta:
   (152.6 bits)
data: a background with size (2,4) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,7) and color cyan and mask ...xxx.|xxxx.xx at (7,0)
  _01: a rectangle with size (2,4) and color grey and mask x..x|xxxx at (2,5)
  _011: a rectangle with size (3,2) and color green and mask xx|.x|.x at (1,1)
diff: 
delta:
correct output grid

TRAIN 72ca375d.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,5) and color yellow and mask xxxxx|x..xx at (7,4)
  _01: a rectangle with size (3,4) and color brown and mask .xx.|.xx.|xxxx at (2,0)
  _011: a rectangle with size (3,4) and color green and mask x..x|xxxx|...x at (1,5)
diff: 
delta:
correct output grid

TEST 72ca375d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.61
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-226] Checking task 73251a56.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 203989.1 = 204004.7
DL output with Mo: L = 15.6 + 176397.6 = 176413.2
DL input+output M: L = 31.2 + 380386.8 = 380418.0

# learning a model for train pairs
2.000	
1.577	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.304	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.216	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.147	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.077	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 130354.5 = 130435.7
DL output with Mo: L = 113.3 + 77092.3 = 77205.6
DL input+output M: L = 194.5 + 207446.8 = 207641.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (21,13) and color blue and mask x.xx.........|.x..xxx......|x.x...xxxx...|x..x....xxxxx|.x..x.....x..|.x...x.......|.xx...x......|..x....x.....|..xx.........|..xx.........|...xx........|...xx........|...xxx.......|....xx.......|....xxx......|....xxx......|.....xxx.....|.....xxx.....|.....xxxx....|......xxx....|......xxxx... at (0,0)
  _01: a rectangle with size (4,7) and color black and mask xxxxxxx|xxxxxxx|..xxxxx|..xxxxx at (11,10)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,13)=2  (3,14)=2  (3,15)=2  (3,16)=2  (3,17)=2  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=1  (4,15)=1  (4,16)=2  (4,17)=2  (4,18)=2  (4,19)=2  (4,20)=2  (5,0)=2  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (5,19)=2  (5,20)=2  (6,0)=3  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (6,19)=1  (6,20)=1  (7,0)=3  (7,1)=2  (7,8)=0  (7,9)=0  (7,10)=0  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,0)=4  (8,1)=2  (8,8)=0  (8,9)=0  (8,10)=0  (8,18)=1  (8,19)=1  (8,20)=1  (9,0)=4  (9,1)=2  (9,8)=0  (9,9)=0  (9,10)=0  (9,20)=1  (10,0)=5# (10,1)=3  (10,2)=2  (10,10)=1  (11,0)=5# (11,1)=3  (11,2)=2  (12,1)=3  (12,2)=2  (13,1)=4  (13,2)=2  (13,3)=2  (14,0)=1  (14,1)=4  (14,2)=3  (14,3)=2  (15,0)=1  (15,1)=4  (15,2)=3  (15,3)=2  (15,15)=1  (16,0)=2  (16,1)=5# (16,2)=3  (16,3)=2  (16,4)=2  (16,16)=1  (17,0)=2  (17,1)=5# (17,2)=3  (17,3)=2  (17,4)=2  (17,17)=1  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,4)=2  (18,10)=0  (18,11)=0  (18,12)=0  (18,13)=0  (18,18)=1  (19,0)=3  (19,2)=4  (19,3)=3  (19,4)=2  (19,5)=2  (19,10)=0  (19,11)=0  (19,12)=0  (19,13)=0  (19,19)=1  (20,0)=4  (20,2)=4  (20,3)=3  (20,4)=2  (20,5)=2  (20,20)=1 
   (4673.8 bits)
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (21,21) and color blue and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (5,14) and color red and mask xxx...........|...xxxx.......|......xxxxx...|.........xxxxx|............xx at (1,7)
  _011: a rectangle with size (14,5) and color red and mask x....|x....|x....|.x...|.x...|.x...|.xx..|..x..|..x..|..xx.|..xx.|...x.|...xx|...xx at (7,1)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (5,0)=2  (6,0)=3  (7,0)=3  (8,0)=4  (9,0)=4  (10,0)=5# (10,1)=3  (11,0)=5# (11,1)=3  (12,1)=3  (13,1)=4  (14,0)=1  (14,1)=4  (14,2)=3  (15,0)=1  (15,1)=4  (15,2)=3  (16,0)=2  (16,1)=5# (16,2)=3  (17,0)=2  (17,1)=5# (17,2)=3  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (19,0)=3  (19,2)=4  (19,3)=3  (20,0)=4  (20,2)=4  (20,3)=3 
   (2497.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color pink and layers
  _0: a rectangle with size (21,13) and color blue and mask x.xx.........|.x..xxx......|x.x...xxxx...|x..x....xxxxx|.x..x.....x..|.x...x.......|.xx...x......|..x....x.....|..xx.........|..xx.........|...xx........|...xx........|...xxx.......|....xx.......|....xxx......|....xxx......|.....xxx.....|.....xxx.....|.....xxxx....|......xxx....|......xxxx... at (0,0)
  _01: a rectangle with size (4,7) and color black and mask xxxxxxx|xxxxxxx|..xxxxx|..xxxxx at (11,10)
diff: 
delta: (0,4)=2  (0,5)=2  (0,6)=3  (0,7)=3  (0,8)=4  (0,9)=4  (0,10)=5# (0,11)=5# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,18)=3  (0,19)=3  (0,20)=4  (1,7)=2  (1,8)=2  (1,9)=2  (1,10)=3  (1,11)=3  (1,12)=3  (1,13)=4  (1,14)=4  (1,15)=4  (1,16)=5# (1,17)=5# (1,18)=5# (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (2,14)=3  (2,15)=3  (2,16)=3  (2,17)=3  (2,18)=4  (2,19)=4  (2,20)=4  (3,13)=2  (3,14)=2  (3,15)=2  (3,16)=2  (3,17)=2  (3,18)=3  (3,19)=3  (3,20)=3  (4,0)=2  (4,11)=0  (4,12)=0  (4,13)=0  (4,14)=1  (4,15)=1  (4,16)=2  (4,17)=2  (4,18)=2  (4,19)=2  (4,20)=2  (5,0)=2  (5,11)=0  (5,12)=0  (5,13)=0  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (5,19)=2  (5,20)=2  (6,0)=3  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (6,19)=1  (6,20)=1  (7,0)=3  (7,1)=2  (7,8)=0  (7,9)=0  (7,10)=0  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,0)=4  (8,1)=2  (8,8)=0  (8,9)=0  (8,10)=0  (8,18)=1  (8,19)=1  (8,20)=1  (9,0)=4  (9,1)=2  (9,8)=0  (9,9)=0  (9,10)=0  (9,20)=1  (10,0)=5# (10,1)=3  (10,2)=2  (10,10)=1  (11,0)=5# (11,1)=3  (11,2)=2  (12,1)=3  (12,2)=2  (13,1)=4  (13,2)=2  (13,3)=2  (14,0)=1  (14,1)=4  (14,2)=3  (14,3)=2  (15,0)=1  (15,1)=4  (15,2)=3  (15,3)=2  (15,15)=1  (16,0)=2  (16,1)=5# (16,2)=3  (16,3)=2  (16,4)=2  (16,16)=1  (17,0)=2  (17,1)=5# (17,2)=3  (17,3)=2  (17,4)=2  (17,17)=1  (18,0)=3  (18,1)=5# (18,2)=4  (18,3)=3  (18,4)=2  (18,10)=0  (18,11)=0  (18,12)=0  (18,13)=0  (18,18)=1  (19,0)=3  (19,2)=4  (19,3)=3  (19,4)=2  (19,5)=2  (19,10)=0  (19,11)=0  (19,12)=0  (19,13)=0  (19,19)=1  (20,0)=4  (20,2)=4  (20,3)=3  (20,4)=2  (20,5)=2  (20,20)=1 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color grey and layers
  _0: a rectangle with size (21,21) and color pink and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x.......xxxxx........|.x........xxxxxx.....|.x..........xxxxxxx..|.xx...........xxxxxxx|..x.............xxxxx|..xx..............xxx|..xx................x|...xx................|...xx................|...xxx...............|....xx...............|......x..............|......x..............|.....xxx.............|.....xxx.............|.....xxx.............|......xxx............|......xxxx........... at (0,0)
  _01: a rectangle with size (4,8) and color black and mask xxx.....|xxx.....|xxxxxxxx|...xxxxx at (6,9)
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,7)=7# (1,8)=7# (1,9)=7# (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,3)=0  (3,4)=0  (3,5)=0  (3,13)=7# (3,14)=7# (3,15)=7# (3,16)=7# (3,17)=7# (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (4,3)=0  (4,4)=0  (4,5)=0  (4,16)=7# (4,17)=7# (4,18)=7# (4,19)=7# (4,20)=7# (5,0)=7# (5,3)=0  (5,4)=0  (5,5)=0  (5,19)=7# (5,20)=7# (6,0)=1  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=6  (7,0)=1  (7,1)=7# (7,3)=0  (7,4)=0  (7,5)=0  (7,7)=6  (8,0)=2  (8,1)=7# (8,8)=6  (9,0)=2  (9,1)=7# (9,9)=6  (10,0)=3  (10,1)=1  (10,2)=7# (10,10)=6  (11,0)=3  (11,1)=1  (11,2)=7# (11,11)=6  (12,0)=4  (12,1)=1  (12,2)=7# (12,12)=6  (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (13,13)=6  (14,1)=2  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,14)=6  (15,1)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,15)=6  (16,0)=6  (16,1)=3  (16,2)=1  (16,3)=7# (16,4)=7# (16,16)=6  (17,0)=6  (17,1)=3  (17,2)=1  (17,3)=7# (17,4)=7# (17,8)=0  (17,9)=0  (17,10)=0  (17,11)=0  (17,17)=6  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (18,4)=7# (18,8)=0  (18,9)=0  (18,10)=0  (18,11)=0  (18,18)=6  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (19,4)=7# (19,5)=7# (19,19)=6  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1  (20,4)=7# (20,5)=7# (20,20)=6 
   (4593.1 bits)
data: a background with size (21,21) and color grey and layers
  _0: a rectangle with size (21,21) and color pink and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (5,14) and color orange and mask xxx...........|...xxxx.......|......xxxxx...|.........xxxxx|............xx at (1,7)
  _011: a rectangle with size (14,5) and color orange and mask x....|x....|x....|.x...|.x...|.x...|.xx..|..x..|..x..|..xx.|..xx.|...x.|...xx|...xx at (7,1)
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (5,0)=7# (6,0)=1  (7,0)=1  (8,0)=2  (9,0)=2  (10,0)=3  (10,1)=1  (11,0)=3  (11,1)=1  (12,0)=4  (12,1)=1  (13,0)=4  (13,1)=2  (14,1)=2  (14,2)=1  (15,1)=2  (15,2)=1  (16,0)=6  (16,1)=3  (16,2)=1  (17,0)=6  (17,1)=3  (17,2)=1  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1 
   (2605.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color grey and layers
  _0: a rectangle with size (21,21) and color pink and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x.......xxxxx........|.x........xxxxxx.....|.x..........xxxxxxx..|.xx...........xxxxxxx|..x.............xxxxx|..xx..............xxx|..xx................x|...xx................|...xx................|...xxx...............|....xx...............|......x..............|......x..............|.....xxx.............|.....xxx.............|.....xxx.............|......xxx............|......xxxx........... at (0,0)
  _01: a rectangle with size (4,8) and color black and mask xxx.....|xxx.....|xxxxxxxx|...xxxxx at (6,9)
diff: 
delta: (0,4)=7# (0,5)=7# (0,6)=1  (0,7)=1  (0,8)=2  (0,9)=2  (0,10)=3  (0,11)=3  (0,12)=4  (0,13)=4  (0,16)=6  (0,17)=6  (0,18)=7# (0,19)=7# (0,20)=1  (1,7)=7# (1,8)=7# (1,9)=7# (1,10)=1  (1,11)=1  (1,12)=1  (1,13)=2  (1,14)=2  (1,15)=2  (1,16)=3  (1,17)=3  (1,18)=3  (1,19)=4  (1,20)=4  (2,10)=7# (2,11)=7# (2,12)=7# (2,13)=7# (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=2  (2,19)=2  (2,20)=2  (3,3)=0  (3,4)=0  (3,5)=0  (3,13)=7# (3,14)=7# (3,15)=7# (3,16)=7# (3,17)=7# (3,18)=1  (3,19)=1  (3,20)=1  (4,0)=7# (4,3)=0  (4,4)=0  (4,5)=0  (4,16)=7# (4,17)=7# (4,18)=7# (4,19)=7# (4,20)=7# (5,0)=7# (5,3)=0  (5,4)=0  (5,5)=0  (5,19)=7# (5,20)=7# (6,0)=1  (6,3)=0  (6,4)=0  (6,5)=0  (6,6)=6  (7,0)=1  (7,1)=7# (7,3)=0  (7,4)=0  (7,5)=0  (7,7)=6  (8,0)=2  (8,1)=7# (8,8)=6  (9,0)=2  (9,1)=7# (9,9)=6  (10,0)=3  (10,1)=1  (10,2)=7# (10,10)=6  (11,0)=3  (11,1)=1  (11,2)=7# (11,11)=6  (12,0)=4  (12,1)=1  (12,2)=7# (12,12)=6  (13,0)=4  (13,1)=2  (13,2)=7# (13,3)=7# (13,13)=6  (14,1)=2  (14,2)=0  (14,3)=0  (14,4)=0  (14,5)=0  (14,14)=6  (15,1)=2  (15,2)=0  (15,3)=0  (15,4)=0  (15,5)=0  (15,15)=6  (16,0)=6  (16,1)=3  (16,2)=1  (16,3)=7# (16,4)=7# (16,16)=6  (17,0)=6  (17,1)=3  (17,2)=1  (17,3)=7# (17,4)=7# (17,8)=0  (17,9)=0  (17,10)=0  (17,11)=0  (17,17)=6  (18,0)=7# (18,1)=3  (18,2)=2  (18,3)=1  (18,4)=7# (18,8)=0  (18,9)=0  (18,10)=0  (18,11)=0  (18,18)=6  (19,0)=7# (19,1)=4  (19,2)=2  (19,3)=1  (19,4)=7# (19,5)=7# (19,19)=6  (20,0)=1  (20,1)=4  (20,2)=2  (20,3)=1  (20,4)=7# (20,5)=7# (20,20)=6 
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color yellow and layers
  _0: a rectangle with size (21,21) and color grey and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxx..x..|.xx...x.......xx..xxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx................|...xxx...............|....xx...............|....xxx..............|....xxx..............|.....xxx.............|.....xxx.............|.....xxxx............|......xxx............|......xxxx........... at (0,0)
  _01: a rectangle with size (9,6) and color black and mask ..xx..|..xx..|..xx..|.xxxxx|xxxxxx|xxxxxx|xxx...|xxx...|xxx... at (10,9)
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,18)=5# (0,19)=5# (0,20)=6  (1,7)=6  (1,8)=6  (1,9)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,10)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=7# (2,15)=7# (2,16)=0  (2,17)=0  (2,18)=8  (2,19)=8  (2,20)=8  (3,13)=6  (3,14)=6  (3,15)=6  (3,16)=0  (3,17)=0  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,16)=0  (4,17)=0  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,16)=0  (5,17)=0  (5,19)=6  (5,20)=6  (6,0)=7# (6,16)=0  (6,17)=0  (7,0)=7# (7,1)=6  (8,0)=8  (8,1)=6  (9,0)=8  (9,1)=6  (10,0)=1  (10,1)=7# (10,2)=6  (11,0)=1  (11,1)=7# (11,2)=6  (12,0)=2  (12,1)=7# (12,2)=6  (13,0)=2  (13,1)=8  (13,2)=6  (13,3)=6  (14,0)=3  (14,1)=8  (14,2)=7# (14,3)=6  (15,0)=3  (15,1)=8  (15,2)=7# (15,3)=6  (15,15)=5# (16,1)=1  (16,2)=7# (16,3)=6  (16,4)=6  (16,16)=5# (17,1)=1  (17,2)=7# (17,3)=6  (17,4)=6  (17,17)=5# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (18,4)=6  (18,18)=5# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (19,4)=6  (19,5)=6  (19,19)=5# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7# (20,4)=6  (20,5)=6  (20,20)=5#
   (3768.5 bits)
data: a background with size (21,21) and color yellow and layers
  _0: a rectangle with size (21,21) and color grey and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxxxxx..|.xx...x.......xxxxxxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx......x.........|...xxx......x........|....xx.......x.......|....xxx.......x......|....xxx........x.....|.....xxx........x....|.....xxx.........x...|.....xxxx.........x..|......xxx..........x.|......xxxx..........x at (0,0)
  _01: a rectangle with size (5,14) and color pink and mask xxx...........|...xxxx.......|......xxxxx...|.........xxxxx|............xx at (1,7)
  _011: a rectangle with size (14,5) and color pink and mask x....|x....|x....|.x...|.x...|.x...|.xx..|..x..|..x..|..xx.|..xx.|...x.|...xx|...xx at (7,1)
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,18)=5# (0,19)=5# (0,20)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,14)=7# (2,15)=7# (2,16)=7# (2,17)=7# (2,18)=8  (2,19)=8  (2,20)=8  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (5,0)=6  (6,0)=7# (7,0)=7# (8,0)=8  (9,0)=8  (10,0)=1  (10,1)=7# (11,0)=1  (11,1)=7# (12,0)=2  (12,1)=7# (13,0)=2  (13,1)=8  (14,0)=3  (14,1)=8  (14,2)=7# (15,0)=3  (15,1)=8  (15,2)=7# (16,1)=1  (16,2)=7# (17,1)=1  (17,2)=7# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7#
   (2605.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color yellow and layers
  _0: a rectangle with size (21,21) and color grey and mask x.xx.................|.x..xxx..............|x.x...xxxx...........|x..x....xxxxx........|.x..x.....xxxxxx.....|.x...x......xxxx..x..|.xx...x.......xx..xxx|..x....x........xxxxx|..xx....x.........xxx|..xx.....x..........x|...xx.....x..........|...xx................|...xxx...............|....xx...............|....xxx..............|....xxx..............|.....xxx.............|.....xxx.............|.....xxxx............|......xxx............|......xxxx........... at (0,0)
  _01: a rectangle with size (9,6) and color black and mask ..xx..|..xx..|..xx..|.xxxxx|xxxxxx|xxxxxx|xxx...|xxx...|xxx... at (10,9)
diff: 
delta: (0,4)=6  (0,5)=6  (0,6)=7# (0,7)=7# (0,8)=8  (0,9)=8  (0,10)=1  (0,11)=1  (0,12)=2  (0,13)=2  (0,14)=3  (0,15)=3  (0,18)=5# (0,19)=5# (0,20)=6  (1,7)=6  (1,8)=6  (1,9)=6  (1,10)=7# (1,11)=7# (1,12)=7# (1,13)=8  (1,14)=8  (1,15)=8  (1,16)=1  (1,17)=1  (1,18)=1  (1,19)=2  (1,20)=2  (2,10)=6  (2,11)=6  (2,12)=6  (2,13)=6  (2,14)=7# (2,15)=7# (2,16)=0  (2,17)=0  (2,18)=8  (2,19)=8  (2,20)=8  (3,13)=6  (3,14)=6  (3,15)=6  (3,16)=0  (3,17)=0  (3,18)=7# (3,19)=7# (3,20)=7# (4,0)=6  (4,16)=0  (4,17)=0  (4,18)=6  (4,19)=6  (4,20)=6  (5,0)=6  (5,16)=0  (5,17)=0  (5,19)=6  (5,20)=6  (6,0)=7# (6,16)=0  (6,17)=0  (7,0)=7# (7,1)=6  (8,0)=8  (8,1)=6  (9,0)=8  (9,1)=6  (10,0)=1  (10,1)=7# (10,2)=6  (11,0)=1  (11,1)=7# (11,2)=6  (12,0)=2  (12,1)=7# (12,2)=6  (13,0)=2  (13,1)=8  (13,2)=6  (13,3)=6  (14,0)=3  (14,1)=8  (14,2)=7# (14,3)=6  (15,0)=3  (15,1)=8  (15,2)=7# (15,3)=6  (15,15)=5# (16,1)=1  (16,2)=7# (16,3)=6  (16,4)=6  (16,16)=5# (17,1)=1  (17,2)=7# (17,3)=6  (17,4)=6  (17,17)=5# (18,0)=5# (18,1)=1  (18,2)=8  (18,3)=7# (18,4)=6  (18,18)=5# (19,0)=5# (19,1)=2  (19,2)=8  (19,3)=7# (19,4)=6  (19,5)=6  (19,19)=5# (20,0)=6  (20,1)=2  (20,2)=8  (20,3)=7# (20,4)=6  (20,5)=6  (20,20)=5#
! size mismatch, 10x10 instead of 21x21

TRAIN 73251a56.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (15,15) and color yellow and mask x.xx...........|.x..xxx........|x.x...xxxx.....|x..x....xx.....|.x..x..........|.x...x.........|.xx...x........|..x....x.......|........x......|.........x.....|..........x....|...........x...|............x..|.............x.|..............x at (0,0)
  _01: a rectangle with size (7,9) and color yellow and mask x........|xxxx.....|xxxxxxx..|..xxxxxxx|....xxxxx|......xxx|........x at (3,12)
diff: 
delta: (0,4)=5# (0,5)=5# (0,6)=6  (0,7)=6  (0,8)=7# (0,9)=7# (0,10)=8  (0,11)=8  (0,12)=9# (0,13)=9# (0,14)=1  (0,15)=1  (0,16)=2  (0,17)=2  (0,20)=4  (1,7)=5# (1,8)=5# (1,9)=5# (1,10)=0  (1,11)=0  (1,12)=6  (1,13)=7# (1,14)=7# (1,15)=7# (1,16)=8  (1,17)=8  (1,18)=8  (1,19)=9# (1,20)=9# (2,10)=0  (2,11)=0  (2,12)=5# (2,13)=5# (2,14)=6  (2,15)=6  (2,16)=6  (2,17)=6  (2,18)=7# (2,19)=7# (2,20)=7# (3,10)=0  (3,11)=0  (3,13)=5# (3,14)=5# (3,15)=5# (3,16)=5# (3,17)=5# (3,18)=6  (3,19)=6  (3,20)=6  (4,0)=5# (4,10)=0  (4,11)=0  (4,16)=5# (4,17)=5# (4,18)=5# (4,19)=5# (4,20)=5# (5,0)=5# (5,10)=0  (5,11)=0  (5,19)=5# (5,20)=5# (6,0)=6  (7,0)=6  (7,1)=5# (8,0)=0  (8,1)=0  (8,2)=0  (8,3)=0  (8,4)=0  (9,0)=0  (9,1)=0  (9,2)=0  (9,3)=0  (9,4)=0  (10,0)=8  (10,1)=6  (10,2)=5# (10,3)=4  (10,4)=4  (11,0)=8  (11,1)=6  (11,2)=5# (11,3)=4  (11,4)=4  (12,0)=9# (12,1)=6  (12,2)=5# (12,3)=4  (12,4)=4  (12,5)=4  (13,0)=9# (13,1)=7# (13,2)=5# (13,3)=5# (13,4)=4  (13,5)=4  (14,0)=1  (14,1)=7# (14,2)=6  (14,3)=5# (14,4)=4  (14,5)=4  (14,6)=4  (15,0)=1  (15,1)=7# (15,2)=6  (15,3)=5# (15,4)=0  (15,5)=0  (15,6)=0  (15,7)=0  (15,8)=0  (15,15)=0  (15,16)=0  (15,17)=0  (15,18)=0  (15,19)=0  (16,0)=2  (16,1)=8  (16,2)=6  (16,3)=5# (16,4)=0  (16,5)=0  (16,6)=0  (16,7)=0  (16,8)=0  (16,15)=0  (16,16)=0  (16,17)=0  (16,18)=0  (16,19)=0  (17,0)=2  (17,1)=8  (17,2)=6  (17,3)=5# (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=0  (17,8)=0  (17,17)=4  (18,1)=8  (18,2)=7# (18,3)=6  (18,4)=5# (18,5)=4  (18,6)=4  (18,7)=4  (18,8)=4  (18,12)=0  (18,13)=0  (18,14)=0  (18,15)=0  (18,16)=0  (18,18)=4  (19,1)=9# (19,2)=7# (19,3)=6  (19,4)=5# (19,5)=5# (19,6)=4  (19,7)=4  (19,8)=4  (19,12)=0  (19,13)=0  (19,14)=0  (19,15)=0  (19,16)=0  (19,19)=4  (20,0)=4  (20,1)=9# (20,2)=7# (20,3)=6  (20,4)=5# (20,5)=5# (20,6)=4  (20,7)=4  (20,8)=4  (20,9)=4  (20,20)=4 
! size mismatch, 10x10 instead of 21x21

TEST 73251a56.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.3 sec (29.3 sec/task)
bits-train-error = 77092.3 bits (77092.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-225] Checking task 7447852a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11029.6 = 11045.2
DL output with Mo: L = 15.6 + 18187.3 = 18202.9
DL input+output M: L = 31.2 + 29216.9 = 29248.1

# learning a model for train pairs
2.000	
1.275	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.711	OUT OBJECT at ^.layer_0: ^.layer_0
0.605	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.510	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.476	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.447	OUT DEF: ^.size=^.size
0.432	IN  DEF: ^.layer_0.shape.color=red
0.421	OUT DEF: ^.layer_01.shape.size.j=^.size.i
0.412	OUT DEF: ^.layer_0111.pos.j='0
0.402	OUT DEF: ^.layer_01.shape.color=yellow
0.393	OUT DEF: ^.layer_011.shape.color=yellow
0.384	OUT DEF: ^.layer_0111.shape.color=yellow
0.375	OUT DEF: ^.layer_01.shape.size.i=2
0.367	OUT DEF: ^.layer_0111.shape.size.i=2
0.358	OUT DEF: ^.layer_01.pos.j=middle(^.layer_0) + 3
0.351	OUT DEF: ^.layer_0111.shape.size=^.layer_0.pos + 2
0.343	OUT DEF: ^.layer_011.shape.size.i=bottom(^.layer_0)
0.336	IN  DEF: ^.color=black
0.330	OUT DEF: ^.layer_01.pos.i='0
0.323	OUT DEF: ^.layer_011.pos.i=1
0.317	OUT DEF: ^.layer_0111.pos.i=1
0.312	OUT DEF: ^.layer_01.shape.mask=Full
0.306	OUT DEF: ^.layer_011.shape.mask=Full
0.301	OUT DEF: ^.layer_0111.shape.mask=Full
0.297	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (2,^.size.i) and color yellow and mask Full at ('0,middle(^.layer_0) + 3)
  _011: a rectangle with size (bottom(^.layer_0),?) and color yellow and mask Full at (1,?)
  _0111: a rectangle with size ^.layer_0.pos + 2 and color yellow and mask Full at (1,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 2742.8 = 2793.1
DL output with Mo: L = 190.6 + 606.8 = 797.4
DL input+output M: L = 240.9 + 3349.6 = 3590.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
diff: 
delta:
   (76.9 bits)
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (1,0)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color red and mask x...x...x.|.x.x.x.x.x|..x...x... at (0,0)
diff: 
delta:
correct output grid

TRAIN 7447852a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
diff: 
delta:
   (93.9 bits)
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (1,11)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff: 
delta:
   (12.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,15) and color red and mask x...x...x...x..|.x.x.x.x.x.x.x.|..x...x...x...x at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 7447852a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
diff: 
delta:
   (103.6 bits)
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
  _01: a rectangle with size (2,3) and color yellow and mask Full at (0,5)
  _011: a rectangle with size (2,3) and color yellow and mask Full at (1,11)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (1,0)
diff: 
delta: (0,17)=4 
   (39.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,18) and color black and layers
  _0: a rectangle with size (3,18) and color red and mask x...x...x...x...x.|.x.x.x.x.x.x.x.x.x|..x...x...x...x... at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN 7447852a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,25) and color black and layers
  _0: a rectangle with size (3,25) and color red and mask x...x...x...x...x...x...x|.x.x.x.x.x.x.x.x.x.x.x.x.|..x...x...x...x...x...x.. at (0,0)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TEST 7447852a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 606.8 bits (606.8 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-224] Checking task 7468f01a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21930.4 = 21946.0
DL output with Mo: L = 15.6 + 4590.3 = 4605.9
DL input+output M: L = 31.2 + 26520.7 = 26551.9

# learning a model for train pairs
2.000	
1.282	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.681	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.577	OUT DEF: ^.size=^.layer_01.shape.size
0.490	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.434	OUT DEF: ^.color=^.layer_01.shape.color
0.397	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.376	OUT DEF: ^.layer_0.pos.i=^.layer_01.shape.size.i - ^.layer_0.shape.size.j
0.372	IN  DEF: ^.layer_01.shape.mask=Full
0.369	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color ^.layer_01.shape.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_0.shape.color and mask ? at (^.layer_01.shape.size.i - ^.layer_0.shape.size.j,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 3360.6 = 3441.0
DL output with Mo: L = 95.4 + 879.9 = 975.3
DL input+output M: L = 175.8 + 4240.5 = 4416.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (6,3)
  _01: a rectangle with size (4,8) and color cyan and mask Full at (5,2)
diff: 
delta: (5,8)=2 
   (123.3 bits)
data: a background with size (4,8) and color cyan and layers
  _0: a rectangle with size (2,3) and color red and mask .xx|xx. at (1,4)
diff: 
delta: (0,1)=2 
   (41.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (6,3)
  _01: a rectangle with size (4,8) and color cyan and mask Full at (5,2)
diff: 
delta: (5,8)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (4,8) and color cyan and mask xxxxxx.x|x..xxxxx|xx..xxxx|xxxxxxxx at (5,2)
  _01: a rectangle with size (2,3) and color red and mask Full at (6,3)
diff: 
delta: (5,8)=2 
! size mismatch, 2x3 instead of 4x8

TRAIN 7468f01a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,16) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.xx|.x. at (3,4)
  _01: a rectangle with size (5,5) and color yellow and mask Full at (1,3)
diff: 
delta:
   (101.4 bits)
data: a background with size (5,5) and color yellow and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xx.|.x. at (2,1)
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.xx|.x. at (3,4)
  _01: a rectangle with size (5,5) and color yellow and mask Full at (1,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,16) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask xxxxx|xxxxx|x..xx|xx..x|xx.xx at (1,3)
  _01: a rectangle with size (3,3) and color blue and mask Full at (3,4)
diff: 
delta:
! size mismatch, 3x3 instead of 5x5
>> Trial 3
data: a background with size (12,16) and color black and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (3,5)
  _01: a rectangle with size (5,5) and color yellow and mask Full at (1,3)
diff: 
delta: (3,4)=1  (4,6)=1 
! 6 wrong pixels (generated / expected)

TRAIN 7468f01a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..x.|xxx.|...x|...x at (7,3)
  _01: a rectangle with size (4,6) and color pink and mask Full at (7,2)
diff: 
delta:
   (111.3 bits)
data: a background with size (4,6) and color pink and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|.xxx|x...|x... at (0,1)
diff: 
delta:
   (26.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask ..x.|xxx.|...x|...x at (7,3)
  _01: a rectangle with size (4,6) and color pink and mask Full at (7,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (4,6) and color pink and mask xxx.xx|x...xx|xxxx.x|xxxx.x at (7,2)
  _01: a rectangle with size (4,4) and color green and mask Full at (7,3)
diff: 
delta:
! size mismatch, 4x4 instead of 4x6
>> Trial 3
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (8,3)
  _01: a rectangle with size (4,6) and color pink and mask Full at (7,2)
diff: 
delta: (7,5)=3  (9,6)=3  (10,6)=3 
! 7 wrong pixels (generated / expected)

TRAIN 7468f01a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (7,8) and color blue and mask xxxx.xxx|xxxxx..x|xxxxxxxx|...xxxxx|xxxxxxxx|xx...xxx|xxxxxxxx at (3,3)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (6,3)
diff: 
delta: (3,7)=8  (4,8)=8  (4,9)=8  (8,5)=8  (8,6)=8  (8,7)=8 
! size mismatch, 1x3 instead of 7x8
>> Trial 2
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (7,8) and color blue and mask xxxx.xxx|xxxxx..x|xxxxxxxx|...xxxxx|xxxxxxxx|xx...xxx|xxxxxxxx at (3,3)
  _01: a rectangle with size (2,3) and color cyan and mask Full at (3,7)
diff: 
delta: (6,3)=8  (6,4)=8  (6,5)=8  (8,5)=8  (8,6)=8  (8,7)=8 
! size mismatch, 2x3 instead of 7x8

TEST 7468f01a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.8 sec (2.8 sec/task)
bits-train-error = 879.9 bits (879.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-223] Checking task 746b3537.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9854.7 = 9870.3
DL output with Mo: L = 15.6 + 3326.1 = 3341.7
DL input+output M: L = 31.2 + 13180.8 = 13212.1

# learning a model for train pairs
2.000	
1.706	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.563	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.432	OUT DEF: ^.color=^.layer_01.shape.color
1.362	OUT DEF: ^.size.i=^.layer_01.pos.i + ^.layer_0.shape.size.j
1.297	OUT DEF: ^.size.j=^.layer_0.pos.j + 1
1.280	IN  DEF: ^.layer_0.shape.mask=Full
1.263	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_01.pos.i + ^.layer_0.shape.size.j,^.layer_0.pos.j + 1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 81.2 + 5148.5 = 5229.7
DL output with Mo: L = 80.7 + 2370.5 = 2451.2
DL input+output M: L = 161.9 + 7519.0 = 7681.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (65.2 bits)
data: a background with size (3,1) and color blue and layers
diff: 
delta: (1,0)=2 
   (21.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,0)
diff: 
delta:
! size mismatch, 5x1 instead of 3x1

TRAIN 746b3537.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (68.5 bits)
data: a background with size (1,3) and color yellow and layers
diff: 
delta: (0,0)=3  (0,2)=6 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
! size mismatch, 1x2 instead of 1x3
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,2)
diff: 
delta:
! size mismatch, 1x1 instead of 1x3

TRAIN 746b3537.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,0)
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
   (141.9 bits)
data: a background with size (1,4) and color red and layers
diff: 
delta: (0,1)=3  (0,2)=8  (0,3)=1 
   (64.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
! size mismatch, 1x1 instead of 1x4
>> Trial 2
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,4)
diff: 
delta: (0,3)=8  (1,3)=8  (2,3)=8 
! size mismatch, 1x1 instead of 1x4
>> Trial 3
data: a background with size (3,5) and color green and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,0)
diff: 
delta: (0,4)=1  (1,4)=1  (2,4)=1 
! 3 wrong pixels (generated / expected)

TRAIN 746b3537.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,2) and color cyan and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (1,0)
diff: 
delta:
   (65.5 bits)
data: a background with size (3,1) and color pink and layers
diff: 
delta: (0,0)=2  (2,0)=8 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,2) and color cyan and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (1,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,2) and color cyan and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
! size mismatch, 2x1 instead of 3x1

TRAIN 746b3537.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
   (173.8 bits)
data: a background with size (4,1) and color yellow and layers
diff: 
delta: (1,0)=2  (2,0)=8  (3,0)=3 
   (64.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! size mismatch, 8x1 instead of 4x1
>> Trial 2
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (5,0)
diff: 
delta: (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8 
! size mismatch, 9x1 instead of 4x1
>> Trial 3
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (2,4) and color yellow and mask Full at (0,0)
diff: 
delta: (5,0)=3  (5,1)=3  (5,2)=3  (5,3)=3 
! 3 wrong pixels (generated / expected)

TRAIN 746b3537.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,9) and color green and layers
  _0: a rectangle with size (4,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,2) and color cyan and mask Full at (0,6)
diff: 
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 2x1 instead of 1x5
>> Trial 2
data: a background with size (4,9) and color green and layers
  _0: a rectangle with size (4,2) and color cyan and mask Full at (0,6)
  _01: a rectangle with size (4,2) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=2  (0,8)=4  (1,2)=2  (1,8)=4  (2,2)=2  (2,8)=4  (3,2)=2  (3,8)=4 
! size mismatch, 2x7 instead of 1x5
>> Trial 3
data: a background with size (4,9) and color green and layers
  _0: a rectangle with size (4,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,2)
diff: 
delta: (0,6)=8  (0,7)=8  (0,8)=4  (1,6)=8  (1,7)=8  (1,8)=4  (2,6)=8  (2,7)=8  (2,8)=4  (3,6)=8  (3,7)=8  (3,8)=4 
! size mismatch, 2x1 instead of 1x5

TEST 746b3537.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 2370.5 bits (2370.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-222] Checking task 74dd1130.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5369.5 = 5385.1
DL output with Mo: L = 15.6 + 5369.5 = 5385.1
DL input+output M: L = 31.2 + 10738.9 = 10770.1

# learning a model for train pairs
2.000	
1.794	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.587	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.490	OUT DEF: ^.size=^.size
1.409	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.328	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.261	OUT DEF: ^.color=^.color
1.219	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.j
1.177	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.135	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.098	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.061	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.i
1.026	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j
0.995	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
0.966	OUT DEF: ^.layer_01.pos.j='0
0.938	OUT DEF: ^.layer_0.pos.j=1
0.910	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.j
0.882	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.j

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.j,^.layer_0.shape.size.i) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (^.layer_0.pos.j,1)
  _01: a rectangle with size (^.layer_01.shape.size.j,^.layer_01.shape.size.i) and color ^.layer_01.shape.color and mask ? at (^.layer_01.pos.j,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 3757.2 = 3838.4
DL output with Mo: L = 115.1 + 796.7 = 911.8
DL input+output M: L = 196.3 + 4553.9 = 4750.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (0,2)
diff: 
delta: (1,0)=1 
   (102.5 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,1)
  _01: a rectangle with size (1,2) and color blue and mask Full at (2,0)
diff: 
delta: (0,1)=1 
   (26.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,0)
diff: 
delta: (1,0)=1 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (0,2)
diff: 
delta: (1,0)=1 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,2)
  _01: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta: (1,1)=5# (2,0)=5#
! 6 wrong pixels (generated / expected)

TRAIN 74dd1130.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
diff: 
delta:
   (81.9 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,1)
  _01: a rectangle with size (3,2) and color red and mask x.|xx|.x at (0,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
  _01: a rectangle with size (1,1) and color pink and mask Full at (1,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (1,0)
  _01: a rectangle with size (2,3) and color red and mask xx.|.xx at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,2)
diff: 
delta: (1,0)=6 
! 6 wrong pixels (generated / expected)

TRAIN 74dd1130.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (3,3) and color grey and mask ..x|xx.|x.. at (0,0)
diff: 
delta:
   (95.1 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (3,3) and color grey and mask .xx|.x.|x.. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|xx.|x.. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,1)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (3,3) and color grey and mask ..x|xx.|x.. at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,1)
diff: 
delta: (2,2)=9#
! 7 wrong pixels (generated / expected)

TRAIN 74dd1130.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (0,1)
diff: 
delta: (2,1)=6 
   (96.2 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,0)
diff: 
delta: (1,2)=6 
   (26.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,1)
diff: 
delta: (2,1)=6 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (0,1)
diff: 
delta: (2,1)=6 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,1)
diff: 
delta: (2,2)=2 
! 6 wrong pixels (generated / expected)

TRAIN 74dd1130.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (3,2) and color yellow and mask .x|xx|.x at (0,1)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
diff: 
delta: (2,1)=3 
! 2 wrong pixels (generated / expected)

TEST 74dd1130.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.5 sec (9.5 sec/task)
bits-train-error = 796.7 bits (796.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-221] Checking task 75b8110e.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 35737.1 = 35752.7
DL output with Mo: L = 15.6 + 11750.5 = 11766.1
DL input+output M: L = 31.2 + 47487.6 = 47518.8

# learning a model for train pairs
2.000	
1.766	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.564	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.389	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.301	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.239	OUT DEF: ^.size=^.size / 2
1.179	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.136	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.054	OUT DEF: ^.layer_0.pos=max(^.layer_0.pos, ^.layer_011.pos) - max(^.layer_01.pos, ^.layer_011.pos)
1.028	IN  OBJECT at ^.layer_0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.005	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.987	OUT DEF: ^.layer_011.shape.color=brown
0.970	OUT DEF: ^.layer_011.pos.j=^.layer_0111.shape.size.j
0.953	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size / 2 and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at max(^.layer_0.pos, ^.layer_011.pos) - max(^.layer_01.pos, ^.layer_011.pos)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color brown at (?,^.layer_0111.shape.size.j)
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 14750.7 = 14927.6
DL output with Mo: L = 203.7 + 6094.0 = 6297.7
DL input+output M: L = 380.6 + 20844.7 = 21225.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _0110: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _011: a rectangle with size (2,2) and color brown and mask Even Checkboard at (4,6)
  _0111: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
diff: 
delta: (0,6)=5#
   (258.9 bits)
data: a background with size (4,4) and color grey and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,4) and color pink and mask xxx.|x..x|..x. at (1,0)
  _011: a point with color brown at (1,3)
  _0111: a point with color black at (0,3)
diff: 
delta: (2,1)=9# (3,3)=0 
   (139.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _0110: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _011: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _0111: a rectangle with size (2,2) and color brown and mask Even Checkboard at (4,6)
diff: 
delta: (0,6)=5#
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _0110: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _011: a rectangle with size (2,2) and color brown and mask Even Checkboard at (4,6)
  _0111: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
diff: 
delta: (0,6)=5#
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|xxx.|x.xx|.xx. at (4,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|xx.|..x|.x. at (0,0)
  _0110: a rectangle with size (2,3) and color grey and mask ..x|xx. at (2,4)
  _011: a rectangle with size (2,2) and color brown and mask xx|x. at (6,4)
  _0111: a rectangle with size (2,2) and color brown and mask Even Checkboard at (4,6)
diff: 
delta: (0,6)=5#
! 14 wrong pixels (generated / expected)

TRAIN 75b8110e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,4)
  _01: a rectangle with size (2,4) and color yellow and mask xx.x|x.xx at (2,0)
  _0110: a rectangle with size (4,2) and color pink and mask .x|x.|.x|xx at (4,2)
  _011: a rectangle with size (3,1) and color brown and mask Full at (4,5)
  _0111: a rectangle with size (2,1) and color brown and mask Full at (6,7)
diff: 
delta: (0,0)=4  (0,3)=4  (4,7)=9# (6,0)=6 
   (317.6 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (0,3)
  _011: a point with color brown at (1,1)
  _0111: a point with color pink at (2,0)
diff: 
delta: (3,0)=4 
   (115.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask xx..|..xx|.x..|.xxx at (0,4)
  _01: a rectangle with size (2,4) and color yellow and mask xx.x|x.xx at (2,0)
  _0110: a rectangle with size (4,2) and color pink and mask .x|x.|.x|xx at (4,2)
  _011: a rectangle with size (3,1) and color brown and mask Full at (4,5)
  _0111: a rectangle with size (2,1) and color brown and mask Full at (6,7)
diff: 
delta: (0,0)=4  (0,3)=4  (4,7)=9# (6,0)=6 
! 14 wrong pixels (generated / expected)

TRAIN 75b8110e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _011: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _0111: a rectangle with size (2,1) and color pink and mask Full at (6,2)
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4 
   (280.0 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,0)
  _01: a rectangle with size (3,1) and color pink and mask Full at (1,0)
  _011: a point with color brown at (0,1)
  _0111: a point with color brown at (0,2)
diff: 
delta: (1,2)=0  (1,3)=9# (2,1)=9#
   (162.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _0110: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _0111: a rectangle with size (2,1) and color pink and mask Full at (6,2)
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _0110: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _0111: a rectangle with size (2,1) and color pink and mask Full at (6,2)
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color brown and mask .xx.|.x.x|xxx. at (4,4)
  _01: a rectangle with size (4,1) and color pink and mask Full at (4,0)
  _0110: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _011: a rectangle with size (4,3) and color grey and mask x..|.x.|..x|..x at (0,4)
  _0111: a rectangle with size (2,1) and color pink and mask Full at (6,2)
diff: 
delta: (0,3)=4  (1,0)=4  (3,1)=4 
! 15 wrong pixels (generated / expected)

TRAIN 75b8110e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _0110: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
  _011: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,4)
diff: 
delta: (0,0)=4  (3,0)=4  (3,4)=5#
   (316.3 bits)
data: a background with size (4,4) and color grey and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (4,3) and color pink and mask x.x|.xx|x..|.x. at (0,0)
  _011: a point with color brown at (3,2)
  _0111: a point with color brown at (2,1)
diff: 
delta:
   (89.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _0110: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _011: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,4)
diff: 
delta: (0,0)=4  (3,0)=4  (3,4)=5#
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x.xx|.xxx|xx.x|x.xx at (4,4)
  _01: a rectangle with size (4,4) and color pink and mask xxx.|xxx.|x..x|xx.x at (4,0)
  _0110: a rectangle with size (3,2) and color yellow and mask .x|x.|xx at (0,2)
  _011: a rectangle with size (4,2) and color grey and mask .x|.x|xx|.x at (0,6)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,4)
diff: 
delta: (0,0)=4  (3,0)=4  (3,4)=5#
! 16 wrong pixels (generated / expected)

TRAIN 75b8110e.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _01: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0110: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _011: a rectangle with size (4,1) and color pink and mask Full at (4,3)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (4,0)
diff: 
delta: (3,0)=4  (7,0)=6  (7,1)=6 
   (302.2 bits)
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,0)
  _01: a rectangle with size (2,2) and color black and mask Even Checkboard at (2,1)
  _011: a point with color brown at (1,2)
  _0111: a point with color brown at (2,2)
diff: 
delta:
   (102.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _01: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0110: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _011: a rectangle with size (4,1) and color pink and mask Full at (4,3)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (4,0)
diff: 
delta: (3,0)=4  (7,0)=6  (7,1)=6 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ..xx|x.x.|x.xx|.x.x at (4,4)
  _01: a rectangle with size (4,4) and color grey and mask .xxx|xx.x|x...|x... at (0,4)
  _0110: a rectangle with size (2,3) and color yellow and mask xxx|.x. at (0,1)
  _011: a rectangle with size (1,2) and color pink and mask Full at (4,0)
  _0111: a rectangle with size (4,1) and color pink and mask Full at (4,3)
diff: 
delta: (3,0)=4  (7,0)=6  (7,1)=6 
! 14 wrong pixels (generated / expected)

TRAIN 75b8110e.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask .x.x|.xxx|xxx. at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask x...|x.xx|.xxx|x... at (0,4)
  _0110: a rectangle with size (4,4) and color brown and mask xxx.|.x..|..xx|.x.. at (4,4)
  _011: a rectangle with size (2,2) and color pink and mask xx|.x at (4,2)
  _0111: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (6,0)
diff: 
delta: (4,0)=6 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|x.xx|.xxx|x... at (0,4)
  _01: a rectangle with size (3,4) and color yellow and mask .x.x|.xxx|xxx. at (0,0)
  _0110: a rectangle with size (4,4) and color brown and mask xxx.|.x..|..xx|.x.. at (4,4)
  _011: a rectangle with size (2,2) and color pink and mask xx|.x at (4,2)
  _0111: a rectangle with size (2,2) and color pink and mask Odd Checkboard at (6,0)
diff: 
delta: (4,0)=6 
! 14 wrong pixels (generated / expected)

TEST 75b8110e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.6 sec (26.6 sec/task)
bits-train-error = 6094.0 bits (6094.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-220] Checking task 760b3cac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8270.6 = 8286.2
DL output with Mo: L = 15.6 + 12144.9 = 12160.5
DL input+output M: L = 31.2 + 20415.5 = 20446.7

# learning a model for train pairs
2.000	
1.497	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.158	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.589	OUT OBJECT at ^.layer_01: ^.layer_01
0.543	OUT DEF: ^.size=^.size
0.523	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j * 2
0.503	IN  DEF: ^.layer_0.shape.color=cyan
0.483	IN  DEF: ^.layer_01.shape.color=yellow
0.467	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.453	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.441	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.432	IN  DEF: ^.color=black
0.426	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,^.layer_0.shape.size.j * 2) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.i,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 85.0 + 2823.0 = 2908.0
DL output with Mo: L = 54.4 + 853.9 = 908.2
DL input+output M: L = 139.4 + 3676.9 = 3816.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (94.8 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x.xx.x|xx..xx|x....x at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (29.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|..x at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff: 
delta: (3,3)=4  (5,4)=4 
! 10 wrong pixels (generated / expected)

TRAIN 760b3cac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
   (92.7 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask x.xx.x|xxxxxx|xx..xx at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
   (25.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|xxx|xx. at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff: 
delta: (3,5)=4  (5,4)=4 
! 20 wrong pixels (generated / expected)

TRAIN 760b3cac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (94.8 bits)
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask ..xx..|xx..xx|..xx.. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
   (29.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask x..|.xx|x.. at (0,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (3,3) and color yellow and mask x..|xxx|.x. at (3,3)
diff: 
delta: (0,3)=8  (2,3)=8 
! 8 wrong pixels (generated / expected)

TRAIN 760b3cac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|x.. at (0,3)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|x.. at (0,3)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (4,3)
diff: 
delta: (3,5)=4  (5,4)=4 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,9) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|xxx|.x. at (3,3)
diff: 
delta: (0,3)=8  (0,5)=8  (2,3)=8 
! 14 wrong pixels (generated / expected)

TEST 760b3cac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.6 sec (4.6 sec/task)
bits-train-error = 853.9 bits (853.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-219] Checking task 776ffc46.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 70932.2 = 70947.8
DL output with Mo: L = 15.6 + 70932.2 = 70947.8
DL input+output M: L = 31.2 + 141864.4 = 141895.6

# learning a model for train pairs
2.000	
1.660	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.295	OUT OBJECT at ^.layer_0: ^.layer_0
1.171	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.038	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.926	OUT OBJECT at ^.layer_011: ^.layer_01
0.836	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.746	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.656	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.574	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.493	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.437	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.424	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 19320.7 = 19497.6
DL output with Mo: L = 149.3 + 10418.5 = 10567.8
DL input+output M: L = 326.2 + 29739.2 = 30065.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _0111: a rectangle with size (3,3) and color blue and mask +-cross at (7,10)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
   (335.0 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _0111: a rectangle with size (3,3) and color red and mask +-cross at (7,10)
  _01111: a rectangle with size (3,3) and color red and mask +-cross at (15,13)
  _011111: a rectangle with size (1,4) and color blue and mask Full at (12,3)
diff: 
delta:
   (149.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _0111: a rectangle with size (3,3) and color blue and mask +-cross at (7,10)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _0111: a rectangle with size (3,3) and color blue and mask +-cross at (7,10)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (1,13)
  _01: a rectangle with size (7,7) and color grey and mask Border at (0,0)
  _011: a rectangle with size (3,3) and color red and mask +-cross at (2,2)
  _0111: a rectangle with size (3,3) and color blue and mask +-cross at (7,10)
  _01111: a rectangle with size (3,3) and color blue and mask +-cross at (15,13)
diff: 
delta: (12,3)=1  (12,4)=1  (12,5)=1  (12,6)=1 
! 23 wrong pixels (generated / expected)

TRAIN 776ffc46.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
diff: 
delta: (11,11)=1  (12,11)=1  (13,11)=1 
   (313.6 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (9,15)
  _011: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _0111: a rectangle with size (3,3) and color green and mask Full at (12,3)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
  _011111: a rectangle with size (3,1) and color blue and mask Full at (11,11)
diff: 
delta:
   (159.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (1,5)
  _01: a rectangle with size (3,3) and color green and mask Full at (3,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,15)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (12,3)
  _01111: a rectangle with size (3,5) and color blue and mask ..x..|.xxx.|xxxxx at (16,10)
diff: 
delta: (11,11)=1  (12,11)=1  (13,11)=1 
! 34 wrong pixels (generated / expected)

TRAIN 776ffc46.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _011: a rectangle with size (2,3) and color red and mask Full (and Border) at (2,15)
  _0111: a rectangle with size (2,3) and color blue and mask Full (and Border) at (11,10)
  _01111: a rectangle with size (2,3) and color blue and mask Full (and Border) at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1  (15,8)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,8)=1 
   (548.9 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (2,3) and color red and mask Full (and Border) at (2,15)
  _011: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _0111: a rectangle with size (2,3) and color red and mask Full (and Border) at (11,10)
  _01111: a rectangle with size (2,3) and color red and mask Full (and Border) at (16,2)
  _011111: a rectangle with size (3,3) and color blue and mask +-cross at (15,7)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1 
   (311.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (0,13)
  _01: a rectangle with size (6,6) and color grey and mask .....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _011: a rectangle with size (2,3) and color red and mask Full (and Border) at (2,15)
  _0111: a rectangle with size (2,3) and color blue and mask Full (and Border) at (11,10)
  _01111: a rectangle with size (2,3) and color blue and mask Full (and Border) at (16,2)
diff: 
delta: (1,2)=2  (2,2)=2  (3,2)=2  (10,4)=1  (11,4)=1  (12,4)=1  (15,8)=1  (16,7)=1  (16,8)=1  (16,9)=1  (17,8)=1 
! 33 wrong pixels (generated / expected)

TRAIN 776ffc46.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (8,16)=1  (8,17)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (734.6 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _011: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _0111: a rectangle with size (3,3) and color green and mask Full at (9,10)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
  _011111: a rectangle with size (3,4) and color blue and mask .xx.|.xx.|xxxx at (8,15)
diff: 
delta: (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
   (421.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _011: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (8,16)=1  (8,17)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (3,1)
  _01: a rectangle with size (3,3) and color blue and mask Full at (9,10)
  _011: a rectangle with size (6,7) and color grey and mask x......|x......|x......|x......|x......|xxxxxxx at (0,13)
  _0111: a rectangle with size (3,3) and color green and mask Full at (5,3)
  _01111: a rectangle with size (3,4) and color green and mask .xx.|.xx.|xxxx at (1,15)
diff: 
delta: (8,16)=1  (8,17)=1  (9,16)=1  (9,17)=1  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (12,5)=1  (13,5)=1  (14,5)=1  (15,5)=1  (15,11)=1  (16,10)=1  (16,11)=1  (16,12)=1  (17,11)=1 
! 59 wrong pixels (generated / expected)

TRAIN 776ffc46.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (13,12)
  _01: a rectangle with size (6,8) and color grey and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (0,12)
  _011: a rectangle with size (7,7) and color grey and mask xxxxxxx|......x|......x|......x|......x|......x|......x at (13,0)
  _0111: a rectangle with size (4,4) and color blue and mask +-cross at (8,6)
  _01111: a rectangle with size (4,4) and color red and mask +-cross at (15,1)
diff: 
delta: (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (4,3)=1  (5,3)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (7,3)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (15,15)=2  (16,14)=2  (16,15)=2  (16,16)=2  (17,15)=2 
! 75 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Border at (13,12)
  _01: a rectangle with size (7,7) and color grey and mask xxxxxxx|......x|......x|......x|......x|......x|......x at (13,0)
  _011: a rectangle with size (6,8) and color grey and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (0,12)
  _0111: a rectangle with size (4,4) and color blue and mask +-cross at (8,6)
  _01111: a rectangle with size (4,4) and color red and mask +-cross at (15,1)
diff: 
delta: (1,15)=2  (1,16)=2  (1,17)=2  (2,7)=1  (2,8)=1  (2,9)=1  (2,15)=2  (2,16)=2  (2,17)=2  (3,7)=1  (3,8)=1  (3,9)=1  (4,3)=1  (5,3)=1  (6,2)=1  (6,3)=1  (6,4)=1  (6,5)=1  (7,3)=1  (9,2)=1  (9,15)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,14)=1  (10,15)=1  (10,16)=1  (11,2)=1  (11,15)=1  (15,15)=2  (16,14)=2  (16,15)=2  (16,16)=2  (17,15)=2 
! 75 wrong pixels (generated / expected)

TEST 776ffc46.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.4 sec (27.4 sec/task)
bits-train-error = 10418.5 bits (10418.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-218] Checking task 77fdfe62.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22312.1 = 22327.7
DL output with Mo: L = 15.6 + 5483.9 = 5499.5
DL input+output M: L = 31.2 + 27796.0 = 27827.2

# learning a model for train pairs
2.000	
1.534	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.419	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.300	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.243	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.199	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.167	OUT DEF: ^.size.i=bottom(^.layer_0) - 3
1.134	OUT DEF: ^.size.j=right(^.layer_0) - 3
1.104	OUT DEF: ^.layer_011.shape.color=yellow
1.091	OUT DEF: ^.color=black
1.083	IN  DEF: ^.layer_0.shape.color=blue
0.917	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.867	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size / 2
0.819	OUT DEF: ^.layer_0.shape.size=^.layer_01.shape.size / 2
0.800	OUT DEF: ^.layer_01.pos.i=bottom(^.layer_01) / 2
0.790	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.761	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.751	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.731	OUT DEF: ^.layer_01.pos.j=^.layer_0111.pos.j
0.720	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.708	IN  OBJECT at ^.layer_01110: a point with color ? at (?,?)
0.700	OUT DEF: ^.size=^.layer_01.shape.size
0.693	IN  DEF: ^.layer_01.shape.color=cyan
0.690	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color black and layers
  _0: a rectangle with size ^.layer_01.shape.size / 2 and color ^.layer_011.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size / 2 and color ? and mask ? at (bottom(^.layer_01) / 2,^.layer_0111.pos.j)
  _011: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _01110: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 163.2 + 6647.7 = 6810.8
DL output with Mo: L = 178.3 + 1937.0 = 2115.2
DL input+output M: L = 341.4 + 8584.6 = 8926.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _01110: a point with color green at (0,7)
  _0111: a point with color cyan at (5,2)
  _01111: a point with color yellow at (7,0)
diff: 
delta: (7,7)=6 
   (257.5 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color pink and mask x.|xx at (2,2)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,0)
diff: 
delta: (1,3)=3 
   (66.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _01110: a point with color green at (0,7)
  _0111: a point with color cyan at (5,2)
  _01111: a point with color yellow at (7,0)
diff: 
delta: (7,7)=6 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xx.x|..x.|..xx at (2,2)
  _011: a point with color red at (0,0)
  _01110: a point with color green at (0,7)
  _0111: a point with color yellow at (7,0)
  _01111: a point with color cyan at (5,2)
diff: 
delta: (7,7)=6 
! 9 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _01110: a point with color yellow at (0,5)
  _0111: a point with color red at (5,0)
  _01111: a point with color green at (5,5)
diff: 
delta:
   (177.5 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (28.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _01110: a point with color yellow at (0,5)
  _0111: a point with color red at (5,0)
  _01111: a point with color green at (5,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|x. at (2,2)
  _011: a point with color brown at (0,0)
  _01110: a point with color yellow at (0,5)
  _0111: a point with color green at (5,5)
  _01111: a point with color red at (5,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _01110: a point with color red at (0,7)
  _0111: a point with color orange at (7,0)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
   (229.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color orange and mask x.|xx at (2,0)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (2,2)
diff: 
delta: (0,3)=2  (1,2)=2 
   (98.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _01110: a point with color red at (0,7)
  _0111: a point with color orange at (7,0)
  _01111: a point with color yellow at (7,7)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask .x....x.|xxxxxxxx|.x....x.|.x....x.|.x....x.|.x....x.|xxxxxxxx|.x....x. at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask .x.x|xxx.|x.xx|xxx. at (2,2)
  _011: a point with color pink at (0,0)
  _01110: a point with color red at (0,7)
  _0111: a point with color yellow at (7,7)
  _01111: a point with color orange at (7,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 77fdfe62.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .x......x.|xxxxxxxxxx|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|xxxxxxxxxx|.x......x. at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask .xx...|xxx.x.|..x.x.|.x.xx.|xx.x.x|.x..x. at (2,2)
  _011: a point with color green at (0,0)
  _01110: a point with color yellow at (0,9)
  _0111: a point with color orange at (9,0)
  _01111: a point with color grey at (9,9)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .x......x.|xxxxxxxxxx|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|.x......x.|xxxxxxxxxx|.x......x. at (0,0)
  _01: a rectangle with size (6,6) and color cyan and mask .xx...|xxx.x.|..x.x.|.x.xx.|xx.x.x|.x..x. at (2,2)
  _011: a point with color green at (0,0)
  _01110: a point with color yellow at (0,9)
  _0111: a point with color grey at (9,9)
  _01111: a point with color orange at (9,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TEST 77fdfe62.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.9 sec (21.9 sec/task)
bits-train-error = 1937.0 bits (1937.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-217] Checking task 780d0b14.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 201270.6 = 201286.3
DL output with Mo: L = 15.6 + 3022.1 = 3037.7
DL input+output M: L = 31.2 + 204292.7 = 204323.9

# learning a model for train pairs
2.000	
1.733	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.561	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.382	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.233	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.130	OUT DEF: ^.size=translationOnto(^.layer_0, ^.layer_011) + 3
1.050	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
0.967	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.892	IN  OBJECT at ^.layer_0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.831	OUT DEF: ^.layer_0.pos=translationOnto(^.layer_0, ^.layer_0111) + 1
0.767	OUT DEF: ^.layer_01.pos=translationOnto(^.layer_0111, ^.layer_0)
0.752	OUT DEF: ^.color=blue
0.752	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size translationOnto(^.layer_0, ^.layer_011) + 3 and color blue and layers
  _0: a point with color ? at translationOnto(^.layer_0, ^.layer_0111) + 1
  _01: a point with color ? at translationOnto(^.layer_0111, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.0 + 31504.7 = 31680.7
DL output with Mo: L = 136.2 + 1668.9 = 1805.1
DL input+output M: L = 312.2 + 33173.7 = 33485.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _01: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _0110: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _011: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (7,19)
diff: 
delta:
   (542.6 bits)
data: a background with size (2,2) and color blue and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color pink at (1,0)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _01: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _0110: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _011: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (7,19)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,11) and color blue and mask x.xx.xxx...|.x.xx..xxx.|xx...x.xx.x|xx.x.xxx.xx|xxxx.xx.x.x|x.x.xxxxxxx|x.x.xxxxxxx|xxxxxxx..xx|..xx.xxxxx.|xxxxx.xxxxx|x.x.x.xxxx. at (9,9)
  _01: a rectangle with size (8,11) and color cyan and mask ..xxxxx.xxx|..xxxxxxxxx|.xxxxxxxxxx|.x.xxxxxxxx|x.xx.xxx.xx|xxxxxxxxx.x|xxx.xxx.x..|.xx.xxx.... at (0,9)
  _0110: a rectangle with size (8,8) and color blue and mask xxxx..xx|xxx.x.xx|xx.xxx.x|xx.x.xxx|.xx.xxxx|x.xxxx..|xx.xxxxx|xx.xx.xx at (0,0)
  _011: a rectangle with size (11,8) and color pink and mask xxxxx.xx|xxxxxxx.|.x.xxx.x|xxx.xxxx|x.xx.x.x|xxxxx.xx|xxxxx.x.|xxx.xx.x|.xxx..x.|x...x.x.|xx.x.xxx at (9,0)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (7,19)
diff: 
delta:
! size mismatch, 3x2 instead of 2x2

TRAIN 780d0b14.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _0110: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _011: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _0111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,3)=4  (0,4)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,5)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=4  (3,0)=4  (3,1)=4  (3,4)=4  (3,5)=4  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (4,4)=4  (4,5)=4  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (6,0)=4  (6,1)=4  (6,3)=4  (6,4)=4 
   (1350.9 bits)
data: a background with size (2,3) and color blue and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta: (0,1)=8  (0,2)=3  (1,2)=8 
   (77.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _0110: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _011: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _0111: a rectangle with size (7,6) and color yellow and mask xxxxx.|xxx..x|xxxx..|xx..xx|xxxxxx|..xxxx|xx.xx. at (0,0)
diff: 
delta: (0,7)=8  (0,9)=8  (0,10)=8  (0,11)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (2,7)=8  (2,8)=8  (2,11)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (4,8)=8  (4,9)=8  (4,10)=8  (4,11)=8  (4,12)=8  (5,7)=8  (5,9)=8  (5,11)=8  (6,7)=8  (6,8)=8  (6,9)=8  (6,10)=8  (6,12)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,22) and color black and layers
  _0: a rectangle with size (10,8) and color cyan and mask x.x..xxx|xxx..xxx|xxxxxxxx|..xxx.xx|.x.xxxx.|xx..x.xx|xx...xxx|x.xx...x|.xx...x.|x.xx..xx at (8,14)
  _01: a rectangle with size (10,6) and color blue and mask .xxxxx|x.xx.x|xxx.x.|xx.x.x|xxx.x.|xxxxxx|xxx...|x..x.x|xxxx.x|xx.xxx at (8,0)
  _0110: a rectangle with size (10,6) and color red and mask x.xxxx|x.xxx.|x.xxx.|xxxx.x|xx.xx.|.xxx.x|x.xxxx|xx.xx.|.xxx.x|xxx.x. at (8,7)
  _011: a rectangle with size (7,8) and color green and mask xxx..xxx|xxxx.xx.|xxx.x.xx|xxxx.xxx|x.x.x.x.|x.xxxxxx|x..xxxx. at (0,14)
  _0111: a rectangle with size (7,6) and color cyan and mask x.xxx.|xxxxx.|xx..x.|xxxxxx|.xxxxx|x.x.x.|xxxx.x at (0,7)
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,3)=4  (0,4)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,5)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=4  (3,0)=4  (3,1)=4  (3,4)=4  (3,5)=4  (4,0)=4  (4,1)=4  (4,2)=4  (4,3)=4  (4,4)=4  (4,5)=4  (5,2)=4  (5,3)=4  (5,4)=4  (5,5)=4  (6,0)=4  (6,1)=4  (6,3)=4  (6,4)=4 
! 5 wrong pixels (generated / expected)

TRAIN 780d0b14.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _0110: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
  _011: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _0111: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
diff: 
delta: (0,11)=7# (0,14)=7# (1,8)=7# (1,10)=7# (1,12)=7# (1,13)=7# (1,14)=7# (1,15)=7# (2,9)=7# (2,10)=7# (2,13)=7# (2,14)=7# (2,16)=7# (3,10)=7# (3,11)=7# (3,12)=7# (3,13)=7# (3,14)=7# (3,15)=7# (4,9)=7# (4,11)=7# (4,12)=7# (4,13)=7# (5,8)=7# (5,9)=7# (5,11)=7# (5,12)=7# (5,15)=7# (5,16)=7#
   (1256.9 bits)
data: a background with size (3,2) and color blue and layers
  _0: a point with color red at (0,0)
  _01: a point with color cyan at (1,1)
diff: 
delta: (0,1)=7# (1,0)=4  (2,1)=6 
   (77.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _0110: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _011: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
  _0111: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
diff: 
delta: (0,11)=7# (0,14)=7# (1,8)=7# (1,10)=7# (1,12)=7# (1,13)=7# (1,14)=7# (1,15)=7# (2,9)=7# (2,10)=7# (2,13)=7# (2,14)=7# (2,16)=7# (3,10)=7# (3,11)=7# (3,12)=7# (3,13)=7# (3,14)=7# (3,15)=7# (4,9)=7# (4,11)=7# (4,12)=7# (4,13)=7# (5,8)=7# (5,9)=7# (5,11)=7# (5,12)=7# (5,15)=7# (5,16)=7#
! size mismatch, 4x2 instead of 3x2
>> Trial 2
data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _0110: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _011: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
  _0111: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
diff: 
delta: (0,11)=7# (0,14)=7# (1,8)=7# (1,10)=7# (1,12)=7# (1,13)=7# (1,14)=7# (1,15)=7# (2,9)=7# (2,10)=7# (2,13)=7# (2,14)=7# (2,16)=7# (3,10)=7# (3,11)=7# (3,12)=7# (3,13)=7# (3,14)=7# (3,15)=7# (4,9)=7# (4,11)=7# (4,12)=7# (4,13)=7# (5,8)=7# (5,9)=7# (5,11)=7# (5,12)=7# (5,15)=7# (5,16)=7#
! size mismatch, 2x2 instead of 3x2
>> Trial 3
data: a background with size (23,17) and color black and layers
  _0: a rectangle with size (9,9) and color cyan and mask .x.xxxxxx|x.xxxxxxx|.x.xx.x.x|xx.xxxxxx|xxxxxxxx.|xxxxxxxxx|xxx..xxx.|xx.xxxx.x|.x..x.xxx at (7,8)
  _01: a rectangle with size (6,9) and color pink and mask xx.xx.xxx|xxx.xxxx.|xxxx.xxxx|xxx.xxxxx|xxxxx..xx|xxxxxxxxx at (17,8)
  _0110: a rectangle with size (6,7) and color blue and mask .xxxxxx|.xxxxx.|xxxxx.x|x...xxx|x.xxx..|xxxxxxx at (17,0)
  _011: a rectangle with size (9,7) and color yellow and mask .xxxxx.|x.xx.x.|x..x.xx|xx....x|xxxx...|xxxx.xx|xxxxxx.|.xxx.xx|....xxx at (7,0)
  _0111: a rectangle with size (6,7) and color red and mask xxxxx..|xx..x.x|xxxx.xx|x.xx.xx|xxx.xxx|x.x.xxx at (0,0)
diff: 
delta: (0,11)=7# (0,14)=7# (1,8)=7# (1,10)=7# (1,12)=7# (1,13)=7# (1,14)=7# (1,15)=7# (2,9)=7# (2,10)=7# (2,13)=7# (2,14)=7# (2,16)=7# (3,10)=7# (3,11)=7# (3,12)=7# (3,13)=7# (3,14)=7# (3,15)=7# (4,9)=7# (4,11)=7# (4,12)=7# (4,13)=7# (5,8)=7# (5,9)=7# (5,11)=7# (5,12)=7# (5,15)=7# (5,16)=7#
! 5 wrong pixels (generated / expected)

TRAIN 780d0b14.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,28) and color black and layers
  _0: a rectangle with size (14,12) and color cyan and mask xxx.xxxxx.x.|xxxxxx.x.xx.|xxxxxxx.xxxx|xxx.xxxxxx.x|..xxx.xx.xxx|xxxxxx.x.xx.|xxxxx...xxxx|xxxx.xxxxx.x|.xxxxxxxxxxx|xxxxxxxxx.x.|x.x.xxxxxxxx|xxxxxx.x.xxx|x.xxxxxxxx.x|x.xxxxx.xxxx at (5,16)
  _01: a rectangle with size (14,7) and color blue and mask xx..xxx|xxxx.xx|xxxxxxx|xxxxx.x|x..xxxx|.xxx.xx|xxxxx.x|xxxxx..|.xxxx.x|xxxxxxx|xx.xxxx|.x.xxxx|xxxxx.x|xxx.xx. at (5,8)
  _0110: a rectangle with size (14,7) and color blue and mask xxxxx.x|xxx.x.x|x.xxxxx|xx.xxx.|...xx.x|xxx.xx.|xxx...x|xxxxxxx|xxx..xx|x.xx.xx|xxx.x.x|xxxxxxx|x.xxxxx|.x.xxxx at (5,0)
  _011: a rectangle with size (4,12) and color yellow and mask ..xxxx.xxxxx|x.xxxxxxxxxx|xxxxxxxxxxxx|x..xxxxxxxxx at (0,16)
  _0111: a rectangle with size (3,12) and color red and mask x.xxxx.xx.xx|xxxxx.xxxxx.|xxxxxxxxxxxx at (20,16)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,8)=2  (0,9)=2  (0,10)=2  (0,11)=2  (0,12)=2  (0,13)=2  (0,14)=2  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,8)=2  (1,9)=2  (1,11)=2  (1,12)=2  (1,13)=2  (1,14)=2  (2,1)=3  (2,4)=3  (2,5)=3  (2,8)=2  (2,9)=2  (2,12)=2  (2,13)=2  (2,14)=2  (3,0)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,8)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (3,14)=2  (20,0)=7# (20,1)=7# (20,3)=7# (20,4)=7# (20,6)=7# (20,8)=3  (20,9)=3  (20,12)=3  (20,13)=3  (20,14)=3  (21,0)=7# (21,1)=7# (21,2)=7# (21,4)=7# (21,5)=7# (21,6)=7# (21,9)=3  (21,10)=3  (21,12)=3  (22,0)=7# (22,1)=7# (22,2)=7# (22,3)=7# (22,4)=7# (22,5)=7# (22,6)=7# (22,8)=3  (22,9)=3  (22,10)=3  (22,11)=3  (22,12)=3  (22,13)=3  (22,14)=3 
! size mismatch, 2x3 instead of 3x3
>> Trial 2
data: a background with size (23,28) and color black and layers
  _0: a rectangle with size (14,7) and color blue and mask xx..xxx|xxxx.xx|xxxxxxx|xxxxx.x|x..xxxx|.xxx.xx|xxxxx.x|xxxxx..|.xxxx.x|xxxxxxx|xx.xxxx|.x.xxxx|xxxxx.x|xxx.xx. at (5,8)
  _01: a rectangle with size (14,12) and color cyan and mask xxx.xxxxx.x.|xxxxxx.x.xx.|xxxxxxx.xxxx|xxx.xxxxxx.x|..xxx.xx.xxx|xxxxxx.x.xx.|xxxxx...xxxx|xxxx.xxxxx.x|.xxxxxxxxxxx|xxxxxxxxx.x.|x.x.xxxxxxxx|xxxxxx.x.xxx|x.xxxxxxxx.x|x.xxxxx.xxxx at (5,16)
  _0110: a rectangle with size (14,7) and color blue and mask xxxxx.x|xxx.x.x|x.xxxxx|xx.xxx.|...xx.x|xxx.xx.|xxx...x|xxxxxxx|xxx..xx|x.xx.xx|xxx.x.x|xxxxxxx|x.xxxxx|.x.xxxx at (5,0)
  _011: a rectangle with size (4,12) and color yellow and mask ..xxxx.xxxxx|x.xxxxxxxxxx|xxxxxxxxxxxx|x..xxxxxxxxx at (0,16)
  _0111: a rectangle with size (3,12) and color red and mask x.xxxx.xx.xx|xxxxx.xxxxx.|xxxxxxxxxxxx at (20,16)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=3  (0,4)=3  (0,5)=3  (0,6)=3  (0,8)=2  (0,9)=2  (0,10)=2  (0,11)=2  (0,12)=2  (0,13)=2  (0,14)=2  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,8)=2  (1,9)=2  (1,11)=2  (1,12)=2  (1,13)=2  (1,14)=2  (2,1)=3  (2,4)=3  (2,5)=3  (2,8)=2  (2,9)=2  (2,12)=2  (2,13)=2  (2,14)=2  (3,0)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,8)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (3,14)=2  (20,0)=7# (20,1)=7# (20,3)=7# (20,4)=7# (20,6)=7# (20,8)=3  (20,9)=3  (20,12)=3  (20,13)=3  (20,14)=3  (21,0)=7# (21,1)=7# (21,2)=7# (21,4)=7# (21,5)=7# (21,6)=7# (21,9)=3  (21,10)=3  (21,12)=3  (22,0)=7# (22,1)=7# (22,2)=7# (22,3)=7# (22,4)=7# (22,5)=7# (22,6)=7# (22,8)=3  (22,9)=3  (22,10)=3  (22,11)=3  (22,12)=3  (22,13)=3  (22,14)=3 
! size mismatch, 2x4 instead of 3x3

TEST 780d0b14.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.4 sec (7.4 sec/task)
bits-train-error = 1668.9 bits (1668.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-216] Checking task 7837ac64.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 392882.2 = 392897.8
DL output with Mo: L = 15.6 + 4295.1 = 4310.7
DL input+output M: L = 31.2 + 397177.2 = 397208.5

# learning a model for train pairs
2.000	
1.125	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.825	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.708	OUT DEF: ^.size=^.layer_0.pos + 3
0.622	OUT OBJECT at ^.layer_00: a point with color ? at (?,?)
0.568	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.568	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.pos + 3 and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 49054.7 = 49102.6
DL output with Mo: L = 76.7 + 1832.0 = 1908.7
DL input+output M: L = 124.6 + 50886.7 = 51011.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (5,5)=1  (5,8)=1  (5,11)=3  (5,14)=3  (8,5)=1  (8,8)=1  (8,11)=3  (8,14)=3  (11,5)=1  (11,8)=1  (14,5)=1  (14,8)=1 
   (1265.2 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,2)
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (34.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color yellow and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xx.xx.xxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxx.xx.xxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (5,5)=1  (5,8)=1  (5,11)=3  (5,14)=3  (8,5)=1  (8,8)=1  (8,11)=3  (8,14)=3  (11,5)=1  (11,8)=1  (14,5)=1  (14,8)=1 
! 6 wrong pixels (generated / expected)

TRAIN 7837ac64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
diff: 
delta: (7,7)=2  (7,11)=2  (11,3)=2  (11,7)=2  (11,11)=2  (15,3)=2  (15,7)=2  (15,11)=8  (15,15)=8  (19,11)=8  (19,15)=8 
   (1091.2 bits)
data: a background with size (3,3) and color black and layers
  _00: a point with color cyan at (2,2)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (39.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color green and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxx.xxx.xxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxx.xxx.xxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
diff: 
delta: (7,7)=2  (7,11)=2  (11,3)=2  (11,7)=2  (11,11)=2  (15,3)=2  (15,7)=2  (15,11)=8  (15,15)=8  (19,11)=8  (19,15)=8 
! 5 wrong pixels (generated / expected)

TRAIN 7837ac64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (11,14)=6  (11,17)=6  (11,20)=6  (14,14)=6  (14,17)=6  (14,20)=6  (17,14)=3  (17,17)=3  (17,20)=3  (17,23)=3  (20,14)=3  (20,17)=3  (20,20)=3  (20,23)=3 
   (1321.6 bits)
data: a background with size (3,3) and color green and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (2,3) and color black and mask Full (and Border) at (0,0)
diff: 
delta: (0,1)=6 
   (66.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask ..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxx.xx.xx.xx.xxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (11,14)=6  (11,17)=6  (11,20)=6  (14,14)=6  (14,17)=6  (14,20)=6  (17,14)=3  (17,17)=3  (17,20)=3  (17,23)=3  (20,14)=3  (20,17)=3  (20,20)=3  (20,23)=3 
! 7 wrong pixels (generated / expected)

TRAIN 7837ac64.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
diff: 
delta: (7,7)=1  (7,11)=1  (7,15)=2  (7,19)=2  (11,7)=1  (11,11)=1  (11,15)=2  (11,19)=2  (15,7)=2  (15,11)=2  (15,15)=2  (15,19)=2  (19,7)=2  (19,11)=2  (19,15)=2  (19,19)=2 
   (1227.4 bits)
data: a background with size (3,3) and color red and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (0,0)
diff: 
delta:
   (42.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (27,27) and color cyan and mask ...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxx.xxx.xxx.xxx.xxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxxxxxxxxxxxxxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x...x...x...x...x... at (0,0)
diff: 
delta: (7,7)=1  (7,11)=1  (7,15)=2  (7,19)=2  (11,7)=1  (11,11)=1  (11,15)=2  (11,19)=2  (15,7)=2  (15,11)=2  (15,15)=2  (15,19)=2  (19,7)=2  (19,11)=2  (19,15)=2  (19,19)=2 
! 9 wrong pixels (generated / expected)

TRAIN 7837ac64.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color red and mask ....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxx.xxxx.xxxx.xxxx.xxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x....|....x....x....x....x....x.... at (0,0)
diff: 
delta: (4,4)=1  (4,9)=1  (4,14)=4  (4,19)=4  (9,4)=1  (9,9)=1  (9,14)=4  (9,19)=4  (14,4)=8  (14,9)=8  (14,14)=8  (14,19)=8  (19,4)=8  (19,9)=8  (19,14)=8  (19,19)=8 
! 8 wrong pixels (generated / expected)

TEST 7837ac64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.2 sec (3.2 sec/task)
bits-train-error = 1832.0 bits (1832.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-215] Checking task 794b24be.json: 10 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7468.7 = 7484.3
DL output with Mo: L = 15.6 + 7468.7 = 7484.3
DL input+output M: L = 31.2 + 14937.3 = 14968.6

# learning a model for train pairs
2.000	
1.595	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.304	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.129	OUT DEF: ^.size=^.size
1.024	OUT DEF: ^.layer_0.pos='(0,0)
0.949	OUT DEF: ^.layer_0.shape.color=red
0.916	OUT DEF: ^.color=black
0.884	IN  DEF: ^.layer_0.shape.color=blue
0.851	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 4764.9 = 4815.2
DL output with Mo: L = 41.4 + 1513.0 = 1554.3
DL input+output M: L = 91.7 + 6277.9 = 6369.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta:
   (30.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (39.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta: (2,0)=1 
   (54.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta: (2,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,1)
diff: 
delta:
   (39.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (0,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (30.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1 
   (56.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta:
   (13.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
   (40.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta:
   (13.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN 794b24be.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1  (2,2)=1 
   (78.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta: (2,0)=1  (2,2)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/8: 0 - (FAILURE)

## instance 9

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask .x|xx|x. at (0,0)
diff: 
delta:
   (43.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask .x|xx|x. at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/9: 0 - (FAILURE)

## instance 10

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,1)
diff: 
delta: (0,0)=1 
   (63.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta:
   (23.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (1,1)
diff: 
delta: (0,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN 794b24be.json/10: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
diff: 
delta: (2,1)=1 
! 2 wrong pixels (generated / expected)

TEST 794b24be.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST 794b24be.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 1513.0 bits (1513.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-214] Checking task 7b6016b9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 88835.6 = 88851.2
DL output with Mo: L = 15.6 + 143647.3 = 143662.9
DL input+output M: L = 31.2 + 232482.9 = 232514.1

# learning a model for train pairs
2.000	
1.150	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.539	OUT OBJECT at ^.layer_0: ^.layer_0
0.251	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.197	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.181	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.176	OUT DEF: ^.size=^.size
0.174	OUT DEF: ^.color=green
0.173	OUT DEF: ^.layer_0111.shape.size.i=3
0.171	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.pos.j + 3
0.170	OUT DEF: ^.layer_01.shape.color=red
0.169	OUT DEF: ^.layer_011.shape.color=red
0.168	OUT DEF: ^.layer_0111.shape.color=red
0.167	IN  DEF: ^.color=black
0.166	OUT DEF: ^.layer_01.shape.mask=Full
0.166	OUT DEF: ^.layer_011.shape.mask=Full
0.165	OUT DEF: ^.layer_0111.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color green and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,^.layer_0.pos.j + 3) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _0111: a rectangle with size (3,?) and color red and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 13174.2 = 13222.2
DL output with Mo: L = 149.1 + 2173.5 = 2322.6
DL input+output M: L = 197.1 + 15347.7 = 15544.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
diff: 
delta:
   (448.1 bits)
data: a background with size (23,23) and color green and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (5,7)
  _011: a rectangle with size (6,9) and color red and mask Full at (9,7)
  _0111: a rectangle with size (3,2) and color red and mask Full at (16,14)
diff: 
delta:
   (71.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (22,22) and color cyan and mask ..........x...........|..........x.....x.....|..........x.....x.....|......x...x.....x.....|...xxxxxxxxxx...x.....|......x...x.....x...x.|......x...x.....x...x.|......x...x.....x...x.|...xxxxxxxxxxxxxxxxxxx|......x...x.....x...x.|......x...x.....x...x.|......x.........x...x.|......x.........x.....|......x.........x.....|......x.........x.....|xxxxxxxxxxxxxxxxxx....|......x......x..x.....|......x......x..x.....|......x......x..x.....|......x.....xxxxxxxxx.|.............x..x.....|.............x..x..... at (0,0)
diff: 
delta:
! 75 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
diff: 
delta:
   (434.0 bits)
data: a background with size (22,25) and color green and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
  _01: a rectangle with size (8,3) and color red and mask Full at (4,5)
  _011: a rectangle with size (8,5) and color red and mask Full at (4,5)
  _0111: a rectangle with size (3,5) and color red and mask Full at (4,11)
diff: 
delta:
   (75.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (19,25) and color blue and mask ....x...........x........|....x...........x........|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x...xxxxxxxxxxxx.....|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|.xxxxxxxxxxxx...x........|....x.....x.....x........|....x.....x.....x........|....x.....x.....x........|....x.....x...xxxxxxx....|....x.....x.....x........|....x.....x.....x........|..........x.....x........ at (1,0)
diff: 
delta:
! 61 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,21) and color black and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
diff: 
delta:
   (435.4 bits)
data: a background with size (24,21) and color green and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
  _01: a rectangle with size (2,4) and color red and mask Full at (16,14)
  _011: a rectangle with size (9,8) and color red and mask Full at (6,5)
  _0111: a rectangle with size (3,2) and color red and mask Full at (16,5)
diff: 
delta:
   (70.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,21) and color black and layers
  _0: a rectangle with size (22,20) and color yellow and mask ...x................|...x........x.......|...x........x.......|...x........x.......|xxxxxxxxxxxxxxxx....|...x........x.......|...x........x.......|...x....xxxxxxxxx...|...x........x.......|...x........x.......|...x........x.......|...x........x.......|...x..x.....x....x..|...x..x.....x....x..|.xxxxxxxxxxxxxxxxx..|...x..x.....x....x..|...x..x.....x....x..|...x..x....xxxxxxxxx|xxxxxxxxx...x....x..|...x..x.....x....x..|...x..x.....x....x..|...x..x.....x....... at (1,1)
diff: 
delta:
! 90 wrong pixels (generated / expected)

TRAIN 7b6016b9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (21,22) and color orange and mask ...x..........x.......|...x.....x....x.....x.|...x.....x....x.....x.|xxxxxxxxxxxxxxxxxxxxxx|...x.....x....x.....x.|...x.....x....x.....x.|...x.....x....x.....x.|...x.....x....x.....x.|...x....xxxxxxxxxxxxxx|...x.....x....x.....x.|...x.....x....x.....x.|...x..........x.....x.|...x..........x.......|.xxxxxxxxxxxxxxxxx....|...x..........x.......|...x..........x.......|...x......xxxxxxxxx...|.xxxxx........x.......|...x..........x.......|...x..................|...x.................. at (1,2)
diff: 
delta:
! 110 wrong pixels (generated / expected)

TEST 7b6016b9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.4 sec (2.4 sec/task)
bits-train-error = 2173.5 bits (2173.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-213] Checking task 7b7f7511.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8647.7 = 8663.3
DL output with Mo: L = 15.6 + 4509.9 = 4525.5
DL input+output M: L = 31.2 + 13157.6 = 13188.8

# learning a model for train pairs
2.000	
1.631	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.334	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.267	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.216	OUT DEF: ^.color=^.color
1.162	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.124	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.089	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
1.067	OUT DEF: ^.layer_01.pos.i=^.layer_0.shape.size.i - 1
1.054	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.006	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.965	OUT DEF: ^.size.i=bottom(^.layer_0) + 1
0.930	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
0.899	OUT DEF: ^.layer_0.shape.size.j=max(^.layer_0.shape.size.i, ^.layer_011.shape.size.i)
0.869	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.j
0.833	OUT DEF: ^.size.j=bottom(^.layer_011) + 1
0.804	OUT DEF: ^.layer_01.pos=^.layer_011.pos
0.792	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (bottom(^.layer_0) + 1,bottom(^.layer_011) + 1) and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,max(^.layer_0.shape.size.i, ^.layer_011.shape.size.i)) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_01.shape.size.j,?) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 4797.2 = 4910.5
DL output with Mo: L = 177.4 + 842.4 = 1019.9
DL input+output M: L = 290.7 + 5639.6 = 5930.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,8) and color blue and layers
  _0: a rectangle with size (4,8) and color green and mask ..x...x.|..xx..xx|xx..xx..|.x...x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,0)
diff: 
delta: (0,7)=2  (3,4)=2 
   (191.8 bits)
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (4,4) and color green and mask ..x.|..xx|xx..|.x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,0)
diff: 
delta: (0,3)=2 
   (52.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color blue and layers
  _0: a rectangle with size (4,8) and color green and mask ..x...x.|..xx..xx|xx..xx..|.x...x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (0,7)
diff: 
delta: (3,0)=2  (3,4)=2 
! size mismatch, 4x1 instead of 4x4
>> Trial 2
data: a background with size (4,8) and color blue and layers
  _0: a rectangle with size (4,8) and color green and mask ..x...x.|..xx..xx|xx..xx..|.x...x.. at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,0)
diff: 
delta: (0,7)=2  (3,4)=2 
! 10 wrong pixels (generated / expected)

TRAIN 7b7f7511.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask x.|xx at (1,0)
  _01: a rectangle with size (2,2) and color pink and mask Full at (1,3)
  _011: a rectangle with size (2,4) and color cyan and mask Full (and Border) at (1,2)
diff: 
delta: (1,4)=4 
   (137.7 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask x.|xx at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,2)
diff: 
delta:
   (15.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask x.|xx at (1,0)
  _01: a rectangle with size (2,2) and color pink and mask Full at (1,3)
  _011: a rectangle with size (2,4) and color cyan and mask Full (and Border) at (1,2)
diff: 
delta: (1,4)=4 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (1,3)
  _01: a rectangle with size (2,4) and color cyan and mask Full at (1,2)
  _011: a rectangle with size (2,2) and color pink and mask x.|xx at (1,0)
diff: 
delta: (1,4)=4 
! 3 wrong pixels (generated / expected)

TRAIN 7b7f7511.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,2) and color red and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,0)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
diff: 
delta: (3,1)=3  (4,0)=3 
   (150.1 bits)
data: a background with size (3,2) and color red and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
diff: 
delta:
   (16.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color red and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,0)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
diff: 
delta: (3,1)=3  (4,0)=3 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,2) and color red and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (5,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
diff: 
delta: (3,1)=3  (4,0)=3 
! size mismatch, 6x2 instead of 3x2
>> Trial 3
data: a background with size (6,2) and color red and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (5,0)
diff: 
delta: (3,1)=3  (4,0)=3 
! size mismatch, 2x6 instead of 3x2

TRAIN 7b7f7511.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,0)
  _01: a rectangle with size (2,2) and color pink and mask Full at (6,0)
  _011: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,0)
diff: 
delta: (3,0)=2  (3,2)=2  (4,0)=5# (4,2)=5# (5,1)=5# (7,0)=2  (7,2)=2 
! size mismatch, 4x2 instead of 4x3
>> Trial 2
data: a background with size (8,3) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,0)
  _01: a rectangle with size (2,2) and color pink and mask Full at (6,0)
  _011: a rectangle with size (2,3) and color grey and mask Even Checkboard at (4,0)
diff: 
delta: (0,0)=5# (0,2)=5# (1,1)=5# (3,0)=2  (3,2)=2  (7,0)=2  (7,2)=2 
! size mismatch, 4x6 instead of 4x3
>> Trial 3
data: a background with size (8,3) and color yellow and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (6,0)
  _01: a rectangle with size (2,2) and color pink and mask Full at (2,0)
  _011: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,0)
diff: 
delta: (3,0)=2  (3,2)=2  (4,0)=5# (4,2)=5# (5,1)=5# (7,0)=2  (7,2)=2 
! size mismatch, 8x2 instead of 4x3

TEST 7b7f7511.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.7 sec (7.7 sec/task)
bits-train-error = 842.4 bits (842.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-212] Checking task 7c008303.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 28760.1 = 28775.7
DL output with Mo: L = 15.6 + 12542.4 = 12558.0
DL input+output M: L = 31.2 + 41302.4 = 41333.6

# learning a model for train pairs
2.000	
1.636	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.399	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.231	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.953	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.876	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.816	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.775	OUT DEF: ^.size=^.size - 3
0.745	OUT DEF: ^.layer_0.shape.size=^.size / 3
0.715	OUT DEF: ^.layer_01.shape.size=^.size / 3
0.691	OUT DEF: ^.layer_0.pos='(0,0)
0.672	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.662	OUT DEF: ^.layer_0111.pos.i=^.layer_0.pos.j
0.651	OUT DEF: ^.layer_01.pos.j=center(^.layer_01) - 2
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size - 3 and color ? and layers
  _0: a rectangle with size ^.size / 3 and color ? and mask ? at '(0,0)
  _01: a rectangle with size ^.size / 3 and color ? and mask ? at (?,center(^.layer_01) - 2)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 9072.4 = 9217.5
DL output with Mo: L = 197.3 + 3960.1 = 4157.3
DL input+output M: L = 342.4 + 13032.5 = 13374.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=4  (1,0)=1  (1,1)=6 
   (268.3 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask +-cross at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask +-cross at (0,3)
  _011: a rectangle with size (3,3) and color blue and mask +-cross at (3,0)
  _0111: a rectangle with size (3,3) and color pink and mask +-cross at (3,3)
diff: 
delta:
   (101.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=4  (1,0)=1  (1,1)=6 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask .x..x.|xxxxxx|.x..x.|.x..x.|xxxxxx|.x..x. at (3,3)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,1)=4  (1,0)=1  (1,1)=6 
! 27 wrong pixels (generated / expected)

TRAIN 7c008303.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,6)
  _0111: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.. at (3,0)
diff: 
delta: (0,7)=1  (0,8)=2  (1,7)=4  (1,8)=1  (3,5)=3 
   (327.1 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|xx.|xx. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask +-cross at (3,3)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,0)
  _0111: a rectangle with size (1,1) and color red and mask Full at (0,3)
diff: 
delta: (0,5)=2  (2,3)=2  (2,5)=2 
   (164.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,6)
  _0111: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.. at (3,0)
diff: 
delta: (0,7)=1  (0,8)=2  (1,7)=4  (1,8)=1  (3,5)=3 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask ...x.x|....x.|xxxxxx|....x. at (5,0)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,6)
  _011: a rectangle with size (1,9) and color cyan and mask Full at (2,0)
  _0111: a rectangle with size (3,4) and color green and mask ..xx|xx..|xx.. at (3,0)
diff: 
delta: (0,7)=1  (0,8)=2  (1,7)=4  (1,8)=1  (3,5)=3 
! 22 wrong pixels (generated / expected)

TRAIN 7c008303.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _0111: a rectangle with size (2,1) and color green and mask Full at (4,4)
diff: 
delta: (5,8)=3  (7,0)=2  (7,1)=4  (8,0)=6  (8,1)=5#
   (311.9 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|..x|xx. at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask ..x|..x|xx. at (0,3)
  _011: a rectangle with size (2,1) and color pink and mask Full at (4,1)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (3,3)
diff: 
delta: (5,5)=5#
   (130.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _0111: a rectangle with size (2,1) and color green and mask Full at (4,4)
diff: 
delta: (5,8)=3  (7,0)=2  (7,1)=4  (8,0)=6  (8,1)=5#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ..x..x|..x..x|xx.xx.|....x.|...x.. at (0,3)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,2)
  _011: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _0111: a rectangle with size (2,1) and color green and mask Full at (4,4)
diff: 
delta: (5,8)=3  (7,0)=2  (7,1)=4  (8,0)=6  (8,1)=5#
! 23 wrong pixels (generated / expected)

TRAIN 7c008303.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,4) and color green and mask ...x|xx.x|.x.x|.xxx|.x..|..x. at (0,0)
  _01: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (9,1) and color cyan and mask Full at (0,6)
  _0111: a rectangle with size (2,1) and color green and mask Full at (1,5)
diff: 
delta: (4,5)=3  (7,7)=2  (7,8)=1  (8,7)=4  (8,8)=7#
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,4) and color green and mask ...x|xx.x|.x.x|.xxx|.x..|..x. at (0,0)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,6)
  _011: a rectangle with size (1,9) and color cyan and mask Full at (6,0)
  _0111: a rectangle with size (2,1) and color green and mask Full at (1,5)
diff: 
delta: (4,5)=3  (7,7)=2  (7,8)=1  (8,7)=4  (8,8)=7#
! 21 wrong pixels (generated / expected)

TEST 7c008303.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.4 sec (26.4 sec/task)
bits-train-error = 3960.1 bits (3960.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-211] Checking task 7ddcd7ec.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5068.2 = 5083.8
DL output with Mo: L = 15.6 + 8599.9 = 8615.6
DL input+output M: L = 31.2 + 13668.2 = 13699.4

# learning a model for train pairs
2.000	
1.374	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.735	OUT DEF: ^.size=^.size
0.716	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.701	IN  DEF: ^.color=black
0.692	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2068.5 = 2116.4
DL output with Mo: L = 41.7 + 2336.7 = 2378.3
DL input+output M: L = 89.6 + 4405.1 = 4494.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,2)
diff: 
delta:
   (64.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask xx......|xx......|..x.....|...x....|....x...|.....x..|......x.|.......x at (2,2)
diff: 
delta:
   (77.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask xx.|xx.|..x at (2,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask ..x|xx.|xx.|..x at (1,4)
diff: 
delta:
   (68.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,6) and color yellow and mask ...x..|..x...|xx....|xx....|..x...|...x..|....x.|.....x at (0,4)
diff: 
delta:
   (71.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask ..x|xx.|xx.|..x at (1,4)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ...x|.xx.|.xx.|x... at (2,3)
diff: 
delta:
   (73.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color orange and mask ........x|.......x.|......x..|....xx...|....xx...|...x.....|..x......|.x.......|x........ at (0,0)
diff: 
delta:
   (84.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ...x|.xx.|.xx.|x... at (2,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 7ddcd7ec.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ...x|.xx.|.xx.|x..x at (3,2)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST 7ddcd7ec.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 2336.7 bits (2336.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-210] Checking task 7df24a62.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 54226.0 = 54241.6
DL output with Mo: L = 15.6 + 85672.4 = 85688.0
DL input+output M: L = 31.2 + 139898.4 = 139929.6

# learning a model for train pairs
2.000	
1.710	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.499	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.287	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.195	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.178	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.154	OUT OBJECT at ^.layer_010: ^.layer_01
1.142	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	OUT OBJECT at ^.layer_0101: ^.layer_010
1.110	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _0101: ^.layer_010
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 36940.3 = 37053.5
DL output with Mo: L = 120.8 + 36434.2 = 36555.0
DL input+output M: L = 234.1 + 73374.4 = 73608.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,20)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (541.9 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (4,20)
  _0101: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
  _01: a rectangle with size (5,5) and color blue and mask xxxxx|x.x.x|xxxxx|xx.xx|xxxxx at (12,10)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (13,11)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
   (491.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,20)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! 63 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (5,18)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,11)=4  (13,13)=4  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! 63 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (1,3)
  _010: a rectangle with size (1,3) and color yellow and mask Full at (13,11)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,13)
diff: 
delta: (2,4)=4  (3,6)=4  (4,4)=4  (4,20)=4  (5,18)=4  (7,7)=4  (8,14)=4  (12,4)=4  (13,12)=0  (14,4)=4  (14,19)=4  (15,12)=4  (18,18)=4  (20,3)=4  (21,11)=4 
! 62 wrong pixels (generated / expected)

TRAIN 7df24a62.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (6,15)
  _010: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _01: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
   (743.1 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|x.xx|xx.x|xxxx at (6,15)
  _010: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
  _0101: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _01: a rectangle with size (4,4) and color blue and mask Full at (13,13)
  _011: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (7,16)
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
   (677.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (6,15)
  _010: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _01: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (14,14)
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (7,16)=4  (8,17)=4  (9,10)=4  (12,0)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
! 53 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|x.xx|xx.x|xxxx at (6,15)
  _010: a rectangle with size (2,1) and color yellow and mask Full at (21,11)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (7,16)
diff: 
delta: (0,0)=4  (0,10)=4  (3,8)=4  (3,22)=4  (4,15)=4  (5,1)=4  (5,11)=4  (6,13)=4  (6,20)=4  (7,10)=4  (9,10)=4  (12,0)=4  (14,15)=4  (15,14)=4  (16,18)=4  (18,22)=4  (19,5)=4  (19,9)=4  (20,21)=4  (22,0)=4  (22,3)=4  (22,9)=4 
! 53 wrong pixels (generated / expected)

TRAIN 7df24a62.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (1288.1 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (4,7) and color blue and mask ....xxx|xxxxx.x|x..xx.x|xxxxxxx at (13,5)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
  _0101: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _01: a rectangle with size (4,7) and color blue and mask xxxxxxx|x..xx.x|xxxxx.x|....xxx at (11,13)
  _011: a rectangle with size (8,4) and color blue and mask xxx.|x.x.|x.x.|xxx.|.xxx|.x.x|.x.x|.xxx at (2,13)
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
   (1366.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (12,14)
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (3,14)=4  (4,5)=4  (4,14)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
! 106 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (14,5)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (15,4)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (3,14)
diff: 
delta: (0,10)=4  (2,12)=4  (3,11)=4  (4,5)=4  (4,16)=4  (5,0)=4  (5,21)=4  (6,19)=4  (7,7)=4  (7,15)=4  (8,3)=4  (8,15)=4  (9,7)=4  (9,22)=4  (10,12)=4  (10,17)=4  (11,20)=4  (12,4)=4  (12,11)=4  (12,14)=4  (12,15)=4  (12,18)=4  (13,18)=4  (14,0)=4  (14,2)=4  (14,10)=4  (14,22)=4  (15,10)=4  (16,17)=4  (16,21)=4  (17,2)=4  (17,9)=4  (17,12)=4  (18,1)=4  (18,13)=4  (19,16)=4  (19,22)=4  (20,21)=4  (22,2)=4  (22,10)=4  (22,14)=4  (22,18)=4 
! 106 wrong pixels (generated / expected)

TRAIN 7df24a62.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (1121.0 bits)
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _010: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _0101: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _01: a rectangle with size (5,4) and color blue and mask Full at (4,15)
  _011: a rectangle with size (3,5) and color blue and mask Full at (0,1)
diff: 
delta: (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
   (1108.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,4)=4  (1,21)=4  (3,3)=4  (3,13)=4  (4,2)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
! 84 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask Full at (8,6)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (7,16)
  _01: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (3,2)
diff: 
delta: (0,2)=4  (1,2)=4  (1,4)=4  (1,21)=4  (3,13)=4  (5,5)=4  (5,11)=4  (5,17)=4  (6,20)=4  (7,3)=4  (7,6)=4  (7,9)=4  (9,7)=4  (9,8)=4  (9,12)=4  (11,0)=4  (11,5)=4  (11,7)=4  (11,18)=4  (12,1)=4  (12,22)=4  (13,4)=4  (13,19)=4  (14,5)=4  (14,13)=4  (16,11)=4  (16,22)=4  (17,3)=4  (17,10)=4  (18,2)=4  (19,9)=4  (20,1)=4  (20,13)=4  (21,2)=4  (21,17)=4  (22,16)=4 
! 84 wrong pixels (generated / expected)

TRAIN 7df24a62.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (0,9)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (1,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,6)
diff: 
delta: (1,10)=4  (3,10)=4  (3,12)=4  (4,3)=4  (5,14)=4  (8,10)=4  (9,5)=4  (9,19)=4  (10,8)=4  (10,13)=4  (11,3)=4  (11,5)=4  (11,18)=4  (12,12)=4  (16,0)=4  (16,7)=4  (16,18)=4  (18,19)=4  (20,6)=4  (20,8)=4  (21,21)=4  (22,1)=4  (22,6)=4 
! 88 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (23,23) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Full at (0,9)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (1,5)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (4,3)
diff: 
delta: (1,10)=4  (3,6)=4  (3,10)=4  (3,12)=4  (5,14)=4  (8,10)=4  (9,5)=4  (9,19)=4  (10,8)=4  (10,13)=4  (11,3)=4  (11,5)=4  (11,18)=4  (12,12)=4  (16,0)=4  (16,7)=4  (16,18)=4  (18,19)=4  (20,6)=4  (20,8)=4  (21,21)=4  (22,1)=4  (22,6)=4 
! 88 wrong pixels (generated / expected)

TEST 7df24a62.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.4 sec (28.4 sec/task)
bits-train-error = 36434.2 bits (36434.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-209] Checking task 7e0986d6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 49888.6 = 49904.2
DL output with Mo: L = 15.6 + 46783.9 = 46799.5
DL input+output M: L = 31.2 + 96672.5 = 96703.7

# learning a model for train pairs
2.000	
1.646	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.330	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.770	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.546	OUT OBJECT at ^.layer_00: ^.layer_0
0.363	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.330	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.314	OUT DEF: ^.layer_01=^.layer_01
0.304	OUT DEF: ^.size=^.size
0.297	OUT DEF: ^.layer_0.shape.size=^.layer_00.shape.size
0.292	OUT DEF: ^.layer_0.pos=^.layer_00.pos
0.289	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.286	IN  OBJECT at ^.layer_0110: a point with color ? at (?,?)
0.283	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.282	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.279	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.276	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.273	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.270	IN  DEF: ^.layer_0.shape.mask=Full
0.267	IN  OBJECT at ^.layer_01101: a point with color ? at (?,?)
0.264	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
0.261	IN  OBJECT at ^.layer_001: a point with color ? at (?,?)
0.260	IN  DEF: ^.layer_01.shape.mask=Full
0.259	IN  DEF: ^.layer_011.shape.mask=Full
0.257	OUT DEF: ^.color=black
0.256	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size ^.layer_00.shape.size and color ^.layer_0.shape.color and mask ? at ^.layer_00.pos
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _01101: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 317.6 + 9262.6 = 9580.2
DL output with Mo: L = 63.0 + 2954.9 = 3017.9
DL input+output M: L = 380.7 + 12217.5 = 12598.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,14) and color black and layers
  _00: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _001: a point with color cyan at (0,0)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _010: a point with color cyan at (0,4)
  _01: a rectangle with size (4,5) and color green and mask Full at (6,9)
  _0110: a point with color cyan at (0,11)
  _01101: a point with color cyan at (5,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (3,2)
  _0111: a point with color cyan at (7,1)
  _01111: a point with color cyan at (7,6)
  _011111: a point with color cyan at (8,4)
  _0111111: a point with color cyan at (10,4)
  _01111111: a point with color cyan at (10,8)
diff: 
delta: (2,8)=8  (2,10)=8  (4,7)=8  (7,12)=8  (12,1)=8  (12,4)=8  (12,13)=8 
   (556.5 bits)
data: a background with size (13,14) and color black and layers
  _00: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _0: a rectangle with size (6,8) and color green and mask ...xxxxx|...xxxxx|...xxxxx|xxxxxxxx|xxx.....|xxx..... at (7,0)
  _01: a rectangle with size (4,5) and color green and mask Full at (6,9)
diff: 
delta: (3,2)=3  (3,3)=3  (3,4)=3  (4,2)=3  (4,3)=3  (4,4)=3  (5,2)=3  (5,3)=3  (5,4)=3 
   (292.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  _00: a rectangle with size (6,8) and color green and mask ...xxx.x|...x.xxx|...xxxxx|xxxx.xxx|xxx.....|x.x..... at (7,0)
  _001: a point with color cyan at (0,0)
  _0: a rectangle with size (5,5) and color green and mask Full at (0,6)
  _010: a point with color cyan at (0,4)
  _01: a rectangle with size (4,5) and color green and mask Full at (6,9)
  _0110: a point with color cyan at (0,11)
  _01101: a point with color cyan at (5,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (3,2)
  _0111: a point with color cyan at (7,1)
  _01111: a point with color cyan at (7,6)
  _011111: a point with color cyan at (8,4)
  _0111111: a point with color cyan at (10,4)
  _01111111: a point with color cyan at (10,8)
diff: 
delta: (2,8)=8  (2,10)=8  (4,7)=8  (7,12)=8  (12,1)=8  (12,4)=8  (12,13)=8 
! 28 wrong pixels (generated / expected)

TRAIN 7e0986d6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _00: a rectangle with size (4,10) and color red and mask xxxxxx.xxx|.xxxxxxxxx|xxxxxx.xx.|xxxxxxxxxx at (9,3)
  _001: a point with color blue at (2,10)
  _0: a rectangle with size (5,7) and color red and mask Full at (2,9)
  _010: a point with color blue at (3,3)
  _01: a rectangle with size (5,4) and color red and mask Full at (1,1)
  _0110: a point with color blue at (1,6)
  _01101: a point with color blue at (5,5)
  _011: a rectangle with size (1,4) and color blue and mask Full at (11,9)
  _0111: a point with color blue at (8,12)
  _01111: a point with color blue at (9,1)
  _011111: a point with color blue at (9,9)
  _0111111: a point with color blue at (10,3)
  _01111111: a point with color blue at (10,15)
diff: 
delta: (5,14)=1 
   (369.8 bits)
data: a background with size (13,16) and color black and layers
  _00: a rectangle with size (5,7) and color red and mask Full at (2,9)
  _0: a rectangle with size (4,10) and color red and mask Full at (9,3)
  _01: a rectangle with size (5,4) and color red and mask Full at (1,1)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _00: a rectangle with size (4,10) and color red and mask xxxxxx.xxx|.xxxxxxxxx|xxxxxx.xx.|xxxxxxxxxx at (9,3)
  _001: a point with color blue at (2,10)
  _0: a rectangle with size (5,7) and color red and mask Full at (2,9)
  _010: a point with color blue at (3,3)
  _01: a rectangle with size (5,4) and color red and mask Full at (1,1)
  _0110: a point with color blue at (1,6)
  _01101: a point with color blue at (5,5)
  _011: a rectangle with size (1,4) and color blue and mask Full at (11,9)
  _0111: a point with color blue at (8,12)
  _01111: a point with color blue at (9,1)
  _011111: a point with color blue at (9,9)
  _0111111: a point with color blue at (10,3)
  _01111111: a point with color blue at (10,15)
diff: 
delta: (5,14)=1 
correct output grid

TRAIN 7e0986d6.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _00: a rectangle with size (6,8) and color grey and mask x.xxxxxx|xxxxxxxx|xxxxxxxx|xxxxxx.x|xxxxxxxx|xxxx.xxx at (2,1)
  _001: a point with color yellow at (0,14)
  _0: a rectangle with size (7,4) and color grey and mask Full at (0,12)
  _010: a point with color yellow at (1,1)
  _01: a rectangle with size (2,6) and color grey and mask Full at (10,6)
  _0110: a point with color yellow at (1,6)
  _01101: a point with color yellow at (2,2)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,16)
  _0111: a point with color yellow at (5,7)
  _01111: a point with color yellow at (7,5)
  _011111: a point with color yellow at (7,12)
  _0111111: a point with color yellow at (9,15)
  _01111111: a point with color yellow at (11,3)
diff: 
delta: (6,14)=4  (10,11)=4  (11,9)=4 
correct output grid

TEST 7e0986d6.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 20.5 sec (20.5 sec/task)
bits-train-error = 2954.9 bits (2954.9 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-208] Checking task 7f4411dc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 28277.2 = 28292.8
DL output with Mo: L = 15.6 + 22616.3 = 22631.9
DL input+output M: L = 31.2 + 50893.4 = 50924.7

# learning a model for train pairs
2.000	
1.571	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.220	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.017	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.921	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.878	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.850	OUT DEF: ^.size=^.size
0.842	OUT DEF: ^.layer_0.shape.size.i=3
0.834	OUT DEF: ^.layer_0.shape.size.j=average(^.layer_0.pos.i, ^.layer_011.pos.i)
0.826	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.820	OUT DEF: ^.layer_0.pos.j=max(^.layer_0.pos.j, ^.layer_01.pos.j)
0.815	OUT DEF: ^.layer_0.shape.mask=Full
0.812	IN  DEF: ^.layer_0111.shape.mask=Full
0.808	OUT DEF: ^.color=black
0.806	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,average(^.layer_0.pos.i, ^.layer_011.pos.i)) and color ^.layer_0.shape.color and mask Full at (?,max(^.layer_0.pos.j, ^.layer_01.pos.j))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 144.3 + 8364.5 = 8508.8
DL output with Mo: L = 114.1 + 11314.1 = 11428.2
DL input+output M: L = 258.4 + 19678.6 = 19937.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _01: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta: (5,10)=7# (8,1)=7# (12,4)=7#
   (261.6 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
diff: 
delta: (3,2)=7# (3,3)=7# (3,4)=7# (3,5)=7# (4,2)=7# (4,3)=7# (4,4)=7# (4,5)=7# (5,2)=7# (5,3)=7# (5,4)=7# (5,5)=7# (8,8)=7# (8,9)=7# (8,10)=7# (9,8)=7# (9,9)=7# (9,10)=7#
   (476.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _01: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta: (5,10)=7# (8,1)=7# (12,4)=7#
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask ..x.|xxxx|xxxx|xxxx at (2,2)
  _01: a rectangle with size (3,5) and color orange and mask Full at (0,8)
  _011: a rectangle with size (3,4) and color orange and mask xxx.|xxx.|...x at (8,8)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta: (5,10)=7# (8,1)=7# (12,4)=7#
! 18 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask ....x|xxxxx|xxxxx|xxxxx at (9,9)
  _01: a rectangle with size (4,4) and color pink and mask .x..|xxxx|xxxx|xxxx at (4,3)
  _011: a rectangle with size (3,3) and color pink and mask .x.|xxx|xxx at (1,11)
  _0111: a rectangle with size (3,2) and color pink and mask Full at (12,2)
diff: 
delta: (2,1)=6  (2,6)=6  (3,16)=6  (6,12)=6  (10,3)=6  (12,7)=6  (15,13)=6  (16,10)=6 
   (420.8 bits)
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (10,9)
diff: 
delta: (2,11)=6  (2,12)=6  (2,13)=6  (3,11)=6  (3,12)=6  (3,13)=6  (5,3)=6  (5,4)=6  (5,5)=6  (5,6)=6  (6,3)=6  (6,4)=6  (6,5)=6  (6,6)=6  (7,3)=6  (7,4)=6  (7,5)=6  (7,6)=6  (12,2)=6  (12,3)=6  (13,2)=6  (13,3)=6  (14,2)=6  (14,3)=6 
   (650.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask ....x|xxxxx|xxxxx|xxxxx at (9,9)
  _01: a rectangle with size (4,4) and color pink and mask .x..|xxxx|xxxx|xxxx at (4,3)
  _011: a rectangle with size (3,3) and color pink and mask .x.|xxx|xxx at (1,11)
  _0111: a rectangle with size (3,2) and color pink and mask Full at (12,2)
diff: 
delta: (2,1)=6  (2,6)=6  (3,16)=6  (6,12)=6  (10,3)=6  (12,7)=6  (15,13)=6  (16,10)=6 
! 48 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask .xxxx.|.xxxx.|.xxxxx|x..... at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (6,5)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (1,6)
diff: 
delta:
   (154.1 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (5.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask .xxxx.|.xxxx.|.xxxxx|x..... at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color grey and mask Full at (6,5)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (1,6)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask .xxxx.|.xxxx.|.xxxxx|x..... at (2,0)
  _01: a rectangle with size (1,1) and color grey and mask Full at (1,6)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,1)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (6,5)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN 7f4411dc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xxxxxx|xxxxx.|xxxxx. at (5,4)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|.xxx|.xxx|x... at (1,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (1,7)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
diff: 
delta: (3,7)=8  (7,0)=8  (8,2)=8  (9,4)=8  (9,9)=8 
! 30 wrong pixels (generated / expected)

TEST 7f4411dc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.3 sec (6.3 sec/task)
bits-train-error = 11314.1 bits (11314.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-207] Checking task 7fe24cdd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4333.7 = 4349.3
DL output with Mo: L = 15.6 + 16849.1 = 16864.7
DL input+output M: L = 31.2 + 21182.8 = 21214.0

# learning a model for train pairs
2.000	
1.832	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.716	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.608	OUT OBJECT at ^.layer_00: ^.layer_0
1.528	OUT OBJECT at ^.layer_001: ^.layer_0.shape at (?,?)
1.451	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.378	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.308	OUT OBJECT at ^.layer_011: ^.layer_01
1.256	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
1.226	OUT DEF: ^.size=^.size * 2
1.203	IN  DEF: ^.layer_0.shape.mask=Full
1.180	IN  DEF: ^.layer_01.shape.mask=Full
1.159	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.137	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 81.2 + 3000.7 = 3081.9
DL output with Mo: L = 205.4 + 7025.9 = 7231.3
DL input+output M: L = 286.7 + 10026.6 = 10313.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=2 
   (127.9 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _001: a rectangle with size (2,1) and color grey and mask Full at (4,4)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,2)
  _010: a rectangle with size (2,1) and color cyan and mask Full at (4,5)
  _01: a rectangle with size (4,4) and color green and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (0,4)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (5,0)
diff: 
delta: (1,4)=5# (1,5)=5# (4,0)=5# (4,1)=5#
   (238.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color grey and mask Full at (0,1)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
diff: 
delta: (1,2)=3  (2,1)=3  (2,2)=2 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color green and mask Full at (1,1)
diff: 
delta: (0,0)=8  (1,0)=8  (2,2)=2 
! 24 wrong pixels (generated / expected)

TRAIN 7fe24cdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,0)
diff: 
delta: (0,1)=8  (2,1)=5#
   (110.2 bits)
data: a background with size (6,6) and color red and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _001: a rectangle with size (2,1) and color green and mask Full at (4,5)
  _0: a rectangle with size (1,2) and color green and mask Full at (0,4)
  _010: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color green and mask Full at (5,0)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (2,0)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (0,3)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (1,3)
diff: 
delta: (1,5)=8  (2,1)=5# (3,4)=5# (3,5)=8  (4,0)=8  (4,2)=5# (5,2)=8  (5,4)=8 
   (328.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta: (2,0)=8  (2,1)=5#
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,0)
diff: 
delta: (0,1)=8  (2,1)=5#
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,0)
diff: 
delta: (2,0)=8  (2,1)=5#
! 35 wrong pixels (generated / expected)

TRAIN 7fe24cdd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
   (62.0 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _001: a rectangle with size (1,3) and color pink and mask Full at (4,3)
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,4)
  _010: a rectangle with size (3,1) and color green and mask Full at (3,4)
  _01: a rectangle with size (3,1) and color pink and mask Full at (3,1)
  _011: a rectangle with size (3,1) and color green and mask Full at (0,1)
  _0111: a rectangle with size (1,3) and color green and mask Full at (1,3)
  _01111: a rectangle with size (1,3) and color green and mask Full at (4,0)
diff: 
delta:
   (136.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
diff: 
delta: (2,1)=3 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,1)
diff: 
delta: (0,1)=3 
! 18 wrong pixels (generated / expected)

TRAIN 7fe24cdd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color grey and mask Full at (0,1)
diff: 
delta: (0,2)=0  (2,0)=3 
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=0  (2,0)=3 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (2,2) and color blue and mask Full at (1,1)
diff: 
delta: (0,2)=0  (2,0)=3 
! 27 wrong pixels (generated / expected)

TEST 7fe24cdd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.2 sec (26.2 sec/task)
bits-train-error = 7025.9 bits (7025.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-206] Checking task 80af3007.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 41532.0 = 41547.6
DL output with Mo: L = 15.6 + 21174.0 = 21189.6
DL input+output M: L = 31.2 + 62706.0 = 62737.2

# learning a model for train pairs
2.000	
1.106	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.455	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.428	OUT DEF: ^.size=^.layer_0.shape.size
0.412	OUT DEF: ^.layer_0.pos='(0,0)
0.350	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.341	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.332	OUT DEF: ^.layer_01.pos.j='0
0.324	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.317	OUT DEF: ^.layer_00.shape.color=grey
0.309	OUT DEF: ^.layer_01.shape.color=grey
0.305	IN  DEF: ^.layer_0.shape.color=grey
0.301	OUT DEF: ^.color=black
0.299	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _00: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at '(0,0)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 4105.0 = 4155.3
DL output with Mo: L = 118.1 + 4105.6 = 4223.7
DL input+output M: L = 168.4 + 8210.6 = 8379.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx...xxx|xxx...xxx|xxx...xxx at (1,1)
diff: 
delta:
   (143.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (1,1) and color grey and mask Full at (0,2)
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
  _01: a rectangle with size (9,9) and color grey and mask x.x...x.x|.x.....x.|x.x...x.x|...x.x...|....x....|...x.x...|x.x...x.x|.x.....x.|x.x...x.x at (0,0)
diff: 
delta:
   (135.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxx...xxx|xxx...xxx|xxx...xxx|...xxx...|...xxx...|...xxx...|xxx...xxx|xxx...xxx|xxx...xxx at (1,1)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 80af3007.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxx...|xxxxxx...|xxxxxx...|......xxx|......xxx|......xxx|xxxxxx...|xxxxxx...|xxxxxx... at (1,7)
diff: 
delta:
   (143.0 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (3,3) and color grey and mask xx.|..x|xx. at (3,6)
  _0: a rectangle with size (3,6) and color grey and mask xx.xx.|..x..x|xx.xx. at (0,0)
  _01: a rectangle with size (3,6) and color grey and mask xx.xx.|..x..x|xx.xx. at (6,0)
diff: 
delta:
   (123.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxx...|xxxxxx...|xxxxxx...|......xxx|......xxx|......xxx|xxxxxx...|xxxxxx...|xxxxxx... at (1,7)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 80af3007.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|...xxxxxx|...xxxxxx|...xxxxxx|xxx...xxx|xxx...xxx|xxx...xxx at (4,3)
diff: 
delta:
   (124.6 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (2,2) and color grey and mask Full (and Border) at (0,1)
  _0: a rectangle with size (1,9) and color grey and mask Full at (0,0)
  _01: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|.xx.xx.xx|x.xx.xx.x|...xxxxxx|....xx.xx|...x.xx.x|xxx...xxx|.xx....xx|x.x...x.x at (0,0)
diff: 
delta:
   (152.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|...xxxxxx|...xxxxxx|...xxxxxx|xxx...xxx|xxx...xxx|xxx...xxx at (4,3)
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN 80af3007.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (9,9) and color grey and mask xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|...xxx...|...xxx...|...xxx...|xxx...xxx|xxx...xxx|xxx...xxx at (3,7)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TEST 80af3007.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 4105.6 bits (4105.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-205] Checking task 810b9b61.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 24978.6 = 24994.2
DL output with Mo: L = 15.6 + 24978.6 = 24994.2
DL input+output M: L = 31.2 + 49957.2 = 49988.5

# learning a model for train pairs
2.000	
1.711	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.423	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.240	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.057	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.842	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.761	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.680	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.650	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 7571.9 = 7748.8
DL output with Mo: L = 145.1 + 8352.0 = 8497.2
DL input+output M: L = 322.0 + 15923.9 = 16245.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color blue and mask Border at (12,10)
  _0111: a rectangle with size (4,3) and color blue and mask Border at (10,0)
  _01111: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (1,10)
diff: 
delta: (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
   (381.8 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color green and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color green and mask Border at (12,10)
  _0111: a rectangle with size (4,3) and color green and mask Border at (10,0)
diff: 
delta: (1,10)=1  (1,11)=1  (1,12)=1  (2,10)=1  (2,12)=1  (3,10)=1  (3,12)=1  (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
   (522.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Border at (7,6)
  _01: a rectangle with size (3,4) and color blue and mask Border at (2,2)
  _011: a rectangle with size (3,4) and color blue and mask Border at (12,10)
  _0111: a rectangle with size (4,3) and color blue and mask Border at (10,0)
  _01111: a rectangle with size (3,3) and color blue and mask xxx|x.x|x.x at (1,10)
diff: 
delta: (6,12)=1  (6,13)=1  (7,3)=1  (7,12)=1  (13,5)=1  (13,6)=1 
! size mismatch, 10x10 instead of 15x15

TRAIN 810b9b61.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _01: a rectangle with size (1,3) and color blue and mask Full at (3,4)
  _011: a rectangle with size (3,3) and color blue and mask Border at (3,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (3,10)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (8,4)
diff: 
delta:
   (198.7 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _01: a rectangle with size (3,3) and color green and mask Border at (3,4)
  _011: a rectangle with size (2,1) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (8,4)
diff: 
delta:
   (167.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask x.xx|x..x|xxxx at (8,9)
  _01: a rectangle with size (1,3) and color blue and mask Full at (3,4)
  _011: a rectangle with size (3,3) and color blue and mask Border at (3,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (3,10)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (8,4)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 810b9b61.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask Border at (2,1)
  _011: a rectangle with size (3,1) and color blue and mask Full at (6,1)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (7,4)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (6,0)
diff: 
delta:
   (176.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask Border at (2,1)
  _01: a rectangle with size (3,1) and color blue and mask Full at (6,1)
  _011: a rectangle with size (1,2) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,0)
diff: 
delta:
   (145.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask Border at (2,1)
  _011: a rectangle with size (3,1) and color blue and mask Full at (6,1)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (7,4)
  _01111: a rectangle with size (1,2) and color blue and mask Full at (6,0)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN 810b9b61.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xxxxx|x...x|x...x|x...x|xx.xx at (0,7)
  _01: a rectangle with size (4,5) and color blue and mask Border at (7,4)
  _011: a rectangle with size (3,4) and color blue and mask Border at (1,1)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (6,1)
  _01111: a rectangle with size (1,1) and color blue and mask Full at (8,1)
diff: 
delta: (8,11)=1 
! size mismatch, 10x10 instead of 12x12

TEST 810b9b61.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 8352.0 bits (8352.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-204] Checking task 82819916.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14147.2 = 14162.8
DL output with Mo: L = 15.6 + 24787.4 = 24803.0
DL input+output M: L = 31.2 + 38934.6 = 38965.8

# learning a model for train pairs
2.000	
1.778	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.599	OUT OBJECT at ^.layer_0: ^.layer_0
1.473	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.356	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.286	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	OUT OBJECT at ^.layer_010: ^.layer_01
1.171	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.138	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.105	OUT OBJECT at ^.layer_0110: ^.layer_011
1.074	OUT DEF: ^.size=^.size
1.051	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.022	IN  OBJECT at ^.layer_01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 164.6 + 8750.6 = 8915.2
DL output with Mo: L = 124.3 + 9615.1 = 9739.3
DL input+output M: L = 288.8 + 18365.7 = 18654.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
  _01110: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _0111: a point with color pink at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2 
   (207.0 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _010: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (1,8) and color blue and mask Full at (6,0)
  _0110: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,5)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (4,3)
diff: 
delta: (1,2)=2  (1,5)=2  (6,2)=6  (6,5)=6 
   (195.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _01110: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
  _0111: a point with color pink at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (4,2)
  _01110: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _0111: a point with color pink at (6,2)
diff: 
delta: (1,2)=2  (1,5)=2 
! 17 wrong pixels (generated / expected)

TRAIN 82819916.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,6)
  _011: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _01110: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _0111: a point with color blue at (3,2)
diff: 
delta: (1,2)=1  (1,4)=1  (7,2)=2 
   (233.6 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _010: a rectangle with size (1,2) and color blue and mask Full at (1,6)
  _01: a rectangle with size (1,6) and color blue and mask Full at (3,2)
  _0110: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _011: a rectangle with size (1,6) and color cyan and mask Full at (7,0)
  _0111: a rectangle with size (1,2) and color red and mask Full at (7,6)
diff: 
delta: (1,2)=1  (1,4)=1  (3,3)=3  (3,5)=3  (7,2)=2  (7,4)=2 
   (247.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,6)
  _011: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _01110: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _0111: a point with color blue at (3,2)
diff: 
delta: (1,2)=1  (1,4)=1  (7,2)=2 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,6)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (7,0)
  _01110: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _0111: a point with color blue at (3,2)
diff: 
delta: (1,2)=1  (1,4)=1  (7,2)=2 
! 18 wrong pixels (generated / expected)

TRAIN 82819916.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _01110: a rectangle with size (1,1) and color green and mask Full at (4,1)
  _0111: a point with color cyan at (6,0)
diff: 
delta: (1,1)=4  (1,6)=4  (6,1)=2  (8,0)=6  (8,1)=5#
   (283.9 bits)
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _010: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,6) and color green and mask Full at (4,1)
  _0110: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _011: a rectangle with size (1,6) and color red and mask Full at (6,1)
  _0111: a rectangle with size (1,6) and color grey and mask Full at (8,1)
diff: 
delta: (1,1)=4  (1,6)=4  (4,2)=2  (4,5)=2  (4,7)=2  (6,0)=8  (6,2)=8  (6,5)=8  (6,7)=8  (8,0)=6  (8,2)=6  (8,5)=6  (8,7)=6 
   (429.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,8) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
  _01110: a rectangle with size (1,1) and color green and mask Full at (4,1)
  _0111: a point with color cyan at (6,0)
diff: 
delta: (1,1)=4  (1,6)=4  (6,1)=2  (8,0)=6  (8,1)=5#
! 27 wrong pixels (generated / expected)

TRAIN 82819916.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,6)
  _011: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01110: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a point with color red at (4,2)
diff: 
delta:
   (150.7 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (1,6)
  _01: a rectangle with size (1,3) and color red and mask Full at (4,2)
  _0110: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,6)
  _0111: a rectangle with size (1,8) and color cyan and mask Full at (4,0)
diff: 
delta:
   (89.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (1,6)
  _011: a rectangle with size (1,8) and color green and mask Full at (1,0)
  _01110: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _0111: a point with color red at (4,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (1,5) and color yellow and mask Full at (1,2)
  _01: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _01110: a rectangle with size (1,1) and color green and mask Full at (1,7)
  _0111: a point with color red at (4,2)
diff: 
delta: (1,5)=3 
! 10 wrong pixels (generated / expected)

TRAIN 82819916.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (1,2)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (3,0)
  _01110: a rectangle with size (1,2) and color blue and mask Full at (6,0)
  _0111: a point with color green at (3,2)
diff: 
delta: (1,3)=2  (1,5)=2  (1,8)=2  (6,2)=4  (9,0)=6  (9,1)=6  (9,2)=8  (11,0)=1  (11,1)=1  (11,2)=6 
! 43 wrong pixels (generated / expected)

TEST 82819916.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 9615.1 bits (9615.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-203] Checking task 83302e8f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 128959.7 = 128975.3
DL output with Mo: L = 15.6 + 264521.9 = 264537.5
DL input+output M: L = 31.2 + 393481.6 = 393512.8

# learning a model for train pairs
2.000	
1.255	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.834	OUT OBJECT at ^.layer_0: ^.layer_0
0.540	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.408	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.356	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.310	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.281	OUT OBJECT at ^.layer_010: ^.layer_01
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 26133.5 = 26214.7
DL output with Mo: L = 123.6 + 20473.5 = 20597.1
DL input+output M: L = 204.8 + 46607.0 = 46811.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (8,6) and color cyan and mask .x....|.x....|.x....|.x....|xxxxxx|.x....|.x....|.x.... at (0,18)
diff: 
delta: (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
   (989.1 bits)
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _010: a rectangle with size (8,6) and color cyan and mask .x....|.x....|.x....|.x....|xxxxxx|.x....|.x....|.x.... at (0,18)
  _01: a rectangle with size (4,24) and color green and mask Full at (20,0)
  _011: a rectangle with size (4,24) and color green and mask Full at (0,0)
  _0111: a rectangle with size (4,4) and color green and mask Full at (15,0)
diff: 
delta: (0,15)=4  (0,16)=4  (0,17)=4  (0,18)=4  (1,15)=4  (1,16)=4  (1,17)=4  (1,18)=4  (2,15)=4  (2,16)=4  (2,17)=4  (2,18)=4  (3,15)=4  (3,16)=4  (3,17)=4  (3,18)=4  (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8  (15,15)=3  (15,16)=3  (15,17)=3  (15,18)=3  (16,15)=3  (16,16)=3  (16,17)=3  (16,18)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3 
   (1401.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (8,6) and color cyan and mask .x....|.x....|.x....|.x....|xxxxxx|.x....|.x....|.x.... at (0,18)
diff: 
delta: (8,4)=8  (9,0)=8  (9,1)=8  (9,2)=8  (9,3)=8  (9,4)=8  (9,5)=8  (9,6)=8  (9,7)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (4,8) and color cyan and mask ....x...|xxxxxxxx|....x...|....x... at (8,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24
>> Trial 3
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color cyan and mask ....x....x....x.........|....x....x....x.........|....x....x....x.........|....x....x....x.........|xxxxxxxxxxxxxxxxx.......|....x....x....x.........|....x....x....x.........|.........x....x.........|.........x....x.........|.........xxxx.xxxxxxxxxx|.........x.........x....|.........x....x....x....|.........x....x....x....|....x.........x....x....|xxxxxxxxxxxxxxxxxxxx....|....x....x....x....x....|....x....x....x....x....|....x.........x....x....|....x....x....x....x....|xxxxxxxxxxxxxxxxxxxxxxxx|....x....x....x....x....|....x....x....x....x....|....x....x....x....x....|....x....x....x....x.... at (0,0)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (9,0)
diff: 
delta: (0,19)=8  (1,19)=8  (2,19)=8  (3,19)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,21)=8  (4,22)=8  (4,23)=8  (5,19)=8  (6,19)=8  (7,19)=8  (8,4)=8  (10,4)=8  (11,4)=8  (14,21)=8  (14,22)=8 
! size mismatch, 10x10 instead of 24x24

TRAIN 83302e8f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (4,8) and color blue and mask .....x..|.....x..|xxxxxxxx|.....x.. at (9,0)
diff: 
delta: (11,25)=1  (11,26)=1  (11,27)=1  (11,28)=1  (17,26)=1  (17,27)=1  (17,28)=1 
   (998.2 bits)
data: a background with size (29,29) and color yellow and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _010: a rectangle with size (4,8) and color blue and mask .....x..|.....x..|xxxxxxxx|.....x.. at (9,0)
  _01: a rectangle with size (5,29) and color green and mask Full at (0,0)
  _011: a rectangle with size (5,23) and color green and mask Full at (24,6)
  _0111: a rectangle with size (5,5) and color green and mask Full at (18,6)
diff: 
delta: (11,25)=1  (11,26)=1  (11,27)=1  (11,28)=1  (17,26)=1  (17,27)=1  (17,28)=1 
   (364.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (1,29) and color blue and mask Full at (11,0)
diff: 
delta: (9,5)=1  (10,5)=1  (11,8)=0  (11,24)=0  (12,5)=1  (17,26)=1  (17,27)=1  (17,28)=1 
! size mismatch, 10x10 instead of 29x29
>> Trial 2
data: a background with size (29,29) and color black and layers
  _0: a rectangle with size (29,29) and color blue and mask .....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x...........x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x.....x.....x.....|...........x...........x.....|.........xxxxxxxxxxxxxxx.....|...........x.....x.....x.....|.................x.....x.....|.....x.....x...........x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|xxxxxxxxxxxxxx.xxxxx.xxxx....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x.....|.....x.....x.....x.....x..... at (0,0)
  _01: a rectangle with size (4,8) and color blue and mask .....x..|.....x..|xxxxxxxx|.....x.. at (9,0)
diff: 
delta: (11,25)=1  (11,26)=1  (11,27)=1  (11,28)=1  (17,26)=1  (17,27)=1  (17,28)=1 
! size mismatch, 10x10 instead of 29x29

TRAIN 83302e8f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
   (626.1 bits)
data: a background with size (19,19) and color yellow and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _010: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
  _01: a rectangle with size (4,9) and color green and mask Full at (10,0)
  _011: a rectangle with size (9,4) and color green and mask Full at (0,15)
  _0111: a rectangle with size (3,1) and color brown and mask Full at (16,14)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (18,4)=9#
   (281.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (2,7) and color brown and mask xxxxxxx|....x.. at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
  _01: a rectangle with size (1,7) and color brown and mask Full at (4,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (5,4)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19
>> Trial 3
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (1,19) and color brown and mask Full at (4,0)
  _01: a rectangle with size (19,19) and color brown and mask ..............x....|..............x....|..............x....|.........x....x....|........xxxxxxxxxxx|.........x....x....|.........x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxx.xxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxx.|....x....x.........|....x....x.........|.........x.........|.........x......... at (0,0)
diff: 
delta: (0,4)=9# (0,9)=9# (1,4)=9# (1,9)=9# (4,7)=0  (5,4)=9# (16,14)=9# (17,14)=9# (18,4)=9# (18,14)=9#
! size mismatch, 10x10 instead of 19x19

TRAIN 83302e8f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (26,27) and color grey and mask ...........x...x...x...x...|...........x...x...x...x...|...........x...x...x...x...|........xxxxxxxxxxxxxxxxxx.|.......x...x...x...x...x...|...x...x...........x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxx.xxxxxxxxxxxxx|...x...x...x...x...x...x...|...x.......x...x...x...x...|...x...x...x...x...x...x...|xxxxx..xxx.x.xxxxxxxxxxxxxx|.......x.......x.......x...|.......x...x...x...x...x...|...x...x...x...x...x...x...|...xxxxxxxxxxxxxxxxxx.xxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x.......x...x...x...|xxxxxxxxxxxxxxxxxxxxxx.xxxx|...x...x...x...........x...|...x...x...x...............|...x...x.......x...........|xxxxx.xxxxxxxxxxxx.........|...x...x.......x...........|.......x.......x........... at (0,0)
  _01: a rectangle with size (6,8) and color grey and mask x.......|x.......|xxxxxxxx|x...x...|x...x...|x...x... at (21,19)
diff: 
delta: (0,3)=5# (0,7)=5# (1,3)=5# (1,7)=5# (2,3)=5# (3,0)=5# (3,1)=5# (3,2)=5# (3,3)=5# (3,4)=5# (3,5)=5# (15,0)=5# (15,1)=5# (25,11)=5# (26,3)=5# (26,11)=5#
! size mismatch, 10x10 instead of 27x27
>> Trial 2
data: a background with size (27,27) and color black and layers
  _0: a rectangle with size (26,27) and color grey and mask ...........x...x...x...x...|...........x...x...x...x...|...........x...x...x...x...|........xxxxxxxxxxxxxxxxxx.|.......x...x...x...x...x...|...x...x...........x...x...|...x...x...x...x...x...x...|xxxxxxxxxxxxx.xxxxxxxxxxxxx|...x...x...x...x...x...x...|...x.......x...x...x...x...|...x...x...x...x...x...x...|xxxxx..xxx.x.xxxxxxxxxxxxxx|.......x.......x.......x...|.......x...x...x...x...x...|...x...x...x...x...x...x...|...xxxxxxxxxxxxxxxxxx.xxxxx|...x...x...x...x...x...x...|...x...x...x...x...x...x...|...x...x.......x...x...x...|xxxxxxxxxxxxxxxxxxxxxx.xxxx|...x...x...x...........x...|...x...x...x...............|...x...x.......x...........|xxxxx.xxxxxxxxxxxx.........|...x...x.......x...........|.......x.......x........... at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask ...x..|...x..|...x..|xxxxxx at (0,0)
diff: 
delta: (0,7)=5# (1,7)=5# (15,0)=5# (15,1)=5# (21,19)=5# (22,19)=5# (23,19)=5# (23,20)=5# (23,21)=5# (23,22)=5# (23,23)=5# (23,24)=5# (23,25)=5# (23,26)=5# (24,19)=5# (24,23)=5# (25,11)=5# (25,19)=5# (25,23)=5# (26,3)=5# (26,11)=5# (26,19)=5# (26,23)=5#
! size mismatch, 10x10 instead of 27x27

TEST 83302e8f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.9 sec (27.9 sec/task)
bits-train-error = 20473.5 bits (20473.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-202] Checking task 834ec97d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1305.3 = 1320.9
DL output with Mo: L = 15.6 + 9864.6 = 9880.2
DL input+output M: L = 31.2 + 11169.9 = 11201.1

# learning a model for train pairs
2.000	
1.790	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.658	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.525	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.469	IN  DEF: ^.color=black
1.420	OUT DEF: ^.size=^.size
1.403	OUT DEF: ^.layer_0.shape.color=yellow
1.386	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.pos.i + 1
1.370	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.pos.i + 1
1.356	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
1.342	OUT DEF: ^.layer_0.pos.i='0
1.332	OUT DEF: ^.layer_0.shape.size.j=1
1.322	OUT DEF: ^.layer_0.shape.mask=Full
1.312	OUT DEF: ^.layer_01.shape.size.j=1
1.302	OUT DEF: ^.layer_01.shape.mask=Full
1.294	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.pos.i + 1,1) and color yellow and mask Full at ('0,^.layer_0.pos.j)
  _01: a rectangle with size (^.layer_0.pos.i + 1,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 932.6 = 968.2
DL output with Mo: L = 116.9 + 5429.2 = 5546.1
DL input+output M: L = 152.6 + 6361.7 = 6514.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta:
   (26.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (13.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 834ec97d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (2,2)
diff: 
delta:
   (30.9 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,4)=4  (1,4)=4  (2,4)=4  (3,2)=6 
   (111.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (2,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 834ec97d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color brown at (4,2)
diff: 
delta:
   (36.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,1) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,4)=4  (0,6)=4  (0,8)=4  (1,4)=4  (1,6)=4  (1,8)=4  (2,4)=4  (2,6)=4  (2,8)=4  (3,4)=4  (3,6)=4  (3,8)=4  (4,4)=4  (4,6)=4  (4,8)=4  (5,2)=9#
   (418.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color brown at (4,2)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN 834ec97d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (3,5)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TEST 834ec97d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 5429.2 bits (5429.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-201] Checking task 8403a5d5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1478.6 = 1494.2
DL output with Mo: L = 15.6 + 29684.8 = 29700.4
DL input+output M: L = 31.2 + 31163.4 = 31194.6

# learning a model for train pairs
2.000	
1.752	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.558	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.362	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.176	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.113	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.049	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.999	IN  DEF: ^.color=black
0.979	OUT DEF: ^.size=^.size
0.969	OUT DEF: ^.layer_0.shape.size.i=^.size.i
0.963	OUT DEF: ^.layer_0.pos.i='0
0.958	OUT DEF: ^.layer_01.pos.i='0
0.952	OUT DEF: ^.layer_011.pos.i='0
0.947	OUT DEF: ^.layer_0111.pos.j=^.layer_0.pos.j + 1
0.944	OUT DEF: ^.layer_0.shape.size.j=1
0.940	OUT DEF: ^.layer_0.shape.mask=Full
0.937	OUT DEF: ^.layer_01.shape.size.j=1
0.933	OUT DEF: ^.layer_01.shape.mask=Full
0.930	OUT DEF: ^.layer_011.shape.size.j=1
0.927	OUT DEF: ^.layer_011.shape.mask=Full
0.923	OUT DEF: ^.layer_0111.shape.size.j=1
0.920	OUT DEF: ^.layer_0111.shape.mask=Full
0.917	OUT DEF: ^.layer_01111.shape.size.j=1
0.913	OUT DEF: ^.layer_01111.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (^.size.i,1) and color ? and mask Full at ('0,?)
  _01: a rectangle with size (?,1) and color ? and mask Full at ('0,?)
  _011: a rectangle with size (?,1) and color ? and mask Full at ('0,?)
  _0111: a rectangle with size (?,1) and color ? and mask Full at (?,^.layer_0.pos.j + 1)
  _01111: a rectangle with size (?,1) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 1105.9 = 1141.6
DL output with Mo: L = 205.0 + 4230.6 = 4435.6
DL input+output M: L = 240.7 + 5336.5 = 5577.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (9,1)
diff: 
delta:
   (36.9 bits)
data: a background with size (10,10) and color red and layers
  _0: a rectangle with size (10,1) and color black and mask Full at (0,0)
  _01: a rectangle with size (9,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (9,1) and color black and mask Full at (0,8)
  _0111: a rectangle with size (9,1) and color black and mask Full at (1,2)
  _01111: a rectangle with size (9,1) and color black and mask Full at (1,6)
diff: 
delta: (0,2)=5# (0,6)=5# (9,4)=5# (9,8)=5#
   (213.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (9,1)
diff: 
delta:
! 65 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (9,5)
diff: 
delta:
   (36.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color green and mask Full at (0,5)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,7)
  _011: a rectangle with size (10,1) and color green and mask Full at (0,9)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,6)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (9,8)
diff: 
delta:
   (91.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (9,5)
diff: 
delta:
! 43 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (9,4)
diff: 
delta:
   (36.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,1) and color yellow and mask Full at (0,4)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,6)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,5)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta: (9,7)=5#
   (118.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (9,4)
diff: 
delta:
! 44 wrong pixels (generated / expected)

TRAIN 8403a5d5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (9,2)
diff: 
delta:
! 55 wrong pixels (generated / expected)

TEST 8403a5d5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.1 sec (14.1 sec/task)
bits-train-error = 4230.6 bits (4230.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-200] Checking task 846bdb03.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 24146.6 = 24162.2
DL output with Mo: L = 15.6 + 22160.6 = 22176.2
DL input+output M: L = 31.2 + 46307.1 = 46338.3

# learning a model for train pairs
2.000	
1.652	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.381	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.178	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.851	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.819	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.751	OUT OBJECT at ^.layer_011: ^.layer_0111.shape at (?,?)
0.679	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_0111.shape at (?,?)
  _0111: ^.layer_0111.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 10406.3 = 10583.1
DL output with Mo: L = 123.3 + 5220.9 = 5344.2
DL input+output M: L = 300.1 + 15627.2 = 15927.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
  _01111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
diff: 
delta: (7,12)=4  (12,12)=4 
   (269.8 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxx.|x.x.|x.xx|x..x at (1,0)
  _01: a rectangle with size (4,4) and color blue and mask x..x|xxxx|x..x|...x at (1,4)
  _011: a rectangle with size (6,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (0,7)
diff: 
delta:
   (145.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
diff: 
delta: (7,12)=4  (12,12)=4 
! size mismatch, 10x10 instead of 6x8
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|..x at (3,2)
  _01: a rectangle with size (3,3) and color blue and mask x..|xxx|x.. at (3,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,5)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (7,5)
  _01111: a rectangle with size (4,1) and color blue and mask Full at (8,12)
diff: 
delta: (7,12)=4  (12,12)=4 
! size mismatch, 10x10 instead of 6x8

TRAIN 846bdb03.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
  _01111: a rectangle with size (5,1) and color green and mask Full at (7,8)
diff: 
delta: (6,8)=4  (12,8)=4 
   (275.1 bits)
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask xx.x|xxxx|xx.x|xxxx|xx.x at (1,0)
  _01: a rectangle with size (5,4) and color green and mask .x.x|xxxx|.x.x|xx.x|...x at (1,4)
  _011: a rectangle with size (7,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (7,1) and color yellow and mask Full at (0,7)
diff: 
delta:
   (149.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (5,1) and color green and mask Full at (7,8)
  _01111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
diff: 
delta: (6,8)=4  (12,8)=4 
! size mismatch, 10x10 instead of 7x8
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (5,3) and color cyan and mask x.x|xxx|x.x|xxx|x.x at (1,7)
  _01: a rectangle with size (4,3) and color green and mask .x.|xxx|.x.|.xx at (1,4)
  _011: a rectangle with size (5,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (7,1) and color yellow and mask Full at (6,1)
  _01111: a rectangle with size (5,1) and color green and mask Full at (7,8)
diff: 
delta: (6,8)=4  (12,8)=4 
! size mismatch, 10x10 instead of 7x8

TRAIN 846bdb03.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
diff: 
delta: (1,7)=4  (4,7)=4 
   (243.5 bits)
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask x.x|xxx at (1,0)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (1,3)
  _011: a rectangle with size (4,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (4,1) and color yellow and mask Full at (0,5)
diff: 
delta:
   (109.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
  _01111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
diff: 
delta: (1,7)=4  (4,7)=4 
! size mismatch, 10x10 instead of 4x6
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|.x at (9,3)
  _01: a rectangle with size (2,2) and color red and mask x.|xx at (9,5)
  _011: a rectangle with size (2,1) and color red and mask Full at (2,2)
  _0111: a rectangle with size (4,1) and color yellow and mask Full at (1,2)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (2,7)
diff: 
delta: (1,7)=4  (4,7)=4 
! size mismatch, 10x10 instead of 4x6

TRAIN 846bdb03.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
  _01111: a rectangle with size (3,1) and color green and mask Full at (2,10)
diff: 
delta: (1,10)=4  (5,10)=4 
   (252.3 bits)
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask xxx|xxx|x.x at (1,0)
  _01: a rectangle with size (3,3) and color green and mask .xx|xxx|.xx at (1,3)
  _011: a rectangle with size (5,1) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (5,1) and color yellow and mask Full at (0,5)
diff: 
delta:
   (117.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (3,1) and color green and mask Full at (2,10)
  _01111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
diff: 
delta: (1,10)=4  (5,10)=4 
! size mismatch, 10x10 instead of 5x6
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask xx|xx|.x at (9,5)
  _01: a rectangle with size (3,2) and color green and mask .x|xx|.x at (9,7)
  _011: a rectangle with size (3,1) and color orange and mask Full at (2,5)
  _0111: a rectangle with size (5,1) and color yellow and mask Full at (1,5)
  _01111: a rectangle with size (3,1) and color green and mask Full at (2,10)
diff: 
delta: (1,10)=4  (5,10)=4 
! size mismatch, 10x10 instead of 5x6

TRAIN 846bdb03.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask x.x|xxx|x..|x.. at (9,1)
  _01: a rectangle with size (4,3) and color red and mask x..|xxx|.x.|.xx at (9,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (2,1)
  _0111: a rectangle with size (4,1) and color cyan and mask Full at (2,8)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (1,1)
diff: 
delta: (1,8)=4  (6,8)=4 
! size mismatch, 10x10 instead of 6x8
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask x.x|xxx|x..|x.. at (9,1)
  _01: a rectangle with size (4,3) and color red and mask x..|xxx|.x.|.xx at (9,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (2,1)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (1,1)
  _01111: a rectangle with size (4,1) and color cyan and mask Full at (2,8)
diff: 
delta: (1,8)=4  (6,8)=4 
! size mismatch, 10x10 instead of 6x8

TEST 846bdb03.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 5220.9 bits (5220.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-199] Checking task 855e0971.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 125281.5 = 125297.1
DL output with Mo: L = 15.6 + 133892.9 = 133908.5
DL input+output M: L = 31.2 + 259174.3 = 259205.6

# learning a model for train pairs
2.000	
1.338	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.748	OUT OBJECT at ^.layer_0: ^.layer_0
0.469	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.199	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.164	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.157	OUT DEF: ^.size=^.size
0.155	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
0.152	OUT DEF: ^.color=^.color
0.149	OUT DEF: ^.layer_00.shape.size.j=average(^.layer_0.pos.j, ^.layer_01.pos.j) + ^.layer_01.shape.size.j
0.148	IN  DEF: ^.layer_00.shape.color=black
0.146	OUT DEF: ^.layer_01.shape.size.i=min(^.layer_0.pos.i, ^.layer_00.pos.i) + min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.144	OUT DEF: ^.layer_01.pos.j=max(^.layer_0.pos.i, ^.layer_01.pos.i) / 2
0.143	IN  DEF: ^.layer_0.shape.mask=Full
0.142	IN  DEF: ^.layer_01.shape.mask=Full
0.141	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.140	OUT DEF: ^.layer_00.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: a rectangle with size (?,average(^.layer_0.pos.j, ^.layer_01.pos.j) + ^.layer_01.shape.size.j) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (min(^.layer_0.pos.i, ^.layer_00.pos.i) + min(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color ? and mask ^.layer_01.shape.mask at (?,max(^.layer_0.pos.i, ^.layer_01.pos.i) / 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color black at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 103.3 + 6478.0 = 6581.3
DL output with Mo: L = 255.8 + 11499.8 = 11755.6
DL input+output M: L = 359.1 + 17977.8 = 18336.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,19) and color yellow and layers
  _00: a point with color black at (5,4)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (3,13)=0  (12,9)=0 
   (175.0 bits)
data: a background with size (15,19) and color yellow and layers
  _00: a rectangle with size (2,19) and color grey and mask Full at (0,0)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (7,1) and color black and mask Full at (2,4)
diff: 
delta: (2,13)=0  (3,13)=0  (4,13)=0  (5,13)=0  (6,13)=0  (7,13)=0  (8,13)=0  (9,9)=0  (10,9)=0  (11,9)=0  (12,9)=0  (13,9)=0  (14,9)=0 
   (389.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color yellow and layers
  _00: a point with color black at (3,13)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (5,4)=0  (12,9)=0 
! 61 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,19) and color yellow and layers
  _00: a point with color black at (5,4)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (3,13)=0  (12,9)=0 
! 63 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,19) and color yellow and layers
  _00: a point with color black at (12,9)
  _0: a rectangle with size (6,19) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (2,19) and color grey and mask Full at (0,0)
diff: 
delta: (3,13)=0  (5,4)=0 
! 65 wrong pixels (generated / expected)

TRAIN 855e0971.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (3,2)
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color black and mask Full at (11,8)
diff: 
delta:
   (103.9 bits)
data: a background with size (14,13) and color blue and layers
  _00: a rectangle with size (1,5) and color black and mask Full at (3,0)
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,8) and color black and mask Full at (11,5)
diff: 
delta:
   (42.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (3,2)
  _0: a rectangle with size (14,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color black and mask Full at (11,8)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (3,2)
  _0: a rectangle with size (1,1) and color black and mask Full at (11,8)
  _01: a rectangle with size (14,5) and color red and mask Full at (0,0)
diff: 
delta:
! 89 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (14,13) and color blue and layers
  _00: a point with color black at (11,8)
  _0: a rectangle with size (1,1) and color black and mask Full at (3,2)
  _01: a rectangle with size (14,5) and color red and mask Full at (0,0)
diff: 
delta:
! 79 wrong pixels (generated / expected)

TRAIN 855e0971.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,15) and color red and layers
  _00: a point with color black at (2,3)
  _0: a rectangle with size (3,15) and color green and mask Full at (10,0)
  _01: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
diff: 
delta: (3,11)=0  (7,5)=0  (11,7)=0 
   (197.2 bits)
data: a background with size (13,15) and color red and layers
  _00: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
  _0: a rectangle with size (3,15) and color green and mask Full at (10,0)
  _01: a rectangle with size (5,1) and color black and mask Full at (5,5)
diff: 
delta: (0,3)=0  (0,11)=0  (1,3)=0  (1,11)=0  (2,3)=0  (2,11)=0  (3,3)=0  (3,11)=0  (4,3)=0  (4,11)=0  (10,7)=0  (11,7)=0  (12,7)=0 
   (384.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color red and layers
  _00: a point with color black at (2,3)
  _0: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,15) and color green and mask Full at (10,0)
diff: 
delta: (3,11)=0  (7,5)=0  (11,7)=0 
! 86 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color red and layers
  _00: a point with color black at (2,3)
  _0: a rectangle with size (3,15) and color green and mask Full at (10,0)
  _01: a rectangle with size (5,15) and color cyan and mask Full at (0,0)
diff: 
delta: (3,11)=0  (7,5)=0  (11,7)=0 
! 83 wrong pixels (generated / expected)

TRAIN 855e0971.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,15) and color yellow and layers
  _00: a point with color black at (2,12)
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (6,6)=0  (12,10)=0 
   (171.7 bits)
data: a background with size (14,15) and color yellow and layers
  _00: a rectangle with size (1,6) and color black and mask Full at (2,9)
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (6,4)=0  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (12,9)=0  (12,10)=0  (12,11)=0  (12,12)=0  (12,13)=0  (12,14)=0 
   (333.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color yellow and layers
  _00: a point with color black at (2,12)
  _0: a rectangle with size (14,5) and color grey and mask Full at (0,4)
  _01: a rectangle with size (14,4) and color red and mask Full at (0,0)
diff: 
delta: (6,6)=0  (12,10)=0 
! 77 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,15) and color yellow and layers
  _00: a point with color black at (2,12)
  _0: a rectangle with size (14,4) and color red and mask Full at (0,0)
  _01: a rectangle with size (14,5) and color grey and mask Full at (0,4)
diff: 
delta: (6,6)=0  (12,10)=0 
! 90 wrong pixels (generated / expected)

TRAIN 855e0971.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color yellow and layers
  _00: a point with color black at (0,4)
  _0: a rectangle with size (4,15) and color blue and mask Full at (4,0)
  _01: a rectangle with size (4,15) and color red and mask Full at (13,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=0  (2,13)=8  (2,14)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (6,6)=0  (10,10)=0  (15,1)=0 
! 129 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,15) and color yellow and layers
  _00: a point with color black at (0,4)
  _0: a rectangle with size (4,15) and color red and mask Full at (13,0)
  _01: a rectangle with size (4,15) and color blue and mask Full at (4,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,2)=8  (0,3)=8  (0,5)=8  (0,6)=8  (0,7)=8  (0,8)=8  (0,9)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,14)=8  (1,0)=8  (1,1)=8  (1,2)=8  (1,3)=8  (1,4)=8  (1,5)=8  (1,6)=8  (1,7)=8  (1,8)=8  (1,9)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=8  (1,14)=8  (2,0)=8  (2,1)=8  (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (2,8)=8  (2,9)=8  (2,10)=8  (2,11)=8  (2,12)=0  (2,13)=8  (2,14)=8  (3,0)=8  (3,1)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (3,9)=8  (3,10)=8  (3,11)=8  (3,12)=8  (3,13)=8  (3,14)=8  (6,6)=0  (10,10)=0  (15,1)=0 
! 129 wrong pixels (generated / expected)

TEST 855e0971.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.5 sec (9.5 sec/task)
bits-train-error = 11499.8 bits (11499.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-198] Checking task 85c4e7cd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 55400.3 = 55416.0
DL output with Mo: L = 15.6 + 55400.3 = 55416.0
DL input+output M: L = 31.2 + 110800.7 = 110831.9

# learning a model for train pairs
2.000	
1.598	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.195	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.931	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.666	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.526	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.385	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 10562.1 = 10675.4
DL output with Mo: L = 113.3 + 10562.1 = 10675.4
DL input+output M: L = 226.5 + 21124.2 = 21350.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color yellow and layers
  _0: a rectangle with size (6,6) and color green and mask Full at (3,3)
  _01: a rectangle with size (8,8) and color blue and mask Full at (2,2)
  _011: a rectangle with size (10,10) and color red and mask Full at (1,1)
diff: 
delta: (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5#
   (562.8 bits)
data: a background with size (12,12) and color cyan and layers
  _0: a rectangle with size (6,6) and color blue and mask Full at (3,3)
  _01: a rectangle with size (8,8) and color green and mask Full at (2,2)
  _011: a rectangle with size (10,10) and color grey and mask Full at (1,1)
diff: 
delta: (4,4)=2  (4,5)=2  (4,6)=2  (4,7)=2  (5,4)=2  (5,5)=4  (5,6)=4  (5,7)=2  (6,4)=2  (6,5)=4  (6,6)=4  (6,7)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2 
   (562.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color yellow and layers
  _0: a rectangle with size (6,6) and color green and mask Full at (3,3)
  _01: a rectangle with size (8,8) and color blue and mask Full at (2,2)
  _011: a rectangle with size (10,10) and color red and mask Full at (1,1)
diff: 
delta: (4,4)=5# (4,5)=5# (4,6)=5# (4,7)=5# (5,4)=5# (5,5)=8  (5,6)=8  (5,7)=5# (6,4)=5# (6,5)=8  (6,6)=8  (6,7)=5# (7,4)=5# (7,5)=5# (7,6)=5# (7,7)=5#
! size mismatch, 10x10 instead of 12x12

TRAIN 85c4e7cd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,2)
  _011: a rectangle with size (4,4) and color blue and mask Full at (1,1)
diff: 
delta:
   (118.2 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,2)
  _011: a rectangle with size (4,4) and color blue and mask Full at (1,1)
diff: 
delta:
   (118.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color red and layers
  _0: a rectangle with size (1,4) and color blue and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Full (and Border) at (2,2)
  _011: a rectangle with size (4,4) and color blue and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 85c4e7cd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (3,3)
  _011: a rectangle with size (4,4) and color red and mask Full at (2,2)
diff: 
delta:
   (131.0 bits)
data: a background with size (8,8) and color yellow and layers
  _0: a rectangle with size (6,6) and color red and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (3,3)
  _011: a rectangle with size (4,4) and color blue and mask Full at (2,2)
diff: 
delta:
   (131.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (3,3)
  _011: a rectangle with size (4,4) and color red and mask Full at (2,2)
diff: 
delta:
! size mismatch, 10x10 instead of 8x8

TRAIN 85c4e7cd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color orange and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (3,3)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (2,2)
  _011: a rectangle with size (8,8) and color red and mask Full at (1,1)
diff: 
delta: (4,4)=3  (4,5)=3  (5,4)=3  (5,5)=3 
   (244.2 bits)
data: a background with size (10,10) and color green and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (3,3)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (2,2)
  _011: a rectangle with size (8,8) and color blue and mask Full at (1,1)
diff: 
delta: (4,4)=7# (4,5)=7# (5,4)=7# (5,5)=7#
   (244.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color orange and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (3,3)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (2,2)
  _011: a rectangle with size (8,8) and color red and mask Full at (1,1)
diff: 
delta: (4,4)=3  (4,5)=3  (5,4)=3  (5,5)=3 
! 100 wrong pixels (generated / expected)

TRAIN 85c4e7cd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color cyan and layers
  _0: a rectangle with size (8,8) and color green and mask Border at (3,3)
  _01: a rectangle with size (10,10) and color yellow and mask Full at (2,2)
  _011: a rectangle with size (12,12) and color red and mask Full at (1,1)
diff: 
delta: (4,4)=7# (4,5)=7# (4,6)=7# (4,7)=7# (4,8)=7# (4,9)=7# (5,4)=7# (5,5)=6  (5,6)=6  (5,7)=6  (5,8)=6  (5,9)=7# (6,4)=7# (6,5)=6  (6,6)=5# (6,7)=5# (6,8)=6  (6,9)=7# (7,4)=7# (7,5)=6  (7,6)=5# (7,7)=5# (7,8)=6  (7,9)=7# (8,4)=7# (8,5)=6  (8,6)=6  (8,7)=6  (8,8)=6  (8,9)=7# (9,4)=7# (9,5)=7# (9,6)=7# (9,7)=7# (9,8)=7# (9,9)=7#
! size mismatch, 10x10 instead of 14x14

TEST 85c4e7cd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.2 sec (27.2 sec/task)
bits-train-error = 10562.1 bits (10562.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-197] Checking task 868de0fa.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 65100.2 = 65115.8
DL output with Mo: L = 15.6 + 111306.6 = 111322.3
DL input+output M: L = 31.2 + 176406.9 = 176438.1

# learning a model for train pairs
2.000	
1.579	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.266	OUT OBJECT at ^.layer_0: ^.layer_0
1.056	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.681	OUT OBJECT at ^.layer_011: ^.layer_01
0.568	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.480	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.422	OUT OBJECT at ^.layer_010: ^.layer_010
0.391	IN  OBJECT at ^.layer_0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.343	OUT OBJECT at ^.layer_0101: ^.layer_0101
0.313	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.290	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _0101: ^.layer_0101
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0101: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 10724.1 = 10901.0
DL output with Mo: L = 130.4 + 13568.1 = 13698.6
DL input+output M: L = 307.3 + 24292.2 = 24599.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,6)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,6)
diff: 
delta:
   (193.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _01: a rectangle with size (3,3) and color orange and mask Full at (6,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (4,6)
  _0111: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (2,6)
diff: 
delta: (3,7)=7#
   (146.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,6)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,6)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask Border at (5,0)
  _010: a rectangle with size (4,4) and color blue and mask Border at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,6)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,6)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN 868de0fa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (182.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,5)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,1)
  _01111: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (114.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0101: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask Border at (0,4)
  _010: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (2,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (0,2)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 868de0fa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _010: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _0101: a rectangle with size (6,6) and color blue and mask Border at (3,12)
  _01: a rectangle with size (5,5) and color blue and mask Border at (0,0)
  _011: a rectangle with size (4,4) and color blue and mask Border at (1,6)
diff: 
delta:
   (233.3 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _010: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _0101: a rectangle with size (6,6) and color blue and mask Border at (3,12)
  _01: a rectangle with size (6,6) and color red and mask Full at (13,13)
  _011: a rectangle with size (5,5) and color blue and mask Border at (0,0)
  _0111: a rectangle with size (5,5) and color orange and mask Full at (10,3)
  _01111: a rectangle with size (4,4) and color red and mask Full at (4,13)
diff: 
delta: (1,1)=7# (1,2)=7# (1,3)=7# (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,1)=7# (2,2)=7# (2,3)=7# (2,6)=1  (2,7)=2  (2,8)=2  (2,9)=1  (3,1)=7# (3,2)=7# (3,3)=7# (3,6)=1  (3,7)=2  (3,8)=2  (3,9)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1 
   (822.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (12,12)
  _010: a rectangle with size (7,7) and color blue and mask Border at (9,2)
  _0101: a rectangle with size (6,6) and color blue and mask Border at (3,12)
  _01: a rectangle with size (5,5) and color blue and mask Border at (0,0)
  _011: a rectangle with size (4,4) and color blue and mask Border at (1,6)
diff: 
delta:
! size mismatch, 10x10 instead of 20x20

TRAIN 868de0fa.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _010: a rectangle with size (1,3) and color blue and mask Full at (1,1)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (3,1)
  _01: a rectangle with size (3,1) and color blue and mask Full at (1,1)
  _011: a rectangle with size (3,1) and color blue and mask Full at (1,3)
diff: 
delta:
   (263.7 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _010: a rectangle with size (1,3) and color blue and mask Full at (1,1)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (3,1)
  _01: a rectangle with size (3,3) and color orange and mask Full at (7,1)
  _011: a rectangle with size (3,1) and color blue and mask Full at (1,1)
  _0111: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,6)
  _01111: a rectangle with size (1,1) and color orange and mask Full at (2,2)
diff: 
delta: (2,3)=1 
   (142.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask .....xxxx|.....x..x|.....x..x|.....xxxx|xxxxx....|x...x....|x...x....|x...x....|xxxxx.... at (2,0)
  _010: a rectangle with size (1,3) and color blue and mask Full at (1,1)
  _0101: a rectangle with size (1,3) and color blue and mask Full at (3,1)
  _01: a rectangle with size (3,1) and color blue and mask Full at (1,1)
  _011: a rectangle with size (3,1) and color blue and mask Full at (1,3)
diff: 
delta:
! size mismatch, 10x10 instead of 11x11

TRAIN 868de0fa.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _010: a rectangle with size (1,6) and color blue and mask Full at (9,6)
  _0101: a rectangle with size (1,6) and color blue and mask Full at (14,6)
  _01: a rectangle with size (6,1) and color blue and mask Full at (9,6)
  _011: a rectangle with size (6,1) and color blue and mask Full at (9,11)
diff: 
delta:
   (199.3 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _010: a rectangle with size (1,6) and color blue and mask Full at (9,6)
  _0101: a rectangle with size (1,6) and color blue and mask Full at (14,6)
  _01: a rectangle with size (5,5) and color orange and mask Full at (2,2)
  _011: a rectangle with size (6,1) and color blue and mask Full at (9,6)
  _0111: a rectangle with size (4,4) and color red and mask Full at (10,7)
  _01111: a rectangle with size (6,1) and color blue and mask Full at (9,11)
diff: 
delta:
   (131.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (7,7) and color blue and mask Border at (1,1)
  _010: a rectangle with size (1,6) and color blue and mask Full at (9,6)
  _0101: a rectangle with size (1,6) and color blue and mask Full at (14,6)
  _01: a rectangle with size (6,1) and color blue and mask Full at (9,6)
  _011: a rectangle with size (6,1) and color blue and mask Full at (9,11)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15

TRAIN 868de0fa.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask Border at (7,10)
  _010: a rectangle with size (8,8) and color blue and mask Border at (2,1)
  _0101: a rectangle with size (7,7) and color blue and mask Border at (11,1)
  _01: a rectangle with size (1,5) and color blue and mask Full at (0,12)
  _011: a rectangle with size (5,5) and color blue and mask Border at (0,12)
diff: 
delta:
! size mismatch, 10x10 instead of 20x20

TEST 868de0fa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 13568.1 bits (13568.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-196] Checking task 8731374e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 266349.3 = 266364.9
DL output with Mo: L = 15.6 + 19311.4 = 19327.0
DL input+output M: L = 31.2 + 285660.7 = 285691.9

# learning a model for train pairs
2.000	
1.199	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.182	OUT DEF: ^.layer_0.pos='(0,0)
1.168	OUT DEF: ^.color=^.color
1.157	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.147	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.136	OUT DEF: ^.layer_0.shape.size.i=max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + ^.layer_0.shape.size.i
1.124	OUT DEF: ^.size.i=max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + ^.layer_0.shape.size.i
1.113	OUT DEF: ^.layer_0.shape.size.j=max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + ^.layer_01.shape.size.i
1.102	OUT DEF: ^.size.j=max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + ^.layer_01.shape.size.i
1.094	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.093	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size (max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + ^.layer_0.shape.size.i,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + ^.layer_01.shape.size.i) and color ^.color and layers
  _0: a rectangle with size (max(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) + ^.layer_0.shape.size.i,max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) + ^.layer_01.shape.size.i) and color ? and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 132.8 + 258205.7 = 258338.5
DL output with Mo: L = 265.0 + 2109.3 = 2374.3
DL input+output M: L = 397.8 + 260315.0 = 260712.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,23) and color blue and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _010: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (13,7)
diff: 
delta: (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,12)=6  (1,13)=6  (1,14)=6  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,12)=6  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,12)=4  (12,13)=7# (12,14)=6  (12,15)=4  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,13)=4  (13,14)=4  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
   (8091.2 bits)
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (7,6) and color red and mask .x..x.|.x..x.|xxxxxx|.x..x.|xxxxxx|.x..x.|.x..x. at (0,0)
diff: 
delta:
   (54.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,23) and color blue and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _010: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
  _01: a rectangle with size (3,3) and color cyan and mask Odd Checkboard at (13,7)
diff: 
delta: (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,12)=6  (1,13)=6  (1,14)=6  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,12)=6  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,12)=4  (12,13)=7# (12,14)=6  (12,15)=4  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,13)=4  (13,14)=4  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,23) and color blue and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _010: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
  _01: a rectangle with size (2,3) and color pink and mask xxx|x.. at (1,12)
diff: 
delta: (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,12)=4  (12,13)=7# (12,14)=6  (12,15)=4  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,8)=8  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,13)=4  (13,14)=4  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,7)=8  (14,9)=8  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,8)=8  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
! size mismatch, 7x5 instead of 7x6
>> Trial 3
data: a background with size (17,23) and color blue and layers
  _00: a point with color pink at (0,0)
  _0: a rectangle with size (3,4) and color orange and mask x..x|xxx.|x... at (1,17)
  _010: a rectangle with size (2,3) and color pink and mask xxx|x.. at (1,12)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (4,15)
diff: 
delta: (0,2)=2  (0,3)=4  (0,4)=8  (0,5)=3  (0,6)=7# (0,7)=2  (0,8)=6  (0,9)=5# (0,10)=7# (0,11)=7# (0,12)=4  (0,13)=9# (0,14)=2  (0,15)=5# (0,16)=9# (0,17)=4  (0,18)=5# (0,19)=9# (0,20)=3  (0,21)=8  (0,22)=7# (1,0)=6  (1,1)=0  (1,3)=0  (1,4)=4  (1,5)=8  (1,6)=6  (1,9)=2  (1,11)=2  (1,15)=5# (1,16)=8  (1,18)=4  (1,21)=5# (1,22)=6  (2,0)=6  (2,1)=8  (2,2)=3  (2,4)=9# (2,5)=8  (2,6)=7# (2,8)=2  (2,9)=3  (2,10)=9# (2,11)=2  (2,13)=2  (2,15)=0  (2,16)=5# (2,20)=8  (2,22)=3  (3,0)=2  (3,1)=2  (3,2)=9# (3,3)=5# (3,4)=5# (3,5)=6  (3,6)=6  (3,7)=9# (3,8)=3  (3,9)=8  (3,10)=6  (3,11)=2  (3,12)=4  (3,14)=8  (3,15)=3  (3,16)=5# (3,18)=5# (3,19)=5# (3,20)=6  (3,22)=6  (4,1)=7# (4,2)=6  (4,3)=4  (4,4)=7# (4,5)=0  (4,7)=7# (4,8)=9# (4,10)=7# (4,11)=6  (4,12)=9# (4,13)=6  (4,14)=6  (4,16)=4  (4,17)=6  (4,20)=9# (4,22)=0  (5,0)=2  (5,1)=9# (5,2)=2  (5,3)=3  (5,4)=9# (5,5)=6  (5,6)=8  (5,7)=8  (5,14)=9# (5,15)=7# (5,16)=2  (5,17)=4  (5,18)=0  (5,20)=6  (5,21)=4  (5,22)=5# (6,0)=8  (6,1)=3  (6,2)=9# (6,3)=5# (6,4)=6  (6,5)=5# (6,6)=6  (6,7)=8  (6,14)=3  (6,15)=0  (6,17)=3  (6,19)=6  (6,20)=3  (6,21)=5# (7,0)=0  (7,1)=7# (7,2)=2  (7,3)=6  (7,4)=5# (7,5)=2  (7,6)=0  (7,7)=7# (7,12)=2  (7,14)=2  (7,15)=2  (7,16)=3  (7,17)=0  (7,18)=7# (7,19)=5# (7,21)=8  (7,22)=8  (8,0)=2  (8,1)=4  (8,2)=7# (8,3)=2  (8,4)=7# (8,5)=0  (8,6)=9# (8,7)=3  (8,14)=4  (8,15)=7# (8,16)=7# (8,17)=6  (8,18)=2  (8,19)=0  (8,20)=0  (8,21)=0  (8,22)=4  (9,0)=5# (9,2)=3  (9,3)=2  (9,4)=7# (9,5)=5# (9,6)=2  (9,7)=8  (9,9)=2  (9,14)=4  (9,15)=6  (9,16)=4  (9,17)=7# (9,18)=5# (9,19)=2  (9,20)=8  (9,21)=9# (9,22)=6  (10,0)=6  (10,1)=8  (10,2)=2  (10,3)=6  (10,4)=8  (10,5)=4  (10,6)=6  (10,7)=7# (10,14)=8  (10,15)=2  (10,17)=7# (10,18)=9# (10,20)=2  (10,21)=9# (11,2)=9# (11,3)=9# (11,4)=4  (11,5)=7# (11,6)=2  (11,7)=2  (11,14)=3  (11,15)=9# (11,16)=2  (11,17)=4  (11,18)=9# (11,19)=3  (11,20)=6  (11,21)=4  (11,22)=5# (12,0)=5# (12,1)=9# (12,2)=4  (12,3)=8  (12,4)=5# (12,5)=8  (12,6)=8  (12,8)=5# (12,9)=3  (12,10)=8  (12,11)=8  (12,12)=4  (12,13)=7# (12,14)=6  (12,15)=4  (12,18)=8  (12,19)=5# (12,20)=6  (12,21)=2  (12,22)=2  (13,2)=4  (13,3)=7# (13,4)=9# (13,6)=5# (13,7)=6  (13,8)=8  (13,9)=2  (13,10)=3  (13,11)=2  (13,12)=2  (13,13)=4  (13,14)=4  (13,15)=8  (13,16)=6  (13,17)=5# (13,18)=6  (13,19)=8  (13,20)=5# (13,21)=8  (13,22)=3  (14,0)=9# (14,1)=4  (14,2)=2  (14,3)=5# (14,5)=7# (14,6)=4  (14,7)=8  (14,9)=8  (14,10)=5# (14,11)=5# (14,12)=7# (14,13)=9# (14,15)=8  (14,16)=5# (14,17)=3  (14,19)=8  (14,20)=0  (14,21)=2  (14,22)=0  (15,0)=2  (15,1)=9# (15,2)=2  (15,3)=7# (15,5)=5# (15,6)=2  (15,7)=2  (15,8)=8  (15,9)=6  (15,10)=9# (15,11)=3  (15,12)=9# (15,13)=6  (15,14)=6  (15,15)=3  (15,16)=6  (15,17)=2  (15,18)=2  (15,19)=6  (15,21)=4  (15,22)=6  (16,0)=6  (16,1)=5# (16,2)=3  (16,3)=7# (16,4)=0  (16,5)=9# (16,7)=3  (16,8)=2  (16,9)=6  (16,10)=5# (16,11)=0  (16,12)=6  (16,14)=0  (16,15)=5# (16,16)=2  (16,17)=7# (16,19)=4  (16,20)=8  (16,21)=4 
! size mismatch, 10x4 instead of 7x6

TRAIN 8731374e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (27,23) and color yellow and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
  _010: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _01: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
diff: 
delta: (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
   (12766.4 bits)
data: a background with size (10,9) and color yellow and layers
  _0: a rectangle with size (10,9) and color blue and mask ..x.x.x..|..x.x.x..|xxxxxxxxx|..x.x.x..|..x.x.x..|xxxxxxxxx|..x.x.x..|xxxxxxxxx|..x.x.x..|..x.x.x.. at (0,0)
diff: 
delta:
   (103.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,23) and color yellow and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _010: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
  _01: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
diff: 
delta: (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
! size mismatch, 9x7 instead of 10x9
>> Trial 2
data: a background with size (27,23) and color yellow and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _010: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
  _01: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
diff: 
delta: (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
! size mismatch, 9x12 instead of 10x9
>> Trial 3
data: a background with size (27,23) and color yellow and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (6,3) and color cyan and mask .x.|x..|x..|.x.|.x.|..x at (1,15)
  _010: a rectangle with size (4,5) and color pink and mask x.x..|.xx..|...x.|....x at (17,1)
  _01: a rectangle with size (3,4) and color pink and mask xxx.|...x|...x at (21,9)
diff: 
delta: (0,1)=1  (0,2)=8  (0,3)=2  (0,4)=5# (0,5)=1  (0,6)=9# (0,7)=5# (0,8)=0  (0,9)=5# (0,10)=1  (0,11)=2  (0,13)=2  (0,14)=9# (0,15)=7# (0,18)=5# (0,19)=8  (0,20)=6  (0,21)=7# (0,22)=6  (1,0)=5# (1,1)=6  (1,2)=8  (1,3)=3  (1,4)=9# (1,5)=8  (1,7)=1  (1,8)=2  (1,9)=1  (1,10)=5# (1,11)=3  (1,12)=2  (1,14)=6  (1,15)=1  (1,17)=7# (1,18)=6  (1,19)=6  (1,20)=9# (1,21)=9# (1,22)=0  (2,0)=6  (2,1)=8  (2,2)=6  (2,3)=0  (2,4)=2  (2,5)=0  (2,6)=2  (2,7)=5# (2,8)=2  (2,9)=8  (2,10)=0  (2,11)=2  (2,12)=1  (2,13)=9# (2,14)=5# (2,16)=1  (2,17)=2  (2,18)=9# (2,20)=7# (3,0)=8  (3,1)=5# (3,2)=7# (3,6)=1  (3,7)=9# (3,8)=8  (3,9)=2  (3,10)=5# (3,11)=7# (3,12)=6  (3,13)=6  (3,14)=0  (3,16)=3  (3,17)=7# (3,18)=8  (3,19)=1  (3,20)=0  (3,21)=9# (3,22)=9# (4,0)=0  (4,1)=3  (4,2)=8  (4,3)=2  (4,4)=6  (4,6)=9# (4,7)=5# (4,8)=3  (4,9)=5# (4,11)=9# (4,12)=5# (4,13)=5# (4,15)=0  (4,17)=1  (4,18)=5# (4,19)=2  (4,20)=1  (4,21)=1  (4,22)=0  (5,0)=8  (5,2)=7# (5,3)=9# (5,4)=5# (5,5)=2  (5,6)=3  (5,7)=0  (5,8)=8  (5,9)=0  (5,10)=1  (5,11)=7# (5,12)=6  (5,14)=2  (5,15)=0  (5,17)=7# (5,18)=3  (5,19)=9# (5,20)=5# (5,21)=5# (5,22)=6  (6,0)=5# (6,1)=6  (6,2)=0  (6,3)=8  (6,13)=0  (6,14)=6  (6,16)=9# (6,18)=2  (6,19)=6  (6,20)=3  (6,21)=8  (6,22)=2  (7,0)=0  (7,1)=0  (7,2)=1  (7,3)=3  (7,13)=6  (7,14)=7# (7,15)=7# (7,16)=0  (7,19)=0  (7,21)=1  (8,0)=7# (8,1)=3  (8,2)=3  (8,3)=1  (8,6)=1  (8,13)=6  (8,14)=5# (8,15)=0  (8,16)=8  (8,17)=5# (8,18)=9# (8,19)=7# (8,20)=3  (8,21)=9# (8,22)=1  (9,0)=9# (9,1)=3  (9,2)=0  (9,3)=6  (9,13)=2  (9,14)=6  (9,15)=1  (9,17)=0  (9,19)=6  (9,21)=7# (9,22)=0  (10,0)=5# (10,1)=0  (10,2)=8  (10,3)=1  (10,13)=7# (10,15)=8  (10,16)=3  (10,17)=6  (10,19)=3  (10,21)=3  (10,22)=5# (11,1)=6  (11,3)=3  (11,10)=1  (11,13)=2  (11,14)=6  (11,15)=1  (11,16)=0  (11,17)=8  (11,18)=1  (11,19)=1  (11,20)=8  (11,21)=8  (11,22)=1  (12,0)=7# (12,2)=8  (12,3)=2  (12,13)=0  (12,14)=0  (12,15)=2  (12,16)=1  (12,17)=5# (12,18)=7# (12,19)=9# (12,20)=2  (12,21)=5# (12,22)=0  (13,0)=2  (13,1)=5# (13,2)=2  (13,8)=1  (13,13)=1  (13,15)=3  (13,16)=3  (13,17)=1  (13,18)=2  (13,19)=8  (13,20)=7# (13,21)=9# (13,22)=9# (14,0)=6  (14,2)=5# (14,3)=6  (14,13)=5# (14,14)=5# (14,15)=9# (14,16)=6  (14,17)=1  (14,18)=7# (14,19)=9# (14,20)=9# (14,21)=7# (14,22)=8  (15,0)=3  (15,1)=8  (15,2)=6  (15,3)=1  (15,13)=2  (15,14)=3  (15,16)=3  (15,17)=7# (15,19)=6  (15,20)=3  (15,21)=7# (15,22)=6  (16,0)=1  (16,1)=0  (16,2)=1  (16,4)=5# (16,5)=0  (16,6)=7# (16,7)=9# (16,8)=1  (16,9)=9# (16,10)=6  (16,11)=5# (16,12)=6  (16,13)=1  (16,14)=6  (16,16)=5# (16,17)=1  (16,18)=3  (16,19)=0  (16,20)=2  (16,21)=3  (16,22)=9# (17,4)=2  (17,5)=7# (17,6)=0  (17,7)=8  (17,8)=5# (17,9)=9# (17,11)=1  (17,12)=7# (17,13)=0  (17,14)=9# (17,15)=1  (17,16)=3  (17,17)=7# (17,18)=7# (17,19)=5# (17,21)=1  (17,22)=7# (18,0)=2  (18,1)=0  (18,4)=0  (18,5)=3  (18,6)=8  (18,7)=6  (18,8)=7# (18,9)=3  (18,10)=3  (18,11)=8  (18,12)=2  (18,13)=6  (18,14)=8  (18,15)=5# (18,16)=7# (18,17)=1  (18,18)=1  (18,19)=8  (18,21)=3  (18,22)=9# (19,0)=9# (19,2)=3  (19,3)=8  (19,5)=2  (19,6)=9# (19,7)=0  (19,8)=7# (19,9)=1  (19,10)=3  (19,11)=5# (19,12)=7# (19,13)=8  (19,14)=7# (19,15)=6  (19,16)=1  (19,17)=0  (19,18)=2  (19,19)=2  (19,20)=2  (19,21)=5# (19,22)=3  (20,0)=3  (20,1)=8  (20,2)=2  (20,3)=2  (20,4)=3  (20,6)=2  (20,8)=0  (20,9)=2  (20,10)=3  (20,11)=9# (20,12)=9# (20,13)=1  (20,14)=6  (20,15)=3  (20,17)=6  (20,18)=7# (20,19)=9# (20,20)=7# (20,21)=0  (20,22)=8  (21,0)=1  (21,1)=9# (21,3)=5# (21,4)=8  (21,5)=3  (21,6)=8  (21,7)=3  (21,8)=7# (21,12)=9# (21,13)=2  (21,14)=3  (21,16)=7# (21,17)=9# (21,18)=6  (21,19)=1  (21,20)=3  (21,21)=3  (21,22)=3  (22,0)=2  (22,1)=3  (22,2)=9# (22,3)=3  (22,4)=9# (22,5)=6  (22,6)=6  (22,7)=3  (22,8)=2  (22,9)=8  (22,10)=0  (22,11)=3  (22,14)=5# (22,15)=0  (22,16)=9# (22,17)=9# (22,18)=8  (22,19)=1  (22,22)=0  (23,0)=7# (23,1)=6  (23,2)=6  (23,4)=1  (23,5)=9# (23,6)=6  (23,7)=8  (23,8)=5# (23,9)=3  (23,10)=2  (23,11)=5# (23,13)=8  (23,14)=9# (23,15)=6  (23,17)=2  (23,18)=6  (23,19)=3  (23,21)=7# (23,22)=9# (24,1)=1  (24,2)=7# (24,3)=6  (24,4)=6  (24,5)=7# (24,7)=3  (24,8)=0  (24,9)=2  (24,10)=0  (24,11)=7# (24,12)=1  (24,13)=7# (24,14)=3  (24,15)=0  (24,16)=2  (24,17)=0  (24,18)=3  (24,19)=8  (24,20)=6  (24,21)=2  (24,22)=7# (25,0)=2  (25,1)=5# (25,4)=0  (25,5)=8  (25,6)=2  (25,7)=8  (25,8)=9# (25,9)=8  (25,10)=9# (25,11)=7# (25,12)=8  (25,13)=5# (25,14)=3  (25,15)=3  (25,16)=2  (25,17)=5# (25,18)=7# (25,20)=0  (25,21)=3  (25,22)=7# (26,0)=2  (26,1)=5# (26,2)=5# (26,3)=0  (26,4)=0  (26,6)=2  (26,8)=9# (26,9)=9# (26,10)=3  (26,11)=1  (26,12)=6  (26,13)=1  (26,14)=1  (26,15)=6  (26,16)=5# (26,17)=9# (26,18)=8  (26,19)=3  (26,20)=7# (26,22)=2 
! 90 wrong pixels (generated / expected)

TRAIN 8731374e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color cyan and layers
  _00: a point with color black at (0,0)
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.x at (9,7)
  _010: a rectangle with size (3,4) and color black and mask ..x.|.x.x|x... at (8,5)
  _01: a rectangle with size (4,2) and color green and mask Full (and Border) at (4,2)
diff: 
delta: (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,3)=5# (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,7)=9# (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,4)=2  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,3)=5# (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,1)=9# (13,2)=9# (13,3)=9# (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=2  (14,6)=2  (14,7)=4  (14,8)=0  (14,9)=9# (14,10)=2  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
   (4962.9 bits)
data: a background with size (6,8) and color cyan and layers
  _0: a rectangle with size (6,8) and color red and mask ...x....|...x....|...x....|xxxxxxxx|...x....|...x.... at (0,0)
diff: 
delta:
   (53.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color cyan and layers
  _00: a point with color black at (0,0)
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.x at (9,7)
  _010: a rectangle with size (4,2) and color green and mask Full (and Border) at (4,2)
  _01: a rectangle with size (3,4) and color black and mask ..x.|.x.x|x... at (8,5)
diff: 
delta: (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,3)=5# (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,7)=9# (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,4)=2  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,3)=5# (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,1)=9# (13,2)=9# (13,3)=9# (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=2  (14,6)=2  (14,7)=4  (14,8)=0  (14,9)=9# (14,10)=2  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
! size mismatch, 7x6 instead of 6x8
>> Trial 2
data: a background with size (16,17) and color cyan and layers
  _00: a point with color black at (0,0)
  _0: a rectangle with size (3,3) and color yellow and mask ..x|xx.|x.x at (9,7)
  _010: a rectangle with size (3,4) and color black and mask ..x.|.x.x|x... at (8,5)
  _01: a rectangle with size (4,2) and color green and mask Full (and Border) at (4,2)
diff: 
delta: (0,1)=0  (0,2)=7# (0,3)=9# (0,6)=0  (0,8)=9# (0,9)=9# (0,10)=3  (0,11)=1  (0,12)=4  (0,13)=5# (0,14)=2  (0,15)=7# (0,16)=6  (1,0)=6  (1,1)=0  (1,2)=9# (1,3)=2  (1,4)=7# (1,5)=2  (1,7)=4  (1,8)=3  (1,9)=3  (1,10)=2  (1,11)=7# (1,12)=7# (1,13)=5# (1,14)=9# (1,15)=4  (1,16)=0  (2,0)=1  (2,1)=9# (2,2)=4  (2,3)=5# (2,4)=4  (2,13)=2  (2,14)=0  (2,15)=7# (2,16)=9# (3,0)=5# (3,1)=5# (3,2)=6  (3,4)=3  (3,13)=2  (3,14)=0  (3,15)=2  (3,16)=7# (4,1)=2  (4,3)=2  (4,4)=9# (4,13)=0  (4,14)=7# (4,15)=6  (4,16)=4  (5,0)=1  (5,1)=7# (5,4)=5# (5,8)=2  (5,13)=7# (5,14)=1  (5,15)=1  (5,16)=4  (6,0)=7# (6,1)=2  (6,3)=5# (6,4)=6  (6,13)=5# (6,15)=5# (6,16)=6  (7,0)=5# (7,1)=2  (7,2)=7# (7,4)=5# (7,13)=1  (7,14)=4  (7,15)=4  (7,16)=6  (8,0)=1  (8,1)=4  (8,2)=0  (8,3)=0  (8,4)=9# (8,5)=9# (8,6)=4  (8,8)=2  (8,9)=6  (8,10)=5# (8,11)=5# (8,12)=0  (8,14)=6  (8,15)=4  (8,16)=7# (9,1)=7# (9,3)=3  (9,4)=3  (9,7)=9# (9,11)=9# (9,13)=5# (9,14)=2  (9,15)=7# (9,16)=3  (10,0)=2  (10,1)=0  (10,2)=2  (10,4)=2  (10,9)=3  (10,10)=2  (10,11)=6  (10,13)=7# (10,14)=4  (10,15)=7# (10,16)=2  (11,0)=2  (11,1)=7# (11,3)=3  (11,4)=7# (11,5)=4  (11,6)=2  (11,10)=2  (11,11)=3  (11,12)=9# (11,13)=9# (11,14)=2  (11,15)=0  (12,0)=4  (12,3)=5# (12,4)=3  (12,5)=2  (12,6)=0  (12,7)=1  (12,9)=9# (12,10)=3  (12,11)=9# (12,13)=1  (12,16)=7# (13,0)=3  (13,1)=9# (13,2)=9# (13,3)=9# (13,4)=1  (13,5)=6  (13,6)=1  (13,7)=9# (13,8)=4  (13,9)=7# (13,10)=5# (13,11)=5# (13,12)=3  (13,13)=2  (13,14)=9# (13,15)=3  (13,16)=0  (14,0)=5# (14,2)=2  (14,3)=5# (14,4)=4  (14,5)=2  (14,6)=2  (14,7)=4  (14,8)=0  (14,9)=9# (14,10)=2  (14,12)=1  (14,13)=3  (14,14)=5# (14,15)=7# (14,16)=3  (15,1)=0  (15,2)=9# (15,3)=5# (15,4)=3  (15,6)=4  (15,7)=5# (15,8)=0  (15,9)=2  (15,10)=5# (15,11)=2  (15,12)=9# (15,13)=6  (15,14)=0  (15,15)=1  (15,16)=0 
! 48 wrong pixels (generated / expected)

TRAIN 8731374e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color cyan and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (3,3) and color brown and mask ..x|.x.|xxx at (12,7)
  _010: a rectangle with size (3,2) and color orange and mask Full (and Border) at (9,1)
  _01: a rectangle with size (4,2) and color yellow and mask .x|x.|x.|x. at (8,11)
diff: 
delta: (0,1)=7# (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,10)=1  (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,3)=7# (1,4)=0  (1,5)=7# (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,14)=5# (1,15)=3  (1,16)=2  (2,1)=7# (2,2)=9# (2,11)=7# (2,12)=6  (2,13)=1  (2,14)=5# (2,15)=2  (2,16)=1  (3,0)=6  (3,1)=9# (3,2)=3  (3,11)=7# (3,12)=7# (3,14)=1  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,13)=1  (4,14)=9# (4,15)=4  (4,16)=1  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,14)=7# (5,15)=9# (5,16)=5# (6,1)=4  (6,2)=4  (6,12)=7# (6,13)=1  (6,14)=7# (6,15)=3  (6,16)=7# (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,13)=1  (7,14)=1  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,13)=0  (8,14)=6  (8,15)=7# (8,16)=6  (9,0)=6  (9,12)=7# (9,13)=1  (9,14)=5# (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,13)=7# (11,14)=7# (11,15)=1  (12,0)=6  (12,1)=6  (12,2)=4  (12,3)=7# (12,4)=6  (12,6)=1  (12,8)=1  (12,10)=2  (12,11)=6  (12,13)=7# (12,14)=2  (13,0)=7# (13,1)=3  (13,2)=5# (13,3)=1  (13,4)=4  (13,5)=1  (13,6)=6  (13,7)=4  (13,9)=6  (13,10)=7# (13,11)=7# (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,6)=3  (14,10)=5# (14,11)=9# (14,12)=6  (14,13)=1  (14,14)=4  (14,15)=6  (14,16)=9# (15,0)=6  (15,1)=1  (15,2)=9# (15,3)=6  (15,4)=3  (15,5)=1  (15,6)=6  (15,7)=6  (15,9)=6  (15,10)=0  (15,11)=1  (15,12)=3  (15,13)=4  (15,15)=7# (15,16)=7# (16,0)=2  (16,1)=1  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,6)=1  (16,7)=5# (16,8)=1  (16,9)=7# (16,10)=0  (16,11)=7# (16,12)=9# (16,13)=3  (16,15)=2  (16,16)=1  (17,0)=7# (17,1)=1  (17,2)=9# (17,3)=4  (17,4)=2  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,11)=0  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,0)=1  (18,1)=2  (18,2)=5# (18,3)=7# (18,5)=7# (18,6)=1  (18,7)=6  (18,8)=5# (18,10)=0  (18,11)=9# (18,12)=2  (18,14)=9# (18,15)=1  (18,16)=5#
! size mismatch, 6x8 instead of 10x8
>> Trial 2
data: a background with size (19,17) and color cyan and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (3,3) and color brown and mask ..x|.x.|xxx at (12,7)
  _010: a rectangle with size (4,2) and color yellow and mask .x|x.|x.|x. at (8,11)
  _01: a rectangle with size (3,2) and color orange and mask Full (and Border) at (9,1)
diff: 
delta: (0,1)=7# (0,2)=2  (0,3)=0  (0,4)=2  (0,5)=6  (0,6)=3  (0,7)=0  (0,8)=3  (0,9)=9# (0,10)=1  (0,11)=3  (0,12)=5# (0,13)=3  (0,14)=0  (0,15)=4  (0,16)=5# (1,0)=4  (1,1)=4  (1,3)=7# (1,4)=0  (1,5)=7# (1,6)=9# (1,7)=1  (1,8)=4  (1,9)=9# (1,10)=5# (1,11)=2  (1,12)=0  (1,14)=5# (1,15)=3  (1,16)=2  (2,1)=7# (2,2)=9# (2,11)=7# (2,12)=6  (2,13)=1  (2,14)=5# (2,15)=2  (2,16)=1  (3,0)=6  (3,1)=9# (3,2)=3  (3,11)=7# (3,12)=7# (3,14)=1  (3,15)=3  (3,16)=6  (4,0)=0  (4,1)=2  (4,2)=9# (4,9)=1  (4,11)=9# (4,12)=5# (4,13)=1  (4,14)=9# (4,15)=4  (4,16)=1  (5,0)=5# (5,1)=2  (5,2)=6  (5,12)=3  (5,13)=6  (5,14)=7# (5,15)=9# (5,16)=5# (6,1)=4  (6,2)=4  (6,12)=7# (6,13)=1  (6,14)=7# (6,15)=3  (6,16)=7# (7,1)=6  (7,2)=2  (7,5)=1  (7,11)=6  (7,12)=3  (7,13)=1  (7,14)=1  (7,15)=2  (7,16)=9# (8,0)=9# (8,1)=4  (8,2)=0  (8,11)=6  (8,13)=0  (8,14)=6  (8,15)=7# (8,16)=6  (9,0)=6  (9,12)=7# (9,13)=1  (9,14)=5# (9,16)=4  (10,0)=4  (10,1)=0  (10,2)=3  (10,12)=2  (10,13)=4  (10,14)=3  (10,15)=4  (10,16)=5# (11,0)=3  (11,13)=7# (11,14)=7# (11,15)=1  (12,0)=6  (12,1)=6  (12,2)=4  (12,3)=7# (12,4)=6  (12,6)=1  (12,8)=1  (12,10)=2  (12,11)=6  (12,13)=7# (12,14)=2  (13,0)=7# (13,1)=3  (13,2)=5# (13,3)=1  (13,4)=4  (13,5)=1  (13,6)=6  (13,7)=4  (13,9)=6  (13,10)=7# (13,11)=7# (13,12)=9# (13,13)=2  (13,14)=3  (13,15)=0  (13,16)=2  (14,0)=9# (14,1)=2  (14,2)=2  (14,3)=5# (14,4)=4  (14,6)=3  (14,10)=5# (14,11)=9# (14,12)=6  (14,13)=1  (14,14)=4  (14,15)=6  (14,16)=9# (15,0)=6  (15,1)=1  (15,2)=9# (15,3)=6  (15,4)=3  (15,5)=1  (15,6)=6  (15,7)=6  (15,9)=6  (15,10)=0  (15,11)=1  (15,12)=3  (15,13)=4  (15,15)=7# (15,16)=7# (16,0)=2  (16,1)=1  (16,2)=2  (16,3)=4  (16,4)=9# (16,5)=2  (16,6)=1  (16,7)=5# (16,8)=1  (16,9)=7# (16,10)=0  (16,11)=7# (16,12)=9# (16,13)=3  (16,15)=2  (16,16)=1  (17,0)=7# (17,1)=1  (17,2)=9# (17,3)=4  (17,4)=2  (17,6)=4  (17,7)=3  (17,8)=6  (17,9)=2  (17,11)=0  (17,13)=5# (17,14)=3  (17,15)=5# (17,16)=9# (18,0)=1  (18,1)=2  (18,2)=5# (18,3)=7# (18,5)=7# (18,6)=1  (18,7)=6  (18,8)=5# (18,10)=0  (18,11)=9# (18,12)=2  (18,14)=9# (18,15)=1  (18,16)=5#
! size mismatch, 6x6 instead of 10x8

TEST 8731374e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 2109.3 bits (2109.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-195] Checking task 88a10436.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6197.7 = 6213.3
DL output with Mo: L = 15.6 + 10147.7 = 10163.3
DL input+output M: L = 31.2 + 16345.3 = 16376.5

# learning a model for train pairs
2.000	
1.808	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.591	OUT OBJECT at ^.layer_0: ^.layer_0
1.406	OUT OBJECT at ^.layer_01: ^.layer_0.shape at (?,?)
1.309	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.163	OUT OBJECT at ^.layer_011: ^.layer_01
1.049	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at (?,?)
0.993	OUT DEF: ^.size=^.size
0.952	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.885	OUT OBJECT at ^.layer_01111: ^.layer_011
0.841	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.798	OUT OBJECT at ^.layer_0110: ^.layer_011.shape at (?,?)
0.772	IN  DEF: ^.layer_0111.shape.color=grey
0.744	OUT DEF: ^.layer_0111.pos=max(^.layer_011.pos, ^.layer_0111.pos) - min(^.layer_0.pos, ^.layer_011.pos)
0.732	IN  DEF: ^.color=black
0.725	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_0.shape at (?,?)
  _0110: ^.layer_011.shape at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_01.shape at max(^.layer_011.pos, ^.layer_0111.pos) - min(^.layer_0.pos, ^.layer_011.pos)
  _01111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color grey at (?,?)

DL input  with Mi: L = 122.0 + 3579.6 = 3701.6
DL output with Mo: L = 141.8 + 1171.2 = 1313.0
DL input+output M: L = 263.8 + 4750.8 = 5014.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _011: a point with color green at (2,2)
  _0111: a point with color grey at (5,5)
diff: 
delta:
   (117.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (5,5)
  _0110: a point with color green at (6,6)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _0111: a rectangle with size (2,2) and color red and mask .x|xx at (4,4)
  _01111: a point with color green at (2,2)
diff: 
delta:
   (22.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (1,1)
  _011: a point with color green at (2,2)
  _0111: a point with color grey at (5,5)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (1,1)
  _01: a rectangle with size (2,2) and color red and mask .x|xx at (0,0)
  _011: a point with color green at (2,2)
  _0111: a point with color grey at (5,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,1)
  _011: a point with color red at (0,1)
  _0111: a point with color grey at (5,5)
diff: 
delta: (2,2)=3 
! 6 wrong pixels (generated / expected)

TRAIN 88a10436.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _011: a point with color pink at (0,4)
  _0111: a point with color grey at (5,1)
diff: 
delta:
   (102.1 bits)
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,3) and color red and mask Full at (6,0)
  _0110: a point with color pink at (4,0)
  _011: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _0111: a rectangle with size (1,2) and color blue and mask Full at (5,0)
  _01111: a point with color pink at (0,4)
diff: 
delta:
   (20.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _011: a point with color pink at (0,4)
  _0111: a point with color grey at (5,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _011: a point with color pink at (0,4)
  _0111: a point with color grey at (5,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,2) and color blue and mask Full at (1,4)
  _011: a point with color grey at (5,1)
  _0111: a point with color pink at (0,4)
diff:   ^.layer_0111.shape.color
delta:
! 12 wrong pixels (generated / expected)

TRAIN 88a10436.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _011: a point with color blue at (8,3)
  _0111: a point with color grey at (2,4)
diff: 
delta: (7,3)=1 
   (138.0 bits)
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (2,3)
  _0110: a point with color blue at (2,5)
  _011: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _0111: a rectangle with size (1,2) and color red and mask Full at (1,3)
  _01111: a point with color blue at (8,3)
diff: 
delta: (3,5)=1  (7,3)=1 
   (74.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _011: a point with color blue at (7,3)
  _0111: a point with color grey at (2,4)
diff: 
delta: (8,3)=1 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (1,2) and color red and mask Full at (6,1)
  _011: a point with color blue at (8,3)
  _0111: a point with color grey at (2,4)
diff: 
delta: (7,3)=1 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask .x|xx at (7,1)
  _01: a rectangle with size (2,1) and color blue and mask Full at (7,3)
  _011: a point with color red at (6,1)
  _0111: a point with color grey at (2,4)
diff: 
delta: (6,2)=2 
! 13 wrong pixels (generated / expected)

TRAIN 88a10436.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _011: a point with color green at (4,3)
  _0111: a point with color grey at (8,6)
diff: 
delta: (4,4)=3 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,2)
  _011: a point with color green at (4,4)
  _0111: a point with color grey at (8,6)
diff: 
delta: (4,3)=3 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (4,3)
  _011: a point with color blue at (3,2)
  _0111: a point with color grey at (8,6)
diff: 
delta: (3,3)=1 
! 11 wrong pixels (generated / expected)

TEST 88a10436.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.1 sec (7.1 sec/task)
bits-train-error = 1171.2 bits (1171.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-194] Checking task 88a62173.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8091.0 = 8106.6
DL output with Mo: L = 15.6 + 1405.1 = 1420.7
DL input+output M: L = 31.2 + 9496.0 = 9527.3

# learning a model for train pairs
2.000	
1.554	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.331	OUT DEF: ^.size=^.size / 2
1.142	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.070	OUT DEF: ^.layer_0.shape.color=black
1.002	OUT DEF: ^.layer_0.pos.j=1
0.947	OUT DEF: ^.layer_0.pos.i=^.layer_0.shape.size.i / 3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size / 2 and color ? and layers
  _0: a point with color black at (^.layer_0.shape.size.i / 3,1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 4442.4 = 4491.2
DL output with Mo: L = 67.1 + 491.5 = 558.6
DL input+output M: L = 115.9 + 4933.9 = 5049.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|..x..|xxxxx|x.x..|..x.. at (0,0)
diff: 
delta: (0,0)=0  (4,4)=0 
   (136.2 bits)
data: a background with size (2,2) and color red and layers
  _0: a point with color black at (1,1)
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|..x..|xxxxx|x.x..|..x.. at (0,0)
diff: 
delta: (0,0)=0  (4,4)=0 
! 3 wrong pixels (generated / expected)

TRAIN 88a62173.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask x.|xx at (3,0)
diff: 
delta: (0,0)=1  (0,3)=1  (1,1)=1  (1,4)=1  (3,3)=1  (4,4)=1 
   (195.7 bits)
data: a background with size (2,2) and color blue and layers
  _0: a point with color black at (0,1)
diff: 
delta:
   (9.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask x.|xx at (3,0)
diff: 
delta: (0,0)=1  (0,3)=1  (1,1)=1  (1,4)=1  (3,3)=1  (4,4)=1 
! 3 wrong pixels (generated / expected)

TRAIN 88a62173.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|.xx.x|xxxxx|..x..|.xx.. at (0,0)
diff: 
delta: (4,4)=0 
   (112.3 bits)
data: a background with size (2,2) and color cyan and layers
  _0: a point with color black at (1,1)
diff: 
delta: (0,0)=0 
   (31.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (5,5) and color black and mask ..xx.|.xx.x|xxxxx|..x..|.xx.. at (0,0)
diff: 
delta: (4,4)=0 
! 2 wrong pixels (generated / expected)

TRAIN 88a62173.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color black and mask ..x.x|x.xx.|xxxxx|..x..|..xx. at (0,0)
diff: 
delta: (4,0)=0 
! 2 wrong pixels (generated / expected)

TEST 88a62173.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 491.5 bits (491.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-193] Checking task 890034e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 189316.0 = 189331.6
DL output with Mo: L = 15.6 + 194996.8 = 195012.4
DL input+output M: L = 31.2 + 384312.8 = 384344.0

# learning a model for train pairs
2.000	
1.703	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.507	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.503	OUT DEF: ^.size=^.size
1.502	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 133050.6 = 133099.4
DL output with Mo: L = 42.5 + 155837.5 = 155880.0
DL input+output M: L = 91.4 + 288888.0 = 288979.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x..xx..x.x.xx.|xxxxxx...x..xx.xx.x.x|...xxxx.xx..xx.xxxx.x|...x....xx..xxxx.x.x.|...xxxxxxxxx.xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (3,6)=2  (3,9)=2  (3,17)=8  (4,6)=2  (4,9)=2  (5,6)=2  (5,9)=2  (5,11)=8  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,0)=1  (16,1)=1  (16,4)=8  (16,7)=8  (17,0)=1  (17,1)=8  (17,2)=8  (18,0)=1  (18,1)=1  (18,2)=8  (19,0)=1  (19,1)=1  (19,4)=8  (19,16)=8  (20,0)=1  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
   (2338.9 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x......x.x.xx.|xxxxxx.......x.xx.x.x|...xxxx.x....x.xxxx.x|...x....x....xxx.x.x.|...xxxxxx....xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (3,6)=2  (3,9)=2  (3,17)=8  (4,6)=2  (4,9)=2  (5,6)=2  (5,9)=2  (5,11)=8  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,9)=2  (13,10)=2  (13,11)=2  (13,12)=2  (13,13)=8  (13,20)=8  (14,8)=8  (14,9)=2  (14,12)=2  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,9)=2  (15,12)=2  (16,0)=1  (16,1)=1  (16,4)=8  (16,7)=8  (16,9)=2  (16,12)=2  (17,0)=1  (17,1)=8  (17,2)=8  (17,9)=2  (17,10)=2  (17,11)=2  (17,12)=2  (18,0)=1  (18,1)=1  (18,2)=8  (19,0)=1  (19,1)=1  (19,4)=8  (19,16)=8  (20,0)=1  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
   (2690.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..xx.xxxx...x.xxxxxxx|xx..xxx.x...xxxx.xxxx|x..x......xxxxx.xxxx.|.xxxxx....xxxxxxx.x.x|xxxxx.....x..xx.x.xx.|x....x....x.xxxxx.xxx|..xx.x....x.x..xx....|.x...xx..xx.xxxx.xx..|xxx..xxx...xxxxx.x..x|.x.xxxx..xx.xxxx..x.x|..xxxxx..xxxx.xx.xx.x|xxx.x.xx.x.xxx.xxxx.x|x..xx..xxxxxxx.x..xxx|xx.xxx.x..xx..x.x.xx.|xxxxxx...x..xx.xx.x.x|...xxxx.xx..xx.xxxx.x|...x....xx..xxxx.x.x.|...xxxxxxxxx.xxx..xx.|....x.xx.xxxxxx.x..xx|.....x.x....xxx......|......x..xxxx.xx..... at (0,0)
diff: 
delta: (0,1)=8  (0,10)=1  (1,3)=8  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (3,6)=2  (3,9)=2  (3,17)=8  (4,6)=2  (4,9)=2  (5,6)=2  (5,9)=2  (5,11)=8  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,17)=8  (6,20)=8  (7,2)=8  (7,16)=8  (8,3)=8  (8,4)=8  (8,10)=8  (8,16)=8  (9,0)=8  (9,8)=8  (10,0)=8  (10,16)=8  (10,19)=8  (11,3)=8  (11,8)=8  (12,2)=8  (12,5)=8  (12,17)=8  (13,2)=8  (13,13)=8  (13,20)=8  (14,8)=8  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (16,0)=1  (16,1)=1  (16,4)=8  (16,7)=8  (17,0)=1  (17,1)=8  (17,2)=8  (18,0)=1  (18,1)=1  (18,2)=8  (19,0)=1  (19,1)=1  (19,4)=8  (19,16)=8  (20,0)=1  (20,3)=1  (20,17)=8  (20,18)=1  (20,19)=8 
! 318 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color blue and layers
  _0: a rectangle with size (7,6) and color black and mask ....x.|....x.|.x.x.x|.xx..x|x.xx..|x.xxxx|.x...x at (14,15)
diff: 
delta: (0,0)=0  (0,1)=8  (0,4)=0  (0,9)=0  (0,11)=0  (0,13)=0  (1,2)=0  (1,3)=8  (1,7)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,16)=0  (2,1)=0  (2,2)=0  (2,4)=0  (2,5)=0  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (2,20)=0  (3,0)=0  (3,6)=2  (3,7)=0  (3,8)=0  (3,9)=2  (3,17)=8  (3,19)=0  (4,5)=0  (4,6)=2  (4,7)=0  (4,8)=0  (4,9)=2  (4,11)=0  (4,12)=0  (4,15)=0  (4,17)=0  (4,20)=0  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,6)=2  (5,7)=0  (5,8)=0  (5,9)=2  (5,11)=8  (5,17)=0  (6,0)=0  (6,1)=0  (6,4)=0  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,11)=0  (6,13)=0  (6,14)=0  (6,17)=8  (6,18)=0  (6,19)=0  (6,20)=8  (7,0)=0  (7,2)=8  (7,3)=0  (7,4)=0  (7,7)=0  (7,8)=0  (7,11)=0  (7,16)=8  (7,19)=0  (7,20)=0  (8,3)=8  (8,4)=8  (8,8)=0  (8,9)=0  (8,10)=8  (8,16)=8  (8,18)=0  (8,19)=0  (9,0)=8  (9,2)=0  (9,7)=0  (9,8)=8  (9,11)=0  (9,16)=0  (9,17)=0  (9,19)=0  (10,0)=8  (10,1)=0  (10,7)=0  (10,8)=0  (10,13)=0  (10,16)=8  (10,19)=8  (11,3)=8  (11,5)=0  (11,8)=8  (11,10)=0  (11,14)=0  (11,19)=0  (12,1)=0  (12,2)=8  (12,5)=8  (12,6)=0  (12,14)=0  (12,16)=0  (12,17)=8  (13,2)=8  (13,6)=0  (13,8)=0  (13,9)=0  (13,12)=0  (13,13)=8  (13,15)=0  (13,17)=0  (13,20)=8  (14,6)=0  (14,7)=0  (14,8)=8  (14,10)=0  (14,11)=0  (14,14)=8  (14,17)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,10)=0  (15,11)=0  (15,14)=0  (16,2)=0  (16,4)=8  (16,5)=0  (16,6)=0  (16,7)=8  (16,10)=0  (16,11)=0  (17,1)=8  (17,2)=8  (17,12)=0  (18,2)=8  (18,3)=0  (18,5)=0  (18,8)=0  (19,2)=0  (19,3)=0  (19,4)=8  (19,6)=0  (19,8)=0  (19,9)=0  (19,10)=0  (19,11)=0  (19,16)=8  (20,1)=0  (20,2)=0  (20,4)=0  (20,5)=0  (20,7)=0  (20,8)=0  (20,13)=0  (20,17)=8  (20,19)=8 
! 317 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,21) and color blue and layers
  _0: a rectangle with size (3,11) and color black and mask ..x.x..x...|.xx..x.xxxx|xx.xx.xx... at (18,1)
diff: 
delta: (0,0)=0  (0,1)=8  (0,4)=0  (0,9)=0  (0,11)=0  (0,13)=0  (1,2)=0  (1,3)=8  (1,7)=0  (1,9)=0  (1,10)=0  (1,11)=0  (1,16)=0  (2,1)=0  (2,2)=0  (2,4)=0  (2,5)=0  (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,15)=8  (2,20)=0  (3,0)=0  (3,6)=2  (3,7)=0  (3,8)=0  (3,9)=2  (3,17)=8  (3,19)=0  (4,5)=0  (4,6)=2  (4,7)=0  (4,8)=0  (4,9)=2  (4,11)=0  (4,12)=0  (4,15)=0  (4,17)=0  (4,20)=0  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=0  (5,6)=2  (5,7)=0  (5,8)=0  (5,9)=2  (5,11)=8  (5,17)=0  (6,0)=0  (6,1)=0  (6,4)=0  (6,6)=2  (6,7)=2  (6,8)=2  (6,9)=2  (6,11)=0  (6,13)=0  (6,14)=0  (6,17)=8  (6,18)=0  (6,19)=0  (6,20)=8  (7,0)=0  (7,2)=8  (7,3)=0  (7,4)=0  (7,7)=0  (7,8)=0  (7,11)=0  (7,16)=8  (7,19)=0  (7,20)=0  (8,3)=8  (8,4)=8  (8,8)=0  (8,9)=0  (8,10)=8  (8,16)=8  (8,18)=0  (8,19)=0  (9,0)=8  (9,2)=0  (9,7)=0  (9,8)=8  (9,11)=0  (9,16)=0  (9,17)=0  (9,19)=0  (10,0)=8  (10,1)=0  (10,7)=0  (10,8)=0  (10,13)=0  (10,16)=8  (10,19)=8  (11,3)=8  (11,5)=0  (11,8)=8  (11,10)=0  (11,14)=0  (11,19)=0  (12,1)=0  (12,2)=8  (12,5)=8  (12,6)=0  (12,14)=0  (12,16)=0  (12,17)=8  (13,2)=8  (13,6)=0  (13,8)=0  (13,9)=0  (13,12)=0  (13,13)=8  (13,15)=0  (13,17)=0  (13,20)=8  (14,6)=0  (14,7)=0  (14,8)=8  (14,10)=0  (14,11)=0  (14,14)=8  (14,17)=8  (14,19)=0  (15,0)=8  (15,1)=8  (15,2)=8  (15,7)=8  (15,10)=0  (15,11)=0  (15,14)=0  (15,19)=0  (16,2)=0  (16,4)=8  (16,5)=0  (16,6)=0  (16,7)=8  (16,10)=0  (16,11)=0  (16,16)=0  (16,18)=0  (16,20)=0  (17,1)=8  (17,2)=8  (17,12)=0  (17,16)=0  (17,17)=0  (17,20)=0  (18,2)=8  (18,15)=0  (18,17)=0  (18,18)=0  (19,4)=8  (19,15)=0  (19,16)=8  (19,17)=0  (19,18)=0  (19,19)=0  (19,20)=0  (20,13)=0  (20,16)=0  (20,17)=8  (20,19)=8  (20,20)=0 
! 317 wrong pixels (generated / expected)

TRAIN 890034e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (21,16) and color black and mask ...x..........xx|...xx.........x.|.x.xx..x....xx.x|x...x.x.xxxx....|.xxxx.x....x.xxx|xx.x.xxx......x.|.x..x..xx..xxx..|.....x....x.x...|...xx.xxxx.x....|.......xxx.xx...|.....x..x..x....|....xxxx.x..x...|.....x....x.x...|...x.x.xx...x...|...xx.xx....x...|...xx..xx.xx....|........x..x....|.......xxx......|..........x.x...|...........xx...|............xx.. at (0,5)
diff: 
delta: (0,1)=0  (0,3)=4  (0,11)=4  (0,12)=0  (0,14)=0  (0,15)=4  (0,17)=4  (0,18)=4  (1,2)=0  (1,3)=0  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,14)=0  (1,15)=0  (1,18)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,15)=4  (3,0)=0  (3,1)=4  (3,2)=4  (3,3)=4  (3,18)=4  (4,2)=0  (4,3)=4  (4,12)=4  (4,13)=4  (4,14)=4  (5,0)=0  (5,2)=0  (5,3)=0  (5,17)=4  (6,0)=0  (6,2)=0  (6,3)=0  (6,5)=4  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,0)=0  (7,4)=0  (7,5)=4  (7,6)=4  (7,8)=4  (7,14)=4  (8,0)=4  (8,1)=0  (8,2)=4  (8,4)=4  (8,6)=4  (8,7)=4  (8,10)=4  (8,19)=0  (8,20)=0  (9,0)=0  (9,1)=0  (9,2)=4  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,1)=0  (10,2)=0  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,2)=0  (11,3)=8  (11,4)=0  (11,5)=0  (11,6)=0  (11,7)=8  (11,13)=4  (11,18)=4  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=8  (12,4)=0  (12,5)=0  (12,6)=0  (12,7)=8  (12,13)=4  (12,16)=4  (12,19)=0  (12,20)=0  (13,1)=0  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,18)=4  (13,20)=0  (14,0)=4  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,6)=0  (14,7)=4  (14,16)=4  (14,18)=4  (14,19)=0  (15,0)=0  (15,1)=0  (15,2)=4  (15,4)=0  (15,5)=0  (15,6)=0  (15,11)=4  (15,14)=4  (15,18)=4  (15,20)=4  (16,0)=4  (16,1)=4  (16,2)=0  (16,3)=0  (16,5)=0  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,18)=4  (16,20)=4  (17,1)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=0  (17,9)=0  (17,11)=4  (17,19)=0  (18,0)=0  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,6)=0  (18,9)=4  (18,10)=0  (18,14)=4  (18,16)=4  (18,19)=4  (18,20)=0  (19,3)=0  (19,4)=4  (19,5)=0  (19,6)=4  (19,8)=0  (19,9)=0  (19,10)=0  (19,12)=0  (19,13)=0  (19,18)=4  (19,20)=0  (20,0)=0  (20,1)=4  (20,5)=0  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,12)=0  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4  (20,20)=0 
   (5582.1 bits)
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (9,9) and color green and mask ....xxxx.|....xxx..|...x.x.x.|....x.xxx|xx..xx...|.x..x....|.x..x....|.xxx.....|...x..... at (0,0)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,16)=3  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,16)=3  (1,17)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,16)=3  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,10)=3  (3,12)=3  (3,17)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,3)=4  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=3  (4,17)=3  (5,7)=3  (5,9)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=4  (5,18)=3  (5,20)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,14)=3  (6,15)=4  (6,19)=3  (6,20)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,11)=8  (7,12)=8  (7,13)=8  (7,14)=8  (7,15)=8  (7,16)=3  (7,18)=3  (7,19)=3  (7,20)=3  (8,0)=4  (8,2)=4  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (8,11)=8  (8,15)=8  (8,17)=3  (8,18)=3  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,10)=3  (9,11)=8  (9,15)=8  (9,18)=4  (9,19)=3  (9,20)=3  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,9)=3  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,8)=3  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,8)=3  (12,9)=3  (12,11)=3  (12,12)=3  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,9)=3  (13,11)=3  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,10)=3  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,10)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,9)=3  (16,10)=4  (16,11)=3  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,8)=3  (17,10)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,7)=3  (18,8)=3  (18,9)=4  (18,11)=3  (18,12)=3  (18,13)=3  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,7)=3  (19,11)=3  (19,14)=3  (19,15)=3  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,8)=3  (20,9)=4  (20,10)=3  (20,11)=4  (20,13)=4  (20,14)=3  (20,15)=4  (20,16)=4  (20,19)=4 
   (6593.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color green and layers
  _0: a rectangle with size (21,16) and color black and mask ...x..........xx|...xx.........x.|.x.xx..x....xx.x|x...x.x.xxxx....|.xxxx.x....x.xxx|xx.x.xxx......x.|.x..x..xx..xxx..|.....x....x.x...|...xx.xxxx.x....|.......xxx.xx...|.....x..x..x....|....xxxx.x..x...|.....x....x.x...|...x.x.xx...x...|...xx.xx....x...|...xx..xx.xx....|........x..x....|.......xxx......|..........x.x...|...........xx...|............xx.. at (0,5)
diff: 
delta: (0,1)=0  (0,3)=4  (0,11)=4  (0,12)=0  (0,14)=0  (0,15)=4  (0,17)=4  (0,18)=4  (1,2)=0  (1,3)=0  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,14)=0  (1,15)=0  (1,18)=4  (2,0)=4  (2,1)=4  (2,2)=4  (2,4)=4  (2,10)=4  (2,15)=4  (3,0)=0  (3,1)=4  (3,2)=4  (3,3)=4  (3,18)=4  (4,2)=0  (4,3)=4  (4,12)=4  (4,13)=4  (4,14)=4  (5,0)=0  (5,2)=0  (5,3)=0  (5,17)=4  (6,0)=0  (6,2)=0  (6,3)=0  (6,5)=4  (6,8)=4  (6,10)=4  (6,11)=4  (6,15)=4  (7,0)=0  (7,4)=0  (7,5)=4  (7,6)=4  (7,8)=4  (7,14)=4  (8,0)=4  (8,1)=0  (8,2)=4  (8,4)=4  (8,6)=4  (8,7)=4  (8,10)=4  (8,19)=0  (8,20)=0  (9,0)=0  (9,1)=0  (9,2)=4  (9,3)=0  (9,4)=0  (9,5)=0  (9,6)=0  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (10,1)=0  (10,2)=0  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,2)=0  (11,3)=8  (11,4)=0  (11,5)=0  (11,6)=0  (11,7)=8  (11,13)=4  (11,18)=4  (12,0)=0  (12,1)=0  (12,2)=0  (12,3)=8  (12,4)=0  (12,5)=0  (12,6)=0  (12,7)=8  (12,13)=4  (12,16)=4  (12,19)=0  (12,20)=0  (13,1)=0  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,18)=4  (13,20)=0  (14,0)=4  (14,1)=0  (14,2)=0  (14,3)=0  (14,4)=0  (14,6)=0  (14,7)=4  (14,16)=4  (14,18)=4  (14,19)=0  (15,0)=0  (15,1)=0  (15,2)=4  (15,4)=0  (15,5)=0  (15,6)=0  (15,11)=4  (15,14)=4  (15,18)=4  (15,20)=4  (16,0)=4  (16,1)=4  (16,2)=0  (16,3)=0  (16,5)=0  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,18)=4  (16,20)=4  (17,1)=4  (17,4)=0  (17,5)=0  (17,6)=0  (17,7)=0  (17,9)=0  (17,11)=4  (17,19)=0  (18,0)=0  (18,1)=0  (18,2)=0  (18,3)=0  (18,4)=0  (18,6)=0  (18,9)=4  (18,10)=0  (18,14)=4  (18,16)=4  (18,19)=4  (18,20)=0  (19,3)=0  (19,4)=4  (19,5)=0  (19,6)=4  (19,8)=0  (19,9)=0  (19,10)=0  (19,12)=0  (19,13)=0  (19,18)=4  (19,20)=0  (20,0)=0  (20,1)=4  (20,5)=0  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,12)=0  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4  (20,20)=0 
! 266 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (12,9) and color green and mask ...x.....|..x.xx...|.x.......|.xx.xx...|..x.x....|...x.....|...x.....|..x.x....|.x.x.....|xx..xxx..|x...x..xx|.x.x...x. at (9,7)
diff: 
delta: (0,0)=3  (0,2)=3  (0,3)=4  (0,4)=3  (0,5)=3  (0,6)=3  (0,7)=3  (0,9)=3  (0,10)=3  (0,11)=4  (0,13)=3  (0,15)=4  (0,16)=3  (0,17)=4  (0,18)=4  (1,0)=3  (1,1)=3  (1,4)=3  (1,5)=3  (1,6)=3  (1,7)=4  (1,10)=4  (1,11)=4  (1,12)=4  (1,13)=3  (1,16)=3  (1,17)=3  (1,18)=4  (1,20)=3  (2,0)=4  (2,1)=4  (2,2)=4  (2,3)=3  (2,4)=4  (2,5)=3  (2,7)=3  (2,10)=4  (2,11)=3  (2,13)=3  (2,14)=3  (2,15)=4  (2,16)=3  (2,19)=3  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,10)=3  (3,12)=3  (3,17)=3  (3,18)=4  (3,19)=3  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=4  (4,4)=3  (4,5)=3  (4,10)=3  (4,12)=4  (4,13)=4  (4,14)=4  (4,15)=3  (4,17)=3  (5,1)=3  (5,4)=3  (5,7)=3  (5,9)=3  (5,13)=3  (5,14)=3  (5,15)=3  (5,16)=3  (5,17)=4  (5,18)=3  (5,20)=3  (6,1)=3  (6,4)=3  (6,5)=4  (6,7)=3  (6,8)=4  (6,10)=4  (6,11)=4  (6,14)=3  (6,15)=4  (6,19)=3  (6,20)=3  (7,1)=3  (7,2)=3  (7,3)=3  (7,5)=4  (7,6)=4  (7,7)=3  (7,8)=4  (7,9)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=4  (7,16)=3  (7,18)=3  (7,19)=3  (7,20)=3  (8,0)=4  (8,2)=4  (8,3)=3  (8,4)=4  (8,5)=3  (8,6)=4  (8,7)=4  (8,10)=4  (8,15)=3  (8,17)=3  (8,18)=3  (9,2)=4  (9,7)=3  (9,8)=4  (9,9)=4  (9,11)=4  (9,15)=4  (9,18)=4  (9,19)=3  (9,20)=3  (10,0)=3  (10,3)=8  (10,4)=8  (10,5)=8  (10,6)=8  (10,7)=8  (10,8)=4  (10,14)=4  (10,15)=4  (10,17)=4  (10,18)=4  (10,19)=4  (10,20)=4  (11,0)=3  (11,1)=3  (11,3)=8  (11,7)=8  (11,13)=4  (11,15)=3  (11,16)=3  (11,18)=4  (11,19)=3  (11,20)=3  (12,3)=8  (12,7)=8  (12,13)=4  (12,14)=3  (12,16)=4  (12,18)=3  (13,0)=3  (13,2)=4  (13,3)=8  (13,4)=8  (13,5)=8  (13,6)=8  (13,7)=8  (13,14)=3  (13,15)=3  (13,16)=3  (13,18)=4  (13,19)=3  (14,0)=4  (14,5)=3  (14,7)=4  (14,13)=3  (14,14)=3  (14,15)=3  (14,16)=4  (14,18)=4  (14,20)=3  (15,2)=4  (15,3)=3  (15,7)=3  (15,11)=4  (15,14)=4  (15,17)=3  (15,18)=4  (15,19)=3  (15,20)=4  (16,0)=4  (16,1)=4  (16,4)=3  (16,6)=3  (16,7)=4  (16,8)=4  (16,10)=4  (16,12)=4  (16,14)=4  (16,15)=4  (16,17)=3  (16,18)=4  (16,19)=3  (16,20)=4  (17,0)=3  (17,1)=4  (17,2)=3  (17,3)=3  (17,11)=4  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,20)=3  (18,5)=3  (18,9)=4  (18,14)=4  (18,16)=4  (18,18)=3  (18,19)=4  (19,0)=3  (19,1)=3  (19,2)=3  (19,4)=4  (19,6)=4  (19,18)=4  (19,19)=3  (20,1)=4  (20,2)=3  (20,3)=3  (20,4)=3  (20,6)=4  (20,7)=4  (20,9)=4  (20,11)=4  (20,13)=4  (20,15)=4  (20,16)=4  (20,19)=4 
! 268 wrong pixels (generated / expected)

TRAIN 890034e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (18,11) and color black and mask .x.........|.x.........|x..........|.xxx...x...|..x.x.xx...|....x.xxx..|...xxx....x|....x..xx.x|....x.x.xx.|.....x.....|...xx......|..x.x......|.xxxx.xx...|xxxxxx.....|.xxxxx.xx..|.....xx..xx|....x.xxx..|.......xx.. at (3,10)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=3  (0,3)=0  (0,4)=3  (0,6)=0  (0,8)=0  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,3)=0  (1,4)=3  (1,6)=0  (1,15)=3  (1,18)=0  (1,19)=3  (2,0)=3  (2,1)=3  (2,2)=0  (2,3)=3  (2,4)=0  (2,5)=0  (2,6)=3  (2,11)=3  (2,16)=3  (2,17)=0  (2,18)=0  (2,19)=3  (3,2)=3  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,14)=0  (3,18)=0  (3,19)=0  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=0  (4,4)=4  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,14)=0  (4,16)=3  (4,17)=0  (4,20)=0  (5,0)=3  (5,4)=4  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (5,20)=0  (6,1)=0  (6,3)=0  (6,4)=4  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (7,0)=0  (7,2)=0  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,1)=0  (8,5)=0  (8,7)=0  (8,9)=0  (8,10)=3  (8,12)=3  (8,13)=3  (9,0)=0  (9,2)=3  (9,3)=0  (9,4)=3  (9,5)=0  (9,7)=3  (9,11)=0  (9,18)=3  (10,0)=3  (10,1)=0  (10,3)=0  (10,5)=0  (10,6)=0  (10,9)=0  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,2)=0  (11,3)=3  (11,9)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,17)=3  (12,0)=3  (12,3)=0  (12,5)=0  (12,8)=0  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,4)=0  (13,6)=0  (13,8)=0  (13,9)=3  (13,15)=3  (13,18)=3  (14,0)=0  (14,1)=0  (14,5)=3  (14,7)=0  (14,8)=0  (14,10)=3  (14,13)=3  (14,17)=3  (14,20)=0  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,19)=3  (15,20)=0  (16,4)=3  (16,5)=0  (16,6)=0  (16,7)=3  (16,8)=3  (16,18)=3  (16,20)=0  (17,1)=0  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,20)=3  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=0  (18,8)=0  (18,9)=3  (18,11)=3  (18,14)=3  (19,0)=0  (19,1)=3  (19,2)=0  (19,6)=0  (19,7)=0  (19,8)=0  (19,13)=3  (19,19)=3  (20,1)=3  (20,5)=0  (20,6)=0  (20,7)=3  (20,9)=0  (20,10)=3  (20,12)=0  (20,16)=3 
   (5384.1 bits)
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (11,11) and color black and mask .x.........|.x.........|x..........|.xxx...x...|..x.x.xx...|....x.xxx..|...xxx....x|....x..xx.x|....x.x.xx.|.....x.....|...xx...... at (3,10)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=3  (0,3)=0  (0,4)=3  (0,6)=0  (0,8)=0  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,3)=0  (1,4)=3  (1,6)=0  (1,15)=3  (1,18)=0  (1,19)=3  (2,0)=3  (2,1)=3  (2,2)=0  (2,3)=3  (2,4)=0  (2,5)=0  (2,6)=3  (2,11)=3  (2,16)=3  (2,17)=0  (2,18)=0  (2,19)=3  (3,2)=3  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,14)=0  (3,18)=0  (3,19)=0  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=0  (4,4)=4  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,14)=0  (4,16)=3  (4,17)=0  (4,20)=0  (5,0)=3  (5,4)=4  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (5,20)=0  (6,1)=0  (6,3)=0  (6,4)=4  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (7,0)=0  (7,2)=0  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,1)=0  (8,5)=0  (8,7)=0  (8,9)=0  (8,10)=3  (8,12)=3  (8,13)=3  (9,0)=0  (9,2)=3  (9,3)=0  (9,4)=3  (9,5)=0  (9,7)=3  (9,11)=0  (9,18)=3  (10,0)=3  (10,1)=0  (10,3)=0  (10,5)=0  (10,6)=0  (10,9)=0  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,2)=0  (11,3)=3  (11,9)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,17)=3  (12,0)=3  (12,3)=0  (12,5)=0  (12,8)=0  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,4)=0  (13,6)=0  (13,8)=0  (13,9)=3  (13,15)=3  (13,18)=3  (14,0)=0  (14,1)=0  (14,5)=3  (14,7)=0  (14,8)=0  (14,10)=4  (14,11)=4  (14,12)=4  (14,13)=4  (14,14)=4  (14,15)=4  (14,17)=3  (14,20)=0  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,10)=4  (15,11)=0  (15,12)=0  (15,13)=0  (15,14)=0  (15,15)=4  (15,16)=0  (15,17)=0  (15,19)=3  (15,20)=0  (16,4)=3  (16,5)=0  (16,6)=0  (16,7)=3  (16,8)=3  (16,10)=4  (16,11)=0  (16,12)=0  (16,13)=0  (16,14)=0  (16,15)=4  (16,18)=3  (16,20)=0  (17,1)=0  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=4  (17,11)=0  (17,12)=0  (17,13)=0  (17,14)=0  (17,15)=4  (17,17)=0  (17,18)=0  (17,20)=3  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=0  (18,8)=0  (18,9)=3  (18,10)=4  (18,11)=4  (18,12)=4  (18,13)=4  (18,14)=4  (18,15)=4  (18,16)=0  (18,19)=0  (18,20)=0  (19,0)=0  (19,1)=3  (19,2)=0  (19,6)=0  (19,7)=0  (19,8)=0  (19,13)=3  (19,14)=0  (19,16)=0  (19,17)=0  (19,18)=0  (19,19)=3  (20,1)=3  (20,5)=0  (20,6)=0  (20,7)=3  (20,9)=0  (20,10)=3  (20,12)=0  (20,16)=3  (20,17)=0  (20,18)=0 
   (6300.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (18,11) and color black and mask .x.........|.x.........|x..........|.xxx...x...|..x.x.xx...|....x.xxx..|...xxx....x|....x..xx.x|....x.x.xx.|.....x.....|...xx......|..x.x......|.xxxx.xx...|xxxxxx.....|.xxxxx.xx..|.....xx..xx|....x.xxx..|.......xx.. at (3,10)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=3  (0,3)=0  (0,4)=3  (0,6)=0  (0,8)=0  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,3)=0  (1,4)=3  (1,6)=0  (1,15)=3  (1,18)=0  (1,19)=3  (2,0)=3  (2,1)=3  (2,2)=0  (2,3)=3  (2,4)=0  (2,5)=0  (2,6)=3  (2,11)=3  (2,16)=3  (2,17)=0  (2,18)=0  (2,19)=3  (3,2)=3  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,12)=3  (3,14)=0  (3,18)=0  (3,19)=0  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=0  (4,4)=4  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,14)=0  (4,16)=3  (4,17)=0  (4,20)=0  (5,0)=3  (5,4)=4  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=4  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (5,20)=0  (6,1)=0  (6,3)=0  (6,4)=4  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (7,0)=0  (7,2)=0  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (8,1)=0  (8,5)=0  (8,7)=0  (8,9)=0  (8,10)=3  (8,12)=3  (8,13)=3  (9,0)=0  (9,2)=3  (9,3)=0  (9,4)=3  (9,5)=0  (9,7)=3  (9,11)=0  (9,18)=3  (10,0)=3  (10,1)=0  (10,3)=0  (10,5)=0  (10,6)=0  (10,9)=0  (10,10)=3  (10,11)=3  (10,13)=3  (10,15)=3  (10,16)=3  (10,19)=3  (11,1)=3  (11,2)=0  (11,3)=3  (11,9)=0  (11,10)=0  (11,11)=0  (11,12)=0  (11,17)=3  (12,0)=3  (12,3)=0  (12,5)=0  (12,8)=0  (12,9)=3  (12,14)=3  (13,0)=3  (13,1)=3  (13,2)=3  (13,4)=0  (13,6)=0  (13,8)=0  (13,9)=3  (13,15)=3  (13,18)=3  (14,0)=0  (14,1)=0  (14,5)=3  (14,7)=0  (14,8)=0  (14,10)=3  (14,13)=3  (14,17)=3  (14,20)=0  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,19)=3  (15,20)=0  (16,4)=3  (16,5)=0  (16,6)=0  (16,7)=3  (16,8)=3  (16,18)=3  (16,20)=0  (17,1)=0  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,20)=3  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=0  (18,8)=0  (18,9)=3  (18,11)=3  (18,14)=3  (19,0)=0  (19,1)=3  (19,2)=0  (19,6)=0  (19,7)=0  (19,8)=0  (19,13)=3  (19,19)=3  (20,1)=3  (20,5)=0  (20,6)=0  (20,7)=3  (20,9)=0  (20,10)=3  (20,12)=0  (20,16)=3 
! 299 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color red and layers
  _0: a rectangle with size (9,13) and color black and mask .x.x.........|x.x..........|.x...........|x..x.........|.x.x.....x...|..x......xxxx|...x.x..x....|....x.x.x....|.......xx.... at (6,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=3  (0,3)=0  (0,4)=3  (0,6)=0  (0,8)=0  (0,9)=3  (0,10)=3  (0,19)=3  (0,20)=3  (1,0)=3  (1,3)=0  (1,4)=3  (1,6)=0  (1,15)=3  (1,18)=0  (1,19)=3  (2,0)=3  (2,1)=3  (2,2)=0  (2,3)=3  (2,4)=0  (2,5)=0  (2,6)=3  (2,11)=3  (2,16)=3  (2,17)=0  (2,18)=0  (2,19)=3  (3,2)=3  (3,4)=4  (3,5)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=3  (3,11)=0  (3,12)=3  (3,14)=0  (3,18)=0  (3,19)=0  (3,20)=3  (4,0)=3  (4,1)=3  (4,3)=0  (4,4)=4  (4,5)=0  (4,6)=0  (4,7)=0  (4,8)=0  (4,9)=4  (4,11)=0  (4,14)=0  (4,16)=3  (4,17)=0  (4,20)=0  (5,0)=3  (5,4)=4  (5,5)=0  (5,6)=0  (5,7)=0  (5,8)=0  (5,9)=4  (5,10)=0  (5,11)=3  (5,14)=3  (5,17)=3  (5,18)=3  (5,20)=0  (6,4)=4  (6,5)=0  (6,6)=0  (6,7)=0  (6,8)=0  (6,9)=4  (6,11)=0  (6,12)=0  (6,13)=0  (6,17)=0  (7,4)=4  (7,5)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (7,12)=0  (7,14)=0  (7,16)=0  (7,17)=0  (8,5)=0  (8,7)=0  (8,9)=0  (8,10)=3  (8,12)=3  (8,13)=3  (8,14)=0  (8,16)=0  (8,17)=0  (8,18)=0  (9,2)=3  (9,4)=3  (9,5)=0  (9,7)=3  (9,11)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,18)=3  (9,20)=0  (10,0)=3  (10,5)=0  (10,6)=0  (10,10)=3  (10,11)=3  (10,13)=3  (10,14)=0  (10,15)=3  (10,16)=3  (10,17)=0  (10,18)=0  (10,19)=3  (10,20)=0  (11,1)=3  (11,3)=3  (11,14)=0  (11,16)=0  (11,17)=3  (11,18)=0  (11,19)=0  (12,0)=3  (12,9)=3  (12,14)=3  (12,15)=0  (13,0)=3  (13,1)=3  (13,2)=3  (13,9)=3  (13,13)=0  (13,14)=0  (13,15)=3  (13,18)=3  (14,0)=0  (14,1)=0  (14,5)=3  (14,10)=3  (14,12)=0  (14,13)=3  (14,14)=0  (14,17)=3  (14,20)=0  (15,5)=3  (15,7)=3  (15,8)=3  (15,9)=3  (15,11)=0  (15,12)=0  (15,13)=0  (15,14)=0  (15,16)=0  (15,17)=0  (15,19)=3  (15,20)=0  (16,4)=3  (16,5)=0  (16,6)=0  (16,7)=3  (16,8)=3  (16,10)=0  (16,11)=0  (16,12)=0  (16,13)=0  (16,14)=0  (16,15)=0  (16,18)=3  (16,20)=0  (17,1)=0  (17,2)=3  (17,6)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,11)=0  (17,12)=0  (17,13)=0  (17,14)=0  (17,15)=0  (17,17)=0  (17,18)=0  (17,20)=3  (18,2)=0  (18,3)=0  (18,4)=0  (18,5)=0  (18,6)=0  (18,7)=0  (18,8)=0  (18,9)=3  (18,11)=3  (18,14)=3  (18,15)=0  (18,16)=0  (18,19)=0  (18,20)=0  (19,0)=0  (19,1)=3  (19,2)=0  (19,6)=0  (19,7)=0  (19,8)=0  (19,13)=3  (19,14)=0  (19,16)=0  (19,17)=0  (19,18)=0  (19,19)=3  (20,1)=3  (20,5)=0  (20,6)=0  (20,7)=3  (20,9)=0  (20,10)=3  (20,12)=0  (20,16)=3  (20,17)=0  (20,18)=0 
! 301 wrong pixels (generated / expected)

TRAIN 890034e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (21,21) and color blue and mask ..x.xxxx..x.x..xxx.x.|xxx..x.x.xxxx.xxx..xx|xxx...xxxxx.xxx.xx.xx|..xxxxxxxxx.xxx..xxxx|..x.xx..xx.xx..x.xxx.|x..xx.xxxxx.x..xx....|.xx...xx.xx.x..xx.xxx|xxx..x.x..xx...x.xxx.|x.x.x...xxx....xxx.x.|.x..xx.xxxxxxxxx.xx.x|.xxx.x.xxxx.xxxx.xxxx|.xxx..x.x.xxxxx..xxx.|.x..xxxxxxxxx...xxxxx|x....x...xx.x..x..xxx|.....x.x.x.xxxxxxxxx.|.....xx..xxx..xxx.xxx|.....x....x.xxx.x.x.x|.....xx.x.x.x.xxxxxxx|.....x...xxxx.xx..xxx|.....xxxxxxxxxxx..xx.|....x.x.x.xxxxxx.xxxx at (0,0)
diff: 
delta: (0,1)=2  (0,13)=2  (0,20)=2  (1,4)=2  (1,6)=2  (1,18)=2  (2,4)=2  (2,5)=2  (2,18)=2  (3,0)=2  (3,1)=2  (3,15)=2  (4,1)=2  (4,6)=2  (4,7)=2  (4,20)=2  (5,19)=2  (7,3)=2  (7,4)=2  (7,8)=2  (7,9)=2  (7,12)=2  (7,20)=2  (8,7)=2  (12,15)=2  (13,1)=3  (13,2)=3  (13,3)=3  (13,4)=3  (13,6)=2  (13,8)=2  (14,0)=2  (14,1)=3  (14,4)=3  (15,0)=1  (15,1)=3  (15,4)=3  (15,7)=2  (15,13)=2  (16,0)=1  (16,1)=3  (16,4)=3  (16,6)=2  (16,11)=2  (16,15)=2  (17,0)=1  (17,1)=3  (17,4)=3  (18,1)=3  (18,4)=3  (18,7)=2  (18,17)=2  (19,0)=1  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2 
! 321 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (21,21) and color blue and layers
  _0: a rectangle with size (9,8) and color black and mask x..x....|.xx..x..|x..xxx..|......x.|.x.x.xx.|x.xx..x.|x...x.x.|x...xx.x|x.xx.... at (4,0)
diff: 
delta: (0,0)=0  (0,1)=2  (0,3)=0  (0,8)=0  (0,9)=0  (0,11)=0  (0,13)=2  (0,14)=0  (0,18)=0  (0,20)=2  (1,3)=0  (1,4)=2  (1,6)=2  (1,8)=0  (1,13)=0  (1,17)=0  (1,18)=2  (2,3)=0  (2,4)=2  (2,5)=2  (2,11)=0  (2,15)=0  (2,18)=2  (3,0)=2  (3,1)=2  (3,11)=0  (3,15)=2  (3,16)=0  (4,1)=2  (4,6)=2  (4,7)=2  (4,10)=0  (4,13)=0  (4,14)=0  (4,16)=0  (4,20)=2  (5,11)=0  (5,13)=0  (5,14)=0  (5,17)=0  (5,18)=0  (5,19)=2  (5,20)=0  (6,8)=0  (6,11)=0  (6,13)=0  (6,14)=0  (6,17)=0  (7,3)=2  (7,4)=2  (7,8)=2  (7,9)=2  (7,12)=2  (7,13)=0  (7,14)=0  (7,16)=0  (7,20)=2  (8,7)=2  (8,11)=0  (8,12)=0  (8,13)=0  (8,14)=0  (8,18)=0  (8,20)=0  (9,16)=0  (9,19)=0  (10,11)=0  (10,16)=0  (11,9)=0  (11,15)=0  (11,16)=0  (11,20)=0  (12,13)=0  (12,14)=0  (12,15)=2  (13,1)=3  (13,2)=3  (13,3)=3  (13,4)=3  (13,6)=2  (13,7)=0  (13,8)=2  (13,11)=0  (13,13)=0  (13,14)=0  (13,16)=0  (13,17)=0  (14,0)=2  (14,1)=3  (14,2)=0  (14,3)=0  (14,4)=3  (14,6)=0  (14,8)=0  (14,10)=0  (14,20)=0  (15,1)=3  (15,2)=0  (15,3)=0  (15,4)=3  (15,7)=2  (15,8)=0  (15,12)=0  (15,13)=2  (15,17)=0  (16,1)=3  (16,2)=0  (16,3)=0  (16,4)=3  (16,6)=2  (16,7)=0  (16,8)=0  (16,9)=0  (16,11)=2  (16,15)=2  (16,17)=0  (16,19)=0  (17,1)=3  (17,2)=0  (17,3)=0  (17,4)=3  (17,7)=0  (17,9)=0  (17,11)=0  (17,13)=0  (18,0)=0  (18,1)=3  (18,2)=0  (18,3)=0  (18,4)=3  (18,6)=0  (18,7)=2  (18,8)=0  (18,13)=0  (18,16)=0  (18,17)=2  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,16)=0  (19,17)=0  (19,20)=0  (20,3)=2  (20,5)=0  (20,7)=0  (20,9)=0  (20,16)=0 
! 322 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (21,21) and color blue and layers
  _0: a rectangle with size (7,4) and color green and mask Full at (13,1)
diff: 
delta: (0,0)=0  (0,1)=2  (0,3)=0  (0,8)=0  (0,9)=0  (0,11)=0  (0,13)=2  (0,14)=0  (0,18)=0  (0,20)=2  (1,3)=0  (1,4)=2  (1,6)=2  (1,8)=0  (1,13)=0  (1,17)=0  (1,18)=2  (2,3)=0  (2,4)=2  (2,5)=2  (2,11)=0  (2,15)=0  (2,18)=2  (3,0)=2  (3,1)=2  (3,11)=0  (3,15)=2  (3,16)=0  (4,0)=0  (4,1)=2  (4,3)=0  (4,6)=2  (4,7)=2  (4,10)=0  (4,13)=0  (4,14)=0  (4,16)=0  (4,20)=2  (5,1)=0  (5,2)=0  (5,5)=0  (5,11)=0  (5,13)=0  (5,14)=0  (5,17)=0  (5,18)=0  (5,19)=2  (5,20)=0  (6,0)=0  (6,3)=0  (6,4)=0  (6,5)=0  (6,8)=0  (6,11)=0  (6,13)=0  (6,14)=0  (6,17)=0  (7,3)=2  (7,4)=2  (7,6)=0  (7,8)=2  (7,9)=2  (7,12)=2  (7,13)=0  (7,14)=0  (7,16)=0  (7,20)=2  (8,1)=0  (8,3)=0  (8,5)=0  (8,6)=0  (8,7)=2  (8,11)=0  (8,12)=0  (8,13)=0  (8,14)=0  (8,18)=0  (8,20)=0  (9,0)=0  (9,2)=0  (9,3)=0  (9,6)=0  (9,16)=0  (9,19)=0  (10,0)=0  (10,4)=0  (10,6)=0  (10,11)=0  (10,16)=0  (11,0)=0  (11,4)=0  (11,5)=0  (11,7)=0  (11,9)=0  (11,15)=0  (11,16)=0  (11,20)=0  (12,0)=0  (12,2)=0  (12,3)=0  (12,13)=0  (12,14)=0  (12,15)=2  (13,6)=2  (13,7)=0  (13,8)=2  (13,11)=0  (13,13)=0  (13,14)=0  (13,16)=0  (13,17)=0  (14,0)=2  (14,2)=0  (14,3)=0  (14,6)=0  (14,8)=0  (14,10)=0  (14,20)=0  (15,2)=0  (15,3)=0  (15,7)=2  (15,8)=0  (15,12)=0  (15,13)=2  (15,17)=0  (16,2)=0  (16,3)=0  (16,6)=2  (16,7)=0  (16,8)=0  (16,9)=0  (16,11)=2  (16,15)=2  (16,17)=0  (16,19)=0  (17,2)=0  (17,3)=0  (17,7)=0  (17,9)=0  (17,11)=0  (17,13)=0  (18,0)=0  (18,2)=0  (18,3)=0  (18,6)=0  (18,7)=2  (18,8)=0  (18,13)=0  (18,16)=0  (18,17)=2  (19,16)=0  (19,17)=0  (19,20)=0  (20,3)=2  (20,5)=0  (20,7)=0  (20,9)=0  (20,16)=0 
! 320 wrong pixels (generated / expected)

TEST 890034e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.0 sec (4.0 sec/task)
bits-train-error = 155837.5 bits (155837.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-192] Checking task 8a004b2b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21406.3 = 21421.9
DL output with Mo: L = 15.6 + 28171.6 = 28187.2
DL input+output M: L = 31.2 + 49577.9 = 49609.1

# learning a model for train pairs
2.000	
1.499	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.305	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.142	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.997	OUT OBJECT at ^.layer_00: ^.layer_01.shape at (?,?)
0.860	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.743	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.688	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.670	OUT OBJECT at ^.layer_010: ^.layer_011.shape at (?,?)
0.659	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
0.644	OUT OBJECT at ^.layer_001: ^.layer_00.shape at (?,?)
0.629	OUT OBJECT at ^.layer_000: ^.layer_00.shape at (?,?)
0.614	OUT OBJECT at ^.layer_0011: ^.layer_00.shape at (?,?)
0.602	OUT DEF: ^.layer_000.pos='(0,0)
0.591	IN  OBJECT at ^.layer_001: a point with color ? at (?,?)
0.580	OUT DEF: ^.layer_00.pos=translationOnto(^.layer_00, ^.layer_01) + 1
0.570	OUT DEF: ^.layer_010.pos=translationOnto(^.layer_00, ^.layer_01) + span(^.layer_01.pos, ^.layer_011.pos)
0.560	OUT DEF: ^.size.j=span(^.layer_001.pos.j, ^.layer_00.pos.j)
0.553	IN  DEF: ^.layer_00.shape.color=yellow
0.545	IN  DEF: ^.layer_001.shape.color=yellow
0.539	OUT DEF: ^.layer_0011.pos.j='0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,span(^.layer_001.pos.j, ^.layer_00.pos.j)) and color ? and layers
  _000: ^.layer_00.shape at '(0,0)
  _00: ^.layer_01.shape at translationOnto(^.layer_00, ^.layer_01) + 1
  _001: ^.layer_00.shape at (?,?)
  _0011: ^.layer_00.shape at (?,'0)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_011.shape at translationOnto(^.layer_00, ^.layer_01) + span(^.layer_01.pos, ^.layer_011.pos)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color yellow at (?,?)
  _001: a point with color yellow at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 188.6 + 8688.2 = 8876.8
DL output with Mo: L = 325.8 + 3185.7 = 3511.5
DL input+output M: L = 514.4 + 11873.9 = 12388.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color black and layers
  _00: a point with color yellow at (0,2)
  _001: a point with color yellow at (0,15)
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (2,3)
  _011: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,11)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (6,7)
diff: 
delta: (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
   (305.4 bits)
data: a background with size (9,14) and color black and layers
  _000: a point with color yellow at (0,0)
  _00: a rectangle with size (2,2) and color green and mask Full (and Border) at (2,1)
  _001: a point with color yellow at (0,13)
  _0011: a point with color yellow at (8,0)
  _0: a rectangle with size (4,10) and color blue and mask xxxx..xxxx|xxxx..xxxx|..xxxxxx..|..xxxxxx.. at (4,1)
  _010: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,9)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (8,13)
diff: 
delta:
   (133.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _00: a point with color yellow at (0,2)
  _001: a point with color yellow at (0,15)
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (2,3)
  _011: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,11)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (6,7)
diff: 
delta: (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
! size mismatch, 10x14 instead of 9x14
>> Trial 2
data: a background with size (17,17) and color black and layers
  _00: a point with color yellow at (0,2)
  _001: a point with color yellow at (0,15)
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (2,3)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (6,7)
  _0111: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,11)
diff: 
delta: (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
! size mismatch, 10x14 instead of 9x14
>> Trial 3
data: a background with size (17,17) and color black and layers
  _00: a point with color yellow at (0,2)
  _001: a point with color yellow at (0,15)
  _0: a rectangle with size (2,5) and color blue and mask xx.xx|.xxx. at (13,2)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,11)
  _011: a rectangle with size (2,2) and color green and mask Full (and Border) at (2,3)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (6,7)
diff: 
delta: (8,2)=4  (8,15)=4  (12,2)=3  (12,6)=2 
! size mismatch, 10x14 instead of 9x14

TRAIN 8a004b2b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,18) and color black and layers
  _00: a point with color yellow at (1,2)
  _001: a point with color yellow at (1,8)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (4,5)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,2)
  _0111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
diff: 
delta: (7,8)=4  (13,10)=2  (14,11)=8 
   (265.3 bits)
data: a background with size (7,7) and color black and layers
  _000: a point with color yellow at (0,0)
  _00: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (3,3)
  _001: a point with color yellow at (0,6)
  _0011: a point with color yellow at (6,0)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
  _010: a rectangle with size (1,1) and color yellow and mask Full at (6,6)
  _01: a rectangle with size (4,4) and color green and mask Full at (1,1)
diff: 
delta:
   (90.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _00: a point with color yellow at (1,2)
  _001: a point with color yellow at (1,8)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (4,5)
  _011: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (7,2)
diff: 
delta: (7,8)=4  (13,10)=2  (14,11)=8 
! size mismatch, 10x7 instead of 7x7
>> Trial 2
data: a background with size (17,18) and color black and layers
  _00: a point with color yellow at (1,2)
  _001: a point with color yellow at (1,8)
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (2,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (4,5)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (7,2)
  _0111: a rectangle with size (2,2) and color green and mask Odd Checkboard at (13,10)
diff: 
delta: (7,8)=4  (13,10)=2  (14,11)=8 
! size mismatch, 10x7 instead of 7x7

TRAIN 8a004b2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _00: a point with color yellow at (0,3)
  _001: a point with color yellow at (0,13)
  _0: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _01: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (13,7)
diff: 
delta: (10,3)=4  (10,13)=4  (13,6)=2  (14,7)=3 
   (298.1 bits)
data: a background with size (11,11) and color black and layers
  _000: a point with color yellow at (0,0)
  _00: a rectangle with size (3,3) and color red and mask Full at (3,1)
  _001: a point with color yellow at (0,10)
  _0011: a point with color yellow at (10,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (10,10)
  _010: a rectangle with size (3,3) and color green and mask Full at (6,4)
  _01: a rectangle with size (6,6) and color blue and mask Full at (3,4)
diff: 
delta:
   (94.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _00: a point with color yellow at (0,3)
  _001: a point with color yellow at (0,13)
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (13,7)
diff: 
delta: (10,3)=4  (10,13)=4  (13,6)=2  (14,7)=3 
! size mismatch, 10x11 instead of 11x11
>> Trial 2
data: a background with size (16,18) and color black and layers
  _00: a point with color yellow at (0,3)
  _001: a point with color yellow at (0,13)
  _0: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _011: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (13,7)
diff: 
delta: (10,3)=4  (10,13)=4  (13,6)=2  (14,7)=3 
! size mismatch, 10x11 instead of 11x11
>> Trial 3
data: a background with size (16,18) and color black and layers
  _00: a point with color yellow at (0,3)
  _001: a point with color yellow at (0,13)
  _0: a rectangle with size (3,3) and color blue and mask Full at (3,10)
  _01: a rectangle with size (3,3) and color red and mask Full at (3,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (6,7)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (13,7)
diff: 
delta: (10,3)=4  (10,13)=4  (13,6)=2  (14,7)=3 
! size mismatch, 10x11 instead of 11x11

TRAIN 8a004b2b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  _00: a point with color yellow at (0,0)
  _001: a point with color yellow at (0,17)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (2,4)
  _01: a rectangle with size (4,4) and color green and mask Full at (2,12)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (16,8)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (13,0)
diff: 
delta: (13,17)=4  (15,8)=8  (15,10)=3 
! size mismatch, 10x18 instead of 14x18
>> Trial 2
data: a background with size (19,18) and color black and layers
  _00: a point with color yellow at (0,0)
  _001: a point with color yellow at (0,17)
  _0: a rectangle with size (4,4) and color cyan and mask Full at (2,4)
  _01: a rectangle with size (2,3) and color blue and mask xxx|.x. at (16,8)
  _011: a rectangle with size (4,4) and color green and mask Full at (2,12)
  _0111: a rectangle with size (1,1) and color yellow and mask Full at (13,0)
diff: 
delta: (13,17)=4  (15,8)=8  (15,10)=3 
! size mismatch, 10x18 instead of 14x18

TEST 8a004b2b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 3185.7 bits (3185.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-191] Checking task 8be77c9e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2795.2 = 2810.9
DL output with Mo: L = 15.6 + 5246.2 = 5261.9
DL input+output M: L = 31.2 + 8041.5 = 8072.7

# learning a model for train pairs
2.000	
1.409	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.936	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.877	IN  DEF: ^.layer_0.shape.color=blue
0.830	OUT DEF: ^.size.i=^.size.i * 2
0.793	OUT DEF: ^.size.j=^.size.j
0.759	OUT DEF: ^.layer_0.shape.size.i=bottom(^.layer_0) * 2
0.728	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.701	IN  DEF: ^.color=black
0.679	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.657	OUT DEF: ^.layer_0.pos.i=area(^.layer_0.shape) - ^.layer_0.shape.size.j

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i * 2,^.size.j) and color ? and layers
  _0: a rectangle with size (bottom(^.layer_0) * 2,^.layer_0.shape.size.j) and color ? and mask ? at (area(^.layer_0.shape) - ^.layer_0.shape.size.j,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 1189.0 = 1239.3
DL output with Mo: L = 110.0 + 1027.0 = 1137.0
DL input+output M: L = 160.3 + 2216.1 = 2376.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xx.|xxx at (0,0)
diff: 
delta:
   (42.3 bits)
data: a background with size (6,3) and color blue and layers
  _0: a rectangle with size (2,3) and color black and mask Full (and Border) at (2,0)
diff: 
delta: (0,2)=0  (5,2)=0 
   (65.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask xx.|xxx at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (0,0)
diff: 
delta: (1,2)=1 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask Full (and Border) at (0,0)
diff: 
delta: (0,2)=0 
! 13 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask x.x|xx. at (1,0)
diff: 
delta:
   (43.9 bits)
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask x.x|xx.|xx.|x.x at (1,0)
diff: 
delta:
   (25.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask x.x|xx. at (1,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (2,0)
diff: 
delta: (1,0)=1  (1,2)=1 
! 11 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,0)
diff: 
delta: (1,2)=1  (2,1)=1 
! 8 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta:
   (32.8 bits)
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (4,1) and color blue and mask Full at (1,2)
diff: 
delta:
   (11.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (1,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 8be77c9e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
diff: 
delta: (2,0)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,0)
diff: 
delta: (1,2)=1 
! 6 wrong pixels (generated / expected)

TEST 8be77c9e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 1027.0 bits (1027.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-190] Checking task 8d5021e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1838.6 = 1854.2
DL output with Mo: L = 15.6 + 9302.8 = 9318.4
DL input+output M: L = 31.2 + 11141.4 = 11172.6

# learning a model for train pairs
2.000	
1.559	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.423	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.272	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.242	OUT DEF: ^.size.i=^.size.i * 3
1.220	OUT DEF: ^.size.j=^.size.j + 2
1.203	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i * 2
1.135	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.118	OUT DEF: ^.layer_01.pos.i='0
1.103	OUT DEF: ^.layer_01.pos='(0,0)
1.095	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i * 3,^.size.j + 2) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i * 2,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 56.6 + 1265.6 = 1322.2
DL output with Mo: L = 106.1 + 3454.5 = 3560.5
DL input+output M: L = 162.7 + 4720.0 = 4882.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,2) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (2,1)
diff: 
delta:
   (40.0 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (9,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (0,0)
diff: 
delta: (1,0)=0  (1,3)=0  (4,0)=0  (4,3)=0  (7,0)=0  (7,3)=0 
   (194.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (2,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color cyan at (0,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,2) and color red and layers
  _0: a point with color black at (2,1)
  _01: a point with color black at (0,1)
diff: 
delta:
   (46.5 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (4,0)
  _01: a rectangle with size (9,4) and color red and mask .xx.|xxxx|.xx.|.xx.|xxxx|.xx.|.xx.|xxxx|.xx. at (0,0)
diff: 
delta:
   (86.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color red and layers
  _0: a point with color black at (0,1)
  _01: a point with color black at (2,1)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color red and layers
  _0: a point with color black at (2,1)
  _01: a point with color black at (0,1)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,2) and color black and layers
  _0: a point with color grey at (2,0)
  _01: a point with color grey at (1,1)
diff: 
delta:
   (40.0 bits)
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x-cross at (4,0)
  _01: a rectangle with size (2,4) and color grey and mask .xx.|x..x at (0,0)
diff: 
delta:
   (64.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (2,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,2) and color black and layers
  _0: a point with color grey at (2,0)
  _01: a point with color grey at (1,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 8d5021e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,2) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color green at (0,1)
diff: 
delta: (1,0)=3  (2,0)=3  (2,1)=3 
! 31 wrong pixels (generated / expected)

TEST 8d5021e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.4 sec (1.4 sec/task)
bits-train-error = 3454.5 bits (3454.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-189] Checking task 8d510a79.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9831.1 = 9846.7
DL output with Mo: L = 15.6 + 15833.7 = 15849.3
DL input+output M: L = 31.2 + 25664.7 = 25695.9

# learning a model for train pairs
2.000	
1.562	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.246	OUT OBJECT at ^.layer_0: ^.layer_0
1.161	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.075	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.005	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.979	OUT DEF: ^.size=^.size
0.954	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.928	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.902	OUT OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.888	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.855	OUT OBJECT at ^.layer_010: ^.layer_01
0.840	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.829	IN  DEF: ^.layer_0.shape.color=grey
0.818	IN  DEF: ^.layer_01.shape.color=blue
0.802	OUT OBJECT at ^.layer_0110: ^.layer_011
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 93.3 + 4921.9 = 5015.2
DL output with Mo: L = 218.9 + 4417.0 = 4635.9
DL input+output M: L = 312.3 + 9338.9 = 9651.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (1,6)
diff: 
delta: (2,1)=2  (2,9)=2  (8,1)=1  (8,5)=2  (8,8)=1 
   (208.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _010: a point with color blue at (0,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,1)
  _0110: a point with color blue at (1,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,9)
  _0111: a rectangle with size (3,1) and color red and mask Full at (6,5)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (8,1)
  _011111: a rectangle with size (2,1) and color blue and mask Full at (8,8)
  _0111111: a rectangle with size (2,1) and color blue and mask Full at (0,6)
diff: 
delta:
   (179.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (1,6)
diff: 
delta: (2,1)=2  (2,9)=2  (8,1)=1  (8,5)=2  (8,8)=1 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (5,0)
  _01: a point with color blue at (0,2)
  _011: a point with color red at (2,1)
diff: 
delta: (1,6)=1  (2,9)=2  (8,1)=1  (8,5)=2  (8,8)=1 
! 18 wrong pixels (generated / expected)

TRAIN 8d510a79.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (0,3)
  _011: a point with color red at (1,5)
diff: 
delta: (0,1)=2  (1,7)=1  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
   (284.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _010: a point with color blue at (0,3)
  _01: a rectangle with size (5,1) and color red and mask Full at (4,6)
  _0110: a point with color red at (1,5)
  _011: a rectangle with size (6,1) and color red and mask Full at (0,1)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (6,4)
  _01111: a rectangle with size (2,1) and color blue and mask Full at (0,7)
  _011111: a rectangle with size (2,1) and color red and mask Full at (4,9)
  _0111111: a rectangle with size (2,1) and color blue and mask Full at (8,2)
diff: 
delta: (2,5)=2  (8,8)=1  (9,8)=1 
   (262.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (0,3)
  _011: a point with color red at (0,1)
diff: 
delta: (1,5)=2  (1,7)=1  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (0,3)
  _011: a point with color red at (1,5)
diff: 
delta: (0,1)=2  (1,7)=1  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (3,0)
  _01: a point with color blue at (1,7)
  _011: a point with color red at (0,1)
diff: 
delta: (0,3)=1  (1,5)=2  (5,1)=2  (5,9)=2  (6,4)=1  (8,2)=1  (8,6)=2  (8,8)=1 
! 26 wrong pixels (generated / expected)

TRAIN 8d510a79.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (4,0)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (1,1)
diff: 
delta: (1,8)=2  (2,6)=1  (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (4,0)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (1,8)
diff: 
delta: (1,1)=2  (2,6)=1  (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color grey and mask Full at (4,0)
  _01: a point with color blue at (2,6)
  _011: a point with color red at (1,1)
diff: 
delta: (1,3)=1  (1,8)=2  (7,2)=1  (7,5)=2  (8,0)=2  (9,8)=1 
! 24 wrong pixels (generated / expected)

TEST 8d510a79.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.5 sec (24.5 sec/task)
bits-train-error = 4417.0 bits (4417.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-188] Checking task 8e1813be.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 53321.4 = 53337.0
DL output with Mo: L = 15.6 + 11927.2 = 11942.8
DL input+output M: L = 31.2 + 65248.6 = 65279.8

# learning a model for train pairs
2.000	
1.710	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.535	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.358	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.190	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.035	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.907	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.794	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.772	OUT DEF: ^.layer_0.pos='(0,0)
0.756	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.731	OUT DEF: ^.layer_01.shape.size=min(^.layer_0.shape.size, ^.layer_011.shape.size)
0.705	OUT DEF: ^.layer_011.shape.size=min(^.layer_0.shape.size, ^.layer_011.shape.size)
0.691	OUT DEF: ^.layer_011.shape.color=yellow
0.671	OUT DEF: ^.layer_01.pos=min(^.layer_0.pos, ^.layer_011.pos)
0.661	OUT DEF: ^.layer_011.pos.j=^.layer_0111.pos.j
0.651	OUT DEF: ^.layer_0.shape.size.i=^.layer_011.shape.size.i
0.643	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.635	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.626	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.625	IN  DEF: ^.layer_0.shape.mask=Full
0.623	IN  DEF: ^.layer_01.shape.mask=Full
0.621	IN  DEF: ^.layer_011.shape.mask=Full
0.619	IN  DEF: ^.layer_0111.shape.mask=Full
0.617	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (^.layer_011.shape.size.i,^.layer_0.shape.size.j) and color ? and mask ^.layer_0.shape.mask at '(0,0)
  _01: a rectangle with size min(^.layer_0.shape.size, ^.layer_011.shape.size) and color ? and mask ^.layer_01.shape.mask at min(^.layer_0.pos, ^.layer_011.pos)
  _011: a rectangle with size min(^.layer_0.shape.size, ^.layer_011.shape.size) and color yellow and mask ^.layer_011.shape.mask at (?,^.layer_0111.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 144.3 + 14004.5 = 14148.7
DL output with Mo: L = 201.8 + 4004.8 = 4206.6
DL input+output M: L = 346.0 + 18009.3 = 18355.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask Full at (10,1)
  _01: a rectangle with size (1,15) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,15) and color blue and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color green and mask Full at (8,0)
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6 
   (930.0 bits)
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,6) and color pink and mask Full at (5,0)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (3,0)
diff: 
delta: (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8 
   (330.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask Full at (10,1)
  _01: a rectangle with size (1,15) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,15) and color blue and mask Full at (5,0)
  _0111: a rectangle with size (1,15) and color green and mask Full at (8,0)
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (18,15) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask Full at (10,1)
  _01: a rectangle with size (1,15) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,15) and color green and mask Full at (8,0)
  _0111: a rectangle with size (1,15) and color blue and mask Full at (5,0)
diff: 
delta: (11,8)=4  (11,9)=4  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=4  (11,14)=4  (14,8)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=8  (14,14)=8  (17,0)=6  (17,1)=6  (17,2)=6  (17,3)=6  (17,4)=6  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=6  (17,13)=6  (17,14)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN 8e1813be.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
diff: 
delta:
   (142.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (0,2)
diff: 
delta:
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _011: a rectangle with size (7,1) and color blue and mask Full at (5,2)
  _0111: a rectangle with size (3,3) and color grey and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3
>> Trial 3
data: a background with size (12,10) and color black and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,5)
  _01: a rectangle with size (3,3) and color grey and mask Full at (1,1)
  _011: a rectangle with size (12,1) and color yellow and mask Full at (0,8)
  _0111: a rectangle with size (7,1) and color blue and mask Full at (5,2)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN 8e1813be.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (1,6)
  _01: a rectangle with size (1,12) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (1,12) and color blue and mask Full at (10,0)
  _0111: a rectangle with size (1,5) and color red and mask Full at (1,0)
diff: 
delta: (1,11)=2  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,11)=8 
   (328.3 bits)
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (1,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (2,0)
diff: 
delta:
   (39.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (1,6)
  _01: a rectangle with size (1,12) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (1,12) and color blue and mask Full at (10,0)
  _0111: a rectangle with size (1,5) and color red and mask Full at (1,0)
diff: 
delta: (1,11)=2  (4,0)=8  (4,1)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,11)=8 
! size mismatch, 10x10 instead of 4x4

TRAIN 8e1813be.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask Full at (1,8)
  _01: a rectangle with size (1,19) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (1,19) and color pink and mask Full at (12,0)
  _0111: a rectangle with size (1,19) and color blue and mask Full at (15,0)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,16)=2  (0,17)=2  (0,18)=2  (3,0)=3  (3,1)=3  (3,2)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,6)=3  (3,16)=3  (3,17)=3  (3,18)=3  (6,0)=8  (6,1)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,16)=8  (6,17)=8  (6,18)=8  (18,0)=7# (18,1)=7# (18,2)=7# (18,3)=7# (18,4)=7# (18,5)=7# (18,6)=7# (18,7)=7# (18,8)=7# (18,9)=7# (18,10)=7# (18,11)=7# (18,12)=7# (18,13)=7# (18,14)=7# (18,15)=7# (18,16)=7# (18,17)=7# (18,18)=7#
! size mismatch, 10x10 instead of 7x7

TEST 8e1813be.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.3 sec (14.3 sec/task)
bits-train-error = 4004.8 bits (4004.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-187] Checking task 8e5a5113.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11299.8 = 11315.4
DL output with Mo: L = 15.6 + 13606.7 = 13622.3
DL input+output M: L = 31.2 + 24906.5 = 24937.7

# learning a model for train pairs
2.000	
1.774	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.665	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.511	OUT OBJECT at ^.layer_0: ^.layer_01
1.378	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
1.267	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.159	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	OUT OBJECT at ^.layer_00: ^.layer_0
0.886	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.794	OUT DEF: ^.size=^.size
0.773	OUT DEF: ^.layer_01=^.layer_011
0.754	OUT DEF: ^.color=^.layer_010.shape.color
0.739	IN  DEF: ^.layer_01.shape.color=grey
0.724	IN  DEF: ^.layer_011.shape.color=grey
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_010.shape.color and layers
  _00: ^.layer_0
  _0: ^.layer_01
  _01: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 149.8 + 4566.3 = 4716.1
DL output with Mo: L = 117.8 + 4066.4 = 4184.2
DL input+output M: L = 267.6 + 8632.7 = 8900.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,0)
  _010: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (0,2)=2 
   (156.5 bits)
data: a background with size (3,11) and color blue and layers
  _00: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,0)
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,4)
  _0111: a rectangle with size (2,2) and color yellow and mask xx|.x at (0,9)
diff: 
delta: (0,2)=2  (2,6)=2  (2,8)=2 
   (143.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,0)
  _010: a rectangle with size (3,3) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (0,2)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|.xx|..x at (0,0)
  _010: a rectangle with size (2,2) and color yellow and mask Full (and Border) at (1,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (0,2)=2 
! 14 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _010: a rectangle with size (3,2) and color green and mask Full (and Border) at (0,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (2,2)=2 
   (149.1 bits)
data: a background with size (3,11) and color green and layers
  _00: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (1,3) and color pink and mask Full at (0,4)
  _0111: a rectangle with size (3,1) and color pink and mask Full at (0,10)
diff: 
delta: (0,8)=2  (2,2)=2  (2,4)=2 
   (130.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Full (and Border) at (0,1)
  _010: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (2,2)=2 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,0)
  _010: a rectangle with size (3,2) and color green and mask Full (and Border) at (0,1)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (2,2)=2 
! 11 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (0,0)=2 
   (151.1 bits)
data: a background with size (3,11) and color cyan and layers
  _00: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,0)
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,7)
  _011: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,5)
  _0111: a rectangle with size (2,2) and color orange and mask Full (and Border) at (1,9)
diff: 
delta: (0,0)=2  (0,6)=2  (2,10)=2 
   (132.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask Full (and Border) at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (0,0)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (2,2) and color orange and mask .x|xx at (0,0)
  _010: a rectangle with size (3,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (0,0)=2 
! 9 wrong pixels (generated / expected)

TRAIN 8e5a5113.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _010: a rectangle with size (3,3) and color brown and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (2,0)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.xx at (0,0)
  _010: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color grey and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,7)
diff: 
delta: (2,0)=2 
! 17 wrong pixels (generated / expected)

TEST 8e5a5113.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.8 sec (26.8 sec/task)
bits-train-error = 4066.4 bits (4066.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-186] Checking task 8eb1be9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13310.7 = 13326.3
DL output with Mo: L = 15.6 + 44374.2 = 44389.8
DL input+output M: L = 31.2 + 57684.9 = 57716.1

# learning a model for train pairs
2.000	
1.171	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.839	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.829	OUT DEF: ^.size=^.size
0.824	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.706	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.588	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.470	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.364	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.360	OUT DEF: ^.layer_00.shape.size.j=^.size.j
0.355	OUT DEF: ^.layer_0111.shape.size.j=^.size.j
0.351	IN  DEF: ^.color=black
0.348	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.345	OUT DEF: ^.layer_00.pos.j='0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a rectangle with size (?,^.size.j) and color ? and mask ? at (?,'0)
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,^.layer_0.pos.j)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,^.size.j) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2180.7 = 2228.6
DL output with Mo: L = 191.4 + 7717.8 = 7909.2
DL input+output M: L = 239.4 + 9898.4 = 10137.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
diff: 
delta:
   (123.4 bits)
data: a background with size (15,19) and color black and layers
  _00: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (1,0)
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
  _01: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (7,0)
  _011: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (10,0)
  _0111: a rectangle with size (2,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx at (13,0)
diff: 
delta: (0,5)=8  (0,11)=8  (0,17)=8 
   (518.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (3,19) and color cyan and mask ..x.....x.....x....|xxxxxxxxxxxxxxxxxxx|.....x.....x.....x. at (4,0)
diff: 
delta:
! 157 wrong pixels (generated / expected)

TRAIN 8eb1be9a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x. at (3,0)
diff: 
delta:
   (94.7 bits)
data: a background with size (10,12) and color black and layers
  _00: a rectangle with size (1,12) and color red and mask Full at (1,0)
  _0: a rectangle with size (1,12) and color red and mask Full at (4,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,2)
  _0111: a rectangle with size (10,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x.|x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (253.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a rectangle with size (3,12) and color red and mask x.x.x.x.x.x.|xxxxxxxxxxxx|x.x.x.x.x.x. at (3,0)
diff: 
delta:
! 84 wrong pixels (generated / expected)

TRAIN 8eb1be9a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _0: a rectangle with size (3,13) and color blue and mask .x..x..x..x..|x.xx.xx.xx.xx|x.xx.xx.xx.xx at (3,0)
diff: 
delta:
! 114 wrong pixels (generated / expected)

TEST 8eb1be9a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.8 sec (27.8 sec/task)
bits-train-error = 7717.8 bits (7717.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-185] Checking task 8efcae92.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 137195.9 = 137211.5
DL output with Mo: L = 15.6 + 7080.6 = 7096.2
DL input+output M: L = 31.2 + 144276.5 = 144307.7

# learning a model for train pairs
2.000	
1.296	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.204	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.153	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.109	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.072	OUT DEF: ^.color=blue
1.048	OUT DEF: ^.layer_0.shape.color=red
1.028	OUT DEF: ^.layer_0.pos.i=1
1.012	OUT DEF: ^.layer_0.shape.size.j=^.layer_011.pos.j - 2
0.998	OUT DEF: ^.layer_0.shape.size.i=^.layer_011.pos.j / 2
0.996	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
0.976	OUT OBJECT at ^.layer_01: ^.layer_010.shape at (?,?)
0.939	OUT DEF: ^.color=blue
0.920	OUT DEF: ^.layer_01.pos.j=span(^.layer_011.pos.j, ^.layer_010.pos.j)
0.906	OUT DEF: ^.layer_01.pos.i=min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) - 1
0.904	IN  DEF: ^.layer_010.shape.color=red
0.904	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (^.layer_011.pos.j / 2,^.layer_011.pos.j - 2) and color red and mask ? at (1,?)
  _01: ^.layer_010.shape at (min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j) - 1,span(^.layer_011.pos.j, ^.layer_010.pos.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color red at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 135.2 + 27062.1 = 27197.3
DL output with Mo: L = 224.1 + 4782.4 = 5006.5
DL input+output M: L = 359.3 + 31844.5 = 32203.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _010: a point with color red at (5,4)
  _01: a rectangle with size (6,5) and color blue and mask Full at (3,2)
  _011: a rectangle with size (5,6) and color blue and mask Full at (13,6)
diff: 
delta: (2,14)=2  (4,5)=2  (4,11)=2  (4,16)=2  (6,13)=2  (7,3)=2  (14,7)=2  (14,9)=2  (15,8)=2  (15,10)=2  (16,7)=2  (17,9)=2 
   (484.8 bits)
data: a background with size (5,6) and color blue and layers
  _0: a rectangle with size (3,4) and color red and mask x.x.|.x.x|x... at (1,1)
  _01: a point with color red at (4,3)
diff: 
delta:
   (39.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _010: a point with color red at (4,5)
  _01: a rectangle with size (6,5) and color blue and mask Full at (3,2)
  _011: a rectangle with size (5,6) and color blue and mask Full at (13,6)
diff: 
delta: (2,14)=2  (4,11)=2  (4,16)=2  (5,4)=2  (6,13)=2  (7,3)=2  (14,7)=2  (14,9)=2  (15,8)=2  (15,10)=2  (16,7)=2  (17,9)=2 
! size mismatch, 10x10 instead of 5x6
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Full at (1,10)
  _010: a point with color red at (5,4)
  _01: a rectangle with size (6,5) and color blue and mask Full at (3,2)
  _011: a rectangle with size (5,6) and color blue and mask Full at (13,6)
diff: 
delta: (2,14)=2  (4,5)=2  (4,11)=2  (4,16)=2  (6,13)=2  (7,3)=2  (14,7)=2  (14,9)=2  (15,8)=2  (15,10)=2  (16,7)=2  (17,9)=2 
! size mismatch, 10x10 instead of 5x6

TRAIN 8efcae92.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _010: a point with color red at (2,6)
  _01: a rectangle with size (3,1) and color red and mask Full at (8,15)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta: (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (9,3)=2  (9,15)=1  (9,18)=2  (10,5)=2  (10,10)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
   (1152.7 bits)
data: a background with size (9,9) and color blue and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
  _01: a point with color red at (0,4)
diff: 
delta: (1,8)=2  (2,5)=2  (3,3)=2  (3,7)=2  (4,0)=2  (6,5)=2  (7,1)=2  (8,3)=2  (8,8)=2 
   (256.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _010: a point with color red at (2,6)
  _01: a rectangle with size (3,1) and color red and mask Full at (8,15)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta: (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (9,3)=2  (9,15)=1  (9,18)=2  (10,5)=2  (10,10)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,6)=2  (17,12)=2  (18,2)=2 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _010: a point with color red at (2,6)
  _01: a rectangle with size (1,7) and color red and mask Full at (17,6)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta: (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (8,15)=2  (9,3)=2  (9,18)=2  (10,5)=2  (10,10)=2  (10,15)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,7)=1  (17,8)=1  (17,11)=1  (18,2)=2 
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxx|xx.........xxxxxxxxx|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xx.........xxx......|xxxxxxxxxxxxxx......|xxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxx|.........xxxxxxxxxxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xx......xxx|.........xxxxxxxxxxx at (0,0)
  _010: a point with color red at (2,6)
  _01: a rectangle with size (1,7) and color red and mask Full at (17,6)
  _011: a rectangle with size (3,1) and color red and mask Full at (8,15)
diff: 
delta: (3,3)=2  (3,10)=2  (3,19)=2  (4,7)=2  (4,16)=2  (5,5)=2  (5,9)=2  (6,2)=2  (6,17)=2  (8,7)=2  (9,3)=2  (9,15)=1  (9,18)=2  (10,5)=2  (10,10)=2  (14,3)=2  (15,1)=2  (15,7)=2  (16,4)=2  (16,14)=2  (17,7)=1  (17,8)=1  (17,11)=1  (18,2)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN 8efcae92.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _010: a point with color red at (0,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (12,4)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (1,3)
diff: 
delta: (3,17)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,5)=1  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
   (1068.7 bits)
data: a background with size (5,17) and color blue and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,7)
  _01: a point with color red at (2,3)
diff: 
delta: (1,13)=2  (2,9)=2  (3,1)=2  (3,6)=2  (4,10)=2  (4,13)=2 
   (182.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _010: a point with color red at (0,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (12,4)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (1,3)
diff: 
delta: (3,17)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,5)=1  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 10x10 instead of 5x17
>> Trial 2
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _010: a point with color red at (0,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,3)
diff: 
delta: (3,17)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,4)=2  (12,6)=2  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 10x10 instead of 5x17
>> Trial 3
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask x......xxxxxxxxxxxxx|x......xxxxxxxxxxxxx|x......xx.........xx|x......xx.........xx|x......xx.........xx|x......xx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxxxxxxxx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxx....xx.........xx|xxxxxxxxxxxxxxxxxxxx|xx.................x|xx.................x|xx.................x|xx.................x|xx.................x at (0,0)
  _010: a point with color red at (0,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (12,4)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,4)
diff: 
delta: (2,3)=2  (3,17)=2  (4,2)=2  (4,5)=2  (4,11)=2  (5,14)=2  (7,12)=2  (10,3)=2  (10,5)=2  (10,12)=2  (10,16)=2  (12,5)=1  (16,9)=2  (16,15)=2  (17,5)=2  (17,11)=2  (18,3)=2  (18,8)=2  (19,12)=2  (19,15)=2 
! size mismatch, 10x10 instead of 5x17

TRAIN 8efcae92.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xxxxx.........|x.....xxxxx.........|xxxxxxxxxxx......... at (0,0)
  _010: a point with color red at (2,14)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,2)
  _011: a rectangle with size (2,2) and color red and mask Even Checkboard at (18,17)
diff: 
delta: (3,10)=2  (4,4)=2  (6,12)=2  (6,15)=2  (8,3)=2  (8,10)=2  (9,13)=2  (9,16)=2  (11,2)=2  (11,9)=2  (11,11)=2  (12,15)=2  (13,4)=2  (13,10)=2  (13,12)=2  (17,2)=2  (18,13)=2  (19,15)=2 
! size mismatch, 10x10 instead of 9x10
>> Trial 2
data: a background with size (20,20) and color blue and layers
  _0: a rectangle with size (20,20) and color black and mask xxxxxxxxxxxxxxxxxxxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxx........xxx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xx..........xx|x.....xxxxxxxxxxxxxx|x.....xxxxxxxxxxxxxx|x.....xxxxx.........|x.....xxxxx.........|xxxxxxxxxxx......... at (0,0)
  _010: a point with color red at (3,2)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,14)
  _011: a rectangle with size (2,2) and color red and mask Even Checkboard at (18,17)
diff: 
delta: (3,10)=2  (4,4)=2  (6,12)=2  (6,15)=2  (8,3)=2  (8,10)=2  (9,13)=2  (9,16)=2  (11,2)=2  (11,9)=2  (11,11)=2  (12,15)=2  (13,4)=2  (13,10)=2  (13,12)=2  (17,2)=2  (18,13)=2  (19,15)=2 
! size mismatch, 10x10 instead of 9x10

TEST 8efcae92.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.3 sec (8.3 sec/task)
bits-train-error = 4782.4 bits (4782.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-184] Checking task 8f2ea7aa.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3995.2 = 4010.8
DL output with Mo: L = 15.6 + 14929.2 = 14944.8
DL input+output M: L = 31.2 + 18924.3 = 18955.5

# learning a model for train pairs
2.000	
1.525	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.088	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.033	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.975	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.935	OUT DEF: ^.size=^.size
0.917	IN  DEF: ^.color=black
0.904	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.892	OUT DEF: ^.layer_011.pos.j='0
0.881	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.870	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.859	OUT DEF: ^.layer_011.shape.color=^.layer_0.shape.color
0.850	OUT DEF: ^.layer_01.pos.j=^.layer_0.shape.size.j * 2
0.845	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.j)
  _01: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.shape.size.j * 2)
  _011: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2138.2 = 2186.2
DL output with Mo: L = 146.0 + 4330.9 = 4476.9
DL input+output M: L = 194.0 + 6469.1 = 6663.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|..x at (0,0)
diff: 
delta: (2,0)=8 
   (86.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xx.xx.|..x..x|...x.. at (0,0)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|..x at (3,6)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (6,0)
diff: 
delta: (2,0)=8  (5,6)=8  (8,0)=8 
   (180.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|..x at (0,0)
diff: 
delta: (2,0)=8 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta: (1,2)=8  (2,0)=8 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,2)
diff: 
delta: (0,0)=8  (0,1)=8  (2,0)=8 
! 16 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|.xx|x.. at (3,3)
diff: 
delta:
   (63.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (5,3)
  _01: a rectangle with size (1,1) and color orange and mask Full at (2,6)
  _011: a rectangle with size (9,9) and color orange and mask ........x|.......xx|......x..|.....x..x|....xx.xx|...x..x..|..x......|.xx......|x........ at (0,0)
diff: 
delta:
   (121.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask ..x|.xx|x.. at (3,3)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (4,4)
diff: 
delta: (3,5)=7# (5,3)=7#
! 24 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color orange and mask Full at (3,5)
diff: 
delta: (4,4)=7# (5,3)=7#
! 28 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (0,3)
diff: 
delta:
   (63.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (0,3)
  _01: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (3,6)
  _011: a rectangle with size (6,6) and color pink and mask .x....|x.x...|xx....|.x..x.|x.xx.x|xx.xx. at (3,0)
diff: 
delta:
   (131.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask .x.|x.x|xx. at (0,3)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (2,3)
diff: 
delta: (0,4)=6  (1,3)=6  (1,5)=6 
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,3)
diff: 
delta: (0,4)=6  (1,5)=6  (2,4)=6 
! 31 wrong pixels (generated / expected)

TRAIN 8f2ea7aa.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|xx.|.xx at (3,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,0)
diff: 
delta: (3,0)=2  (5,1)=2  (5,2)=2 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (5,1)
diff: 
delta: (3,0)=2  (4,0)=2  (4,1)=2 
! 29 wrong pixels (generated / expected)

TEST 8f2ea7aa.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 19.9 sec (19.9 sec/task)
bits-train-error = 4330.9 bits (4330.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-183] Checking task 90c28cc7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 198382.8 = 198398.4
DL output with Mo: L = 15.6 + 3710.6 = 3726.2
DL input+output M: L = 31.2 + 202093.4 = 202124.6

# learning a model for train pairs
2.000	
1.723	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.522	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.337	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.180	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.117	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.051	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.983	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.924	OUT DEF: ^.layer_0.pos='(0,0)
0.895	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.866	OUT DEF: ^.layer_01.pos.i='0
0.837	OUT DEF: ^.layer_0111.pos.i=^.layer_0111.pos.j
0.810	OUT DEF: ^.layer_011.pos.j='0
0.768	OUT DEF: ^.layer_0.shape.color=^.layer_0111.shape.color
0.741	OUT DEF: ^.layer_01.pos.j=1
0.714	OUT DEF: ^.layer_0111.pos.j=1
0.687	OUT DEF: ^.layer_011.pos.i=^.layer_0111.pos.i
0.687	IN  DEF: ^.layer_0.shape.mask=Full
0.686	IN  DEF: ^.layer_01.shape.mask=Full
0.686	IN  DEF: ^.layer_011.shape.mask=Full
0.685	IN  DEF: ^.layer_0111.shape.mask=Full
0.685	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a point with color ^.layer_0111.shape.color at '(0,0)
  _01: a point with color ? at ('0,1)
  _011: a point with color ? at (^.layer_0111.pos.i,'0)
  _0111: a point with color ? at (^.layer_0111.pos.j,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 144.3 + 35132.8 = 35277.0
DL output with Mo: L = 140.1 + 1749.0 = 1889.0
DL input+output M: L = 284.3 + 36881.7 = 37166.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (5,8) and color red and mask Full at (11,1)
  _0111: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
   (2348.8 bits)
data: a background with size (3,3) and color grey and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color green at (1,0)
  _0111: a point with color yellow at (1,1)
diff: 
delta: (0,2)=7# (1,2)=1  (2,0)=2 
   (107.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
  _0111: a rectangle with size (5,8) and color red and mask Full at (11,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color orange and mask Full at (1,9)
  _01: a rectangle with size (5,12) and color grey and mask Full at (11,9)
  _011: a rectangle with size (5,8) and color red and mask Full at (11,1)
  _0111: a rectangle with size (6,8) and color cyan and mask Full at (1,1)
diff: 
delta: (7,1)=3  (7,2)=3  (7,3)=3  (7,4)=3  (7,5)=3  (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=4  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=1  (7,16)=1  (7,17)=1  (7,18)=1  (7,19)=1  (7,20)=1  (8,1)=3  (8,2)=3  (8,3)=3  (8,4)=3  (8,5)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=4  (8,10)=4  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=4  (8,15)=1  (8,16)=1  (8,17)=1  (8,18)=1  (8,19)=1  (8,20)=1  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,5)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=4  (9,10)=4  (9,11)=4  (9,12)=4  (9,13)=4  (9,14)=4  (9,15)=1  (9,16)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,20)=1  (10,1)=3  (10,2)=3  (10,3)=3  (10,4)=3  (10,5)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,9)=4  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=4  (10,14)=4  (10,15)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,19)=1  (10,20)=1 
! size mismatch, 10x10 instead of 3x3

TRAIN 90c28cc7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (7,7) and color blue and mask Full at (9,1)
  _0111: a rectangle with size (8,7) and color red and mask Full at (1,1)
diff: 
delta:
   (173.5 bits)
data: a background with size (2,2) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color cyan at (0,1)
  _011: a point with color blue at (1,0)
  _0111: a point with color yellow at (1,1)
diff: 
delta:
   (30.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (8,7) and color red and mask Full at (1,1)
  _0111: a rectangle with size (7,7) and color blue and mask Full at (9,1)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color cyan and mask Full at (1,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (9,8)
  _011: a rectangle with size (7,7) and color blue and mask Full at (9,1)
  _0111: a rectangle with size (8,7) and color red and mask Full at (1,1)
diff: 
delta:
! size mismatch, 10x10 instead of 2x2

TRAIN 90c28cc7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (13,8)
  _0111: a rectangle with size (5,6) and color cyan and mask Full at (2,2)
diff: 
delta: (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2 
   (991.0 bits)
data: a background with size (3,2) and color green and layers
  _0: a point with color cyan at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color yellow at (2,0)
  _0111: a point with color blue at (2,1)
diff: 
delta:
   (37.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (13,8)
  _0111: a rectangle with size (5,6) and color cyan and mask Full at (2,2)
diff: 
delta: (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2 
! size mismatch, 10x10 instead of 3x2
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (6,6) and color blue and mask Full at (13,8)
  _0111: a rectangle with size (5,6) and color red and mask Full at (2,8)
diff: 
delta: (2,2)=8  (2,3)=8  (2,4)=8  (2,5)=8  (2,6)=8  (2,7)=8  (3,2)=8  (3,3)=8  (3,4)=8  (3,5)=8  (3,6)=8  (3,7)=8  (4,2)=8  (4,3)=8  (4,4)=8  (4,5)=8  (4,6)=8  (4,7)=8  (5,2)=8  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (6,2)=8  (6,3)=8  (6,4)=8  (6,5)=8  (6,6)=8  (6,7)=8 
! size mismatch, 10x10 instead of 3x2
>> Trial 3
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (6,12) and color green and mask Full at (7,2)
  _01: a rectangle with size (6,6) and color yellow and mask Full at (13,2)
  _011: a rectangle with size (5,6) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (6,6) and color blue and mask Full at (13,8)
diff: 
delta: (2,8)=2  (2,9)=2  (2,10)=2  (2,11)=2  (2,12)=2  (2,13)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=2  (3,12)=2  (3,13)=2  (4,8)=2  (4,9)=2  (4,10)=2  (4,11)=2  (4,12)=2  (4,13)=2  (5,8)=2  (5,9)=2  (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (6,8)=2  (6,9)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2 
! size mismatch, 10x10 instead of 3x2

TRAIN 90c28cc7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (7,6)
  _01: a rectangle with size (8,18) and color cyan and mask Full at (7,1)
  _011: a rectangle with size (18,8) and color yellow and mask Full at (1,6)
  _0111: a rectangle with size (18,5) and color red and mask Full at (1,1)
diff: 
delta: (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,18)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (3,18)=1  (4,14)=1  (4,15)=1  (4,16)=1  (4,17)=1  (4,18)=1  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,14)=2  (18,15)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (21,21) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (7,6)
  _01: a rectangle with size (8,18) and color cyan and mask Full at (7,1)
  _011: a rectangle with size (18,5) and color red and mask Full at (1,1)
  _0111: a rectangle with size (18,8) and color yellow and mask Full at (1,6)
diff: 
delta: (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,18)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,17)=1  (2,18)=1  (3,14)=1  (3,15)=1  (3,16)=1  (3,17)=1  (3,18)=1  (4,14)=1  (4,15)=1  (4,16)=1  (4,17)=1  (4,18)=1  (5,14)=1  (5,15)=1  (5,16)=1  (5,17)=1  (5,18)=1  (6,14)=1  (6,15)=1  (6,16)=1  (6,17)=1  (6,18)=1  (15,14)=2  (15,15)=2  (15,16)=2  (15,17)=2  (15,18)=2  (16,14)=2  (16,15)=2  (16,16)=2  (16,17)=2  (16,18)=2  (17,14)=2  (17,15)=2  (17,16)=2  (17,17)=2  (17,18)=2  (18,14)=2  (18,15)=2  (18,16)=2  (18,17)=2  (18,18)=2 
! size mismatch, 10x10 instead of 3x3

TEST 90c28cc7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.6 sec (16.6 sec/task)
bits-train-error = 1749.0 bits (1749.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-182] Checking task 90f3ed37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14722.0 = 14737.6
DL output with Mo: L = 15.6 + 26494.4 = 26510.0
DL input+output M: L = 31.2 + 41216.4 = 41247.7

# learning a model for train pairs
2.000	
1.576	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.287	OUT OBJECT at ^.layer_0: ^.layer_0
1.115	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.966	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.832	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.706	OUT OBJECT at ^.layer_010: ^.layer_01
0.619	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.529	OUT OBJECT at ^.layer_0111: ^.layer_011
0.505	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.481	OUT DEF: ^.size=^.size
0.469	IN  DEF: ^.layer_0.shape.color=cyan
0.458	IN  DEF: ^.layer_01.shape.color=cyan
0.447	IN  DEF: ^.layer_011.shape.color=cyan
0.437	OUT DEF: ^.layer_01.shape.size.j=right(^.layer_0) - ^.layer_01.shape.size.i
0.429	OUT DEF: ^.layer_01111.shape.size.j=^.size.j - ^.layer_01.shape.size.j
0.423	OUT DEF: ^.layer_01111.pos.i=area(^.layer_01.shape) * 2
0.417	OUT DEF: ^.layer_01111.pos.j=^.layer_01.shape.size.j
0.411	OUT DEF: ^.layer_01.pos.j=^.layer_01.shape.size.i + 1
0.405	OUT DEF: ^.layer_011.pos.i=bottom(^.layer_011)
0.398	OUT DEF: ^.layer_01.shape.color=blue
0.392	OUT DEF: ^.layer_01111.shape.color=blue
0.387	IN  DEF: ^.color=black
0.383	OUT DEF: ^.layer_01.shape.size.i=right(^.layer_01) / 2
0.379	OUT DEF: ^.layer_011.shape.size.i=1
0.376	OUT DEF: ^.layer_011.shape.mask=Full
0.372	OUT DEF: ^.layer_01111.shape.size.i=right(^.layer_01) / 2
0.369	OUT DEF: ^.color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (right(^.layer_01) / 2,right(^.layer_0) - ^.layer_01.shape.size.i) and color blue and mask ? at (?,^.layer_01.shape.size.i + 1)
  _011: a rectangle with size (1,?) and color ? and mask Full at (bottom(^.layer_011),?)
  _0111: ^.layer_011
  _01111: a rectangle with size (right(^.layer_01) / 2,^.size.j - ^.layer_01.shape.size.j) and color blue and mask ? at (area(^.layer_01.shape) * 2,^.layer_01.shape.size.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 119.4 + 4323.1 = 4442.4
DL output with Mo: L = 291.3 + 1504.0 = 1795.3
DL input+output M: L = 410.7 + 5827.0 = 6237.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
diff: 
delta:
   (157.7 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _010: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (12,3)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (11,2)
  _0111: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
  _01111: a rectangle with size (1,6) and color blue and mask Full at (8,4)
diff: 
delta:
   (27.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _01: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
  _011: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask xx........|..x.......|...xxxxxxx at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|..x at (10,0)
  _011: a rectangle with size (2,4) and color cyan and mask xxx.|...x at (6,0)
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
diff: 
delta: (13,0)=8  (13,1)=8 
   (154.6 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _010: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,8) and color blue and mask Full at (13,2)
  _011: a rectangle with size (1,6) and color blue and mask Full at (11,4)
  _0111: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _01111: a rectangle with size (1,7) and color blue and mask Full at (6,3)
diff: 
delta: (13,0)=8  (13,1)=8 
   (86.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
diff: 
delta: (13,0)=8  (13,1)=8 
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (1,4) and color cyan and mask Full at (11,0)
diff: 
delta: (13,0)=8  (13,1)=8 
! 26 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _011: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
diff: 
delta:
   (120.0 bits)
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _010: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _01: a rectangle with size (2,7) and color blue and mask Odd Checkboard at (6,3)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
  _01111: a rectangle with size (2,5) and color blue and mask Odd Checkboard at (10,5)
diff: 
delta:
   (36.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
  _011: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (2,10) and color cyan and mask Even Checkboard at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask Even Checkboard at (6,0)
  _011: a rectangle with size (2,5) and color cyan and mask Even Checkboard at (10,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 90f3ed37.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask ..xxxxxxxx|xx........|..xxxxxxxx at (1,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (8,3)
  _011: a rectangle with size (3,5) and color cyan and mask ...xx|xxx..|...xx at (8,0)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,10) and color black and layers
  _0: a rectangle with size (3,10) and color cyan and mask ..xxxxxxxx|xx........|..xxxxxxxx at (1,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (9,0)
  _011: a rectangle with size (3,5) and color cyan and mask ...xx|xxx..|...xx at (8,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TEST 90f3ed37.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 1504.0 bits (1504.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-181] Checking task 913fb3ed.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2742.2 = 2757.8
DL output with Mo: L = 15.6 + 16994.4 = 17010.0
DL input+output M: L = 31.2 + 19736.6 = 19767.9

# learning a model for train pairs
2.000	
1.609	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.405	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.275	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.211	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.165	OUT DEF: ^.size=^.size
1.129	IN  DEF: ^.color=black
1.100	OUT OBJECT at ^.layer_00: ^.layer_0
1.074	OUT DEF: ^.layer_0.pos=^.layer_0.pos - 1
1.059	OUT DEF: ^.layer_0.shape.size.j=3
1.044	OUT DEF: ^.layer_011.shape.size.i=3
1.029	OUT DEF: ^.layer_011.shape.size.j=3
1.021	OUT DEF: ^.layer_0.shape.mask=Full
1.013	OUT DEF: ^.layer_01.shape.mask=Full
1.005	OUT DEF: ^.layer_011.shape.mask=Full
1.000	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,3) and color ? and mask Full at ^.layer_0.pos - 1
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (3,3) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 2265.3 = 2300.9
DL output with Mo: L = 123.8 + 2688.0 = 2811.8
DL input+output M: L = 159.5 + 4953.2 = 5112.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (4,5)
diff: 
delta: (5,1)=3  (6,8)=2 
   (92.5 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color cyan at (4,5)
  _0: a rectangle with size (3,3) and color yellow and mask Full at (3,4)
  _01: a rectangle with size (3,3) and color pink and mask Full at (4,0)
  _011: a rectangle with size (3,3) and color blue and mask Full at (5,7)
diff: 
delta: (5,1)=3  (6,8)=2 
   (114.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (4,5)
diff: 
delta: (5,1)=3  (6,8)=2 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (5,1)
diff: 
delta: (4,5)=8  (6,8)=2 
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a point with color red at (6,8)
diff: 
delta: (4,5)=8  (5,1)=3 
! 35 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
   (32.4 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color green at (1,3)
  _0: a rectangle with size (1,3) and color pink and mask Full at (0,2)
  _01: a rectangle with size (1,3) and color pink and mask Full at (2,2)
  _011: a rectangle with size (3,3) and color pink and mask Full at (0,2)
diff: 
delta:
   (49.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (3,12)
diff: 
delta: (10,3)=2 
   (69.2 bits)
data: a background with size (16,16) and color black and layers
  _00: a point with color green at (3,12)
  _0: a rectangle with size (3,3) and color pink and mask Full at (2,11)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,3)
  _011: a rectangle with size (3,3) and color blue and mask Full at (9,2)
diff: 
delta:
   (55.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (3,12)
diff: 
delta: (10,3)=2 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a point with color red at (10,3)
diff: 
delta: (3,12)=3 
! 26 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (2,2)
diff: 
delta:
   (32.4 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color cyan at (2,2)
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (49.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (2,2)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN 913fb3ed.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a point with color green at (1,1)
diff: 
delta: (10,13)=2  (14,2)=8 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a point with color red at (10,13)
diff: 
delta: (1,1)=3  (14,2)=8 
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a point with color cyan at (14,2)
diff: 
delta: (1,1)=3  (10,13)=2 
! 26 wrong pixels (generated / expected)

TEST 913fb3ed.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.6 sec (7.6 sec/task)
bits-train-error = 2688.0 bits (2688.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-180] Checking task 91413438.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3920.0 = 3935.6
DL output with Mo: L = 15.6 + 23077.4 = 23093.0
DL input+output M: L = 31.2 + 26997.3 = 27028.6

# learning a model for train pairs
2.000	
1.190	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.732	IN  DEF: ^.color=black
0.710	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.701	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.696	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2083.1 = 2131.1
DL output with Mo: L = 41.7 + 3535.6 = 3577.3
DL input+output M: L = 89.6 + 5618.7 = 5708.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (0,0)
diff: 
delta:
   (54.4 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (6,12) and color pink and mask xx.xx.xx.xx.|.xx.xx.xx.xx|..x..x..x..x|xx..........|.xx.........|..x......... at (0,0)
diff: 
delta:
   (114.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|.xx|..x at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
diff: 
delta: (0,0)=6  (0,1)=6  (2,2)=6 
! size mismatch, 10x10 instead of 12x12

TRAIN 91413438.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
   (54.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,12) and color yellow and mask .x..x..x..x.|.xx.xx.xx.xx|x..x..x..x.. at (0,0)
diff: 
delta:
   (81.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|.xx|x.. at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
diff: 
delta: (0,1)=4  (2,0)=4 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,1)
diff: 
delta: (1,2)=4  (2,0)=4 
! size mismatch, 10x10 instead of 15x15

TRAIN 91413438.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|x.x|.xx at (0,0)
diff: 
delta:
   (53.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,9) and color green and mask x.xx.xx.x|x.xx.xx.x|.xx.xx.xx|x.xx.xx.x|x.xx.xx.x|.xx.xx.xx at (0,0)
diff: 
delta:
   (94.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x.x|x.x|.xx at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta: (0,0)=3  (1,0)=3  (2,1)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN 91413438.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
   (45.9 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (2,9) and color red and mask x.xx.xx.x|.x..x..x. at (0,0)
diff: 
delta:
   (62.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Even Checkboard at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 18x18
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,2)
diff: 
delta: (0,0)=2  (1,1)=2 
! size mismatch, 10x10 instead of 18x18

TRAIN 91413438.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (0,1)
diff: 
delta:
! size mismatch, 10x10 instead of 21x21
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,2)
diff: 
delta: (1,1)=8 
! size mismatch, 10x10 instead of 21x21
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff: 
delta: (0,2)=8 
! size mismatch, 10x10 instead of 21x21

TEST 91413438.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 3535.6 bits (3535.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-179] Checking task 91714a58.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 72552.7 = 72568.3
DL output with Mo: L = 15.6 + 10160.4 = 10176.0
DL input+output M: L = 31.2 + 82713.0 = 82744.3

# learning a model for train pairs
2.000	
1.183	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.964	OUT DEF: ^.layer_0=^.layer_0
0.897	OUT DEF: ^.size=^.size
0.890	OUT DEF: ^.color=black
0.888	IN  DEF: ^.layer_0.shape.mask=Full
0.864	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.863	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 62451.1 = 62531.4
DL output with Mo: L = 13.8 + 0.0 = 13.8
DL input+output M: L = 94.1 + 62451.1 = 62545.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
  _01: a rectangle with size (2,3) and color orange and mask Full (and Border) at (7,7)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,3)=2  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
   (2358.9 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask Full at (7,7)
  _01: a rectangle with size (5,3) and color red and mask x..|xxx|xxx|xxx|xxx at (2,3)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask Full at (3,3)
  _01: a rectangle with size (2,3) and color orange and mask Full (and Border) at (7,7)
diff: 
delta: (0,4)=1  (0,5)=1  (0,6)=4  (0,8)=2  (0,13)=2  (0,15)=5# (1,3)=3  (1,4)=5# (1,8)=9# (1,9)=9# (1,10)=8  (1,12)=4  (1,14)=5# (1,15)=8  (2,0)=1  (2,2)=8  (2,3)=2  (2,4)=8  (2,7)=6  (2,9)=8  (2,10)=5# (2,14)=8  (3,11)=6  (4,2)=1  (4,8)=1  (4,9)=9# (4,10)=5# (4,13)=2  (4,15)=4  (5,1)=4  (5,7)=2  (5,10)=7# (6,0)=3  (6,2)=6  (6,9)=3  (6,10)=5# (6,12)=7# (7,0)=7# (7,2)=4  (7,3)=6  (7,6)=4  (7,9)=3  (7,11)=2  (7,14)=7# (7,15)=1  (8,1)=7# (8,7)=9# (8,13)=8  (8,14)=5# (8,15)=2  (9,0)=1  (9,1)=5# (9,2)=6  (9,3)=4  (9,4)=9# (9,5)=3  (9,7)=3  (9,13)=9# (9,14)=4  (9,15)=6  (10,1)=2  (10,2)=4  (10,10)=2  (10,12)=1  (10,13)=6  (11,3)=5# (11,14)=2  (11,15)=4  (12,2)=6  (12,8)=6  (12,11)=2  (13,1)=3  (13,4)=7# (13,6)=2  (13,8)=7# (13,9)=9# (14,2)=5# (14,4)=7# (14,12)=6  (14,13)=5# (14,14)=3  (15,0)=1  (15,3)=9# (15,7)=2  (15,11)=1  (15,14)=9#
correct output grid

TRAIN 91714a58.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
  _01: a rectangle with size (2,4) and color red and mask xx.x|..x. at (3,0)
diff: 
delta: (0,2)=7# (0,5)=6  (0,7)=6  (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,0)=4  (5,1)=4  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
   (2213.0 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,7) and color pink and mask Full at (11,2)
  _01: a rectangle with size (2,4) and color red and mask xx.x|..x. at (3,0)
diff: 
delta: (0,2)=7# (0,5)=6  (0,7)=6  (0,11)=7# (0,12)=3  (1,2)=3  (1,5)=1  (1,8)=8  (1,11)=2  (2,4)=3  (2,5)=9# (2,13)=8  (2,15)=8  (3,4)=9# (3,9)=1  (3,11)=2  (4,1)=5# (4,5)=7# (4,7)=6  (4,11)=3  (4,14)=1  (5,0)=4  (5,1)=4  (5,3)=3  (5,4)=9# (5,9)=7# (5,11)=2  (6,0)=8  (6,5)=6  (6,9)=8  (6,12)=3  (7,1)=9# (7,5)=4  (7,6)=8  (7,10)=7# (8,2)=9# (8,3)=5# (8,8)=4  (8,9)=6  (8,11)=1  (8,12)=4  (9,8)=3  (9,9)=1  (9,11)=8  (9,13)=5# (9,14)=9# (9,15)=4  (10,1)=9# (10,2)=3  (10,3)=9# (10,5)=3  (10,8)=5# (10,9)=6  (10,10)=7# (10,12)=5# (11,13)=7# (12,1)=4  (12,11)=4  (12,12)=4  (12,13)=6  (12,15)=2  (13,1)=5# (13,6)=4  (13,7)=5# (13,8)=3  (13,10)=8  (13,14)=6  (13,15)=9# (14,2)=9# (14,3)=7# (14,4)=5# (14,12)=1  (14,14)=7# (14,15)=1  (15,1)=8  (15,7)=1  (15,9)=3  (15,12)=3  (15,13)=8  (15,14)=7#
correct output grid

TRAIN 91714a58.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
  _01: a rectangle with size (4,1) and color grey and mask Full at (12,10)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (4,7)=7# (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
   (1673.2 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,1) and color grey and mask Full at (12,10)
  _01: a rectangle with size (3,4) and color orange and mask .xxx|.xxx|xxxx at (2,7)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Full at (2,8)
  _01: a rectangle with size (4,1) and color grey and mask Full at (12,10)
diff: 
delta: (0,0)=3  (0,6)=6  (0,7)=2  (0,11)=5# (0,15)=3  (1,1)=7# (1,6)=9# (1,14)=5# (2,5)=8  (2,6)=8  (2,15)=4  (3,1)=2  (3,12)=2  (3,14)=5# (4,1)=8  (4,4)=9# (4,5)=6  (4,6)=1  (4,7)=7# (5,0)=5# (5,5)=3  (5,6)=6  (5,8)=6  (5,11)=3  (5,12)=3  (6,1)=4  (6,3)=2  (6,14)=4  (7,0)=9# (7,9)=3  (7,11)=8  (8,2)=3  (8,7)=6  (8,9)=9# (9,0)=9# (9,4)=1  (9,7)=3  (9,9)=8  (10,10)=3  (10,11)=3  (10,14)=7# (11,7)=4  (11,13)=5# (12,0)=4  (12,3)=1  (12,4)=7# (12,6)=3  (12,9)=7# (13,5)=1  (13,6)=7# (13,7)=2  (13,13)=1  (13,15)=4  (14,7)=3  (14,10)=2  (15,1)=2  (15,5)=7# (15,6)=9# (15,12)=2  (15,14)=3 
correct output grid

TRAIN 91714a58.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (6,1)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|xxxxxx|x..... at (10,5)
diff: 
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,10)=3  (4,11)=8  (4,14)=5# (5,1)=8  (5,10)=3  (5,11)=7# (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,6)=7# (14,7)=7# (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (14,6)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|xxxxxx|x..... at (10,5)
diff: 
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,10)=3  (4,11)=8  (4,14)=5# (5,1)=8  (5,10)=3  (5,11)=7# (6,1)=1  (6,2)=1  (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (4,10)
  _01: a rectangle with size (3,6) and color grey and mask xxxxxx|xxxxxx|x..... at (10,5)
diff: 
delta: (0,2)=1  (0,3)=7# (0,4)=3  (0,10)=1  (0,11)=2  (0,13)=4  (0,14)=7# (1,3)=3  (1,6)=6  (1,7)=8  (2,0)=6  (2,3)=8  (2,5)=1  (2,8)=1  (2,12)=7# (2,14)=4  (2,15)=8  (3,1)=3  (3,2)=8  (3,6)=3  (3,8)=8  (4,0)=5# (4,4)=1  (4,7)=8  (4,11)=8  (4,14)=5# (5,1)=8  (5,11)=7# (6,1)=1  (6,2)=1  (6,11)=8  (6,13)=5# (6,15)=7# (7,7)=9# (7,10)=2  (7,11)=7# (7,13)=7# (8,0)=9# (8,1)=4  (8,3)=2  (8,4)=1  (8,10)=7# (8,14)=9# (9,5)=1  (9,14)=1  (9,15)=5# (10,1)=8  (10,2)=9# (10,3)=4  (10,11)=3  (11,2)=3  (11,4)=6  (11,12)=1  (11,13)=4  (12,0)=9# (12,1)=5# (12,2)=2  (12,6)=1  (12,7)=3  (12,10)=6  (12,11)=2  (12,14)=1  (12,15)=5# (13,1)=7# (13,6)=1  (13,7)=6  (13,9)=7# (13,11)=3  (13,13)=6  (14,2)=9# (14,5)=3  (14,6)=7# (14,7)=7# (14,9)=6  (14,12)=8  (15,0)=5# (15,6)=8  (15,15)=9#
! 14 wrong pixels (generated / expected)

TEST 91714a58.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-178] Checking task 9172f3a0.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2554.6 = 2570.2
DL output with Mo: L = 15.6 + 22790.6 = 22806.2
DL input+output M: L = 31.2 + 25345.2 = 25376.4

# learning a model for train pairs
2.000	
1.560	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.317	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.127	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.957	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.895	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.829	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.809	IN  DEF: ^.color=black
0.793	OUT DEF: ^.size=^.size * 3
0.779	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size * 3
0.767	OUT DEF: ^.layer_011.shape.size=^.size
0.758	OUT DEF: ^.layer_0.pos=^.layer_0.pos * 3
0.749	OUT DEF: ^.layer_011.pos=^.layer_01.pos * 3
0.740	OUT DEF: ^.layer_01.pos=^.layer_011.pos * 3
0.735	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.730	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.726	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
0.723	OUT DEF: ^.layer_011.shape.mask=Full
0.721	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 3 and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size * 3 and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos * 3
  _01: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos * 3
  _011: a rectangle with size ^.size and color ^.layer_01.shape.color and mask Full at ^.layer_01.pos * 3
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 87.8 + 1614.8 = 1702.7
DL output with Mo: L = 169.9 + 1157.8 = 1327.6
DL input+output M: L = 257.7 + 2772.6 = 3030.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color orange at (1,0)
  _011: a point with color yellow at (1,1)
diff: 
delta: (2,2)=4 
   (88.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,6) and color green and mask Full at (0,0)
  _01: a rectangle with size (6,6) and color yellow and mask xxx...|xxx...|xxx...|...xxx|...xxx|...xxx at (3,3)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,0)
diff: 
delta:
   (63.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color orange at (1,0)
  _011: a point with color yellow at (1,1)
diff: 
delta: (2,2)=4 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color orange at (1,0)
  _011: a point with color yellow at (2,2)
diff: 
delta: (1,1)=4 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
  _01: a point with color yellow at (1,1)
  _011: a point with color orange at (1,0)
diff: 
delta: (2,2)=4 
! 14 wrong pixels (generated / expected)

TRAIN 9172f3a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color green at (2,2)
diff: 
delta:
   (72.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color red and mask ...xxx|...xxx|...xxx|xxxxxx|xxxxxx|xxxxxx at (0,3)
  _01: a rectangle with size (3,3) and color green and mask Full at (6,6)
  _011: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (52.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color green at (2,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask .x|xx at (0,1)
  _01: a point with color green at (2,2)
  _011: a point with color green at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,2)
diff: 
delta: (2,2)=3 
! 14 wrong pixels (generated / expected)

TRAIN 9172f3a0.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a point with color pink at (1,2)
  _011: a point with color pink at (2,0)
diff: 
delta: (2,1)=1 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a point with color pink at (1,2)
  _011: a point with color blue at (2,1)
diff: 
delta: (2,0)=6 
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01: a point with color pink at (2,0)
  _011: a point with color pink at (1,2)
diff: 
delta: (2,1)=1 
! 14 wrong pixels (generated / expected)

TEST 9172f3a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.1 sec (11.1 sec/task)
bits-train-error = 1157.8 bits (1157.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-177] Checking task 928ad970.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11792.7 = 11808.3
DL output with Mo: L = 15.6 + 37690.6 = 37706.2
DL input+output M: L = 31.2 + 49483.2 = 49514.5

# learning a model for train pairs
2.000	
1.348	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.575	OUT OBJECT at ^.layer_01: ^.layer_0
0.555	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.534	OUT OBJECT at ^.layer_011: ^.layer_01
0.513	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.492	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.468	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.447	OUT OBJECT at ^.layer_0111: ^.layer_0111
0.425	OUT OBJECT at ^.layer_01111: ^.layer_01111
0.404	OUT OBJECT at ^.layer_0110: ^.layer_011
0.386	OUT DEF: ^.size=^.size
0.372	IN  DEF: ^.layer_0.shape.mask=Border
0.358	IN  DEF: ^.layer_01.shape.color=grey
0.344	IN  DEF: ^.layer_011.shape.color=grey
0.330	IN  DEF: ^.layer_0111.shape.color=grey
0.315	IN  DEF: ^.layer_01111.shape.color=grey
0.307	OUT DEF: ^.layer_0.pos=corner(^.layer_01.pos, ^.layer_011.pos) + 1
0.300	IN  DEF: ^.color=black
0.296	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.291	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.289	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at corner(^.layer_01.pos, ^.layer_011.pos) + 1
  _01: ^.layer_0
  _0110: ^.layer_011
  _011: ^.layer_01
  _0111: ^.layer_0111
  _01111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color grey at (?,?)
  _01111: a point with color grey at (?,?)

DL input  with Mi: L = 138.5 + 3062.1 = 3200.6
DL output with Mo: L = 102.1 + 585.4 = 687.5
DL input+output M: L = 240.6 + 3647.5 = 3888.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _01: a point with color grey at (1,4)
  _011: a point with color grey at (6,1)
  _0111: a point with color grey at (6,11)
  _01111: a point with color grey at (11,4)
diff: 
delta:
   (100.3 bits)
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask Border at (2,2)
  _01: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _0110: a point with color grey at (6,1)
  _011: a point with color grey at (1,4)
  _0111: a point with color grey at (6,11)
  _01111: a point with color grey at (11,4)
diff: 
delta:
   (19.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _01: a point with color grey at (1,4)
  _011: a point with color grey at (6,1)
  _0111: a point with color grey at (6,11)
  _01111: a point with color grey at (11,4)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,13) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (4,5)
  _01: a point with color grey at (1,4)
  _011: a point with color grey at (6,11)
  _0111: a point with color grey at (6,1)
  _01111: a point with color grey at (11,4)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN 928ad970.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _01: a point with color grey at (1,5)
  _011: a point with color grey at (5,1)
  _0111: a point with color grey at (8,10)
  _01111: a point with color grey at (12,5)
diff: 
delta:
   (101.7 bits)
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (10,8) and color green and mask Border at (2,2)
  _01: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _0110: a point with color grey at (5,1)
  _011: a point with color grey at (1,5)
  _0111: a point with color grey at (8,10)
  _01111: a point with color grey at (12,5)
diff: 
delta:
   (19.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _01: a point with color grey at (1,5)
  _011: a point with color grey at (5,1)
  _0111: a point with color grey at (8,10)
  _01111: a point with color grey at (12,5)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Border at (5,4)
  _01: a point with color grey at (1,5)
  _011: a point with color grey at (8,10)
  _0111: a point with color grey at (5,1)
  _01111: a point with color grey at (12,5)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN 928ad970.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _01: a point with color grey at (2,6)
  _011: a point with color grey at (8,1)
  _0111: a point with color grey at (6,12)
  _01111: a point with color grey at (13,7)
diff: 
delta:
   (104.2 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (10,10) and color yellow and mask Border at (3,2)
  _01: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _0110: a point with color grey at (8,1)
  _011: a point with color grey at (2,6)
  _0111: a point with color grey at (6,12)
  _01111: a point with color grey at (13,7)
diff: 
delta:
   (19.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _01: a point with color grey at (2,6)
  _011: a point with color grey at (6,12)
  _0111: a point with color grey at (8,1)
  _01111: a point with color grey at (13,7)
diff: 
delta:
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask Border at (5,4)
  _01: a point with color grey at (2,6)
  _011: a point with color grey at (8,1)
  _0111: a point with color grey at (6,12)
  _01111: a point with color grey at (13,7)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TRAIN 928ad970.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (5,5)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (6,2)
  _0111: a point with color grey at (9,12)
  _01111: a point with color grey at (13,5)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (5,5)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (9,12)
  _0111: a point with color grey at (6,2)
  _01111: a point with color grey at (13,5)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST 928ad970.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.3 sec (17.3 sec/task)
bits-train-error = 585.4 bits (585.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-176] Checking task 93b581b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3533.4 = 3549.0
DL output with Mo: L = 15.6 + 13249.5 = 13265.1
DL input+output M: L = 31.2 + 16782.9 = 16814.1

# learning a model for train pairs
2.000	
1.856	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.745	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.633	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.537	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.471	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.402	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.330	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.251	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.198	OUT OBJECT at ^.layer_00: ^.layer_0
1.143	OUT OBJECT at ^.layer_010: ^.layer_01
1.088	OUT OBJECT at ^.layer_0110: ^.layer_011
1.031	OUT OBJECT at ^.layer_01111: ^.layer_0111
0.992	OUT DEF: ^.size=^.size
0.970	OUT DEF: ^.layer_0.shape.size=span(^.layer_0.pos, ^.layer_0111.pos)
0.949	IN  DEF: ^.color=black
0.929	OUT DEF: ^.layer_0111.shape.size=^.layer_0.pos
0.917	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.905	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
0.893	OUT DEF: ^.layer_011.shape.size.j=^.layer_011.pos.j
0.882	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.pos.i
0.872	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.pos.j
0.863	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.pos.i
0.840	OUT DEF: ^.layer_0111.pos='(0,0)
0.819	OUT DEF: ^.layer_0.pos=^.layer_0.pos + 2
0.806	OUT DEF: ^.layer_0111.shape.color=^.layer_0111.shape.color
0.793	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.785	OUT DEF: ^.layer_0.shape.mask=Full
0.778	OUT DEF: ^.layer_01.shape.mask=Full
0.770	OUT DEF: ^.layer_011.shape.mask=Full
0.763	OUT DEF: ^.layer_0111.shape.mask=Full
0.757	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_0111.pos) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos + 2
  _010: ^.layer_01
  _01: a rectangle with size (^.layer_01.pos.i,^.layer_0.pos.j) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (^.layer_0.pos.i,^.layer_011.pos.j) and color ^.layer_01.shape.color and mask Full at (?,?)
  _0111: a rectangle with size ^.layer_0.pos and color ^.layer_0111.shape.color and mask Full at '(0,0)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 95.1 + 2364.4 = 2459.5
DL output with Mo: L = 263.1 + 588.8 = 851.9
DL input+output M: L = 358.2 + 2953.3 = 3311.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color orange at (3,2)
  _0111: a point with color cyan at (3,3)
diff: 
delta:
   (78.8 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color brown at (2,2)
  _0: a rectangle with size (2,2) and color brown and mask Full at (4,4)
  _010: a point with color green at (2,3)
  _01: a rectangle with size (2,2) and color orange and mask Full at (0,4)
  _0110: a point with color orange at (3,2)
  _011: a rectangle with size (2,2) and color green and mask Full at (4,0)
  _0111: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
  _01111: a point with color cyan at (3,3)
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color orange at (3,2)
  _0111: a point with color cyan at (3,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color green at (2,3)
  _011: a point with color cyan at (3,3)
  _0111: a point with color orange at (3,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color brown at (2,2)
  _01: a point with color orange at (3,2)
  _011: a point with color green at (2,3)
  _0111: a point with color cyan at (3,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 93b581b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color red at (2,1)
  _011: a point with color pink at (1,2)
  _0111: a point with color blue at (2,2)
diff: 
delta:
   (78.8 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (1,1)
  _0: a rectangle with size (2,2) and color yellow and mask Full at (3,3)
  _010: a point with color red at (2,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (3,0)
  _0110: a point with color pink at (1,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (0,3)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01111: a point with color blue at (2,2)
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color red at (2,1)
  _0111: a point with color blue at (2,2)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (1,2)
  _011: a point with color blue at (2,2)
  _0111: a point with color red at (2,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color red at (2,1)
  _011: a point with color pink at (1,2)
  _0111: a point with color blue at (2,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN 93b581b8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color grey at (3,2)
  _0111: a point with color red at (3,3)
diff: 
delta:
   (78.8 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color green at (2,2)
  _0: a rectangle with size (2,2) and color green and mask Full at (4,4)
  _010: a point with color pink at (2,3)
  _01: a rectangle with size (2,2) and color grey and mask Full at (0,4)
  _0110: a point with color grey at (3,2)
  _011: a rectangle with size (2,2) and color pink and mask Full at (4,0)
  _0111: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01111: a point with color red at (3,3)
diff: 
delta:
   (19.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color grey at (3,2)
  _0111: a point with color red at (3,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color pink at (2,3)
  _011: a point with color red at (3,3)
  _0111: a point with color grey at (3,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (2,2)
  _01: a point with color grey at (3,2)
  _011: a point with color pink at (2,3)
  _0111: a point with color red at (3,3)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN 93b581b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color blue at (3,3)
  _011: a point with color red at (4,2)
  _0111: a point with color grey at (4,3)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color blue at (3,3)
  _011: a point with color grey at (4,3)
  _0111: a point with color red at (4,2)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,2)
  _01: a point with color red at (4,2)
  _011: a point with color blue at (3,3)
  _0111: a point with color grey at (4,3)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TEST 93b581b8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 22.2 sec (22.2 sec/task)
bits-train-error = 588.8 bits (588.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-175] Checking task 941d9a10.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 33995.1 = 34010.7
DL output with Mo: L = 15.6 + 39486.0 = 39501.6
DL input+output M: L = 31.2 + 73481.1 = 73512.4

# learning a model for train pairs
2.000	
1.147	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.435	OUT OBJECT at ^.layer_0: ^.layer_0
0.314	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.261	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.237	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.221	OUT DEF: ^.size=^.size
0.213	OUT DEF: ^.layer_011.pos='(0,0)
0.208	IN  DEF: ^.layer_0.shape.color=grey
0.204	OUT DEF: ^.layer_011.shape.color=blue
0.199	OUT DEF: ^.layer_01.shape.color=red
0.195	OUT DEF: ^.layer_0111.shape.color=green
0.191	OUT DEF: ^.layer_01.pos.i=bottom(^.layer_0) / 2
0.189	OUT DEF: ^.layer_01.shape.mask=Full
0.186	OUT DEF: ^.layer_011.shape.mask=Full
0.184	OUT DEF: ^.layer_0111.shape.mask=Full
0.182	IN  DEF: ^.color=black
0.180	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask Full at (bottom(^.layer_0) / 2,?)
  _011: a rectangle with size (?,?) and color blue and mask Full at '(0,0)
  _0111: a rectangle with size (?,?) and color green and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 4706.2 = 4756.5
DL output with Mo: L = 134.4 + 1444.4 = 1578.8
DL input+output M: L = 184.7 + 6150.6 = 6335.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
diff: 
delta:
   (153.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (4,3)
  _011: a rectangle with size (3,2) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (2,2) and color green and mask Full at (8,8)
diff: 
delta:
   (53.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x..|..x....x..|xxxxxxxxxx|..x....x..|..x....x.. at (0,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN 941d9a10.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
diff: 
delta:
   (158.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
  _01: a rectangle with size (2,4) and color red and mask Full at (4,4)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (1,1) and color green and mask Full at (9,9)
diff: 
delta:
   (46.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x.|...x....x.|xxxxxxxxxx|...x....x.|xxxxxxxxxx|...x....x. at (0,0)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN 941d9a10.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
diff: 
delta:
   (158.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,5)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,1) and color green and mask Full at (7,9)
diff: 
delta:
   (45.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x..x.x.x.|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|xxxxxxxxxx|.x..x.x.x.|.x..x.x.x.|.x..x.x.x. at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 941d9a10.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x.|xxxxxxxxxx|.x.x..x.x. at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TEST 941d9a10.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 1444.4 bits (1444.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-174] Checking task 94f9d214.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16739.6 = 16755.2
DL output with Mo: L = 15.6 + 3276.5 = 3292.1
DL input+output M: L = 31.2 + 20016.1 = 20047.3

# learning a model for train pairs
2.000	
1.564	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.245	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.068	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.898	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size)
0.830	OUT DEF: ^.layer_0.shape.color=red
0.784	OUT DEF: ^.layer_0.pos.i=bottom(^.layer_0) / 2
0.753	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (bottom(^.layer_0) / 2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 6427.9 = 6509.1
DL output with Mo: L = 93.1 + 1108.4 = 1201.6
DL input+output M: L = 174.3 + 7536.3 = 7710.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color blue and mask ...x|x.xx|xxxx|.x.x at (4,0)
diff: 
delta: (3,0)=3  (3,3)=3 
   (147.6 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (3,2)=2 
   (41.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ...x|x.xx|xxxx|.x.x at (4,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (1,1)
diff: 
delta: (3,0)=3  (3,3)=3 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (1,1)
  _01: a rectangle with size (4,4) and color blue and mask ...x|x.xx|xxxx|.x.x at (4,0)
diff: 
delta: (3,0)=3  (3,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN 94f9d214.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|.xx.|..xx at (0,0)
  _01: a rectangle with size (4,1) and color blue and mask Full at (4,3)
diff: 
delta: (3,0)=3  (6,1)=1  (6,3)=0  (7,0)=1 
   (192.3 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x..|x..|.xx at (1,0)
diff: 
delta:
   (32.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|.xx.|..xx at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (4,3)
diff: 
delta: (3,0)=3  (6,1)=1  (7,0)=1  (7,3)=1 
! size mismatch, 3x4 instead of 4x4
>> Trial 2
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (4,3)
  _01: a rectangle with size (3,4) and color green and mask xxxx|.xx.|..xx at (0,0)
diff: 
delta: (3,0)=3  (6,1)=1  (7,0)=1  (7,3)=1 
! size mismatch, 3x4 instead of 4x4
>> Trial 3
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask xxxx|.xx.|..xx at (0,0)
  _01: a rectangle with size (4,1) and color blue and mask Full at (4,3)
diff: 
delta: (3,0)=3  (6,1)=1  (6,3)=0  (7,0)=1 
! 4 wrong pixels (generated / expected)

TRAIN 94f9d214.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.x.x|..x.|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color blue and mask xxxx|xx..|xx..|.xx. at (4,0)
diff: 
delta:
   (122.9 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Even Checkboard at (1,2)
diff: 
delta:
   (22.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxxx|xx..|xx..|.xx. at (4,0)
  _01: a rectangle with size (4,4) and color green and mask .xx.|.x.x|..x.|xxxx at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.x.x|..x.|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color blue and mask xxxx|xx..|xx..|.xx. at (4,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 94f9d214.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,4) and color blue and layers
  _0: a rectangle with size (4,3) and color black and mask xxx|x..|.x.|..x at (1,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,0)
diff: 
delta: (5,0)=0  (6,1)=0  (7,0)=0 
   (179.9 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,1)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color blue and layers
  _0: a rectangle with size (4,3) and color black and mask xxx|x..|.x.|..x at (1,1)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,0)
diff: 
delta: (5,0)=0  (6,1)=0  (7,0)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,4) and color blue and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|x...|x.xx|xx.x at (0,0)
  _01: a rectangle with size (4,3) and color black and mask xxx|x..|.x.|..x at (1,1)
diff: 
delta: (5,0)=0  (6,1)=0  (7,0)=0 
! 3 wrong pixels (generated / expected)

TRAIN 94f9d214.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x.x|xxx.|...x|xxx. at (0,0)
  _01: a rectangle with size (4,4) and color blue and mask ..xx|..xx|.x..|xx.. at (4,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask ..xx|..xx|.x..|xx.. at (4,0)
  _01: a rectangle with size (4,4) and color green and mask .x.x|xxx.|...x|xxx. at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TEST 94f9d214.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 1108.4 bits (1108.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-173] Checking task 952a094c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16874.3 = 16889.9
DL output with Mo: L = 15.6 + 16874.3 = 16889.9
DL input+output M: L = 31.2 + 33748.6 = 33779.8

# learning a model for train pairs
2.000	
1.297	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.523	OUT OBJECT at ^.layer_0: ^.layer_0
0.487	OUT DEF: ^.size=^.size
0.473	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.449	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
0.430	OUT DEF: ^.layer_01.pos=^.layer_0.pos + ^.layer_0.shape.size
0.415	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.391	OUT OBJECT at ^.layer_011: ^.layer_011.shape at (?,?)
0.376	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.350	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at (?,?)
0.334	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.314	OUT DEF: ^.layer_01111.pos=^.layer_0.pos - 1
0.298	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.287	OUT DEF: ^.layer_01111.shape=^.layer_01111.shape
0.278	IN  DEF: ^.layer_0.shape.mask=Border
0.269	OUT DEF: ^.layer_011.pos.i=bottom(^.layer_0) + 1
0.260	OUT DEF: ^.layer_0111.pos.j=right(^.layer_0) + 1
0.252	OUT DEF: ^.layer_011.pos.j=right(^.layer_0) - ^.layer_0.shape.size.j
0.244	OUT DEF: ^.layer_0111.pos.i=bottom(^.layer_0) - ^.layer_0.shape.size.i
0.239	IN  DEF: ^.color=black
0.235	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at ^.layer_0.pos + ^.layer_0.shape.size
  _011: ^.layer_011.shape at (bottom(^.layer_0) + 1,right(^.layer_0) - ^.layer_0.shape.size.j)
  _0111: ^.layer_0111.shape at (bottom(^.layer_0) - ^.layer_0.shape.size.i,right(^.layer_0) + 1)
  _01111: ^.layer_01111.shape at ^.layer_0.pos - 1
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 129.2 + 3625.0 = 3754.2
DL output with Mo: L = 213.1 + 0.0 = 213.1
DL input+output M: L = 342.3 + 3625.0 = 3967.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color green at (3,5)
  _0111: a point with color red at (5,4)
  _01111: a point with color pink at (5,5)
diff: 
delta:
   (119.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (7,7)
  _011: a point with color green at (7,2)
  _0111: a point with color red at (1,7)
  _01111: a point with color pink at (1,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color cyan and mask Border at (2,3)
  _01: a point with color yellow at (3,4)
  _011: a point with color green at (3,5)
  _0111: a point with color red at (5,4)
  _01111: a point with color pink at (5,5)
diff: 
delta:
correct output grid

TRAIN 952a094c.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color red at (3,3)
  _011: a point with color cyan at (3,6)
  _0111: a point with color brown at (6,3)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (121.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color red at (8,8)
  _011: a point with color cyan at (8,1)
  _0111: a point with color brown at (1,8)
  _01111: a point with color green at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (2,2)
  _01: a point with color red at (3,3)
  _011: a point with color cyan at (3,6)
  _0111: a point with color brown at (6,3)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN 952a094c.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color red at (2,2)
  _011: a point with color grey at (2,5)
  _0111: a point with color pink at (4,2)
  _01111: a point with color green at (4,5)
diff: 
delta:
   (121.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color red at (6,7)
  _011: a point with color grey at (6,0)
  _0111: a point with color pink at (0,7)
  _01111: a point with color green at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color blue and mask Border at (1,1)
  _01: a point with color red at (2,2)
  _011: a point with color grey at (2,5)
  _0111: a point with color pink at (4,2)
  _01111: a point with color green at (4,5)
diff: 
delta:
correct output grid

TRAIN 952a094c.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask Border at (3,2)
  _01: a point with color pink at (4,3)
  _011: a point with color yellow at (4,6)
  _0111: a point with color cyan at (6,3)
  _01111: a point with color red at (6,6)
diff: 
delta:
correct output grid

TEST 952a094c.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 4.1 sec (4.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-172] Checking task 9565186b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4705.9 = 4721.6
DL output with Mo: L = 15.6 + 3827.6 = 3843.2
DL input+output M: L = 31.2 + 8533.5 = 8564.8

# learning a model for train pairs
2.000	
1.539	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.340	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.204	OUT DEF: ^.size=^.size
1.105	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.026	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.998	IN  DEF: ^.layer_0.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 48.8 + 3645.8 = 3694.6
DL output with Mo: L = 30.9 + 796.6 = 827.5
DL input+output M: L = 79.8 + 4442.3 = 4522.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta: (1,1)=1 
   (69.5 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (1,1)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (1,1)
diff: 
delta: (1,1)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,1)
diff: 
delta: (1,1)=1  (1,2)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color blue and mask Full at (0,0)
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
   (115.5 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,0)
diff: 
delta:
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,1)
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
diff: 
delta: (1,2)=3  (2,1)=2  (2,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color blue and mask Full at (0,0)
diff: 
delta: (1,0)=8  (1,2)=3  (2,0)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,0)
diff: 
delta:
   (44.1 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (1,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|..x|xxx at (0,0)
diff:   ^.layer_0.shape.mask
delta:
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=8  (2,0)=8 
   (135.6 bits)
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (0,0)
diff: 
delta: (0,2)=8  (2,0)=8  (2,1)=1  (2,2)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (2,1)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=8  (2,0)=8 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta: (0,0)=3  (0,1)=3  (0,2)=8  (2,0)=8 
! 9 wrong pixels (generated / expected)

TRAIN 9565186b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,2)
diff: 
delta: (0,0)=1  (2,0)=1 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (0,0)
diff: 
delta: (0,0)=1  (2,0)=1 
! 9 wrong pixels (generated / expected)

TEST 9565186b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 796.6 bits (796.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-171] Checking task 95990924.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8045.1 = 8060.7
DL output with Mo: L = 15.6 + 15258.0 = 15273.6
DL input+output M: L = 31.2 + 23303.1 = 23334.4

# learning a model for train pairs
2.000	
1.735	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.535	OUT OBJECT at ^.layer_0: ^.layer_0
1.445	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.401	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.357	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.316	OUT DEF: ^.size=^.size
1.295	IN  DEF: ^.layer_0.shape.color=grey
1.279	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.267	IN  DEF: ^.layer_0.shape.mask=Full
1.256	OUT DEF: ^.layer_01.pos.i=2
1.247	IN  DEF: ^.color=black
1.239	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.pos.i / 3
1.231	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.pos.i / 3
1.225	OUT DEF: ^.layer_01.shape.mask=Full
1.218	OUT DEF: ^.layer_011.shape.mask=Full
1.212	OUT DEF: ^.layer_0111.shape.mask=Full
1.207	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_0.pos.i / 3,^.layer_0.pos.i / 3) and color ? and mask Full at (2,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 50.3 + 5535.4 = 5585.7
DL output with Mo: L = 179.9 + 7668.7 = 7848.6
DL input+output M: L = 230.2 + 13204.1 = 13434.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
   (41.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,6)
  _0111: a rectangle with size (1,1) and color green and mask Full at (5,3)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
   (75.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (3,4)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 95990924.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (6,6)
diff: 
delta: (2,2)=5# (2,3)=5# (3,2)=5# (3,3)=5#
   (146.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (6,6)
  _01: a rectangle with size (2,2) and color grey and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color blue and mask Full at (1,1)
  _0111: a rectangle with size (1,1) and color red and mask Full at (1,4)
  _01111: a point with color green at (4,1)
diff: 
delta: (4,4)=4  (5,5)=1  (5,8)=2  (8,5)=3  (8,8)=4 
   (205.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (6,6)
diff: 
delta: (2,2)=5# (2,3)=5# (3,2)=5# (3,3)=5#
! 19 wrong pixels (generated / expected)

TRAIN 95990924.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,4)
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
   (365.6 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,4)
  _01: a rectangle with size (2,2) and color grey and mask Full at (2,3)
  _011: a rectangle with size (2,2) and color grey and mask Full at (4,8)
  _0111: a rectangle with size (2,2) and color grey and mask Full at (11,9)
  _01111: a point with color blue at (1,2)
diff: 
delta: (1,5)=2  (3,7)=1  (3,10)=2  (4,2)=3  (4,5)=4  (6,7)=3  (6,10)=4  (7,3)=1  (7,6)=2  (10,3)=3  (10,6)=4  (10,8)=1  (10,11)=2  (13,8)=3  (13,11)=4 
   (486.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (8,4)
diff: 
delta: (2,3)=5# (2,4)=5# (3,3)=5# (3,4)=5# (4,8)=5# (4,9)=5# (5,8)=5# (5,9)=5# (11,9)=5# (11,10)=5# (12,9)=5# (12,10)=5#
! 36 wrong pixels (generated / expected)

TRAIN 95990924.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST 95990924.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 4.2 sec (4.2 sec/task)
bits-train-error = 7668.7 bits (7668.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-170] Checking task 963e52fc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8984.1 = 8999.7
DL output with Mo: L = 15.6 + 17988.3 = 18003.9
DL input+output M: L = 31.2 + 26972.4 = 27003.6

# learning a model for train pairs
2.000	
1.487	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.069	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.925	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.815	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.779	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.761	OUT DEF: ^.size.j=^.size.j * 2
0.748	OUT DEF: ^.size.i=^.size.i
0.737	IN  DEF: ^.layer_01.shape.mask=Full
0.727	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.718	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.704	OUT OBJECT at ^.layer_00: a point with color ? at (?,?)
0.695	OUT DEF: ^.layer_00.shape.color=^.layer_01.shape.color
0.687	IN  DEF: ^.color=black
0.679	OUT DEF: ^.layer_00.pos.j=right(^.layer_0) + ^.layer_01.shape.size.j
0.671	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.shape.size.i
0.663	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.656	OUT DEF: ^.layer_00.pos.i=2
0.650	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.646	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j * 2) and color black and layers
  _00: a point with color ^.layer_01.shape.color at (2,right(^.layer_0) + ^.layer_01.shape.size.j)
  _0: a rectangle with size (^.layer_0.shape.size.i,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (^.layer_01.shape.size.i,?) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 3688.5 = 3768.8
DL output with Mo: L = 150.2 + 3943.5 = 4093.7
DL input+output M: L = 230.5 + 7632.0 = 7862.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full (and Border) at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2  (1,4)=2  (2,2)=2  (2,4)=2 
   (169.4 bits)
data: a background with size (5,12) and color black and layers
  _00: a point with color red at (2,6)
  _0: a rectangle with size (2,11) and color cyan and mask Full (and Border) at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2  (1,4)=2  (1,6)=2  (1,8)=2  (1,10)=2  (2,2)=2  (2,4)=2  (2,8)=2  (2,10)=2 
   (241.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,5) and color red and mask Full (and Border) at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (1,5)
diff: 
delta: (1,1)=8  (1,3)=8  (2,1)=8  (2,3)=8 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask Full (and Border) at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff: 
delta: (1,2)=2  (1,4)=2  (2,2)=2  (2,4)=2 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,5) and color cyan and mask Full at (1,1)
diff: 
delta: (1,2)=2  (1,4)=2  (2,2)=2  (2,4)=2 
! 21 wrong pixels (generated / expected)

TRAIN 963e52fc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,7) and color red and mask Full at (2,0)
diff: 
delta: (2,3)=2 
   (100.0 bits)
data: a background with size (5,14) and color black and layers
  _00: a point with color red at (2,12)
  _0: a rectangle with size (1,13) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta: (2,3)=2  (2,6)=2  (2,9)=2 
   (94.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,7) and color red and mask Full at (2,0)
diff: 
delta: (2,3)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,0)
diff: 
delta: (2,3)=2  (2,6)=2 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (1,5) and color green and mask Full at (2,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,6)
diff: 
delta: (2,0)=2  (2,3)=2 
! 11 wrong pixels (generated / expected)

TRAIN 963e52fc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,8) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask .xx.xx.x|x.xx.xx. at (2,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (2,0)
diff: 
delta:
   (99.5 bits)
data: a background with size (5,16) and color black and layers
  _00: a point with color blue at (2,15)
  _0: a rectangle with size (2,16) and color red and mask .xx.xx.xx.xx.xx.|x.xx.xx.xx.xx.xx at (2,0)
  _01: a rectangle with size (2,14) and color blue and mask Full at (2,0)
diff: 
delta:
   (58.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,8) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask .xx.xx.x|x.xx.xx. at (2,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (2,0)
diff: 
delta:
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,8) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask .xx.xx.x|x.xx.xx. at (2,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (2,0)
diff: 
delta: (3,1)=1  (3,4)=1  (3,7)=1 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,8) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask .xx.xx.x|x.xx.xx. at (2,0)
  _01: a rectangle with size (1,7) and color blue and mask Full at (3,1)
diff: 
delta: (2,0)=1  (2,3)=1  (2,6)=1 
! 30 wrong pixels (generated / expected)

TRAIN 963e52fc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (2,8) and color blue and mask Full (and Border) at (1,1)
  _01: a rectangle with size (2,1) and color green and mask Full at (1,0)
diff: 
delta: (1,3)=3  (1,6)=3  (2,3)=3  (2,6)=3 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,0)
  _01: a rectangle with size (2,8) and color blue and mask Full at (1,1)
diff: 
delta: (1,3)=3  (1,6)=3  (2,3)=3  (2,6)=3 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,3)
  _01: a rectangle with size (2,8) and color blue and mask Full at (1,1)
diff: 
delta: (1,0)=3  (1,6)=3  (2,0)=3  (2,6)=3 
! 29 wrong pixels (generated / expected)

TEST 963e52fc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.1 sec (15.1 sec/task)
bits-train-error = 3943.5 bits (3943.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-169] Checking task 97999447.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2232.4 = 2248.0
DL output with Mo: L = 15.6 + 11573.0 = 11588.6
DL input+output M: L = 31.2 + 13805.4 = 13836.6

# learning a model for train pairs
2.000	
1.826	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.695	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.580	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.503	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.453	OUT DEF: ^.size=^.size
1.408	OUT OBJECT at ^.layer_00: ^.layer_0
1.375	IN  DEF: ^.color=black
1.359	OUT OBJECT at ^.layer_010: ^.layer_0.shape at (?,?)
1.344	OUT DEF: ^.layer_011.shape.color=grey
1.331	OUT DEF: ^.layer_010.pos.i=^.layer_0.pos.i
1.318	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i
1.303	OUT DEF: ^.layer_0.shape.color=grey
1.290	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j + 1
1.278	OUT DEF: ^.layer_010.pos.j=^.layer_0.pos.j + 2
1.269	OUT DEF: ^.layer_01.shape.size.i=1
1.260	OUT DEF: ^.layer_01.shape.mask=Full
1.252	OUT DEF: ^.layer_011.shape.size.i=1
1.243	OUT DEF: ^.layer_011.shape.mask=Full
1.237	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _010: ^.layer_0.shape at (^.layer_0.pos.i,^.layer_0.pos.j + 2)
  _01: a rectangle with size (1,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (1,?) and color grey and mask Full at (^.layer_0.pos.i,^.layer_0.pos.j + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 1879.7 = 1915.4
DL output with Mo: L = 191.7 + 4266.8 = 4458.5
DL input+output M: L = 227.4 + 6146.5 = 6373.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,8) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (5,3)=6 
   (62.5 bits)
data: a background with size (10,8) and color black and layers
  _00: a point with color red at (2,2)
  _0: a rectangle with size (1,1) and color grey and mask Full at (5,4)
  _010: a point with color red at (2,4)
  _01: a rectangle with size (1,5) and color pink and mask Full at (5,3)
  _011: a rectangle with size (1,5) and color grey and mask Full at (2,3)
diff: 
delta: (2,6)=2  (5,6)=5#
   (105.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (5,3)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color black and layers
  _0: a point with color pink at (5,3)
diff: 
delta: (2,2)=2 
! 12 wrong pixels (generated / expected)

TRAIN 97999447.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (4,1)=3  (5,6)=6 
   (91.1 bits)
data: a background with size (10,12) and color black and layers
  _00: a point with color red at (1,2)
  _0: a rectangle with size (2,6) and color grey and mask Even Checkboard at (4,6)
  _010: a point with color red at (1,4)
  _01: a rectangle with size (1,11) and color green and mask Full at (4,1)
  _011: a rectangle with size (1,9) and color grey and mask Full at (1,3)
diff: 
delta: (1,6)=2  (1,8)=2  (1,10)=2  (4,2)=5# (4,4)=5# (5,6)=6  (5,8)=6  (5,10)=6 
   (277.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (4,1)=3  (5,6)=6 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  _0: a point with color green at (4,1)
diff: 
delta: (1,2)=2  (5,6)=6 
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,12) and color black and layers
  _0: a point with color pink at (5,6)
diff: 
delta: (1,2)=2  (4,1)=3 
! 28 wrong pixels (generated / expected)

TRAIN 97999447.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (3,3)
diff: 
delta:
   (34.4 bits)
data: a background with size (7,8) and color black and layers
  _00: a point with color cyan at (3,3)
  _0: a rectangle with size (1,1) and color grey and mask Full at (3,6)
  _010: a point with color cyan at (3,5)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,7)
  _011: a rectangle with size (1,1) and color grey and mask Full at (3,4)
diff: 
delta:
   (43.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (3,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN 97999447.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta: (2,2)=4  (4,4)=8  (6,3)=2 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,8) and color black and layers
  _0: a point with color yellow at (2,2)
diff: 
delta: (1,3)=3  (4,4)=8  (6,3)=2 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,8) and color black and layers
  _0: a point with color cyan at (4,4)
diff: 
delta: (1,3)=3  (2,2)=4  (6,3)=2 
! 21 wrong pixels (generated / expected)

TEST 97999447.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 13.2 sec (13.2 sec/task)
bits-train-error = 4266.8 bits (4266.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-168] Checking task 97a05b5b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 89707.8 = 89723.4
DL output with Mo: L = 15.6 + 10109.6 = 10125.2
DL input+output M: L = 31.2 + 99817.4 = 99848.6

# learning a model for train pairs
2.000	
1.258	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.111	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.023	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.965	OUT DEF: ^.size=^.layer_0.shape.size
0.924	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.886	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.860	OUT DEF: ^.color=red
0.836	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.817	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color red and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 15746.2 = 15891.4
DL output with Mo: L = 120.1 + 6357.4 = 6477.5
DL input+output M: L = 265.2 + 22103.6 = 22368.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (17,9) and color red and mask xxxxxxxxx|x.xxxxx.x|x..xxxx.x|xxxxxxx.x|xxxxxxxxx|xxxxxxxxx|xxxx.xxxx|xxx...xxx|xxxx.xxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx.xx|xx.xxx.xx|x..xx...x|xxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color green and mask Full at (7,14)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (20,3)
  _0111: a rectangle with size (2,3) and color red and mask Full (and Border) at (18,14)
diff: 
delta: (2,13)=1  (2,14)=2  (2,15)=1  (3,13)=2  (3,14)=2  (3,15)=2  (4,13)=1  (4,14)=2  (4,15)=1  (8,14)=2  (8,15)=2  (8,16)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,15)=8  (20,8)=5# (20,9)=5# (20,10)=2  (21,4)=2  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,8)=5# (22,9)=5# (22,10)=2 
   (1036.6 bits)
data: a background with size (17,9) and color red and layers
  _0: a rectangle with size (3,3) and color yellow and mask .xx|..x|xxx at (1,1)
  _01: a rectangle with size (3,2) and color cyan and mask x.|xx|x. at (13,0)
  _011: a rectangle with size (3,1) and color green and mask Full at (1,6)
diff: 
delta: (1,8)=3  (2,8)=3  (3,8)=3  (6,3)=1  (6,5)=1  (8,3)=1  (8,5)=1  (13,5)=5# (13,7)=5# (14,5)=5# (14,7)=5#
   (403.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,19) and color black and layers
  _0: a rectangle with size (17,9) and color red and mask xxxxxxxxx|x.xxxxx.x|x..xxxx.x|xxxxxxx.x|xxxxxxxxx|xxxxxxxxx|xxxx.xxxx|xxx...xxx|xxxx.xxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|x..xxx.xx|xx.xxx.xx|x..xx...x|xxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color green and mask Full at (7,14)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (20,3)
  _0111: a rectangle with size (2,3) and color red and mask Full (and Border) at (18,14)
diff: 
delta: (2,13)=1  (2,14)=2  (2,15)=1  (3,13)=2  (3,14)=2  (3,15)=2  (4,13)=1  (4,14)=2  (4,15)=1  (8,14)=2  (8,15)=2  (8,16)=2  (17,14)=8  (17,15)=8  (17,16)=8  (18,15)=8  (20,8)=5# (20,9)=5# (20,10)=2  (21,4)=2  (21,8)=2  (21,9)=2  (21,10)=2  (22,3)=2  (22,4)=2  (22,8)=5# (22,9)=5# (22,10)=2 
! 28 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xxxxxxxx|xx.xxxxx|x...xxxx|xxxxxxxx|xxxx..xx|xxxx.x.x|xxxxx..x|xxxxxxxx at (1,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (13,5)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (11,1)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (11,3)
diff: 
delta: (11,1)=4  (13,1)=4  (13,7)=3  (14,6)=3  (15,5)=3 
   (341.4 bits)
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (3,1)
  _01: a rectangle with size (3,3) and color green and mask ..x|.x.|x.. at (4,4)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
diff: 
delta: (1,3)=4 
   (125.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,10) and color black and layers
  _0: a rectangle with size (8,8) and color red and mask xxxxxxxx|xx.xxxxx|x...xxxx|xxxxxxxx|xxxx..xx|xxxx.x.x|xxxxx..x|xxxxxxxx at (1,1)
  _01: a rectangle with size (3,3) and color red and mask Full at (13,5)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (11,1)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (11,3)
diff: 
delta: (11,1)=4  (13,1)=4  (13,7)=3  (14,6)=3  (15,5)=3 
! 11 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (1,5)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (3,5)
diff: 
delta:
   (196.6 bits)
data: a background with size (9,9) and color red and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (2,4)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (4,2)
diff: 
delta: (4,4)=8 
   (106.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,12) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask xxxxxxxxx|xxxxxxxxx|xxx.xxxxx|xx...xxxx|xxx.xxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx|xxxxxxxxx at (6,1)
  _01: a rectangle with size (3,3) and color red and mask +-cross at (1,5)
  _011: a rectangle with size (1,3) and color cyan and mask Full at (1,5)
  _0111: a rectangle with size (1,3) and color cyan and mask Full at (3,5)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 97a05b5b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,15) and color black and layers
  _0: a rectangle with size (8,12) and color red and mask xxxxxxxxxxxx|x.xxxx.xxx.x|x..xx..xxxxx|xx..xx.xxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxx...xx|xxxxxxxxxxxx at (1,2)
  _01: a rectangle with size (3,3) and color blue and mask Full at (11,1)
  _011: a rectangle with size (3,3) and color yellow and mask Full at (16,3)
  _0111: a rectangle with size (3,2) and color green and mask Full (and Border) at (11,9)
diff: 
delta: (11,8)=2  (12,2)=2  (12,8)=2  (12,9)=2  (13,8)=2  (15,11)=8  (15,12)=8  (15,13)=2  (16,4)=2  (16,11)=8  (16,12)=2  (16,13)=2  (17,4)=2  (17,11)=2  (17,12)=2  (17,13)=8  (18,4)=2 
! 27 wrong pixels (generated / expected)

TEST 97a05b5b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.7 sec (26.7 sec/task)
bits-train-error = 6357.4 bits (6357.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-167] Checking task 98cf29f8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 43078.6 = 43094.2
DL output with Mo: L = 15.6 + 40186.1 = 40201.7
DL input+output M: L = 31.2 + 83264.7 = 83296.0

# learning a model for train pairs
2.000	
1.256	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.557	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.358	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.149	OUT OBJECT at ^.layer_01: ^.layer_01
0.132	OUT DEF: ^.size=^.size
0.125	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.107	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.098	OUT DEF: ^.layer_0.pos=^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
0.096	IN  DEF: ^.layer_0.shape.mask=Full
0.094	IN  DEF: ^.layer_01.shape.mask=Full
0.091	IN  DEF: ^.layer_011.shape.mask=Full
0.089	OUT DEF: ^.color=black
0.088	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 112.4 + 3606.8 = 3719.2
DL output with Mo: L = 53.5 + 0.0 = 53.5
DL input+output M: L = 165.9 + 3606.8 = 3772.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (8,2)
  _01: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (7,1) and color grey and mask Full at (4,3)
diff: 
delta:
   (118.5 bits)
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (4,2)
  _01: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color grey and mask Full at (8,2)
  _011: a rectangle with size (7,1) and color grey and mask Full at (4,3)
diff: 
delta:
! 58 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,14) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (8,2)
  _01: a rectangle with size (3,7) and color yellow and mask Full at (1,1)
  _011: a rectangle with size (7,1) and color grey and mask Full at (4,3)
diff: 
delta:
correct output grid

TRAIN 98cf29f8.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
diff: 
delta:
   (119.5 bits)
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (5,4)
  _01: a rectangle with size (7,7) and color red and mask Full at (3,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
diff: 
delta:
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (7,7) and color red and mask Full at (3,7)
  _011: a rectangle with size (1,6) and color yellow and mask Full at (6,1)
diff: 
delta:
correct output grid

TRAIN 98cf29f8.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Full at (7,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
  _011: a rectangle with size (10,1) and color green and mask Full at (3,7)
diff: 
delta:
   (122.7 bits)
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Full at (3,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,19) and color black and layers
  _0: a rectangle with size (6,8) and color green and mask Full at (7,3)
  _01: a rectangle with size (2,5) and color red and mask Full at (1,6)
  _011: a rectangle with size (10,1) and color green and mask Full at (3,7)
diff: 
delta:
correct output grid

TRAIN 98cf29f8.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (8,5) and color green and mask Full at (3,1)
  _01: a rectangle with size (3,4) and color orange and mask Full at (4,11)
  _011: a rectangle with size (1,9) and color orange and mask Full at (4,6)
diff: 
delta:
! 92 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,17) and color black and layers
  _0: a rectangle with size (3,4) and color orange and mask Full at (4,11)
  _01: a rectangle with size (8,5) and color green and mask Full at (3,1)
  _011: a rectangle with size (1,9) and color orange and mask Full at (4,6)
diff: 
delta:
correct output grid

TEST 98cf29f8.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.67
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-166] Checking task 995c5fa3.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 15844.7 = 15860.4
DL output with Mo: L = 15.6 + 5585.3 = 5600.9
DL input+output M: L = 31.2 + 21430.1 = 21461.3

# learning a model for train pairs
2.000	
1.721	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.507	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.331	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.163	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.942	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	OUT DEF: ^.size.i=^.size.i - 1
0.852	OUT DEF: ^.layer_0.shape.size.j=bottom(^.layer_0)
0.808	OUT DEF: ^.layer_01.shape.size.j=bottom(^.layer_0)
0.764	OUT DEF: ^.size.j=bottom(^.layer_0)
0.737	OUT DEF: ^.layer_0.pos.j='0
0.709	OUT DEF: ^.layer_01.pos.j='0
0.683	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i / 2
0.657	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.pos.i + 1
0.633	OUT DEF: ^.layer_01.pos.i=^.layer_01.shape.size.j / 2
0.609	OUT DEF: ^.layer_0.shape.size.i=1
0.586	OUT DEF: ^.layer_0.shape.mask=Full
0.562	OUT DEF: ^.layer_01.shape.mask=Full
0.554	IN  DEF: ^.layer_01.shape.mask=Full
0.553	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i - 1,bottom(^.layer_0)) and color ? and layers
  _0: a rectangle with size (1,bottom(^.layer_0)) and color ? and mask Full at (^.layer_0.pos.i / 2,'0)
  _01: a rectangle with size (^.layer_0.pos.i + 1,bottom(^.layer_0)) and color ? and mask ^.layer_01.shape.mask at (^.layer_01.shape.size.j / 2,'0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 6050.2 = 6163.5
DL output with Mo: L = 178.3 + 745.1 = 923.4
DL input+output M: L = 291.6 + 6795.3 = 7086.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,9)
  _01: a rectangle with size (2,2) and color black and mask Full at (1,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,4)
diff: 
delta: (1,13)=0  (2,13)=0 
   (176.5 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (1,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,9)
  _01: a rectangle with size (2,2) and color black and mask Full at (1,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,4)
diff: 
delta: (1,13)=0  (2,13)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,9)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color black and mask Full (and Border) at (1,6)
diff: 
delta: (1,13)=0  (2,13)=0 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (1,6)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,9)
diff: 
delta: (1,13)=0  (2,13)=0 
! size mismatch, 3x2 instead of 3x3

TRAIN 995c5fa3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask .x|xx|xx|.x at (0,3)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta: (1,0)=0  (2,0)=0 
   (176.5 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask .x|xx|xx|.x at (0,3)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta: (1,0)=0  (2,0)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask .x|xx|xx|.x at (0,3)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,9)
  _011: a rectangle with size (2,2) and color black and mask Full (and Border) at (2,6)
diff: 
delta: (1,0)=0  (2,0)=0 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (1,3)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta: (0,4)=0  (1,0)=0  (2,0)=0  (3,4)=0 
! size mismatch, 3x2 instead of 3x3

TRAIN 995c5fa3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,10)
diff: 
delta:
   (138.0 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (2,0)
diff: 
delta:
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color grey and mask Full at (0,5)
  _011: a rectangle with size (4,4) and color grey and mask xxxx|xxxx|x..x|x..x at (0,10)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (1,1)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,11)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,4)
diff: 
delta: (0,9)=0  (1,9)=0  (2,9)=0  (3,9)=0 
! size mismatch, 3x2 instead of 3x3

TRAIN 995c5fa3.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (2,6)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta:
   (114.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,0)
diff: 
delta:
   (13.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (2,6)
  _01: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,1) and color black and mask Full at (0,4)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color black and mask Full at (0,9)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 995c5fa3.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,4)
  _01: a rectangle with size (2,5) and color black and mask Full at (1,8)
  _011: a rectangle with size (2,2) and color black and mask Full (and Border) at (2,1)
diff: 
delta: (0,9)=0  (1,10)=5# (2,10)=5# (3,9)=0 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color grey and layers
  _0: a rectangle with size (4,2) and color black and mask x.|xx|xx|x. at (0,4)
  _01: a rectangle with size (2,2) and color black and mask Full at (2,1)
  _011: a rectangle with size (2,5) and color black and mask Full (and Border) at (1,8)
diff: 
delta: (0,9)=0  (1,10)=5# (2,10)=5# (3,9)=0 
! 9 wrong pixels (generated / expected)

TEST 995c5fa3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.8 sec (12.8 sec/task)
bits-train-error = 745.1 bits (745.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-165] Checking task 99b1bc43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 20939.7 = 20955.3
DL output with Mo: L = 15.6 + 6993.3 = 7008.9
DL input+output M: L = 31.2 + 27933.0 = 27964.2

# learning a model for train pairs
2.000	
1.512	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.175	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.960	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.880	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size)
0.848	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.809	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.763	OUT DEF: ^.layer_0.pos=min(^.layer_0.pos, ^.layer_0111.pos)
0.731	OUT DEF: ^.layer_0.shape.color=green
0.717	OUT DEF: ^.color=black
0.706	IN  DEF: ^.layer_01.shape.color=yellow
0.697	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.690	IN  DEF: ^.layer_01.shape.mask=Full
0.684	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color green and mask ? at min(^.layer_0.pos, ^.layer_0111.pos)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 186.3 + 7845.6 = 8031.9
DL output with Mo: L = 94.0 + 2014.0 = 2108.1
DL input+output M: L = 280.3 + 9859.7 = 10140.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _01111: a point with color blue at (0,1)
  _011111: a point with color red at (5,1)
diff: 
delta:
   (190.6 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask ..xx|xxxx at (2,0)
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (0,1)
  _01111: a point with color blue at (2,0)
  _011111: a point with color red at (5,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ...x|...x|x..x|xxx. at (5,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask .x|.x|x.|.x at (0,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _01111: a point with color blue at (0,1)
  _011111: a point with color red at (5,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color black and mask Full at (0,1)
  _0111: a rectangle with size (3,1) and color black and mask Full at (3,0)
  _01111: a point with color black at (6,1)
  _011111: a point with color black at (6,3)
diff: 
delta:
   (190.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,4) and color green and mask Full at (0,0)
diff: 
delta: (0,1)=0  (2,2)=3  (3,0)=3  (3,3)=3 
   (100.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|.xx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,3) and color black and mask Full at (0,1)
  _0111: a rectangle with size (3,1) and color black and mask Full at (3,0)
  _01111: a point with color black at (6,1)
  _011111: a point with color black at (6,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (7,0)
  _0111: a rectangle with size (2,1) and color red and mask Full at (6,3)
  _01111: a point with color red at (6,1)
  _011111: a point with color red at (8,1)
diff: 
delta:
   (177.4 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .x..|xxx.|..xx|..x. at (0,0)
diff: 
delta: (3,0)=3 
   (53.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .x..|x.xx|xxx.|xxx. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (1,2) and color red and mask Full at (7,0)
  _0111: a rectangle with size (2,1) and color red and mask Full at (6,3)
  _01111: a point with color red at (6,1)
  _011111: a point with color red at (8,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color black and mask .x..|xxx.|..xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,2)
  _0111: a rectangle with size (3,2) and color black and mask x.|x.|.x at (5,0)
  _01111: a point with color blue at (0,0)
  _011111: a point with color blue at (2,0)
diff: 
delta: (2,1)=1 
   (225.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xx..|.xx.|.xxx|xx.. at (0,0)
diff: 
delta:
   (29.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color red and layers
  _0: a rectangle with size (4,4) and color black and mask .x..|xxx.|..xx|xx.. at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,2)
  _0111: a rectangle with size (3,2) and color black and mask x.|x.|.x at (5,0)
  _01111: a point with color blue at (0,0)
  _011111: a point with color blue at (2,0)
diff: 
delta: (2,1)=1 
! 9 wrong pixels (generated / expected)

TRAIN 99b1bc43.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.xx|.xxx|..x.|..xx at (0,0)
  _01: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
  _011: a rectangle with size (4,4) and color red and mask xx.x|..x.|...x|...x at (5,0)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (3,0)
  _01111: a point with color red at (7,0)
  _011111: a point with color red at (8,1)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST 99b1bc43.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.9 sec (6.9 sec/task)
bits-train-error = 2014.0 bits (2014.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-164] Checking task 99fa7670.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2712.9 = 2728.5
DL output with Mo: L = 15.6 + 10068.6 = 10084.2
DL input+output M: L = 31.2 + 12781.5 = 12812.7

# learning a model for train pairs
2.000	
1.664	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.489	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.361	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.298	OUT DEF: ^.size=^.size
1.260	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.224	IN  DEF: ^.color=black
1.197	OUT DEF: ^.layer_0.shape.size.j=^.size.j - 1
1.174	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.154	OUT DEF: ^.layer_01.shape.size.i=2
1.134	OUT DEF: ^.layer_0.shape.size.i=^.size.j / 2
1.124	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.j / 2,^.size.j - 1) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size (2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 2244.3 = 2279.9
DL output with Mo: L = 104.8 + 2805.0 = 2909.8
DL input+output M: L = 140.5 + 5049.3 = 5189.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,1)
diff: 
delta: (1,2)=2 
   (57.9 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxxxx|....x|....x at (3,1)
  _01: a rectangle with size (2,4) and color red and mask xxxx|...x at (1,2)
diff: 
delta:
   (57.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (3,1)=3 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (3,1)
diff: 
delta: (1,2)=2 
! 17 wrong pixels (generated / expected)

TRAIN 99fa7670.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (1,1)
diff: 
delta:
   (26.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,2)
diff: 
delta:
   (23.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN 99fa7670.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (4,3)=5#
   (57.9 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxxx|....x|....x at (1,1)
  _01: a rectangle with size (2,3) and color grey and mask xxx|..x at (4,3)
diff: 
delta:
   (54.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (4,3)=5#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,3)
diff: 
delta: (1,1)=8 
! 12 wrong pixels (generated / expected)

TRAIN 99fa7670.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,5) and color black and layers
  _0: a point with color orange at (3,1)
diff: 
delta: (1,2)=8  (5,2)=6 
   (82.3 bits)
data: a background with size (7,5) and color black and layers
  _0: a rectangle with size (2,4) and color orange and mask xxxx|...x at (3,1)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|..x at (1,2)
diff: 
delta: (5,2)=6  (5,3)=6  (5,4)=6  (6,4)=6 
   (144.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,5) and color black and layers
  _0: a point with color cyan at (1,2)
diff: 
delta: (3,1)=7# (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,5) and color black and layers
  _0: a point with color orange at (3,1)
diff: 
delta: (1,2)=8  (5,2)=6 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,5) and color black and layers
  _0: a point with color pink at (5,2)
diff: 
delta: (1,2)=8  (3,1)=7#
! 15 wrong pixels (generated / expected)

TRAIN 99fa7670.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a point with color cyan at (0,3)
diff: 
delta: (2,2)=7# (4,5)=2 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,8) and color black and layers
  _0: a point with color orange at (2,2)
diff: 
delta: (0,3)=8  (4,5)=2 
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,8) and color black and layers
  _0: a point with color red at (4,5)
diff: 
delta: (0,3)=8  (2,2)=7#
! 21 wrong pixels (generated / expected)

TEST 99fa7670.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 2805.0 bits (2805.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-163] Checking task 9aec4887.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 19288.9 = 19304.5
DL output with Mo: L = 15.6 + 17149.6 = 17165.2
DL input+output M: L = 31.2 + 36438.5 = 36469.7

# learning a model for train pairs
2.000	
1.728	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.582	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.464	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.344	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.230	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.132	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.021	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
0.922	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.829	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.725	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.706	OUT OBJECT at ^.layer_01111: ^.layer_010.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_010.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 6104.9 = 6281.8
DL output with Mo: L = 195.8 + 6345.4 = 6541.3
DL input+output M: L = 372.7 + 12450.3 = 12823.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (7,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (8,6)
  _011: a rectangle with size (1,4) and color green and mask Full at (12,7)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,11)
diff: 
delta:
   (208.1 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask .x..|xxxx at (4,1)
  _010: a rectangle with size (4,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (4,4) and color cyan and mask x...|.x..|.xx.|...x at (1,1)
  _011: a rectangle with size (4,2) and color blue and mask Full (and Border) at (1,4)
  _0111: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _01111: a rectangle with size (1,4) and color yellow and mask Full at (0,1)
diff: 
delta: (1,4)=8 
   (215.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (7,7)
  _01: a rectangle with size (1,4) and color green and mask Full at (12,7)
  _011: a rectangle with size (4,1) and color red and mask Full at (8,6)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,11)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.x.x|xxxx|.x.x at (1,1)
  _010: a rectangle with size (1,4) and color yellow and mask Full at (7,7)
  _01: a rectangle with size (4,1) and color red and mask Full at (8,6)
  _011: a rectangle with size (1,4) and color green and mask Full at (12,7)
  _0111: a rectangle with size (4,1) and color blue and mask Full at (8,11)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 9aec4887.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
  _010: a rectangle with size (1,3) and color green and mask Full at (6,2)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,2)
  _011: a rectangle with size (3,1) and color pink and mask Full at (7,1)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (7,5)
diff: 
delta:
   (195.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (1,0)
  _010: a rectangle with size (1,3) and color red and mask Full at (4,1)
  _01: a rectangle with size (3,2) and color yellow and mask .x|xx|.x at (1,3)
  _011: a rectangle with size (2,1) and color green and mask Full at (0,2)
  _0111: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,2)
  _01111: a rectangle with size (1,3) and color green and mask Full at (0,1)
diff: 
delta: (3,2)=2 
   (193.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
  _010: a rectangle with size (1,3) and color green and mask Full at (6,2)
  _01: a rectangle with size (1,3) and color red and mask Full at (10,2)
  _011: a rectangle with size (3,1) and color pink and mask Full at (7,1)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (7,5)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5
>> Trial 2
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask .x.|xxx|.xx at (2,8)
  _010: a rectangle with size (1,3) and color green and mask Full at (6,2)
  _01: a rectangle with size (3,1) and color pink and mask Full at (7,1)
  _011: a rectangle with size (1,3) and color red and mask Full at (10,2)
  _0111: a rectangle with size (3,1) and color yellow and mask Full at (7,5)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN 9aec4887.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
  _010: a rectangle with size (1,4) and color orange and mask Full at (1,3)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (2,2)
  _011: a rectangle with size (1,4) and color blue and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color pink and mask Full at (2,7)
diff: 
delta:
   (207.4 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|.xx.|.x..|x... at (1,1)
  _010: a rectangle with size (4,1) and color yellow and mask Full at (1,0)
  _01: a rectangle with size (2,4) and color blue and mask .x..|xxxx at (4,1)
  _011: a rectangle with size (4,2) and color pink and mask .x|.x|xx|.x at (1,4)
  _0111: a rectangle with size (1,1) and color cyan and mask Full at (4,4)
  _01111: a rectangle with size (1,4) and color orange and mask Full at (0,1)
diff: 
delta: (1,2)=7#
   (225.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
  _010: a rectangle with size (1,4) and color orange and mask Full at (1,3)
  _01: a rectangle with size (1,4) and color blue and mask Full at (6,3)
  _011: a rectangle with size (4,1) and color yellow and mask Full at (2,2)
  _0111: a rectangle with size (4,1) and color pink and mask Full at (2,7)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xx.x|.xx.|.x.x|xx.x at (9,6)
  _010: a rectangle with size (1,4) and color orange and mask Full at (1,3)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (2,2)
  _011: a rectangle with size (1,4) and color blue and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color pink and mask Full at (2,7)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN 9aec4887.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|x.xx.|.xxxx|..x..|xx.xx at (9,2)
  _010: a rectangle with size (1,5) and color blue and mask Full at (0,6)
  _01: a rectangle with size (1,5) and color green and mask Full at (6,6)
  _011: a rectangle with size (5,1) and color red and mask Full at (1,5)
  _0111: a rectangle with size (5,1) and color yellow and mask Full at (1,11)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|x.xx.|.xxxx|..x..|xx.xx at (9,2)
  _010: a rectangle with size (1,5) and color blue and mask Full at (0,6)
  _01: a rectangle with size (5,1) and color red and mask Full at (1,5)
  _011: a rectangle with size (1,5) and color green and mask Full at (6,6)
  _0111: a rectangle with size (5,1) and color yellow and mask Full at (1,11)
diff: 
delta:
! size mismatch, 10x10 instead of 7x7

TEST 9aec4887.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.9 sec (26.9 sec/task)
bits-train-error = 6345.4 bits (6345.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-162] Checking task 9af7a82c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6127.9 = 6143.5
DL output with Mo: L = 15.6 + 11127.1 = 11142.7
DL input+output M: L = 31.2 + 17255.0 = 17286.2

# learning a model for train pairs
2.000	
1.658	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.347	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.160	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.013	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.981	OUT DEF: ^.layer_0.pos='(0,0)
0.957	OUT DEF: ^.layer_01.shape.size.i=^.size.i
0.934	OUT DEF: ^.size.j=right(^.layer_01) + 2
0.913	IN  DEF: ^.layer_01.shape.mask=Full
0.896	OUT DEF: ^.layer_01.pos.i='0
0.879	OUT DEF: ^.layer_011.pos.i='0
0.862	OUT DEF: ^.layer_0.shape.color=^.color
0.834	OUT DEF: ^.size.i=^.size.i + ^.layer_01.shape.size.j
0.808	OUT DEF: ^.layer_0.shape.size.i=^.size.i + ^.layer_01.shape.size.j
0.793	OUT DEF: ^.layer_01.pos.j=1
0.779	OUT DEF: ^.layer_011.pos.j=2
0.767	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.755	OUT DEF: ^.layer_0.shape.size.j=1
0.743	OUT DEF: ^.layer_0.shape.mask=Full
0.731	OUT DEF: ^.layer_01.shape.size.j=1
0.719	OUT DEF: ^.layer_011.shape.size.j=1
0.707	OUT DEF: ^.layer_011.shape.mask=Full
0.698	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i + ^.layer_01.shape.size.j,right(^.layer_01) + 2) and color black and layers
  _0: a rectangle with size (^.size.i + ^.layer_01.shape.size.j,1) and color ^.color and mask Full at '(0,0)
  _01: a rectangle with size (^.size.i,1) and color ? and mask ^.layer_01.shape.mask at ('0,1)
  _011: a rectangle with size (?,1) and color ? and mask Full at ('0,2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 81.2 + 3459.9 = 3541.2
DL output with Mo: L = 220.1 + 1138.5 = 1358.6
DL input+output M: L = 301.3 + 4598.5 = 4899.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,0)
diff: 
delta:
   (69.5 bits)
data: a background with size (5,3) and color black and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,2)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask xx|x. at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta:
! size mismatch, 4x3 instead of 5x3
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|..x|xxx at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta:
! size mismatch, 4x3 instead of 5x3

TRAIN 9af7a82c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta: (0,0)=3 
   (96.1 bits)
data: a background with size (6,4) and color black and layers
  _0: a rectangle with size (6,1) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color blue and mask Full at (0,2)
diff: 
delta: (0,3)=3 
   (41.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
diff: 
delta: (0,0)=3 
! size mismatch, 5x4 instead of 6x4
>> Trial 2
data: a background with size (3,4) and color yellow and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,1)
  _01: a rectangle with size (1,3) and color red and mask Full at (1,0)
diff: 
delta: (0,0)=3 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color red and layers
  _0: a rectangle with size (3,4) and color yellow and mask ...x|...x|xxxx at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (0,1)
diff: 
delta: (0,0)=3 
! size mismatch, 5x4 instead of 6x4

TRAIN 9af7a82c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,3) and color green and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
diff: 
delta: (0,2)=2 
   (106.1 bits)
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color cyan and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (0,3)=2 
   (41.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color cyan and layers
  _0: a rectangle with size (3,2) and color green and mask x.|xx|xx at (1,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
diff: 
delta: (0,2)=2 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color green and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,2)
diff: 
delta: (0,2)=2 
! 7 wrong pixels (generated / expected)

TRAIN 9af7a82c.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
  _01: a rectangle with size (3,2) and color red and mask Full at (1,0)
diff: 
delta:
   (74.3 bits)
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (4,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,2)
diff: 
delta:
   (16.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
  _01: a rectangle with size (3,2) and color red and mask Full at (1,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color blue and layers
  _0: a rectangle with size (3,2) and color red and mask xx|x.|x. at (1,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
diff: 
delta:
! size mismatch, 5x3 instead of 6x3
>> Trial 3
data: a background with size (4,3) and color red and layers
  _0: a rectangle with size (4,3) and color blue and mask xxx|..x|..x|..x at (0,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (2,1)
diff: 
delta:
! size mismatch, 5x3 instead of 6x3

TRAIN 9af7a82c.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|.xx at (0,0)
  _01: a rectangle with size (2,2) and color red and mask Full at (0,2)
diff: 
delta: (2,1)=3  (2,2)=3  (2,3)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,2)
  _01: a rectangle with size (2,3) and color cyan and mask Full at (0,0)
diff: 
delta: (1,0)=1  (2,1)=3  (2,2)=3  (2,3)=4 
! size mismatch, 7x4 instead of 6x5

TEST 9af7a82c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 12.4 sec (12.4 sec/task)
bits-train-error = 1138.5 bits (1138.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-161] Checking task 9d9215db.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4404.8 = 4420.4
DL output with Mo: L = 15.6 + 28910.6 = 28926.2
DL input+output M: L = 31.2 + 33315.4 = 33346.7

# learning a model for train pairs
2.000	
1.947	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.892	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.835	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.774	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.736	IN  DEF: ^.layer_0111.shape.color=blue
1.708	OUT OBJECT at ^.layer_0: ^.layer_0
1.681	OUT OBJECT at ^.layer_01: ^.layer_01
1.653	OUT OBJECT at ^.layer_011: ^.layer_011
1.625	OUT OBJECT at ^.layer_0111: ^.layer_0111
1.600	OUT DEF: ^.size=^.size
1.584	IN  DEF: ^.color=black
1.570	OUT OBJECT at ^.layer_00: ^.layer_0.shape at (?,?)
1.557	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
1.543	OUT OBJECT at ^.layer_0110: ^.layer_011.shape at (?,?)
1.530	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at (?,?)
1.516	OUT OBJECT at ^.layer_01110: ^.layer_0111.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0.shape at (?,?)
  _0: ^.layer_0
  _010: ^.layer_01.shape at (?,?)
  _01: ^.layer_01
  _0110: ^.layer_011.shape at (?,?)
  _011: ^.layer_011
  _01110: ^.layer_0111.shape at (?,?)
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color blue at (?,?)

DL input  with Mi: L = 97.4 + 3081.3 = 3178.7
DL output with Mo: L = 134.7 + 22924.3 = 23059.0
DL input+output M: L = 232.2 + 26005.6 = 26237.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
   (93.1 bits)
data: a background with size (19,19) and color black and layers
  _00: a point with color cyan at (1,17)
  _0: a point with color cyan at (1,1)
  _010: a point with color blue at (1,5)
  _01: a point with color blue at (1,3)
  _0110: a point with color red at (3,15)
  _011: a point with color red at (3,3)
  _01110: a point with color blue at (1,7)
  _0111: a point with color blue at (3,1)
  _01111: a point with color blue at (1,9)
diff: 
delta: (1,11)=1  (1,13)=1  (1,15)=1  (3,17)=1  (5,1)=1  (5,17)=1  (7,1)=1  (7,17)=1  (9,1)=1  (9,17)=1  (11,1)=1  (11,17)=1  (13,1)=1  (13,17)=1  (15,1)=1  (15,3)=2  (15,15)=2  (15,17)=1  (17,1)=8  (17,3)=1  (17,5)=1  (17,7)=1  (17,9)=1  (17,11)=1  (17,13)=1  (17,15)=1  (17,17)=8 
   (800.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
! 33 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color blue at (1,3)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (3,3)
  _0111: a point with color blue at (3,1)
diff: 
delta:
! 33 wrong pixels (generated / expected)

TRAIN 9d9215db.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color blue at (3,13)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta:
   (93.1 bits)
data: a background with size (19,19) and color black and layers
  _00: a point with color green at (1,1)
  _0: a point with color green at (1,17)
  _010: a point with color blue at (3,5)
  _01: a point with color blue at (3,13)
  _0110: a point with color yellow at (3,3)
  _011: a point with color yellow at (3,15)
  _01110: a point with color blue at (3,7)
  _0111: a point with color blue at (5,15)
  _01111: a point with color blue at (3,9)
diff: 
delta: (3,11)=1  (5,3)=1  (7,3)=1  (7,15)=1  (9,3)=1  (9,15)=1  (11,3)=1  (11,15)=1  (13,3)=1  (13,15)=1  (15,3)=4  (15,5)=1  (15,7)=1  (15,9)=1  (15,11)=1  (15,13)=1  (15,15)=4  (17,1)=3  (17,17)=3 
   (585.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,17)
  _01: a point with color blue at (3,13)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color blue at (3,13)
  _01: a point with color green at (1,17)
  _011: a point with color yellow at (3,15)
  _0111: a point with color blue at (5,15)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN 9d9215db.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
   (121.9 bits)
data: a background with size (19,19) and color black and layers
  _00: a point with color yellow at (1,17)
  _0: a point with color yellow at (1,1)
  _010: a point with color green at (1,5)
  _01: a point with color green at (1,3)
  _0110: a point with color green at (1,7)
  _011: a point with color green at (3,1)
  _01110: a point with color blue at (3,15)
  _0111: a point with color blue at (3,3)
  _01111: a point with color blue at (15,3)
diff: 
delta: (1,9)=3  (1,11)=3  (1,13)=3  (1,15)=3  (3,17)=3  (5,1)=3  (5,5)=8  (5,13)=8  (5,17)=3  (7,1)=3  (7,17)=3  (9,1)=3  (9,17)=3  (11,1)=3  (11,17)=3  (13,1)=3  (13,5)=8  (13,13)=8  (13,17)=3  (15,1)=3  (15,15)=1  (15,17)=3  (17,1)=4  (17,3)=3  (17,5)=3  (17,7)=3  (17,9)=3  (17,11)=3  (17,13)=3  (17,15)=3  (17,17)=4 
   (907.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color green at (1,3)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
! 37 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color green at (1,3)
  _01: a point with color yellow at (1,1)
  _011: a point with color green at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta: (5,5)=8 
! 37 wrong pixels (generated / expected)

TRAIN 9d9215db.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color yellow at (13,5)
  _011: a point with color cyan at (13,7)
  _0111: a point with color blue at (17,1)
diff: 
delta: (15,1)=3  (15,3)=2  (17,3)=3 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _0: a point with color cyan at (11,5)
  _01: a point with color yellow at (13,5)
  _011: a point with color green at (15,1)
  _0111: a point with color blue at (17,1)
diff: 
delta: (13,7)=8  (15,3)=2  (17,3)=3 
! 49 wrong pixels (generated / expected)

TEST 9d9215db.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 22924.3 bits (22924.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-160] Checking task 9dfd6313.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5389.4 = 5405.0
DL output with Mo: L = 15.6 + 5389.4 = 5405.0
DL input+output M: L = 31.2 + 10778.8 = 10810.0

# learning a model for train pairs
2.000	
1.767	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	OUT OBJECT at ^.layer_0: ^.layer_0
1.179	OUT DEF: ^.size=^.size
1.110	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.041	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.010	IN  DEF: ^.layer_0.shape.color=grey
0.986	OUT DEF: ^.layer_01.shape.size.j=area(^.layer_01.shape)
0.955	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.932	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.j
0.909	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.i
0.891	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.872	OUT DEF: ^.layer_01.shape.size.i=1
0.854	IN  DEF: ^.layer_01.shape.mask=Full
0.840	IN  DEF: ^.color=black
0.826	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (1,area(^.layer_01.shape)) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at (^.layer_01.pos.j,^.layer_01.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 82.7 + 3348.6 = 3431.3
DL output with Mo: L = 66.2 + 969.5 = 1035.7
DL input+output M: L = 148.9 + 4318.1 = 4467.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,0)
diff: 
delta:
   (68.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN 9dfd6313.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (2,0)
diff: 
delta: (3,2)=4 
   (104.5 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (0,2)
diff: 
delta: (2,3)=4 
   (24.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (2,0)
diff: 
delta: (3,2)=4 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
diff: 
delta: (2,0)=6  (3,0)=6 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color pink and mask Full at (2,0)
  _01: a rectangle with size (4,4) and color grey and mask x...|.x..|..x.|...x at (0,0)
diff:   ^.layer_01.shape.mask  ^.layer_0.shape.color
delta: (3,2)=4 
! 8 wrong pixels (generated / expected)

TRAIN 9dfd6313.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (3,1)
diff: 
delta: (2,0)=8  (2,1)=8  (4,3)=1 
   (162.2 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,3)
diff: 
delta: (0,2)=8  (1,2)=8  (3,4)=1 
   (72.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
diff: 
delta: (3,1)=2  (4,1)=2  (4,3)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (3,1)
diff: 
delta: (2,0)=8  (2,1)=8  (4,3)=1 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask x....|.x...|..x..|...x.|....x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,3)
diff: 
delta: (2,0)=8  (2,1)=8  (3,1)=2  (4,1)=2 
! 4 wrong pixels (generated / expected)

TRAIN 9dfd6313.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,0)
diff: 
delta: (4,0)=2  (4,2)=8  (4,3)=8  (5,0)=2  (5,2)=6 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
diff: 
delta: (2,0)=3  (2,1)=3  (4,0)=2  (5,0)=2  (5,2)=6 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,0)
diff: 
delta: (2,0)=3  (2,1)=3  (4,2)=8  (4,3)=8  (5,2)=6 
! 5 wrong pixels (generated / expected)

TEST 9dfd6313.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 969.5 bits (969.5 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-159] Checking task 9ecd008a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 147895.5 = 147911.2
DL output with Mo: L = 15.6 + 3368.6 = 3384.2
DL input+output M: L = 31.2 + 151264.2 = 151295.4

# learning a model for train pairs
2.000	
1.843	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.713	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.604	OUT DEF: ^.size=^.layer_0.pos + 3
1.527	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.482	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.438	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.409	OUT DEF: ^.layer_0.shape.mask=Full
1.380	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.shape.size.i / 3
1.359	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.i - ^.layer_01.shape.size.j
1.346	OUT DEF: ^.layer_011.pos.j=span(^.layer_0.pos.j, ^.layer_01.pos.j) - min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
1.344	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.316	OUT DEF: ^.layer_0.shape.size.j=^.layer_00.pos.j + 1
1.288	OUT DEF: ^.layer_0.pos.i=^.layer_00.pos.j * 2
1.266	OUT DEF: ^.layer_01.pos.i=span(^.layer_01.pos.j, ^.layer_00.pos.j) - 3
1.244	OUT DEF: ^.layer_011.pos.i=span(^.layer_01.pos.j, ^.layer_00.pos.j) - 3

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.pos + 3 and color ? and layers
  _0: a rectangle with size (^.layer_01.shape.size.i / 3,^.layer_00.pos.j + 1) and color ? and mask Full at (^.layer_00.pos.j * 2,^.layer_01.shape.size.i - ^.layer_01.shape.size.j)
  _01: a point with color ? at (span(^.layer_01.pos.j, ^.layer_00.pos.j) - 3,?)
  _011: a point with color ? at (span(^.layer_01.pos.j, ^.layer_00.pos.j) - 3,span(^.layer_0.pos.j, ^.layer_01.pos.j) - min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j))
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 101.0 + 118177.2 = 118278.2
DL output with Mo: L = 376.8 + 1128.4 = 1505.2
DL input+output M: L = 477.8 + 119305.6 = 119783.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (16,16) and color cyan and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x........x...|..xx........xx..|.x............x.|xx............xx|xx............xx|.x............x.|..xx........xx..|...x........x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _01: a rectangle with size (3,3) and color black and mask Full at (5,4)
diff: 
delta: (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,2)=4  (2,3)=4  (2,6)=2  (2,7)=9# (2,8)=9# (2,9)=2  (2,12)=4  (2,13)=4  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,2)=4  (3,3)=4  (3,6)=9# (3,7)=2  (3,8)=2  (3,9)=9# (3,12)=4  (3,13)=4  (3,14)=7# (3,15)=5# (4,4)=4  (4,5)=4  (4,10)=4  (4,11)=4  (5,1)=7# (5,7)=9# (5,8)=9# (5,10)=7# (5,11)=4  (5,14)=7# (6,2)=2  (6,3)=9# (6,7)=3  (6,8)=3  (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,9)=3  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,6)=3  (8,9)=3  (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,7)=3  (9,8)=3  (9,12)=9# (9,13)=2  (10,1)=7# (10,4)=4  (10,5)=7# (10,7)=9# (10,8)=9# (10,10)=7# (10,11)=4  (10,14)=7# (11,4)=4  (11,5)=4  (11,10)=4  (11,11)=4  (12,0)=5# (12,1)=7# (12,2)=4  (12,3)=4  (12,6)=9# (12,7)=2  (12,8)=2  (12,9)=9# (12,12)=4  (12,13)=4  (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,2)=4  (13,3)=4  (13,6)=2  (13,7)=9# (13,8)=9# (13,9)=2  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
   (3555.1 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _01: a point with color brown at (2,1)
  _011: a point with color green at (2,2)
diff: 
delta: (0,1)=7#
   (53.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (16,16) and color cyan and mask .......xx.......|......xxxx......|.....x....x.....|....xx....xx....|...x........x...|..xx........xx..|.x............x.|xx............xx|xx............xx|.x............x.|..xx........xx..|...x........x...|....xx....xx....|.....x....x.....|......xxxx......|.......xx....... at (0,0)
  _01: a rectangle with size (3,3) and color black and mask Full at (5,4)
diff: 
delta: (0,2)=3  (0,3)=5# (0,12)=5# (0,13)=3  (0,15)=2  (1,1)=2  (1,2)=5# (1,3)=7# (1,5)=7# (1,10)=7# (1,12)=7# (1,13)=5# (1,14)=2  (2,0)=3  (2,1)=5# (2,2)=4  (2,3)=4  (2,6)=2  (2,7)=9# (2,8)=9# (2,9)=2  (2,12)=4  (2,13)=4  (2,14)=5# (2,15)=3  (3,0)=5# (3,1)=7# (3,2)=4  (3,3)=4  (3,6)=9# (3,7)=2  (3,8)=2  (3,9)=9# (3,12)=4  (3,13)=4  (3,14)=7# (3,15)=5# (4,4)=4  (4,5)=4  (4,10)=4  (4,11)=4  (5,1)=7# (5,7)=9# (5,8)=9# (5,10)=7# (5,11)=4  (5,14)=7# (6,2)=2  (6,3)=9# (6,7)=3  (6,8)=3  (6,12)=9# (6,13)=2  (7,2)=9# (7,3)=2  (7,9)=3  (7,10)=9# (7,12)=2  (7,13)=9# (8,2)=9# (8,3)=2  (8,5)=9# (8,6)=3  (8,9)=3  (8,10)=9# (8,12)=2  (8,13)=9# (9,2)=2  (9,3)=9# (9,7)=3  (9,8)=3  (9,12)=9# (9,13)=2  (10,1)=7# (10,4)=4  (10,5)=7# (10,7)=9# (10,8)=9# (10,10)=7# (10,11)=4  (10,14)=7# (11,4)=4  (11,5)=4  (11,10)=4  (11,11)=4  (12,0)=5# (12,1)=7# (12,2)=4  (12,3)=4  (12,6)=9# (12,7)=2  (12,8)=2  (12,9)=9# (12,12)=4  (12,13)=4  (12,14)=7# (12,15)=5# (13,0)=3  (13,1)=5# (13,2)=4  (13,3)=4  (13,6)=2  (13,7)=9# (13,8)=9# (13,9)=2  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=3  (14,1)=2  (14,2)=5# (14,3)=7# (14,5)=7# (14,10)=7# (14,12)=7# (14,13)=5# (14,14)=2  (15,0)=2  (15,2)=3  (15,3)=5# (15,12)=5# (15,13)=3  (15,15)=2 
! 9 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  _00: a point with color green at (0,1)
  _0: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _01: a rectangle with size (3,3) and color black and mask Full at (8,4)
diff: 
delta: (0,0)=3  (0,2)=3  (0,4)=7# (0,5)=7# (0,10)=7# (0,11)=7# (0,13)=3  (0,14)=3  (0,15)=3  (1,0)=3  (1,1)=3  (1,3)=3  (1,4)=7# (1,5)=7# (1,10)=7# (1,11)=7# (1,12)=3  (1,14)=3  (1,15)=3  (2,0)=3  (2,2)=8  (2,3)=8  (2,6)=9# (2,7)=7# (2,8)=7# (2,9)=9# (2,12)=8  (2,13)=8  (2,15)=3  (3,1)=3  (3,2)=8  (3,3)=5# (3,6)=7# (3,7)=9# (3,8)=9# (3,9)=7# (3,12)=5# (3,13)=8  (3,14)=3  (4,0)=7# (4,1)=7# (4,4)=3  (4,5)=3  (4,6)=5# (4,9)=5# (4,10)=3  (4,11)=3  (4,14)=7# (4,15)=7# (5,0)=7# (5,1)=7# (5,4)=3  (5,5)=3  (5,10)=3  (5,11)=3  (5,14)=7# (5,15)=7# (6,2)=9# (6,3)=7# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,12)=7# (6,13)=9# (7,2)=7# (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,13)=7# (8,2)=7# (8,3)=9# (8,7)=4  (8,8)=4  (8,12)=9# (8,13)=7# (9,2)=9# (9,3)=7# (9,9)=6  (9,11)=5# (9,12)=7# (9,13)=9# (10,0)=7# (10,1)=7# (10,10)=3  (10,11)=3  (10,14)=7# (10,15)=7# (11,0)=7# (11,1)=7# (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (11,14)=7# (11,15)=7# (12,1)=3  (12,2)=8  (12,3)=5# (12,6)=7# (12,7)=9# (12,8)=9# (12,9)=7# (12,12)=5# (12,13)=8  (12,14)=3  (13,0)=3  (13,2)=8  (13,3)=8  (13,6)=9# (13,7)=7# (13,8)=7# (13,9)=9# (13,12)=8  (13,13)=8  (13,15)=3  (14,0)=3  (14,1)=3  (14,3)=3  (14,4)=7# (14,5)=7# (14,10)=7# (14,11)=7# (14,12)=3  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,4)=7# (15,5)=7# (15,10)=7# (15,11)=7# (15,13)=3  (15,14)=3  (15,15)=3 
   (3975.5 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,0)
  _01: a point with color grey at (1,0)
  _011: a point with color pink at (1,2)
diff: 
delta:
   (29.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _00: a point with color green at (0,0)
  _0: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _01: a rectangle with size (3,3) and color black and mask Full at (8,4)
diff: 
delta: (0,1)=3  (0,2)=3  (0,4)=7# (0,5)=7# (0,10)=7# (0,11)=7# (0,13)=3  (0,14)=3  (0,15)=3  (1,0)=3  (1,1)=3  (1,3)=3  (1,4)=7# (1,5)=7# (1,10)=7# (1,11)=7# (1,12)=3  (1,14)=3  (1,15)=3  (2,0)=3  (2,2)=8  (2,3)=8  (2,6)=9# (2,7)=7# (2,8)=7# (2,9)=9# (2,12)=8  (2,13)=8  (2,15)=3  (3,1)=3  (3,2)=8  (3,3)=5# (3,6)=7# (3,7)=9# (3,8)=9# (3,9)=7# (3,12)=5# (3,13)=8  (3,14)=3  (4,0)=7# (4,1)=7# (4,4)=3  (4,5)=3  (4,6)=5# (4,9)=5# (4,10)=3  (4,11)=3  (4,14)=7# (4,15)=7# (5,0)=7# (5,1)=7# (5,4)=3  (5,5)=3  (5,10)=3  (5,11)=3  (5,14)=7# (5,15)=7# (6,2)=9# (6,3)=7# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,12)=7# (6,13)=9# (7,2)=7# (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,13)=7# (8,2)=7# (8,3)=9# (8,7)=4  (8,8)=4  (8,12)=9# (8,13)=7# (9,2)=9# (9,3)=7# (9,9)=6  (9,11)=5# (9,12)=7# (9,13)=9# (10,0)=7# (10,1)=7# (10,10)=3  (10,11)=3  (10,14)=7# (10,15)=7# (11,0)=7# (11,1)=7# (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (11,14)=7# (11,15)=7# (12,1)=3  (12,2)=8  (12,3)=5# (12,6)=7# (12,7)=9# (12,8)=9# (12,9)=7# (12,12)=5# (12,13)=8  (12,14)=3  (13,0)=3  (13,2)=8  (13,3)=8  (13,6)=9# (13,7)=7# (13,8)=7# (13,9)=9# (13,12)=8  (13,13)=8  (13,15)=3  (14,0)=3  (14,1)=3  (14,3)=3  (14,4)=7# (14,5)=7# (14,10)=7# (14,11)=7# (14,12)=3  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,4)=7# (15,5)=7# (15,10)=7# (15,11)=7# (15,13)=3  (15,14)=3  (15,15)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color blue and layers
  _00: a point with color green at (0,1)
  _0: a rectangle with size (16,16) and color pink and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _01: a rectangle with size (3,3) and color black and mask Full at (8,4)
diff: 
delta: (0,0)=3  (0,2)=3  (0,4)=7# (0,5)=7# (0,10)=7# (0,11)=7# (0,13)=3  (0,14)=3  (0,15)=3  (1,0)=3  (1,1)=3  (1,3)=3  (1,4)=7# (1,5)=7# (1,10)=7# (1,11)=7# (1,12)=3  (1,14)=3  (1,15)=3  (2,0)=3  (2,2)=8  (2,3)=8  (2,6)=9# (2,7)=7# (2,8)=7# (2,9)=9# (2,12)=8  (2,13)=8  (2,15)=3  (3,1)=3  (3,2)=8  (3,3)=5# (3,6)=7# (3,7)=9# (3,8)=9# (3,9)=7# (3,12)=5# (3,13)=8  (3,14)=3  (4,0)=7# (4,1)=7# (4,4)=3  (4,5)=3  (4,6)=5# (4,9)=5# (4,10)=3  (4,11)=3  (4,14)=7# (4,15)=7# (5,0)=7# (5,1)=7# (5,4)=3  (5,5)=3  (5,10)=3  (5,11)=3  (5,14)=7# (5,15)=7# (6,2)=9# (6,3)=7# (6,4)=5# (6,6)=6  (6,9)=6  (6,11)=5# (6,12)=7# (6,13)=9# (7,2)=7# (7,3)=9# (7,7)=4  (7,8)=4  (7,12)=9# (7,13)=7# (8,2)=7# (8,3)=9# (8,7)=4  (8,8)=4  (8,12)=9# (8,13)=7# (9,2)=9# (9,3)=7# (9,9)=6  (9,11)=5# (9,12)=7# (9,13)=9# (10,0)=7# (10,1)=7# (10,10)=3  (10,11)=3  (10,14)=7# (10,15)=7# (11,0)=7# (11,1)=7# (11,4)=3  (11,5)=3  (11,6)=5# (11,9)=5# (11,10)=3  (11,11)=3  (11,14)=7# (11,15)=7# (12,1)=3  (12,2)=8  (12,3)=5# (12,6)=7# (12,7)=9# (12,8)=9# (12,9)=7# (12,12)=5# (12,13)=8  (12,14)=3  (13,0)=3  (13,2)=8  (13,3)=8  (13,6)=9# (13,7)=7# (13,8)=7# (13,9)=9# (13,12)=8  (13,13)=8  (13,15)=3  (14,0)=3  (14,1)=3  (14,3)=3  (14,4)=7# (14,5)=7# (14,10)=7# (14,11)=7# (14,12)=3  (14,14)=3  (14,15)=3  (15,0)=3  (15,1)=3  (15,2)=3  (15,4)=7# (15,5)=7# (15,10)=7# (15,11)=7# (15,13)=3  (15,14)=3  (15,15)=3 
! 9 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color grey and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (5,5) and color green and mask .x.xx|x.x..|.xxx.|x.x..|x.... at (0,0)
  _01: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
diff: 
delta: (0,5)=9# (0,10)=9# (0,11)=3  (0,12)=3  (0,14)=3  (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,13)=3  (1,14)=9# (1,15)=3  (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,12)=3  (2,13)=3  (2,14)=3  (3,1)=6  (3,3)=6  (3,5)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,10)=8  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=3  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (4,15)=3  (5,0)=9# (5,3)=8  (5,5)=8  (5,7)=6  (5,8)=6  (5,10)=8  (5,12)=8  (5,15)=9# (6,2)=6  (6,3)=6  (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (6,12)=6  (6,13)=6  (7,1)=8  (7,2)=6  (7,3)=6  (7,5)=6  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,10)=0  (7,11)=0  (7,12)=0  (7,13)=6  (7,14)=8  (8,1)=8  (8,2)=6  (8,3)=6  (8,5)=6  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,14)=8  (9,2)=6  (9,3)=6  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=6  (10,0)=9# (10,3)=8  (10,5)=8  (10,7)=6  (10,8)=6  (10,10)=8  (10,12)=8  (10,15)=9# (11,0)=3  (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (11,15)=3  (12,0)=3  (12,1)=6  (12,2)=3  (12,3)=6  (12,5)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=8  (12,12)=6  (12,13)=3  (12,14)=6  (12,15)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=3  (14,1)=9# (14,2)=3  (14,3)=6  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,13)=3  (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,3)=3  (15,4)=3  (15,5)=9# (15,10)=9# (15,11)=3  (15,12)=3  (15,14)=3  (15,15)=9#
   (4287.1 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,1)
  _01: a point with color red at (2,1)
  _011: a point with color blue at (2,0)
diff: 
delta:
   (29.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
  _01: a rectangle with size (5,5) and color green and mask xx.x.|..x.x|.xxx.|..x.x|....x at (0,11)
diff: 
delta: (0,1)=3  (0,3)=3  (0,4)=3  (0,5)=9# (0,10)=9# (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=3  (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,14)=9# (2,1)=3  (2,2)=3  (2,3)=3  (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (3,0)=3  (3,1)=6  (3,2)=3  (3,3)=6  (3,5)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,10)=8  (3,12)=6  (3,14)=6  (4,0)=3  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (5,0)=9# (5,3)=8  (5,5)=8  (5,7)=6  (5,8)=6  (5,10)=8  (5,12)=8  (5,15)=9# (6,2)=6  (6,3)=6  (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (6,12)=6  (6,13)=6  (7,1)=8  (7,2)=6  (7,3)=6  (7,5)=6  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,10)=0  (7,11)=0  (7,12)=0  (7,13)=6  (7,14)=8  (8,1)=8  (8,2)=6  (8,3)=6  (8,5)=6  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,14)=8  (9,2)=6  (9,3)=6  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=6  (10,0)=9# (10,3)=8  (10,5)=8  (10,7)=6  (10,8)=6  (10,10)=8  (10,12)=8  (10,15)=9# (11,0)=3  (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (11,15)=3  (12,0)=3  (12,1)=6  (12,2)=3  (12,3)=6  (12,5)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=8  (12,12)=6  (12,13)=3  (12,14)=6  (12,15)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=3  (14,1)=9# (14,2)=3  (14,3)=6  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,13)=3  (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,3)=3  (15,4)=3  (15,5)=9# (15,10)=9# (15,11)=3  (15,12)=3  (15,14)=3  (15,15)=9#
! size mismatch, 7x7 instead of 3x3
>> Trial 2
data: a background with size (16,16) and color grey and layers
  _00: a point with color brown at (0,0)
  _0: a rectangle with size (5,5) and color green and mask .x.xx|x.x..|.xxx.|x.x..|x.... at (0,0)
  _01: a rectangle with size (8,7) and color blue and mask ...xx..|..x..x.|.x....x|x......|x......|.x.....|..x..x.|...xx.. at (4,4)
diff: 
delta: (0,5)=9# (0,10)=9# (0,11)=3  (0,12)=3  (0,14)=3  (0,15)=9# (1,1)=9# (1,3)=6  (1,4)=9# (1,7)=8  (1,8)=8  (1,11)=9# (1,12)=6  (1,13)=3  (1,14)=9# (1,15)=3  (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,12)=3  (2,13)=3  (2,14)=3  (3,1)=6  (3,3)=6  (3,5)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,10)=8  (3,12)=6  (3,13)=3  (3,14)=6  (3,15)=3  (4,1)=9# (4,6)=2  (4,9)=2  (4,14)=9# (4,15)=3  (5,0)=9# (5,3)=8  (5,5)=8  (5,7)=6  (5,8)=6  (5,10)=8  (5,12)=8  (5,15)=9# (6,2)=6  (6,3)=6  (6,4)=2  (6,6)=9# (6,7)=3  (6,8)=3  (6,9)=9# (6,11)=2  (6,12)=6  (6,13)=6  (7,1)=8  (7,2)=6  (7,3)=6  (7,5)=6  (7,6)=3  (7,7)=9# (7,8)=9# (7,9)=3  (7,10)=0  (7,11)=0  (7,12)=0  (7,13)=6  (7,14)=8  (8,1)=8  (8,2)=6  (8,3)=6  (8,5)=6  (8,6)=3  (8,7)=9# (8,8)=9# (8,9)=3  (8,10)=0  (8,11)=0  (8,12)=0  (8,13)=6  (8,14)=8  (9,2)=6  (9,3)=6  (9,4)=2  (9,6)=9# (9,7)=3  (9,8)=3  (9,9)=9# (9,10)=0  (9,11)=0  (9,12)=0  (9,13)=6  (10,0)=9# (10,3)=8  (10,5)=8  (10,7)=6  (10,8)=6  (10,10)=8  (10,12)=8  (10,15)=9# (11,0)=3  (11,1)=9# (11,6)=2  (11,9)=2  (11,14)=9# (11,15)=3  (12,0)=3  (12,1)=6  (12,2)=3  (12,3)=6  (12,5)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,10)=8  (12,12)=6  (12,13)=3  (12,14)=6  (12,15)=3  (13,1)=3  (13,2)=3  (13,3)=3  (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,12)=3  (13,13)=3  (13,14)=3  (14,0)=3  (14,1)=9# (14,2)=3  (14,3)=6  (14,4)=9# (14,7)=8  (14,8)=8  (14,11)=9# (14,12)=6  (14,13)=3  (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,3)=3  (15,4)=3  (15,5)=9# (15,10)=9# (15,11)=3  (15,12)=3  (15,14)=3  (15,15)=9#
! 9 wrong pixels (generated / expected)

TRAIN 9ecd008a.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  _00: a point with color yellow at (0,0)
  _0: a rectangle with size (16,16) and color blue and mask .......xx.......|......x..x......|.....x....x.....|....x......x....|...xx......xx...|.............x..|..............x.|x..............x|x..............x|.x............x.|..x..........x..|...xx......xx...|....x......x....|.....x....x.....|......x..x......|.......xx....... at (0,0)
  _01: a rectangle with size (8,8) and color red and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|...xx... at (4,4)
diff: 
delta: (0,1)=8  (0,2)=9# (0,3)=9# (0,4)=6  (0,5)=6  (0,10)=6  (0,11)=6  (0,12)=9# (0,13)=9# (0,14)=8  (0,15)=4  (1,0)=8  (1,1)=6  (1,2)=9# (1,3)=9# (1,4)=6  (1,5)=7# (1,10)=7# (1,11)=6  (1,12)=9# (1,13)=9# (1,14)=6  (1,15)=8  (2,0)=9# (2,1)=9# (2,3)=2  (2,12)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=9# (3,2)=2  (3,3)=2  (3,7)=9# (3,8)=9# (3,12)=2  (3,13)=2  (3,14)=9# (3,15)=9# (4,0)=6  (4,1)=6  (4,5)=4  (4,10)=4  (4,14)=6  (4,15)=6  (5,0)=6  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=4  (5,5)=4  (5,7)=7# (5,8)=7# (5,10)=4  (5,11)=4  (5,14)=7# (5,15)=6  (6,1)=0  (6,2)=0  (6,3)=0  (6,6)=9# (6,9)=9# (7,1)=0  (7,2)=0  (7,3)=0  (7,5)=7# (7,7)=9# (7,8)=9# (7,10)=7# (7,12)=9# (8,3)=9# (8,5)=7# (8,7)=9# (8,8)=9# (8,10)=7# (8,12)=9# (9,6)=9# (9,9)=9# (10,0)=6  (10,1)=7# (10,4)=4  (10,5)=4  (10,7)=7# (10,8)=7# (10,10)=4  (10,11)=4  (10,14)=7# (10,15)=6  (11,0)=6  (11,1)=6  (11,5)=4  (11,10)=4  (11,14)=6  (11,15)=6  (12,0)=9# (12,1)=9# (12,2)=2  (12,3)=2  (12,7)=9# (12,8)=9# (12,12)=2  (12,13)=2  (12,14)=9# (12,15)=9# (13,0)=9# (13,1)=9# (13,3)=2  (13,12)=2  (13,14)=9# (13,15)=9# (14,0)=8  (14,1)=6  (14,2)=9# (14,3)=9# (14,4)=6  (14,5)=7# (14,10)=7# (14,11)=6  (14,12)=9# (14,13)=9# (14,14)=6  (14,15)=8  (15,0)=4  (15,1)=8  (15,2)=9# (15,3)=9# (15,4)=6  (15,5)=6  (15,10)=6  (15,11)=6  (15,12)=9# (15,13)=9# (15,14)=8  (15,15)=4 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color grey and layers
  _00: a point with color cyan at (0,1)
  _0: a rectangle with size (16,16) and color blue and mask .......xx.......|......x..x......|.....x....x.....|....x......x....|...xx......xx...|.............x..|..............x.|x..............x|x..............x|.x............x.|..x..........x..|...xx......xx...|....x......x....|.....x....x.....|......x..x......|.......xx....... at (0,0)
  _01: a rectangle with size (8,8) and color red and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|...xx... at (4,4)
diff: 
delta: (0,0)=4  (0,2)=9# (0,3)=9# (0,4)=6  (0,5)=6  (0,10)=6  (0,11)=6  (0,12)=9# (0,13)=9# (0,14)=8  (0,15)=4  (1,0)=8  (1,1)=6  (1,2)=9# (1,3)=9# (1,4)=6  (1,5)=7# (1,10)=7# (1,11)=6  (1,12)=9# (1,13)=9# (1,14)=6  (1,15)=8  (2,0)=9# (2,1)=9# (2,3)=2  (2,12)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=9# (3,2)=2  (3,3)=2  (3,7)=9# (3,8)=9# (3,12)=2  (3,13)=2  (3,14)=9# (3,15)=9# (4,0)=6  (4,1)=6  (4,5)=4  (4,10)=4  (4,14)=6  (4,15)=6  (5,0)=6  (5,1)=0  (5,2)=0  (5,3)=0  (5,4)=4  (5,5)=4  (5,7)=7# (5,8)=7# (5,10)=4  (5,11)=4  (5,14)=7# (5,15)=6  (6,1)=0  (6,2)=0  (6,3)=0  (6,6)=9# (6,9)=9# (7,1)=0  (7,2)=0  (7,3)=0  (7,5)=7# (7,7)=9# (7,8)=9# (7,10)=7# (7,12)=9# (8,3)=9# (8,5)=7# (8,7)=9# (8,8)=9# (8,10)=7# (8,12)=9# (9,6)=9# (9,9)=9# (10,0)=6  (10,1)=7# (10,4)=4  (10,5)=4  (10,7)=7# (10,8)=7# (10,10)=4  (10,11)=4  (10,14)=7# (10,15)=6  (11,0)=6  (11,1)=6  (11,5)=4  (11,10)=4  (11,14)=6  (11,15)=6  (12,0)=9# (12,1)=9# (12,2)=2  (12,3)=2  (12,7)=9# (12,8)=9# (12,12)=2  (12,13)=2  (12,14)=9# (12,15)=9# (13,0)=9# (13,1)=9# (13,3)=2  (13,12)=2  (13,14)=9# (13,15)=9# (14,0)=8  (14,1)=6  (14,2)=9# (14,3)=9# (14,4)=6  (14,5)=7# (14,10)=7# (14,11)=6  (14,12)=9# (14,13)=9# (14,14)=6  (14,15)=8  (15,0)=4  (15,1)=8  (15,2)=9# (15,3)=9# (15,4)=6  (15,5)=6  (15,10)=6  (15,11)=6  (15,12)=9# (15,13)=9# (15,14)=8  (15,15)=4 
! 9 wrong pixels (generated / expected)

TEST 9ecd008a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.0 sec (14.0 sec/task)
bits-train-error = 1128.4 bits (1128.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-158] Checking task 9edfc990.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 90540.2 = 90555.8
DL output with Mo: L = 15.6 + 95458.9 = 95474.5
DL input+output M: L = 31.2 + 185999.0 = 186030.3

# learning a model for train pairs
2.000	
1.960	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.940	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.910	OUT OBJECT at ^.layer_01: ^.layer_0
1.893	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.865	OUT OBJECT at ^.layer_00: ^.layer_01
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 87143.7 = 87224.9
DL output with Mo: L = 70.3 + 86051.1 = 86121.4
DL input+output M: L = 151.6 + 173194.8 = 173346.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,0)=9# (8,1)=9# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (1834.5 bits)
data: a background with size (13,13) and color blue and layers
  _00: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
  _0: a rectangle with size (1,2) and color black and mask Full at (5,11)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,11)=0  (0,12)=9# (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,11)=0  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,11)=4  (4,0)=3  (4,1)=6  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,0)=0  (5,1)=8  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,0)=9# (8,1)=9# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
   (1739.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (3,2) and color grey and mask x.|.x|.x at (7,5)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,11)=5# (8,0)=9# (8,1)=9# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! size mismatch, 10x10 instead of 13x13
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (5,7)
  _01: a rectangle with size (1,2) and color brown and mask Full at (8,0)
diff: 
delta: (0,0)=9# (0,5)=2  (0,6)=8  (0,8)=9# (0,10)=2  (0,12)=9# (1,0)=1  (1,3)=6  (1,11)=9# (1,12)=5# (2,0)=9# (2,2)=4  (2,3)=9# (2,4)=3  (2,7)=5# (2,8)=7# (2,10)=8  (2,12)=8  (3,2)=8  (3,3)=6  (3,5)=6  (3,7)=1  (3,11)=4  (3,12)=1  (4,0)=3  (4,1)=6  (4,3)=1  (4,5)=3  (4,6)=9# (4,9)=4  (4,10)=5# (4,11)=7# (4,12)=2  (5,1)=8  (5,9)=1  (5,10)=8  (6,0)=9# (6,3)=2  (6,8)=5# (6,11)=8  (6,12)=4  (7,3)=8  (7,4)=7# (7,5)=5# (7,11)=5# (8,6)=5# (8,9)=5# (9,0)=8  (9,3)=8  (9,5)=6  (9,6)=5# (9,11)=9# (10,0)=4  (10,3)=6  (10,5)=7# (10,6)=9# (10,7)=9# (10,8)=8  (10,10)=5# (10,11)=7# (10,12)=3  (11,7)=7# (11,8)=2  (11,12)=8  (12,3)=7# (12,4)=5# (12,6)=5# (12,12)=3 
! size mismatch, 10x10 instead of 13x13

TRAIN 9edfc990.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,6)=5# (0,7)=5# (0,8)=5# (0,10)=2  (0,11)=1  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,7)=1  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
   (2862.4 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
  _0: a rectangle with size (15,15) and color blue and mask ...........xxxx|.....xxx..xxx.x|...xxx..xxx.x.x|...x.xxx.x..x..|....xx....xx...|....x.xx.x.xx..|......x.xx.x...|..xx.xxxxx.xxxx|..xx.xx.x..xxxx|xxxxx.xxx.x.x..|xx.x..x.xxx.xx.|..xx..xx.xx..xx|xxxx...x...xxx.|x.x.....xxxx..x|x......xxx.xxxx at (0,0)
  _01: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,6)=5# (0,7)=5# (0,8)=5# (0,10)=2  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,8)=6  (3,10)=6  (3,11)=9# (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,10)=2  (8,0)=3  (8,1)=3  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,4)=4  (10,5)=9# (10,7)=7# (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
   (2709.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (3,3) and color yellow and mask x.x|.x.|x.. at (4,7)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,6)=5# (0,7)=5# (0,8)=5# (0,10)=2  (0,11)=1  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,7)=1  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|x.. at (4,0)
  _01: a rectangle with size (1,3) and color grey and mask Full at (0,6)
diff: 
delta: (0,2)=2  (0,4)=9# (0,5)=6  (0,10)=2  (0,11)=1  (1,0)=3  (1,2)=4  (1,3)=4  (1,4)=9# (1,8)=3  (1,9)=9# (1,13)=5# (2,0)=8  (2,1)=9# (2,2)=2  (2,4)=1  (2,6)=6  (2,7)=8  (2,11)=8  (2,13)=8  (3,0)=6  (3,2)=4  (3,4)=4  (3,7)=1  (3,8)=6  (3,9)=1  (3,10)=6  (3,11)=9# (3,12)=1  (3,13)=4  (3,14)=2  (4,3)=3  (4,6)=6  (4,7)=4  (4,9)=4  (4,11)=1  (4,12)=3  (5,1)=6  (5,3)=4  (5,5)=2  (5,8)=4  (5,10)=8  (5,13)=7# (5,14)=6  (6,2)=4  (6,3)=7# (6,4)=8  (6,5)=3  (6,7)=4  (6,10)=5# (6,12)=6  (6,14)=3  (7,1)=8  (7,4)=2  (7,8)=1  (7,10)=2  (7,13)=1  (8,0)=3  (8,1)=3  (8,2)=1  (8,4)=2  (8,7)=6  (8,9)=8  (8,10)=6  (9,5)=8  (9,9)=9# (9,11)=4  (9,13)=2  (9,14)=8  (10,2)=4  (10,3)=1  (10,4)=4  (10,5)=9# (10,7)=7# (10,9)=1  (10,11)=5# (10,14)=8  (11,0)=7# (11,1)=2  (11,4)=4  (11,5)=5# (11,6)=1  (11,8)=9# (11,11)=6  (11,12)=4  (12,4)=9# (12,5)=6  (12,6)=3  (12,7)=1  (12,8)=3  (12,9)=3  (12,10)=9# (12,14)=5# (13,1)=5# (13,3)=4  (13,5)=7# (13,6)=9# (13,7)=9# (13,12)=9# (13,13)=4  (14,1)=9# (14,2)=8  (14,3)=8  (14,5)=6  (14,6)=8  (14,10)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN 9edfc990.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,9)=9# (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,8)=9# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,8)=9# (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,7)=9# (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
   (4017.5 bits)
data: a background with size (16,16) and color blue and layers
  _00: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
  _0: a rectangle with size (4,7) and color black and mask .x.....|x.xx...|..xxx.x|.....x. at (7,0)
  _01: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,3)=0  (0,4)=4  (0,5)=0  (0,6)=0  (0,7)=6  (0,13)=6  (0,14)=0  (0,15)=5# (1,2)=3  (1,3)=3  (1,4)=4  (1,5)=0  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,0)=0  (3,1)=2  (3,2)=6  (3,7)=3  (3,11)=8  (3,12)=0  (3,13)=4  (3,14)=0  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,13)=0  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,9)=9# (7,11)=7# (7,12)=3  (7,13)=0  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,8)=9# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,8)=9# (9,11)=7# (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,7)=9# (10,8)=4  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,8)=0  (11,9)=2  (11,10)=0  (11,11)=0  (12,0)=9# (12,4)=6  (12,6)=8  (12,8)=3  (12,9)=3  (12,10)=0  (12,12)=0  (12,15)=4  (13,0)=0  (13,1)=4  (13,10)=6  (13,11)=0  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,0)=0  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,8)=5# (14,9)=9# (14,11)=8  (14,12)=7# (14,13)=0  (14,14)=2  (14,15)=7# (15,0)=0  (15,1)=9# (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,12)=0  (15,13)=0  (15,14)=3  (15,15)=0 
   (4155.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (3,3) and color red and mask .x.|.x.|x.x at (10,11)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,9)=9# (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,8)=9# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,8)=9# (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,7)=9# (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
! size mismatch, 10x10 instead of 16x16
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask xx.|..x|.x. at (8,5)
  _01: a rectangle with size (4,3) and color brown and mask ..x|.x.|.x.|x.. at (7,7)
diff: 
delta: (0,0)=7# (0,1)=4  (0,2)=4  (0,4)=4  (0,7)=6  (0,8)=1  (0,9)=1  (0,10)=1  (0,13)=6  (0,15)=5# (1,0)=1  (1,1)=1  (1,2)=3  (1,3)=3  (1,4)=4  (1,6)=3  (1,7)=8  (1,8)=5# (1,9)=3  (1,10)=4  (1,11)=5# (1,13)=8  (1,14)=2  (1,15)=8  (2,0)=8  (2,2)=4  (2,3)=8  (2,4)=8  (2,5)=5# (2,7)=9# (2,11)=5# (2,12)=5# (2,13)=8  (2,14)=5# (2,15)=8  (3,1)=2  (3,2)=6  (3,7)=3  (3,9)=1  (3,11)=8  (3,13)=4  (3,15)=8  (4,0)=8  (4,2)=2  (4,3)=8  (4,5)=7# (4,9)=9# (4,11)=7# (4,12)=3  (4,14)=3  (4,15)=6  (5,6)=5# (5,7)=3  (5,9)=6  (5,11)=6  (5,13)=4  (5,14)=5# (5,15)=7# (6,0)=6  (6,1)=6  (6,4)=3  (6,5)=1  (6,8)=2  (6,9)=5# (6,13)=3  (6,14)=4  (6,15)=5# (7,0)=7# (7,2)=7# (7,3)=8  (7,5)=1  (7,11)=7# (7,12)=3  (7,14)=3  (8,1)=6  (8,4)=5# (8,7)=5# (8,9)=8  (8,10)=3  (8,11)=9# (8,13)=7# (9,0)=7# (9,1)=5# (9,5)=8  (9,11)=7# (9,12)=1  (10,0)=6  (10,1)=5# (10,2)=3  (10,3)=4  (10,4)=3  (10,8)=4  (10,9)=1  (10,10)=8  (10,11)=9# (10,12)=2  (10,13)=8  (10,14)=7# (10,15)=7# (11,0)=8  (11,1)=6  (11,2)=8  (11,3)=6  (11,4)=3  (11,5)=2  (11,6)=7# (11,7)=3  (11,9)=2  (11,12)=2  (11,13)=1  (12,0)=9# (12,4)=6  (12,5)=1  (12,6)=8  (12,8)=3  (12,9)=3  (12,11)=2  (12,13)=2  (12,14)=1  (12,15)=4  (13,1)=4  (13,6)=1  (13,10)=6  (13,12)=4  (13,13)=4  (13,14)=5# (13,15)=6  (14,1)=5# (14,3)=8  (14,4)=3  (14,5)=2  (14,6)=1  (14,8)=5# (14,9)=9# (14,10)=1  (14,11)=8  (14,12)=7# (14,14)=2  (14,15)=7# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=6  (15,7)=9# (15,8)=9# (15,9)=8  (15,11)=9# (15,14)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN 9edfc990.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask xxx|.x. at (4,12)
  _01: a rectangle with size (3,2) and color red and mask xx|.x|.x at (3,7)
diff: 
delta: (0,3)=8  (0,5)=5# (0,8)=9# (0,10)=6  (0,15)=5# (1,0)=6  (1,1)=7# (1,2)=6  (1,4)=4  (1,6)=2  (1,9)=8  (1,10)=3  (1,11)=6  (1,12)=2  (2,3)=7# (2,6)=5# (2,7)=4  (2,8)=1  (2,10)=1  (2,11)=7# (2,12)=6  (3,1)=5# (3,2)=8  (3,4)=9# (3,10)=8  (3,12)=4  (3,15)=7# (4,0)=4  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=7# (4,7)=3  (4,10)=6  (4,11)=4  (5,1)=1  (5,2)=8  (5,4)=5# (5,11)=8  (5,14)=6  (5,15)=6  (6,0)=9# (6,1)=9# (6,3)=2  (6,4)=8  (6,7)=3  (6,10)=2  (6,13)=5# (6,14)=8  (7,0)=1  (7,1)=3  (7,3)=1  (7,4)=6  (7,5)=1  (7,9)=8  (7,13)=4  (8,2)=4  (8,4)=7# (8,5)=4  (8,8)=4  (8,11)=5# (8,12)=8  (8,14)=4  (9,3)=6  (9,5)=6  (9,11)=8  (9,13)=1  (9,14)=4  (9,15)=4  (10,1)=9# (10,4)=9# (10,10)=1  (10,11)=5# (10,13)=6  (11,0)=6  (11,2)=7# (11,3)=5# (11,4)=9# (11,6)=7# (11,10)=4  (11,11)=6  (11,13)=2  (11,14)=8  (12,0)=5# (12,4)=1  (12,6)=2  (12,7)=4  (12,8)=8  (12,11)=3  (12,13)=9# (12,15)=8  (13,0)=1  (13,3)=2  (13,4)=4  (13,8)=1  (13,9)=7# (13,14)=5# (14,0)=6  (14,1)=9# (14,4)=7# (14,5)=7# (14,6)=1  (14,8)=2  (14,11)=9# (14,12)=1  (14,14)=3  (15,0)=1  (15,1)=8  (15,2)=3  (15,5)=9# (15,6)=7# (15,8)=2  (15,9)=7# (15,10)=2  (15,12)=8  (15,13)=9#
! size mismatch, 10x10 instead of 16x16
>> Trial 2
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (2,3) and color brown and mask xxx|.x. at (4,12)
  _01: a rectangle with size (3,3) and color yellow and mask x..|.x.|.xx at (7,13)
diff: 
delta: (0,3)=8  (0,5)=5# (0,8)=9# (0,10)=6  (0,15)=5# (1,0)=6  (1,1)=7# (1,2)=6  (1,4)=4  (1,6)=2  (1,9)=8  (1,10)=3  (1,11)=6  (1,12)=2  (2,3)=7# (2,6)=5# (2,7)=4  (2,8)=1  (2,10)=1  (2,11)=7# (2,12)=6  (3,1)=5# (3,2)=8  (3,4)=9# (3,7)=2  (3,8)=2  (3,10)=8  (3,12)=4  (3,15)=7# (4,0)=4  (4,3)=4  (4,4)=2  (4,5)=2  (4,6)=7# (4,7)=3  (4,8)=2  (4,10)=6  (4,11)=4  (5,1)=1  (5,2)=8  (5,4)=5# (5,8)=2  (5,11)=8  (5,14)=6  (5,15)=6  (6,0)=9# (6,1)=9# (6,3)=2  (6,4)=8  (6,7)=3  (6,10)=2  (6,13)=5# (6,14)=8  (7,0)=1  (7,1)=3  (7,3)=1  (7,4)=6  (7,5)=1  (7,9)=8  (8,2)=4  (8,4)=7# (8,5)=4  (8,8)=4  (8,11)=5# (8,12)=8  (9,3)=6  (9,5)=6  (9,11)=8  (9,13)=1  (10,1)=9# (10,4)=9# (10,10)=1  (10,11)=5# (10,13)=6  (11,0)=6  (11,2)=7# (11,3)=5# (11,4)=9# (11,6)=7# (11,10)=4  (11,11)=6  (11,13)=2  (11,14)=8  (12,0)=5# (12,4)=1  (12,6)=2  (12,7)=4  (12,8)=8  (12,11)=3  (12,13)=9# (12,15)=8  (13,0)=1  (13,3)=2  (13,4)=4  (13,8)=1  (13,9)=7# (13,14)=5# (14,0)=6  (14,1)=9# (14,4)=7# (14,5)=7# (14,6)=1  (14,8)=2  (14,11)=9# (14,12)=1  (14,14)=3  (15,0)=1  (15,1)=8  (15,2)=3  (15,5)=9# (15,6)=7# (15,8)=2  (15,9)=7# (15,10)=2  (15,12)=8  (15,13)=9#
! size mismatch, 10x10 instead of 16x16

TEST 9edfc990.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.0 sec (29.0 sec/task)
bits-train-error = 86051.1 bits (86051.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-157] Checking task 9f236235.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 123564.0 = 123579.7
DL output with Mo: L = 15.6 + 3955.6 = 3971.2
DL input+output M: L = 31.2 + 127519.6 = 127550.8

# learning a model for train pairs
2.000	
1.535	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.191	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.025	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.946	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	OUT DEF: ^.size=^.layer_011.shape.size
0.762	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.701	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.661	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.629	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.603	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.584	OUT DEF: ^.color=black
0.583	IN  DEF: ^.layer_0.shape.color=red
0.582	IN  DEF: ^.layer_011.shape.mask=Full
0.581	IN  DEF: ^.layer_0111.shape.mask=Full
0.580	IN  DEF: ^.layer_01111.shape.mask=Full
0.580	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_011.shape.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 210.0 + 14471.0 = 14681.0
DL output with Mo: L = 66.1 + 1764.2 = 1830.3
DL input+output M: L = 276.1 + 16235.3 = 16511.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (1,19) and color red and mask Full at (4,0)
  _0: a rectangle with size (19,19) and color red and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (15,0)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,0)
  _0111: a rectangle with size (4,4) and color green and mask Full at (5,5)
  _01111: a rectangle with size (4,4) and color green and mask Full at (10,10)
diff: 
delta:
   (560.9 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask ..x|.x.|x..|xxx at (0,1)
diff: 
delta:
   (36.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (1,19) and color red and mask Full at (4,0)
  _0: a rectangle with size (19,19) and color red and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _01: a rectangle with size (4,14) and color green and mask Full at (15,0)
  _011: a rectangle with size (4,4) and color green and mask Full at (0,0)
  _0111: a rectangle with size (4,4) and color green and mask Full at (5,5)
  _01111: a rectangle with size (4,4) and color green and mask Full at (10,10)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN 9f236235.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (19,19) and color cyan and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _0: a rectangle with size (4,4) and color red and mask Full at (0,5)
  _01: a rectangle with size (4,4) and color red and mask Full at (5,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (5,5)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (10,10)
  _01111: a rectangle with size (4,4) and color green and mask Full at (15,15)
diff: 
delta:
   (556.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Even Checkboard at (0,2)
diff: 
delta: (1,2)=1  (2,1)=1  (3,0)=3 
   (93.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _00: a rectangle with size (19,19) and color cyan and mask ....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x....|xxxxxxxxxxxxxxxxxxx|....x....x....x....|....x....x....x....|....x....x....x....|....x....x....x.... at (0,0)
  _0: a rectangle with size (4,4) and color red and mask Full at (0,5)
  _01: a rectangle with size (4,4) and color red and mask Full at (5,0)
  _011: a rectangle with size (4,4) and color blue and mask Full at (5,5)
  _0111: a rectangle with size (4,4) and color blue and mask Full at (10,10)
  _01111: a rectangle with size (4,4) and color green and mask Full at (15,15)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN 9f236235.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,11) and color red and mask Full at (3,0)
  _0: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _01111: a rectangle with size (3,3) and color yellow and mask Full at (8,8)
diff: 
delta:
   (329.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (0,1)
diff: 
delta: (2,0)=4 
   (46.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,11) and color red and mask Full at (3,0)
  _0: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _01111: a rectangle with size (3,3) and color yellow and mask Full at (8,8)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _00: a rectangle with size (1,11) and color red and mask Full at (3,0)
  _0: a rectangle with size (11,1) and color red and mask Full at (0,3)
  _01: a rectangle with size (11,11) and color red and mask ...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x...|xxxxxxxxxxx|...x...x...|...x...x...|...x...x... at (0,0)
  _011: a rectangle with size (3,7) and color cyan and mask Full at (4,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _01111: a rectangle with size (3,3) and color yellow and mask Full at (8,8)
diff: 
delta:
! size mismatch, 3x7 instead of 3x3

TRAIN 9f236235.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,23) and color black and layers
  _00: a rectangle with size (23,23) and color cyan and mask .....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x..... at (0,0)
  _0: a rectangle with size (5,5) and color red and mask Full at (12,0)
  _01: a rectangle with size (23,5) and color green and mask Full at (0,6)
  _011: a rectangle with size (5,5) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (5,11) and color blue and mask Full at (0,12)
  _01111: a rectangle with size (5,5) and color red and mask Full at (12,18)
diff: 
delta:
! size mismatch, 5x5 instead of 4x4
>> Trial 2
data: a background with size (23,23) and color black and layers
  _00: a rectangle with size (23,23) and color cyan and mask .....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|xxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x.....|.....x.....x.....x..... at (0,0)
  _0: a rectangle with size (5,5) and color red and mask Full at (12,0)
  _01: a rectangle with size (5,5) and color blue and mask Full at (0,0)
  _011: a rectangle with size (23,5) and color green and mask Full at (0,6)
  _0111: a rectangle with size (5,11) and color blue and mask Full at (0,12)
  _01111: a rectangle with size (5,5) and color red and mask Full at (12,18)
diff: 
delta:
! size mismatch, 23x5 instead of 4x4

TEST 9f236235.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.6 sec (18.6 sec/task)
bits-train-error = 1764.2 bits (1764.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-156] Checking task a1570a43.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16565.4 = 16581.0
DL output with Mo: L = 15.6 + 16565.4 = 16581.0
DL input+output M: L = 31.2 + 33130.8 = 33162.1

# learning a model for train pairs
2.000	
1.456	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.782	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.736	OUT DEF: ^.size=^.size
0.716	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.656	OUT OBJECT at ^.layer_01: ^.layer_01
0.623	OUT OBJECT at ^.layer_011: ^.layer_01.shape at (?,?)
0.588	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
0.552	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at (?,?)
0.527	OUT DEF: ^.layer_0.pos=^.layer_01.pos + 1
0.507	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.480	OUT DEF: ^.layer_010=^.layer_011
0.459	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.433	OUT DEF: ^.layer_011=^.layer_0111
0.407	OUT DEF: ^.layer_0111.pos=corner(^.layer_0111.pos, ^.layer_011.pos)
0.384	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.371	IN  DEF: ^.layer_0.shape.color=red
0.357	IN  DEF: ^.layer_01.shape.color=green
0.344	IN  DEF: ^.layer_011.shape.color=green
0.330	IN  DEF: ^.layer_0111.shape.color=green
0.317	IN  DEF: ^.layer_01111.shape.color=green
0.311	IN  DEF: ^.color=black
0.305	OUT DEF: ^.color=black
0.304	OUT DEF: ^.layer_0111=^.layer_01111

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at ^.layer_01.pos + 1
  _010: ^.layer_011
  _01: ^.layer_01
  _011: ^.layer_0111
  _0111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a point with color green at (?,?)
  _011: a point with color green at (?,?)
  _0111: a point with color green at (?,?)
  _01111: a point with color green at (?,?)

DL input  with Mi: L = 138.5 + 4818.0 = 4956.5
DL output with Mo: L = 77.1 + 0.0 = 77.1
DL input+output M: L = 215.6 + 4818.0 = 5033.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (116.6 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (1,1)
  _010: a point with color green at (0,6)
  _01: a point with color green at (0,0)
  _011: a point with color green at (6,0)
  _0111: a point with color green at (6,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|.xx..|xxxxx|.x...|.xx.. at (0,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,0)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
   (121.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,2)
  _010: a point with color green at (1,7)
  _01: a point with color green at (1,1)
  _011: a point with color green at (7,1)
  _0111: a point with color green at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..xxx|xxx..|x.x..|xxxx.|...x. at (2,0)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
   (122.9 bits)
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (2,2)
  _010: a point with color green at (1,7)
  _01: a point with color green at (1,1)
  _011: a point with color green at (7,1)
  _0111: a point with color green at (7,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .xx..|xxxx.|..xxx|..x..|.xx.. at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color green at (1,7)
  _0111: a point with color green at (7,1)
  _01111: a point with color green at (7,7)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
   (120.4 bits)
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,1)
  _010: a point with color green at (0,6)
  _01: a point with color green at (0,0)
  _011: a point with color green at (6,0)
  _0111: a point with color green at (6,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ...x.|.xxx.|.x...|xxxxx|.x... at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color green at (0,6)
  _0111: a point with color green at (6,0)
  _01111: a point with color green at (6,6)
diff: 
delta:
correct output grid

TRAIN a1570a43.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask x....|xx...|xxx..|xxxxx|x.... at (2,0)
  _01: a point with color green at (1,0)
  _011: a point with color green at (1,6)
  _0111: a point with color green at (7,0)
  _01111: a point with color green at (7,6)
diff: 
delta:
correct output grid

TEST a1570a43.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-155] Checking task a2fd1cf0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2364.5 = 2380.1
DL output with Mo: L = 15.6 + 14637.2 = 14652.9
DL input+output M: L = 31.2 + 17001.7 = 17032.9

# learning a model for train pairs
2.000	
1.361	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.254	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.137	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.067	IN  DEF: ^.layer_0.shape.color=red
0.997	IN  DEF: ^.layer_01.shape.color=green
0.941	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.887	OUT OBJECT at ^.layer_00: ^.layer_0
0.830	OUT OBJECT at ^.layer_011: ^.layer_01
0.786	OUT DEF: ^.size=^.size
0.754	IN  DEF: ^.color=black
0.737	OUT DEF: ^.layer_01.shape.size.i=span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1
0.722	OUT DEF: ^.layer_0.shape.size.j=span(^.layer_0.pos.j, ^.layer_01.pos.j) - 1
0.709	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.697	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.685	OUT DEF: ^.layer_0.shape.color=cyan
0.674	OUT DEF: ^.layer_01.shape.color=cyan
0.667	OUT DEF: ^.layer_0.shape.size.i=1
0.660	OUT DEF: ^.layer_0.shape.mask=Full
0.654	OUT DEF: ^.layer_01.shape.size.j=1
0.647	OUT DEF: ^.layer_01.shape.mask=Full
0.642	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (1,span(^.layer_0.pos.j, ^.layer_01.pos.j) - 1) and color cyan and mask Full at (^.layer_0.pos.i,?)
  _01: a rectangle with size (span(^.layer_0.pos.i, ^.layer_01.pos.i) - 1,1) and color cyan and mask Full at (?,^.layer_01.pos.j)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)
  _01: a point with color green at (?,?)

DL input  with Mi: L = 60.4 + 1379.1 = 1439.5
DL output with Mo: L = 175.8 + 364.6 = 540.4
DL input+output M: L = 236.2 + 1743.7 = 1979.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color green at (13,10)
diff: 
delta:
   (47.2 bits)
data: a background with size (15,15) and color black and layers
  _00: a point with color red at (1,4)
  _0: a rectangle with size (1,6) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _011: a point with color green at (13,10)
diff: 
delta:
   (12.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color green at (13,10)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a point with color green at (13,10)
  _01: a point with color red at (1,4)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 35 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,16) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color green at (1,11)
diff: 
delta:
   (45.2 bits)
data: a background with size (10,16) and color black and layers
  _00: a point with color red at (7,1)
  _0: a rectangle with size (1,10) and color cyan and mask Full at (7,2)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (2,11)
  _011: a point with color green at (1,11)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color black and layers
  _0: a point with color red at (7,1)
  _01: a point with color green at (1,11)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color black and layers
  _0: a point with color green at (1,11)
  _01: a point with color red at (7,1)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 30 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (1,11)
  _01: a point with color green at (10,4)
diff: 
delta:
   (45.5 bits)
data: a background with size (12,14) and color black and layers
  _00: a point with color red at (1,11)
  _0: a rectangle with size (1,7) and color cyan and mask Full at (1,4)
  _01: a rectangle with size (9,1) and color cyan and mask Full at (1,4)
  _011: a point with color green at (10,4)
diff: 
delta:
   (12.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (1,11)
  _01: a point with color green at (10,4)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a point with color green at (10,4)
  _01: a point with color red at (1,11)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 30 wrong pixels (generated / expected)

TRAIN a2fd1cf0.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (10,10)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a point with color green at (10,10)
  _01: a point with color red at (2,1)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 33 wrong pixels (generated / expected)

TEST a2fd1cf0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 364.6 bits (364.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-154] Checking task a3325580.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21953.9 = 21969.5
DL output with Mo: L = 15.6 + 7667.8 = 7683.4
DL input+output M: L = 31.2 + 29621.7 = 29652.9

# learning a model for train pairs
2.000	
1.611	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.398	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.202	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.070	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.012	OUT DEF: ^.layer_0.shape.size.i=area(^.layer_0.shape)
0.955	OUT DEF: ^.size.i=area(^.layer_0.shape)
0.911	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.877	OUT DEF: ^.layer_0.pos.i='0
0.851	OUT DEF: ^.layer_0.shape.size.j=1
0.825	OUT DEF: ^.layer_0.shape.mask=Full
0.804	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.j / 2
0.797	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (area(^.layer_0.shape),?) and color ? and layers
  _0: a rectangle with size (area(^.layer_0.shape),1) and color ^.layer_0.shape.color and mask Full at ('0,^.layer_01.shape.size.j / 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 112.4 + 9807.4 = 9919.8
DL output with Mo: L = 99.8 + 2552.9 = 2652.7
DL input+output M: L = 212.2 + 12360.4 = 12572.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (1,7)
  _011: a rectangle with size (4,2) and color yellow and mask x.|x.|xx|x. at (2,2)
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
   (250.6 bits)
data: a background with size (5,3) and color yellow and layers
  _0: a rectangle with size (5,1) and color pink and mask Full at (0,1)
diff: 
delta: (0,2)=8  (1,2)=8  (2,2)=8  (3,2)=8  (4,2)=8 
   (131.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
  _01: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (1,7)
  _011: a rectangle with size (4,2) and color yellow and mask x.|x.|xx|x. at (2,2)
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 5x10 instead of 5x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (1,7)
  _01: a rectangle with size (3,2) and color pink and mask xx|.x|xx at (3,5)
  _011: a rectangle with size (4,2) and color yellow and mask x.|x.|xx|x. at (2,2)
diff: 
delta: (7,1)=3  (7,2)=3  (8,0)=3  (8,1)=3 
! size mismatch, 5x10 instead of 5x3

TRAIN a3325580.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
  _01: a rectangle with size (6,3) and color brown and mask .x.|.xx|xx.|.x.|.xx|.x. at (3,0)
  _011: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|..x at (3,4)
diff: 
delta:
   (177.6 bits)
data: a background with size (9,2) and color brown and layers
  _0: a rectangle with size (9,1) and color yellow and mask Full at (0,1)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
  _01: a rectangle with size (6,3) and color brown and mask .x.|.xx|xx.|.x.|.xx|.x. at (3,0)
  _011: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|..x at (3,4)
diff: 
delta:
! size mismatch, 9x10 instead of 9x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color brown and mask .x.|.xx|xx.|.x.|.xx|.x. at (3,0)
  _01: a rectangle with size (5,3) and color yellow and mask xxx|x.x|..x|.xx|..x at (0,7)
  _011: a rectangle with size (4,3) and color pink and mask .x.|.x.|xxx|..x at (3,4)
diff: 
delta:
! size mismatch, 9x10 instead of 9x2

TRAIN a3325580.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,9)
  _011: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
   (214.4 bits)
data: a background with size (5,1) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (0,0)
diff: 
delta:
   (5.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _01: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,9)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 5x10 instead of 5x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,9)
  _011: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 5x10 instead of 5x1
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xxx|..x at (1,0)
  _01: a rectangle with size (3,3) and color red and mask xx.|.xx|.x. at (1,5)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,9)
diff: 
delta: (5,3)=3  (6,3)=3  (6,4)=3 
! size mismatch, 4x10 instead of 5x1

TRAIN a3325580.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color pink and mask Full at (4,6)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
diff: 
delta:
   (107.8 bits)
data: a background with size (3,1) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (5.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
  _011: a rectangle with size (2,1) and color pink and mask Full at (4,6)
diff: 
delta:
! size mismatch, 3x10 instead of 3x1
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (2,1) and color pink and mask Full at (4,6)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
diff: 
delta:
! size mismatch, 3x10 instead of 3x1
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (8,4)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (3,2)
  _011: a rectangle with size (2,1) and color pink and mask Full at (4,6)
diff: 
delta:
! size mismatch, 2x10 instead of 3x1

TRAIN a3325580.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
  _01: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,1)
diff: 
delta:
   (114.0 bits)
data: a background with size (3,2) and color red and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,1)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
  _01: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,1)
diff: 
delta:
! size mismatch, 3x10 instead of 3x2
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|.x at (2,5)
  _01: a rectangle with size (2,1) and color red and mask Full at (4,1)
  _011: a rectangle with size (1,2) and color red and mask Full at (5,1)
diff: 
delta:
! size mismatch, 3x10 instead of 3x2
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask x.|xx at (4,1)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,5)
  _011: a rectangle with size (2,1) and color green and mask Full at (2,6)
diff: 
delta:
! size mismatch, 3x10 instead of 3x2

TRAIN a3325580.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,1)
diff: 
delta:
   (116.4 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,1)
diff: 
delta: (0,2)=8  (1,2)=8  (2,2)=8 
   (83.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _01: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,1)
diff: 
delta:
! size mismatch, 3x10 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _011: a rectangle with size (3,1) and color blue and mask Full at (2,1)
diff: 
delta:
! size mismatch, 3x10 instead of 3x3
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,7)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,1)
  _011: a rectangle with size (2,2) and color yellow and mask xx|x. at (5,3)
diff: 
delta:
! size mismatch, 3x10 instead of 3x3

TRAIN a3325580.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,7)
  _01: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (1,1)
  _011: a rectangle with size (3,2) and color red and mask xx|x.|x. at (7,3)
diff: 
delta: (5,5)=9# (5,6)=9# (6,0)=8  (7,0)=8  (8,0)=8 
! size mismatch, 4x10 instead of 4x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask .x|xx|.x at (1,1)
  _01: a rectangle with size (2,3) and color blue and mask .x.|xxx at (0,7)
  _011: a rectangle with size (3,2) and color red and mask xx|x.|x. at (7,3)
diff: 
delta: (5,5)=9# (5,6)=9# (6,0)=8  (7,0)=8  (8,0)=8 
! size mismatch, 4x10 instead of 4x3

TEST a3325580.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.8 sec (6.8 sec/task)
bits-train-error = 2552.9 bits (2552.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-153] Checking task a3df8b1e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1317.2 = 1332.8
DL output with Mo: L = 15.6 + 7702.8 = 7718.4
DL input+output M: L = 31.2 + 9019.9 = 9051.2

# learning a model for train pairs
2.000	
1.307	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
0.974	IN  DEF: ^.layer_0.shape.color=blue
0.909	OUT DEF: ^.size=^.size
0.846	OUT DEF: ^.layer_0.shape.size=^.size
0.790	IN  DEF: ^.color=black
0.752	OUT DEF: ^.layer_0.pos='(0,0)
0.730	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.721	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)

DL input  with Mi: L = 38.0 + 775.2 = 813.2
DL output with Mo: L = 38.9 + 815.5 = 854.4
DL input+output M: L = 76.9 + 1590.7 = 1667.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (24.3 bits)
data: a background with size (10,2) and color black and layers
  _0: a rectangle with size (10,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (26.0 bits)
data: a background with size (10,3) and color black and layers
  _0: a rectangle with size (10,3) and color blue and mask .x.|x..|.x.|..x|.x.|x..|.x.|..x|.x.|x.. at (0,0)
diff: 
delta:
   (34.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (27.3 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (10,4) and color blue and mask ...x|..x.|.x..|x...|.x..|..x.|...x|..x.|.x..|x... at (0,0)
diff: 
delta:
   (39.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN a3df8b1e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST a3df8b1e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 815.5 bits (815.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-152] Checking task a416b8f3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5499.8 = 5515.4
DL output with Mo: L = 15.6 + 10887.2 = 10902.8
DL input+output M: L = 31.2 + 16387.0 = 16418.2

# learning a model for train pairs
2.000	
1.849	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.680	OUT OBJECT at ^.layer_0: ^.layer_0
1.537	OUT OBJECT at ^.layer_01: ^.layer_0.shape at (?,?)
1.429	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.330	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.238	OUT OBJECT at ^.layer_010: ^.layer_01
1.207	IN  DEF: ^.layer_01.shape.color=red
1.162	OUT OBJECT at ^.layer_0110: ^.layer_01.shape at (?,?)
1.110	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.021	OUT OBJECT at ^.layer_0111: ^.layer_011
0.998	OUT DEF: ^.size.j=^.size.j * 2
0.979	OUT DEF: ^.size.i=^.size.i
0.961	IN  DEF: ^.layer_01.shape.mask=Full
0.943	IN  DEF: ^.layer_011.shape.mask=Full
0.929	IN  DEF: ^.color=black
0.916	OUT DEF: ^.layer_01.pos.j=^.size.j
0.904	OUT DEF: ^.layer_0110.pos.j=right(^.layer_01) + 3
0.893	OUT DEF: ^.layer_011.shape.size.i=^.layer_01.pos.i + 1
0.883	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i
0.872	OUT DEF: ^.layer_0110.pos.i=^.layer_01.pos.i
0.863	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.856	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j * 2) and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: ^.layer_0.shape at (^.layer_0.pos.i,^.size.j)
  _0110: ^.layer_01.shape at (^.layer_01.pos.i,right(^.layer_01) + 3)
  _011: a rectangle with size (^.layer_01.pos.i + 1,?) and color ? and mask ^.layer_011.shape.mask at (?,?)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 114.7 + 3467.1 = 3581.8
DL output with Mo: L = 187.8 + 2062.6 = 2250.4
DL input+output M: L = 302.5 + 5529.7 = 5832.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,1)
diff: 
delta:
   (75.0 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _010: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _01: a rectangle with size (1,2) and color grey and mask Full at (1,3)
  _0110: a rectangle with size (1,1) and color red and mask Full at (1,5)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,4)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (0,1)
diff: 
delta:
   (17.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _011: a rectangle with size (1,2) and color grey and mask Full at (1,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color grey and mask Full at (0,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,2)
diff:   ^.layer_01.shape.color
delta:
! 2 wrong pixels (generated / expected)

TRAIN a416b8f3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (2,1) and color blue and mask Full at (2,1)
diff: 
delta: (2,2)=8 
   (109.2 bits)
data: a background with size (4,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _010: a rectangle with size (2,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,3)
  _0110: a rectangle with size (2,1) and color red and mask Full at (1,3)
  _011: a rectangle with size (2,1) and color blue and mask Full at (2,4)
  _0111: a rectangle with size (2,1) and color blue and mask Full at (2,1)
diff: 
delta: (2,2)=8  (2,5)=8 
   (67.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (2,1) and color blue and mask Full at (2,1)
diff: 
delta: (2,2)=8 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
diff:   ^.layer_011.shape.mask
delta: (2,2)=8 
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,1) and color blue and mask Full at (2,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (1,0)
diff:   ^.layer_01.shape.color
delta: (2,2)=8 
! 7 wrong pixels (generated / expected)

TRAIN a416b8f3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color green and mask Full at (0,2)
diff: 
delta: (2,2)=8  (2,3)=8  (3,2)=6 
   (162.5 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _010: a rectangle with size (3,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,4)
  _0110: a rectangle with size (3,2) and color red and mask Full at (0,4)
  _011: a rectangle with size (1,6) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (2,1) and color green and mask Full at (0,2)
diff: 
delta: (0,6)=3  (1,6)=3  (3,2)=6  (3,6)=6 
   (121.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (2,2)
diff: 
delta: (0,2)=3  (1,2)=3  (3,2)=6 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color green and mask Full at (0,2)
diff: 
delta: (2,2)=8  (2,3)=8  (3,2)=6 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (2,2)
diff: 
delta: (0,2)=3  (1,0)=2  (1,2)=3  (3,2)=6 
! 11 wrong pixels (generated / expected)

TRAIN a416b8f3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask ..x|xx. at (2,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color grey and mask Full at (1,1)
diff:   ^.layer_01.shape.color
delta: (3,2)=1  (4,3)=1 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (2,3) and color pink and mask ..x|xx. at (2,0)
  _01: a rectangle with size (2,1) and color grey and mask Full at (1,1)
  _011: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
diff:   ^.layer_01.shape.color
delta: (3,2)=1  (4,3)=1 
! 12 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (3,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color grey and mask Full at (1,1)
diff:   ^.layer_01.shape.color
delta: (2,2)=6  (3,2)=1  (4,3)=1 
! 13 wrong pixels (generated / expected)

TEST a416b8f3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 17.2 sec (17.2 sec/task)
bits-train-error = 2062.6 bits (2062.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-151] Checking task a48eeaf7.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4305.8 = 4321.4
DL output with Mo: L = 15.6 + 4305.8 = 4321.4
DL input+output M: L = 31.2 + 8611.6 = 8642.8

# learning a model for train pairs
2.000	
1.681	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.213	OUT OBJECT at ^.layer_0: ^.layer_0
1.119	OUT DEF: ^.size=^.size
1.084	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.047	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.007	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.957	OUT DEF: ^.layer_0111.pos=^.layer_0.pos + 2
0.922	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.874	OUT DEF: ^.layer_01.pos=^.layer_01.pos + translationOnto(^.layer_01, ^.layer_0)
0.837	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.789	OUT DEF: ^.layer_011.pos=^.layer_011.pos + translationOnto(^.layer_011, ^.layer_0)
0.749	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.722	OUT DEF: ^.layer_0111.shape=^.layer_0111.shape
0.695	OUT DEF: ^.layer_011.shape=^.layer_011.shape
0.668	OUT DEF: ^.layer_01.shape=^.layer_01.shape
0.643	IN  DEF: ^.layer_0.shape.color=red
0.617	IN  DEF: ^.layer_01.shape.color=grey
0.591	IN  DEF: ^.layer_011.shape.color=grey
0.566	IN  DEF: ^.layer_0111.shape.color=grey
0.550	IN  DEF: ^.layer_0.shape.mask=Full
0.539	IN  DEF: ^.color=black
0.527	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at ^.layer_01.pos + translationOnto(^.layer_01, ^.layer_0)
  _011: ^.layer_011.shape at ^.layer_011.pos + translationOnto(^.layer_011, ^.layer_0)
  _0111: ^.layer_0111.shape at ^.layer_0.pos + 2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)
  _0111: a point with color grey at (?,?)

DL input  with Mi: L = 116.7 + 1783.5 = 1900.2
DL output with Mo: L = 109.5 + 269.0 = 378.4
DL input+output M: L = 226.2 + 2052.5 = 2278.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (3,8)
  _0111: a point with color grey at (7,7)
diff: 
delta:
   (75.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (2,3)
  _011: a point with color grey at (3,5)
  _0111: a point with color grey at (5,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (3,3)
  _01: a point with color grey at (0,3)
  _011: a point with color grey at (3,8)
  _0111: a point with color grey at (7,7)
diff: 
delta:
correct output grid

TRAIN a48eeaf7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (6,9)
diff: 
delta: (8,5)=5#
   (102.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (3,4)
  _0111: a point with color grey at (4,7)
diff: 
delta: (4,5)=5#
   (26.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (3,1)
  _0111: a point with color grey at (6,9)
diff: 
delta: (8,5)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (2,5)
  _01: a point with color grey at (0,8)
  _011: a point with color grey at (6,9)
  _0111: a point with color grey at (3,1)
diff: 
delta: (8,5)=5#
! 2 wrong pixels (generated / expected)

TRAIN a48eeaf7.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,2)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (1,8)
  _0111: a point with color grey at (6,7)
diff: 
delta: (9,2)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (6,2)
  _01: a point with color grey at (0,2)
  _011: a point with color grey at (6,7)
  _0111: a point with color grey at (1,8)
diff: 
delta: (9,2)=5#
! 3 wrong pixels (generated / expected)

TEST a48eeaf7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.7 sec (2.7 sec/task)
bits-train-error = 269.0 bits (269.0 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-150] Checking task a5313dff.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22848.5 = 22864.1
DL output with Mo: L = 15.6 + 32351.8 = 32367.4
DL input+output M: L = 31.2 + 55200.3 = 55231.5

# learning a model for train pairs
2.000	
1.224	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	OUT OBJECT at ^.layer_0: ^.layer_0
0.374	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.338	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.320	OUT DEF: ^.size=^.size
0.308	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.293	OUT OBJECT at ^.layer_010: ^.layer_01
0.283	OUT DEF: ^.layer_01.pos=^.layer_01.pos - 1
0.276	IN  DEF: ^.layer_0.shape.color=red
0.269	IN  DEF: ^.layer_01.shape.color=red
0.262	OUT DEF: ^.layer_01.shape.size.i=center(^.layer_0) - 1
0.257	OUT DEF: ^.layer_01.shape.color=blue
0.253	OUT DEF: ^.layer_011.shape.size.i=^.size.i - ^.layer_0.shape.size.j
0.250	IN  DEF: ^.color=black
0.247	OUT DEF: ^.layer_01.shape.mask=Full
0.244	OUT DEF: ^.layer_011.shape.mask=Full
0.241	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size (center(^.layer_0) - 1,?) and color blue and mask Full at ^.layer_01.pos - 1
  _011: a rectangle with size (^.size.i - ^.layer_0.shape.size.j,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 72.7 + 4390.7 = 4463.4
DL output with Mo: L = 137.5 + 1354.9 = 1492.4
DL input+output M: L = 210.2 + 5745.6 = 5955.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a point with color red at (3,3)
diff: 
delta:
   (61.5 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _010: a point with color red at (3,3)
  _01: a rectangle with size (3,1) and color blue and mask Full at (2,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (2,2)
diff: 
delta:
   (26.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a point with color red at (3,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN a5313dff.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (5,4)
diff: 
delta: (1,1)=2 
   (145.2 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _010: a point with color red at (5,4)
  _01: a rectangle with size (3,3) and color blue and mask Full at (4,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (26.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta: (5,4)=2 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,7) and color red and mask ...x...|...x...|...x...|xxxxxxx|..x...x|..x...x|..x...x|..xxxxx at (0,0)
  _01: a point with color red at (5,4)
diff: 
delta: (1,1)=2 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (3,0)
  _01: a point with color red at (1,1)
diff: 
delta: (0,3)=2  (1,3)=2  (2,3)=2  (4,2)=2  (4,6)=2  (5,2)=2  (5,4)=2  (5,6)=2  (6,2)=2  (6,6)=2  (7,2)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2 
! 28 wrong pixels (generated / expected)

TRAIN a5313dff.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (2,5)
diff: 
delta: (6,5)=2  (11,9)=2 
   (232.4 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _010: a point with color red at (2,5)
  _01: a rectangle with size (7,3) and color blue and mask Full at (1,4)
  _011: a rectangle with size (3,2) and color blue and mask Full at (3,8)
diff: 
delta: (6,5)=2  (11,9)=2 
   (83.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (2,5)
diff: 
delta: (6,5)=2  (11,9)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (6,5)
diff: 
delta: (2,5)=2  (11,9)=2 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (12,9) and color red and mask xxxxx....|x...x....|x...xxxx.|x...x..x.|xxxxx..x.|x...x..x.|x...xxxx.|x...x....|xxxxx....|....xxxxx|....x...x|....x...x at (0,3)
  _01: a point with color red at (11,9)
diff: 
delta: (2,5)=2  (6,5)=2 
! 33 wrong pixels (generated / expected)

TRAIN a5313dff.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (0,2) and color col10 and mask Full at (0,0)

TEST a5313dff.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 7.2 sec (7.2 sec/task)
bits-train-error = 1354.9 bits (1354.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-149] Checking task a5f85a15.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5436.7 = 5452.3
DL output with Mo: L = 15.6 + 5436.7 = 5452.3
DL input+output M: L = 31.2 + 10873.5 = 10904.7

# learning a model for train pairs
2.000	
1.717	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.613	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.523	OUT DEF: ^.size=^.size
1.480	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.427	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.384	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.333	OUT DEF: ^.layer_01.pos=^.layer_0.pos + 1
1.288	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.238	OUT DEF: ^.layer_011.pos=^.layer_0.pos + 2
1.207	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.176	OUT DEF: ^.layer_01.shape.color=yellow
1.146	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
1.133	OUT DEF: ^.color=black
1.119	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ^.layer_0.shape.color at ^.layer_0.pos
  _01: a point with color yellow at ^.layer_0.pos + 1
  _011: a point with color ^.layer_01.shape.color at ^.layer_0.pos + 2
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 3189.5 = 3269.8
DL output with Mo: L = 90.2 + 2741.1 = 2831.3
DL input+output M: L = 170.5 + 5930.6 = 6101.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (77.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (1,1)
  _011: a point with color red at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|.x.|..x at (0,0)
diff: 
delta:
correct output grid

TRAIN a5f85a15.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
  _01: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
diff: 
delta:
   (132.6 bits)
data: a background with size (8,8) and color black and layers
  _0: a point with color brown at (0,2)
  _01: a point with color yellow at (1,3)
  _011: a point with color brown at (2,4)
diff: 
delta: (3,5)=4  (4,0)=9# (4,6)=9# (5,1)=4  (5,7)=4  (6,2)=9# (7,3)=4 
   (175.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
  _01: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask x...|.x..|..x.|...x at (4,0)
  _01: a rectangle with size (6,6) and color brown and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TRAIN a5f85a15.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
  _01: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
diff: 
delta:
   (109.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color yellow at (1,3)
  _011: a point with color green at (2,4)
diff: 
delta: (3,0)=3  (3,5)=4  (4,1)=4  (5,2)=3 
   (98.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
  _01: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask x..|.x.|..x at (3,0)
  _01: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a5f85a15.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (11,11) and color pink and mask x..........|.x.........|..x........|...x.......|....x......|.....x.....|......x....|.......x...|........x..|.........x.|..........x at (1,0)
  _01: a rectangle with size (8,8) and color pink and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,4)
diff: 
delta: (8,0)=6  (9,1)=6  (10,2)=6  (11,3)=6 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (8,8) and color pink and mask x.......|.x......|..x.....|...x....|....x...|.....x..|......x.|.......x at (0,4)
  _01: a rectangle with size (11,11) and color pink and mask x..........|.x.........|..x........|...x.......|....x......|.....x.....|......x....|.......x...|........x..|.........x.|..........x at (1,0)
diff: 
delta: (8,0)=6  (9,1)=6  (10,2)=6  (11,3)=6 
! 20 wrong pixels (generated / expected)

TEST a5f85a15.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 2741.1 bits (2741.1 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-148] Checking task a61ba2ce.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6783.1 = 6798.7
DL output with Mo: L = 15.6 + 5830.9 = 5846.5
DL input+output M: L = 31.2 + 12614.0 = 12645.3

# learning a model for train pairs
2.000	
1.885	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.687	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
1.571	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.372	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
1.254	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.053	OUT OBJECT at ^.layer_011: ^.layer_011.shape at (?,?)
0.928	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.719	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at (?,?)
0.689	OUT DEF: ^.layer_011.pos=^.layer_011.shape.size
0.665	IN  DEF: ^.layer_011.shape.mask=.x|xx
0.640	IN  DEF: ^.layer_0111.shape.mask=x.|xx
0.615	IN  DEF: ^.layer_0.shape.mask=xx|x.
0.585	OUT DEF: ^.layer_0.pos='(0,0)
0.560	IN  DEF: ^.layer_01.shape.mask=xx|.x
0.538	OUT DEF: ^.size.i=area(^.layer_0.shape) + 1
0.517	OUT DEF: ^.size.j=area(^.layer_0.shape) + 1
0.503	OUT DEF: ^.layer_01.pos.i='0
0.488	OUT DEF: ^.layer_0111.pos.j='0
0.475	OUT DEF: ^.layer_0111.pos.i=^.layer_0111.shape.size.i
0.462	OUT DEF: ^.layer_01.pos.j=^.layer_01.shape.size.j
0.454	OUT DEF: ^.color=black
0.446	IN  DEF: ^.color=black
0.445	OUT DEF: ^.size=average(^.layer_0.shape.size, ^.layer_01.shape.size) + 2

# Learned model:
CONSTRUCT (Mo)
a background with size average(^.layer_0.shape.size, ^.layer_01.shape.size) + 2 and color black and layers
  _0: ^.layer_0.shape at '(0,0)
  _01: ^.layer_01.shape at ('0,^.layer_01.shape.size.j)
  _011: ^.layer_011.shape at ^.layer_011.shape.size
  _0111: ^.layer_0111.shape at (^.layer_0111.shape.size.i,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask xx|x. at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask xx|.x at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask .x|xx at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask x.|xx at (?,?)

DL input  with Mi: L = 165.9 + 2695.5 = 2861.4
DL output with Mo: L = 140.7 + 0.0 = 140.7
DL input+output M: L = 306.6 + 2695.5 = 3002.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,6)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (3,1)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (7,7)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (9,3)
diff: 
delta:
   (134.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (0,2)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask xx|x. at (1,6)
  _01: a rectangle with size (2,2) and color red and mask xx|.x at (3,1)
  _011: a rectangle with size (2,2) and color blue and mask .x|xx at (7,7)
  _0111: a rectangle with size (2,2) and color green and mask x.|xx at (9,3)
diff: 
delta:
correct output grid

TRAIN a61ba2ce.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (3,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (1,8)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (5,7)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (9,4)
diff: 
delta:
   (134.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (0,0)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (0,2)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (2,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask xx|x. at (3,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (1,8)
  _011: a rectangle with size (2,2) and color red and mask .x|xx at (5,7)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (9,4)
diff: 
delta:
correct output grid

TRAIN a61ba2ce.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask xx|x. at (9,2)
  _01: a rectangle with size (2,2) and color cyan and mask xx|.x at (2,10)
  _011: a rectangle with size (2,2) and color pink and mask .x|xx at (2,2)
  _0111: a rectangle with size (2,2) and color blue and mask x.|xx at (6,6)
diff: 
delta:
correct output grid

TEST a61ba2ce.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 8.8 sec (8.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-147] Checking task a61f2674.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13414.2 = 13429.8
DL output with Mo: L = 15.6 + 5989.6 = 6005.2
DL input+output M: L = 31.2 + 19403.8 = 19435.0

# learning a model for train pairs
2.000	
1.406	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.145	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.727	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.649	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.582	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.516	OUT DEF: ^.size=^.size
0.473	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.435	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.420	OUT DEF: ^.layer_01.pos.j=center(^.layer_01) + 1
0.405	OUT DEF: ^.layer_01.pos.i=area(^.layer_0.shape) - 2
0.394	OUT DEF: ^.layer_01.shape.size.i=average(^.layer_011.shape.size.i, ^.layer_0111.shape.size.i) - 2
0.383	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.372	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.360	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j
0.342	OUT DEF: ^.layer_0.shape.color=blue
0.324	OUT DEF: ^.layer_01.shape.color=red
0.315	OUT DEF: ^.color=black
0.307	IN  DEF: ^.layer_0.shape.color=grey
0.299	IN  DEF: ^.layer_01.shape.color=grey
0.291	IN  DEF: ^.layer_011.shape.color=grey
0.282	IN  DEF: ^.layer_0111.shape.color=grey
0.277	IN  DEF: ^.layer_0.shape.mask=Full
0.273	IN  DEF: ^.layer_01.shape.mask=Full
0.268	IN  DEF: ^.layer_011.shape.mask=Full
0.263	IN  DEF: ^.layer_0111.shape.mask=Full
0.259	IN  DEF: ^.color=black
0.257	OUT DEF: ^.layer_01.shape.size=span(^.layer_0.pos, ^.layer_011.pos) - 2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size span(^.layer_0.pos, ^.layer_011.pos) - 2 and color red and mask ^.layer_01.shape.mask at (area(^.layer_0.shape) - 2,center(^.layer_01) + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 153.6 + 2973.6 = 3127.1
DL output with Mo: L = 142.1 + 0.0 = 142.1
DL input+output M: L = 295.7 + 2973.6 = 3269.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (6,1) and color grey and mask Full at (3,0)
diff: 
delta: (6,8)=5# (7,8)=5# (8,8)=5#
   (188.4 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color blue and mask Full at (1,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (6,8)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,0)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,4)
diff: 
delta: (6,8)=5# (7,8)=5# (8,8)=5#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,2)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,6)
  _011: a rectangle with size (4,1) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (6,1) and color grey and mask Full at (3,0)
diff: 
delta: (6,8)=5# (7,8)=5# (8,8)=5#
correct output grid

TRAIN a61f2674.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,0)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,6)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,2)
diff: 
delta:
   (109.0 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color blue and mask Full at (0,4)
  _01: a rectangle with size (2,1) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,0)
  _011: a rectangle with size (6,1) and color grey and mask Full at (3,6)
  _0111: a rectangle with size (2,1) and color grey and mask Full at (7,2)
diff: 
delta:
correct output grid

TRAIN a61f2674.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,3)
  _011: a rectangle with size (5,1) and color grey and mask Full at (4,5)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (8,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color grey and mask Full at (2,3)
  _011: a rectangle with size (1,1) and color grey and mask Full at (8,1)
  _0111: a rectangle with size (5,1) and color grey and mask Full at (4,5)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST a61f2674.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.1 sec (8.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.75
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-146] Checking task a64e4611.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 215213.0 = 215228.6
DL output with Mo: L = 15.6 + 440375.8 = 440391.4
DL input+output M: L = 31.2 + 655588.8 = 655620.1

# learning a model for train pairs
2.000	
1.533	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.309	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.126	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.980	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.855	OUT OBJECT at ^.layer_01: ^.layer_01
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 96063.9 = 96177.1
DL output with Mo: L = 53.0 + 179859.5 = 179912.5
DL input+output M: L = 166.3 + 275923.4 = 276089.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _01: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (25,23)=8  (25,25)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
   (3386.2 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (25,30) and color green and mask .........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxxxxxxxxxxxxxxxx|.........xxxxxxxxxxxxxxxxxxxxx|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|xxxxxxxxxxxxxxxx..............|xxxxxxxxxxxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx..............|.........xxxxxxx.............. at (5,0)
  _01: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
diff: 
delta: (0,0)=8  (0,1)=8  (0,13)=8  (0,14)=8  (0,15)=8  (0,17)=8  (0,20)=8  (0,22)=8  (0,26)=8  (0,27)=8  (0,29)=8  (1,14)=8  (1,15)=8  (1,18)=8  (1,24)=8  (1,25)=8  (1,26)=8  (1,27)=8  (1,29)=8  (2,13)=8  (2,14)=8  (2,16)=8  (2,18)=8  (2,20)=8  (2,21)=8  (2,22)=8  (2,23)=8  (2,26)=8  (3,13)=8  (3,14)=8  (3,16)=8  (3,17)=8  (3,21)=8  (3,22)=8  (3,24)=8  (4,17)=8  (4,18)=8  (4,19)=8  (4,20)=8  (4,23)=8  (4,25)=8  (4,26)=8  (4,29)=8  (5,18)=8  (5,19)=8  (5,20)=8  (5,21)=8  (5,23)=8  (5,25)=8  (5,29)=8  (6,17)=8  (6,18)=8  (6,19)=8  (6,25)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,19)=8  (7,21)=8  (7,23)=8  (7,24)=8  (7,25)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,24)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,21)=8  (13,23)=8  (13,24)=8  (13,26)=8  (13,27)=8  (13,29)=8  (14,17)=8  (14,18)=8  (14,20)=8  (14,24)=8  (14,28)=8  (14,29)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,26)=8  (15,28)=8  (15,29)=8  (16,17)=8  (16,18)=8  (16,22)=8  (16,23)=8  (16,25)=8  (16,26)=8  (16,29)=8  (17,0)=8  (17,17)=8  (17,18)=8  (17,19)=8  (17,20)=8  (17,22)=8  (17,23)=8  (17,27)=8  (17,28)=8  (18,0)=8  (18,18)=8  (18,19)=8  (18,20)=8  (18,22)=8  (18,24)=8  (18,26)=8  (19,18)=8  (19,23)=8  (19,24)=8  (19,25)=8  (19,27)=8  (19,28)=8  (19,29)=8  (20,22)=8  (20,26)=8  (20,28)=8  (21,17)=8  (21,22)=8  (21,24)=8  (21,25)=8  (21,28)=8  (22,18)=8  (22,23)=8  (22,25)=8  (22,27)=8  (22,28)=8  (22,29)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (23,26)=8  (23,27)=8  (23,28)=8  (23,29)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (24,28)=8  (24,29)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (25,23)=8  (25,25)=8  (25,27)=8  (25,29)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (26,29)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (27,28)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
   (6677.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _01: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (25,23)=8  (25,25)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (15,13) and color cyan and mask ....x....xx.x|xx.x.......xx|..x.xx...x.xx|xx...xx.xx..x|xxxx.xx...xx.|.xxx.x.x.x...|.x....xxx.xxx|.....x...x.x.|.....x.xx..x.|......x.x.xxx|.........xxxx|...........xx|..........x.x|............x|...........x. at (13,17)
  _01: a rectangle with size (19,12) and color cyan and mask ...x.x.xxxxx|...xxxx..x.x|x...xx..x.xx|.xx....xx...|xxx.x..x....|.x...xxx....|.xxxx..x....|.xxxx..x....|x.xx.xxx....|xxx.xx.x....|x.xx..xx....|.xx.........|.x..x.......|xxxxx.......|x.xx..xx....|x.x..xx.....|..xxxx......|..x..xxx....|..xx.x.x.... at (0,0)
  _011: a rectangle with size (9,15) and color cyan and mask xxx.x........xx|.xx..x.....xxxx|xx.x.x.xxxx..x.|xx.xx...xx.x...|....xxxx..x.xx.|.....xxxx.x.x..|....xxx.....x..|......x...xxx..|...........x... at (0,13)
diff: 
delta: (0,0)=8  (0,1)=8  (0,20)=8  (0,22)=8  (0,29)=8  (1,29)=8  (4,29)=8  (5,29)=8  (6,27)=8  (6,28)=8  (6,29)=8  (7,21)=8  (7,28)=8  (7,29)=8  (8,17)=8  (8,21)=8  (8,27)=8  (8,29)=8  (12,7)=8  (13,23)=8  (13,24)=8  (14,24)=8  (17,0)=8  (18,0)=8  (21,17)=8  (22,18)=8  (23,0)=8  (23,1)=8  (23,4)=8  (23,5)=8  (23,7)=8  (23,17)=8  (23,18)=8  (23,19)=8  (23,21)=8  (24,1)=8  (24,2)=8  (24,3)=8  (24,4)=8  (24,7)=8  (24,17)=8  (24,19)=8  (24,21)=8  (24,23)=8  (24,24)=8  (25,1)=8  (25,2)=8  (25,4)=8  (25,5)=8  (25,6)=8  (25,23)=8  (25,25)=8  (26,0)=8  (26,2)=8  (26,3)=8  (26,4)=8  (26,6)=8  (26,7)=8  (26,18)=8  (26,19)=8  (26,20)=8  (26,22)=8  (26,24)=8  (26,25)=8  (27,0)=8  (27,2)=8  (27,4)=8  (27,6)=8  (27,17)=8  (27,19)=8  (27,20)=8  (27,22)=8  (27,23)=8  (27,25)=8  (28,1)=8  (28,2)=8  (28,18)=8  (28,21)=8  (28,22)=8  (28,24)=8  (28,25)=8  (28,26)=8  (29,0)=8  (29,1)=8  (29,2)=8  (29,4)=8  (29,7)=8  (29,17)=8  (29,18)=8  (29,20)=8  (29,22)=8  (29,23)=8  (29,25)=8  (29,27)=8  (29,28)=8 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _01: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
diff: 
delta: (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
   (3201.5 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (30,24) and color green and mask xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxxxxxxx|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx.................|xxxxxxx................. at (0,6)
  _01: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
diff: 
delta: (0,0)=1  (0,1)=1  (0,2)=1  (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,2)=1  (1,4)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,2)=1  (2,3)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,2)=1  (3,3)=1  (3,4)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,1)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,2)=1  (5,3)=1  (5,4)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (6,1)=1  (6,3)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,4)=1  (8,2)=1  (8,4)=1  (9,0)=1  (9,2)=1  (9,3)=1  (9,4)=1  (9,15)=1  (9,17)=1  (9,18)=1  (9,19)=1  (9,21)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,1)=1  (10,2)=1  (10,3)=1  (10,4)=1  (10,16)=1  (10,17)=1  (10,18)=1  (10,21)=1  (10,25)=1  (10,26)=1  (11,1)=1  (11,2)=1  (11,15)=1  (11,17)=1  (11,19)=1  (11,21)=1  (11,23)=1  (11,25)=1  (11,29)=1  (12,0)=1  (12,1)=1  (12,2)=1  (12,4)=1  (12,14)=1  (12,16)=1  (12,20)=1  (12,24)=1  (12,25)=1  (12,28)=1  (12,29)=1  (13,0)=1  (13,14)=1  (13,16)=1  (13,17)=1  (13,19)=1  (13,20)=1  (13,21)=1  (13,22)=1  (13,27)=1  (13,29)=1  (14,1)=1  (14,2)=1  (14,4)=1  (14,14)=1  (14,15)=1  (14,18)=1  (14,20)=1  (14,21)=1  (14,22)=1  (14,23)=1  (14,26)=1  (14,27)=1  (14,28)=1  (14,29)=1  (15,0)=1  (15,1)=1  (15,4)=1  (15,14)=1  (15,16)=1  (15,17)=1  (15,18)=1  (15,22)=1  (15,24)=1  (15,25)=1  (15,27)=1  (15,29)=1  (16,1)=1  (16,2)=1  (17,0)=1  (17,3)=1  (17,4)=1  (18,0)=1  (18,2)=1  (19,0)=1  (19,1)=1  (19,3)=1  (19,4)=1  (20,0)=1  (20,2)=1  (20,3)=1  (20,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,2)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
   (6336.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _01: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
diff: 
delta: (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (22,5) and color blue and mask xxx..|..x.x|..xx.|..xxx|.x...|..xxx|.x.x.|xxx.x|..x.x|x.xxx|.xxxx|.xx..|xxx..|x....|.xx..|xx...|.xx..|x..xx|x.x..|xx.xx|x.xxx|..x.. at (0,0)
  _01: a rectangle with size (10,16) and color blue and mask .......x..x..x..|.......x.x..xx..|....xxx.x...xxxx|..xx..xx...x....|..xx...xx..xxxx.|x.xxxxxx.x..xx..|xx....x..x..xxx.|...xxxx..x...xxx|.......xx..xx..x|.......x.xx.xxx. at (20,14)
  _011: a rectangle with size (7,16) and color blue and mask .x.xxx.x........|..xxx..x........|.x.x.x.x.......x|x.x...x.......xx|x.xx.xxxx....x.x|xx..x.xxxx..xxxx|x.xxx...x.xx.x.x at (9,14)
diff: 
delta: (0,14)=1  (0,16)=1  (0,20)=1  (0,21)=1  (0,22)=1  (0,23)=1  (0,25)=1  (0,26)=1  (0,27)=1  (0,28)=1  (1,14)=1  (1,15)=1  (1,16)=1  (1,17)=1  (1,19)=1  (1,21)=1  (1,22)=1  (1,25)=1  (1,26)=1  (1,27)=1  (2,14)=1  (2,15)=1  (2,16)=1  (2,19)=1  (2,21)=1  (2,23)=1  (2,26)=1  (2,28)=1  (3,14)=1  (3,15)=1  (3,18)=1  (3,19)=1  (3,21)=1  (3,22)=1  (3,23)=1  (3,25)=1  (3,27)=1  (3,29)=1  (4,15)=1  (4,17)=1  (4,18)=1  (4,19)=1  (4,20)=1  (4,22)=1  (4,23)=1  (4,26)=1  (4,29)=1  (5,16)=1  (5,20)=1  (5,21)=1  (5,23)=1  (5,24)=1  (5,27)=1  (5,29)=1  (9,27)=1  (9,28)=1  (9,29)=1  (10,25)=1  (10,26)=1  (11,23)=1  (11,25)=1  (12,4)=1  (12,24)=1  (12,25)=1  (14,4)=1  (15,4)=1  (20,15)=1  (20,17)=1  (20,29)=1  (21,14)=1  (21,15)=1  (22,0)=1  (23,1)=1  (23,3)=1  (24,0)=1  (24,1)=1  (24,2)=1  (24,4)=1  (25,2)=1  (25,4)=1  (26,2)=1  (27,2)=1  (27,3)=1  (27,4)=1  (28,0)=1  (28,2)=1  (28,4)=1  (28,14)=1  (29,0)=1  (29,2)=1  (29,3)=1  (29,16)=1  (29,17)=1  (29,18)=1 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (8,13) and color red and mask ..x..........|.x...........|x.x..........|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _01: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _011: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (8,19)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (20,3)=2  (20,4)=2  (20,5)=2  (20,6)=2  (21,2)=2  (21,5)=2  (22,2)=2  (22,3)=2  (22,5)=2  (23,1)=2  (23,5)=2  (23,21)=2  (24,0)=2  (24,2)=2  (25,0)=2  (25,1)=2  (25,4)=2  (26,0)=2  (26,4)=2  (26,5)=2  (26,6)=2  (27,1)=2  (27,3)=2  (27,6)=2  (28,0)=2  (28,2)=2  (28,3)=2  (29,0)=2  (29,3)=2  (29,4)=2 
   (3018.7 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (30,16) and color green and mask ........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx|........xxxxxxxx at (0,0)
  _01: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (0,25)=2  (0,26)=2  (1,2)=2  (1,21)=2  (1,22)=2  (1,23)=2  (1,27)=2  (1,28)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (2,24)=2  (2,26)=2  (2,28)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (3,21)=2  (3,22)=2  (3,24)=2  (3,25)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,23)=2  (4,24)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,22)=2  (5,24)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (6,23)=2  (6,24)=2  (6,25)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (7,22)=2  (7,26)=2  (7,28)=2  (8,19)=2  (8,22)=2  (8,26)=2  (8,27)=2  (8,29)=2  (9,17)=2  (9,26)=2  (9,27)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (20,3)=2  (20,4)=2  (20,5)=2  (20,6)=2  (21,2)=2  (21,5)=2  (22,2)=2  (22,3)=2  (22,5)=2  (22,19)=2  (23,1)=2  (23,5)=2  (23,18)=2  (23,21)=2  (24,0)=2  (24,2)=2  (24,17)=2  (24,19)=2  (25,0)=2  (25,1)=2  (25,4)=2  (25,18)=2  (25,19)=2  (25,22)=2  (25,25)=2  (25,26)=2  (26,0)=2  (26,4)=2  (26,5)=2  (26,6)=2  (26,17)=2  (26,20)=2  (26,22)=2  (26,26)=2  (26,27)=2  (26,28)=2  (26,29)=2  (27,1)=2  (27,3)=2  (27,6)=2  (27,17)=2  (27,20)=2  (27,22)=2  (27,26)=2  (27,28)=2  (27,29)=2  (28,0)=2  (28,2)=2  (28,3)=2  (28,17)=2  (28,21)=2  (28,22)=2  (28,26)=2  (28,28)=2  (29,0)=2  (29,3)=2  (29,4)=2  (29,17)=2  (29,18)=2  (29,19)=2  (29,21)=2  (29,22)=2  (29,23)=2  (29,24)=2  (29,25)=2  (29,26)=2  (29,28)=2  (29,29)=2 
   (4972.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask .....xx.x...|....x..x....|...x..x.x...|x.xx..xx....|xxxx.xxx.x..|....x.x.x...|...x...x.x..|.xx..x.x....|...xx...xx.x|........xxx.|.........x.x|...........x at (13,18)
  _01: a rectangle with size (8,13) and color red and mask ..x..........|.x...........|x.x..........|.xx..x..xx...|x..x.x...xxxx|x..x.x...x.xx|x...xx...x.x.|xxx.xxxxxx.xx at (22,17)
  _011: a rectangle with size (10,9) and color red and mask ....xx...|xxx...xx.|...x.x.x.|xx.xx....|..xx.....|.x.x.....|..xxx....|.x...x.x.|.x...xx.x|.....xx.. at (0,21)
diff: 
delta: (0,1)=2  (0,3)=2  (0,4)=2  (0,5)=2  (0,6)=2  (0,17)=2  (1,2)=2  (2,1)=2  (2,5)=2  (2,6)=2  (2,17)=2  (2,19)=2  (3,4)=2  (3,6)=2  (3,17)=2  (3,18)=2  (4,1)=2  (4,4)=2  (4,5)=2  (4,18)=2  (4,27)=2  (5,0)=2  (5,17)=2  (5,18)=2  (5,19)=2  (5,29)=2  (6,3)=2  (6,5)=2  (6,17)=2  (6,18)=2  (6,20)=2  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,6)=2  (7,18)=2  (8,19)=2  (9,17)=2  (10,19)=2  (10,20)=2  (10,22)=2  (10,23)=2  (10,24)=2  (10,29)=2  (11,19)=2  (11,20)=2  (11,21)=2  (11,22)=2  (11,24)=2  (12,20)=2  (12,28)=2  (12,29)=2  (13,17)=2  (13,29)=2  (14,17)=2  (14,28)=2  (15,28)=2  (16,29)=2  (17,29)=2  (20,3)=2  (20,4)=2  (20,5)=2  (20,6)=2  (21,2)=2  (21,5)=2  (22,2)=2  (22,3)=2  (22,5)=2  (23,1)=2  (23,5)=2  (23,21)=2  (24,0)=2  (24,2)=2  (25,0)=2  (25,1)=2  (25,4)=2  (26,0)=2  (26,4)=2  (26,5)=2  (26,6)=2  (27,1)=2  (27,3)=2  (27,6)=2  (28,0)=2  (28,2)=2  (28,3)=2  (29,0)=2  (29,3)=2  (29,4)=2 
! size mismatch, 10x10 instead of 30x30

TRAIN a64e4611.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (14,8) and color yellow and mask x.xx..xx|.xxx.x..|xxxxxxxx|..x...x.|..x..x..|..x.xx.x|.x.x..xx|.x..xxxx|x.x.xxx.|x.xx.x.x|.xx...x.|...x..xx|x.xxx.xx|.x.xx... at (16,22)
  _01: a rectangle with size (9,9) and color yellow and mask .xx......|xxx......|...x.....|....xxx..|..xxx.x..|..x.x....|x.xx..x..|.x.xxx.x.|..x...xxx at (0,0)
  _011: a rectangle with size (7,7) and color yellow and mask ..xx...|..xxx..|x.xx.x.|xx.x..x|x.xx...|x.x.xxx|..x.x.. at (21,14)
diff: 
delta: (0,4)=4  (0,6)=4  (0,7)=4  (0,14)=4  (0,15)=4  (0,16)=4  (0,17)=4  (0,18)=4  (0,22)=4  (0,24)=4  (0,25)=4  (0,26)=4  (1,5)=4  (1,6)=4  (1,15)=4  (1,16)=4  (1,18)=4  (1,25)=4  (1,26)=4  (1,28)=4  (1,29)=4  (2,8)=4  (2,9)=4  (2,15)=4  (2,17)=4  (2,18)=4  (2,22)=4  (2,23)=4  (2,26)=4  (2,29)=4  (3,0)=4  (3,8)=4  (3,14)=4  (3,18)=4  (3,26)=4  (3,29)=4  (4,0)=4  (4,9)=4  (4,17)=4  (4,23)=4  (4,25)=4  (4,26)=4  (4,28)=4  (5,8)=4  (5,9)=4  (5,14)=4  (5,17)=4  (5,23)=4  (6,9)=4  (6,14)=4  (6,16)=4  (6,17)=4  (6,22)=4  (6,25)=4  (6,26)=4  (6,28)=4  (6,29)=4  (7,17)=4  (7,27)=4  (8,14)=4  (8,15)=4  (8,18)=4  (8,26)=4  (8,28)=4  (16,1)=4  (16,7)=4  (16,9)=4  (16,15)=4  (16,18)=4  (17,0)=4  (17,1)=4  (17,3)=4  (17,4)=4  (17,7)=4  (17,15)=4  (17,17)=4  (17,20)=4  (18,2)=4  (18,4)=4  (18,5)=4  (18,6)=4  (18,8)=4  (18,17)=4  (19,1)=4  (19,2)=4  (19,4)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,20)=4  (20,4)=4  (20,9)=4  (20,14)=4  (21,0)=4  (21,2)=4  (21,6)=4  (22,0)=4  (22,2)=4  (22,3)=4  (22,6)=4  (22,7)=4  (22,21)=4  (23,1)=4  (23,2)=4  (23,3)=4  (23,4)=4  (23,6)=4  (24,0)=4  (24,1)=4  (24,6)=4  (24,7)=4  (24,9)=4  (25,0)=4  (25,2)=4  (25,6)=4  (25,9)=4  (26,1)=4  (26,3)=4  (26,9)=4  (27,2)=4  (27,4)=4  (27,6)=4  (27,7)=4  (28,0)=4  (28,6)=4  (28,7)=4  (28,8)=4  (28,20)=4  (29,3)=4  (29,4)=4  (29,5)=4  (29,6)=4  (29,7)=4  (29,8)=4  (29,15)=4  (29,18)=4 
! size mismatch, 10x10 instead of 30x30
>> Trial 2
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (14,8) and color yellow and mask x.xx..xx|.xxx.x..|xxxxxxxx|..x...x.|..x..x..|..x.xx.x|.x.x..xx|.x..xxxx|x.x.xxx.|x.xx.x.x|.xx...x.|...x..xx|x.xxx.xx|.x.xx... at (16,22)
  _01: a rectangle with size (7,7) and color yellow and mask ..xx...|..xxx..|x.xx.x.|xx.x..x|x.xx...|x.x.xxx|..x.x.. at (21,14)
  _011: a rectangle with size (9,9) and color yellow and mask .xx......|xxx......|...x.....|....xxx..|..xxx.x..|..x.x....|x.xx..x..|.x.xxx.x.|..x...xxx at (0,0)
diff: 
delta: (0,4)=4  (0,6)=4  (0,7)=4  (0,14)=4  (0,15)=4  (0,16)=4  (0,17)=4  (0,18)=4  (0,22)=4  (0,24)=4  (0,25)=4  (0,26)=4  (1,5)=4  (1,6)=4  (1,15)=4  (1,16)=4  (1,18)=4  (1,25)=4  (1,26)=4  (1,28)=4  (1,29)=4  (2,8)=4  (2,9)=4  (2,15)=4  (2,17)=4  (2,18)=4  (2,22)=4  (2,23)=4  (2,26)=4  (2,29)=4  (3,0)=4  (3,8)=4  (3,14)=4  (3,18)=4  (3,26)=4  (3,29)=4  (4,0)=4  (4,9)=4  (4,17)=4  (4,23)=4  (4,25)=4  (4,26)=4  (4,28)=4  (5,8)=4  (5,9)=4  (5,14)=4  (5,17)=4  (5,23)=4  (6,9)=4  (6,14)=4  (6,16)=4  (6,17)=4  (6,22)=4  (6,25)=4  (6,26)=4  (6,28)=4  (6,29)=4  (7,17)=4  (7,27)=4  (8,14)=4  (8,15)=4  (8,18)=4  (8,26)=4  (8,28)=4  (16,1)=4  (16,7)=4  (16,9)=4  (16,15)=4  (16,18)=4  (17,0)=4  (17,1)=4  (17,3)=4  (17,4)=4  (17,7)=4  (17,15)=4  (17,17)=4  (17,20)=4  (18,2)=4  (18,4)=4  (18,5)=4  (18,6)=4  (18,8)=4  (18,17)=4  (19,1)=4  (19,2)=4  (19,4)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,20)=4  (20,4)=4  (20,9)=4  (20,14)=4  (21,0)=4  (21,2)=4  (21,6)=4  (22,0)=4  (22,2)=4  (22,3)=4  (22,6)=4  (22,7)=4  (22,21)=4  (23,1)=4  (23,2)=4  (23,3)=4  (23,4)=4  (23,6)=4  (24,0)=4  (24,1)=4  (24,6)=4  (24,7)=4  (24,9)=4  (25,0)=4  (25,2)=4  (25,6)=4  (25,9)=4  (26,1)=4  (26,3)=4  (26,9)=4  (27,2)=4  (27,4)=4  (27,6)=4  (27,7)=4  (28,0)=4  (28,6)=4  (28,7)=4  (28,8)=4  (28,20)=4  (29,3)=4  (29,4)=4  (29,5)=4  (29,6)=4  (29,7)=4  (29,8)=4  (29,15)=4  (29,18)=4 
! size mismatch, 10x10 instead of 30x30

TEST a64e4611.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.2 sec (29.2 sec/task)
bits-train-error = 179859.5 bits (179859.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-145] Checking task a65b410d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2925.7 = 2941.3
DL output with Mo: L = 15.6 + 14684.3 = 14699.9
DL input+output M: L = 31.2 + 17610.0 = 17641.2

# learning a model for train pairs
2.000	
1.465	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.993	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.842	OUT OBJECT at ^.layer_01: ^.layer_0
0.743	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.686	IN  DEF: ^.layer_0.shape.color=red
0.648	OUT DEF: ^.size=^.size
0.614	IN  DEF: ^.layer_0.shape.mask=Full
0.589	IN  DEF: ^.color=black
0.567	OUT DEF: ^.layer_0.pos='(0,0)
0.551	OUT DEF: ^.layer_0.shape.size.j=bottom(^.layer_0) + ^.layer_0.shape.size.j
0.540	OUT DEF: ^.layer_0.shape.size.i=bottom(^.layer_0)
0.528	OUT DEF: ^.layer_0.shape.color=green
0.517	OUT DEF: ^.layer_011.shape.color=blue
0.506	OUT DEF: ^.layer_011.pos.j='0
0.496	OUT DEF: ^.layer_011.pos.i=middle(^.layer_0)
0.487	OUT DEF: ^.layer_011.shape.size.j=right(^.layer_0)
0.477	OUT DEF: ^.layer_011.shape.size.i=right(^.layer_0)
0.472	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (bottom(^.layer_0),bottom(^.layer_0) + ^.layer_0.shape.size.j) and color green and mask ? at '(0,0)
  _01: ^.layer_0
  _011: a rectangle with size (right(^.layer_0),right(^.layer_0)) and color blue and mask ? at (middle(^.layer_0),'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)

DL input  with Mi: L = 50.3 + 1162.5 = 1212.8
DL output with Mo: L = 151.0 + 729.5 = 880.5
DL input+output M: L = 201.3 + 1892.0 = 2093.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta:
   (36.8 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxxxx|xxxx.|xxx.. at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (4,0)
diff: 
delta:
   (20.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN a65b410d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,0)
diff: 
delta:
   (39.6 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (3,6) and color green and mask xxxxxx|xxxxx.|xxxx.. at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (3,0)
  _011: a rectangle with size (2,2) and color blue and mask xx|x. at (4,0)
diff: 
delta:
   (26.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a65b410d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,0)
diff: 
delta:
   (39.9 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (2,6) and color green and mask xxxxxx|xxxxx. at (0,0)
  _01: a rectangle with size (1,4) and color red and mask Full at (2,0)
  _011: a rectangle with size (3,3) and color blue and mask xxx|xx.|x.. at (3,0)
diff: 
delta:
   (25.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,4) and color red and mask Full at (2,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a65b410d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,5) and color red and mask Full at (2,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TEST a65b410d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 729.5 bits (729.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-144] Checking task a68b268e.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 71082.8 = 71098.4
DL output with Mo: L = 15.6 + 12024.6 = 12040.2
DL input+output M: L = 31.2 + 83107.3 = 83138.6

# learning a model for train pairs
2.000	
1.683	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.475	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.341	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.218	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.043	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size) / 2
0.990	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.961	OUT DEF: ^.color=^.layer_01.shape.color
0.955	IN  DEF: ^.layer_0.shape.mask=+-cross
0.950	IN  DEF: ^.layer_0.shape.color=blue
0.945	IN  DEF: ^.layer_0111.shape.color=pink
0.722	OUT OBJECT at ^.layer_00: ^.layer_01
0.698	OUT OBJECT at ^.layer_000: a point with color ? at (?,?)
0.677	OUT DEF: ^.layer_000.pos.i='0
0.671	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) / 2 and color ? and layers
  _000: a point with color ? at ('0,?)
  _00: ^.layer_01
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color blue and mask +-cross at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color pink and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 185.8 + 17836.9 = 18022.8
DL output with Mo: L = 138.9 + 4887.6 = 5026.5
DL input+output M: L = 324.7 + 22724.5 = 23049.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (2,4) and color orange and mask .xxx|xxx. at (0,0)
  _011: a rectangle with size (3,2) and color cyan and mask xx|x.|.x at (6,2)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (5,5)
  _01111: a rectangle with size (2,2) and color yellow and mask .x|xx at (0,5)
diff: 
delta: (0,8)=4  (2,8)=4  (3,0)=7# (7,0)=8  (7,5)=6  (7,8)=6 
   (346.8 bits)
data: a background with size (4,4) and color cyan and layers
  _000: a point with color pink at (0,0)
  _00: a rectangle with size (2,4) and color orange and mask .xxx|xxx. at (0,0)
  _0: a rectangle with size (2,2) and color black and mask x.|xx at (2,1)
  _01: a point with color yellow at (2,3)
diff: 
delta: (3,0)=7#
   (91.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (2,4) and color orange and mask .xxx|xxx. at (0,0)
  _011: a rectangle with size (3,2) and color cyan and mask xx|x.|.x at (6,2)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (5,5)
  _01111: a rectangle with size (2,2) and color yellow and mask .x|xx at (0,5)
diff: 
delta: (0,8)=4  (2,8)=4  (3,0)=7# (7,0)=8  (7,5)=6  (7,8)=6 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (3,2) and color cyan and mask xx|x.|.x at (6,2)
  _011: a rectangle with size (2,4) and color orange and mask .xxx|xxx. at (0,0)
  _0111: a rectangle with size (1,3) and color pink and mask Full at (5,5)
  _01111: a rectangle with size (2,2) and color yellow and mask .x|xx at (0,5)
diff: 
delta: (0,8)=4  (2,8)=4  (3,0)=7# (7,0)=8  (7,5)=6  (7,8)=6 
! 13 wrong pixels (generated / expected)

TRAIN a68b268e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _011: a rectangle with size (3,4) and color yellow and mask .x..|x.xx|x.xx at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask x...|x...|xx.x|x.xx at (5,5)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (8,0)
diff: 
delta: (5,2)=8  (5,8)=6 
   (284.3 bits)
data: a background with size (4,4) and color black and layers
  _000: a point with color pink at (0,3)
  _00: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _0: a rectangle with size (1,3) and color cyan and mask Full at (3,0)
  _01: a point with color yellow at (1,3)
diff: 
delta: (2,0)=4  (2,2)=4 
   (101.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _011: a rectangle with size (3,4) and color yellow and mask .x..|x.xx|x.xx at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask x...|x...|xx.x|x.xx at (5,5)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (8,0)
diff: 
delta: (5,2)=8  (5,8)=6 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (3,4) and color yellow and mask .x..|x.xx|x.xx at (0,5)
  _011: a rectangle with size (4,4) and color orange and mask xxx.|x.x.|.x.x|...x at (0,0)
  _0111: a rectangle with size (4,4) and color pink and mask x...|x...|xx.x|x.xx at (5,5)
  _01111: a rectangle with size (1,3) and color cyan and mask Full at (8,0)
diff: 
delta: (5,2)=8  (5,8)=6 
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _011: a rectangle with size (4,3) and color yellow and mask xx.|.xx|..x|xx. at (0,6)
  _0111: a rectangle with size (4,4) and color pink and mask .xxx|..x.|x.x.|xx.. at (5,5)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (5,2)
diff: 
delta: (7,3)=8  (8,0)=8 
   (283.2 bits)
data: a background with size (4,4) and color black and layers
  _000: a point with color yellow at (0,1)
  _00: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _0: a rectangle with size (3,1) and color yellow and mask Full at (1,2)
  _01: a point with color cyan at (3,0)
diff: 
delta:
   (54.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _011: a rectangle with size (4,3) and color yellow and mask xx.|.xx|..x|xx. at (0,6)
  _0111: a rectangle with size (4,4) and color pink and mask .xxx|..x.|x.x.|xx.. at (5,5)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (5,2)
diff: 
delta: (7,3)=8  (8,0)=8 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,3) and color yellow and mask xx.|.xx|..x|xx. at (0,6)
  _011: a rectangle with size (4,4) and color orange and mask ..xx|...x|xxxx|.x.. at (0,0)
  _0111: a rectangle with size (4,4) and color pink and mask .xxx|..x.|x.x.|xx.. at (5,5)
  _01111: a rectangle with size (1,2) and color cyan and mask Full at (5,2)
diff: 
delta: (7,3)=8  (8,0)=8 
! 15 wrong pixels (generated / expected)

TRAIN a68b268e.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask xx..|x...|xxx.|x.xx at (0,5)
  _0111: a rectangle with size (3,4) and color pink and mask xx..|.xxx|.xx. at (6,5)
  _01111: a rectangle with size (4,3) and color cyan and mask .x.|.x.|.x.|x.x at (5,1)
diff: 
delta: (0,8)=4 
   (276.8 bits)
data: a background with size (4,4) and color black and layers
  _000: a point with color cyan at (0,2)
  _00: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _01: a point with color yellow at (0,3)
diff: 
delta: (1,1)=6  (3,1)=8 
   (100.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask xx..|x...|xxx.|x.xx at (0,5)
  _0111: a rectangle with size (3,4) and color pink and mask xx..|.xxx|.xx. at (6,5)
  _01111: a rectangle with size (4,3) and color cyan and mask .x.|.x.|.x.|x.x at (5,1)
diff: 
delta: (0,8)=4 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask xx..|x...|xxx.|x.xx at (0,5)
  _011: a rectangle with size (4,4) and color orange and mask xx..|x.x.|x..x|x.xx at (0,0)
  _0111: a rectangle with size (3,4) and color pink and mask xx..|.xxx|.xx. at (6,5)
  _01111: a rectangle with size (4,3) and color cyan and mask .x.|.x.|.x.|x.x at (5,1)
diff: 
delta: (0,8)=4 
! 15 wrong pixels (generated / expected)

TRAIN a68b268e.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask ...x|xxxx|x...|xxx. at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask xxxx|..x.|.x.x|...x at (5,5)
  _01111: a rectangle with size (1,4) and color cyan and mask Full at (8,0)
diff: 
delta: (5,0)=8  (5,2)=8  (6,2)=8  (6,3)=8 
   (335.6 bits)
data: a background with size (4,4) and color yellow and layers
  _000: a point with color cyan at (0,2)
  _00: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
  _0: a rectangle with size (1,3) and color pink and mask Full at (2,1)
  _01: a point with color cyan at (3,3)
diff: 
delta:
   (60.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask ...x|xxxx|x...|xxx. at (0,5)
  _011: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
  _0111: a rectangle with size (4,4) and color pink and mask xxxx|..x.|.x.x|...x at (5,5)
  _01111: a rectangle with size (1,4) and color cyan and mask Full at (8,0)
diff: 
delta: (5,0)=8  (5,2)=8  (6,2)=8  (6,3)=8 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,3) and color orange and mask xx.|x..|x.x|.xx at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask ...x|xxxx|x...|xxx. at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask xxxx|..x.|.x.x|...x at (5,5)
  _01111: a rectangle with size (1,4) and color cyan and mask Full at (8,0)
diff: 
delta: (5,0)=8  (5,2)=8  (6,2)=8  (6,3)=8 
! 10 wrong pixels (generated / expected)

TRAIN a68b268e.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask x..x|.xxx|xxx.|xxx. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask xx.x|.xxx|.x.x|xx.x at (5,0)
  _0111: a rectangle with size (4,4) and color pink and mask xxxx|...x|..x.|.x.. at (5,5)
  _01111: a rectangle with size (4,4) and color yellow and mask xxx.|xx.x|xx.x|.x.. at (0,5)
diff: 
delta:
   (256.9 bits)
data: a background with size (4,4) and color black and layers
  _000: a point with color orange at (0,0)
  _00: a rectangle with size (4,4) and color orange and mask x..x|.xxx|xxx.|xxx. at (0,0)
  _0: a rectangle with size (2,3) and color yellow and mask Full (and Border) at (0,0)
  _01: a point with color yellow at (2,3)
diff: 
delta: (3,3)=8 
   (80.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask x..x|.xxx|xxx.|xxx. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask xx.x|.xxx|.x.x|xx.x at (5,0)
  _0111: a rectangle with size (4,4) and color pink and mask xxxx|...x|..x.|.x.. at (5,5)
  _01111: a rectangle with size (4,4) and color yellow and mask xxx.|xx.x|xx.x|.x.. at (0,5)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color cyan and mask xx.x|.xxx|.x.x|xx.x at (5,0)
  _011: a rectangle with size (4,4) and color orange and mask x..x|.xxx|xxx.|xxx. at (0,0)
  _0111: a rectangle with size (4,4) and color pink and mask xxxx|...x|..x.|.x.. at (5,5)
  _01111: a rectangle with size (4,4) and color yellow and mask xxx.|xx.x|xx.x|.x.. at (0,5)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN a68b268e.json/6: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color orange and mask xxx.|.xx.|xxxx|x... at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask ..x.|xx.x|.x.x|x.x. at (0,5)
  _0111: a rectangle with size (4,4) and color pink and mask .x.x|x..x|xxxx|.x.. at (5,5)
  _01111: a rectangle with size (4,4) and color cyan and mask ...x|x..x|x.x.|.x.x at (5,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask +-cross at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask ..x.|xx.x|.x.x|x.x. at (0,5)
  _011: a rectangle with size (4,4) and color orange and mask xxx.|.xx.|xxxx|x... at (0,0)
  _0111: a rectangle with size (4,4) and color pink and mask .x.x|x..x|xxxx|.x.. at (5,5)
  _01111: a rectangle with size (4,4) and color cyan and mask ...x|x..x|x.x.|.x.x at (5,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TEST a68b268e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 4887.6 bits (4887.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-143] Checking task a699fb00.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6963.4 = 6979.0
DL output with Mo: L = 15.6 + 10442.9 = 10458.6
DL input+output M: L = 31.2 + 17406.3 = 17437.5

# learning a model for train pairs
2.000	
1.879	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.825	OUT DEF: ^.size=^.size
1.771	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.736	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.700	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.667	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.634	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.600	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.564	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.535	OUT OBJECT at ^.layer_01111: ^.layer_0111
1.486	OUT OBJECT at ^.layer_0110: ^.layer_011
1.462	IN  DEF: ^.layer_0.shape.color=blue
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color blue at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 98.3 + 5767.0 = 5865.3
DL output with Mo: L = 152.5 + 6351.0 = 6503.5
DL input+output M: L = 250.8 + 12118.0 = 12368.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta:
   (72.5 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,1)
  _0110: a point with color blue at (3,1)
  _011: a rectangle with size (1,1) and color blue and mask Full at (0,2)
  _0111: a rectangle with size (1,1) and color red and mask Full at (3,2)
  _01111: a point with color blue at (3,3)
diff: 
delta:
   (102.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (0,2)
  _011: a point with color blue at (3,1)
  _0111: a point with color blue at (3,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color blue at (3,1)
  _011: a point with color blue at (0,2)
  _0111: a point with color blue at (3,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN a699fb00.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (1,7)
diff: 
delta: (4,2)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
   (239.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (4,2)
  _01: a rectangle with size (1,3) and color blue and mask Full at (6,6)
  _0110: a point with color blue at (1,5)
  _011: a rectangle with size (1,5) and color red and mask Full at (1,2)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (8,3)
  _01111: a point with color blue at (1,7)
diff: 
delta: (1,1)=1  (1,3)=1  (4,3)=2  (6,7)=2  (8,4)=2 
   (253.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (1,7)
diff: 
delta: (4,2)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,1)
  _01: a point with color blue at (1,3)
  _011: a point with color blue at (1,5)
  _0111: a point with color blue at (4,2)
diff: 
delta: (1,7)=1  (4,4)=1  (6,6)=1  (6,8)=1  (8,3)=1  (8,5)=1 
! 17 wrong pixels (generated / expected)

TRAIN a699fb00.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (2,3)
diff: 
delta: (5,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
   (264.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (5,3)
  _01: a rectangle with size (1,3) and color blue and mask Full at (1,6)
  _0110: a point with color blue at (2,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (9,1)
  _01111: a point with color blue at (2,3)
diff: 
delta: (1,7)=2  (2,2)=2  (5,4)=2  (5,6)=2  (7,5)=2  (9,2)=2 
   (279.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (2,3)
diff: 
delta: (5,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (1,8)
  _011: a point with color blue at (2,1)
  _0111: a point with color blue at (5,3)
diff: 
delta: (2,3)=1  (5,5)=1  (5,7)=1  (7,4)=1  (7,6)=1  (9,1)=1  (9,3)=1 
! 19 wrong pixels (generated / expected)

TRAIN a699fb00.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,2)
  _0111: a point with color blue at (2,4)
diff: 
delta: (2,6)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (2,2)
  _0111: a point with color blue at (2,6)
diff: 
delta: (2,4)=1  (2,8)=1  (4,1)=1  (4,3)=1  (5,5)=1  (5,7)=1  (7,3)=1  (7,5)=1 
! 20 wrong pixels (generated / expected)

TEST a699fb00.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.2 sec (25.2 sec/task)
bits-train-error = 6351.0 bits (6351.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-142] Checking task a740d043.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4726.2 = 4741.8
DL output with Mo: L = 15.6 + 2801.8 = 2817.4
DL input+output M: L = 31.2 + 7528.0 = 7559.2

# learning a model for train pairs
2.000	
1.657	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.169	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
1.079	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.899	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
0.819	OUT DEF: ^.layer_0.pos='(0,0)
0.743	OUT DEF: ^.layer_01.pos=^.layer_01.pos - ^.layer_0.pos
0.682	OUT DEF: ^.size.i=bottom(^.layer_0)
0.627	IN  DEF: ^.color=blue
0.600	OUT DEF: ^.color=black
0.579	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (bottom(^.layer_0),?) and color black and layers
  _0: ^.layer_0.shape at '(0,0)
  _01: ^.layer_01.shape at ^.layer_01.pos - ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 86.9 + 2239.8 = 2326.7
DL output with Mo: L = 67.1 + 183.1 = 250.2
DL input+output M: L = 154.0 + 2422.9 = 2576.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (1,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,3)
diff: 
delta:
   (82.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (0,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,2)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (1,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,3)
diff: 
delta:
! size mismatch, 3x10 instead of 3x3
>> Trial 2
data: a background with size (5,7) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (2,3)
  _01: a rectangle with size (3,3) and color red and mask xx.|xx.|..x at (1,1)
diff:   ^.layer_01.shape.mask
delta:
! size mismatch, 2x10 instead of 3x3
>> Trial 3
data: a background with size (5,7) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (2,3)
diff: 
delta: (3,3)=2 
! size mismatch, 2x10 instead of 3x3

TRAIN a740d043.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,2)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,4)
diff: 
delta:
   (70.3 bits)
data: a background with size (2,3) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,2)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,2)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,4)
diff: 
delta:
! size mismatch, 2x10 instead of 2x3
>> Trial 2
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (1,4)
  _01: a rectangle with size (2,1) and color green and mask Full at (1,2)
diff: 
delta:
! size mismatch, 2x10 instead of 2x3

TRAIN a740d043.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (4,1)
diff: 
delta:
   (71.4 bits)
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (0,0)
  _01: a rectangle with size (1,2) and color pink and mask Full at (2,0)
diff: 
delta:
   (5.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (4,1)
diff: 
delta:
! size mismatch, 3x10 instead of 3x2
>> Trial 2
data: a background with size (7,6) and color blue and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (4,1)
  _01: a rectangle with size (2,2) and color grey and mask Full at (2,1)
diff: 
delta:
! size mismatch, 4x10 instead of 3x2

TRAIN a740d043.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,3)
diff: 
delta:
! size mismatch, 3x10 instead of 2x2
>> Trial 2
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (3,3)
  _01: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,2)
diff:   ^.layer_01.shape.mask
delta:
! size mismatch, 3x10 instead of 2x2
>> Trial 3
data: a background with size (6,6) and color blue and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (3,2)
diff: 
delta: (3,3)=3 
! size mismatch, 2x10 instead of 2x2

TEST a740d043.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 183.1 bits (183.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-141] Checking task a78176bb.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 12365.6 = 12381.2
DL output with Mo: L = 15.6 + 13368.1 = 13383.7
DL input+output M: L = 31.2 + 25733.7 = 25764.9

# learning a model for train pairs
2.000	
1.572	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.243	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.031	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.656	OUT OBJECT at ^.layer_01: ^.layer_0
0.611	OUT DEF: ^.size=^.size
0.598	IN  DEF: ^.layer_01.shape.color=grey
0.585	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.574	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.j / 3
0.568	IN  DEF: ^.color=black
0.562	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j / 3,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 82.7 + 4130.3 = 4213.0
DL output with Mo: L = 65.4 + 2902.6 = 2967.9
DL input+output M: L = 148.0 + 7032.8 = 7180.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask Full (and Border) at (3,4)
diff: 
delta:
   (136.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color orange and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,4)
  _01: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
diff: 
delta:
   (53.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color orange and mask x.........|.x........|..x.......|...x......|....x.....|.....x....|......x...|.......x..|........x.|.........x at (0,0)
  _01: a rectangle with size (2,2) and color grey and mask Full (and Border) at (3,4)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN a78176bb.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask x...|xx..|xxx.|xxxx at (1,5)
diff: 
delta:
   (125.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color brown and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
diff: 
delta:
   (73.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
  _01: a rectangle with size (4,4) and color grey and mask x...|xx..|xxx.|xxxx at (1,5)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x...|xx..|xxx.|xxxx at (1,5)
  _01: a rectangle with size (5,5) and color brown and mask x....|.x...|..x..|...x.|....x at (0,5)
diff:   ^.layer_01.shape.color
delta:
! 26 wrong pixels (generated / expected)

TRAIN a78176bb.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,3) and color grey and mask xx.|.x.|x..|xx.|xxx at (3,3)
diff: 
delta:
   (151.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask x......|.x.....|..x....|...x...|....x..|.....x.|......x at (0,3)
  _01: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
diff: 
delta: (6,0)=2  (7,1)=2  (8,2)=2  (9,3)=2 
   (163.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (1,0)
  _01: a rectangle with size (5,3) and color grey and mask xx.|.x.|x..|xx.|xxx at (3,3)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN a78176bb.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Full (and Border) at (1,3)
  _01: a rectangle with size (5,5) and color grey and mask x....|xx...|xxx..|xxxx.|xxxxx at (4,4)
diff: 
delta: (0,1)=1  (1,2)=1  (2,3)=1  (3,4)=1  (4,5)=1  (5,6)=1  (6,7)=1  (7,8)=1  (8,9)=1 
! 25 wrong pixels (generated / expected)

TEST a78176bb.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.6 sec (4.6 sec/task)
bits-train-error = 2902.6 bits (2902.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-140] Checking task a79310a0.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2445.7 = 2461.3
DL output with Mo: L = 15.6 + 2445.7 = 2461.3
DL input+output M: L = 31.2 + 4891.4 = 4922.6

# learning a model for train pairs
2.000	
1.559	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.117	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.933	OUT DEF: ^.size=^.size
0.820	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.752	IN  DEF: ^.layer_0.shape.color=cyan
0.684	OUT DEF: ^.layer_0.shape.color=red
0.631	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.580	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i + 1
0.539	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.499	IN  DEF: ^.layer_0.shape.mask=Full
0.469	IN  DEF: ^.color=black
0.438	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color red and mask ^.layer_0.shape.mask at (^.layer_0.pos.i + 1,^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 50.3 + 983.4 = 1033.7
DL output with Mo: L = 44.9 + 0.0 = 44.9
DL input+output M: L = 95.2 + 983.4 = 1078.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (35.9 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (0,0)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (27.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,1)
diff: 
delta:
   (35.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN a79310a0.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|.x at (0,1)
diff:   ^.layer_0.shape.mask
delta:
correct output grid

TEST a79310a0.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.0 sec (0.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-139] Checking task a85d4709.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3348.5 = 3364.1
DL output with Mo: L = 15.6 + 3584.9 = 3600.5
DL input+output M: L = 31.2 + 6933.4 = 6964.6

# learning a model for train pairs
2.000	
1.594	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.327	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.181	OUT DEF: ^.size=^.size
1.110	OUT DEF: ^.layer_0.shape.size.j=3
1.044	IN  DEF: ^.layer_0.shape.color=grey
1.001	OUT DEF: ^.layer_0.pos.j='0
0.963	OUT DEF: ^.layer_0.pos.i=^.layer_0.shape.size.j - 1
0.926	OUT DEF: ^.layer_0.shape.mask=Full
0.897	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,3) and color ? and mask Full at (^.layer_0.shape.size.j - 1,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 1625.0 = 1675.3
DL output with Mo: L = 68.9 + 1366.6 = 1435.5
DL input+output M: L = 119.2 + 2991.6 = 3110.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
   (48.1 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,0)
diff: 
delta: (1,0)=4  (1,1)=4  (1,2)=4 
   (86.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,2)
diff: 
delta: (1,1)=5# (2,0)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,2)
diff: 
delta:
   (33.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
diff: 
delta:
   (14.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (0,2)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
diff: 
delta:
   (40.3 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (1,0)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,0)
diff: 
delta: (1,1)=5# (2,0)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,1)
diff: 
delta:
   (40.3 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,3) and color green and mask Full at (1,0)
diff: 
delta:
   (17.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color grey and mask Even Checkboard at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,1)
diff: 
delta: (1,2)=5# (2,1)=5#
! 9 wrong pixels (generated / expected)

TRAIN a85d4709.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,0)
diff: 
delta: (0,2)=5#
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (0,2)
diff: 
delta: (1,0)=5# (2,1)=5#
! 9 wrong pixels (generated / expected)

TEST a85d4709.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 1366.6 bits (1366.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-138] Checking task a87f7484.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 19218.6 = 19234.2
DL output with Mo: L = 15.6 + 3158.5 = 3174.1
DL input+output M: L = 31.2 + 22377.1 = 22408.3

# learning a model for train pairs
2.000	
1.664	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.436	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.076	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.912	OUT DEF: ^.size=^.layer_0.shape.size
0.813	OUT DEF: ^.layer_0.pos='(0,0)
0.782	OUT DEF: ^.color=black
0.777	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 14704.5 = 14752.5
DL output with Mo: L = 30.3 + 0.0 = 30.3
DL input+output M: L = 78.2 + 14704.5 = 14782.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,0)
diff: 
delta: (0,0)=6  (0,2)=6  (1,1)=6  (1,2)=6  (2,0)=6  (2,2)=6  (3,0)=4  (3,2)=4  (4,1)=4  (4,2)=4  (5,0)=4  (5,2)=4 
   (333.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Border at (6,0)
diff: 
delta: (0,0)=6  (0,2)=6  (1,1)=6  (1,2)=6  (2,0)=6  (2,2)=6  (3,0)=4  (3,2)=4  (4,1)=4  (4,2)=4  (5,0)=4  (5,2)=4 
correct output grid

TRAIN a87f7484.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Even Checkboard at (0,6)
diff: 
delta: (0,0)=2  (0,3)=3  (0,9)=1  (1,0)=2  (1,3)=3  (1,9)=1  (2,1)=2  (2,2)=2  (2,4)=3  (2,5)=3  (2,10)=1  (2,11)=1 
   (341.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Even Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Even Checkboard at (0,6)
diff: 
delta: (0,0)=2  (0,3)=3  (0,9)=1  (1,0)=2  (1,3)=3  (1,9)=1  (2,1)=2  (2,2)=2  (2,4)=3  (2,5)=3  (2,10)=1  (2,11)=1 
correct output grid

TRAIN a87f7484.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,3)
diff: 
delta: (0,0)=3  (0,6)=2  (0,9)=8  (0,12)=1  (1,1)=3  (1,2)=3  (1,7)=2  (1,8)=2  (1,10)=8  (1,11)=8  (1,13)=1  (1,14)=1  (2,1)=3  (2,7)=2  (2,10)=8  (2,13)=1 
   (447.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,15) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask x.x|xxx|x.x at (0,3)
diff: 
delta: (0,0)=3  (0,6)=2  (0,9)=8  (0,12)=1  (1,1)=3  (1,2)=3  (1,7)=2  (1,8)=2  (1,10)=8  (1,11)=8  (1,13)=1  (1,14)=1  (2,1)=3  (2,7)=2  (2,10)=8  (2,13)=1 
correct output grid

TRAIN a87f7484.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (12,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
diff: 
delta: (3,0)=3  (4,1)=3  (4,2)=3  (5,0)=3  (6,0)=2  (7,1)=2  (7,2)=2  (8,0)=2  (9,0)=8  (10,1)=8  (10,2)=8  (11,0)=8 
   (348.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask .xx|xx.|x.x at (0,0)
diff: 
delta: (3,0)=3  (4,1)=3  (4,2)=3  (5,0)=3  (6,0)=2  (7,1)=2  (7,2)=2  (8,0)=2  (9,0)=8  (10,1)=8  (10,2)=8  (11,0)=8 
correct output grid

TRAIN a87f7484.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,3) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask x.x|xx.|x.x at (6,0)
diff: 
delta: (0,1)=5# (1,0)=5# (1,2)=5# (2,1)=5# (3,1)=3  (4,0)=3  (4,2)=3  (5,1)=3  (9,1)=4  (10,0)=4  (10,2)=4  (11,1)=4  (12,1)=8  (13,0)=8  (13,2)=8  (14,1)=8 
correct output grid

TEST a87f7484.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.5 sec (0.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-137] Checking task a8c38be5.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 42807.3 = 42822.9
DL output with Mo: L = 15.6 + 14532.4 = 14548.0
DL input+output M: L = 31.2 + 57339.7 = 57370.9

# learning a model for train pairs
2.000	
1.904	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.825	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.746	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.666	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.587	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 38649.4 = 38698.2
DL output with Mo: L = 145.1 + 9791.6 = 9936.8
DL input+output M: L = 194.0 + 48441.0 = 48635.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask xxx..|.xx..|..x..|...xx|....x|...xx at (0,0)
diff: 
delta: (1,0)=8  (1,8)=2  (1,9)=2  (1,10)=2  (2,0)=8  (2,1)=8  (2,8)=5# (2,9)=2  (2,10)=5# (3,2)=2  (3,8)=5# (3,9)=5# (3,10)=5# (4,2)=2  (4,3)=2  (5,2)=2  (5,6)=5# (5,7)=5# (5,8)=5# (6,6)=5# (6,7)=5# (6,8)=5# (6,10)=5# (6,11)=5# (6,12)=5# (7,1)=5# (7,2)=1  (7,3)=1  (7,6)=5# (7,7)=5# (7,8)=5# (7,10)=5# (7,11)=4  (7,12)=5# (8,1)=5# (8,2)=5# (8,3)=1  (8,10)=4  (8,11)=4  (8,12)=4  (9,1)=5# (9,2)=5# (9,3)=5# (9,6)=5# (9,7)=5# (9,8)=3  (10,6)=5# (10,7)=3  (10,8)=3  (11,0)=5# (11,1)=5# (11,2)=5# (11,6)=5# (11,7)=5# (11,8)=3  (11,10)=6  (11,11)=6  (11,12)=5# (12,0)=5# (12,1)=5# (12,2)=9# (12,10)=6  (12,11)=5# (12,12)=5# (13,0)=5# (13,1)=9# (13,2)=9# (13,10)=5# (13,11)=5# (13,12)=5#
   (1917.1 bits)
data: a background with size (9,9) and color grey and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,3)
  _01: a rectangle with size (2,3) and color yellow and mask .x.|xxx at (7,3)
  _011: a rectangle with size (3,2) and color red and mask x.|xx|x. at (3,0)
  _0111: a rectangle with size (3,2) and color green and mask .x|xx|.x at (3,7)
diff: 
delta: (0,0)=6  (0,1)=6  (0,7)=1  (0,8)=1  (1,0)=6  (1,8)=1  (7,0)=8  (7,8)=9# (8,0)=8  (8,1)=8  (8,7)=9# (8,8)=9#
   (489.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask xxx..|.xx..|..x..|...xx|....x|...xx at (0,0)
diff: 
delta: (1,0)=8  (1,8)=2  (1,9)=2  (1,10)=2  (2,0)=8  (2,1)=8  (2,8)=5# (2,9)=2  (2,10)=5# (3,2)=2  (3,8)=5# (3,9)=5# (3,10)=5# (4,2)=2  (4,3)=2  (5,2)=2  (5,6)=5# (5,7)=5# (5,8)=5# (6,6)=5# (6,7)=5# (6,8)=5# (6,10)=5# (6,11)=5# (6,12)=5# (7,1)=5# (7,2)=1  (7,3)=1  (7,6)=5# (7,7)=5# (7,8)=5# (7,10)=5# (7,11)=4  (7,12)=5# (8,1)=5# (8,2)=5# (8,3)=1  (8,10)=4  (8,11)=4  (8,12)=4  (9,1)=5# (9,2)=5# (9,3)=5# (9,6)=5# (9,7)=5# (9,8)=3  (10,6)=5# (10,7)=3  (10,8)=3  (11,0)=5# (11,1)=5# (11,2)=5# (11,6)=5# (11,7)=5# (11,8)=3  (11,10)=6  (11,11)=6  (11,12)=5# (12,0)=5# (12,1)=5# (12,2)=9# (12,10)=6  (12,11)=5# (12,12)=5# (13,0)=5# (13,1)=9# (13,2)=9# (13,10)=5# (13,11)=5# (13,12)=5#
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (8,6)
diff: 
delta: (0,11)=5# (0,12)=5# (0,13)=4  (1,1)=5# (1,2)=5# (1,3)=5# (1,11)=5# (1,12)=4  (1,13)=4  (2,1)=3  (2,2)=5# (2,3)=5# (2,5)=5# (2,6)=8  (2,7)=8  (2,11)=5# (2,12)=5# (2,13)=4  (3,1)=3  (3,2)=3  (3,3)=5# (3,5)=5# (3,6)=5# (3,7)=8  (4,5)=5# (4,6)=5# (4,7)=5# (5,10)=5# (5,11)=5# (5,12)=5# (6,10)=5# (6,11)=5# (6,12)=9# (7,10)=5# (7,11)=9# (7,12)=9# (8,1)=1  (8,2)=1  (8,3)=1  (9,1)=5# (9,2)=1  (9,3)=5# (9,10)=6  (9,11)=5# (9,12)=5# (10,1)=5# (10,2)=5# (10,3)=5# (10,10)=6  (10,11)=6  (10,12)=5# (11,10)=6  (11,11)=5# (11,12)=5# (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,5)=5# (13,6)=5# (13,9)=5# (13,10)=5# (13,11)=5# (14,4)=5# (14,5)=5# (14,6)=5# (14,9)=5# (14,10)=2  (14,11)=5# (15,9)=2  (15,10)=2  (15,11)=2 
   (1947.9 bits)
data: a background with size (9,9) and color grey and layers
  _0: a rectangle with size (2,3) and color blue and mask xxx|.x. at (0,3)
  _01: a rectangle with size (2,3) and color red and mask .x.|xxx at (7,3)
  _011: a rectangle with size (3,2) and color pink and mask x.|xx|x. at (3,0)
  _0111: a rectangle with size (3,2) and color yellow and mask .x|xx|.x at (3,7)
diff: 
delta: (0,0)=7# (0,1)=7# (0,7)=8  (0,8)=8  (1,0)=7# (1,8)=8  (7,0)=3  (7,8)=9# (8,0)=3  (8,1)=3  (8,7)=9# (8,8)=9#
   (489.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,14) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (8,6)
diff: 
delta: (0,11)=5# (0,12)=5# (0,13)=4  (1,1)=5# (1,2)=5# (1,3)=5# (1,11)=5# (1,12)=4  (1,13)=4  (2,1)=3  (2,2)=5# (2,3)=5# (2,5)=5# (2,6)=8  (2,7)=8  (2,11)=5# (2,12)=5# (2,13)=4  (3,1)=3  (3,2)=3  (3,3)=5# (3,5)=5# (3,6)=5# (3,7)=8  (4,5)=5# (4,6)=5# (4,7)=5# (5,10)=5# (5,11)=5# (5,12)=5# (6,10)=5# (6,11)=5# (6,12)=9# (7,10)=5# (7,11)=9# (7,12)=9# (8,1)=1  (8,2)=1  (8,3)=1  (9,1)=5# (9,2)=1  (9,3)=5# (9,10)=6  (9,11)=5# (9,12)=5# (10,1)=5# (10,2)=5# (10,3)=5# (10,10)=6  (10,11)=6  (10,12)=5# (11,10)=6  (11,11)=5# (11,12)=5# (12,4)=7# (12,5)=7# (12,6)=5# (13,4)=7# (13,5)=5# (13,6)=5# (13,9)=5# (13,10)=5# (13,11)=5# (14,4)=5# (14,5)=5# (14,6)=5# (14,9)=5# (14,10)=2  (14,11)=5# (15,9)=2  (15,10)=2  (15,11)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN a8c38be5.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,10)
diff: 
delta: (0,10)=5# (0,11)=5# (0,12)=5# (1,1)=1  (1,2)=5# (1,3)=5# (1,10)=6  (1,11)=5# (1,12)=5# (2,1)=1  (2,2)=1  (2,3)=5# (2,5)=2  (2,6)=2  (2,7)=2  (2,10)=6  (2,11)=6  (2,12)=5# (3,1)=1  (3,2)=5# (3,3)=5# (3,5)=5# (3,6)=2  (3,7)=5# (4,5)=5# (4,6)=5# (4,7)=5# (6,2)=5# (6,3)=5# (6,4)=5# (7,2)=5# (7,3)=8  (7,4)=5# (7,6)=5# (7,7)=5# (7,8)=1  (8,2)=8  (8,3)=8  (8,4)=8  (8,6)=5# (8,7)=1  (8,8)=1  (9,6)=5# (9,7)=5# (9,8)=1  (10,1)=5# (10,2)=4  (10,3)=4  (10,11)=3  (10,12)=3  (10,13)=5# (11,1)=5# (11,2)=5# (11,3)=4  (11,11)=3  (11,12)=5# (11,13)=5# (12,1)=5# (12,2)=5# (12,3)=5# (12,6)=5# (12,7)=5# (12,8)=5# (12,11)=5# (12,12)=5# (12,13)=5# (13,6)=5# (13,7)=5# (13,8)=7# (14,6)=5# (14,7)=7# (14,8)=7#
! size mismatch, 10x10 instead of 9x9

TEST a8c38be5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.6 sec (27.6 sec/task)
bits-train-error = 9791.6 bits (9791.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-136] Checking task a8d7556c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 102442.7 = 102458.4
DL output with Mo: L = 15.6 + 102442.7 = 102458.4
DL input+output M: L = 31.2 + 204885.5 = 204916.7

# learning a model for train pairs
2.000	
1.142	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.339	OUT OBJECT at ^.layer_0: ^.layer_0
0.297	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.270	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.249	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.234	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.227	OUT DEF: ^.size=^.size
0.224	OUT DEF: ^.layer_0111.shape.size=^.layer_0.pos + 2
0.223	IN  DEF: ^.layer_0.shape.color=grey
0.220	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.219	OUT DEF: ^.layer_01111.pos.i=^.layer_01.pos.i
0.217	OUT DEF: ^.layer_01.shape.color=red
0.215	IN  DEF: ^.layer_01.shape.color=grey
0.214	OUT DEF: ^.layer_011.shape.color=red
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _0111: a rectangle with size ^.layer_0.pos + 2 and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (^.layer_01.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a point with color grey at (?,?)

DL input  with Mi: L = 73.6 + 13845.4 = 13919.0
DL output with Mo: L = 170.4 + 7798.0 = 7968.4
DL input+output M: L = 243.9 + 21643.5 = 21887.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a point with color grey at (15,17)
diff: 
delta: (8,0)=5# (13,17)=5# (17,12)=5#
   (477.0 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full (and Border) at (15,4)
  _011: a rectangle with size (2,2) and color red and mask Full (and Border) at (5,5)
  _0111: a rectangle with size (2,2) and color red and mask Full (and Border) at (6,0)
  _01111: a rectangle with size (2,2) and color red and mask Full (and Border) at (15,13)
diff: 
delta: (7,15)=2  (7,16)=2  (8,0)=5# (8,15)=2  (8,16)=2  (13,17)=5# (15,17)=5# (17,12)=5#
   (324.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a point with color grey at (8,0)
diff: 
delta: (13,17)=5# (15,17)=5# (17,12)=5#
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a point with color grey at (13,17)
diff: 
delta: (8,0)=5# (15,17)=5# (17,12)=5#
! 29 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxx.x..xxxxxxx.xxx|xx...x.x.xx..x.x.x|.xx.xx..xx.xxxxx.x|xx.xxxxxx.xxxxx.xx|x.xxxxxxxx.xxx.x.x|.xxxx..x..x.xxxxx.|..xxx..x.x...xxxxx|..xx..xxxxxxxxx..x|..x.x...xxxxxxx..x|..xx..xxxxxxxxxx.x|xx.xxx..x.x..xxx.x|xxxxxxxxxxxx.xxxxx|xxxx..xxxx.xx..x..|.x...x.xx..xxx....|..xxxxx.x.x.x.xx..|x.x...xxxxxxx..x..|x.xx...xxx.....x..|xx.x..x..xx...x.xx at (0,0)
  _01: a point with color grey at (15,17)
diff: 
delta: (8,0)=5# (13,17)=5# (17,12)=5#
! 28 wrong pixels (generated / expected)

TRAIN a8d7556c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a point with color grey at (15,0)
diff: 
delta: (17,0)=5# (17,1)=5# (17,4)=5# (17,5)=5#
   (517.4 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a rectangle with size (2,3) and color red and mask Full (and Border) at (3,6)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (4,11)
  _0111: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,13)
  _01111: a rectangle with size (2,2) and color red and mask Full (and Border) at (15,6)
diff: 
delta: (15,0)=5# (16,2)=2  (16,3)=2  (17,0)=5# (17,1)=5# (17,2)=2  (17,3)=2  (17,4)=5# (17,5)=5#
   (352.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a point with color grey at (15,0)
diff: 
delta: (17,0)=5# (17,1)=5# (17,4)=5# (17,5)=5#
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask xxxx.x.x.xxx..x.xx|xxxx..xx.x..x..xx.|xxxxxx.xxxx....xx.|x.xxxx....xxxxxx..|..x.xx...xx...xxx.|x...x.xxxx...x....|.x.xxx...xx..x.xxx|x..xx.xx.x..x.x.x.|xxxx.xxx.xx.x.x.x.|x.xxxx.x.x.xxx.xx.|x.xxx.x.x..x..xxxx|....x.x...x.xxx...|x.x..x.xx..x...xxx|xxx.x..xxx.xxx.xx.|..xxxxx.xxxx.....x|..xxxx..xx.x.xx.x.|........xxx....x..|.......x.xxx.xxxxx at (0,0)
  _01: a point with color grey at (17,0)
diff: 
delta: (15,0)=5# (17,1)=5# (17,4)=5# (17,5)=5#
! 29 wrong pixels (generated / expected)

TRAIN a8d7556c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
  _01: a point with color grey at (1,0)
diff: 
delta:
   (390.2 bits)
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
  _01: a rectangle with size (4,2) and color red and mask Full (and Border) at (7,10)
  _011: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,6)
  _0111: a rectangle with size (2,2) and color red and mask Full (and Border) at (4,15)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (1,0)
diff: 
delta:
   (102.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ..xxxxxxx..xxx.xx.|....xx....x.xx.xxx|..xxxx..xxxx...xxx|xxx.xxxxxx..xxxxxx|xx.xxxx.xxxx.x....|x..xxxxxx.xxx.x..x|xxx.xxx...xxxxxxx.|.xx.xxxx.x..x.xxx.|xxxxx.xx.x...x.x.x|x.x.x.xxxx...xxxxx|..x.xx.xxx..x.xxxx|xxxx.xxxx.xxxxx.xx|..xxx.xx.xx.x.xxxx|xx.xxx....x.xx.x..|..xxxx.xx.x...x.x.|.xxxxx.xxx.x.xx..x|.xx..xxx...xx.xxxx|x..xx.xxxxx.xx..x. at (0,0)
  _01: a point with color grey at (1,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN a8d7556c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color black and layers
  _0: a rectangle with size (18,18) and color grey and mask ...x.x..xx.xxxxx..|..xx.x.x...xxxx.xx|x...xx.x..x.x.xx.x|.xxx.xx.xx...xx.xx|xxxxxxx..xx....xxx|.xxxx.xxx.x..xx.x.|xx.xxxxxx..x..x.xx|xxxx..xx.xxxxx.xx.|x.x..xxx...xxxx...|....x...xxxx..x.xx|..xx.xxx..x.xxxxx.|...xx.x..xx.xxxxxx|.xxxx..x...xxxxx.x|xxxxxxx.xxxxxxx..x|xx.xxx.x.xxxx.x..x|x.xxxx.xx...xxxx.x|.x..xxxxxxxxxxxxxx|x......x.x.xx.xx.. at (0,0)
  _01: a point with color grey at (10,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TEST a8d7556c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.3 sec (27.3 sec/task)
bits-train-error = 7798.0 bits (7798.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-135] Checking task a9f96cdd.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1643.0 = 1658.7
DL output with Mo: L = 15.6 + 3258.8 = 3274.5
DL input+output M: L = 31.2 + 4901.9 = 4933.1

# learning a model for train pairs
2.000	
1.772	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.594	OUT DEF: ^.size=^.size
1.459	IN  DEF: ^.layer_0.shape.color=red
1.355	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.295	IN  DEF: ^.color=black
1.240	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - 1
1.210	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a point with color ? at (?,^.layer_0.pos.j - 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)

DL input  with Mi: L = 38.0 + 920.3 = 958.3
DL output with Mo: L = 36.9 + 2033.3 = 2070.1
DL input+output M: L = 74.9 + 2953.6 = 3028.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (23.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (0,0)
diff: 
delta: (0,2)=6  (2,0)=8  (2,2)=7#
   (80.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (2,4)
diff: 
delta:
   (23.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (1,3)
diff: 
delta:
   (9.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (2,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
   (23.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color cyan at (1,1)
diff: 
delta: (1,3)=7#
   (33.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta:
   (23.0 bits)
data: a background with size (3,5) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (0,4)=6  (2,2)=8  (2,4)=7#
   (80.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN a9f96cdd.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color black and layers
  _0: a point with color red at (1,4)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TEST a9f96cdd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.0 sec (0.0 sec/task)
bits-train-error = 2033.3 bits (2033.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-134] Checking task aabf363d.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6764.7 = 6780.3
DL output with Mo: L = 15.6 + 6283.0 = 6298.6
DL input+output M: L = 31.2 + 13047.7 = 13078.9

# learning a model for train pairs
2.000	
1.254	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.566	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.483	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.426	OUT DEF: ^.size=^.size
0.376	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.343	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.316	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.300	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color
0.292	OUT DEF: ^.color=black
0.285	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.layer_01.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 68.1 + 1819.0 = 1887.0
DL output with Mo: L = 41.2 + 0.0 = 41.2
DL input+output M: L = 109.3 + 1819.0 = 1928.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
  _01: a point with color yellow at (6,0)
diff: 
delta:
   (90.9 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask xxx.|.x..|xxxx|.xxx|..x. at (1,1)
  _01: a point with color yellow at (6,0)
diff: 
delta:
correct output grid

TRAIN aabf363d.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
  _01: a point with color pink at (6,0)
diff: 
delta:
   (90.9 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color pink and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask ..x.|.xxx|xxxx|xx..|.xx. at (1,1)
  _01: a point with color pink at (6,0)
diff: 
delta:
correct output grid

TRAIN aabf363d.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,5) and color cyan and mask xxx..|xxxxx|..xx.|.xx..|.xxx. at (1,1)
  _01: a point with color red at (6,0)
diff: 
delta:
correct output grid

TEST aabf363d.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-133] Checking task aba27056.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10934.4 = 10950.0
DL output with Mo: L = 15.6 + 22285.4 = 22301.0
DL input+output M: L = 31.2 + 33219.8 = 33251.1

# learning a model for train pairs
2.000	
1.231	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.734	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.378	OUT OBJECT at ^.layer_00: ^.layer_0
0.354	OUT DEF: ^.size=^.size
0.346	OUT DEF: ^.layer_0.shape.color=yellow
0.339	OUT DEF: ^.layer_0.pos.j='0
0.333	IN  DEF: ^.color=black
0.329	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,'0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2404.1 = 2452.0
DL output with Mo: L = 54.8 + 2295.1 = 2349.9
DL input+output M: L = 102.8 + 4699.2 = 4802.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
diff: 
delta:
   (67.1 bits)
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
  _0: a rectangle with size (6,7) and color yellow and mask ...x...|x..x..x|.x.x.x.|..xxx..|...x...|..xxx.. at (0,0)
diff: 
delta:
   (68.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask xx.xx|x...x|xxxxx at (4,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,5) and color pink and mask Full at (4,1)
diff: 
delta: (4,3)=0  (5,2)=0  (5,3)=0  (5,4)=0 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,5) and color pink and mask Full at (6,1)
diff: 
delta: (4,1)=6  (4,2)=6  (4,4)=6  (4,5)=6  (5,1)=6  (5,5)=6 
! 22 wrong pixels (generated / expected)

TRAIN aba27056.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
diff: 
delta:
   (94.8 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
  _0: a rectangle with size (9,8) and color yellow and mask x.......|.x......|..x.....|...x.xxx|xxxxxxxx|xxxxxxxx|xxxxxxxx|...x.xxx|..x..... at (0,0)
diff: 
delta:
   (104.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,5) and color orange and mask xxxxx|x...x|....x|....x|....x|x...x|xxxxx at (2,4)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN aba27056.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
diff: 
delta:
   (78.5 bits)
data: a background with size (6,6) and color black and layers
  _00: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
  _0: a rectangle with size (5,6) and color yellow and mask .xxxx.|.xxxx.|..xx..|.xxxx.|x.xx.x at (1,0)
diff: 
delta:
   (57.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,6) and color green and mask xxxxxx|x....x|x....x|xx..xx at (0,0)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN aba27056.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,4) and color red and mask xxxx|x..x|x...|x...|x...|x...|x...|x..x|xxxx at (0,1)
diff: 
delta:
! 51 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (9,1) and color red and mask Full at (0,1)
diff: 
delta: (0,2)=2  (0,3)=2  (0,4)=2  (1,4)=2  (7,4)=2  (8,2)=2  (8,3)=2  (8,4)=2 
! 59 wrong pixels (generated / expected)

TEST aba27056.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 2295.1 bits (2295.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-132] Checking task ac0a08a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2729.0 = 2744.6
DL output with Mo: L = 15.6 + 42056.8 = 42072.4
DL input+output M: L = 31.2 + 44785.8 = 44817.0

# learning a model for train pairs
2.000	
1.794	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.587	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.498	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.405	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.377	IN  DEF: ^.color=black
1.373	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
1.369	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.365	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
1.362	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j * 2
1.359	OUT DEF: ^.layer_0.shape.mask=Full
1.357	OUT DEF: ^.layer_01.shape.mask=Full
1.355	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask Full at (^.layer_0.pos.i,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j * 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 2113.9 = 2169.7
DL output with Mo: L = 88.6 + 23664.8 = 23753.3
DL input+output M: L = 144.3 + 25778.7 = 25923.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color orange at (1,2)
diff: 
delta:
   (39.9 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color orange and mask Full at (2,4)
diff: 
delta:
   (48.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color orange at (1,2)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (1,2)
  _01: a point with color red at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6

TRAIN ac0a08a4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color pink at (2,0)
diff: 
delta: (1,2)=8 
   (63.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (0,3)
  _01: a rectangle with size (3,3) and color pink and mask Full at (6,0)
diff: 
delta: (3,6)=8  (3,7)=8  (3,8)=8  (4,6)=8  (4,7)=8  (4,8)=8  (5,6)=8  (5,7)=8  (5,8)=8 
   (284.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,2)
diff: 
delta: (2,0)=6 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color pink at (2,0)
diff: 
delta: (1,2)=8 
! size mismatch, 10x10 instead of 9x9
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,2)
  _01: a point with color yellow at (0,1)
diff: 
delta: (2,0)=6 
! size mismatch, 10x10 instead of 9x9

TRAIN ac0a08a4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,1)
  _01: a point with color green at (1,0)
diff: 
delta: (0,2)=9# (1,2)=2  (2,1)=7#
   (108.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask Full at (0,5)
  _01: a rectangle with size (5,5) and color green and mask Full at (5,0)
diff: 
delta: (0,10)=9# (0,11)=9# (0,12)=9# (0,13)=9# (0,14)=9# (1,10)=9# (1,11)=9# (1,12)=9# (1,13)=9# (1,14)=9# (2,10)=9# (2,11)=9# (2,12)=9# (2,13)=9# (2,14)=9# (3,10)=9# (3,11)=9# (3,12)=9# (3,13)=9# (3,14)=9# (4,10)=9# (4,11)=9# (4,12)=9# (4,13)=9# (4,14)=9# (5,10)=2  (5,11)=2  (5,12)=2  (5,13)=2  (5,14)=2  (6,10)=2  (6,11)=2  (6,12)=2  (6,13)=2  (6,14)=2  (7,10)=2  (7,11)=2  (7,12)=2  (7,13)=2  (7,14)=2  (8,10)=2  (8,11)=2  (8,12)=2  (8,13)=2  (8,14)=2  (9,10)=2  (9,11)=2  (9,12)=2  (9,13)=2  (9,14)=2  (10,5)=7# (10,6)=7# (10,7)=7# (10,8)=7# (10,9)=7# (11,5)=7# (11,6)=7# (11,7)=7# (11,8)=7# (11,9)=7# (12,5)=7# (12,6)=7# (12,7)=7# (12,8)=7# (12,9)=7# (13,5)=7# (13,6)=7# (13,7)=7# (13,8)=7# (13,9)=7# (14,5)=7# (14,6)=7# (14,7)=7# (14,8)=7# (14,9)=7#
   (2034.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,1)
  _01: a point with color brown at (0,2)
diff: 
delta: (1,0)=3  (1,2)=2  (2,1)=7#
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,1)
  _01: a point with color green at (1,0)
diff: 
delta: (0,2)=9# (1,2)=2  (2,1)=7#
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (0,2)
  _01: a point with color pink at (0,1)
diff: 
delta: (1,0)=3  (1,2)=2  (2,1)=7#
! size mismatch, 10x10 instead of 15x15

TRAIN ac0a08a4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color brown at (1,1)
diff: 
delta: (1,2)=6  (2,0)=8 
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color pink at (1,2)
diff: 
delta: (1,1)=9# (2,0)=8 
! size mismatch, 10x10 instead of 12x12
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (1,1)
  _01: a point with color blue at (0,0)
diff: 
delta: (1,2)=6  (2,0)=8 
! size mismatch, 10x10 instead of 12x12

TEST ac0a08a4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 23664.8 bits (23664.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-131] Checking task ae3edfdc.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7451.3 = 7466.9
DL output with Mo: L = 15.6 + 7451.3 = 7466.9
DL input+output M: L = 31.2 + 14902.6 = 14933.8

# learning a model for train pairs
2.000	
1.769	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.636	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.546	OUT DEF: ^.size=^.size
1.511	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.474	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.444	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.369	OUT DEF: ^.layer_011=^.layer_0
1.338	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.307	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.276	IN  OBJECT at ^.layer_001: a point with color ? at (?,?)
1.244	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.211	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.176	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.151	OUT DEF: ^.layer_0.shape.size.i=3
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (3,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_0
  _0111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _001: a point with color ? at (?,?)
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 154.1 + 5645.9 = 5800.0
DL output with Mo: L = 105.8 + 2687.3 = 2793.1
DL input+output M: L = 260.0 + 8333.2 = 8593.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _00: a point with color green at (0,3)
  _001: a point with color green at (4,0)
  _0: a point with color red at (4,3)
  _01: a point with color green at (4,8)
  _011: a point with color orange at (6,11)
  _0111: a point with color green at (9,3)
  _01111: a point with color orange at (10,5)
diff: 
delta: (10,11)=1  (10,14)=7# (14,11)=7#
   (233.6 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (3,2)
  _01: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (9,10)
  _011: a point with color red at (4,3)
  _0111: a point with color blue at (10,11)
diff: 
delta:
   (91.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a point with color green at (0,3)
  _001: a point with color green at (4,0)
  _0: a point with color red at (4,3)
  _01: a point with color green at (4,8)
  _011: a point with color orange at (6,11)
  _0111: a point with color green at (9,3)
  _01111: a point with color orange at (10,5)
diff: 
delta: (10,11)=1  (10,14)=7# (14,11)=7#
! 15 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _00: a point with color orange at (0,3)
  _001: a point with color orange at (2,0)
  _0: a point with color blue at (2,3)
  _01: a point with color orange at (2,9)
  _011: a point with color orange at (8,3)
  _0111: a point with color green at (10,5)
  _01111: a point with color red at (10,11)
diff: 
delta: (14,11)=3 
   (179.5 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask Odd Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color green and mask Even Checkboard at (10,10)
  _011: a point with color blue at (2,3)
  _0111: a point with color red at (10,11)
diff: 
delta:
   (89.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a point with color orange at (0,3)
  _001: a point with color orange at (2,0)
  _0: a point with color blue at (2,3)
  _01: a point with color orange at (2,9)
  _011: a point with color orange at (8,3)
  _0111: a point with color green at (10,5)
  _01111: a point with color red at (10,11)
diff: 
delta: (14,11)=3 
! 13 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _00: a point with color green at (0,6)
  _001: a point with color orange at (6,1)
  _0: a point with color blue at (6,10)
  _01: a point with color red at (11,6)
  _011: a point with color green at (11,14)
  _0111: a point with color green at (14,6)
  _01111: a point with color orange at (14,10)
diff: 
delta:
   (151.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Even Checkboard at (10,6)
  _01: a rectangle with size (2,2) and color orange and mask Even Checkboard at (6,9)
  _011: a point with color blue at (6,10)
  _0111: a point with color red at (11,6)
diff: 
delta:
   (88.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a point with color green at (0,6)
  _001: a point with color orange at (6,1)
  _0: a point with color blue at (6,10)
  _01: a point with color red at (11,6)
  _011: a point with color green at (11,14)
  _0111: a point with color green at (14,6)
  _01111: a point with color orange at (14,10)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN ae3edfdc.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _00: a point with color green at (0,11)
  _001: a point with color green at (3,0)
  _0: a point with color red at (3,11)
  _01: a point with color orange at (6,0)
  _011: a point with color blue at (6,5)
  _0111: a point with color orange at (6,14)
  _01111: a point with color green at (12,11)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TEST ae3edfdc.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.0 sec (25.0 sec/task)
bits-train-error = 2687.3 bits (2687.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-130] Checking task ae4f1146.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 36702.4 = 36718.0
DL output with Mo: L = 15.6 + 4270.8 = 4286.4
DL input+output M: L = 31.2 + 40973.2 = 41004.5

# learning a model for train pairs
2.000	
1.601	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.400	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.241	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	OUT DEF: ^.size=^.size / 3
1.002	OUT DEF: ^.layer_0.shape.size=^.layer_01.shape.size
0.883	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.806	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.733	OUT DEF: ^.layer_0.pos='(0,0)
0.650	OUT DEF: ^.color=cyan
0.598	OUT DEF: ^.layer_0.shape.color=blue
0.555	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.539	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.533	IN  DEF: ^.layer_0.shape.color=cyan
0.527	IN  DEF: ^.layer_011.shape.color=cyan
0.521	IN  DEF: ^.layer_0111.shape.color=blue
0.515	IN  DEF: ^.layer_011111.shape.color=blue
0.509	IN  DEF: ^.layer_011111.shape.mask=Border
0.503	IN  DEF: ^.layer_01.shape.color=cyan
0.497	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.490	IN  DEF: ^.layer_0111111.shape.color=blue
0.486	IN  DEF: ^.layer_0111.shape.mask=Full
0.483	IN  DEF: ^.layer_01.shape.mask=Full
0.480	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size / 3 and color cyan and layers
  _0: a rectangle with size ^.layer_01.shape.size and color blue and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color blue and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color blue and mask Border at (?,?)
  _0111111: a point with color blue at (?,?)

DL input  with Mi: L = 243.2 + 11769.7 = 12013.0
DL output with Mo: L = 64.1 + 590.7 = 654.7
DL input+output M: L = 307.3 + 12360.4 = 12667.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|.xx|xxx at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color cyan and mask x.x|.x.|.x. at (5,6)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (5,6)
  _01111: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (1,4)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (1,4)
  _0111111: a point with color blue at (1,0)
diff: 
delta: (1,4)=8  (4,3)=1  (6,2)=1 
   (295.6 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|x.x|x.x at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xxx|.xx|xxx at (0,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color cyan and mask x.x|.x.|.x. at (5,6)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (5,6)
  _01111: a rectangle with size (3,3) and color cyan and mask ..x|..x|xxx at (1,4)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (1,4)
  _0111111: a point with color blue at (1,0)
diff: 
delta: (1,4)=8  (4,3)=1  (6,2)=1 
! 4 wrong pixels (generated / expected)

TRAIN ae4f1146.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask ...x.x|....xx|...xx.|..x...|..x...|xx.... at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (6,6)
  _011: a rectangle with size (3,3) and color cyan and mask xx.|x.x|xxx at (0,1)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (0,2)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (1,5)
  _0111111: a point with color blue at (3,7)
diff: 
delta: (4,2)=8  (8,6)=1 
   (285.3 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|..x at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask ...x.x|....xx|...xx.|..x...|..x...|xx.... at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (6,6)
  _011: a rectangle with size (3,3) and color cyan and mask xx.|x.x|xxx at (0,1)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (0,2)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (1,5)
  _0111111: a point with color blue at (3,7)
diff: 
delta: (4,2)=8  (8,6)=1 
! 5 wrong pixels (generated / expected)

TRAIN ae4f1146.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,2) and color cyan and mask .x|.x|x. at (4,7)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (4,6)
  _01111: a rectangle with size (3,3) and color cyan and mask x.x|xx.|.xx at (5,0)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (5,1)
  _0111111: a point with color blue at (7,0)
diff: 
delta: (2,4)=1  (4,6)=8 
   (257.9 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .x.|xx.|x.x at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,2) and color cyan and mask .x|.x|x. at (4,7)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (4,6)
  _01111: a rectangle with size (3,3) and color cyan and mask x.x|xx.|.xx at (5,0)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (5,1)
  _0111111: a point with color blue at (7,0)
diff: 
delta: (2,4)=1  (4,6)=8 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (2,3) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (3,2) and color cyan and mask .x|.x|x. at (4,7)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (4,6)
  _01111: a rectangle with size (3,3) and color cyan and mask x.x|xx.|.xx at (5,0)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (5,1)
  _0111111: a point with color blue at (2,4)
diff: 
delta: (2,5)=8  (2,6)=8  (4,6)=8  (7,0)=1 
! 5 wrong pixels (generated / expected)

TRAIN ae4f1146.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|xx. at (5,4)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (0,2)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (1,6)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (0,2)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (5,4)
  _0111111: a point with color blue at (7,6)
diff: 
delta: (1,6)=8  (3,6)=8  (3,8)=8  (5,2)=1  (6,0)=1 
   (338.1 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|xxx|.x. at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x.x|.xx|xx. at (5,4)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (4,0)
  _011: a rectangle with size (3,3) and color cyan and mask ..x|xx.|..x at (0,2)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (1,6)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (0,2)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (5,4)
  _0111111: a point with color blue at (7,6)
diff: 
delta: (1,6)=8  (3,6)=8  (3,8)=8  (5,2)=1  (6,0)=1 
! 3 wrong pixels (generated / expected)

TRAIN ae4f1146.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,9) and color cyan and mask xxx...x.x|xxx....x.|.xx...x.x|...x.x...|...xx....|....xx... at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (6,8)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (7,6)
  _0111: a rectangle with size (3,3) and color blue and mask Full at (6,6)
  _01111: a rectangle with size (3,3) and color blue and mask Full at (0,6)
  _011111: a rectangle with size (2,2) and color blue and mask Border at (3,4)
  _0111111: a point with color blue at (2,0)
diff: 
delta: (5,3)=1  (8,8)=8 
! 5 wrong pixels (generated / expected)

TEST ae4f1146.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.1 sec (14.1 sec/task)
bits-train-error = 590.7 bits (590.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-129] Checking task aedd82e4.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6083.8 = 6099.4
DL output with Mo: L = 15.6 + 6392.6 = 6408.2
DL input+output M: L = 31.2 + 12476.4 = 12507.7

# learning a model for train pairs
2.000	
1.534	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.945	OUT OBJECT at ^.layer_0: ^.layer_0
0.857	OUT DEF: ^.size=^.size
0.801	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
0.761	OUT DEF: ^.color=^.color
0.726	OUT DEF: ^.layer_01.shape.color=blue
0.700	OUT DEF: ^.layer_01.pos.i=2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
  _01: a point with color blue at (2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 3340.6 = 3389.5
DL output with Mo: L = 40.7 + 887.1 = 927.8
DL input+output M: L = 89.5 + 4227.7 = 4317.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask x..|x..|.xx at (0,0)
diff: 
delta:
   (63.3 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask x..|x..|.xx at (0,0)
  _01: a point with color blue at (2,0)
diff: 
delta:
   (3.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|.xx|x.. at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask x..|x..|.xx at (0,0)
diff: 
delta:
correct output grid

TRAIN aedd82e4.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta: (2,3)=2  (3,1)=2 
   (102.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
  _01: a point with color blue at (2,3)
diff: 
delta: (3,1)=1 
   (28.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask xxx|.x. at (0,0)
diff: 
delta: (2,3)=2  (3,1)=2 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (0,0)
diff: 
delta: (1,1)=2  (2,3)=2  (3,1)=2 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,1)
diff: 
delta: (0,0)=2  (0,2)=2  (2,3)=2  (3,1)=2 
! 5 wrong pixels (generated / expected)

TRAIN aedd82e4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,4) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask ..xx|..xx|..x.|xxxx|x... at (0,0)
diff: 
delta: (1,0)=0 
   (105.3 bits)
data: a background with size (5,4) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask ..xx|..xx|..x.|xxxx|x... at (0,0)
  _01: a point with color blue at (2,3)
diff: 
delta: (1,0)=0 
   (28.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask ..xx|..xx|..x.|xxxx|x... at (0,0)
diff: 
delta: (1,0)=0 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask xx|.x|xx at (0,0)
diff: 
delta: (2,3)=2  (4,1)=2  (4,2)=2  (4,3)=2 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta: (1,0)=0  (2,3)=2  (4,1)=2  (4,2)=2  (4,3)=2 
! 5 wrong pixels (generated / expected)

TRAIN aedd82e4.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.x.|x.x at (0,0)
diff: 
delta:
   (63.3 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.x.|x.x at (0,0)
  _01: a point with color blue at (2,1)
diff: 
delta: (1,2)=1 
   (27.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|x.x|.x. at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.x.|x.x at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta: (1,0)=2  (1,2)=2  (2,1)=2 
! 4 wrong pixels (generated / expected)

TRAIN aedd82e4.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xx.|.x.|..x at (0,0)
diff: 
delta: (0,3)=2  (3,0)=2  (4,2)=2  (4,3)=2 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta: (0,3)=2  (1,1)=2  (2,2)=2  (3,0)=2  (4,2)=2  (4,3)=2 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,4) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,2)
diff: 
delta: (0,0)=2  (0,1)=2  (0,3)=2  (1,1)=2  (2,2)=2  (3,0)=2 
! 7 wrong pixels (generated / expected)

TEST aedd82e4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 887.1 bits (887.1 bits/task)
acc-train-micro = 0.25 tasks (25.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.12
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-128] Checking task af902bf9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4811.5 = 4827.1
DL output with Mo: L = 15.6 + 11351.5 = 11367.1
DL input+output M: L = 31.2 + 16163.1 = 16194.3

# learning a model for train pairs
2.000	
1.533	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.480	OUT DEF: ^.size=^.size
1.431	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.365	OUT OBJECT at ^.layer_01: ^.layer_0
1.315	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.248	OUT OBJECT at ^.layer_011: ^.layer_01
1.197	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.130	OUT OBJECT at ^.layer_0111: ^.layer_011
1.075	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.006	OUT OBJECT at ^.layer_01111: ^.layer_0111
0.971	IN  DEF: ^.layer_0.shape.color=yellow
0.937	IN  DEF: ^.layer_01.shape.color=yellow
0.902	IN  DEF: ^.layer_011.shape.color=yellow
0.868	IN  DEF: ^.layer_0111.shape.color=yellow
0.852	IN  DEF: ^.color=black
0.837	OUT DEF: ^.layer_0.shape.color=red
0.825	OUT DEF: ^.layer_0.pos.j=^.layer_0111.pos.j + 1
0.813	OUT DEF: ^.layer_0.shape.size.j=span(^.layer_0.pos.i, ^.layer_0111.pos.i) - 2
0.805	OUT DEF: ^.layer_0.shape.mask=Full
0.796	OUT DEF: ^.layer_0.shape.size.i=span(^.layer_011.pos.j, ^.layer_0111.pos.j) - 2
0.789	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (span(^.layer_011.pos.j, ^.layer_0111.pos.j) - 2,span(^.layer_0.pos.i, ^.layer_0111.pos.i) - 2) and color red and mask Full at (?,^.layer_0111.pos.j + 1)
  _01: ^.layer_0
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color yellow at (?,?)
  _01: a point with color yellow at (?,?)
  _011: a point with color yellow at (?,?)
  _0111: a point with color yellow at (?,?)

DL input  with Mi: L = 104.4 + 2994.8 = 3099.2
DL output with Mo: L = 208.5 + 1465.9 = 1674.4
DL input+output M: L = 312.9 + 4460.7 = 4773.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,5)
  _0111: a point with color yellow at (5,3)
diff: 
delta:
   (65.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (4,4)
  _01: a point with color yellow at (3,3)
  _011: a point with color yellow at (3,5)
  _0111: a point with color yellow at (5,5)
  _01111: a point with color yellow at (5,3)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,3)
  _0111: a point with color yellow at (5,5)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (3,3)
  _01: a point with color yellow at (3,5)
  _011: a point with color yellow at (5,5)
  _0111: a point with color yellow at (5,3)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN af902bf9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,6)
  _0111: a point with color yellow at (6,1)
diff: 
delta:
   (65.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask Full at (2,2)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,6)
  _0111: a point with color yellow at (6,6)
  _01111: a point with color yellow at (6,1)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,1)
  _0111: a point with color yellow at (6,6)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,6)
  _011: a point with color yellow at (6,6)
  _0111: a point with color yellow at (6,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN af902bf9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (6,4)
diff: 
delta: (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (169.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask Full at (7,5)
  _01: a point with color yellow at (1,1)
  _011: a point with color yellow at (1,3)
  _0111: a point with color yellow at (3,1)
  _01111: a point with color yellow at (6,4)
diff: 
delta: (2,2)=2  (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
   (135.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (3,3)
diff: 
delta: (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 14 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,1)
  _0111: a point with color yellow at (6,4)
diff: 
delta: (3,3)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color yellow at (1,3)
  _011: a point with color yellow at (3,3)
  _0111: a point with color yellow at (3,1)
diff: 
delta: (6,4)=4  (6,9)=4  (9,4)=4  (9,9)=4 
! 14 wrong pixels (generated / expected)

TRAIN af902bf9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,5)
  _0111: a point with color yellow at (4,9)
diff: 
delta: (5,0)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,5)
  _0111: a point with color yellow at (5,0)
diff: 
delta: (4,9)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (0,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color yellow at (4,9)
  _0111: a point with color yellow at (4,5)
diff: 
delta: (5,0)=4  (5,3)=4  (8,0)=4  (8,3)=4 
! 14 wrong pixels (generated / expected)

TEST af902bf9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.6 sec (20.6 sec/task)
bits-train-error = 1465.9 bits (1465.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-127] Checking task b0c4d837.json: 6 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 35217.6 = 35233.2
DL output with Mo: L = 15.6 + 4349.9 = 4365.5
DL input+output M: L = 31.2 + 39567.4 = 39598.6

# learning a model for train pairs
2.000	
1.497	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.096	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.808	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.700	OUT DEF: ^.layer_0.pos='(0,0)
0.612	OUT DEF: ^.size.i=3
0.523	OUT DEF: ^.size.j=3
0.446	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.412	OUT DEF: ^.color=black
0.397	OUT DEF: ^.layer_0.shape.size.i=1
0.351	OUT DEF: ^.layer_0.shape.mask=Full
0.342	IN  DEF: ^.layer_0.shape.color=cyan
0.332	IN  DEF: ^.layer_01.shape.color=grey
0.327	IN  DEF: ^.layer_0.shape.mask=Full
0.322	IN  DEF: ^.color=black
0.322	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 85.0 + 6274.0 = 6359.0
DL output with Mo: L = 50.7 + 568.6 = 619.4
DL input+output M: L = 135.7 + 6842.6 = 6978.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|x..x|xxxx at (1,1)
diff: 
delta:
   (86.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|x..x|xxxx at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|x..x|xxxx at (1,1)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (4,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (5,1)
  _01: a rectangle with size (5,4) and color grey and mask x..x|x..x|x..x|x..x|xxxx at (1,1)
diff:   ^.layer_0.shape.color
delta: (4,2)=8  (4,3)=8 
! 3 wrong pixels (generated / expected)

TRAIN b0c4d837.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (1,2)
diff: 
delta:
   (118.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta: (1,2)=8 
   (29.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
  _01: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (1,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (1,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (5,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 4 wrong pixels (generated / expected)

TRAIN b0c4d837.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask Full at (5,2)
  _01: a rectangle with size (7,7) and color grey and mask x.....x|x.....x|x.....x|x.....x|x.....x|x.....x|xxxxxxx at (2,1)
diff: 
delta:
   (128.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,0)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask Full at (5,2)
  _01: a rectangle with size (7,7) and color grey and mask x.....x|x.....x|x.....x|x.....x|x.....x|x.....x|xxxxxxx at (2,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,7) and color grey and mask x.....x|x.....x|x.....x|x.....x|x.....x|x.....x|xxxxxxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask Full at (5,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 3 wrong pixels (generated / expected)

TRAIN b0c4d837.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask Full at (4,3)
  _01: a rectangle with size (7,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (2,2)
diff: 
delta:
   (113.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (5.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask Full at (4,3)
  _01: a rectangle with size (7,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (2,2)
diff: 
delta:
correct output grid

TRAIN b0c4d837.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color grey and mask x..x|x..x|x..x|xxxx at (1,1)
diff: 
delta:
   (82.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color grey and mask x..x|x..x|x..x|xxxx at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,6) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask x..x|x..x|x..x|xxxx at (1,1)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 1 wrong pixels (generated / expected)

TRAIN b0c4d837.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,5) and color grey and mask x...x|x...x|x...x|x...x|xxxxx at (2,1)
diff: 
delta:
   (97.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,0)
diff: 
delta:
   (5.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask Full at (4,2)
  _01: a rectangle with size (5,5) and color grey and mask x...x|x...x|x...x|x...x|xxxxx at (2,1)
diff: 
delta:
correct output grid

TRAIN b0c4d837.json/6: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (6,3) and color cyan and mask Full at (2,3)
  _01: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (1,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,5) and color grey and mask x...x|x...x|x...x|x...x|x...x|x...x|x...x|xxxxx at (1,2)
  _01: a rectangle with size (6,3) and color cyan and mask Full at (2,3)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.mask  ^.layer_0.shape.color
delta:
! 1 wrong pixels (generated / expected)

TEST b0c4d837.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.8 sec (1.8 sec/task)
bits-train-error = 568.6 bits (568.6 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-126] Checking task b190f7f5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8049.7 = 8065.3
DL output with Mo: L = 15.6 + 24280.8 = 24296.4
DL input+output M: L = 31.2 + 32330.5 = 32361.7

# learning a model for train pairs
2.000	
1.724	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.621	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.517	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.412	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.345	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.259	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.200	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.141	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 4487.4 = 4600.7
DL output with Mo: L = 208.5 + 12632.1 = 12840.6
DL input+output M: L = 321.8 + 17119.5 = 17441.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,1)=3 
   (125.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (1,6)
  _011: a rectangle with size (1,3) and color green and mask Full at (4,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _01111: a rectangle with size (3,1) and color yellow and mask Full at (0,7)
  _011111: a rectangle with size (3,1) and color green and mask Full at (3,4)
diff: 
delta:
   (200.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,1)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,4)
  _011: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,3)
diff: 
delta: (0,2)=8  (1,4)=2 
   (164.8 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (1,3)
  _01: a rectangle with size (2,2) and color blue and mask x.|xx at (4,0)
  _011: a rectangle with size (2,2) and color red and mask x.|xx at (4,3)
  _0111: a rectangle with size (2,2) and color yellow and mask x.|xx at (4,6)
  _01111: a rectangle with size (2,2) and color blue and mask x.|xx at (7,3)
  _011111: a rectangle with size (1,1) and color yellow and mask Full at (0,5)
diff: 
delta: (3,2)=1  (3,5)=2  (3,8)=4  (6,5)=1 
   (331.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (0,4)
  _011: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,3)
diff: 
delta: (0,2)=8  (1,4)=2 
! size mismatch, 10x10 instead of 9x9

TRAIN b190f7f5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ..x.|xxxx|..x.|..x. at (0,4)
  _01: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask x-cross at (0,0)
diff: 
delta:
   (158.2 bits)
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..x.|xxxx|..x.|..x. at (0,0)
  _01: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (0,12)
  _011: a rectangle with size (4,4) and color red and mask ..x.|xxxx|..x.|..x. at (4,4)
  _0111: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (4,8)
  _01111: a rectangle with size (4,4) and color yellow and mask ..x.|xxxx|..x.|..x. at (8,4)
  _011111: a rectangle with size (4,4) and color red and mask ..x.|xxxx|..x.|..x. at (8,8)
diff: 
delta: (12,2)=4  (12,14)=2  (13,0)=4  (13,1)=4  (13,2)=4  (13,3)=4  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (14,2)=4  (14,14)=2  (15,2)=4  (15,14)=2 
   (731.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask ..x.|xxxx|..x.|..x. at (0,4)
  _01: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (0,0)
  _011: a rectangle with size (4,4) and color yellow and mask x-cross at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 16x16

TRAIN b190f7f5.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,4) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask .xx.|xxxx|x..x|xxxx at (4,0)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
  _011: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,3)=1  (3,0)=3  (3,3)=3 
! size mismatch, 10x10 instead of 16x16

TEST b190f7f5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.3 sec (25.3 sec/task)
bits-train-error = 12632.1 bits (12632.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-125] Checking task b1948b0a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6522.7 = 6538.4
DL output with Mo: L = 15.6 + 6522.7 = 6538.4
DL input+output M: L = 31.2 + 13045.5 = 13076.7

# learning a model for train pairs
2.000	
1.363	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.475	OUT OBJECT at ^.layer_0: ^.layer_0
0.406	OUT DEF: ^.size=^.size
0.366	IN  DEF: ^.color=pink
0.326	OUT DEF: ^.color=red
0.300	IN  DEF: ^.layer_0.shape.color=orange

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color red and layers
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color pink and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)

DL input  with Mi: L = 56.8 + 1886.0 = 1942.8
DL output with Mo: L = 20.3 + 0.0 = 20.3
DL input+output M: L = 77.1 + 1886.0 = 1963.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,4) and color pink and layers
  _0: a rectangle with size (3,4) and color orange and mask ..x.|..xx|xx.x at (0,0)
diff: 
delta:
   (54.1 bits)
data: a background with size (3,4) and color red and layers
  _0: a rectangle with size (3,4) and color orange and mask ..x.|..xx|xx.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color pink and layers
  _0: a rectangle with size (3,4) and color orange and mask ..x.|..xx|xx.x at (0,0)
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,4) and color pink and layers
  _0: a rectangle with size (6,4) and color orange and mask xxx.|..x.|xx.x|x.xx|x.x.|...x at (0,0)
diff: 
delta:
   (71.4 bits)
data: a background with size (6,4) and color red and layers
  _0: a rectangle with size (6,4) and color orange and mask xxx.|..x.|xx.x|x.xx|x.x.|...x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,4) and color pink and layers
  _0: a rectangle with size (6,4) and color orange and mask xxx.|..x.|xx.x|x.xx|x.x.|...x at (0,0)
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (3,6) and color orange and mask xx....|.x.xxx|x.xx.x at (0,0)
diff: 
delta:
   (63.1 bits)
data: a background with size (3,6) and color red and layers
  _0: a rectangle with size (3,6) and color orange and mask xx....|.x.xxx|x.xx.x at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color pink and layers
  _0: a rectangle with size (3,6) and color orange and mask xx....|.x.xxx|x.xx.x at (0,0)
diff: 
delta:
correct output grid

TRAIN b1948b0a.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color orange and mask .xx.|.x.x|xxx.|x.x. at (0,0)
diff: 
delta:
correct output grid

TEST b1948b0a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-124] Checking task b230c067.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14084.6 = 14100.2
DL output with Mo: L = 15.6 + 14084.6 = 14100.2
DL input+output M: L = 31.2 + 28169.2 = 28200.5

# learning a model for train pairs
2.000	
1.728	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.455	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.183	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.910	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.680	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.450	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.421	OUT DEF: ^.size=^.size
0.401	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.380	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.361	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.342	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.323	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.306	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.290	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.274	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.257	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.250	IN  DEF: ^.layer_0.shape.color=cyan
0.242	OUT DEF: ^.layer_0.shape.color=blue
0.234	OUT DEF: ^.layer_01.shape.color=blue
0.226	OUT DEF: ^.layer_011.shape.color=red
0.218	IN  DEF: ^.layer_01.shape.color=cyan
0.210	IN  DEF: ^.layer_011.shape.color=cyan
0.207	IN  DEF: ^.color=black
0.203	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color blue and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color red and mask ^.layer_011.shape.mask at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 119.4 + 2669.4 = 2788.8
DL output with Mo: L = 76.6 + 0.0 = 76.6
DL input+output M: L = 196.0 + 2669.4 = 2865.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color cyan and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (1,7)
diff: 
delta:
   (111.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color blue and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color red and mask Border at (1,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask Border at (2,1)
  _01: a rectangle with size (3,4) and color cyan and mask Border at (7,5)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (1,7)
diff: 
delta:
correct output grid

TRAIN b230c067.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color cyan and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
   (155.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color blue and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color blue and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color red and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (2,1)
  _01: a rectangle with size (3,5) and color cyan and mask xxxx.|..xx.|..xxx at (6,3)
  _011: a rectangle with size (3,4) and color cyan and mask xxxx|..xx|..xx at (1,6)
diff: 
delta:
correct output grid

TRAIN b230c067.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xxx.|..x.|.x..|xxxx at (1,6)
  _01: a rectangle with size (4,4) and color cyan and mask xxx.|..x.|.x..|xxxx at (6,3)
  _011: a rectangle with size (4,3) and color cyan and mask xx.|.x.|x..|xxx at (1,1)
diff: 
delta:
correct output grid

TEST b230c067.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 13.0 sec (13.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-123] Checking task b27ca6d3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7734.6 = 7750.2
DL output with Mo: L = 15.6 + 15377.5 = 15393.2
DL input+output M: L = 31.2 + 23112.1 = 23143.4

# learning a model for train pairs
2.000	
1.676	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.583	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.529	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.476	OUT OBJECT at ^.layer_00: ^.layer_0
1.447	OUT DEF: ^.size=^.size
1.424	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.373	OUT OBJECT at ^.layer_011: ^.layer_01
1.339	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
1.316	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.263	OUT OBJECT at ^.layer_0111: ^.layer_0111
1.243	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_0111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 152.3 + 6528.1 = 6680.4
DL output with Mo: L = 114.3 + 5758.2 = 5872.5
DL input+output M: L = 266.6 + 12286.3 = 12552.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _0111: a point with color red at (8,17)
  _01111: a point with color red at (11,4)
diff: 
delta: (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
   (258.9 bits)
data: a background with size (15,18) and color black and layers
  _00: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _0: a rectangle with size (4,3) and color green and mask Full at (1,6)
  _010: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _01: a rectangle with size (1,1) and color red and mask Full at (11,4)
  _011: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _0111: a point with color red at (8,17)
diff: 
delta: (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
   (189.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _0111: a point with color red at (8,17)
  _01111: a point with color red at (11,4)
diff: 
delta: (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,18) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (2,7)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,13)
  _0111: a point with color red at (11,4)
  _01111: a point with color red at (8,17)
diff: 
delta: (11,8)=2  (12,0)=2  (14,0)=2  (14,17)=2 
! 20 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _0111: a point with color red at (1,0)
  _01111: a point with color red at (3,8)
diff: 
delta: (4,2)=2  (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
   (393.9 bits)
data: a background with size (15,16) and color black and layers
  _00: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _0: a rectangle with size (7,4) and color green and mask x.x.|x.x.|xxx.|..xx|..x.|..x.|..xx at (0,12)
  _010: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _01: a rectangle with size (2,4) and color green and mask Full (and Border) at (0,7)
  _011: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _0111: a point with color red at (1,0)
diff: 
delta: (3,8)=2  (4,2)=2  (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
   (386.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (0,8)
  _01: a rectangle with size (2,1) and color red and mask Full at (0,13)
  _011: a rectangle with size (2,1) and color red and mask Full at (4,15)
  _0111: a point with color red at (1,0)
  _01111: a point with color red at (3,8)
diff: 
delta: (4,2)=2  (4,10)=2  (4,13)=2  (6,10)=2  (7,1)=2  (12,1)=2  (13,14)=2  (14,2)=2  (14,10)=2 
! 35 wrong pixels (generated / expected)

TRAIN b27ca6d3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (13,6)
  _0111: a point with color red at (0,15)
  _01111: a point with color red at (1,4)
diff: 
delta: (3,13)=2  (3,15)=2  (5,12)=2  (8,14)=2  (9,6)=2  (9,14)=2  (10,0)=2  (10,7)=2  (11,9)=2  (11,11)=2  (12,2)=2  (12,4)=2  (12,9)=2  (13,1)=2  (13,11)=2  (13,13)=2  (14,3)=2  (14,15)=2  (15,7)=2  (16,8)=2 
! 75 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,16) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,8)
  _01: a rectangle with size (1,2) and color red and mask Full at (7,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (13,6)
  _0111: a point with color red at (1,4)
  _01111: a point with color red at (0,15)
diff: 
delta: (3,13)=2  (3,15)=2  (5,12)=2  (8,14)=2  (9,6)=2  (9,14)=2  (10,0)=2  (10,7)=2  (11,9)=2  (11,11)=2  (12,2)=2  (12,4)=2  (12,9)=2  (13,1)=2  (13,11)=2  (13,13)=2  (14,3)=2  (14,15)=2  (15,7)=2  (16,8)=2 
! 75 wrong pixels (generated / expected)

TEST b27ca6d3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.6 sec (26.6 sec/task)
bits-train-error = 5758.2 bits (5758.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-122] Checking task b2862040.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 42012.4 = 42028.0
DL output with Mo: L = 15.6 + 42012.4 = 42028.0
DL input+output M: L = 31.2 + 84024.8 = 84056.0

# learning a model for train pairs
2.000	
1.322	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.871	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.732	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.637	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 13475.2 = 13524.1
DL output with Mo: L = 145.1 + 13108.6 = 13253.7
DL input+output M: L = 194.0 + 26583.8 = 26777.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (2,1)
diff: 
delta: (2,7)=1  (3,7)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,7)=1  (6,7)=1 
   (270.6 bits)
data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (2,7)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (4,3) and color cyan and mask Border at (2,1)
  _0111: a rectangle with size (1,4) and color blue and mask Full at (4,6)
diff: 
delta:
   (157.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,11) and color brown and layers
  _0: a rectangle with size (4,3) and color blue and mask Border at (2,1)
diff: 
delta: (2,7)=1  (3,7)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,7)=1  (6,7)=1 
! size mismatch, 10x10 instead of 9x11

TRAIN b2862040.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color blue and layers
  _0: a rectangle with size (12,11) and color brown and mask xxxxxxxxxxx|x.....xx.xx|x.....xx.x.|x.....xx...|xxxxxxxxxxx|xxxxxxxxxxx|xxx.xxxxxxx|xx.....xxxx|xxx...xxxxx|xxx...xx...|xxxxxxxx...|..xxxxxx... at (0,0)
diff: 
delta: (2,2)=9# (2,3)=9# (2,4)=9# (8,4)=9# (10,9)=9#
   (328.5 bits)
data: a background with size (12,11) and color brown and layers
  _0: a rectangle with size (3,5) and color cyan and mask Border at (1,1)
  _01: a rectangle with size (4,5) and color cyan and mask .x...|xxxxx|.x.x.|.xxx. at (6,2)
  _011: a rectangle with size (3,3) and color cyan and mask Border at (9,8)
  _0111: a rectangle with size (3,3) and color blue and mask x..|x.x|xxx at (1,8)
diff: 
delta: (11,0)=1  (11,1)=1 
   (260.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color blue and layers
  _0: a rectangle with size (12,11) and color brown and mask xxxxxxxxxxx|x.....xx.xx|x.....xx.x.|x.....xx...|xxxxxxxxxxx|xxxxxxxxxxx|xxx.xxxxxxx|xx.....xxxx|xxx...xxxxx|xxx...xx...|xxxxxxxx...|..xxxxxx... at (0,0)
diff: 
delta: (2,2)=9# (2,3)=9# (2,4)=9# (8,4)=9# (10,9)=9#
! size mismatch, 10x10 instead of 12x11

TRAIN b2862040.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color blue and layers
  _0: a rectangle with size (12,13) and color brown and mask xxxxx.xxxxxxx|xxxxxxxx.xxxx|xx.xxxx....xx|x....xxx.xxxx|x....xxx.xxxx|x....xxx...xx|xxxx.xxxxxxxx|xxxx.xxxxxxxx|x.xxxxx...xxx|...xxxxxx.xxx|..xxxx.x..xxx|..xxxx...xxxx at (0,0)
diff: 
delta: (4,2)=9# (4,3)=9# (10,0)=9#
   (291.5 bits)
data: a background with size (12,13) and color brown and layers
  _0: a rectangle with size (6,4) and color cyan and mask .x..|xxxx|x..x|xxxx|...x|...x at (2,1)
  _01: a rectangle with size (4,4) and color blue and mask .xxx|...x|x.xx|xxx. at (8,6)
  _011: a rectangle with size (5,4) and color blue and mask .x..|xxxx|.x..|.x..|.xxx at (1,7)
  _0111: a rectangle with size (4,3) and color blue and mask .x.|xxx|.x.|xx. at (8,0)
diff: 
delta: (0,5)=1 
   (284.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color blue and layers
  _0: a rectangle with size (12,13) and color brown and mask xxxxx.xxxxxxx|xxxxxxxx.xxxx|xx.xxxx....xx|x....xxx.xxxx|x....xxx.xxxx|x....xxx...xx|xxxx.xxxxxxxx|xxxx.xxxxxxxx|x.xxxxx...xxx|...xxxxxx.xxx|..xxxx.x..xxx|..xxxx...xxxx at (0,0)
diff: 
delta: (4,2)=9# (4,3)=9# (10,0)=9#
! size mismatch, 10x10 instead of 12x13

TRAIN b2862040.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (14,15) and color blue and layers
  _0: a rectangle with size (14,15) and color brown and mask xxxxxxxxxxxxxxx|x......xxxx....|xx.....xxxx.xx.|xx.....xxx...x.|xxxx...xxxxxxx.|xxxx.xxx...xxxx|xxxxxxxx....xxx|xxxxxxxx...xxxx|....xxxxxxxxxxx|....xxx.x.xxxxx|....xxx.....xxx|.xxxxxxxx.xxxxx|xxxxx.xxxxxxxxx|xxxx..xxxxxx..x at (0,0)
diff: 
delta: (2,3)=9# (2,4)=9# (2,5)=9# (3,5)=9# (6,9)=9# (9,1)=9# (9,2)=9#
   (456.8 bits)
data: a background with size (14,15) and color brown and layers
  _0: a rectangle with size (5,6) and color cyan and mask xxxxxx|.x...x|.xxx.x|...xxx|...x.. at (1,1)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|x..x|xxxx|x... at (8,0)
  _011: a rectangle with size (4,5) and color blue and mask .xxxx|.x..x|xxx.x|....x at (1,10)
  _0111: a rectangle with size (3,4) and color cyan and mask xxx.|x.xx|xxx. at (5,8)
diff: 
delta: (9,7)=1  (9,9)=1  (10,7)=1  (10,8)=1  (10,9)=1  (10,10)=1  (10,11)=1  (11,9)=1  (12,5)=1  (13,4)=1  (13,5)=1  (13,12)=1  (13,13)=1 
   (608.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color blue and layers
  _0: a rectangle with size (14,15) and color brown and mask xxxxxxxxxxxxxxx|x......xxxx....|xx.....xxxx.xx.|xx.....xxx...x.|xxxx...xxxxxxx.|xxxx.xxx...xxxx|xxxxxxxx....xxx|xxxxxxxx...xxxx|....xxxxxxxxxxx|....xxx.x.xxxxx|....xxx.....xxx|.xxxxxxxx.xxxxx|xxxxx.xxxxxxxxx|xxxx..xxxxxx..x at (0,0)
diff: 
delta: (2,3)=9# (2,4)=9# (2,5)=9# (3,5)=9# (6,9)=9# (9,1)=9# (9,2)=9#
! size mismatch, 10x10 instead of 14x15

TRAIN b2862040.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color blue and layers
  _0: a rectangle with size (16,15) and color brown and mask ..xxxxxxxxxxxxx|xxxxxxxxxxx.xxx|xxx.....xxx.xxx|xxxx....xxx.xxx|xxxx....xxx.xxx|xxxx....xxx.xx.|xxxxxxx.xxx....|....xxx.xxx.xx.|.xx.xxxxxxxxxx.|.xx.xxxxxxxxx..|..xxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxx......xxx..x|xxx......xxxx.x|xxx......xxxx.x|xxx.......xxx.x at (0,0)
diff: 
delta: (3,5)=9# (3,6)=9# (4,5)=9# (4,6)=9# (13,4)=9# (13,5)=9# (13,6)=9# (13,7)=9# (14,4)=9# (14,5)=9# (14,6)=9# (14,7)=9#
! size mismatch, 10x10 instead of 16x15

TEST b2862040.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 13108.6 bits (13108.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-121] Checking task b527c5c6.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 82325.2 = 82340.8
DL output with Mo: L = 15.6 + 137981.1 = 137996.7
DL input+output M: L = 31.2 + 220306.3 = 220337.5

# learning a model for train pairs
2.000	
1.347	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.425	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.251	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.199	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.183	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.176	OUT DEF: ^.size=^.size
0.172	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 101.0 + 5951.0 = 6052.0
DL output with Mo: L = 139.2 + 13428.4 = 13567.6
DL input+output M: L = 240.1 + 19379.4 = 19619.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (6,2) and color green and mask Full (and Border) at (2,3)
  _01: a rectangle with size (2,4) and color green and mask Full (and Border) at (4,6)
diff: 
delta: (5,8)=2 
   (133.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,5) and color green and mask ...xx|xxxxx|....x|xxxxx|...xx|...xx at (2,0)
  _01: a rectangle with size (6,4) and color green and mask xxxx|xx.x|.x.x|.x.x|.x.x|.x.x at (4,6)
  _011: a rectangle with size (5,1) and color red and mask Full at (5,8)
  _0111: a rectangle with size (1,4) and color red and mask Full at (4,0)
diff: 
delta:
   (197.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a point with color red at (4,3)
  _0: a rectangle with size (6,2) and color green and mask Full (and Border) at (2,3)
  _01: a rectangle with size (2,4) and color green and mask Full (and Border) at (4,6)
diff: 
delta: (5,8)=2 
! 45 wrong pixels (generated / expected)

TRAIN b527c5c6.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,14)
  _0: a rectangle with size (2,18) and color green and mask Full (and Border) at (4,1)
  _01: a rectangle with size (10,3) and color green and mask Full at (10,7)
diff: 
delta: (15,9)=2 
   (152.2 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (10,13) and color green and mask xxx..........|xxx..........|xxx..........|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xx...........|xxxxxxxxxxxxx|xxxxxxxxxxxxx|xxx..........|xxx.......... at (10,7)
  _01: a rectangle with size (6,18) and color green and mask ............x.x...|............x.x...|............x.x...|............x.x...|xxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxx at (0,1)
  _011: a rectangle with size (1,11) and color red and mask Full at (15,9)
  _0111: a rectangle with size (5,1) and color red and mask Full at (0,14)
diff: 
delta:
   (400.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,14)
  _0: a rectangle with size (2,18) and color green and mask Full (and Border) at (4,1)
  _01: a rectangle with size (10,3) and color green and mask Full at (10,7)
diff: 
delta: (15,9)=2 
! 132 wrong pixels (generated / expected)

TRAIN b527c5c6.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (3,5)
  _0: a rectangle with size (11,5) and color green and mask Full at (9,10)
  _01: a rectangle with size (3,14) and color green and mask Full at (3,0)
diff: 
delta: (14,10)=2 
   (154.4 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (11,15) and color green and mask ..........xxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|...........xxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|xxxxxxxxxxxxxxx|..........xxxxx at (9,0)
  _01: a rectangle with size (6,14) and color green and mask ...xx.xx......|...xx.xx......|...xx.xx......|xxxxx.xxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (0,0)
  _011: a rectangle with size (1,11) and color red and mask Full at (14,0)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,5)
diff: 
delta:
   (360.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (3,5)
  _0: a rectangle with size (11,5) and color green and mask Full at (9,10)
  _01: a rectangle with size (3,14) and color green and mask Full at (3,0)
diff: 
delta: (14,10)=2 
! 206 wrong pixels (generated / expected)

TRAIN b527c5c6.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,4)
  _0: a rectangle with size (5,15) and color green and mask Full at (0,0)
  _01: a rectangle with size (11,4) and color green and mask Full at (6,12)
diff: 
delta: (12,15)=2 
   (155.4 bits)
data: a background with size (20,20) and color green and layers
  _0: a rectangle with size (4,4) and color black and mask Full at (16,16)
  _01: a rectangle with size (20,11) and color black and mask ......xxxxx|......xxxxx|......xxxxx|......xxxxx|......xxxxx|xxxxxxxxxxx|xxx....xxxx|xxx....xxxx|xxx....xxxx|xxx........|xxx........|xxx........|xxx........|xxx........|xxx........|xxx........|xxx....xxxx|xxxxxxxxxxx|xxxxxxxxxxx|xxxxxxxxxxx at (0,9)
  _011: a rectangle with size (16,1) and color red and mask Full at (4,4)
  _0111: a rectangle with size (1,5) and color red and mask Full at (12,15)
diff: 
delta:
   (384.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (4,4)
  _0: a rectangle with size (5,15) and color green and mask Full at (0,0)
  _01: a rectangle with size (11,4) and color green and mask Full at (6,12)
diff: 
delta: (12,15)=2 
! 282 wrong pixels (generated / expected)

TRAIN b527c5c6.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _00: a point with color red at (5,4)
  _0: a rectangle with size (6,13) and color green and mask Full at (14,7)
  _01: a rectangle with size (11,3) and color green and mask Full at (0,4)
diff: 
delta: (14,13)=2 
! 289 wrong pixels (generated / expected)

TEST b527c5c6.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.9 sec (26.9 sec/task)
bits-train-error = 13428.4 bits (13428.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-120] Checking task b548a754.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14601.6 = 14617.2
DL output with Mo: L = 15.6 + 30630.6 = 30646.2
DL input+output M: L = 31.2 + 45232.2 = 45263.4

# learning a model for train pairs
2.000	
1.411	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.885	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.508	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.343	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.323	OUT DEF: ^.size=^.size
0.304	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.292	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.280	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.264	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size - translationOnto(^.layer_011, ^.layer_0)
0.251	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size - translationOnto(^.layer_011, ^.layer_0)
0.240	IN  DEF: ^.layer_011.shape.color=cyan
0.233	IN  DEF: ^.layer_0.shape.mask=Full
0.226	IN  DEF: ^.layer_01.shape.mask=Full
0.220	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.215	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.210	IN  DEF: ^.color=black
0.207	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.203	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.201	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size - translationOnto(^.layer_011, ^.layer_0) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size - translationOnto(^.layer_011, ^.layer_0) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color cyan at (?,?)

DL input  with Mi: L = 102.4 + 2778.7 = 2881.1
DL output with Mo: L = 116.2 + 0.0 = 116.2
DL input+output M: L = 218.7 + 2778.7 = 2997.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _011: a point with color cyan at (8,3)
diff: 
delta:
   (91.7 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (6,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (8,4) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (2,2)
  _01: a rectangle with size (4,4) and color red and mask Full at (1,1)
  _011: a point with color cyan at (8,3)
diff: 
delta:
correct output grid

TRAIN b548a754.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,5) and color green and mask Full at (1,1)
  _011: a point with color cyan at (2,10)
diff: 
delta:
   (93.6 bits)
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,8) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,10) and color green and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (4,5) and color green and mask Full at (1,1)
  _011: a point with color cyan at (2,10)
diff: 
delta:
correct output grid

TRAIN b548a754.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,3) and color blue and mask Full at (1,2)
  _011: a point with color cyan at (5,10)
diff: 
delta:
   (92.6 bits)
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,7) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,9) and color blue and mask Full at (1,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,12) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (2,3)
  _01: a rectangle with size (5,3) and color blue and mask Full at (1,2)
  _011: a point with color cyan at (5,10)
diff: 
delta:
correct output grid

TRAIN b548a754.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
the data does not represent a valid grid specification:
a rectangle with size (-4,5) and color pink and mask Full at (9,3)

TEST b548a754.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 3.7 sec (3.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-119] Checking task b60334d2.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2243.6 = 2259.2
DL output with Mo: L = 15.6 + 14401.7 = 14417.3
DL input+output M: L = 31.2 + 16645.3 = 16676.5

# learning a model for train pairs
2.000	
1.917	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.834	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.764	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.696	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.626	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.550	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.497	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.448	IN  DEF: ^.layer_0.shape.color=grey
1.399	IN  DEF: ^.layer_01.shape.color=grey
1.350	IN  DEF: ^.layer_011.shape.color=grey
1.318	OUT DEF: ^.layer_0111.pos=^.layer_011.pos - 1
1.291	OUT DEF: ^.size=^.size
1.268	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.244	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at ^.layer_011.pos - 1
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color grey at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)

DL input  with Mi: L = 83.4 + 1360.6 = 1444.0
DL output with Mo: L = 209.8 + 8510.7 = 8720.5
DL input+output M: L = 293.2 + 9871.3 = 10164.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (2,3)
  _01: a point with color grey at (5,6)
  _011: a point with color grey at (7,2)
diff: 
delta:
   (54.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (1,2)
  _01: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (4,5)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (6,1)
  _0111: a rectangle with size (1,7) and color grey and mask Full at (6,1)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (1,2)
  _011111: a rectangle with size (1,3) and color grey and mask Full at (3,2)
diff: 
delta: (4,5)=5# (4,7)=5# (6,4)=0  (8,1)=5# (8,3)=5#
   (323.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (2,3)
  _01: a point with color grey at (5,6)
  _011: a point with color grey at (7,2)
diff: 
delta:
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (2,3)
  _01: a point with color grey at (7,2)
  _011: a point with color grey at (5,6)
diff: 
delta:
! 29 wrong pixels (generated / expected)

TRAIN b60334d2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,2)
  _01: a point with color grey at (5,2)
  _011: a point with color grey at (1,7)
diff: 
delta: (7,6)=5#
   (81.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (4,1)
  _01: a rectangle with size (1,7) and color grey and mask Full at (6,1)
  _011: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (0,1)
  _0111: a rectangle with size (3,3) and color blue and mask Odd Checkboard at (0,6)
  _01111: a rectangle with size (1,8) and color grey and mask Full at (0,1)
  _011111: a rectangle with size (1,8) and color grey and mask Full at (2,1)
diff: 
delta: (0,4)=0  (0,5)=0  (2,4)=0  (2,5)=0  (4,1)=5# (4,3)=5# (6,4)=0  (6,6)=1  (7,5)=1  (7,7)=1  (8,5)=5# (8,6)=1  (8,7)=5#
   (528.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,2)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (5,2)
diff: 
delta: (7,6)=5#
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,2)
  _01: a point with color grey at (1,7)
  _011: a point with color grey at (7,6)
diff: 
delta: (5,2)=5#
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,2)
  _01: a point with color grey at (5,2)
  _011: a point with color grey at (1,7)
diff: 
delta: (7,6)=5#
! 35 wrong pixels (generated / expected)

TRAIN b60334d2.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (3,4)
  _011: a point with color grey at (5,7)
diff: 
delta: (7,2)=5#
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (3,4)
  _011: a point with color grey at (7,2)
diff: 
delta: (5,7)=5#
! 34 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (5,7)
  _011: a point with color grey at (3,4)
diff: 
delta: (7,2)=5#
! 34 wrong pixels (generated / expected)

TEST b60334d2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.4 sec (26.4 sec/task)
bits-train-error = 8510.7 bits (8510.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-118] Checking task b6afb2da.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21144.0 = 21159.6
DL output with Mo: L = 15.6 + 23075.2 = 23090.8
DL input+output M: L = 31.2 + 44219.2 = 44250.4

# learning a model for train pairs
2.000	
1.304	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.006	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.795	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.699	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.536	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.417	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.399	OUT DEF: ^.size=^.size
0.383	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size
0.370	OUT DEF: ^.layer_0111.shape.size=^.layer_01.shape.size
0.359	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size - 2
0.350	OUT DEF: ^.layer_01.pos=^.layer_0.pos
0.340	OUT DEF: ^.layer_0111.pos=^.layer_01.pos
0.330	OUT DEF: ^.layer_0.pos=^.layer_0.pos + 1
0.321	OUT DEF: ^.layer_011.shape.size=^.layer_01.shape.size - 2
0.311	OUT DEF: ^.layer_011.pos=^.layer_01.pos + 1
0.305	OUT OBJECT at ^.layer_01110: a point with color ? at (?,?)
0.295	OUT DEF: ^.layer_01110.pos=^.layer_01.pos
0.289	OUT OBJECT at ^.layer_011101: a point with color ? at (?,?)
0.282	OUT OBJECT at ^.layer_010: a point with color ? at (?,?)
0.272	OUT DEF: ^.layer_010.pos=^.layer_0.pos
0.267	IN  DEF: ^.layer_0.shape.color=grey
0.262	IN  DEF: ^.layer_01.shape.color=grey
0.257	OUT DEF: ^.layer_0.shape.color=red
0.252	OUT DEF: ^.layer_010.shape.color=blue
0.248	OUT DEF: ^.layer_01.shape.color=yellow
0.243	OUT DEF: ^.layer_011.shape.color=red
0.238	OUT DEF: ^.layer_01110.shape.color=blue
0.233	OUT DEF: ^.layer_011101.shape.color=blue
0.227	OUT OBJECT at ^.layer_0111011: a point with color ? at (?,?)
0.222	OUT DEF: ^.layer_0111011.shape.color=blue
0.215	OUT OBJECT at ^.layer_0111010: a point with color ? at (?,?)
0.210	OUT OBJECT at ^.layer_0101: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size - 2 and color red and mask ? at ^.layer_0.pos + 1
  _010: a point with color blue at ^.layer_0.pos
  _0101: a point with color ? at (?,?)
  _01: a rectangle with size ^.layer_0.shape.size and color yellow and mask ? at ^.layer_0.pos
  _011: a rectangle with size ^.layer_01.shape.size - 2 and color red and mask ? at ^.layer_01.pos + 1
  _01110: a point with color blue at ^.layer_01.pos
  _0111010: a point with color ? at (?,?)
  _011101: a point with color blue at (?,?)
  _0111011: a point with color blue at (?,?)
  _0111: a rectangle with size ^.layer_01.shape.size and color ? and mask ? at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 85.9 + 1654.2 = 1740.1
DL output with Mo: L = 301.4 + 2659.1 = 2960.4
DL input+output M: L = 387.2 + 4313.3 = 4700.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,1)
  _01: a rectangle with size (5,4) and color grey and mask Full at (5,6)
diff: 
delta:
   (81.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,2)
  _010: a point with color blue at (2,1)
  _0101: a point with color blue at (2,4)
  _01: a rectangle with size (4,4) and color yellow and mask +-cross at (2,1)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (6,7)
  _01110: a point with color blue at (5,6)
  _0111010: a point with color blue at (5,1)
  _011101: a point with color blue at (5,4)
  _0111011: a point with color blue at (5,9)
  _0111: a rectangle with size (5,4) and color yellow and mask Full at (5,6)
diff: 
delta: (9,6)=1  (9,9)=1 
   (135.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask Full at (5,6)
  _01: a rectangle with size (4,4) and color grey and mask Full at (2,1)
diff: 
delta:
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,1)
  _01: a rectangle with size (5,4) and color grey and mask Full at (5,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)

TRAIN b6afb2da.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Full at (6,4)
diff: 
delta:
   (83.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask Full at (1,1)
  _010: a point with color blue at (0,0)
  _0101: a point with color blue at (0,5)
  _01: a rectangle with size (5,6) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (2,4) and color red and mask Full (and Border) at (7,5)
  _01110: a point with color blue at (6,4)
  _0111010: a point with color blue at (6,9)
  _011101: a point with color blue at (9,4)
  _0111011: a point with color blue at (9,9)
  _0111: a rectangle with size (4,6) and color yellow and mask Full at (6,4)
diff: 
delta: (4,0)=1  (4,5)=1 
   (130.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (0,0)
  _01: a rectangle with size (4,6) and color grey and mask Full at (6,4)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,6) and color grey and mask Full at (6,4)
  _01: a rectangle with size (5,6) and color grey and mask Full at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color grey and layers
  _0: a rectangle with size (6,4) and color black and mask Full at (0,6)
  _01: a rectangle with size (5,4) and color black and mask Full at (5,0)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta: (5,4)=0  (5,5)=0 
! 98 wrong pixels (generated / expected)

TRAIN b6afb2da.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color grey and mask Full at (0,1)
  _01: a rectangle with size (3,6) and color grey and mask Full at (7,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color grey and mask Full at (7,4)
  _01: a rectangle with size (6,4) and color grey and mask Full at (0,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST b6afb2da.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 2659.1 bits (2659.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-117] Checking task b7249182.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2329.1 = 2344.7
DL output with Mo: L = 15.6 + 17793.3 = 17808.9
DL input+output M: L = 31.2 + 20122.4 = 20153.6

# learning a model for train pairs
2.000	
1.643	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.277	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.169	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.050	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.015	OUT DEF: ^.size=^.size
0.983	IN  DEF: ^.color=black
0.973	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.964	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.959	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 1682.3 = 1738.1
DL output with Mo: L = 73.7 + 3811.6 = 3885.3
DL input+output M: L = 129.5 + 5493.9 = 5623.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color cyan at (10,4)
diff: 
delta:
   (55.7 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask ..x..|..x..|..x..|xxxxx|x...x at (1,2)
  _01: a rectangle with size (5,5) and color cyan and mask x...x|xxxxx|..x..|..x..|..x.. at (6,2)
diff: 
delta:
   (117.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a point with color red at (1,4)
  _01: a point with color cyan at (10,4)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (10,4)
  _01: a point with color red at (1,4)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN b7249182.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,13) and color black and layers
  _0: a point with color green at (6,1)
  _01: a point with color blue at (6,12)
diff: 
delta:
   (55.3 bits)
data: a background with size (10,13) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask ....xx|....x.|xxxxx.|....x.|....xx at (4,1)
  _01: a rectangle with size (5,6) and color blue and mask xx....|.x....|.xxxxx|.x....|xx.... at (4,7)
diff: 
delta:
   (126.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,13) and color black and layers
  _0: a point with color green at (6,1)
  _01: a point with color blue at (6,12)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,13) and color black and layers
  _0: a point with color blue at (6,12)
  _01: a point with color green at (6,1)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN b7249182.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,18) and color black and layers
  _0: a point with color grey at (5,3)
  _01: a point with color cyan at (5,16)
diff: 
delta:
   (57.2 bits)
data: a background with size (10,18) and color black and layers
  _0: a rectangle with size (5,7) and color grey and mask .....xx|.....x.|xxxxxx.|.....x.|.....xx at (3,3)
  _01: a rectangle with size (5,7) and color cyan and mask xx.....|.x.....|.xxxxxx|.x.....|xx..... at (3,10)
diff: 
delta:
   (136.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,18) and color black and layers
  _0: a point with color grey at (5,3)
  _01: a point with color cyan at (5,16)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,18) and color black and layers
  _0: a point with color cyan at (5,16)
  _01: a point with color grey at (5,3)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN b7249182.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  _0: a point with color orange at (1,3)
  _01: a point with color pink at (16,3)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,9) and color black and layers
  _0: a point with color pink at (16,3)
  _01: a point with color orange at (1,3)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TEST b7249182.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 3811.6 bits (3811.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-116] Checking task b775ac94.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 15167.3 = 15182.9
DL output with Mo: L = 15.6 + 37303.5 = 37319.1
DL input+output M: L = 31.2 + 52470.8 = 52502.0

# learning a model for train pairs
2.000	
1.695	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.528	OUT OBJECT at ^.layer_0: ^.layer_0
1.405	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.282	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.163	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.048	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.008	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.970	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.931	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 8097.3 = 8210.6
DL output with Mo: L = 180.3 + 14366.7 = 14547.0
DL input+output M: L = 293.6 + 22464.0 = 22757.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
  _01: a rectangle with size (3,3) and color orange and mask .xx|.x.|x.x at (10,14)
  _011: a rectangle with size (3,3) and color green and mask x..|.xx|.x. at (22,14)
diff: 
delta: (9,16)=2  (9,17)=1  (10,17)=4  (11,6)=3  (11,7)=4  (12,7)=2  (21,13)=8  (22,13)=2 
   (412.8 bits)
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
  _01: a rectangle with size (4,4) and color green and mask ..x.|...x|xx.x|.xxx at (8,3)
  _011: a rectangle with size (4,4) and color yellow and mask .x..|x...|x.xx|xxx. at (8,7)
  _0111: a rectangle with size (4,4) and color red and mask xxx.|x.xx|x...|.x.. at (12,7)
  _01111: a rectangle with size (3,3) and color red and mask x.x|.x.|.xx at (7,14)
  _011111: a rectangle with size (3,3) and color blue and mask x.x|.x.|xx. at (7,17)
diff: 
delta: (10,15)=7# (10,16)=7# (10,17)=4  (10,18)=4  (11,15)=7# (11,18)=4  (12,14)=7# (12,16)=7# (12,17)=4  (12,19)=4  (19,12)=8  (20,11)=8  (20,12)=8  (21,13)=8  (22,13)=2  (22,14)=3  (23,11)=2  (23,12)=2  (23,15)=3  (23,16)=3  (24,12)=2  (24,15)=3 
   (922.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|xx.x|...x|..x. at (12,3)
  _01: a rectangle with size (3,3) and color orange and mask .xx|.x.|x.x at (10,14)
  _011: a rectangle with size (3,3) and color green and mask x..|.xx|.x. at (22,14)
diff: 
delta: (9,16)=2  (9,17)=1  (10,17)=4  (11,6)=3  (11,7)=4  (12,7)=2  (21,13)=8  (22,13)=2 
! size mismatch, 10x10 instead of 30x30

TRAIN b775ac94.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (8,8)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (9,7)
diff: 
delta: (9,8)=3 
   (167.4 bits)
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
  _01: a rectangle with size (3,5) and color cyan and mask .x.x.|xxxxx|xx... at (6,8)
  _011: a rectangle with size (3,5) and color yellow and mask ...xx|xxxxx|.x.x. at (9,3)
  _0111: a rectangle with size (3,1) and color green and mask Full at (9,9)
  _01111: a rectangle with size (2,1) and color green and mask Full at (10,11)
  _011111: a rectangle with size (3,5) and color green and mask xx...|xxxxx|.x.x. at (9,8)
diff: 
delta:
   (252.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (3,5) and color red and mask .x.x.|xxxxx|...xx at (6,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (8,8)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (9,7)
diff: 
delta: (9,8)=3 
! size mismatch, 10x10 instead of 20x20

TRAIN b775ac94.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _01: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,10)
diff: 
delta: (4,10)=6  (7,5)=1  (8,5)=4 
   (229.5 bits)
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxxx|x... at (5,5)
  _011: a rectangle with size (3,4) and color yellow and mask x...|xxxx|.x.. at (8,5)
  _0111: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
  _01111: a rectangle with size (3,3) and color yellow and mask .xx|.xx|x.. at (1,10)
  _011111: a rectangle with size (3,3) and color pink and mask x..|.xx|.xx at (4,10)
diff: 
delta:
   (261.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _01: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,10)
diff: 
delta: (4,10)=6  (7,5)=1  (8,5)=4 
! size mismatch, 10x10 instead of 14x14
>> Trial 2
data: a background with size (14,14) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask xx.|xx.|..x at (1,7)
  _01: a rectangle with size (3,4) and color red and mask ...x|xxxx|..x. at (8,1)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (3,10)
diff: 
delta: (4,10)=6  (7,5)=1  (8,5)=4 
! size mismatch, 10x10 instead of 14x14

TRAIN b775ac94.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask .x..|xxx.|.x.x|..xx at (3,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xxx|x.. at (17,11)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (7,15)
diff: 
delta: (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,18)=8  (16,13)=1  (17,14)=4 
! size mismatch, 10x10 instead of 24x24
>> Trial 2
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask ..x|xxx|x.. at (17,11)
  _01: a rectangle with size (4,4) and color cyan and mask .x..|xxx.|.x.x|..xx at (3,4)
  _011: a rectangle with size (2,3) and color blue and mask xxx|.x. at (7,15)
diff: 
delta: (6,8)=2  (6,17)=3  (6,18)=2  (7,7)=4  (7,8)=3  (7,18)=8  (16,13)=1  (17,14)=4 
! size mismatch, 10x10 instead of 24x24

TEST b775ac94.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.9 sec (27.9 sec/task)
bits-train-error = 14366.7 bits (14366.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-115] Checking task b782dc8a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 58185.6 = 58201.2
DL output with Mo: L = 15.6 + 58250.7 = 58266.3
DL input+output M: L = 31.2 + 116436.2 = 116467.4

# learning a model for train pairs
2.000	
1.710	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.527	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.360	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.238	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.139	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.069	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.999	OUT OBJECT at ^.layer_011: ^.layer_01
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 20692.9 = 20838.1
DL output with Mo: L = 88.2 + 37266.6 = 37354.8
DL input+output M: L = 233.3 + 57959.5 = 58192.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,24) and color cyan and layers
  _0: a rectangle with size (11,16) and color black and mask .xxxxx..........|xx...xxxxxx.....|.....x....x.....|.....x....xxx...|.....x....x.....|...xxxx...x.....|..........x.....|..........xxxxxx|..........x.....|........xxx.....|........x....... at (0,0)
  _01: a rectangle with size (8,8) and color black and mask ..x.....|xxx...xx|x......x|x......x|x......x|xxxxxxxx|.x...x..|.x...x.. at (2,1)
  _011: a rectangle with size (11,5) and color black and mask ....x|....x|....x|....x|....x|xxxxx|....x|....x|....x|....x|....x at (0,19)
  _0111: a rectangle with size (6,6) and color black and mask x.....|x....x|x....x|xxxxxx|.x....|.x.... at (0,16)
diff: 
delta: (0,12)=0  (0,19)=0  (1,12)=0  (1,13)=0  (1,14)=0  (1,18)=0  (1,19)=0  (2,14)=0  (3,14)=0  (4,14)=0  (5,12)=0  (5,13)=0  (5,14)=0  (5,15)=0  (6,17)=3  (7,16)=3  (7,17)=2  (7,18)=3  (7,19)=0  (7,20)=0  (7,21)=0  (8,17)=3  (8,21)=0  (9,0)=0  (9,4)=0  (9,12)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,17)=0  (9,19)=0  (9,21)=0  (10,0)=0  (10,4)=0  (10,12)=0  (10,15)=0  (10,19)=0 
   (1467.7 bits)
data: a background with size (11,24) and color cyan and layers
  _0: a rectangle with size (11,5) and color black and mask ....x|....x|....x|....x|....x|xxxxx|....x|....x|....x|....x|....x at (0,19)
  _01: a rectangle with size (6,4) and color black and mask x...|xxx.|..x.|..x.|..x.|xxxx at (0,12)
  _011: a rectangle with size (8,8) and color black and mask ..x.....|xxx...xx|x......x|x......x|x......x|xxxxxxxx|.x...x..|.x...x.. at (2,1)
diff: 
delta: (0,1)=3  (0,2)=2  (0,3)=3  (0,4)=2  (0,5)=3  (0,16)=2  (0,19)=0  (1,0)=3  (1,1)=2  (1,5)=2  (1,6)=3  (1,7)=2  (1,8)=3  (1,9)=2  (1,10)=3  (1,16)=3  (1,18)=0  (1,19)=0  (1,21)=2  (2,5)=3  (2,10)=2  (2,16)=2  (2,21)=3  (3,5)=2  (3,10)=3  (3,11)=2  (3,12)=3  (3,16)=3  (3,17)=2  (3,18)=3  (3,19)=2  (3,20)=3  (3,21)=2  (4,5)=3  (4,10)=2  (4,17)=3  (5,3)=2  (5,4)=3  (5,5)=2  (5,6)=3  (5,10)=3  (5,17)=2  (6,10)=2  (6,17)=3  (7,10)=3  (7,11)=2  (7,12)=3  (7,13)=2  (7,14)=3  (7,15)=2  (7,16)=3  (7,17)=2  (7,18)=3  (7,19)=2  (7,20)=3  (7,21)=2  (8,10)=2  (8,17)=3  (8,21)=3  (9,0)=0  (9,4)=0  (9,8)=3  (9,9)=2  (9,10)=3  (9,12)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,17)=2  (9,19)=0  (9,21)=2  (10,0)=0  (10,4)=0  (10,8)=2  (10,12)=0  (10,15)=0  (10,19)=0 
   (2224.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,24) and color cyan and layers
  _0: a rectangle with size (11,16) and color black and mask .xxxxx..........|xx...xxxxxx.....|.....x....x.....|.....x....xxx...|.....x....x.....|...xxxx...x.....|..........x.....|..........xxxxxx|..........x.....|........xxx.....|........x....... at (0,0)
  _01: a rectangle with size (8,8) and color black and mask ..x.....|xxx...xx|x......x|x......x|x......x|xxxxxxxx|.x...x..|.x...x.. at (2,1)
  _011: a rectangle with size (11,5) and color black and mask ....x|....x|....x|....x|....x|xxxxx|....x|....x|....x|....x|....x at (0,19)
  _0111: a rectangle with size (6,6) and color black and mask x.....|x....x|x....x|xxxxxx|.x....|.x.... at (0,16)
diff: 
delta: (0,12)=0  (0,19)=0  (1,12)=0  (1,13)=0  (1,14)=0  (1,18)=0  (1,19)=0  (2,14)=0  (3,14)=0  (4,14)=0  (5,12)=0  (5,13)=0  (5,14)=0  (5,15)=0  (6,17)=3  (7,16)=3  (7,17)=2  (7,18)=3  (7,19)=0  (7,20)=0  (7,21)=0  (8,17)=3  (8,21)=0  (9,0)=0  (9,4)=0  (9,12)=0  (9,13)=0  (9,14)=0  (9,15)=0  (9,17)=0  (9,19)=0  (9,21)=0  (10,0)=0  (10,4)=0  (10,12)=0  (10,15)=0  (10,19)=0 
! size mismatch, 10x10 instead of 11x24

TRAIN b782dc8a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _01: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
diff: 
delta: (4,13)=8  (5,13)=8  (6,13)=8  (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
   (601.6 bits)
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _01: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _011: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
diff: 
delta: (0,8)=1  (0,9)=4  (0,10)=1  (0,11)=4  (0,12)=1  (1,8)=4  (1,12)=4  (2,8)=1  (3,8)=4  (4,8)=1  (4,13)=8  (5,8)=4  (5,9)=1  (5,10)=4  (5,13)=8  (6,1)=4  (6,2)=1  (6,3)=4  (6,4)=1  (6,10)=1  (6,13)=8  (7,4)=4  (7,10)=4  (8,4)=1  (8,10)=1  (9,4)=4  (9,5)=1  (9,6)=4  (9,7)=1  (9,8)=4  (9,9)=1  (9,10)=4  (9,11)=1  (10,0)=1  (10,4)=1  (11,0)=4  (11,4)=4  (12,0)=1  (12,1)=4  (12,2)=1  (12,3)=4  (12,4)=1  (12,7)=8  (12,8)=8  (12,9)=8  (12,10)=8  (12,11)=8  (12,12)=8  (12,13)=8 
   (1502.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
diff: 
delta: (4,13)=8  (5,13)=8  (6,13)=8  (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
! size mismatch, 10x10 instead of 13x14
>> Trial 2
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _01: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _011: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
diff: 
delta: (4,13)=8  (5,13)=8  (6,13)=8  (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
! size mismatch, 10x10 instead of 13x14
>> Trial 3
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (13,9) and color cyan and mask ........x|....xxx.x|....x.xxx|....x....|....xxx..|......x..|......x..|......x..|......xx.|.......x.|xxxxxxxx.|x........|x........ at (0,5)
  _01: a rectangle with size (12,10) and color cyan and mask .......x..|.......x..|.......x..|.......x..|.......x..|xxxxxx.x..|x....x.xxx|xxxx.x...x|...x.xxxxx|xx.x......|.x.x......|.xxx...... at (0,0)
  _011: a rectangle with size (4,6) and color cyan and mask ...x..|xx.xxx|.x...x|.xxxxx at (0,0)
  _0111: a rectangle with size (1,7) and color cyan and mask Full at (12,7)
diff: 
delta: (4,13)=8  (5,13)=8  (6,13)=8  (8,4)=1  (9,4)=4  (9,5)=1  (10,4)=1 
! size mismatch, 10x10 instead of 13x14

TRAIN b782dc8a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _0: a rectangle with size (11,12) and color black and mask .......xxx..|.........x..|xxxx.....x..|...x.....x..|...xxx...x..|.....x...x..|.....xxxxxxx|.....x......|xx...x......|.x...x......|.xxxxx...... at (4,0)
  _01: a rectangle with size (13,8) and color black and mask ..xxxxx.|....x...|....x...|....x...|....x...|....x...|....xxxx|......x.|......x.|......x.|xxxxxxx.|x.......|x....... at (2,7)
  _011: a rectangle with size (8,8) and color black and mask x.......|x.......|x.......|xxxxxx..|.....x..|.....xxx|.......x|.......x at (1,0)
  _0111: a rectangle with size (1,11) and color black and mask Full at (0,4)
diff: 
delta: (0,2)=0  (0,6)=8  (1,2)=0  (1,7)=4  (2,2)=0  (2,3)=0  (2,4)=0  (2,5)=0  (2,6)=4  (2,7)=3  (3,7)=4  (4,13)=0  (4,14)=0  (5,13)=0  (6,13)=0  (8,0)=0  (8,1)=0  (9,1)=0  (10,1)=0  (10,2)=0  (10,3)=0  (11,3)=0  (12,3)=0  (14,9)=0  (14,10)=0  (14,11)=0  (14,12)=0  (14,13)=0  (14,14)=0 
! size mismatch, 10x10 instead of 15x15

TEST b782dc8a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.0 sec (29.0 sec/task)
bits-train-error = 37266.6 bits (37266.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-114] Checking task b8825c91.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 205600.0 = 205615.6
DL output with Mo: L = 15.6 + 200346.3 = 200361.9
DL input+output M: L = 31.2 + 405946.2 = 405977.4

# learning a model for train pairs
2.000	
1.860	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.737	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.673	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.610	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.560	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 167112.4 = 167193.6
DL output with Mo: L = 113.3 + 149564.5 = 149677.8
DL input+output M: L = 194.5 + 316676.9 = 316871.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,14) and color orange and mask ......xxxx....|......x..x....|....xx....xx..|....x......x..|..xx........xx|..x...........|xx............|x.............|x.............|xx............|..x...........|..xx..........|....x.........|....xx........|......x..x....|......xxxx.... at (0,0)
  _01: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x......|xx......|xx....xx|.x....x.|..xxxx..|...xx... at (4,4)
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=7# (6,15)=7# (7,2)=3  (7,3)=3  (7,6)=6  (7,7)=1  (7,8)=1  (7,9)=6  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,15)=7# (8,2)=3  (8,3)=3  (8,6)=6  (8,7)=1  (8,8)=1  (8,9)=6  (8,12)=3  (8,13)=3  (8,15)=7# (9,2)=3  (9,3)=3  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=7# (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=7# (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
   (4354.6 bits)
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,16) and color orange and mask ......xxxx......|......x..x......|....xx....xx....|....x......x....|..xx........xx..|..x..........x..|xx............xx|x..............x|x..............x|xx............xx|..x..........x..|..xx........xx..|....x......x....|....xx....xx....|......x..x......|......xxxx...... at (0,0)
  _01: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x....x.|xx....xx|xx....xx|.x....x.|..xxxx..|...xx... at (4,4)
  _011: a rectangle with size (4,4) and color pink and mask Full at (6,6)
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,10)=3  (5,11)=8  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,12)=3  (6,13)=3  (7,2)=3  (7,3)=3  (7,7)=1  (7,8)=1  (7,12)=3  (7,13)=3  (8,2)=3  (8,3)=3  (8,7)=1  (8,8)=1  (8,12)=3  (8,13)=3  (9,2)=3  (9,3)=3  (9,12)=3  (9,13)=3  (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=3  (10,11)=8  (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=8  (11,11)=3  (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,12)=3  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
   (3565.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (16,14) and color orange and mask ......xxxx....|......x..x....|....xx....xx..|....x......x..|..xx........xx|..x...........|xx............|x.............|x.............|xx............|..x...........|..xx..........|....x.........|....xx........|......x..x....|......xxxx.... at (0,0)
  _01: a rectangle with size (8,8) and color blue and mask ...xx...|..xxxx..|.x......|xx......|xx....xx|.x....x.|..xxxx..|...xx... at (4,4)
diff: 
delta: (0,2)=6  (0,3)=5# (0,5)=6  (0,10)=6  (0,12)=5# (0,13)=6  (1,1)=1  (1,2)=5# (1,3)=5# (1,4)=6  (1,5)=1  (1,10)=1  (1,11)=6  (1,12)=5# (1,13)=5# (1,14)=1  (2,0)=6  (2,1)=5# (2,2)=1  (2,6)=3  (2,7)=3  (2,8)=3  (2,9)=3  (2,13)=1  (2,14)=5# (2,15)=6  (3,0)=5# (3,1)=5# (3,3)=3  (3,6)=3  (3,7)=3  (3,8)=3  (3,9)=3  (3,12)=3  (3,14)=5# (3,15)=5# (4,1)=6  (4,4)=3  (4,5)=8  (4,10)=8  (4,11)=3  (4,14)=6  (5,0)=6  (5,1)=1  (5,4)=8  (5,5)=3  (5,10)=4  (5,11)=4  (5,12)=4  (5,13)=4  (5,14)=1  (5,15)=6  (6,2)=3  (6,3)=3  (6,6)=6  (6,7)=6  (6,8)=6  (6,9)=6  (6,10)=4  (6,11)=4  (6,12)=4  (6,13)=4  (6,14)=7# (6,15)=7# (7,2)=3  (7,3)=3  (7,6)=6  (7,7)=1  (7,8)=1  (7,9)=6  (7,10)=4  (7,11)=4  (7,12)=4  (7,13)=4  (7,15)=7# (8,2)=3  (8,3)=3  (8,6)=6  (8,7)=1  (8,8)=1  (8,9)=6  (8,12)=3  (8,13)=3  (8,15)=7# (9,2)=3  (9,3)=3  (9,6)=6  (9,7)=6  (9,8)=6  (9,9)=6  (9,12)=3  (9,13)=3  (9,14)=7# (9,15)=7# (10,0)=6  (10,1)=1  (10,4)=8  (10,5)=3  (10,10)=4  (10,11)=4  (10,12)=4  (10,13)=7# (10,14)=1  (10,15)=6  (11,1)=6  (11,4)=3  (11,5)=8  (11,10)=4  (11,11)=4  (11,12)=4  (11,13)=7# (11,14)=6  (12,0)=5# (12,1)=5# (12,3)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,9)=3  (12,10)=4  (12,11)=4  (12,12)=4  (12,14)=5# (12,15)=5# (13,0)=6  (13,1)=5# (13,2)=1  (13,6)=3  (13,7)=3  (13,8)=3  (13,9)=3  (13,10)=4  (13,11)=4  (13,12)=4  (13,13)=1  (13,14)=5# (13,15)=6  (14,1)=1  (14,2)=5# (14,3)=5# (14,4)=6  (14,5)=1  (14,10)=1  (14,11)=6  (14,12)=5# (14,13)=5# (14,14)=1  (15,2)=6  (15,3)=5# (15,5)=6  (15,10)=6  (15,12)=5# (15,13)=6 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (8,8) and color grey and mask Full at (4,4)
  _01: a rectangle with size (12,4) and color cyan and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,1)=9# (0,3)=1  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,12)=1  (0,14)=9# (0,15)=9# (1,0)=9# (1,2)=1  (1,3)=3  (1,4)=9# (1,7)=1  (1,8)=1  (1,11)=9# (1,12)=3  (1,13)=1  (1,15)=9# (2,1)=4  (2,2)=4  (2,3)=2  (2,12)=2  (2,13)=5# (2,14)=1  (3,0)=1  (3,1)=4  (3,2)=4  (3,3)=8  (3,5)=1  (3,7)=2  (3,8)=2  (3,10)=1  (3,12)=8  (3,13)=2  (3,14)=3  (3,15)=1  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,5)=1  (4,10)=1  (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,3)=1  (5,4)=1  (5,5)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,15)=9# (6,2)=8  (6,3)=8  (6,6)=9# (6,9)=9# (6,12)=8  (6,13)=8  (7,1)=1  (7,2)=8  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,13)=8  (7,14)=1  (8,1)=1  (8,2)=8  (8,3)=2  (8,7)=8  (8,8)=8  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=1  (9,2)=8  (9,3)=8  (9,6)=9# (9,9)=9# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,3)=1  (10,4)=1  (10,5)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,5)=1  (11,10)=1  (11,11)=7# (11,14)=9# (11,15)=8  (12,0)=1  (12,1)=3  (12,2)=2  (12,3)=8  (12,5)=1  (12,7)=2  (12,8)=2  (12,10)=1  (12,12)=8  (12,13)=2  (12,14)=3  (12,15)=1  (13,1)=1  (13,2)=5# (13,3)=2  (13,12)=2  (13,13)=5# (13,14)=1  (14,0)=9# (14,2)=1  (14,3)=3  (14,4)=9# (14,7)=1  (14,8)=1  (14,11)=9# (14,12)=3  (14,13)=1  (14,15)=9# (15,0)=9# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,12)=1  (15,14)=9# (15,15)=9#
   (3774.8 bits)
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (8,8) and color grey and mask Full at (4,4)
  _01: a rectangle with size (4,12) and color cyan and mask Full at (6,2)
  _011: a rectangle with size (12,4) and color cyan and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,1)=9# (0,3)=1  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,12)=1  (0,14)=9# (0,15)=9# (1,0)=9# (1,2)=1  (1,3)=3  (1,4)=9# (1,7)=1  (1,8)=1  (1,11)=9# (1,12)=3  (1,13)=1  (1,15)=9# (2,1)=1  (2,2)=5# (2,3)=2  (2,12)=2  (2,13)=5# (2,14)=1  (3,0)=1  (3,1)=3  (3,2)=2  (3,3)=8  (3,5)=1  (3,7)=2  (3,8)=2  (3,10)=1  (3,12)=8  (3,13)=2  (3,14)=3  (3,15)=1  (4,0)=8  (4,1)=9# (4,4)=7# (4,5)=1  (4,10)=1  (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,3)=1  (5,4)=1  (5,5)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,15)=9# (6,6)=9# (6,9)=9# (7,1)=1  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,14)=1  (8,1)=1  (8,3)=2  (8,7)=8  (8,8)=8  (8,12)=2  (8,14)=1  (9,6)=9# (9,9)=9# (10,0)=9# (10,3)=1  (10,4)=1  (10,5)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,5)=1  (11,10)=1  (11,11)=7# (11,14)=9# (11,15)=8  (12,0)=1  (12,1)=3  (12,2)=2  (12,3)=8  (12,5)=1  (12,7)=2  (12,8)=2  (12,10)=1  (12,12)=8  (12,13)=2  (12,14)=3  (12,15)=1  (13,1)=1  (13,2)=5# (13,3)=2  (13,12)=2  (13,13)=5# (13,14)=1  (14,0)=9# (14,2)=1  (14,3)=3  (14,4)=9# (14,7)=1  (14,8)=1  (14,11)=9# (14,12)=3  (14,13)=1  (14,15)=9# (15,0)=9# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,12)=1  (15,14)=9# (15,15)=9#
   (3420.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (8,8) and color grey and mask Full at (4,4)
  _01: a rectangle with size (12,4) and color cyan and mask Full at (2,6)
diff: 
delta: (0,0)=9# (0,1)=9# (0,3)=1  (0,4)=8  (0,5)=9# (0,10)=9# (0,11)=8  (0,12)=1  (0,14)=9# (0,15)=9# (1,0)=9# (1,2)=1  (1,3)=3  (1,4)=9# (1,7)=1  (1,8)=1  (1,11)=9# (1,12)=3  (1,13)=1  (1,15)=9# (2,1)=4  (2,2)=4  (2,3)=2  (2,12)=2  (2,13)=5# (2,14)=1  (3,0)=1  (3,1)=4  (3,2)=4  (3,3)=8  (3,5)=1  (3,7)=2  (3,8)=2  (3,10)=1  (3,12)=8  (3,13)=2  (3,14)=3  (3,15)=1  (4,0)=8  (4,1)=4  (4,2)=4  (4,4)=7# (4,5)=1  (4,10)=1  (4,11)=7# (4,14)=9# (4,15)=8  (5,0)=9# (5,3)=1  (5,4)=1  (5,5)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,15)=9# (6,2)=8  (6,3)=8  (6,6)=9# (6,9)=9# (6,12)=8  (6,13)=8  (7,1)=1  (7,2)=8  (7,3)=2  (7,7)=8  (7,8)=8  (7,12)=2  (7,13)=8  (7,14)=1  (8,1)=1  (8,2)=8  (8,3)=2  (8,7)=8  (8,8)=8  (8,11)=4  (8,12)=4  (8,13)=4  (8,14)=1  (9,2)=8  (9,3)=8  (9,6)=9# (9,9)=9# (9,11)=4  (9,12)=4  (9,13)=4  (10,0)=9# (10,3)=1  (10,4)=1  (10,5)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,15)=9# (11,0)=8  (11,1)=9# (11,4)=7# (11,5)=1  (11,10)=1  (11,11)=7# (11,14)=9# (11,15)=8  (12,0)=1  (12,1)=3  (12,2)=2  (12,3)=8  (12,5)=1  (12,7)=2  (12,8)=2  (12,10)=1  (12,12)=8  (12,13)=2  (12,14)=3  (12,15)=1  (13,1)=1  (13,2)=5# (13,3)=2  (13,12)=2  (13,13)=5# (13,14)=1  (14,0)=9# (14,2)=1  (14,3)=3  (14,4)=9# (14,7)=1  (14,8)=1  (14,11)=9# (14,12)=3  (14,13)=1  (14,15)=9# (15,0)=9# (15,1)=9# (15,3)=1  (15,4)=8  (15,5)=9# (15,10)=9# (15,11)=8  (15,12)=1  (15,14)=9# (15,15)=9#
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color cyan and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (11,2)
  _01: a rectangle with size (8,8) and color orange and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|...xx... at (4,4)
diff: 
delta: (0,0)=9# (0,1)=3  (0,2)=9# (0,3)=9# (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,12)=9# (0,13)=9# (0,14)=3  (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=9# (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,13)=9# (1,14)=9# (1,15)=3  (2,0)=9# (2,1)=9# (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (3,15)=9# (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,6)=9# (4,9)=9# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,7)=6  (5,8)=6  (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,4)=9# (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,11)=9# (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,4)=9# (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=9# (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,7)=6  (10,8)=6  (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,6)=9# (11,9)=9# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,0)=9# (12,1)=3  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (12,15)=9# (13,0)=9# (13,1)=9# (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (13,14)=9# (13,15)=9# (14,0)=3  (14,1)=9# (14,7)=5# (14,8)=5# (14,12)=3  (14,13)=9# (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,2)=9# (15,3)=9# (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,12)=9# (15,13)=9# (15,14)=3  (15,15)=9#
   (4484.4 bits)
data: a background with size (16,16) and color cyan and layers
  _0: a rectangle with size (8,8) and color orange and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|...xx... at (4,4)
  _01: a rectangle with size (4,4) and color blue and mask Full at (6,6)
  _011: a rectangle with size (4,12) and color red and mask Full at (6,2)
diff: 
delta: (0,0)=9# (0,1)=3  (0,2)=9# (0,3)=9# (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,12)=9# (0,13)=9# (0,14)=3  (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=9# (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,13)=9# (1,14)=9# (1,15)=3  (2,0)=9# (2,1)=9# (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (3,15)=9# (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,6)=9# (4,9)=9# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,7)=6  (5,8)=6  (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,4)=9# (6,11)=9# (6,15)=7# (7,1)=5# (7,3)=1  (7,5)=6  (7,7)=3  (7,8)=3  (7,10)=6  (7,12)=1  (7,14)=5# (8,1)=5# (8,3)=1  (8,5)=6  (8,7)=3  (8,8)=3  (8,10)=6  (8,12)=1  (8,14)=5# (9,0)=7# (9,4)=9# (9,11)=9# (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,7)=6  (10,8)=6  (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,2)=7# (11,4)=2  (11,5)=5# (11,6)=9# (11,9)=9# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,0)=9# (12,1)=3  (12,5)=5# (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (12,15)=9# (13,0)=9# (13,1)=9# (13,2)=2  (13,4)=7# (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (13,14)=9# (13,15)=9# (14,0)=3  (14,1)=9# (14,2)=9# (14,3)=3  (14,7)=5# (14,8)=5# (14,12)=3  (14,13)=9# (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,2)=9# (15,3)=9# (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,12)=9# (15,13)=9# (15,14)=3  (15,15)=9#
   (4103.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color cyan and layers
  _0: a rectangle with size (4,4) and color yellow and mask Full at (11,2)
  _01: a rectangle with size (8,8) and color orange and mask ...xx...|..x..x..|.x....x.|x......x|x......x|.x....x.|..x..x..|...xx... at (4,4)
diff: 
delta: (0,0)=9# (0,1)=3  (0,2)=9# (0,3)=9# (0,4)=2  (0,6)=7# (0,9)=7# (0,11)=2  (0,12)=9# (0,13)=9# (0,14)=3  (0,15)=9# (1,0)=3  (1,1)=9# (1,2)=9# (1,3)=3  (1,7)=5# (1,8)=5# (1,12)=3  (1,13)=9# (1,14)=9# (1,15)=3  (2,0)=9# (2,1)=9# (2,2)=2  (2,4)=7# (2,6)=2  (2,7)=2  (2,8)=2  (2,9)=2  (2,11)=7# (2,13)=2  (2,14)=9# (2,15)=9# (3,0)=9# (3,1)=3  (3,5)=5# (3,6)=2  (3,7)=1  (3,8)=1  (3,9)=2  (3,10)=5# (3,14)=3  (3,15)=9# (4,0)=2  (4,2)=7# (4,4)=2  (4,5)=5# (4,6)=9# (4,9)=9# (4,10)=5# (4,11)=2  (4,13)=7# (4,15)=2  (5,3)=5# (5,4)=5# (5,5)=5# (5,7)=6  (5,8)=6  (5,10)=5# (5,11)=5# (5,12)=5# (6,0)=7# (6,2)=2  (6,3)=2  (6,4)=9# (6,6)=1  (6,7)=1  (6,8)=1  (6,9)=1  (6,11)=9# (6,12)=4  (6,13)=4  (6,15)=7# (7,1)=5# (7,2)=2  (7,3)=1  (7,5)=6  (7,6)=1  (7,7)=3  (7,8)=3  (7,9)=1  (7,10)=6  (7,12)=4  (7,13)=4  (7,14)=5# (8,1)=5# (8,2)=2  (8,3)=1  (8,5)=6  (8,6)=1  (8,7)=3  (8,8)=3  (8,9)=1  (8,10)=6  (8,12)=4  (8,13)=4  (8,14)=5# (9,0)=7# (9,2)=2  (9,3)=2  (9,4)=9# (9,6)=1  (9,7)=1  (9,8)=1  (9,9)=1  (9,11)=9# (9,12)=4  (9,13)=4  (9,15)=7# (10,3)=5# (10,4)=5# (10,5)=5# (10,7)=6  (10,8)=6  (10,10)=5# (10,11)=5# (10,12)=5# (11,0)=2  (11,6)=9# (11,9)=9# (11,10)=5# (11,11)=2  (11,13)=7# (11,15)=2  (12,0)=9# (12,1)=3  (12,6)=2  (12,7)=1  (12,8)=1  (12,9)=2  (12,10)=5# (12,14)=3  (12,15)=9# (13,0)=9# (13,1)=9# (13,6)=2  (13,7)=2  (13,8)=2  (13,9)=2  (13,11)=7# (13,13)=2  (13,14)=9# (13,15)=9# (14,0)=3  (14,1)=9# (14,7)=5# (14,8)=5# (14,12)=3  (14,13)=9# (14,14)=9# (14,15)=3  (15,0)=9# (15,1)=3  (15,2)=9# (15,3)=9# (15,4)=2  (15,6)=7# (15,9)=7# (15,11)=2  (15,12)=9# (15,13)=9# (15,14)=3  (15,15)=9#
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (6,6) and color green and mask ..xx..|.xxxx.|xx..xx|xx..xx|.xxxx.|..xx.. at (5,5)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (1,10)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,3)=6  (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,12)=6  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,2)=6  (1,3)=2  (1,4)=9# (1,5)=5# (1,15)=2  (2,0)=7# (2,1)=6  (2,2)=3  (2,3)=3  (2,4)=9# (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,14)=6  (2,15)=7# (3,0)=6  (3,1)=2  (3,2)=3  (3,3)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,14)=2  (3,15)=6  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,2)=6  (6,3)=6  (6,12)=6  (6,13)=6  (6,15)=9# (7,2)=6  (7,3)=6  (7,7)=2  (7,8)=2  (7,12)=6  (7,13)=6  (8,2)=6  (8,3)=4  (8,4)=4  (8,7)=2  (8,8)=2  (8,12)=6  (8,13)=6  (9,0)=9# (9,2)=6  (9,3)=4  (9,4)=4  (9,12)=6  (9,13)=6  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,0)=6  (12,1)=2  (12,2)=3  (12,3)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,12)=8  (12,13)=3  (12,14)=2  (12,15)=6  (13,0)=7# (13,1)=6  (13,2)=3  (13,3)=3  (13,4)=9# (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,11)=9# (13,12)=3  (13,13)=3  (13,14)=6  (13,15)=7# (14,0)=2  (14,2)=6  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,13)=6  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,3)=6  (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,12)=6  (15,13)=7# (15,14)=2  (15,15)=2 
   (4097.5 bits)
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (6,6) and color green and mask ..xx..|.xxxx.|xx..xx|xx..xx|.xxxx.|..xx.. at (5,5)
  _01: a rectangle with size (2,4) and color pink and mask Full (and Border) at (2,6)
  _011: a rectangle with size (2,4) and color pink and mask Full (and Border) at (12,6)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,3)=6  (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,12)=6  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,2)=6  (1,3)=2  (1,4)=9# (1,5)=5# (1,10)=5# (1,11)=9# (1,12)=2  (1,13)=6  (1,15)=2  (2,0)=7# (2,1)=6  (2,2)=3  (2,3)=3  (2,4)=9# (2,11)=9# (2,12)=3  (2,13)=3  (2,14)=6  (2,15)=7# (3,0)=6  (3,1)=2  (3,2)=3  (3,3)=8  (3,12)=8  (3,13)=3  (3,14)=2  (3,15)=6  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,2)=6  (6,3)=6  (6,12)=6  (6,13)=6  (6,15)=9# (7,2)=6  (7,3)=6  (7,7)=2  (7,8)=2  (7,12)=6  (7,13)=6  (8,2)=6  (8,3)=6  (8,7)=2  (8,8)=2  (8,12)=6  (8,13)=6  (9,0)=9# (9,2)=6  (9,3)=6  (9,12)=6  (9,13)=6  (9,15)=9# (10,0)=9# (10,1)=5# (10,4)=7# (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,0)=6  (12,1)=2  (12,2)=3  (12,3)=8  (12,12)=8  (12,13)=3  (12,14)=2  (12,15)=6  (13,0)=7# (13,1)=6  (13,2)=3  (13,3)=3  (13,4)=9# (13,11)=9# (13,12)=3  (13,13)=3  (13,14)=6  (13,15)=7# (14,0)=2  (14,2)=6  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,13)=6  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,3)=6  (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,12)=6  (15,13)=7# (15,14)=2  (15,15)=2 
   (3867.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (6,6) and color green and mask ..xx..|.xxxx.|xx..xx|xx..xx|.xxxx.|..xx.. at (5,5)
  _01: a rectangle with size (3,4) and color yellow and mask Full at (1,10)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=7# (0,3)=6  (0,4)=8  (0,5)=9# (0,6)=9# (0,9)=9# (0,10)=9# (0,11)=8  (0,12)=6  (0,13)=7# (0,14)=2  (0,15)=2  (1,0)=2  (1,2)=6  (1,3)=2  (1,4)=9# (1,5)=5# (1,15)=2  (2,0)=7# (2,1)=6  (2,2)=3  (2,3)=3  (2,4)=9# (2,6)=6  (2,7)=6  (2,8)=6  (2,9)=6  (2,14)=6  (2,15)=7# (3,0)=6  (3,1)=2  (3,2)=3  (3,3)=8  (3,6)=6  (3,7)=6  (3,8)=6  (3,9)=6  (3,14)=2  (3,15)=6  (4,0)=8  (4,1)=9# (4,2)=9# (4,5)=7# (4,10)=7# (4,13)=9# (4,14)=9# (4,15)=8  (5,0)=9# (5,1)=5# (5,4)=7# (5,5)=7# (5,10)=7# (5,11)=7# (5,14)=5# (5,15)=9# (6,0)=9# (6,2)=6  (6,3)=6  (6,12)=6  (6,13)=6  (6,15)=9# (7,2)=6  (7,3)=6  (7,7)=2  (7,8)=2  (7,12)=6  (7,13)=6  (8,2)=6  (8,3)=4  (8,4)=4  (8,7)=2  (8,8)=2  (8,12)=6  (8,13)=6  (9,0)=9# (9,2)=6  (9,3)=4  (9,4)=4  (9,12)=6  (9,13)=6  (9,15)=9# (10,0)=9# (10,1)=5# (10,3)=4  (10,4)=4  (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=5# (10,15)=9# (11,0)=8  (11,1)=9# (11,2)=9# (11,5)=7# (11,10)=7# (11,13)=9# (11,14)=9# (11,15)=8  (12,0)=6  (12,1)=2  (12,2)=3  (12,3)=8  (12,6)=6  (12,7)=6  (12,8)=6  (12,9)=6  (12,12)=8  (12,13)=3  (12,14)=2  (12,15)=6  (13,0)=7# (13,1)=6  (13,2)=3  (13,3)=3  (13,4)=9# (13,6)=6  (13,7)=6  (13,8)=6  (13,9)=6  (13,11)=9# (13,12)=3  (13,13)=3  (13,14)=6  (13,15)=7# (14,0)=2  (14,2)=6  (14,3)=2  (14,4)=9# (14,5)=5# (14,10)=5# (14,11)=9# (14,12)=2  (14,13)=6  (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=7# (15,3)=6  (15,4)=8  (15,5)=9# (15,6)=9# (15,9)=9# (15,10)=9# (15,11)=8  (15,12)=6  (15,13)=7# (15,14)=2  (15,15)=2 
! size mismatch, 10x10 instead of 16x16

TRAIN b8825c91.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color pink and layers
  _0: a rectangle with size (6,6) and color grey and mask ..xx..|.xxxx.|xx..x.|xx..xx|.xxxx.|..xx.. at (5,5)
  _01: a rectangle with size (4,4) and color yellow and mask Full at (4,10)
diff: 
delta: (0,0)=7# (0,1)=7# (0,2)=8  (0,3)=1  (0,4)=9# (0,5)=8  (0,6)=2  (0,9)=2  (0,10)=8  (0,11)=9# (0,12)=1  (0,13)=8  (0,14)=7# (0,15)=7# (1,0)=7# (1,1)=1  (1,2)=1  (1,3)=8  (1,4)=8  (1,5)=8  (1,10)=8  (1,11)=8  (1,12)=8  (1,13)=1  (1,14)=1  (1,15)=7# (2,0)=8  (2,1)=1  (2,3)=9# (2,4)=2  (2,6)=4  (2,7)=4  (2,8)=4  (2,11)=2  (2,12)=9# (2,14)=1  (2,15)=8  (3,0)=1  (3,1)=8  (3,2)=9# (3,3)=1  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=1  (3,12)=1  (3,13)=9# (3,14)=8  (3,15)=1  (4,0)=9# (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=7# (4,6)=4  (4,7)=4  (4,8)=4  (4,14)=8  (4,15)=9# (5,0)=8  (5,1)=8  (5,4)=7# (5,5)=7# (5,14)=8  (5,15)=8  (6,0)=2  (6,3)=1  (6,15)=2  (7,2)=1  (7,3)=1  (7,7)=7# (7,8)=7# (8,2)=1  (8,3)=1  (8,7)=7# (8,8)=7# (8,12)=1  (8,13)=1  (9,0)=2  (9,3)=1  (9,12)=1  (9,15)=2  (10,0)=8  (10,1)=8  (10,4)=7# (10,5)=7# (10,10)=7# (10,11)=7# (10,14)=8  (10,15)=8  (11,0)=9# (11,1)=8  (11,2)=2  (11,4)=8  (11,5)=7# (11,10)=7# (11,11)=8  (11,13)=2  (11,14)=8  (11,15)=9# (12,0)=1  (12,1)=8  (12,2)=9# (12,3)=1  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,12)=1  (12,13)=9# (12,14)=8  (12,15)=1  (13,0)=8  (13,1)=1  (13,3)=9# (13,4)=2  (13,7)=1  (13,8)=1  (13,11)=2  (13,12)=9# (13,14)=1  (13,15)=8  (14,0)=7# (14,1)=1  (14,2)=1  (14,3)=8  (14,4)=8  (14,5)=8  (14,10)=8  (14,11)=8  (14,12)=8  (14,13)=1  (14,14)=1  (14,15)=7# (15,0)=7# (15,1)=7# (15,2)=8  (15,3)=1  (15,4)=9# (15,5)=8  (15,6)=2  (15,9)=2  (15,10)=8  (15,11)=9# (15,12)=1  (15,13)=8  (15,14)=7# (15,15)=7#
! size mismatch, 10x10 instead of 16x16

TEST b8825c91.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.2 sec (29.2 sec/task)
bits-train-error = 149564.5 bits (149564.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-113] Checking task b8cdaf2b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7410.1 = 7425.7
DL output with Mo: L = 15.6 + 10204.6 = 10220.2
DL input+output M: L = 31.2 + 17614.7 = 17645.9

# learning a model for train pairs
2.000	
1.601	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.144	OUT OBJECT at ^.layer_0: ^.layer_0
1.026	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.841	OUT OBJECT at ^.layer_01: ^.layer_01
0.779	OUT DEF: ^.size=^.size
0.746	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.711	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.690	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.668	OUT DEF: ^.layer_0111.shape.color=^.layer_01.shape.color
0.651	IN  DEF: ^.layer_01.shape.mask=Full
0.633	OUT DEF: ^.layer_011.pos.j='0
0.616	OUT DEF: ^.layer_0111.pos.j=^.layer_01.pos.i
0.600	OUT DEF: ^.layer_011.pos.i=right(^.layer_01) - 1
0.584	OUT DEF: ^.layer_0111.pos.i=right(^.layer_01) - 1
0.570	IN  DEF: ^.color=black
0.561	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a point with color ^.layer_01.shape.color at (right(^.layer_01) - 1,'0)
  _0111: a point with color ^.layer_01.shape.color at (right(^.layer_01) - 1,^.layer_01.pos.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 3268.5 = 3348.9
DL output with Mo: L = 123.3 + 998.7 = 1122.0
DL input+output M: L = 203.6 + 4267.2 = 4470.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta:
   (66.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
  _011: a point with color yellow at (0,0)
  _0111: a point with color yellow at (0,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Odd Checkboard at (1,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (2,1)
diff: 
delta:
correct output grid

TRAIN b8cdaf2b.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,2)
diff: 
delta:
   (81.8 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,2)
  _011: a point with color green at (1,0)
  _0111: a point with color green at (1,4)
diff: 
delta: (2,1)=3  (2,3)=3 
   (49.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (4,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (4,2)
  _01: a rectangle with size (2,5) and color cyan and mask ..x..|xx.xx at (3,0)
diff:   ^.layer_01.shape.mask
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,5) and color cyan and mask Full at (4,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (3,2)
diff: 
delta: (4,2)=3 
! 6 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
   (85.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
  _011: a point with color blue at (2,0)
  _0111: a point with color blue at (2,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,5) and color pink and mask .xxx.|x...x at (3,0)
  _01: a rectangle with size (1,3) and color blue and mask Full at (4,1)
diff: 
delta:
correct output grid

TRAIN b8cdaf2b.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
diff: 
delta:
   (94.1 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
  _011: a point with color yellow at (3,0)
  _0111: a point with color yellow at (3,6)
diff: 
delta: (4,1)=4  (4,5)=4 
   (50.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (6,2)
  _01: a rectangle with size (2,7) and color red and mask ..xxx..|xx...xx at (5,0)
diff:   ^.layer_01.shape.mask
delta:
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (5,2)
diff: 
delta: (6,2)=4  (6,3)=4  (6,4)=4 
! 8 wrong pixels (generated / expected)

TRAIN b8cdaf2b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,9) and color cyan and mask ...xxx...|xxx...xxx at (7,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (8,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (8,3)
  _01: a rectangle with size (2,9) and color cyan and mask ...xxx...|xxx...xxx at (7,0)
diff:   ^.layer_01.shape.mask
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,9) and color cyan and mask Full at (8,0)
  _01: a rectangle with size (1,3) and color cyan and mask Full at (7,3)
diff: 
delta: (8,3)=2  (8,4)=2  (8,5)=2 
! 10 wrong pixels (generated / expected)

TEST b8cdaf2b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.3 sec (3.3 sec/task)
bits-train-error = 998.7 bits (998.7 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-112] Checking task b91ae062.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5728.0 = 5743.6
DL output with Mo: L = 15.6 + 49318.7 = 49334.3
DL input+output M: L = 31.2 + 55046.6 = 55077.9

# learning a model for train pairs
2.000	
1.649	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.425	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.258	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.127	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.951	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.893	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.871	IN  DEF: ^.color=black
0.866	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
0.860	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.854	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.pos.j + 2
0.848	OUT DEF: ^.layer_011.shape.size.j=^.layer_01.pos.j + 2
0.843	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.pos.j + 2
0.837	OUT DEF: ^.layer_0111.shape.size.j=^.layer_01.pos.j + 2
0.831	OUT DEF: ^.layer_011.shape.size.i=^.layer_01.pos.j + 2
0.825	OUT DEF: ^.layer_0.shape.size.i=^.layer_01.pos.j + 2
0.820	OUT DEF: ^.layer_0.pos.j=min(^.layer_0.pos.j, ^.layer_01.pos.j) * 3
0.817	OUT DEF: ^.layer_0.shape.mask=Full
0.814	OUT DEF: ^.layer_01.shape.mask=Full
0.810	OUT DEF: ^.layer_011.shape.mask=Full
0.807	OUT DEF: ^.layer_0111.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (^.layer_01.pos.j + 2,?) and color ? and mask Full at (?,min(^.layer_0.pos.j, ^.layer_01.pos.j) * 3)
  _01: a rectangle with size (^.layer_01.pos.j + 2,^.layer_01.pos.j + 2) and color ? and mask Full at (^.layer_01.pos.i,?)
  _011: a rectangle with size (^.layer_01.pos.j + 2,^.layer_01.pos.j + 2) and color ^.layer_011.shape.color and mask Full at (?,?)
  _0111: a rectangle with size (?,^.layer_01.pos.j + 2) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 87.8 + 4012.0 = 4099.9
DL output with Mo: L = 314.3 + 4283.5 = 4597.8
DL input+output M: L = 402.2 + 8295.5 = 8697.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color pink at (0,0)
  _011: a point with color orange at (0,1)
diff: 
delta:
   (65.3 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (2,6) and color black and mask Full at (4,0)
  _01: a rectangle with size (2,2) and color black and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color orange and mask Full at (0,2)
  _0111: a rectangle with size (4,2) and color black and mask Full at (2,0)
diff: 
delta:
   (88.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color pink at (0,0)
  _011: a point with color orange at (0,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color orange at (0,1)
  _011: a point with color pink at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _01: a point with color orange at (0,1)
  _011: a point with color pink at (1,1)
diff: 
delta: (1,2)=6 
! size mismatch, 10x10 instead of 6x6

TRAIN b91ae062.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (0,1)
  _01: a point with color blue at (0,0)
  _011: a point with color blue at (2,1)
diff: 
delta:
   (71.6 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,2) and color yellow and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color blue and mask Full at (4,2)
  _0111: a rectangle with size (2,2) and color yellow and mask Full at (2,2)
diff: 
delta:
   (76.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (0,1)
  _01: a point with color blue at (0,0)
  _011: a point with color blue at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (0,1)
  _01: a point with color blue at (2,1)
  _011: a point with color blue at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 6x6
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _01: a point with color yellow at (0,2)
  _011: a point with color yellow at (1,1)
diff: 
delta: (2,1)=1 
! size mismatch, 10x10 instead of 6x6

TRAIN b91ae062.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color orange at (1,1)
diff: 
delta: (1,2)=3 
   (86.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color red and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color orange and mask Full at (3,3)
  _0111: a rectangle with size (3,3) and color green and mask Full at (3,6)
diff: 
delta:
   (84.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _01: a point with color red at (0,1)
  _011: a point with color orange at (1,1)
diff: 
delta: (1,2)=3 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
  _01: a point with color orange at (1,1)
  _011: a point with color red at (0,1)
diff: 
delta: (1,2)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN b91ae062.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color cyan at (0,1)
  _011: a point with color brown at (2,0)
diff: 
delta: (2,1)=8 
   (88.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,6) and color pink and mask Full at (3,3)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color brown and mask Full at (6,0)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (6,3)
diff: 
delta:
   (86.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color cyan at (0,1)
  _011: a point with color brown at (2,0)
diff: 
delta: (2,1)=8 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _01: a point with color brown at (2,0)
  _011: a point with color cyan at (0,1)
diff: 
delta: (2,1)=8 
! size mismatch, 10x10 instead of 9x9

TRAIN b91ae062.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a point with color green at (0,2)
  _011: a point with color yellow at (0,0)
diff: 
delta: (2,2)=8 
   (88.7 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,8) and color red and mask Full at (4,0)
  _01: a rectangle with size (4,4) and color green and mask Full at (0,8)
  _011: a rectangle with size (4,4) and color yellow and mask Full at (0,0)
  _0111: a rectangle with size (4,4) and color cyan and mask Full at (8,8)
diff: 
delta:
   (92.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a point with color yellow at (0,0)
  _011: a point with color green at (0,2)
diff: 
delta: (2,2)=8 
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,0)
  _01: a point with color green at (0,2)
  _011: a point with color yellow at (0,0)
diff: 
delta: (2,2)=8 
! size mismatch, 10x10 instead of 12x12

TRAIN b91ae062.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a point with color blue at (0,1)
  _011: a point with color cyan at (1,1)
diff: 
delta: (1,2)=7#
! size mismatch, 10x10 instead of 12x12
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,0)
  _01: a point with color cyan at (1,1)
  _011: a point with color blue at (0,1)
diff: 
delta: (1,2)=7#
! size mismatch, 10x10 instead of 12x12

TEST b91ae062.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.9 sec (9.9 sec/task)
bits-train-error = 4283.5 bits (4283.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-111] Checking task b94a9452.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 13695.3 = 13710.9
DL output with Mo: L = 15.6 + 2124.4 = 2140.0
DL input+output M: L = 31.2 + 15819.7 = 15850.9

# learning a model for train pairs
2.000	
1.250	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.960	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.757	OUT DEF: ^.size=^.layer_0.shape.size
0.678	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.625	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.504	OUT DEF: ^.color=^.layer_00.shape.color
0.390	OUT DEF: ^.layer_0.pos=^.layer_00.pos - ^.layer_0.pos
0.281	OUT DEF: ^.layer_0.shape.size=^.layer_00.shape.size
0.235	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.227	IN  DEF: ^.layer_00.shape.mask=Full
0.220	IN  DEF: ^.layer_0.shape.mask=Full
0.215	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_00.shape.color and layers
  _0: a rectangle with size ^.layer_00.shape.size and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ^.layer_00.pos - ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 2356.1 = 2436.4
DL output with Mo: L = 78.9 + 0.0 = 78.9
DL input+output M: L = 159.3 + 2356.1 = 2515.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,3)
diff: 
delta:
   (81.6 bits)
data: a background with size (4,4) and color yellow and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Full at (2,4)
  _0: a rectangle with size (4,4) and color red and mask Full at (1,3)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,4)
diff: 
delta:
   (75.0 bits)
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _00: a rectangle with size (1,1) and color green and mask Full at (3,5)
  _0: a rectangle with size (3,3) and color blue and mask Full at (2,4)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (8,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (6,2)
diff: 
delta:
   (78.9 bits)
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (8,4)
  _0: a rectangle with size (5,5) and color yellow and mask Full at (6,2)
diff: 
delta:
correct output grid

TRAIN b94a9452.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,13) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Full at (3,4)
  _0: a rectangle with size (6,6) and color green and mask Full at (1,2)
diff: 
delta:
correct output grid

TEST b94a9452.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-110] Checking task b9b7f026.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 73168.3 = 73183.9
DL output with Mo: L = 15.6 + 468.3 = 483.9
DL input+output M: L = 31.2 + 73636.6 = 73667.8

# learning a model for train pairs
2.000	
1.768	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.550	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.344	OUT DEF: ^.size.i=1
1.138	OUT DEF: ^.size.j=1
0.945	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.411	OUT DEF: ^.color=^.layer_01.shape.color
0.256	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.255	IN  DEF: ^.layer_0.shape.mask=Full
0.182	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.181	IN  DEF: ^.layer_00.shape.mask=Full
0.179	IN  DEF: ^.layer_0.shape.color=red
0.177	IN  DEF: ^.layer_011.shape.mask=Full
0.176	IN  DEF: ^.layer_0111.shape.mask=Full
0.175	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 178.3 + 8700.0 = 8878.4
DL output with Mo: L = 25.9 + 0.0 = 25.9
DL input+output M: L = 204.3 + 8700.0 = 8904.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,13) and color black and layers
  _00: a rectangle with size (3,4) and color cyan and mask Full at (11,8)
  _0: a rectangle with size (3,5) and color red and mask Full at (7,3)
  _01: a rectangle with size (4,3) and color pink and mask Border at (1,1)
  _011: a rectangle with size (3,3) and color green and mask Full at (1,8)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (5,9)
diff: 
delta: (3,5)=1  (3,6)=1  (4,5)=1  (4,6)=1  (11,0)=4  (11,1)=4  (11,2)=4  (12,0)=4  (12,1)=4  (12,2)=4 
   (444.9 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _00: a rectangle with size (3,4) and color cyan and mask Full at (11,8)
  _0: a rectangle with size (3,5) and color red and mask Full at (7,3)
  _01: a rectangle with size (4,3) and color pink and mask Border at (1,1)
  _011: a rectangle with size (3,3) and color green and mask Full at (1,8)
  _0111: a rectangle with size (3,3) and color orange and mask Full at (5,9)
diff: 
delta: (3,5)=1  (3,6)=1  (4,5)=1  (4,6)=1  (11,0)=4  (11,1)=4  (11,2)=4  (12,0)=4  (12,1)=4  (12,2)=4 
correct output grid

TRAIN b9b7f026.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (6,4) and color orange and mask Full at (0,13)
  _0: a rectangle with size (6,3) and color red and mask Full at (6,3)
  _01: a rectangle with size (7,4) and color grey and mask xxxx|xxxx|xxxx|x..x|x..x|xxxx|xxxx at (3,7)
  _011: a rectangle with size (4,5) and color yellow and mask Full at (11,10)
  _0111: a rectangle with size (3,5) and color cyan and mask Full at (2,0)
diff: 
delta:
   (208.6 bits)
data: a background with size (1,1) and color grey and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (6,4) and color orange and mask Full at (0,13)
  _0: a rectangle with size (6,3) and color red and mask Full at (6,3)
  _01: a rectangle with size (7,4) and color grey and mask xxxx|xxxx|xxxx|x..x|x..x|xxxx|xxxx at (3,7)
  _011: a rectangle with size (4,5) and color yellow and mask Full at (11,10)
  _0111: a rectangle with size (3,5) and color cyan and mask Full at (2,0)
diff: 
delta:
correct output grid

TRAIN b9b7f026.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _0: a rectangle with size (1,7) and color red and mask Full at (13,2)
  _01: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
  _011: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _0111: a rectangle with size (4,5) and color orange and mask Full at (9,11)
diff: 
delta:
   (216.5 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color black and layers
  _00: a rectangle with size (5,6) and color blue and mask Full at (1,2)
  _0: a rectangle with size (1,7) and color red and mask Full at (13,2)
  _01: a rectangle with size (5,7) and color red and mask xxxxxxx|xxxxxxx|x...xxx|x...xxx|xxxxxxx at (9,2)
  _011: a rectangle with size (6,5) and color green and mask Full at (2,10)
  _0111: a rectangle with size (4,5) and color orange and mask Full at (9,11)
diff: 
delta:
correct output grid

TRAIN b9b7f026.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,15) and color black and layers
  _00: a rectangle with size (5,4) and color green and mask Full at (0,10)
  _0: a rectangle with size (6,8) and color red and mask Full at (1,0)
  _01: a rectangle with size (3,4) and color orange and mask Border at (11,10)
  _011: a rectangle with size (4,4) and color yellow and mask Full at (6,9)
  _0111: a rectangle with size (4,4) and color cyan and mask Full at (9,4)
diff: 
delta: (8,1)=5# (8,2)=5# (8,3)=5# (9,1)=5# (9,2)=5# (9,3)=5# (10,1)=5# (10,2)=5# (10,3)=5#
correct output grid

TEST b9b7f026.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 5.8 sec (5.8 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-109] Checking task ba26e723.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 15472.9 = 15488.5
DL output with Mo: L = 15.6 + 25847.4 = 25863.0
DL input+output M: L = 31.2 + 41320.2 = 41351.5

# learning a model for train pairs
2.000	
1.297	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.175	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.142	OUT DEF: ^.size=^.size
1.123	OUT DEF: ^.layer_0.pos=^.layer_0.pos + 1
1.086	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.068	IN  DEF: ^.layer_0.shape.color=yellow
1.051	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.038	OUT OBJECT at ^.layer_000: a point with color ? at (?,?)
1.023	OUT OBJECT at ^.layer_0001: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: a point with color ? at (?,?)
  _0001: a point with color ? at (?,?)
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos + 1
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 51.2 + 4276.7 = 4327.8
DL output with Mo: L = 147.4 + 19077.3 = 19224.7
DL input+output M: L = 198.5 + 23354.0 = 23552.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color yellow and mask x.x.x.x.x.|xxxxxxxxxx|.x.x.x.x.x at (0,0)
diff: 
delta:
   (79.3 bits)
data: a background with size (3,10) and color black and layers
  _000: a point with color pink at (0,0)
  _0001: a point with color yellow at (0,2)
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _0: a rectangle with size (1,8) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (1,9)
diff: 
delta: (0,6)=6  (0,8)=4  (1,0)=6  (1,3)=6  (1,6)=6  (2,1)=4  (2,3)=6  (2,7)=4 
   (311.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (3,10) and color yellow and mask x.x.x.x.x.|xxxxxxxxxx|.x.x.x.x.x at (0,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)

TRAIN ba26e723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask .x.x.x.x.x.|xxxxxxxxxxx|x.x.x.x.x.x at (0,0)
diff: 
delta:
   (82.8 bits)
data: a background with size (3,11) and color black and layers
  _000: a point with color yellow at (0,1)
  _0001: a point with color yellow at (0,5)
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,7)
  _0: a rectangle with size (1,5) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,9)
diff: 
delta: (0,3)=6  (1,0)=6  (1,3)=6  (1,6)=6  (1,10)=4  (2,0)=6  (2,2)=4  (2,4)=4  (2,6)=6  (2,10)=4 
   (359.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask .x.x.x.x.x.|xxxxxxxxxxx|x.x.x.x.x.x at (0,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN ba26e723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask x.x.x.x.x.x|xxxxxxxxxxx|.x.x.x.x.x. at (0,0)
diff: 
delta:
   (82.8 bits)
data: a background with size (3,11) and color black and layers
  _000: a point with color pink at (0,0)
  _0001: a point with color yellow at (0,2)
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _0: a rectangle with size (1,8) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,10)
diff: 
delta: (0,6)=6  (0,8)=4  (1,0)=6  (1,3)=6  (1,6)=6  (1,9)=6  (2,1)=4  (2,3)=6  (2,7)=4  (2,9)=6 
   (360.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,11) and color black and layers
  _0: a rectangle with size (3,11) and color yellow and mask x.x.x.x.x.x|xxxxxxxxxxx|.x.x.x.x.x. at (0,0)
diff: 
delta:
! 24 wrong pixels (generated / expected)

TRAIN ba26e723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask x.x.x.x.x.x.x|xxxxxxxxxxxxx|.x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (89.7 bits)
data: a background with size (3,13) and color black and layers
  _000: a point with color pink at (0,0)
  _0001: a point with color yellow at (0,2)
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,4)
  _0: a rectangle with size (1,11) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,12)
diff: 
delta: (0,6)=6  (0,8)=4  (0,10)=4  (1,0)=6  (1,3)=6  (1,6)=6  (1,9)=6  (2,1)=4  (2,3)=6  (2,7)=4  (2,9)=6  (2,11)=4 
   (412.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,13) and color yellow and mask x.x.x.x.x.x.x|xxxxxxxxxxxxx|.x.x.x.x.x.x. at (0,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TRAIN ba26e723.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (3,14) and color yellow and mask .x.x.x.x.x.x.x|xxxxxxxxxxxxxx|x.x.x.x.x.x.x. at (0,0)
diff: 
delta:
   (93.0 bits)
data: a background with size (3,14) and color black and layers
  _000: a point with color yellow at (0,1)
  _0001: a point with color yellow at (0,5)
  _00: a rectangle with size (3,2) and color yellow and mask x.|xx|.x at (0,7)
  _0: a rectangle with size (1,11) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,3) and color yellow and mask Full (and Border) at (0,11)
diff: 
delta: (0,3)=6  (0,9)=6  (0,12)=0  (1,0)=6  (1,3)=6  (1,6)=6  (1,9)=6  (1,12)=6  (2,0)=6  (2,2)=4  (2,4)=4  (2,6)=6  (2,10)=4  (2,12)=6 
   (464.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (3,14) and color yellow and mask .x.x.x.x.x.x.x|xxxxxxxxxxxxxx|x.x.x.x.x.x.x. at (0,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN ba26e723.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color yellow and mask .x.x.x.x.x.x.x.x.|xxxxxxxxxxxxxxxxx|x.x.x.x.x.x.x.x.x at (0,0)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TEST ba26e723.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.0 sec (26.0 sec/task)
bits-train-error = 19077.3 bits (19077.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-108] Checking task ba97ae07.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 27913.2 = 27928.8
DL output with Mo: L = 15.6 + 27913.2 = 27928.8
DL input+output M: L = 31.2 + 55826.3 = 55857.5

# learning a model for train pairs
2.000	
1.438	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.949	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.568	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.210	OUT OBJECT at ^.layer_00: ^.layer_01
0.162	OUT DEF: ^.layer_0=^.layer_0
0.134	OUT DEF: ^.size=^.size
0.130	IN  DEF: ^.layer_0.shape.mask=Full
0.125	IN  DEF: ^.layer_01.shape.mask=Full
0.121	IN  DEF: ^.color=black
0.118	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_01
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 3178.2 = 3258.6
DL output with Mo: L = 28.3 + 0.0 = 28.3
DL input+output M: L = 108.6 + 3178.2 = 3286.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,13) and color green and mask Full at (3,0)
diff: 
delta:
   (90.1 bits)
data: a background with size (13,13) and color black and layers
  _00: a rectangle with size (3,13) and color green and mask Full at (3,0)
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (13,2) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (3,13) and color green and mask Full at (3,0)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
  _01: a rectangle with size (7,2) and color pink and mask Full at (0,2)
diff: 
delta:
   (78.4 bits)
data: a background with size (7,9) and color black and layers
  _00: a rectangle with size (7,2) and color pink and mask Full at (0,2)
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (1,9) and color blue and mask Full at (3,0)
  _01: a rectangle with size (7,2) and color pink and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
  _01: a rectangle with size (8,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (75.4 bits)
data: a background with size (8,7) and color black and layers
  _00: a rectangle with size (8,1) and color blue and mask Full at (0,2)
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,7) and color black and layers
  _0: a rectangle with size (1,7) and color orange and mask Full at (3,0)
  _01: a rectangle with size (8,1) and color blue and mask Full at (0,2)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,6) and color red and mask Full at (4,0)
diff: 
delta:
   (74.0 bits)
data: a background with size (8,6) and color black and layers
  _00: a rectangle with size (1,6) and color red and mask Full at (4,0)
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,1) and color green and mask Full at (0,1)
  _01: a rectangle with size (1,6) and color red and mask Full at (4,0)
diff: 
delta:
correct output grid

TRAIN ba97ae07.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,6) and color black and layers
  _0: a rectangle with size (11,2) and color yellow and mask Full at (0,2)
  _01: a rectangle with size (2,6) and color grey and mask Full at (2,0)
diff: 
delta:
correct output grid

TEST ba97ae07.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-107] Checking task bb43febb.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21079.1 = 21094.7
DL output with Mo: L = 15.6 + 21079.1 = 21094.7
DL input+output M: L = 31.2 + 42158.1 = 42189.3

# learning a model for train pairs
2.000	
1.384	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.982	OUT OBJECT at ^.layer_0: ^.layer_0
0.690	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.429	OUT OBJECT at ^.layer_01: ^.layer_01
0.210	OUT OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.178	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.158	OUT DEF: ^.size=^.size
0.146	OUT DEF: ^.layer_00.shape.size=^.layer_0.shape.size - 2
0.136	OUT DEF: ^.layer_00.pos=^.layer_0.pos + 1
0.125	OUT DEF: ^.layer_010.pos=^.layer_01.pos + 1
0.117	OUT DEF: ^.layer_010.shape.size=^.layer_01.shape.size - 2
0.112	IN  DEF: ^.layer_0.shape.color=grey
0.107	OUT DEF: ^.layer_00.shape.color=red
0.101	OUT DEF: ^.layer_010.shape.color=red
0.096	IN  DEF: ^.layer_01.shape.color=grey
0.093	OUT DEF: ^.layer_00.shape.mask=Full
0.090	OUT DEF: ^.layer_010.shape.mask=Full
0.087	IN  DEF: ^.layer_0.shape.mask=Full
0.084	IN  DEF: ^.layer_01.shape.mask=Full
0.081	IN  DEF: ^.color=black
0.079	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size ^.layer_0.shape.size - 2 and color red and mask Full at ^.layer_0.pos + 1
  _0: ^.layer_0
  _010: a rectangle with size ^.layer_01.shape.size - 2 and color red and mask Full at ^.layer_01.pos + 1
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 85.0 + 1456.7 = 1541.7
DL output with Mo: L = 123.0 + 0.0 = 123.0
DL input+output M: L = 208.0 + 1456.7 = 1664.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
   (72.3 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (3,1)
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _010: a rectangle with size (2,1) and color red and mask Full at (4,7)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (3,6)
diff: 
delta:
correct output grid

TRAIN bb43febb.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
   (73.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,4) and color red and mask Full at (2,2)
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _010: a rectangle with size (1,3) and color red and mask Full at (8,5)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask Full at (1,1)
  _01: a rectangle with size (3,5) and color grey and mask Full at (7,4)
diff: 
delta:
correct output grid

TRAIN bb43febb.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,7) and color grey and mask Full at (4,3)
  _01: a rectangle with size (3,6) and color grey and mask Full at (0,0)
diff: 
delta:
correct output grid

TEST bb43febb.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-106] Checking task bbc9ae5d.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2846.8 = 2862.4
DL output with Mo: L = 15.6 + 13644.9 = 13660.5
DL input+output M: L = 31.2 + 16491.8 = 16523.0

# learning a model for train pairs
2.000	
1.252	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.962	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.904	IN  DEF: ^.layer_0.shape.mask=Full
0.860	IN  DEF: ^.color=black
0.828	OUT DEF: ^.size.j=^.size.j
0.799	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.774	OUT DEF: ^.size.i=^.size.j / 2
0.750	OUT DEF: ^.layer_0.shape.size.i=^.size.j / 2
0.729	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.720	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.j / 2,^.size.j) and color black and layers
  _0: a rectangle with size (^.size.j / 2,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 48.0 + 1692.8 = 1740.7
DL output with Mo: L = 75.7 + 1458.4 = 1534.1
DL input+output M: L = 123.6 + 3151.2 = 3274.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta:
   (33.3 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask xx..|xxx.|xxxx at (0,0)
diff: 
delta:
   (23.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (1,8) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
   (32.6 bits)
data: a background with size (4,8) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask x...|xx..|xxx.|xxxx at (0,0)
diff: 
delta:
   (29.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,8) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (1,10) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (36.7 bits)
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (5,7) and color grey and mask xxx....|xxxx...|xxxxx..|xxxxxx.|xxxxxxx at (0,0)
diff: 
delta:
   (46.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,10) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (0,0)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (0,0)
diff: 
delta:
   (35.3 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,6) and color cyan and mask xxxx..|xxxxx.|xxxxxx at (0,0)
diff: 
delta:
   (26.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta:
   (31.3 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask x..|xx.|xxx at (0,0)
diff: 
delta:
   (20.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN bbc9ae5d.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,12) and color black and layers
  _0: a rectangle with size (1,3) and color blue and mask Full at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TEST bbc9ae5d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 1458.4 bits (1458.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-105] Checking task bc1d5164.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10157.3 = 10172.9
DL output with Mo: L = 15.6 + 4885.4 = 4901.0
DL input+output M: L = 31.2 + 15042.7 = 15073.9

# learning a model for train pairs
2.000	
1.570	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.427	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.304	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size + 1
1.213	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.133	OUT DEF: ^.layer_0.pos='(0,0)
1.067	OUT DEF: ^.size.i=3
1.002	OUT DEF: ^.size.j=3
0.989	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size + 1 and color ? and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 7632.1 = 7712.5
DL output with Mo: L = 53.3 + 1080.2 = 1133.5
DL input+output M: L = 133.6 + 8712.3 = 8846.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (5,1) and color cyan and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (0,5)
diff: 
delta: (1,0)=8  (2,1)=0  (3,0)=8  (3,5)=8  (3,6)=8  (4,5)=8 
   (227.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask +-cross at (0,0)
diff: 
delta:
   (15.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (5,1) and color cyan and mask Full at (0,1)
  _0: a rectangle with size (5,1) and color cyan and mask Full at (0,5)
diff: 
delta: (1,0)=8  (1,6)=8  (2,1)=0  (2,5)=0  (3,0)=8  (3,6)=8 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (5,1) and color cyan and mask Full at (0,1)
  _0: a rectangle with size (2,2) and color cyan and mask x.|xx at (0,5)
diff: 
delta: (1,0)=8  (2,1)=0  (3,0)=8  (3,5)=8  (3,6)=8  (4,5)=8 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,5)
diff: 
delta: (3,1)=2  (3,5)=2  (4,0)=2  (4,6)=2 
   (177.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.xx|x.x at (0,0)
diff: 
delta:
   (21.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask xx|.x at (0,5)
  _0: a rectangle with size (1,2) and color red and mask Full at (0,0)
diff: 
delta: (3,1)=2  (3,5)=2  (4,0)=2  (4,6)=2 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _0: a rectangle with size (2,2) and color red and mask xx|.x at (0,5)
diff: 
delta: (3,1)=2  (3,5)=2  (4,0)=2  (4,6)=2 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
diff: 
delta: (4,0)=4  (4,6)=4 
   (129.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|.xx|x.x at (0,0)
diff: 
delta:
   (22.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
diff: 
delta: (4,0)=4  (4,6)=4 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _0: a rectangle with size (2,2) and color yellow and mask x.|xx at (0,5)
diff: 
delta: (4,0)=4  (4,6)=4 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
diff: 
delta: (0,6)=4  (4,0)=4 
   (119.6 bits)
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,3) and color black and mask .x.|xxx at (0,0)
diff: 
delta:
   (25.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
diff: 
delta: (0,6)=4  (4,0)=4 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,1) and color yellow and mask Full at (0,0)
  _0: a rectangle with size (1,2) and color yellow and mask Full at (4,5)
diff: 
delta: (0,6)=4  (4,0)=4 
! 9 wrong pixels (generated / expected)

TRAIN bc1d5164.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,5)
diff: 
delta: (4,6)=3 
   (109.7 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,0)
diff: 
delta:
   (23.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _0: a rectangle with size (2,2) and color green and mask Even Checkboard at (0,5)
diff: 
delta: (4,6)=3 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,0)
  _0: a rectangle with size (1,1) and color green and mask Full at (0,5)
diff: 
delta: (1,6)=3  (4,6)=3 
! 6 wrong pixels (generated / expected)

TRAIN bc1d5164.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,2) and color blue and mask Full at (0,5)
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,0)
diff: 
delta: (4,1)=1  (4,6)=1 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (1,1) and color blue and mask Full at (1,0)
  _0: a rectangle with size (1,2) and color blue and mask Full at (0,5)
diff: 
delta: (4,1)=1  (4,6)=1 
! 8 wrong pixels (generated / expected)

TEST bc1d5164.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 1080.2 bits (1080.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-104] Checking task bd4472b8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4838.8 = 4854.4
DL output with Mo: L = 15.6 + 13701.1 = 13716.7
DL input+output M: L = 31.2 + 18539.9 = 18571.1

# learning a model for train pairs
2.000	
1.743	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.592	OUT OBJECT at ^.layer_0: ^.layer_0
1.503	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.413	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.337	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.287	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.234	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.191	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.139	OUT OBJECT at ^.layer_010: ^.layer_01
1.103	OUT OBJECT at ^.layer_0110: ^.layer_011
1.069	OUT DEF: ^.size=^.size
1.034	IN  DEF: ^.layer_0.shape.color=grey
1.013	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size
0.992	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01
  _01: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 91.0 + 2846.5 = 2937.5
DL output with Mo: L = 160.4 + 5147.0 = 5307.4
DL input+output M: L = 251.4 + 7993.5 = 8244.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color yellow at (0,2)
diff: 
delta: (0,1)=1 
   (95.2 bits)
data: a background with size (8,3) and color blue and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _010: a point with color red at (0,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _0110: a point with color yellow at (0,2)
  _011: a rectangle with size (1,3) and color yellow and mask Full at (4,0)
  _0111: a rectangle with size (1,3) and color red and mask Full at (5,0)
  _01111: a rectangle with size (1,3) and color yellow and mask Full at (7,0)
diff: 
delta:
   (101.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color blue at (0,1)
diff: 
delta: (0,2)=4 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color blue at (0,1)
  _011: a point with color red at (0,0)
diff: 
delta: (0,2)=4 
! 20 wrong pixels (generated / expected)

TRAIN bd4472b8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=1  (0,3)=4 
   (125.2 bits)
data: a background with size (10,4) and color blue and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _010: a point with color green at (0,0)
  _01: a rectangle with size (1,4) and color green and mask Full at (2,0)
  _0110: a point with color red at (0,1)
  _011: a rectangle with size (1,4) and color red and mask Full at (3,0)
  _0111: a rectangle with size (1,4) and color yellow and mask Full at (5,0)
  _01111: a rectangle with size (1,4) and color green and mask Full at (6,0)
diff: 
delta: (0,3)=4  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (9,0)=4  (9,1)=4  (9,2)=4  (9,3)=4 
   (324.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=1  (0,3)=4 
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,4) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,1)
  _011: a point with color green at (0,0)
diff: 
delta: (0,2)=1  (0,3)=4 
! 35 wrong pixels (generated / expected)

TRAIN bd4472b8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (0,1)
diff: 
delta:
   (64.2 bits)
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _010: a point with color cyan at (0,0)
  _01: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
  _0110: a point with color green at (0,1)
  _011: a rectangle with size (1,2) and color green and mask Full at (3,0)
  _0111: a rectangle with size (1,2) and color cyan and mask Full at (4,0)
  _01111: a rectangle with size (1,2) and color green and mask Full at (5,0)
diff: 
delta:
   (88.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color green at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (1,0)
  _01: a point with color green at (0,1)
  _011: a point with color cyan at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,2) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,0)
  _01: a point with color green at (0,1)
  _011: a point with color grey at (1,0)
diff:   ^.layer_0.shape.color
delta: (1,1)=5#
! 9 wrong pixels (generated / expected)

TRAIN bd4472b8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (1,0)
  _01: a point with color blue at (0,0)
  _011: a point with color red at (0,1)
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=8 
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,5) and color black and layers
  _0: a rectangle with size (1,5) and color grey and mask Full at (1,0)
  _01: a point with color red at (0,1)
  _011: a point with color blue at (0,0)
diff: 
delta: (0,2)=3  (0,3)=4  (0,4)=8 
! 54 wrong pixels (generated / expected)

TEST bd4472b8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.0 sec (25.0 sec/task)
bits-train-error = 5147.0 bits (5147.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-103] Checking task bda2d7a6.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16251.0 = 16266.6
DL output with Mo: L = 15.6 + 16251.0 = 16266.6
DL input+output M: L = 31.2 + 32502.0 = 32533.2

# learning a model for train pairs
2.000	
1.416	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.833	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.590	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.346	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.313	OUT DEF: ^.size=^.size
0.289	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.270	OUT DEF: ^.layer_01.shape.size=^.layer_0.shape.size - 2
0.251	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.232	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.220	OUT DEF: ^.color=^.layer_01.shape.color
0.210	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.199	IN  DEF: ^.layer_0.shape.mask=Border
0.189	OUT DEF: ^.layer_0.shape.color=^.color
0.179	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.172	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.164	IN  DEF: ^.layer_01.shape.mask=Border

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_01.shape.color and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_0.shape.size - 2 and color ^.layer_0.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)

DL input  with Mi: L = 85.9 + 2496.1 = 2582.0
DL output with Mo: L = 91.2 + 0.0 = 91.2
DL input+output M: L = 177.1 + 2496.1 = 2673.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color green and layers
  _0: a rectangle with size (4,4) and color red and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color black and mask Border at (2,2)
diff: 
delta:
   (82.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Border at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color green and mask Border at (0,0)
  _01: a rectangle with size (4,4) and color red and mask Border at (1,1)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Border at (2,2)
diff: 
delta:
   (75.6 bits)
data: a background with size (6,6) and color pink and layers
  _0: a rectangle with size (4,4) and color black and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color orange and mask Border at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color orange and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color pink and mask Border at (2,2)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (6,6) and color black and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,2)
diff: 
delta:
   (91.8 bits)
data: a background with size (8,8) and color grey and layers
  _0: a rectangle with size (6,6) and color cyan and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color black and mask Border at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color cyan and layers
  _0: a rectangle with size (6,6) and color black and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (2,2)
diff: 
delta:
correct output grid

TRAIN bda2d7a6.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Border at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Border at (2,2)
diff: 
delta:
! 34 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color brown and layers
  _0: a rectangle with size (4,4) and color black and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color blue and mask Border at (2,2)
diff: 
delta:
correct output grid

TEST bda2d7a6.json/1: 1 2nd (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (6,6) and color orange and mask Border at (1,1)
  _01: a rectangle with size (4,4) and color pink and mask Border at (2,2)
diff: 
delta:
correct output grid

TEST bda2d7a6.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 4.4 sec (4.4 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.75

=====================================
[-102] Checking task bdad9b1f.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2355.6 = 2371.2
DL output with Mo: L = 15.6 + 5685.4 = 5701.0
DL input+output M: L = 31.2 + 8041.0 = 8072.2

# learning a model for train pairs
2.000	
1.697	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.386	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.224	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.047	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.987	OUT DEF: ^.size=^.size
0.940	IN  DEF: ^.layer_0.shape.color=red
0.893	IN  DEF: ^.layer_01.shape.color=cyan
0.858	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.826	OUT OBJECT at ^.layer_00: a point with color ? at (?,?)
0.796	OUT DEF: ^.layer_00.pos=corner(^.layer_0.pos, ^.layer_01.pos)
0.767	OUT DEF: ^.layer_0.shape.size.j=^.size.j
0.739	OUT DEF: ^.layer_01.shape.size.i=^.size.i
0.711	IN  DEF: ^.layer_0.shape.mask=Full
0.683	IN  DEF: ^.layer_01.shape.mask=Full
0.662	IN  DEF: ^.color=black
0.642	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.622	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.605	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.588	OUT DEF: ^.layer_0.pos.j='0
0.576	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.565	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.553	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.j
0.541	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.522	OUT DEF: ^.layer_00.shape.color=yellow
0.513	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a point with color yellow at corner(^.layer_0.pos, ^.layer_01.pos)
  _0: a rectangle with size (^.layer_0.shape.size.i,^.size.j) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (^.layer_0.pos.i,'0)
  _01: a rectangle with size (^.size.i,^.layer_01.shape.size.j) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask Full at (?,?)

DL input  with Mi: L = 85.0 + 1078.0 = 1163.0
DL output with Mo: L = 129.4 + 0.0 = 129.4
DL input+output M: L = 214.4 + 1078.0 = 1292.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,4)
diff: 
delta:
   (53.9 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (2,4)
  _0: a rectangle with size (1,6) and color red and mask Full at (2,0)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (0,4)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,4)
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (53.9 bits)
data: a background with size (6,6) and color black and layers
  _00: a point with color yellow at (3,1)
  _0: a rectangle with size (1,6) and color red and mask Full at (3,0)
  _01: a rectangle with size (6,1) and color cyan and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN bdad9b1f.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (4,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,3)
diff: 
delta:
correct output grid

TEST bdad9b1f.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.7 sec (1.7 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-101] Checking task be94b721.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16492.8 = 16508.4
DL output with Mo: L = 15.6 + 3183.0 = 3198.6
DL input+output M: L = 31.2 + 19675.8 = 19707.0

# learning a model for train pairs
2.000	
1.673	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.976	OUT OBJECT at ^.layer_0: ^.layer_0.shape at (?,?)
0.777	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.613	OUT DEF: ^.size=^.layer_0.shape.size
0.490	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.390	OUT DEF: ^.layer_0.pos='(0,0)
0.359	OUT DEF: ^.color=black
0.353	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: ^.layer_0.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 112.4 + 5560.6 = 5673.0
DL output with Mo: L = 30.3 + 0.0 = 30.3
DL input+output M: L = 142.7 + 5560.6 = 5703.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (1,1)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|xxx at (2,8)
  _011: a rectangle with size (2,2) and color green and mask xx|.x at (1,5)
diff: 
delta:
   (147.7 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,13) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|.x.|.xx|xxx at (1,1)
  _01: a rectangle with size (3,3) and color blue and mask .x.|xx.|xxx at (2,8)
  _011: a rectangle with size (2,2) and color green and mask xx|.x at (1,5)
diff: 
delta:
correct output grid

TRAIN be94b721.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (1,4)
  _01: a rectangle with size (3,3) and color green and mask +-cross at (1,0)
  _011: a rectangle with size (2,2) and color pink and mask xx|.x at (0,7)
diff: 
delta:
   (120.9 bits)
data: a background with size (3,2) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,10) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (1,4)
  _01: a rectangle with size (3,3) and color green and mask +-cross at (1,0)
  _011: a rectangle with size (2,2) and color pink and mask xx|.x at (0,7)
diff: 
delta:
correct output grid

TRAIN be94b721.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (1,1)
  _01: a rectangle with size (4,2) and color orange and mask xx|.x|.x|.x at (1,8)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
diff: 
delta:
   (148.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,11) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask xxx|.x.|xx.|xx. at (1,1)
  _01: a rectangle with size (4,2) and color orange and mask xx|.x|.x|.x at (1,8)
  _011: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
diff: 
delta:
correct output grid

TRAIN be94b721.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (1,6)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|.x. at (4,0)
  _011: a rectangle with size (3,2) and color orange and mask x.|xx|.x at (1,3)
diff: 
delta:
   (139.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask xxx|.x.|xxx at (1,6)
  _01: a rectangle with size (2,3) and color cyan and mask xxx|.x. at (4,0)
  _011: a rectangle with size (3,2) and color orange and mask x.|xx|.x at (1,3)
diff: 
delta:
correct output grid

TRAIN be94b721.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask xxx|xxx|x.x|x.x at (2,3)
  _01: a rectangle with size (3,3) and color pink and mask .xx|xxx|xx. at (6,6)
  _011: a rectangle with size (2,3) and color grey and mask xxx|xx. at (7,1)
diff: 
delta: (1,0)=4  (2,0)=4  (2,1)=4  (3,1)=4 
correct output grid

TEST be94b721.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 1.5 sec (1.5 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-100] Checking task beb8660c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11196.4 = 11212.0
DL output with Mo: L = 15.6 + 11196.4 = 11212.0
DL input+output M: L = 31.2 + 22392.7 = 22423.9

# learning a model for train pairs
2.000	
1.786	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.491	OUT OBJECT at ^.layer_0: ^.layer_0
1.336	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.180	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.030	OUT OBJECT at ^.layer_011: ^.layer_01.shape at (?,?)
0.932	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.884	OUT DEF: ^.layer_01.shape=^.layer_011.shape
0.841	OUT DEF: ^.size=^.size
0.826	IN  DEF: ^.layer_0.shape.color=cyan
0.814	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i - 1
0.803	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.i - 2
0.792	OUT DEF: ^.layer_011.pos.j=^.layer_011.shape.size.i
0.781	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j + 2
0.773	IN  DEF: ^.layer_0.shape.mask=Full
0.764	IN  DEF: ^.layer_01.shape.mask=Full
0.755	IN  DEF: ^.layer_011.shape.mask=Full
0.748	OUT DEF: ^.color=black
0.741	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_011.shape at (^.layer_0.pos.i - 2,^.layer_0.pos.j + 2)
  _011: ^.layer_01.shape at (^.layer_0.pos.i - 1,^.layer_011.shape.size.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 114.7 + 5314.9 = 5429.7
DL output with Mo: L = 125.7 + 2758.1 = 2883.8
DL input+output M: L = 240.4 + 8073.0 = 8313.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _011: a rectangle with size (1,5) and color pink and mask Full at (6,0)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
   (348.6 bits)
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,5) and color pink and mask Full at (7,2)
  _011: a rectangle with size (1,6) and color grey and mask Full at (8,1)
diff: 
delta: (3,6)=3  (4,5)=2  (4,6)=2  (5,4)=1  (5,5)=1  (5,6)=1  (6,3)=4  (6,4)=4  (6,5)=4  (6,6)=4 
   (250.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _011: a rectangle with size (1,5) and color pink and mask Full at (6,0)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _01: a rectangle with size (1,5) and color pink and mask Full at (6,0)
  _011: a rectangle with size (1,6) and color grey and mask Full at (4,1)
diff: 
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,7) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (4,1)
  _01: a rectangle with size (1,7) and color cyan and mask Full at (9,0)
  _011: a rectangle with size (1,5) and color pink and mask Full at (6,0)
diff:   ^.layer_0.shape.color
delta: (0,1)=2  (0,2)=2  (1,4)=3  (2,0)=1  (2,1)=1  (2,2)=1  (7,3)=4  (7,4)=4  (7,5)=4  (7,6)=4 
! 41 wrong pixels (generated / expected)

TRAIN beb8660c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,1)
diff: 
delta: (0,3)=1 
   (110.1 bits)
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (4,2)
  _011: a rectangle with size (1,3) and color red and mask Full at (5,1)
diff: 
delta: (3,3)=1 
   (25.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,1)
diff: 
delta: (0,3)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (4,1)
  _011: a rectangle with size (1,3) and color red and mask Full at (2,0)
diff: 
delta: (0,3)=1 
! 6 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,4) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (2,0)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (6,0)
  _011: a rectangle with size (1,2) and color green and mask Full at (4,1)
diff:   ^.layer_0.shape.color
delta: (0,3)=1 
! 18 wrong pixels (generated / expected)

TRAIN beb8660c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
diff: 
delta:
   (72.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (2,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color yellow and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN beb8660c.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,8) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _011: a rectangle with size (1,6) and color green and mask Full at (7,2)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,8) and color black and layers
  _0: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (1,6) and color green and mask Full at (7,2)
  _011: a rectangle with size (1,7) and color red and mask Full at (6,0)
diff: 
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 28 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (11,8) and color black and layers
  _0: a rectangle with size (1,7) and color red and mask Full at (6,0)
  _01: a rectangle with size (1,8) and color cyan and mask Full at (10,0)
  _011: a rectangle with size (1,6) and color green and mask Full at (7,2)
diff:   ^.layer_0.shape.color
delta: (0,0)=6  (0,1)=6  (0,2)=6  (1,4)=1  (1,5)=1  (1,6)=1  (1,7)=1  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,5)=4  (4,5)=7# (4,6)=7# (8,1)=9#
! 48 wrong pixels (generated / expected)

TEST beb8660c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.4 sec (3.4 sec/task)
bits-train-error = 2758.1 bits (2758.1 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-99] Checking task c0f76784.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 26432.2 = 26447.8
DL output with Mo: L = 15.6 + 36885.0 = 36900.6
DL input+output M: L = 31.2 + 63317.2 = 63348.4

# learning a model for train pairs
2.000	
1.582	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.250	OUT OBJECT at ^.layer_0: ^.layer_0
0.944	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.695	OUT OBJECT at ^.layer_01: ^.layer_01
0.535	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.417	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.305	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.247	OUT OBJECT at ^.layer_010: ^.layer_010
0.229	OUT DEF: ^.size=^.size
0.219	OUT DEF: ^.layer_011.shape.size=^.layer_0.shape.size - 2
0.210	OUT DEF: ^.layer_011.pos=^.layer_0.pos + 1
0.200	OUT DEF: ^.layer_0111.pos=^.layer_010.pos + 1
0.192	OUT DEF: ^.layer_0111.shape.size=^.layer_0.shape.size / 2
0.186	IN  DEF: ^.layer_0.shape.color=grey
0.180	IN  DEF: ^.layer_0.shape.mask=Border
0.173	IN  DEF: ^.layer_010.shape.color=grey
0.167	IN  DEF: ^.layer_01.shape.color=grey
0.161	IN  DEF: ^.layer_01.shape.mask=Border
0.156	OUT DEF: ^.layer_011.shape.color=cyan
0.152	OUT DEF: ^.layer_0111.shape.color=orange
0.149	IN  DEF: ^.color=black
0.146	OUT DEF: ^.layer_011.shape.mask=Full
0.143	OUT DEF: ^.layer_0111.shape.mask=Full
0.141	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _010: ^.layer_010
  _01: ^.layer_01
  _011: a rectangle with size ^.layer_0.shape.size - 2 and color cyan and mask Full at ^.layer_0.pos + 1
  _0111: a rectangle with size ^.layer_0.shape.size / 2 and color orange and mask Full at ^.layer_010.pos + 1
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Border at (?,?)
  _010: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Border at (?,?)

DL input  with Mi: L = 124.0 + 3122.2 = 3246.2
DL output with Mo: L = 135.3 + 548.5 = 683.7
DL input+output M: L = 259.3 + 3670.7 = 3930.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
diff: 
delta:
   (105.6 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (1,8)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (7,7)
diff: 
delta: (3,3)=6 
   (27.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (6,6)
  _010: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _01: a rectangle with size (3,3) and color grey and mask Border at (2,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (0,7)
  _010: a rectangle with size (3,3) and color grey and mask Border at (2,2)
  _01: a rectangle with size (4,4) and color grey and mask Border at (6,6)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN c0f76784.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask Border at (7,1)
diff: 
delta:
   (105.6 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask Border at (7,1)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (5,7)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (1,2)
diff: 
delta: (8,2)=6 
   (27.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _01: a rectangle with size (3,3) and color grey and mask Border at (7,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (0,1)
  _010: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _01: a rectangle with size (3,3) and color grey and mask Border at (7,1)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (4,6)
  _010: a rectangle with size (3,3) and color grey and mask Border at (7,1)
  _01: a rectangle with size (4,4) and color grey and mask Border at (0,1)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TRAIN c0f76784.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _01: a rectangle with size (4,4) and color grey and mask Border at (7,4)
diff: 
delta:
   (101.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _01: a rectangle with size (4,4) and color grey and mask Border at (7,4)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (2,2)
  _0111: a rectangle with size (2,2) and color orange and mask Full at (8,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (1,4) and color grey and mask Full at (7,4)
  _01: a rectangle with size (4,4) and color grey and mask Border at (7,4)
diff: 
delta:
correct output grid

TRAIN c0f76784.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (4,4) and color grey and mask Border at (8,4)
  _01: a rectangle with size (3,3) and color grey and mask Border at (4,8)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Border at (8,4)
  _010: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _01: a rectangle with size (3,3) and color grey and mask Border at (4,8)
diff: 
delta:
! 14 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask Border at (1,1)
  _010: a rectangle with size (3,3) and color grey and mask Border at (4,8)
  _01: a rectangle with size (4,4) and color grey and mask Border at (8,4)
diff: 
delta:
! 5 wrong pixels (generated / expected)

TEST c0f76784.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 13.8 sec (13.8 sec/task)
bits-train-error = 548.5 bits (548.5 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-98] Checking task c1d99e64.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 70604.1 = 70619.7
DL output with Mo: L = 15.6 + 70604.1 = 70619.7
DL input+output M: L = 31.2 + 141208.1 = 141239.3

# learning a model for train pairs
2.000	
1.269	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.009	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.915	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.860	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.806	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 18959.2 = 19008.0
DL output with Mo: L = 145.1 + 37766.4 = 37911.6
DL input+output M: L = 194.0 + 56725.6 = 56919.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,19) and color blue and layers
  _0: a rectangle with size (12,19) and color black and mask ........x..........|........xx.........|........x.xxx......|.x......x..........|.x......x..........|..x....xxxx........|.xx....xx..........|..xx....x.x...x....|xxxxxxxxxxxxxxxxxxx|...xx...x.xx.......|..xx..xxx..xxx.x...|.x.x.xx.x....xx.... at (0,0)
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,11)=0  (0,13)=0  (0,15)=0  (1,1)=0  (1,3)=0  (1,16)=0  (2,4)=0  (2,5)=0  (2,14)=0  (2,16)=0  (2,18)=0  (4,4)=0  (5,4)=0  (5,12)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,5)=0  (6,16)=0  (6,18)=0  (10,17)=0 
   (912.0 bits)
data: a background with size (12,19) and color blue and layers
  _0: a rectangle with size (12,19) and color red and mask ........x..........|........x..........|........x..........|........x..........|........x..........|........x..........|........x..........|........x..........|xxxxxxxxxxxxxxxxxxx|........x..........|........x..........|........x.......... at (0,0)
  _01: a rectangle with size (3,6) and color black and mask xx....|.xxx.x|...xx. at (9,10)
  _011: a rectangle with size (3,5) and color black and mask xxx..|x.x..|...xx at (0,1)
  _0111: a rectangle with size (5,3) and color black and mask x..|x..|.x.|xx.|.xx at (3,1)
diff: 
delta: (0,11)=0  (0,13)=0  (0,15)=0  (1,9)=0  (1,16)=0  (2,10)=0  (2,11)=0  (2,12)=0  (2,14)=0  (2,16)=0  (2,18)=0  (4,4)=0  (5,4)=0  (5,7)=0  (5,9)=0  (5,10)=0  (5,12)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,5)=0  (6,7)=0  (6,16)=0  (6,18)=0  (7,10)=0  (7,14)=0  (9,3)=0  (9,4)=0  (10,2)=0  (10,3)=0  (10,6)=0  (10,7)=0  (10,17)=0  (11,1)=0  (11,3)=0  (11,5)=0  (11,6)=0 
   (1349.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color blue and layers
  _0: a rectangle with size (12,19) and color black and mask ........x..........|........xx.........|........x.xxx......|.x......x..........|.x......x..........|..x....xxxx........|.xx....xx..........|..xx....x.x...x....|xxxxxxxxxxxxxxxxxxx|...xx...x.xx.......|..xx..xxx..xxx.x...|.x.x.xx.x....xx.... at (0,0)
diff: 
delta: (0,1)=0  (0,2)=0  (0,3)=0  (0,11)=0  (0,13)=0  (0,15)=0  (1,1)=0  (1,3)=0  (1,16)=0  (2,4)=0  (2,5)=0  (2,14)=0  (2,16)=0  (2,18)=0  (4,4)=0  (5,4)=0  (5,12)=0  (5,15)=0  (5,16)=0  (5,17)=0  (6,5)=0  (6,16)=0  (6,18)=0  (10,17)=0 
! size mismatch, 10x10 instead of 12x19

TRAIN c1d99e64.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (12,13) and color black and mask ...x.....xx..|.xxxx....x...|.x.x.....xx..|x..x..xx.x...|...x..xxxx...|..xx..x.xx...|x..x.....xxx.|.xxx.....xx..|xx.x.....x...|.x.x.....xx.x|.x.xxxxxxx.x.|...x.....xx.x at (0,1)
diff: 
delta: (1,0)=0  (3,13)=0  (7,6)=0  (7,7)=0  (8,8)=0  (10,0)=0 
   (386.1 bits)
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (12,1) and color red and mask Full at (0,4)
  _01: a rectangle with size (12,1) and color red and mask Full at (0,10)
  _011: a rectangle with size (3,3) and color black and mask xx.|xxx|x.x at (3,7)
  _0111: a rectangle with size (5,3) and color black and mask x..|.xx|xx.|.x.|.x. at (6,1)
diff: 
delta: (0,11)=0  (1,0)=0  (1,2)=0  (1,3)=0  (1,5)=0  (2,2)=0  (2,11)=0  (3,1)=0  (3,13)=0  (5,3)=0  (6,11)=0  (6,12)=0  (7,6)=0  (7,7)=0  (7,11)=0  (8,8)=0  (9,11)=0  (9,13)=0  (10,0)=0  (10,5)=0  (10,6)=0  (10,7)=0  (10,8)=0  (10,9)=0  (10,12)=0  (11,11)=0  (11,13)=0 
   (899.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (12,13) and color black and mask ...x.....xx..|.xxxx....x...|.x.x.....xx..|x..x..xx.x...|...x..xxxx...|..xx..x.xx...|x..x.....xxx.|.xxx.....xx..|xx.x.....x...|.x.x.....xx.x|.x.xxxxxxx.x.|...x.....xx.x at (0,1)
diff: 
delta: (1,0)=0  (3,13)=0  (7,6)=0  (7,7)=0  (8,8)=0  (10,0)=0 
! size mismatch, 10x10 instead of 12x14

TRAIN c1d99e64.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,15) and color green and layers
  _0: a rectangle with size (17,15) and color black and mask .x.....x...x.x.|.x.x...x.x.xx.x|xxxxxxxxxxxxxxx|.xx.xx..x.x..xx|.x........x....|.x......xx.....|xx.x.x.x.xx....|.xx...xx.x.....|.x.....x.......|.xx............|.x......x......|.x...x.xx.x...x|xxxxxxxxxxxxxxx|.x.xx.x..x....x|.xx.x..x.x..xx.|.xx.....x..xx..|xx.....xx.x.x.. at (0,0)
diff: 
delta: (5,12)=0  (6,14)=0  (7,12)=0  (7,13)=0  (8,13)=0  (9,5)=0  (9,14)=0  (10,12)=0  (16,4)=0  (16,14)=0 
   (597.9 bits)
data: a background with size (17,15) and color green and layers
  _0: a rectangle with size (17,15) and color red and mask .x.............|.x.............|xxxxxxxxxxxxxxx|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|.x.............|xxxxxxxxxxxxxxx|.x.............|.x.............|.x.............|.x............. at (0,0)
  _01: a rectangle with size (6,6) and color black and mask .....x|.....x|...xx.|x.x.xx|.xx.x.|..x... at (3,5)
  _011: a rectangle with size (4,4) and color black and mask x..x|.x.x|..x.|.xx. at (13,6)
  _0111: a rectangle with size (4,5) and color black and mask ....x|..xx.|.xx..|x.x.. at (13,10)
diff: 
delta: (0,7)=0  (0,11)=0  (0,13)=0  (1,3)=0  (1,7)=0  (1,9)=0  (1,11)=0  (1,12)=0  (1,14)=0  (3,2)=0  (3,4)=0  (3,5)=0  (3,8)=0  (3,13)=0  (3,14)=0  (5,12)=0  (6,0)=0  (6,3)=0  (6,14)=0  (7,2)=0  (7,12)=0  (7,13)=0  (8,13)=0  (9,2)=0  (9,5)=0  (9,14)=0  (10,8)=0  (10,12)=0  (11,5)=0  (11,7)=0  (11,8)=0  (11,10)=0  (11,14)=0  (13,3)=0  (13,4)=0  (14,2)=0  (14,4)=0  (15,2)=0  (16,0)=0  (16,4)=0  (16,14)=0 
   (1528.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,15) and color green and layers
  _0: a rectangle with size (17,15) and color black and mask .x.....x...x.x.|.x.x...x.x.xx.x|xxxxxxxxxxxxxxx|.xx.xx..x.x..xx|.x........x....|.x......xx.....|xx.x.x.x.xx....|.xx...xx.x.....|.x.....x.......|.xx............|.x......x......|.x...x.xx.x...x|xxxxxxxxxxxxxxx|.x.xx.x..x....x|.xx.x..x.x..xx.|.xx.....x..xx..|xx.....xx.x.x.. at (0,0)
diff: 
delta: (5,12)=0  (6,14)=0  (7,12)=0  (7,13)=0  (8,13)=0  (9,5)=0  (9,14)=0  (10,12)=0  (16,4)=0  (16,14)=0 
! size mismatch, 10x10 instead of 17x15

TRAIN c1d99e64.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (27,25) and color yellow and layers
  _0: a rectangle with size (27,25) and color black and mask ...x..xx.............x.xx|...xx.x..x......x....x.xx|xxxxxxxxxxxxxxxxxxxxxxxxx|.x...xx.....x........x..x|..x...xxxx........x..x...|...x..x..........x.x.x...|.xx.x.x......x.x...x.x...|.....xx.x.xx..xx...xxxx.x|......x..x..x..xx.x.xx.x.|......xx.....xx.x...xx...|.x...xx.x..x..x..x..xxxx.|..x.xxx...x......x...x...|xxxxxxxxxxxxxxxxxxxxxxxxx|x..xxxxx....x..xx....xx..|......x....x.x..x....x...|.....xx...xx........xx...|......x.....x........x...|.....xx...x.x........xx..|...x..xx.x...........xxxx|..x...x..x...x...x..xxx..|xxxxxxxxxxxxxxxxxxxxxxxxx|....x.x.x...xxxx.x...x...|......x.x.x..x..x....x...|......x..xxxx...xx...x...|......x.xxx.....x.x..xx..|......xx.x.....xxx.x.x...|......x.x.....x....xxx... at (0,0)
diff: 
delta: (0,1)=0  (0,12)=0  (0,18)=0  (4,14)=0  (5,23)=0  (8,0)=0  (8,3)=0  (9,3)=0  (15,8)=0  (15,23)=0  (16,0)=0  (16,14)=0  (16,17)=0  (16,24)=0  (17,0)=0  (17,14)=0  (22,0)=0  (22,19)=0  (23,24)=0  (24,1)=0  (24,3)=0  (24,24)=0  (25,2)=0  (25,4)=0  (25,12)=0  (26,1)=0  (26,2)=0 
! size mismatch, 10x10 instead of 27x25

TEST c1d99e64.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 28.3 sec (28.3 sec/task)
bits-train-error = 37766.4 bits (37766.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-97] Checking task c3e719e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3805.6 = 3821.2
DL output with Mo: L = 15.6 + 27590.1 = 27605.8
DL input+output M: L = 31.2 + 31395.8 = 31427.0

# learning a model for train pairs
2.000	
1.711	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.588	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.522	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.468	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.422	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.381	OUT OBJECT at ^.layer_00: ^.layer_0.shape at (?,?)
1.347	OUT OBJECT at ^.layer_010: ^.layer_0.shape at (?,?)
1.314	OUT OBJECT at ^.layer_001: ^.layer_0.shape at (?,?)
1.286	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0.shape at (?,?)
  _001: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 68.9 + 3031.0 = 3099.9
DL output with Mo: L = 211.6 + 12898.3 = 13109.9
DL input+output M: L = 280.6 + 15929.3 = 16209.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,1)
  _01: a point with color orange at (0,2)
diff: 
delta: (1,0)=9# (2,0)=7# (2,1)=9#
   (135.4 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,1)
  _001: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (3,4)
  _0: a rectangle with size (9,9) and color green and mask x........|.x.......|..x......|...x.....|....x....|.....x...|......x..|.......x.|........x at (0,0)
  _010: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,7)
  _01: a rectangle with size (2,2) and color brown and mask Full (and Border) at (1,0)
  _011: a rectangle with size (2,2) and color brown and mask Full (and Border) at (4,3)
  _0111: a rectangle with size (2,2) and color brown and mask Full (and Border) at (7,6)
diff: 
delta: (0,2)=7# (2,0)=7# (3,5)=7# (5,3)=7# (6,8)=7# (8,6)=7#
   (384.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,1)
  _01: a point with color orange at (0,2)
diff: 
delta: (1,0)=9# (2,0)=7# (2,1)=9#
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color green and layers
  _0: a rectangle with size (2,2) and color brown and mask Even Checkboard at (1,0)
  _01: a point with color cyan at (0,1)
diff: 
delta: (0,2)=7# (1,2)=8  (2,0)=7#
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _01: a point with color pink at (0,1)
diff: 
delta:
   (60.8 bits)
data: a background with size (9,9) and color cyan and layers
  _00: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _001: a rectangle with size (1,2) and color green and mask Full at (1,6)
  _0: a rectangle with size (3,6) and color black and mask Full at (3,0)
  _010: a rectangle with size (1,2) and color green and mask Full at (4,6)
  _01: a rectangle with size (6,3) and color black and mask Full at (0,3)
  _011: a rectangle with size (1,8) and color green and mask Full at (7,0)
  _0111: a rectangle with size (7,1) and color pink and mask Full at (0,7)
diff: 
delta: (0,1)=6  (2,7)=8  (5,7)=8  (6,1)=6  (6,4)=6  (7,2)=8  (7,5)=8 
   (374.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (1,0)
  _01: a point with color pink at (0,1)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,1)
  _01: a point with color green at (1,0)
diff: 
delta: (1,1)=3 
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,2)
  _01: a point with color pink at (0,0)
diff: 
delta: (1,0)=4  (1,1)=6 
   (106.8 bits)
data: a background with size (9,9) and color black and layers
  _00: a rectangle with size (2,1) and color cyan and mask Full at (1,5)
  _001: a rectangle with size (2,1) and color cyan and mask Full at (1,8)
  _0: a rectangle with size (1,5) and color brown and mask Full at (0,4)
  _010: a rectangle with size (2,1) and color cyan and mask Full at (7,2)
  _01: a rectangle with size (1,5) and color brown and mask Full at (2,3)
  _011: a rectangle with size (1,5) and color brown and mask Full at (6,1)
  _0111: a rectangle with size (1,5) and color brown and mask Full at (8,0)
diff: 
delta: (0,3)=6  (0,6)=6  (1,3)=4  (1,4)=6  (1,6)=4  (1,7)=6  (6,0)=6  (6,3)=6  (7,0)=4  (7,1)=6  (7,3)=4  (7,4)=6  (7,5)=8  (8,5)=8 
   (531.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,2)
  _01: a point with color pink at (0,0)
diff: 
delta: (1,0)=4  (1,1)=6 
! size mismatch, 10x10 instead of 9x9

TRAIN c3e719e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color orange and layers
  _0: a rectangle with size (3,3) and color blue and mask xx.|..x|.x. at (0,0)
  _01: a point with color yellow at (1,1)
diff: 
delta: (2,0)=5#
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,2)
  _01: a point with color orange at (1,0)
diff: 
delta: (1,1)=4  (2,0)=5# (2,2)=7#
! size mismatch, 10x10 instead of 9x9

TEST c3e719e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.3 sec (27.3 sec/task)
bits-train-error = 12898.3 bits (12898.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-96] Checking task c3f564a4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 170618.5 = 170634.1
DL output with Mo: L = 15.6 + 167859.2 = 167874.8
DL input+output M: L = 31.2 + 338477.7 = 338508.9

# learning a model for train pairs
2.000	
1.937	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.890	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.843	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.799	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 159889.1 = 159937.9
DL output with Mo: L = 113.3 + 144519.8 = 144633.0
DL input+output M: L = 162.1 + 304408.9 = 304571.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (6,8) and color black and mask ....xxxx|....xxxx|xxx.xxxx|xxxx....|xxxx....|xxxx.... at (9,6)
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,8)=4  (0,9)=5# (0,11)=2  (0,12)=3  (0,13)=4  (0,14)=5# (1,0)=2  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=2  (1,6)=3  (1,7)=4  (1,8)=5# (1,10)=2  (1,11)=3  (1,12)=4  (1,13)=5# (1,15)=2  (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=2  (2,5)=3  (2,6)=4  (2,7)=5# (2,9)=2  (2,10)=3  (2,11)=4  (2,12)=5# (2,14)=2  (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=4  (3,6)=5# (3,8)=2  (3,9)=3  (3,10)=4  (3,11)=5# (3,13)=2  (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=4  (4,5)=5# (4,7)=2  (4,8)=3  (4,9)=4  (4,10)=5# (4,12)=2  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,3)=4  (5,4)=5# (5,6)=2  (5,7)=3  (5,8)=4  (5,9)=5# (5,11)=2  (5,12)=0  (5,13)=0  (5,14)=5# (6,0)=2  (6,1)=3  (6,2)=4  (6,3)=5# (6,5)=2  (6,6)=3  (6,7)=4  (6,8)=5# (6,10)=2  (6,11)=3  (6,12)=0  (6,13)=0  (6,15)=2  (7,0)=3  (7,1)=4  (7,2)=5# (7,4)=2  (7,5)=3  (7,6)=4  (7,7)=5# (7,9)=2  (7,10)=3  (7,11)=4  (7,12)=5# (7,14)=2  (7,15)=3  (8,0)=4  (8,1)=5# (8,3)=2  (8,4)=3  (8,5)=4  (8,6)=5# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,13)=2  (8,14)=3  (8,15)=4  (9,0)=5# (9,2)=2  (9,3)=3  (9,4)=4  (9,5)=5# (9,7)=2  (9,8)=3  (9,9)=4  (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,6)=2  (10,7)=3  (10,8)=4  (10,9)=5# (10,14)=5# (11,0)=2  (11,1)=3  (11,2)=4  (11,3)=5# (11,5)=2  (11,15)=2  (12,0)=3  (12,1)=4  (12,2)=5# (12,4)=2  (12,5)=3  (12,10)=3  (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,0)=4  (13,1)=5# (13,3)=2  (13,4)=3  (13,5)=4  (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,0)=5# (14,2)=2  (14,3)=3  (14,4)=4  (14,5)=5# (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,6)=2  (15,7)=3  (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
   (4994.3 bits)
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (15,15) and color grey and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (0,0)
  _01: a rectangle with size (15,15) and color red and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (1,1)
  _011: a rectangle with size (14,14) and color yellow and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (0,0)
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,8)=4  (0,9)=5# (0,11)=2  (0,12)=3  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,5)=2  (1,6)=3  (1,7)=4  (1,8)=5# (1,10)=2  (1,11)=3  (2,0)=3  (2,1)=4  (2,2)=5# (2,4)=2  (2,5)=3  (2,6)=4  (2,7)=5# (2,9)=2  (2,10)=3  (2,15)=3  (3,0)=4  (3,1)=5# (3,3)=2  (3,4)=3  (3,5)=4  (3,6)=5# (3,8)=2  (3,9)=3  (3,14)=3  (3,15)=4  (4,0)=5# (4,2)=2  (4,3)=3  (4,4)=4  (4,5)=5# (4,7)=2  (4,8)=3  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,3)=4  (5,4)=5# (5,6)=2  (5,7)=3  (5,12)=3  (5,13)=4  (5,14)=5# (6,0)=2  (6,1)=3  (6,2)=4  (6,3)=5# (6,5)=2  (6,6)=3  (6,11)=3  (6,12)=4  (6,13)=5# (6,15)=2  (7,0)=3  (7,1)=4  (7,2)=5# (7,4)=2  (7,5)=3  (7,10)=3  (7,11)=4  (7,12)=5# (7,14)=2  (7,15)=3  (8,0)=4  (8,1)=5# (8,3)=2  (8,4)=3  (8,9)=3  (8,10)=4  (8,11)=5# (8,13)=2  (8,14)=3  (8,15)=4  (9,0)=5# (9,2)=2  (9,3)=3  (9,8)=3  (9,9)=4  (9,10)=5# (9,12)=2  (9,13)=3  (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,7)=3  (10,8)=4  (10,9)=5# (10,11)=2  (10,12)=3  (10,13)=4  (10,14)=5# (11,0)=2  (11,1)=3  (11,6)=3  (11,7)=4  (11,8)=5# (11,10)=2  (11,11)=3  (11,12)=4  (11,13)=5# (11,15)=2  (12,0)=3  (12,5)=3  (12,6)=4  (12,7)=5# (12,9)=2  (12,10)=3  (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,4)=3  (13,5)=4  (13,6)=5# (13,8)=2  (13,9)=3  (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,3)=3  (14,4)=4  (14,5)=5# (14,7)=2  (14,8)=3  (14,9)=4  (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,2)=3  (15,3)=4  (15,4)=5# (15,6)=2  (15,7)=3  (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
   (4624.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color blue and layers
  _0: a rectangle with size (6,8) and color black and mask ....xxxx|....xxxx|xxx.xxxx|xxxx....|xxxx....|xxxx.... at (9,6)
diff: 
delta: (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,6)=2  (0,7)=3  (0,8)=4  (0,9)=5# (0,11)=2  (0,12)=3  (0,13)=4  (0,14)=5# (1,0)=2  (1,1)=0  (1,2)=0  (1,3)=0  (1,5)=2  (1,6)=3  (1,7)=4  (1,8)=5# (1,10)=2  (1,11)=3  (1,12)=4  (1,13)=5# (1,15)=2  (2,0)=3  (2,1)=0  (2,2)=0  (2,3)=0  (2,4)=2  (2,5)=3  (2,6)=4  (2,7)=5# (2,9)=2  (2,10)=3  (2,11)=4  (2,12)=5# (2,14)=2  (2,15)=3  (3,0)=4  (3,1)=0  (3,2)=0  (3,3)=0  (3,4)=3  (3,5)=4  (3,6)=5# (3,8)=2  (3,9)=3  (3,10)=4  (3,11)=5# (3,13)=2  (3,14)=3  (3,15)=4  (4,0)=5# (4,1)=0  (4,2)=0  (4,3)=0  (4,4)=4  (4,5)=5# (4,7)=2  (4,8)=3  (4,9)=4  (4,10)=5# (4,12)=2  (4,13)=3  (4,14)=4  (4,15)=5# (5,1)=2  (5,2)=3  (5,3)=4  (5,4)=5# (5,6)=2  (5,7)=3  (5,8)=4  (5,9)=5# (5,11)=2  (5,12)=0  (5,13)=0  (5,14)=5# (6,0)=2  (6,1)=3  (6,2)=4  (6,3)=5# (6,5)=2  (6,6)=3  (6,7)=4  (6,8)=5# (6,10)=2  (6,11)=3  (6,12)=0  (6,13)=0  (6,15)=2  (7,0)=3  (7,1)=4  (7,2)=5# (7,4)=2  (7,5)=3  (7,6)=4  (7,7)=5# (7,9)=2  (7,10)=3  (7,11)=4  (7,12)=5# (7,14)=2  (7,15)=3  (8,0)=4  (8,1)=5# (8,3)=2  (8,4)=3  (8,5)=4  (8,6)=5# (8,8)=2  (8,9)=3  (8,10)=4  (8,11)=5# (8,13)=2  (8,14)=3  (8,15)=4  (9,0)=5# (9,2)=2  (9,3)=3  (9,4)=4  (9,5)=5# (9,7)=2  (9,8)=3  (9,9)=4  (9,14)=4  (9,15)=5# (10,1)=2  (10,2)=3  (10,3)=4  (10,4)=5# (10,6)=2  (10,7)=3  (10,8)=4  (10,9)=5# (10,14)=5# (11,0)=2  (11,1)=3  (11,2)=4  (11,3)=5# (11,5)=2  (11,15)=2  (12,0)=3  (12,1)=4  (12,2)=5# (12,4)=2  (12,5)=3  (12,10)=3  (12,11)=4  (12,12)=5# (12,14)=2  (12,15)=3  (13,0)=4  (13,1)=5# (13,3)=2  (13,4)=3  (13,5)=4  (13,10)=4  (13,11)=5# (13,13)=2  (13,14)=3  (13,15)=4  (14,0)=5# (14,2)=2  (14,3)=3  (14,4)=4  (14,5)=5# (14,10)=5# (14,12)=2  (14,13)=3  (14,14)=4  (14,15)=5# (15,1)=2  (15,2)=3  (15,3)=4  (15,4)=5# (15,6)=2  (15,7)=3  (15,8)=4  (15,9)=5# (15,11)=2  (15,12)=3  (15,13)=4  (15,14)=5#
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,4)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,8)=5# (2,9)=6  (2,10)=1  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,8)=6  (3,9)=1  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (6,15)=4  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,7)=3  (7,12)=2  (7,13)=3  (7,14)=4  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,6)=3  (8,7)=4  (8,12)=3  (8,13)=4  (8,14)=5# (8,15)=6  (9,5)=3  (9,6)=4  (9,7)=5# (9,12)=4  (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,11)=4  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,10)=4  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,9)=4  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,8)=4  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,7)=4  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,6)=4  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
   (5567.8 bits)
data: a background with size (16,16) and color yellow and layers
  _0: a rectangle with size (15,15) and color green and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (0,0)
  _01: a rectangle with size (15,15) and color grey and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (1,1)
  _011: a rectangle with size (14,14) and color red and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (0,0)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,10)=5# (0,11)=6  (0,12)=1  (1,0)=2  (1,1)=3  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,9)=5# (1,10)=6  (1,11)=1  (2,0)=3  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,6)=3  (2,8)=5# (2,9)=6  (2,10)=1  (2,15)=6  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,5)=3  (3,7)=5# (3,8)=6  (3,9)=1  (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,6)=5# (4,7)=6  (4,8)=1  (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,5)=5# (5,6)=6  (5,7)=1  (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (7,0)=2  (7,1)=3  (7,3)=5# (7,4)=6  (7,5)=1  (7,10)=6  (7,11)=1  (7,12)=2  (7,13)=3  (7,15)=5# (8,0)=3  (8,2)=5# (8,3)=6  (8,4)=1  (8,9)=6  (8,10)=1  (8,11)=2  (8,12)=3  (8,14)=5# (8,15)=6  (9,1)=5# (9,2)=6  (9,3)=1  (9,8)=6  (9,9)=1  (9,10)=2  (9,11)=3  (9,13)=5# (9,14)=6  (9,15)=1  (10,0)=5# (10,1)=6  (10,2)=1  (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,0)=6  (11,1)=1  (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,0)=1  (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,15)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,14)=5# (14,15)=6  (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,13)=5# (15,14)=6  (15,15)=1 
   (4834.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (10,10) and color red and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,4)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=1  (0,7)=2  (0,8)=3  (0,9)=4  (0,10)=5# (0,11)=6  (0,12)=1  (0,14)=3  (0,15)=4  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=1  (1,6)=2  (1,7)=3  (1,8)=4  (1,9)=5# (1,10)=6  (1,11)=1  (1,13)=3  (1,14)=4  (1,15)=5# (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=1  (2,5)=2  (2,8)=5# (2,9)=6  (2,10)=1  (2,12)=3  (2,13)=4  (2,14)=5# (2,15)=6  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=1  (3,4)=2  (3,8)=6  (3,9)=1  (3,11)=3  (3,12)=4  (3,13)=5# (3,14)=6  (3,15)=1  (4,0)=5# (4,1)=6  (4,2)=1  (4,3)=2  (4,4)=3  (4,8)=1  (4,10)=3  (4,11)=4  (4,12)=5# (4,13)=6  (4,14)=1  (4,15)=2  (5,0)=6  (5,1)=1  (5,2)=2  (5,3)=3  (5,4)=4  (5,5)=5# (5,6)=6  (5,7)=1  (5,9)=3  (5,10)=4  (5,11)=5# (5,12)=6  (5,13)=1  (5,14)=2  (5,15)=3  (6,0)=1  (6,1)=2  (6,2)=3  (6,3)=4  (6,4)=5# (6,5)=6  (6,6)=1  (6,11)=6  (6,12)=1  (6,13)=2  (6,14)=3  (6,15)=4  (7,0)=2  (7,1)=3  (7,2)=4  (7,3)=5# (7,4)=6  (7,5)=1  (7,7)=3  (7,12)=2  (7,13)=3  (7,14)=4  (7,15)=5# (8,0)=3  (8,1)=4  (8,2)=5# (8,3)=6  (8,4)=1  (8,6)=3  (8,7)=4  (8,12)=3  (8,13)=4  (8,14)=5# (8,15)=6  (9,5)=3  (9,6)=4  (9,7)=5# (9,12)=4  (9,13)=5# (9,14)=6  (9,15)=1  (10,4)=3  (10,5)=4  (10,6)=5# (10,7)=6  (10,8)=1  (10,9)=2  (10,10)=3  (10,11)=4  (10,12)=5# (10,13)=6  (10,14)=1  (10,15)=2  (11,4)=4  (11,5)=5# (11,6)=6  (11,7)=1  (11,8)=2  (11,9)=3  (11,10)=4  (11,11)=5# (11,12)=6  (11,13)=1  (11,14)=2  (11,15)=3  (12,4)=5# (12,5)=6  (12,6)=1  (12,7)=2  (12,8)=3  (12,9)=4  (12,10)=5# (12,11)=6  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=2  (13,1)=3  (13,2)=4  (13,3)=5# (13,4)=6  (13,5)=1  (13,6)=2  (13,7)=3  (13,8)=4  (13,9)=5# (13,10)=6  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=3  (14,1)=4  (14,2)=5# (14,3)=6  (14,4)=1  (14,5)=2  (14,6)=3  (14,7)=4  (14,8)=5# (14,9)=6  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=4  (15,1)=5# (15,2)=6  (15,3)=1  (15,4)=2  (15,5)=3  (15,6)=4  (15,7)=5# (15,8)=6  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=1 
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask ...............x|..............x.|.............x..|............x...|...........x....|..........x.....|.........x......|........x.......|.......x........|......x.........|.....x..........|....x...........|...x............|..x.............|.x..............|x............... at (0,0)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,8)=2  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,7)=2  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,15)=3  (2,0)=3  (2,5)=1  (2,6)=2  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,14)=3  (2,15)=4  (3,0)=4  (3,5)=2  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,2)=2  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (6,15)=1  (7,0)=1  (7,1)=2  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,14)=1  (7,15)=2  (8,0)=2  (8,5)=7# (8,6)=1  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,13)=1  (8,14)=2  (8,15)=3  (9,0)=3  (9,5)=1  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,12)=1  (9,13)=2  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,11)=1  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,10)=1  (11,11)=2  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,9)=1  (12,10)=2  (12,15)=7# (13,0)=7# (13,1)=1  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,8)=1  (13,9)=2  (13,10)=3  (13,15)=1  (14,0)=1  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,7)=1  (14,8)=2  (14,9)=3  (14,10)=4  (14,15)=2  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,6)=1  (15,7)=2  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,14)=2  (15,15)=3 
   (5426.8 bits)
data: a background with size (16,16) and color red and layers
  _0: a rectangle with size (15,15) and color blue and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (0,0)
  _01: a rectangle with size (15,15) and color green and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (1,1)
  _011: a rectangle with size (14,14) and color orange and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (0,0)
diff: 
delta: (0,0)=1  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=7# (2,5)=1  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,15)=4  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=7# (3,4)=1  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,14)=4  (3,15)=5# (4,0)=5# (4,1)=6  (4,2)=7# (4,3)=1  (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,1)=7# (5,2)=1  (5,4)=3  (5,5)=4  (5,6)=5# (5,7)=6  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (6,15)=1  (7,0)=1  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,14)=1  (8,1)=3  (8,2)=4  (8,3)=5# (8,4)=6  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,13)=1  (8,15)=3  (9,0)=3  (9,1)=4  (9,2)=5# (9,3)=6  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,12)=1  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,11)=1  (10,13)=3  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,10)=1  (11,12)=3  (11,13)=4  (11,14)=5# (11,15)=6  (12,0)=6  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,9)=1  (12,11)=3  (12,12)=4  (12,13)=5# (12,14)=6  (12,15)=7# (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,8)=1  (13,10)=3  (13,11)=4  (13,12)=5# (13,13)=6  (13,14)=7# (13,15)=1  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,7)=1  (14,9)=3  (14,10)=4  (14,11)=5# (14,12)=6  (14,13)=7# (14,14)=1  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,6)=1  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,15)=3 
   (4992.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (16,16) and color red and mask ...............x|..............x.|.............x..|............x...|...........x....|..........x.....|.........x......|........x.......|.......x........|......x.........|.....x..........|....x...........|...x............|..x.............|.x..............|x............... at (0,0)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,7)=1  (0,8)=2  (0,9)=3  (0,10)=4  (0,11)=5# (0,12)=6  (0,13)=7# (0,14)=1  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=1  (1,7)=2  (1,8)=3  (1,9)=4  (1,10)=5# (1,11)=6  (1,12)=7# (1,13)=1  (1,15)=3  (2,0)=3  (2,5)=1  (2,6)=2  (2,7)=3  (2,8)=4  (2,9)=5# (2,10)=6  (2,11)=7# (2,12)=1  (2,14)=3  (2,15)=4  (3,0)=4  (3,5)=2  (3,6)=3  (3,7)=4  (3,8)=5# (3,9)=6  (3,10)=7# (3,11)=1  (3,13)=3  (3,14)=4  (3,15)=5# (4,0)=5# (4,5)=3  (4,6)=4  (4,7)=5# (4,8)=6  (4,9)=7# (4,10)=1  (4,12)=3  (4,13)=4  (4,14)=5# (4,15)=6  (5,0)=6  (5,5)=4  (5,6)=5# (5,7)=6  (5,8)=7# (5,9)=1  (5,11)=3  (5,12)=4  (5,13)=5# (5,14)=6  (5,15)=7# (6,0)=7# (6,1)=1  (6,2)=2  (6,3)=3  (6,4)=4  (6,5)=5# (6,6)=6  (6,7)=7# (6,8)=1  (6,10)=3  (6,11)=4  (6,12)=5# (6,13)=6  (6,14)=7# (6,15)=1  (7,0)=1  (7,1)=2  (7,2)=3  (7,3)=4  (7,4)=5# (7,5)=6  (7,6)=7# (7,7)=1  (7,9)=3  (7,10)=4  (7,11)=5# (7,12)=6  (7,13)=7# (7,14)=1  (7,15)=2  (8,0)=2  (8,5)=7# (8,6)=1  (8,8)=3  (8,9)=4  (8,10)=5# (8,11)=6  (8,12)=7# (8,13)=1  (8,14)=2  (8,15)=3  (9,0)=3  (9,5)=1  (9,7)=3  (9,8)=4  (9,9)=5# (9,10)=6  (9,11)=7# (9,12)=1  (9,13)=2  (9,14)=3  (9,15)=4  (10,0)=4  (10,1)=5# (10,2)=6  (10,3)=7# (10,4)=1  (10,6)=3  (10,7)=4  (10,8)=5# (10,9)=6  (10,10)=7# (10,11)=1  (10,14)=4  (10,15)=5# (11,0)=5# (11,1)=6  (11,2)=7# (11,3)=1  (11,5)=3  (11,6)=4  (11,7)=5# (11,8)=6  (11,9)=7# (11,10)=1  (11,11)=2  (11,14)=5# (11,15)=6  (12,0)=6  (12,1)=7# (12,2)=1  (12,4)=3  (12,5)=4  (12,6)=5# (12,7)=6  (12,8)=7# (12,9)=1  (12,10)=2  (12,15)=7# (13,0)=7# (13,1)=1  (13,3)=3  (13,4)=4  (13,5)=5# (13,6)=6  (13,7)=7# (13,8)=1  (13,9)=2  (13,10)=3  (13,15)=1  (14,0)=1  (14,2)=3  (14,3)=4  (14,4)=5# (14,5)=6  (14,6)=7# (14,7)=1  (14,8)=2  (14,9)=3  (14,10)=4  (14,15)=2  (15,1)=3  (15,2)=4  (15,3)=5# (15,4)=6  (15,5)=7# (15,6)=1  (15,7)=2  (15,8)=3  (15,9)=4  (15,10)=5# (15,11)=6  (15,12)=7# (15,13)=1  (15,14)=2  (15,15)=3 
! size mismatch, 10x10 instead of 16x16

TRAIN c3f564a4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color black and layers
  _0: a rectangle with size (14,14) and color red and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (2,2)
diff: 
delta: (0,0)=1  (0,1)=2  (0,2)=3  (0,3)=4  (0,4)=5# (0,5)=6  (0,6)=7# (0,10)=3  (0,11)=4  (0,12)=5# (0,13)=6  (0,14)=7# (0,15)=8  (1,0)=2  (1,1)=3  (1,2)=4  (1,3)=5# (1,4)=6  (1,5)=7# (1,6)=8  (1,10)=4  (1,11)=5# (1,12)=6  (1,13)=7# (1,14)=8  (1,15)=1  (2,0)=3  (2,1)=4  (2,2)=5# (2,3)=6  (2,4)=7# (2,5)=8  (2,6)=1  (2,7)=2  (2,8)=3  (2,9)=4  (2,10)=5# (2,11)=6  (2,12)=7# (2,13)=8  (2,14)=1  (3,0)=4  (3,1)=5# (3,2)=6  (3,3)=7# (3,4)=8  (3,5)=1  (3,6)=2  (3,7)=3  (3,8)=4  (3,9)=5# (3,10)=6  (3,11)=7# (3,12)=8  (3,13)=1  (3,15)=3  (4,0)=5# (4,1)=6  (4,6)=3  (4,7)=4  (4,8)=5# (4,9)=6  (4,10)=7# (4,11)=8  (4,12)=1  (4,14)=3  (4,15)=4  (5,0)=6  (5,1)=7# (5,9)=7# (5,10)=8  (5,11)=1  (5,13)=3  (5,14)=4  (5,15)=5# (6,0)=7# (6,1)=8  (6,9)=8  (6,10)=1  (6,12)=3  (6,13)=4  (6,14)=5# (6,15)=6  (7,0)=8  (7,1)=1  (7,9)=1  (7,11)=3  (7,12)=4  (7,13)=5# (7,14)=6  (7,15)=7# (8,0)=1  (8,1)=2  (8,2)=3  (8,3)=4  (8,4)=5# (8,10)=3  (8,11)=4  (8,12)=5# (8,13)=6  (8,14)=7# (8,15)=8  (9,0)=2  (9,1)=3  (9,2)=4  (9,3)=5# (9,4)=6  (9,5)=7# (9,6)=8  (9,7)=1  (9,9)=3  (9,10)=4  (9,11)=5# (9,12)=6  (9,13)=7# (9,14)=8  (9,15)=1  (10,0)=3  (10,1)=4  (10,2)=5# (10,3)=6  (10,4)=7# (10,5)=8  (10,6)=1  (10,8)=3  (10,9)=4  (10,10)=5# (10,11)=6  (10,12)=7# (10,13)=8  (10,14)=1  (10,15)=2  (11,0)=4  (11,1)=5# (11,2)=6  (11,3)=7# (11,4)=8  (11,5)=1  (11,7)=3  (11,8)=4  (11,9)=5# (11,10)=6  (11,11)=7# (11,12)=8  (11,13)=1  (11,14)=2  (11,15)=3  (12,0)=5# (12,1)=6  (12,2)=7# (12,3)=8  (12,4)=1  (12,6)=3  (12,9)=6  (12,10)=7# (12,11)=8  (12,12)=1  (12,13)=2  (12,14)=3  (12,15)=4  (13,0)=6  (13,1)=7# (13,2)=8  (13,3)=1  (13,5)=3  (13,6)=4  (13,9)=7# (13,10)=8  (13,11)=1  (13,12)=2  (13,13)=3  (13,14)=4  (13,15)=5# (14,0)=7# (14,1)=8  (14,2)=1  (14,4)=3  (14,5)=4  (14,6)=5# (14,7)=6  (14,8)=7# (14,9)=8  (14,10)=1  (14,11)=2  (14,12)=3  (14,13)=4  (14,14)=5# (14,15)=6  (15,0)=8  (15,1)=1  (15,3)=3  (15,4)=4  (15,5)=5# (15,6)=6  (15,7)=7# (15,8)=8  (15,9)=1  (15,10)=2  (15,11)=3  (15,12)=4  (15,13)=5# (15,14)=6  (15,15)=7#
! size mismatch, 10x10 instead of 16x16

TEST c3f564a4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 29.5 sec (29.5 sec/task)
bits-train-error = 144519.8 bits (144519.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-95] Checking task c444b776.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18148.2 = 18163.8
DL output with Mo: L = 15.6 + 28765.8 = 28781.5
DL input+output M: L = 31.2 + 46914.0 = 46945.3

# learning a model for train pairs
2.000	
1.373	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.948	OUT OBJECT at ^.layer_0: ^.layer_0
0.928	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.891	OUT OBJECT at ^.layer_01: ^.layer_01
0.864	OUT OBJECT at ^.layer_00: ^.layer_0.shape at (?,?)
0.848	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.811	OUT OBJECT at ^.layer_011: ^.layer_011
0.784	OUT OBJECT at ^.layer_0111: ^.layer_011.shape at (?,?)
0.768	OUT DEF: ^.size=^.size
0.760	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
0.742	OUT OBJECT at ^.layer_001: ^.layer_00
0.733	OUT OBJECT at ^.layer_000: ^.layer_00.shape at (?,?)
0.727	IN  DEF: ^.layer_01.shape.color=yellow
0.718	OUT OBJECT at ^.layer_0011: ^.layer_00.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _000: ^.layer_00.shape at (?,?)
  _00: ^.layer_0.shape at (?,?)
  _001: ^.layer_00
  _0011: ^.layer_00.shape at (?,?)
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_011.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 135.2 + 5715.6 = 5850.7
DL output with Mo: L = 116.9 + 11289.5 = 11406.5
DL input+output M: L = 252.1 + 17005.1 = 17257.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,19) and color black and layers
  _00: a point with color orange at (11,5)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _01: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
diff: 
delta: (14,1)=3  (14,5)=3  (16,4)=7# (17,7)=3  (18,1)=7#
   (302.4 bits)
data: a background with size (19,19) and color black and layers
  _000: a point with color orange at (1,5)
  _00: a rectangle with size (2,2) and color red and mask Odd Checkboard at (2,2)
  _001: a point with color orange at (11,5)
  _0011: a point with color orange at (1,15)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _01: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
  _0111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,3)
diff: 
delta: (2,13)=2  (3,12)=2  (4,1)=3  (4,5)=3  (4,11)=3  (4,15)=3  (6,4)=7# (6,13)=8  (6,14)=7# (7,7)=3  (7,14)=8  (7,17)=3  (8,1)=7# (8,11)=7# (11,15)=7# (12,13)=2  (13,12)=2  (14,1)=3  (14,5)=3  (14,11)=3  (14,15)=3  (16,4)=7# (16,13)=8  (16,14)=7# (17,7)=3  (17,14)=8  (17,17)=3  (18,1)=7# (18,11)=7#
   (840.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,19) and color black and layers
  _00: a point with color orange at (11,5)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _01: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _011: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (16,3)
diff: 
delta: (14,1)=3  (14,5)=3  (16,4)=7# (17,7)=3  (18,1)=7#
! 39 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,19) and color black and layers
  _00: a point with color orange at (11,5)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (12,2)
  _01: a rectangle with size (19,19) and color yellow and mask +-cross at (0,0)
  _011: a rectangle with size (1,1) and color green and mask Full at (14,1)
diff: 
delta: (14,5)=3  (16,3)=8  (16,4)=7# (17,4)=8  (17,7)=3  (18,1)=7#
! 39 wrong pixels (generated / expected)

TRAIN c444b776.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (19,9) and color black and layers
  _00: a point with color red at (1,7)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _01: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
diff: 
delta: (1,5)=5# (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
   (269.2 bits)
data: a background with size (19,9) and color black and layers
  _000: a point with color red at (6,7)
  _00: a rectangle with size (1,2) and color grey and mask Full at (17,5)
  _001: a point with color red at (1,7)
  _0011: a point with color red at (11,7)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _01: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _0111: a rectangle with size (2,2) and color red and mask Odd Checkboard at (16,1)
diff: 
delta: (1,5)=5# (2,2)=1  (4,4)=1  (5,2)=1  (11,5)=5# (12,2)=1  (14,4)=1  (15,2)=1  (16,7)=2 
   (288.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,9) and color black and layers
  _00: a point with color grey at (1,5)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _01: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
diff: 
delta: (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,9) and color black and layers
  _00: a point with color grey at (1,5)
  _0: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
  _01: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (1,2) and color grey and mask Full at (7,5)
diff: 
delta: (1,7)=2  (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (19,9) and color black and layers
  _00: a point with color red at (1,7)
  _0: a rectangle with size (1,2) and color grey and mask Full at (7,5)
  _01: a rectangle with size (1,9) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (6,1)
diff: 
delta: (1,5)=5# (2,2)=1  (4,4)=1  (5,2)=1  (6,7)=2 
! 18 wrong pixels (generated / expected)

TRAIN c444b776.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,29) and color black and layers
  _00: a point with color green at (1,14)
  _0: a rectangle with size (1,29) and color yellow and mask Full at (9,0)
  _01: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _011: a rectangle with size (19,1) and color yellow and mask Full at (0,19)
diff: 
delta: (2,11)=2  (2,17)=2  (3,11)=3  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 91 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (19,29) and color black and layers
  _00: a point with color green at (1,14)
  _0: a rectangle with size (19,1) and color yellow and mask Full at (0,9)
  _01: a rectangle with size (1,29) and color yellow and mask Full at (9,0)
  _011: a rectangle with size (19,1) and color yellow and mask Full at (0,19)
diff: 
delta: (2,11)=2  (2,17)=2  (3,11)=3  (3,17)=2  (4,14)=2  (6,12)=6  (8,16)=6 
! 65 wrong pixels (generated / expected)

TEST c444b776.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.9 sec (27.9 sec/task)
bits-train-error = 11289.5 bits (11289.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-94] Checking task c59eb873.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3996.0 = 4011.6
DL output with Mo: L = 15.6 + 15215.2 = 15230.8
DL input+output M: L = 31.2 + 19211.2 = 19242.5

# learning a model for train pairs
2.000	
1.585	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.372	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.181	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.108	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.044	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.003	IN  DEF: ^.layer_01.shape.color=red
0.970	OUT DEF: ^.size=^.size * 2
0.947	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.917	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size * 2
0.898	OUT DEF: ^.layer_0.pos=^.layer_0.pos * 2
0.880	IN  DEF: ^.color=black
0.869	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.859	OUT DEF: ^.layer_011.shape.size.i=area(^.layer_011.shape) + 1
0.850	OUT DEF: ^.layer_011.shape.size.j=area(^.layer_011.shape) + 1
0.841	OUT DEF: ^.layer_01.shape.size.j=area(^.layer_01.shape) + 1
0.831	OUT DEF: ^.layer_01.pos.i='0
0.822	OUT DEF: ^.layer_01.pos=^.layer_011.pos * 2
0.812	OUT DEF: ^.layer_01.shape.color=^.layer_011.shape.color
0.804	OUT DEF: ^.layer_011.pos.i=^.layer_01.pos.i * 2
0.797	OUT DEF: ^.layer_01.shape.mask=Full
0.790	OUT DEF: ^.layer_011.shape.mask=Full
0.786	OUT DEF: ^.color=black
0.786	OUT DEF: ^.layer_011.shape.size=min(^.layer_01.pos, ^.layer_011.pos) + 2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size * 2 and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos * 2
  _01: a rectangle with size (?,area(^.layer_01.shape) + 1) and color ^.layer_011.shape.color and mask Full at ^.layer_011.pos * 2
  _011: a rectangle with size min(^.layer_01.pos, ^.layer_011.pos) + 2 and color ? and mask Full at (^.layer_01.pos.i * 2,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color red at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 90.2 + 2479.2 = 2569.4
DL output with Mo: L = 213.9 + 1995.1 = 2209.0
DL input+output M: L = 304.0 + 4474.3 = 4778.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
  _01: a point with color red at (2,0)
  _011: a point with color blue at (0,2)
diff: 
delta:
   (68.3 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask +-cross at (0,0)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,0)
diff: 
delta:
   (23.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
  _01: a point with color red at (2,0)
  _011: a point with color blue at (0,2)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (1,0)
  _01: a point with color red at (2,0)
  _011: a point with color grey at (0,1)
diff: 
delta: (0,2)=1  (2,1)=5#
! 12 wrong pixels (generated / expected)

TRAIN c59eb873.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,1)
  _01: a point with color red at (0,0)
  _011: a point with color green at (1,0)
diff: 
delta:
   (53.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color blue and mask Full (and Border) at (0,2)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,0)
  _011: a rectangle with size (2,2) and color red and mask Full at (0,0)
diff: 
delta:
   (18.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,1)
  _01: a point with color red at (0,0)
  _011: a point with color green at (1,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,1) and color blue and mask Full at (0,1)
  _01: a point with color green at (1,0)
  _011: a point with color red at (0,0)
diff:   ^.layer_01.shape.color
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color blue at (0,1)
diff: 
delta: (1,1)=1 
! 8 wrong pixels (generated / expected)

TRAIN c59eb873.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask x.|x.|xx|x. at (0,2)
  _01: a point with color red at (1,0)
  _011: a point with color red at (0,0)
diff: 
delta: (1,1)=1  (3,3)=5#
   (125.8 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (8,4) and color green and mask xx..|xx..|xx..|xx..|xxxx|xxxx|xx..|xx.. at (0,4)
  _01: a rectangle with size (4,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color blue and mask Full at (2,2)
diff: 
delta: (6,6)=5# (6,7)=5# (7,6)=5# (7,7)=5#
   (157.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask x.|x.|xx|x. at (0,2)
  _01: a point with color red at (0,0)
  _011: a point with color red at (1,0)
diff: 
delta: (1,1)=1  (3,3)=5#
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask x.|x.|xx|x. at (0,2)
  _01: a point with color red at (0,0)
  _011: a point with color blue at (1,1)
diff: 
delta: (1,0)=2  (3,3)=5#
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask x.|x.|xx|x. at (0,2)
  _01: a point with color red at (1,0)
  _011: a point with color red at (0,0)
diff: 
delta: (1,1)=1  (3,3)=5#
! 20 wrong pixels (generated / expected)

TRAIN c59eb873.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _01: a point with color red at (0,0)
  _011: a point with color orange at (0,3)
diff: 
delta: (0,4)=8  (1,0)=2  (1,1)=1  (1,2)=1  (2,2)=6  (2,3)=6  (3,0)=3  (3,2)=6 
! 36 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _01: a point with color red at (0,0)
  _011: a point with color cyan at (0,4)
diff: 
delta: (0,3)=7# (1,0)=2  (1,1)=1  (1,2)=1  (2,2)=6  (2,3)=6  (3,0)=3  (3,2)=6 
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color grey and mask Full at (2,1)
  _01: a point with color red at (1,0)
  _011: a point with color red at (0,0)
diff: 
delta: (0,3)=7# (0,4)=8  (1,1)=1  (1,2)=1  (2,2)=6  (2,3)=6  (3,0)=3  (3,2)=6 
! 36 wrong pixels (generated / expected)

TEST c59eb873.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 10.4 sec (10.4 sec/task)
bits-train-error = 1995.1 bits (1995.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-93] Checking task c8cbb738.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9157.4 = 9173.0
DL output with Mo: L = 15.6 + 7480.8 = 7496.4
DL input+output M: L = 31.2 + 16638.2 = 16669.4

# learning a model for train pairs
2.000	
1.909	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.848	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.779	OUT OBJECT at ^.layer_01: ^.layer_0.shape at (?,?)
1.754	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.722	OUT DEF: ^.layer_0.pos=span(^.layer_0.pos, ^.layer_01.pos) / 2
1.696	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
1.670	IN  OBJECT at ^.layer_0101: a point with color ? at (?,?)
1.645	OUT DEF: ^.size.i=span(^.layer_0.pos.i, ^.layer_01.pos.i)
1.620	OUT DEF: ^.size.j=span(^.layer_0.pos.i, ^.layer_01.pos.i)
1.603	OUT DEF: ^.layer_01.pos.i='0
1.588	OUT DEF: ^.layer_01.pos.j=^.layer_010.pos.i - 1
1.575	OUT DEF: ^.layer_0.shape.size.i=1
1.561	OUT DEF: ^.layer_0.shape.size.j=1
1.548	OUT DEF: ^.layer_0.shape.mask=Full
1.547	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.532	OUT DEF: ^.layer_011.pos.i=^.layer_0.shape.size.i / 2
1.518	OUT DEF: ^.layer_011.pos.j=^.layer_0101.pos.j - 2
1.516	OUT OBJECT at ^.layer_010: a point with color ? at (?,?)
1.499	OUT DEF: ^.layer_010.pos.i='0
1.484	OUT DEF: ^.layer_010.pos.j=^.layer_01.pos.i / 2
1.482	OUT OBJECT at ^.layer_0101: a point with color ? at (?,?)
1.466	OUT DEF: ^.layer_0101.pos.j=^.layer_0101.pos.j - 2
1.450	OUT DEF: ^.layer_0101.pos.i=^.layer_010.pos.i + 1

# Learned model:
CONSTRUCT (Mo)
a background with size (span(^.layer_0.pos.i, ^.layer_01.pos.i),span(^.layer_0.pos.i, ^.layer_01.pos.i)) and color ? and layers
  _0: a rectangle with size (1,1) and color ? and mask Full at span(^.layer_0.pos, ^.layer_01.pos) / 2
  _010: a point with color ? at ('0,^.layer_01.pos.i / 2)
  _0101: a point with color ? at (^.layer_010.pos.i + 1,^.layer_0101.pos.j - 2)
  _01: ^.layer_0.shape at ('0,^.layer_010.pos.i - 1)
  _011: a point with color ? at (^.layer_0.shape.size.i / 2,^.layer_0101.pos.j - 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 108.3 + 7833.4 = 7941.7
DL output with Mo: L = 348.9 + 4032.1 = 4380.9
DL input+output M: L = 457.1 + 11865.5 = 12322.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,11) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,7)
  _010: a point with color blue at (2,4)
  _0101: a point with color blue at (4,2)
  _01: a point with color yellow at (4,7)
diff: 
delta: (0,8)=3  (4,6)=1  (4,9)=4  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
   (423.1 bits)
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _010: a point with color blue at (0,2)
  _0101: a point with color cyan at (3,0)
  _01: a rectangle with size (1,3) and color yellow and mask Full at (0,1)
  _011: a point with color red at (0,0)
diff: 
delta: (0,4)=2  (1,0)=8  (1,4)=8  (2,4)=1  (3,4)=8  (4,0)=2  (4,1)=4  (4,2)=1  (4,3)=4  (4,4)=2 
   (267.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color green and layers
  _0: a rectangle with size (1,3) and color yellow and mask Full at (0,7)
  _010: a point with color blue at (2,4)
  _0101: a point with color blue at (4,2)
  _01: a point with color yellow at (4,7)
diff: 
delta: (0,8)=3  (4,6)=1  (4,9)=4  (6,4)=1  (6,6)=2  (6,10)=2  (8,0)=8  (8,4)=8  (10,0)=8  (10,4)=8  (10,6)=2  (10,10)=2 
! 23 wrong pixels (generated / expected)

TRAIN c8cbb738.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,8) and color blue and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (5,3)
  _010: a point with color cyan at (1,1)
  _0101: a point with color cyan at (1,3)
  _01: a point with color cyan at (3,3)
diff: 
delta: (3,1)=8 
   (141.9 bits)
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (1,0)
  _010: a point with color green at (0,1)
  _0101: a point with color green at (2,1)
  _01: a rectangle with size (3,3) and color green and mask Odd Checkboard at (0,0)
  _011: a point with color blue at (1,1)
diff: 
delta:
   (31.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,8) and color blue and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (5,3)
  _010: a point with color cyan at (1,1)
  _0101: a point with color cyan at (1,3)
  _01: a point with color cyan at (3,1)
diff: 
delta: (3,3)=8 
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,8) and color blue and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (5,3)
  _010: a point with color cyan at (1,1)
  _0101: a point with color cyan at (1,3)
  _01: a point with color cyan at (3,3)
diff: 
delta: (3,1)=8 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,8) and color blue and layers
  _0: a rectangle with size (3,3) and color green and mask Odd Checkboard at (5,3)
  _010: a point with color cyan at (1,1)
  _0101: a point with color cyan at (3,1)
  _01: a point with color cyan at (1,3)
diff: 
delta: (3,3)=8 
! size mismatch, 5x5 instead of 3x3

TRAIN c8cbb738.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,14) and color yellow and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _010: a point with color blue at (1,6)
  _0101: a point with color blue at (5,6)
  _01: a point with color blue at (5,2)
diff: 
delta: (5,9)=7# (7,7)=7# (7,11)=7# (9,9)=7#
   (218.3 bits)
data: a background with size (5,5) and color yellow and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (2,0)
  _010: a point with color orange at (0,2)
  _0101: a point with color orange at (2,4)
  _01: a rectangle with size (1,1) and color blue and mask Full at (0,0)
  _011: a point with color blue at (0,4)
diff: 
delta: (4,0)=1  (4,2)=7# (4,4)=1 
   (104.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color yellow and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _010: a point with color blue at (1,6)
  _0101: a point with color blue at (5,2)
  _01: a point with color blue at (5,6)
diff: 
delta: (5,9)=7# (7,7)=7# (7,11)=7# (9,9)=7#
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color yellow and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _010: a point with color blue at (1,6)
  _0101: a point with color blue at (5,6)
  _01: a point with color blue at (5,2)
diff: 
delta: (5,9)=7# (7,7)=7# (7,11)=7# (9,9)=7#
! 24 wrong pixels (generated / expected)

TRAIN c8cbb738.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color cyan and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (10,14)
  _010: a point with color blue at (2,6)
  _0101: a point with color blue at (5,3)
  _01: a point with color blue at (5,9)
diff: 
delta: (6,11)=2  (6,17)=2  (8,6)=1  (8,11)=2  (8,17)=2  (9,3)=3  (9,9)=3  (10,15)=8  (15,3)=3  (15,9)=3  (16,14)=6  (16,16)=6 
! size mismatch, 6x6 instead of 7x7
>> Trial 2
data: a background with size (18,19) and color cyan and layers
  _0: a rectangle with size (1,3) and color pink and mask Full at (10,14)
  _010: a point with color blue at (2,6)
  _0101: a point with color blue at (5,9)
  _01: a point with color blue at (5,3)
diff: 
delta: (6,11)=2  (6,17)=2  (8,6)=1  (8,11)=2  (8,17)=2  (9,3)=3  (9,9)=3  (10,15)=8  (15,3)=3  (15,9)=3  (16,14)=6  (16,16)=6 
! size mismatch, 6x6 instead of 7x7

TEST c8cbb738.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.7 sec (18.7 sec/task)
bits-train-error = 4032.1 bits (4032.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-92] Checking task c8f0f002.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6667.1 = 6682.7
DL output with Mo: L = 15.6 + 6667.1 = 6682.7
DL input+output M: L = 31.2 + 13334.3 = 13365.5

# learning a model for train pairs
2.000	
1.691	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.185	OUT OBJECT at ^.layer_0: ^.layer_0
1.099	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.012	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.947	OUT DEF: ^.size=^.size
0.908	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.869	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.854	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.828	IN  DEF: ^.layer_0.shape.color=cyan
0.825	OUT OBJECT at ^.layer_010: a point with color ? at (?,?)
0.808	OUT DEF: ^.layer_010.pos.i='0
0.794	OUT DEF: ^.layer_010.pos.j=max(^.layer_0.pos.i, ^.layer_01.pos.i) + 2
0.789	OUT OBJECT at ^.layer_0101: a point with color ? at (?,?)
0.772	OUT DEF: ^.layer_0101.pos.i=2

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: a point with color ? at ('0,max(^.layer_0.pos.i, ^.layer_01.pos.i) + 2)
  _0101: a point with color ? at (2,?)
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 83.5 + 3790.5 = 3874.1
DL output with Mo: L = 123.3 + 1159.9 = 1283.2
DL input+output M: L = 206.9 + 4950.4 = 5157.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,5)
  _01: a rectangle with size (3,3) and color orange and mask .xx|xx.|.xx at (0,2)
diff: 
delta: (0,1)=8  (0,2)=8  (2,0)=7#
   (158.9 bits)
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,5)
  _010: a point with color cyan at (0,2)
  _0101: a point with color grey at (2,0)
  _01: a rectangle with size (3,3) and color grey and mask .xx|xx.|.xx at (0,2)
diff: 
delta: (0,1)=8 
   (55.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,5)
  _01: a rectangle with size (3,3) and color orange and mask .xx|xx.|.xx at (0,2)
diff: 
delta: (0,1)=8  (0,2)=8  (2,0)=7#
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color orange and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,5)
  _01: a rectangle with size (3,3) and color blue and mask x..|xx.|.xx at (0,0)
diff: 
delta: (0,1)=8  (0,2)=8  (1,4)=1 
! 15 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color blue and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (3,3) and color orange and mask .xx|xx.|.xx at (0,2)
diff: 
delta: (0,5)=8  (1,5)=8  (2,0)=7# (2,5)=8 
! 16 wrong pixels (generated / expected)

TRAIN c8f0f002.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,4) and color orange and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color blue and mask ...x|x.x.|.xx. at (0,0)
diff: 
delta:
   (86.6 bits)
data: a background with size (3,4) and color grey and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _010: a point with color blue at (0,3)
  _0101: a point with color blue at (2,1)
  _01: a rectangle with size (3,4) and color blue and mask ...x|x.x.|.xx. at (0,0)
diff: 
delta:
   (30.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,4) and color orange and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color blue and mask ...x|x.x.|.xx. at (0,0)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,4) and color orange and layers
  _0: a rectangle with size (3,4) and color blue and mask ...x|x.x.|.xx. at (0,0)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
diff:   ^.layer_0.shape.color
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,4) and color blue and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,1)
  _01: a rectangle with size (3,4) and color orange and mask xxx.|...x|...x at (0,0)
diff: 
delta: (2,0)=7#
! 11 wrong pixels (generated / expected)

TRAIN c8f0f002.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|xx.|.xx at (0,1)
  _01: a rectangle with size (2,1) and color orange and mask Full at (1,0)
diff: 
delta: (0,3)=7# (2,4)=7#
   (133.5 bits)
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|xx.|.xx at (0,1)
  _010: a point with color grey at (0,3)
  _0101: a point with color grey at (2,4)
  _01: a rectangle with size (2,1) and color grey and mask Full at (1,0)
diff: 
delta:
   (30.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|xx.|.xx at (0,1)
  _01: a rectangle with size (2,1) and color orange and mask Full at (1,0)
diff: 
delta: (0,3)=7# (2,4)=7#
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|xx.|.xx at (0,1)
  _01: a rectangle with size (1,1) and color orange and mask Full at (0,3)
diff: 
delta: (1,0)=7# (2,0)=7# (2,4)=7#
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|xx.|.xx at (0,1)
  _01: a rectangle with size (1,1) and color orange and mask Full at (2,4)
diff: 
delta: (0,3)=7# (1,0)=7# (2,0)=7#
! 10 wrong pixels (generated / expected)

TRAIN c8f0f002.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (3,4) and color orange and mask xx.x|.xxx|x.x. at (0,1)
diff: 
delta: (2,4)=8 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,5) and color orange and layers
  _0: a rectangle with size (2,1) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
diff: 
delta: (0,3)=1  (2,4)=8 
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (2,4)
  _01: a rectangle with size (3,4) and color orange and mask xx.x|.xxx|x.x. at (0,1)
diff: 
delta: (1,0)=8  (2,0)=8 
! 14 wrong pixels (generated / expected)

TEST c8f0f002.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.8 sec (9.8 sec/task)
bits-train-error = 1159.9 bits (1159.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-91] Checking task c909285e.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 372641.3 = 372656.9
DL output with Mo: L = 15.6 + 18988.4 = 19004.0
DL input+output M: L = 31.2 + 391629.6 = 391660.9

# learning a model for train pairs
2.000	
1.697	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.441	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.327	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.233	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.165	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i / 3
1.122	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.i / 3,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 277268.4 = 277317.3
DL output with Mo: L = 155.5 + 7033.0 = 7188.5
DL input+output M: L = 204.3 + 284301.4 = 284505.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color grey and mask ...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|............xxxxxxxxxxxx|.................x.....x|.................x.....x|.................x.....x|.................x.....x|.................x.....x|xxxxx.......xxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,5)=5# (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,5)=5# (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=5# (2,6)=2  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,16)=2  (2,18)=2  (2,20)=2  (2,21)=2  (2,22)=2  (3,5)=5# (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=5# (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,5)=3  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,11)=3  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (7,5)=3  (7,11)=3  (8,0)=2  (8,1)=2  (8,2)=2  (8,4)=2  (8,5)=3  (8,6)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,11)=3  (8,12)=2  (8,13)=2  (8,14)=2  (8,16)=2  (8,18)=2  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,5)=3  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,11)=3  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,5)=3  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,11)=3  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (11,5)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
   (8520.6 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (0,0)
  _01: a rectangle with size (5,5) and color yellow and mask .x...|xxxxx|.x...|.x...|.x... at (1,1)
  _011: a rectangle with size (3,3) and color red and mask xxx|x..|x.. at (3,3)
  _0111: a rectangle with size (1,5) and color cyan and mask Full at (4,1)
diff: 
delta: (1,3)=2  (1,4)=8  (3,1)=2  (5,4)=8 
   (291.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (24,24) and color grey and mask ...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|...........x.....x.....x|............xxxxxxxxxxxx|.................x.....x|.................x.....x|.................x.....x|.................x.....x|.................x.....x|xxxxx.......xxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,4)=8  (0,5)=5# (0,6)=0  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,16)=0  (0,18)=0  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,4)=8  (1,5)=5# (1,6)=0  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,16)=0  (1,18)=0  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,4)=2  (2,5)=5# (2,6)=2  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,16)=2  (2,18)=2  (2,20)=2  (2,21)=2  (2,22)=2  (3,5)=5# (4,0)=8  (4,1)=8  (4,2)=2  (4,4)=8  (4,5)=5# (4,6)=8  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,16)=8  (4,18)=8  (4,20)=2  (4,21)=8  (4,22)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=3  (5,6)=3  (5,7)=3  (5,8)=3  (5,9)=3  (5,10)=3  (5,11)=3  (6,0)=0  (6,1)=0  (6,2)=2  (6,4)=8  (6,5)=3  (6,6)=0  (6,8)=2  (6,9)=8  (6,10)=0  (6,11)=3  (6,12)=0  (6,13)=0  (6,14)=2  (6,16)=0  (6,18)=0  (6,20)=2  (6,21)=0  (6,22)=0  (7,5)=3  (7,11)=3  (8,0)=2  (8,1)=2  (8,2)=2  (8,4)=2  (8,5)=3  (8,6)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,11)=3  (8,12)=2  (8,13)=2  (8,14)=2  (8,16)=2  (8,18)=2  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,4)=8  (9,5)=3  (9,6)=8  (9,8)=2  (9,9)=8  (9,10)=8  (9,11)=3  (9,12)=8  (9,13)=8  (9,14)=2  (9,16)=8  (9,18)=8  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,4)=8  (10,5)=3  (10,6)=0  (10,8)=2  (10,9)=8  (10,10)=0  (10,11)=3  (10,12)=0  (10,13)=0  (10,14)=2  (10,16)=0  (10,18)=0  (10,20)=2  (10,21)=0  (10,22)=0  (11,5)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,9)=3  (11,10)=3  (11,11)=3  (12,0)=0  (12,1)=0  (12,2)=2  (12,4)=8  (12,6)=0  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,16)=0  (12,18)=0  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,4)=8  (13,6)=0  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,16)=0  (13,18)=0  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,4)=2  (14,6)=2  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,16)=2  (14,18)=2  (14,20)=2  (14,21)=2  (14,22)=2  (16,0)=0  (16,1)=0  (16,2)=2  (16,4)=8  (16,6)=0  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,16)=0  (16,18)=0  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,4)=8  (18,6)=0  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,16)=0  (18,18)=0  (18,20)=2  (18,21)=0  (18,22)=0  (20,0)=2  (20,1)=2  (20,2)=2  (20,4)=2  (20,6)=2  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,16)=2  (20,18)=2  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,4)=8  (21,6)=0  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,16)=0  (21,18)=0  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,4)=8  (22,6)=0  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,16)=0  (22,18)=0  (22,20)=2  (22,21)=0  (22,22)=0 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (24,24) and color grey and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (5,5)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=2  (0,3)=4  (0,4)=8  (0,6)=0  (0,7)=4  (0,8)=2  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=2  (0,15)=4  (0,16)=0  (0,18)=0  (0,19)=4  (0,20)=2  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=2  (1,3)=4  (1,4)=8  (1,6)=0  (1,7)=4  (1,8)=2  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=2  (1,15)=4  (1,16)=0  (1,18)=0  (1,19)=4  (1,20)=2  (1,21)=0  (1,22)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,3)=4  (2,4)=2  (2,6)=2  (2,7)=4  (2,8)=2  (2,9)=2  (2,10)=2  (2,12)=2  (2,13)=2  (2,14)=2  (2,15)=4  (2,16)=2  (2,18)=2  (2,19)=4  (2,20)=2  (2,21)=2  (2,22)=2  (3,0)=4  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=4  (3,6)=4  (3,7)=4  (3,8)=4  (3,9)=4  (3,10)=4  (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=4  (3,16)=4  (3,18)=4  (3,19)=4  (3,20)=4  (3,21)=4  (3,22)=4  (4,0)=8  (4,1)=8  (4,2)=2  (4,3)=4  (4,4)=8  (4,6)=8  (4,7)=4  (4,8)=2  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,14)=2  (4,15)=4  (4,16)=8  (4,18)=8  (4,19)=4  (4,20)=2  (4,21)=8  (4,22)=8  (6,0)=0  (6,1)=0  (6,2)=2  (6,3)=4  (6,4)=8  (6,6)=0  (6,7)=4  (6,8)=2  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=2  (6,15)=4  (6,16)=0  (6,18)=0  (6,19)=4  (6,20)=2  (6,21)=0  (6,22)=0  (7,0)=4  (7,1)=4  (7,2)=4  (7,3)=4  (7,4)=4  (7,6)=4  (7,7)=4  (7,8)=4  (7,9)=4  (7,10)=4  (7,12)=4  (7,13)=4  (7,14)=4  (7,15)=4  (7,16)=4  (7,18)=4  (7,19)=4  (7,20)=4  (7,21)=4  (7,22)=4  (8,0)=2  (8,1)=2  (8,2)=2  (8,3)=4  (8,4)=2  (8,6)=2  (8,7)=4  (8,8)=2  (8,9)=2  (8,10)=2  (8,12)=2  (8,13)=2  (8,14)=2  (8,15)=4  (8,16)=2  (8,18)=2  (8,19)=4  (8,20)=2  (8,21)=2  (8,22)=2  (9,0)=8  (9,1)=8  (9,2)=2  (9,3)=4  (9,4)=8  (9,6)=8  (9,7)=4  (9,8)=2  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,14)=2  (9,15)=4  (9,16)=8  (9,18)=8  (9,19)=4  (9,20)=2  (9,21)=8  (9,22)=8  (10,0)=0  (10,1)=0  (10,2)=2  (10,3)=4  (10,4)=8  (10,6)=0  (10,7)=4  (10,8)=2  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=2  (10,15)=4  (10,16)=0  (10,18)=0  (10,19)=4  (10,20)=2  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=2  (12,3)=4  (12,4)=8  (12,6)=0  (12,7)=4  (12,8)=2  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=2  (12,15)=4  (12,16)=0  (12,18)=0  (12,19)=4  (12,20)=2  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=2  (13,3)=4  (13,4)=8  (13,6)=0  (13,7)=4  (13,8)=2  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=2  (13,15)=4  (13,16)=0  (13,18)=0  (13,19)=4  (13,20)=2  (13,21)=0  (13,22)=0  (14,0)=2  (14,1)=2  (14,2)=2  (14,3)=4  (14,4)=2  (14,6)=2  (14,7)=4  (14,8)=2  (14,9)=2  (14,10)=2  (14,12)=2  (14,13)=2  (14,14)=2  (14,15)=4  (14,16)=2  (14,18)=2  (14,19)=4  (14,20)=2  (14,21)=2  (14,22)=2  (15,0)=4  (15,1)=4  (15,2)=4  (15,3)=4  (15,4)=4  (15,6)=4  (15,7)=4  (15,8)=4  (15,9)=4  (15,10)=4  (15,12)=4  (15,13)=4  (15,14)=4  (15,15)=4  (15,16)=4  (15,18)=4  (15,19)=4  (15,20)=4  (15,21)=4  (15,22)=4  (16,0)=0  (16,1)=0  (16,2)=2  (16,3)=4  (16,4)=8  (16,6)=0  (16,7)=4  (16,8)=2  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,14)=2  (16,15)=4  (16,16)=0  (16,18)=0  (16,19)=4  (16,20)=2  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=2  (18,3)=4  (18,4)=8  (18,6)=0  (18,7)=4  (18,8)=2  (18,9)=8  (18,10)=0  (18,12)=0  (18,13)=0  (18,14)=2  (18,15)=4  (18,16)=0  (18,18)=0  (18,19)=4  (18,20)=2  (18,21)=0  (18,22)=0  (19,0)=4  (19,1)=4  (19,2)=4  (19,3)=4  (19,4)=4  (19,6)=4  (19,7)=4  (19,8)=4  (19,9)=4  (19,10)=4  (19,12)=4  (19,13)=4  (19,14)=4  (19,15)=4  (19,16)=4  (19,18)=4  (19,19)=4  (19,20)=4  (19,21)=4  (19,22)=4  (20,0)=2  (20,1)=2  (20,2)=2  (20,3)=4  (20,4)=2  (20,6)=2  (20,7)=4  (20,8)=2  (20,9)=2  (20,10)=2  (20,12)=2  (20,13)=2  (20,14)=2  (20,15)=4  (20,16)=2  (20,18)=2  (20,19)=4  (20,20)=2  (20,21)=2  (20,22)=2  (21,0)=0  (21,1)=0  (21,2)=2  (21,3)=4  (21,4)=8  (21,6)=0  (21,7)=4  (21,8)=2  (21,9)=8  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=2  (21,15)=4  (21,16)=0  (21,18)=0  (21,19)=4  (21,20)=2  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=2  (22,3)=4  (22,4)=8  (22,6)=0  (22,7)=4  (22,8)=2  (22,9)=8  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=2  (22,15)=4  (22,16)=0  (22,18)=0  (22,19)=4  (22,20)=2  (22,21)=0  (22,22)=0 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (26,26) and color black and layers
  _0: a rectangle with size (26,26) and color cyan and mask ........x..x..x..x..x..x..|........x..x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|xx.......xxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (0,2)=8  (0,3)=3  (0,4)=1  (0,5)=8  (0,7)=3  (0,9)=1  (0,15)=3  (0,19)=3  (0,24)=1  (1,2)=8  (1,3)=3  (1,4)=1  (1,5)=8  (1,7)=3  (1,9)=1  (1,15)=3  (1,19)=3  (1,24)=1  (2,0)=8  (2,1)=8  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,0)=3  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=3  (3,5)=8  (3,6)=3  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=3  (3,15)=3  (3,16)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,22)=3  (3,24)=3  (3,25)=3  (4,0)=1  (4,1)=1  (4,2)=2  (4,3)=3  (4,4)=1  (4,5)=8  (4,6)=1  (4,7)=3  (4,8)=2  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,0)=8  (5,1)=8  (5,2)=2  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=2  (6,2)=2  (6,3)=3  (6,4)=1  (6,5)=8  (6,7)=3  (6,8)=2  (6,9)=1  (6,15)=3  (6,19)=3  (6,24)=1  (7,0)=3  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=3  (7,5)=8  (7,6)=3  (7,7)=3  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,3)=3  (10,4)=1  (10,7)=3  (10,9)=1  (10,15)=3  (10,19)=3  (10,24)=1  (12,3)=3  (12,4)=1  (12,7)=3  (12,9)=1  (12,15)=3  (12,19)=3  (12,24)=1  (13,3)=3  (13,4)=1  (13,7)=3  (13,9)=1  (13,15)=3  (13,19)=3  (13,24)=1  (15,0)=3  (15,1)=3  (15,3)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,9)=3  (15,10)=3  (15,12)=3  (15,13)=3  (15,15)=3  (15,16)=3  (15,18)=3  (15,19)=3  (15,21)=3  (15,22)=3  (15,24)=3  (15,25)=3  (16,3)=3  (16,4)=1  (16,7)=3  (16,9)=1  (16,15)=3  (16,19)=3  (16,24)=1  (18,3)=3  (18,4)=1  (18,7)=3  (18,9)=1  (18,15)=3  (18,19)=3  (18,24)=1  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,15)=3  (19,16)=3  (19,18)=3  (19,19)=3  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=3  (21,3)=3  (21,4)=1  (21,7)=3  (21,9)=1  (21,15)=3  (21,19)=3  (21,24)=1  (22,3)=3  (22,4)=1  (22,7)=3  (22,9)=1  (22,15)=3  (22,19)=3  (22,24)=1  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,3)=3  (25,4)=1  (25,7)=3  (25,9)=1  (25,15)=3  (25,19)=3  (25,24)=1 
   (7518.5 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (7,7) and color red and mask Border at (0,0)
  _01: a rectangle with size (5,5) and color cyan and mask +-cross at (1,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (2,2)
  _0111: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta: (4,4)=0 
   (181.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,26) and color black and layers
  _0: a rectangle with size (26,26) and color cyan and mask ........x..x..x..x..x..x..|........x..x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|.........xxxxxxxxxxxxxxxxx|...........x..x..x..x..x..|...........x..x..x..x..x..|xx.......xxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x..|xxxxxxxxxxxxxxxxxxxxxxxxxx|..x..x..x..x..x..x..x..x..|..x..x..x..x..x..x..x..x.. at (0,0)
diff: 
delta: (0,2)=8  (0,3)=3  (0,4)=1  (0,5)=8  (0,7)=3  (0,9)=1  (0,15)=3  (0,19)=3  (0,24)=1  (1,2)=8  (1,3)=3  (1,4)=1  (1,5)=8  (1,7)=3  (1,9)=1  (1,15)=3  (1,19)=3  (1,24)=1  (2,0)=8  (2,1)=8  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,0)=3  (3,1)=3  (3,2)=2  (3,3)=3  (3,4)=3  (3,5)=8  (3,6)=3  (3,7)=3  (3,8)=2  (3,9)=3  (3,10)=3  (3,12)=3  (3,13)=3  (3,15)=3  (3,16)=3  (3,18)=3  (3,19)=3  (3,21)=3  (3,22)=3  (3,24)=3  (3,25)=3  (4,0)=1  (4,1)=1  (4,2)=2  (4,3)=3  (4,4)=1  (4,5)=8  (4,6)=1  (4,7)=3  (4,8)=2  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,0)=8  (5,1)=8  (5,2)=2  (5,3)=8  (5,4)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=2  (6,2)=2  (6,3)=3  (6,4)=1  (6,5)=8  (6,7)=3  (6,8)=2  (6,9)=1  (6,15)=3  (6,19)=3  (6,24)=1  (7,0)=3  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=3  (7,5)=8  (7,6)=3  (7,7)=3  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,3)=3  (10,4)=1  (10,7)=3  (10,9)=1  (10,15)=3  (10,19)=3  (10,24)=1  (12,3)=3  (12,4)=1  (12,7)=3  (12,9)=1  (12,15)=3  (12,19)=3  (12,24)=1  (13,3)=3  (13,4)=1  (13,7)=3  (13,9)=1  (13,15)=3  (13,19)=3  (13,24)=1  (15,0)=3  (15,1)=3  (15,3)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,9)=3  (15,10)=3  (15,12)=3  (15,13)=3  (15,15)=3  (15,16)=3  (15,18)=3  (15,19)=3  (15,21)=3  (15,22)=3  (15,24)=3  (15,25)=3  (16,3)=3  (16,4)=1  (16,7)=3  (16,9)=1  (16,15)=3  (16,19)=3  (16,24)=1  (18,3)=3  (18,4)=1  (18,7)=3  (18,9)=1  (18,15)=3  (18,19)=3  (18,24)=1  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,15)=3  (19,16)=3  (19,18)=3  (19,19)=3  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=3  (21,3)=3  (21,4)=1  (21,7)=3  (21,9)=1  (21,15)=3  (21,19)=3  (21,24)=1  (22,3)=3  (22,4)=1  (22,7)=3  (22,9)=1  (22,15)=3  (22,19)=3  (22,24)=1  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,3)=3  (25,4)=1  (25,7)=3  (25,9)=1  (25,15)=3  (25,19)=3  (25,24)=1 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (26,26) and color cyan and layers
  _0: a rectangle with size (1,26) and color green and mask Full at (3,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=3  (0,4)=1  (0,6)=0  (0,7)=3  (0,9)=1  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=3  (0,16)=0  (0,18)=0  (0,19)=3  (0,21)=0  (0,22)=0  (0,24)=1  (0,25)=0  (1,0)=0  (1,1)=0  (1,3)=3  (1,4)=1  (1,6)=0  (1,7)=3  (1,9)=1  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=3  (1,16)=0  (1,18)=0  (1,19)=3  (1,21)=0  (1,22)=0  (1,24)=1  (1,25)=0  (2,2)=2  (2,3)=2  (2,4)=2  (2,5)=2  (2,6)=2  (2,7)=2  (2,8)=2  (3,2)=2  (3,5)=8  (3,8)=2  (3,11)=8  (3,14)=8  (3,17)=8  (3,20)=8  (3,23)=8  (4,0)=1  (4,1)=1  (4,2)=2  (4,3)=3  (4,4)=1  (4,6)=1  (4,7)=3  (4,8)=2  (4,9)=1  (4,10)=1  (4,12)=1  (4,13)=1  (4,15)=3  (4,16)=1  (4,18)=1  (4,19)=3  (4,21)=1  (4,22)=1  (4,24)=1  (4,25)=1  (5,2)=2  (5,8)=2  (6,0)=0  (6,1)=0  (6,2)=2  (6,3)=3  (6,4)=1  (6,6)=0  (6,7)=3  (6,8)=2  (6,9)=1  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=3  (6,16)=0  (6,18)=0  (6,19)=3  (6,21)=0  (6,22)=0  (6,24)=1  (6,25)=0  (7,0)=3  (7,1)=3  (7,2)=2  (7,3)=3  (7,4)=3  (7,6)=3  (7,7)=3  (7,8)=2  (7,9)=3  (7,10)=3  (7,12)=3  (7,13)=3  (7,15)=3  (7,16)=3  (7,18)=3  (7,19)=3  (7,21)=3  (7,22)=3  (7,24)=3  (7,25)=3  (8,2)=2  (8,3)=2  (8,4)=2  (8,5)=2  (8,6)=2  (8,7)=2  (8,8)=2  (9,0)=1  (9,1)=1  (9,3)=3  (9,4)=1  (9,6)=1  (9,7)=3  (9,9)=1  (9,10)=1  (9,12)=1  (9,13)=1  (9,15)=3  (9,16)=1  (9,18)=1  (9,19)=3  (9,21)=1  (9,22)=1  (9,24)=1  (9,25)=1  (10,0)=0  (10,1)=0  (10,3)=3  (10,4)=1  (10,6)=0  (10,7)=3  (10,9)=1  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=3  (10,16)=0  (10,18)=0  (10,19)=3  (10,21)=0  (10,22)=0  (10,24)=1  (10,25)=0  (12,0)=0  (12,1)=0  (12,3)=3  (12,4)=1  (12,6)=0  (12,7)=3  (12,9)=1  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=3  (12,16)=0  (12,18)=0  (12,19)=3  (12,21)=0  (12,22)=0  (12,24)=1  (12,25)=0  (13,0)=0  (13,1)=0  (13,3)=3  (13,4)=1  (13,6)=0  (13,7)=3  (13,9)=1  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=3  (13,16)=0  (13,18)=0  (13,19)=3  (13,21)=0  (13,22)=0  (13,24)=1  (13,25)=0  (15,0)=3  (15,1)=3  (15,3)=3  (15,4)=3  (15,6)=3  (15,7)=3  (15,9)=3  (15,10)=3  (15,12)=3  (15,13)=3  (15,15)=3  (15,16)=3  (15,18)=3  (15,19)=3  (15,21)=3  (15,22)=3  (15,24)=3  (15,25)=3  (16,0)=0  (16,1)=0  (16,3)=3  (16,4)=1  (16,6)=0  (16,7)=3  (16,9)=1  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=3  (16,16)=0  (16,18)=0  (16,19)=3  (16,21)=0  (16,22)=0  (16,24)=1  (16,25)=0  (18,0)=0  (18,1)=0  (18,3)=3  (18,4)=1  (18,6)=0  (18,7)=3  (18,9)=1  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=3  (18,16)=0  (18,18)=0  (18,19)=3  (18,21)=0  (18,22)=0  (18,24)=1  (18,25)=0  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,15)=3  (19,16)=3  (19,18)=3  (19,19)=3  (19,21)=3  (19,22)=3  (19,24)=3  (19,25)=3  (21,0)=0  (21,1)=0  (21,3)=3  (21,4)=1  (21,6)=0  (21,7)=3  (21,9)=1  (21,10)=0  (21,12)=0  (21,13)=0  (21,15)=3  (21,16)=0  (21,18)=0  (21,19)=3  (21,21)=0  (21,22)=0  (21,24)=1  (21,25)=0  (22,0)=0  (22,1)=0  (22,3)=3  (22,4)=1  (22,6)=0  (22,7)=3  (22,9)=1  (22,10)=0  (22,12)=0  (22,13)=0  (22,15)=3  (22,16)=0  (22,18)=0  (22,19)=3  (22,21)=0  (22,22)=0  (22,24)=1  (22,25)=0  (24,0)=1  (24,1)=1  (24,3)=3  (24,4)=1  (24,6)=1  (24,7)=3  (24,9)=1  (24,10)=1  (24,12)=1  (24,13)=1  (24,15)=3  (24,16)=1  (24,18)=1  (24,19)=3  (24,21)=1  (24,22)=1  (24,24)=1  (24,25)=1  (25,0)=0  (25,1)=0  (25,3)=3  (25,4)=1  (25,6)=0  (25,7)=3  (25,9)=1  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=3  (25,16)=0  (25,18)=0  (25,19)=3  (25,21)=0  (25,22)=0  (25,24)=1  (25,25)=0 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (28,28) and color green and layers
  _0: a rectangle with size (28,28) and color grey and mask .....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxx.......xxxxxxxxxxxxxxxx|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|............xxxxxxxxxxxxxxxx|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x.... at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,24)=8  (1,25)=0  (1,27)=1  (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,24)=8  (7,25)=1  (7,27)=1  (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,24)=8  (10,25)=0  (10,27)=1  (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,24)=8  (13,25)=0  (13,27)=1  (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,24)=8  (16,25)=0  (16,27)=1  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,5)=6  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,11)=6  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,5)=6  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,11)=6  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,24)=8  (19,25)=8  (19,27)=8  (20,5)=6  (20,11)=6  (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,5)=6  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,11)=6  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,5)=6  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,11)=6  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (23,5)=6  (23,6)=6  (23,7)=6  (23,8)=6  (23,9)=6  (23,10)=6  (23,11)=6  (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,24)=8  (27,25)=1  (27,27)=1 
   (11687.7 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (7,7) and color pink and mask Border at (0,0)
  _01: a rectangle with size (5,5) and color green and mask +-cross at (1,1)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (2,1)
  _0111: a rectangle with size (5,1) and color blue and mask Full at (1,2)
diff: 
delta: (1,4)=8  (4,4)=8  (5,4)=8 
   (230.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (28,28) and color green and layers
  _0: a rectangle with size (28,28) and color grey and mask .....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxxxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|.....x.....x.....x.....x....|xxxxx.......xxxxxxxxxxxxxxxx|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|.................x.....x....|............xxxxxxxxxxxxxxxx|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x....|...........x.....x.....x.... at (0,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,24)=8  (1,25)=0  (1,27)=1  (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,24)=8  (7,25)=1  (7,27)=1  (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,24)=8  (10,25)=0  (10,27)=1  (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,24)=8  (13,25)=0  (13,27)=1  (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,24)=8  (16,25)=0  (16,27)=1  (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,5)=6  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,11)=6  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,5)=6  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,11)=6  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,24)=8  (19,25)=8  (19,27)=8  (20,5)=6  (20,11)=6  (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,5)=6  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,11)=6  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,5)=6  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,11)=6  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (23,5)=6  (23,6)=6  (23,7)=6  (23,8)=6  (23,9)=6  (23,10)=6  (23,11)=6  (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,24)=8  (27,25)=1  (27,27)=1 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (28,28) and color green and layers
  _0: a rectangle with size (1,28) and color grey and mask Full at (5,0)
diff: 
delta: (0,0)=0  (0,1)=0  (0,3)=1  (0,4)=8  (0,5)=5# (0,6)=0  (0,7)=1  (0,9)=8  (0,10)=0  (0,11)=5# (0,12)=0  (0,13)=0  (0,15)=1  (0,16)=0  (0,17)=5# (0,18)=0  (0,19)=8  (0,21)=0  (0,22)=0  (0,23)=5# (0,24)=8  (0,25)=0  (0,27)=1  (1,0)=0  (1,1)=0  (1,3)=1  (1,4)=8  (1,5)=5# (1,6)=0  (1,7)=1  (1,9)=8  (1,10)=0  (1,11)=5# (1,12)=0  (1,13)=0  (1,15)=1  (1,16)=0  (1,17)=5# (1,18)=0  (1,19)=8  (1,21)=0  (1,22)=0  (1,23)=5# (1,24)=8  (1,25)=0  (1,27)=1  (2,5)=5# (2,11)=5# (2,17)=5# (2,23)=5# (3,0)=1  (3,1)=1  (3,3)=1  (3,4)=8  (3,5)=5# (3,6)=1  (3,7)=1  (3,9)=8  (3,10)=1  (3,11)=5# (3,12)=1  (3,13)=1  (3,15)=1  (3,16)=1  (3,17)=5# (3,18)=1  (3,19)=8  (3,21)=1  (3,22)=1  (3,23)=5# (3,24)=8  (3,25)=1  (3,27)=1  (4,0)=8  (4,1)=8  (4,3)=8  (4,4)=8  (4,5)=5# (4,6)=8  (4,7)=8  (4,9)=8  (4,10)=8  (4,11)=5# (4,12)=8  (4,13)=8  (4,15)=8  (4,16)=8  (4,17)=5# (4,18)=8  (4,19)=8  (4,21)=8  (4,22)=8  (4,23)=5# (4,24)=8  (4,25)=8  (4,27)=8  (6,0)=0  (6,1)=0  (6,3)=1  (6,4)=8  (6,5)=5# (6,6)=0  (6,7)=1  (6,9)=8  (6,10)=0  (6,11)=5# (6,12)=0  (6,13)=0  (6,15)=1  (6,16)=0  (6,17)=5# (6,18)=0  (6,19)=8  (6,21)=0  (6,22)=0  (6,23)=5# (6,24)=8  (6,25)=0  (6,27)=1  (7,0)=1  (7,1)=1  (7,3)=1  (7,4)=8  (7,5)=5# (7,6)=1  (7,7)=1  (7,9)=8  (7,10)=1  (7,11)=5# (7,12)=1  (7,13)=1  (7,15)=1  (7,16)=1  (7,17)=5# (7,18)=1  (7,19)=8  (7,21)=1  (7,22)=1  (7,23)=5# (7,24)=8  (7,25)=1  (7,27)=1  (8,5)=5# (8,11)=5# (8,17)=5# (8,23)=5# (9,0)=8  (9,1)=8  (9,3)=8  (9,4)=8  (9,5)=5# (9,6)=8  (9,7)=8  (9,9)=8  (9,10)=8  (9,11)=5# (9,12)=8  (9,13)=8  (9,15)=8  (9,16)=8  (9,17)=5# (9,18)=8  (9,19)=8  (9,21)=8  (9,22)=8  (9,23)=5# (9,24)=8  (9,25)=8  (9,27)=8  (10,0)=0  (10,1)=0  (10,3)=1  (10,4)=8  (10,5)=5# (10,6)=0  (10,7)=1  (10,9)=8  (10,10)=0  (10,11)=5# (10,12)=0  (10,13)=0  (10,15)=1  (10,16)=0  (10,17)=5# (10,18)=0  (10,19)=8  (10,21)=0  (10,22)=0  (10,23)=5# (10,24)=8  (10,25)=0  (10,27)=1  (11,0)=5# (11,1)=5# (11,2)=5# (11,3)=5# (11,4)=5# (11,5)=5# (11,6)=5# (11,7)=5# (11,8)=5# (11,9)=5# (11,10)=5# (11,11)=5# (11,12)=5# (11,13)=5# (11,14)=5# (11,15)=5# (11,16)=5# (11,17)=5# (11,18)=5# (11,19)=5# (11,20)=5# (11,21)=5# (11,22)=5# (11,23)=5# (11,24)=5# (11,25)=5# (11,26)=5# (11,27)=5# (12,0)=0  (12,1)=0  (12,3)=1  (12,4)=8  (12,5)=5# (12,6)=0  (12,7)=1  (12,9)=8  (12,10)=0  (12,11)=5# (12,12)=0  (12,13)=0  (12,15)=1  (12,16)=0  (12,17)=5# (12,18)=0  (12,19)=8  (12,21)=0  (12,22)=0  (12,23)=5# (12,24)=8  (12,25)=0  (12,27)=1  (13,0)=0  (13,1)=0  (13,3)=1  (13,4)=8  (13,5)=5# (13,6)=0  (13,7)=1  (13,9)=8  (13,10)=0  (13,11)=5# (13,12)=0  (13,13)=0  (13,15)=1  (13,16)=0  (13,17)=5# (13,18)=0  (13,19)=8  (13,21)=0  (13,22)=0  (13,23)=5# (13,24)=8  (13,25)=0  (13,27)=1  (14,5)=5# (14,11)=5# (14,17)=5# (14,23)=5# (15,0)=1  (15,1)=1  (15,3)=1  (15,4)=8  (15,5)=5# (15,6)=1  (15,7)=1  (15,9)=8  (15,10)=1  (15,11)=5# (15,12)=1  (15,13)=1  (15,15)=1  (15,16)=1  (15,17)=5# (15,18)=1  (15,19)=8  (15,21)=1  (15,22)=1  (15,23)=5# (15,24)=8  (15,25)=1  (15,27)=1  (16,0)=0  (16,1)=0  (16,3)=1  (16,4)=8  (16,5)=5# (16,6)=0  (16,7)=1  (16,9)=8  (16,10)=0  (16,11)=5# (16,12)=0  (16,13)=0  (16,15)=1  (16,16)=0  (16,17)=5# (16,18)=0  (16,19)=8  (16,21)=0  (16,22)=0  (16,23)=5# (16,24)=8  (16,25)=0  (16,27)=1  (17,0)=5# (17,1)=5# (17,2)=5# (17,3)=5# (17,4)=5# (17,5)=6  (17,6)=6  (17,7)=6  (17,8)=6  (17,9)=6  (17,10)=6  (17,11)=6  (17,12)=5# (17,13)=5# (17,14)=5# (17,15)=5# (17,16)=5# (17,17)=5# (17,18)=5# (17,19)=5# (17,20)=5# (17,21)=5# (17,22)=5# (17,23)=5# (17,24)=5# (17,25)=5# (17,26)=5# (17,27)=5# (18,0)=0  (18,1)=0  (18,3)=1  (18,4)=8  (18,5)=6  (18,6)=0  (18,7)=1  (18,9)=8  (18,10)=0  (18,11)=6  (18,12)=0  (18,13)=0  (18,15)=1  (18,16)=0  (18,17)=5# (18,18)=0  (18,19)=8  (18,21)=0  (18,22)=0  (18,23)=5# (18,24)=8  (18,25)=0  (18,27)=1  (19,0)=8  (19,1)=8  (19,3)=8  (19,4)=8  (19,5)=6  (19,6)=8  (19,7)=8  (19,9)=8  (19,10)=8  (19,11)=6  (19,12)=8  (19,13)=8  (19,15)=8  (19,16)=8  (19,17)=5# (19,18)=8  (19,19)=8  (19,21)=8  (19,22)=8  (19,23)=5# (19,24)=8  (19,25)=8  (19,27)=8  (20,5)=6  (20,11)=6  (20,17)=5# (20,23)=5# (21,0)=0  (21,1)=0  (21,3)=1  (21,4)=8  (21,5)=6  (21,6)=0  (21,7)=1  (21,9)=8  (21,10)=0  (21,11)=6  (21,12)=0  (21,13)=0  (21,15)=1  (21,16)=0  (21,17)=5# (21,18)=0  (21,19)=8  (21,21)=0  (21,22)=0  (21,23)=5# (21,24)=8  (21,25)=0  (21,27)=1  (22,0)=0  (22,1)=0  (22,3)=1  (22,4)=8  (22,5)=6  (22,6)=0  (22,7)=1  (22,9)=8  (22,10)=0  (22,11)=6  (22,12)=0  (22,13)=0  (22,15)=1  (22,16)=0  (22,17)=5# (22,18)=0  (22,19)=8  (22,21)=0  (22,22)=0  (22,23)=5# (22,24)=8  (22,25)=0  (22,27)=1  (23,0)=5# (23,1)=5# (23,2)=5# (23,3)=5# (23,4)=5# (23,5)=6  (23,6)=6  (23,7)=6  (23,8)=6  (23,9)=6  (23,10)=6  (23,11)=6  (23,12)=5# (23,13)=5# (23,14)=5# (23,15)=5# (23,16)=5# (23,17)=5# (23,18)=5# (23,19)=5# (23,20)=5# (23,21)=5# (23,22)=5# (23,23)=5# (23,24)=5# (23,25)=5# (23,26)=5# (23,27)=5# (24,0)=8  (24,1)=8  (24,3)=8  (24,4)=8  (24,5)=5# (24,6)=8  (24,7)=8  (24,9)=8  (24,10)=8  (24,11)=5# (24,12)=8  (24,13)=8  (24,15)=8  (24,16)=8  (24,17)=5# (24,18)=8  (24,19)=8  (24,21)=8  (24,22)=8  (24,23)=5# (24,24)=8  (24,25)=8  (24,27)=8  (25,0)=0  (25,1)=0  (25,3)=1  (25,4)=8  (25,5)=5# (25,6)=0  (25,7)=1  (25,9)=8  (25,10)=0  (25,11)=5# (25,12)=0  (25,13)=0  (25,15)=1  (25,16)=0  (25,17)=5# (25,18)=0  (25,19)=8  (25,21)=0  (25,22)=0  (25,23)=5# (25,24)=8  (25,25)=0  (25,27)=1  (26,5)=5# (26,11)=5# (26,17)=5# (26,23)=5# (27,0)=1  (27,1)=1  (27,3)=1  (27,4)=8  (27,5)=5# (27,6)=1  (27,7)=1  (27,9)=8  (27,10)=1  (27,11)=5# (27,12)=1  (27,13)=1  (27,15)=1  (27,16)=1  (27,17)=5# (27,18)=1  (27,19)=8  (27,21)=1  (27,22)=1  (27,23)=5# (27,24)=8  (27,25)=1  (27,27)=1 
! size mismatch, 10x10 instead of 7x7

TRAIN c909285e.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color yellow and mask .....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x...........x|.....x.....x...........x|.....x.....x...........x|xxxxxxxxxxxxxx......xxxx|.....x.....x...........x|.....x.....x...........x|.....x.....x.....x.....x|.....x.....x.....x.....x|.....x.....x.....x.....x|xxxxxxxxxxxxxxxxxxxxxxxx at (0,0)
diff: 
delta: (0,2)=1  (0,3)=2  (0,4)=3  (0,7)=2  (0,8)=1  (0,9)=3  (0,14)=3  (0,15)=2  (0,19)=3  (0,20)=1  (1,2)=1  (1,3)=2  (1,4)=3  (1,7)=2  (1,8)=1  (1,9)=3  (1,14)=3  (1,15)=2  (1,19)=3  (1,20)=1  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,4)=3  (2,6)=1  (2,7)=2  (2,8)=1  (2,9)=3  (2,10)=1  (2,12)=1  (2,13)=1  (2,14)=3  (2,15)=2  (2,16)=1  (2,18)=1  (2,19)=3  (2,20)=1  (2,21)=1  (2,22)=1  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=3  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=3  (3,10)=2  (3,12)=2  (3,13)=2  (3,14)=3  (3,15)=2  (3,16)=2  (3,18)=2  (3,19)=3  (3,20)=2  (3,21)=2  (3,22)=2  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=3  (4,20)=3  (4,21)=3  (4,22)=3  (6,2)=1  (6,3)=2  (6,4)=3  (6,7)=2  (6,8)=1  (6,9)=3  (6,14)=3  (6,15)=2  (6,19)=3  (6,20)=1  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=3  (7,6)=2  (7,7)=2  (7,8)=2  (7,9)=3  (7,10)=2  (7,12)=2  (7,13)=2  (7,14)=3  (7,15)=2  (7,16)=2  (7,18)=2  (7,19)=3  (7,20)=2  (7,21)=2  (7,22)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=2  (8,4)=3  (8,6)=1  (8,7)=2  (8,8)=1  (8,9)=3  (8,10)=1  (8,12)=1  (8,13)=1  (8,14)=3  (8,15)=2  (8,16)=1  (8,18)=1  (8,19)=3  (8,20)=1  (8,21)=1  (8,22)=1  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (9,16)=3  (9,18)=3  (9,19)=3  (9,20)=3  (9,21)=3  (9,22)=3  (10,2)=1  (10,3)=2  (10,4)=3  (10,7)=2  (10,8)=1  (10,9)=3  (10,14)=3  (10,15)=2  (10,19)=3  (10,20)=1  (12,2)=1  (12,3)=2  (12,4)=3  (12,7)=2  (12,8)=1  (12,9)=3  (12,14)=3  (12,15)=2  (12,19)=3  (12,20)=1  (13,2)=1  (13,3)=2  (13,4)=3  (13,7)=2  (13,8)=1  (13,9)=3  (13,14)=3  (13,15)=2  (13,19)=3  (13,20)=1  (14,0)=3  (14,1)=3  (14,2)=3  (14,3)=3  (14,4)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3  (14,14)=8  (14,15)=8  (14,16)=8  (14,17)=8  (14,18)=8  (14,19)=8  (14,20)=3  (14,21)=3  (14,22)=3  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=3  (15,6)=2  (15,7)=2  (15,8)=2  (15,9)=3  (15,10)=2  (15,12)=2  (15,13)=2  (15,14)=8  (15,15)=2  (15,16)=2  (15,17)=4  (15,18)=2  (15,19)=8  (15,20)=2  (15,21)=2  (15,22)=2  (16,2)=1  (16,3)=2  (16,4)=3  (16,7)=2  (16,8)=1  (16,9)=3  (16,14)=8  (16,15)=2  (16,17)=4  (16,19)=8  (16,20)=1  (17,14)=8  (17,15)=4  (17,16)=4  (17,17)=4  (17,18)=4  (17,19)=8  (18,2)=1  (18,3)=2  (18,4)=3  (18,7)=2  (18,8)=1  (18,9)=3  (18,14)=8  (18,15)=2  (18,17)=4  (18,19)=8  (18,20)=1  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,14)=8  (19,15)=8  (19,16)=8  (19,17)=8  (19,18)=8  (19,19)=8  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2  (20,4)=3  (20,6)=1  (20,7)=2  (20,8)=1  (20,9)=3  (20,10)=1  (20,12)=1  (20,13)=1  (20,14)=3  (20,15)=2  (20,16)=1  (20,18)=1  (20,19)=3  (20,20)=1  (20,21)=1  (20,22)=1  (21,2)=1  (21,3)=2  (21,4)=3  (21,7)=2  (21,8)=1  (21,9)=3  (21,14)=3  (21,15)=2  (21,19)=3  (21,20)=1  (22,2)=1  (22,3)=2  (22,4)=3  (22,7)=2  (22,8)=1  (22,9)=3  (22,14)=3  (22,15)=2  (22,19)=3  (22,20)=1 
! size mismatch, 10x10 instead of 6x6
>> Trial 2
data: a background with size (24,24) and color yellow and layers
  _0: a rectangle with size (6,6) and color cyan and mask Border at (14,14)
diff: 
delta: (0,0)=0  (0,1)=0  (0,2)=1  (0,3)=2  (0,4)=3  (0,6)=0  (0,7)=2  (0,8)=1  (0,9)=3  (0,10)=0  (0,12)=0  (0,13)=0  (0,14)=3  (0,15)=2  (0,16)=0  (0,18)=0  (0,19)=3  (0,20)=1  (0,21)=0  (0,22)=0  (1,0)=0  (1,1)=0  (1,2)=1  (1,3)=2  (1,4)=3  (1,6)=0  (1,7)=2  (1,8)=1  (1,9)=3  (1,10)=0  (1,12)=0  (1,13)=0  (1,14)=3  (1,15)=2  (1,16)=0  (1,18)=0  (1,19)=3  (1,20)=1  (1,21)=0  (1,22)=0  (2,0)=1  (2,1)=1  (2,2)=1  (2,3)=2  (2,4)=3  (2,6)=1  (2,7)=2  (2,8)=1  (2,9)=3  (2,10)=1  (2,12)=1  (2,13)=1  (2,14)=3  (2,15)=2  (2,16)=1  (2,18)=1  (2,19)=3  (2,20)=1  (2,21)=1  (2,22)=1  (3,0)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=3  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=3  (3,10)=2  (3,12)=2  (3,13)=2  (3,14)=3  (3,15)=2  (3,16)=2  (3,18)=2  (3,19)=3  (3,20)=2  (3,21)=2  (3,22)=2  (4,0)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,4)=3  (4,6)=3  (4,7)=3  (4,8)=3  (4,9)=3  (4,10)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (4,16)=3  (4,18)=3  (4,19)=3  (4,20)=3  (4,21)=3  (4,22)=3  (6,0)=0  (6,1)=0  (6,2)=1  (6,3)=2  (6,4)=3  (6,6)=0  (6,7)=2  (6,8)=1  (6,9)=3  (6,10)=0  (6,12)=0  (6,13)=0  (6,14)=3  (6,15)=2  (6,16)=0  (6,18)=0  (6,19)=3  (6,20)=1  (6,21)=0  (6,22)=0  (7,0)=2  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=3  (7,6)=2  (7,7)=2  (7,8)=2  (7,9)=3  (7,10)=2  (7,12)=2  (7,13)=2  (7,14)=3  (7,15)=2  (7,16)=2  (7,18)=2  (7,19)=3  (7,20)=2  (7,21)=2  (7,22)=2  (8,0)=1  (8,1)=1  (8,2)=1  (8,3)=2  (8,4)=3  (8,6)=1  (8,7)=2  (8,8)=1  (8,9)=3  (8,10)=1  (8,12)=1  (8,13)=1  (8,14)=3  (8,15)=2  (8,16)=1  (8,18)=1  (8,19)=3  (8,20)=1  (8,21)=1  (8,22)=1  (9,0)=3  (9,1)=3  (9,2)=3  (9,3)=3  (9,4)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (9,16)=3  (9,18)=3  (9,19)=3  (9,20)=3  (9,21)=3  (9,22)=3  (10,0)=0  (10,1)=0  (10,2)=1  (10,3)=2  (10,4)=3  (10,6)=0  (10,7)=2  (10,8)=1  (10,9)=3  (10,10)=0  (10,12)=0  (10,13)=0  (10,14)=3  (10,15)=2  (10,16)=0  (10,18)=0  (10,19)=3  (10,20)=1  (10,21)=0  (10,22)=0  (12,0)=0  (12,1)=0  (12,2)=1  (12,3)=2  (12,4)=3  (12,6)=0  (12,7)=2  (12,8)=1  (12,9)=3  (12,10)=0  (12,12)=0  (12,13)=0  (12,14)=3  (12,15)=2  (12,16)=0  (12,18)=0  (12,19)=3  (12,20)=1  (12,21)=0  (12,22)=0  (13,0)=0  (13,1)=0  (13,2)=1  (13,3)=2  (13,4)=3  (13,6)=0  (13,7)=2  (13,8)=1  (13,9)=3  (13,10)=0  (13,12)=0  (13,13)=0  (13,14)=3  (13,15)=2  (13,16)=0  (13,18)=0  (13,19)=3  (13,20)=1  (13,21)=0  (13,22)=0  (14,0)=3  (14,1)=3  (14,2)=3  (14,3)=3  (14,4)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,9)=3  (14,10)=3  (14,12)=3  (14,13)=3  (14,20)=3  (14,21)=3  (14,22)=3  (15,0)=2  (15,1)=2  (15,2)=2  (15,3)=2  (15,4)=3  (15,6)=2  (15,7)=2  (15,8)=2  (15,9)=3  (15,10)=2  (15,12)=2  (15,13)=2  (15,15)=2  (15,16)=2  (15,18)=2  (15,20)=2  (15,21)=2  (15,22)=2  (16,0)=0  (16,1)=0  (16,2)=1  (16,3)=2  (16,4)=3  (16,6)=0  (16,7)=2  (16,8)=1  (16,9)=3  (16,10)=0  (16,12)=0  (16,13)=0  (16,15)=2  (16,16)=0  (16,18)=0  (16,20)=1  (16,21)=0  (16,22)=0  (18,0)=0  (18,1)=0  (18,2)=1  (18,3)=2  (18,4)=3  (18,6)=0  (18,7)=2  (18,8)=1  (18,9)=3  (18,10)=0  (18,12)=0  (18,13)=0  (18,15)=2  (18,16)=0  (18,18)=0  (18,20)=1  (18,21)=0  (18,22)=0  (19,0)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,4)=3  (19,6)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (19,12)=3  (19,13)=3  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=1  (20,1)=1  (20,2)=1  (20,3)=2  (20,4)=3  (20,6)=1  (20,7)=2  (20,8)=1  (20,9)=3  (20,10)=1  (20,12)=1  (20,13)=1  (20,14)=3  (20,15)=2  (20,16)=1  (20,18)=1  (20,19)=3  (20,20)=1  (20,21)=1  (20,22)=1  (21,0)=0  (21,1)=0  (21,2)=1  (21,3)=2  (21,4)=3  (21,6)=0  (21,7)=2  (21,8)=1  (21,9)=3  (21,10)=0  (21,12)=0  (21,13)=0  (21,14)=3  (21,15)=2  (21,16)=0  (21,18)=0  (21,19)=3  (21,20)=1  (21,21)=0  (21,22)=0  (22,0)=0  (22,1)=0  (22,2)=1  (22,3)=2  (22,4)=3  (22,6)=0  (22,7)=2  (22,8)=1  (22,9)=3  (22,10)=0  (22,12)=0  (22,13)=0  (22,14)=3  (22,15)=2  (22,16)=0  (22,18)=0  (22,19)=3  (22,20)=1  (22,21)=0  (22,22)=0 
! size mismatch, 10x10 instead of 6x6

TEST c909285e.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 7033.0 bits (7033.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-90] Checking task c9e6f938.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2061.0 = 2076.6
DL output with Mo: L = 15.6 + 3804.1 = 3819.7
DL input+output M: L = 31.2 + 5865.1 = 5896.3

# learning a model for train pairs
2.000	
1.471	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.129	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.048	IN  DEF: ^.layer_0.shape.color=orange
0.978	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.913	OUT DEF: ^.size.j=^.size.j * 2
0.862	OUT DEF: ^.size.i=^.size.i
0.818	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.776	OUT DEF: ^.layer_0.shape.size.j=right(^.layer_0) + ^.layer_0.shape.size.j
0.740	IN  DEF: ^.color=black
0.706	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
0.686	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.size.j * 2) and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,right(^.layer_0) + ^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color orange and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 1073.9 = 1124.2
DL output with Mo: L = 69.9 + 483.0 = 552.8
DL input+output M: L = 120.2 + 1556.9 = 1677.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask x.|.x|xx at (0,1)
diff: 
delta:
   (43.9 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,4) and color orange and mask x..x|.xx.|xxxx at (0,1)
diff: 
delta:
   (17.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color orange and mask x.|.x|xx at (0,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (2,1)
diff: 
delta: (0,1)=7# (1,2)=7#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color orange and mask Full at (1,2)
diff: 
delta: (0,1)=7# (2,1)=7#
! 4 wrong pixels (generated / expected)

TRAIN c9e6f938.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (1,1)
diff: 
delta:
   (32.8 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,4) and color orange and mask Full at (1,1)
diff: 
delta:
   (3.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN c9e6f938.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (1,0)
diff: 
delta:
   (30.8 bits)
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (1,0)
diff: 
delta: (1,5)=7#
   (27.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (1,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)

TRAIN c9e6f938.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color orange and mask xx.|.x.|..x at (0,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color orange and mask Full at (0,0)
diff: 
delta: (1,1)=7# (2,2)=7#
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color orange and mask Full at (0,1)
diff: 
delta: (0,0)=7# (2,2)=7#
! 8 wrong pixels (generated / expected)

TEST c9e6f938.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 483.0 bits (483.0 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-89] Checking task c9f8e694.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 30768.8 = 30784.4
DL output with Mo: L = 15.6 + 34522.8 = 34538.4
DL input+output M: L = 31.2 + 65291.6 = 65322.9

# learning a model for train pairs
2.000	
1.549	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.275	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.997	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.901	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.771	OUT DEF: ^.layer_0.shape.mask=^.layer_01.shape.mask and ^.layer_011.shape.mask
0.666	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.575	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.505	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ^.layer_01.shape.mask and ^.layer_011.shape.mask at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 8238.0 = 8351.3
DL output with Mo: L = 210.2 + 7849.0 = 8059.2
DL input+output M: L = 323.5 + 16087.0 = 16410.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,2) and color grey and mask Full (and Border) at (1,2)
  _01: a rectangle with size (7,2) and color grey and mask Full (and Border) at (5,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (9,4)
diff: 
delta: (1,0)=1  (2,0)=2  (3,0)=1  (4,0)=1  (5,0)=1  (6,0)=2  (7,0)=2  (8,0)=1  (9,0)=1  (10,0)=1  (11,0)=2 
   (414.1 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,2) and color blue and mask Full at (1,2)
  _01: a rectangle with size (6,2) and color blue and mask Full (and Border) at (5,8)
  _011: a rectangle with size (10,1) and color blue and mask Full at (1,0)
  _0111: a rectangle with size (2,3) and color blue and mask Full (and Border) at (9,4)
  _01111: a rectangle with size (2,2) and color red and mask Full (and Border) at (6,2)
diff: 
delta: (2,0)=2  (2,2)=2  (2,3)=2  (6,0)=2  (6,8)=2  (6,9)=2  (7,0)=2  (7,8)=2  (7,9)=2  (11,0)=2  (11,4)=2  (11,5)=2  (11,6)=2  (11,8)=2  (11,9)=2 
   (576.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,2) and color grey and mask Full (and Border) at (1,2)
  _01: a rectangle with size (7,2) and color grey and mask Full (and Border) at (5,8)
  _011: a rectangle with size (3,3) and color grey and mask Full at (9,4)
diff: 
delta: (1,0)=1  (2,0)=2  (3,0)=1  (4,0)=1  (5,0)=1  (6,0)=2  (7,0)=2  (8,0)=1  (9,0)=1  (10,0)=1  (11,0)=2 
! size mismatch, 10x10 instead of 12x12

TRAIN c9f8e694.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (2,5) and color black and mask Full (and Border) at (10,7)
  _01: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _011: a rectangle with size (9,1) and color green and mask Full at (1,0)
diff: 
delta: (3,0)=4  (4,0)=4  (6,0)=4  (10,0)=4  (11,0)=4 
   (409.7 bits)
data: a background with size (12,12) and color green and layers
  _0: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _01: a rectangle with size (2,12) and color yellow and mask Full (and Border) at (3,0)
  _011: a rectangle with size (2,5) and color black and mask Full (and Border) at (10,7)
  _0111: a rectangle with size (1,12) and color yellow and mask Full at (6,0)
  _01111: a rectangle with size (2,7) and color yellow and mask Full (and Border) at (10,0)
diff: 
delta:
   (208.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,12) and color black and mask xxxxxxxxxxxx|.....xxxxxxx|.....xx.....|.....xx.....|.....xx.....|.xxxxxx.....|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........|.xxx........ at (0,0)
  _01: a rectangle with size (2,5) and color black and mask Full (and Border) at (10,7)
  _011: a rectangle with size (9,1) and color green and mask Full at (1,0)
diff: 
delta: (3,0)=4  (4,0)=4  (6,0)=4  (10,0)=4  (11,0)=4 
! size mismatch, 10x10 instead of 12x12

TRAIN c9f8e694.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color grey and layers
  _0: a rectangle with size (12,5) and color black and mask x....|x....|x....|x....|x....|x....|xxxxx|xxxxx|xxxxx|x...x|x...x|x...x at (0,1)
  _01: a rectangle with size (5,3) and color black and mask Full at (7,9)
  _011: a rectangle with size (6,4) and color black and mask xxxx|xxxx|xxxx|x...|x...|x... at (0,8)
diff: 
delta: (0,0)=1  (1,0)=8  (2,0)=1  (3,0)=1  (4,0)=7# (5,0)=7# (6,0)=7# (7,0)=7# (8,0)=8  (9,0)=8  (10,0)=8  (11,0)=8 
! size mismatch, 10x10 instead of 12x12

TEST c9f8e694.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 7849.0 bits (7849.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-88] Checking task caa06a1f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 28321.8 = 28337.4
DL output with Mo: L = 15.6 + 28215.3 = 28230.9
DL input+output M: L = 31.2 + 56537.1 = 56568.3

# learning a model for train pairs
2.000	
1.076	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.591	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.224	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.204	OUT DEF: ^.size=^.size
0.184	OUT DEF: ^.layer_0.shape.size=^.size
0.172	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.163	OUT DEF: ^.color=^.layer_0.shape.color
0.155	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.147	IN  DEF: ^.layer_0.shape.mask=Odd Checkboard
0.146	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.141	IN  DEF: ^.layer_01.shape.color=pink
0.138	IN  DEF: ^.layer_01.shape.mask=Full
0.134	IN  DEF: ^.layer_011.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.layer_0.shape.color and layers
  _0: a rectangle with size ^.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Odd Checkboard at (?,?)
  _01: a rectangle with size (?,?) and color pink and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 119.9 + 3474.1 = 3594.0
DL output with Mo: L = 43.4 + 169.3 = 212.8
DL input+output M: L = 163.4 + 3643.4 = 3806.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color orange and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,5) and color pink and mask Full at (1,1)
  _011: a rectangle with size (7,7) and color pink and mask Full at (0,0)
diff: 
delta:
   (122.5 bits)
data: a background with size (11,11) and color orange and layers
  _0: a rectangle with size (11,11) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color green and layers
  _0: a rectangle with size (7,7) and color orange and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,5) and color pink and mask Full at (1,1)
  _011: a rectangle with size (7,7) and color pink and mask Full at (0,0)
diff: 
delta:
! 60 wrong pixels (generated / expected)

TRAIN caa06a1f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (7,7) and color pink and mask Full at (0,0)
  _011: a rectangle with size (8,8) and color blue and mask Full at (0,0)
diff: 
delta:
   (118.7 bits)
data: a background with size (8,8) and color green and layers
  _0: a rectangle with size (8,8) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (7,7) and color pink and mask Full at (0,0)
  _011: a rectangle with size (8,8) and color blue and mask Full at (0,0)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN caa06a1f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,6) and color grey and layers
  _0: a rectangle with size (5,5) and color yellow and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,6) and color pink and mask Full at (5,0)
  _011: a rectangle with size (6,1) and color pink and mask Full at (0,5)
diff: 
delta:
   (106.2 bits)
data: a background with size (6,6) and color yellow and layers
  _0: a rectangle with size (6,6) and color grey and mask Odd Checkboard at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color grey and layers
  _0: a rectangle with size (5,5) and color yellow and mask Odd Checkboard at (0,0)
  _01: a rectangle with size (1,6) and color pink and mask Full at (5,0)
  _011: a rectangle with size (6,1) and color pink and mask Full at (0,5)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN caa06a1f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (12,2) and color orange and mask Odd Checkboard at (0,1)
  _01: a rectangle with size (12,2) and color cyan and mask Full at (0,2)
  _011: a rectangle with size (12,11) and color grey and mask Full at (0,0)
diff:   ^.layer_01.shape.color
delta: (0,0)=8  (0,5)=7# (0,6)=8  (0,8)=7# (0,9)=8  (0,11)=7# (1,3)=5# (1,4)=7# (1,5)=8  (1,7)=7# (1,8)=8  (1,10)=7# (1,11)=8  (2,0)=8  (2,5)=7# (2,6)=8  (2,8)=7# (2,9)=8  (2,11)=7# (3,3)=5# (3,4)=7# (3,5)=8  (3,7)=7# (3,8)=8  (3,10)=7# (3,11)=8  (4,0)=8  (4,5)=7# (4,6)=8  (4,8)=7# (4,9)=8  (4,11)=7# (5,3)=5# (5,4)=7# (5,5)=8  (5,7)=7# (5,8)=8  (5,10)=7# (5,11)=8  (6,0)=8  (6,5)=7# (6,6)=8  (6,8)=7# (6,9)=8  (6,11)=7# (7,3)=5# (7,4)=7# (7,5)=8  (7,7)=7# (7,8)=8  (7,10)=7# (7,11)=8  (8,0)=8  (8,5)=7# (8,6)=8  (8,8)=7# (8,9)=8  (8,11)=7# (9,3)=5# (9,4)=7# (9,5)=8  (9,7)=7# (9,8)=8  (9,10)=7# (9,11)=8  (10,0)=8  (10,5)=7# (10,6)=8  (10,8)=7# (10,9)=8  (10,11)=7# (11,3)=5# (11,4)=7# (11,5)=8  (11,7)=7# (11,8)=8  (11,10)=7# (11,11)=8 
! 270 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (12,2) and color cyan and mask Odd Checkboard at (0,2)
  _01: a rectangle with size (12,2) and color orange and mask Full at (0,1)
  _011: a rectangle with size (12,11) and color grey and mask Full at (0,0)
diff:   ^.layer_01.shape.color
delta: (0,0)=8  (0,1)=5# (0,5)=7# (0,6)=8  (0,8)=7# (0,9)=8  (0,11)=7# (1,4)=7# (1,5)=8  (1,7)=7# (1,8)=8  (1,10)=7# (1,11)=8  (2,0)=8  (2,1)=5# (2,5)=7# (2,6)=8  (2,8)=7# (2,9)=8  (2,11)=7# (3,4)=7# (3,5)=8  (3,7)=7# (3,8)=8  (3,10)=7# (3,11)=8  (4,0)=8  (4,1)=5# (4,5)=7# (4,6)=8  (4,8)=7# (4,9)=8  (4,11)=7# (5,4)=7# (5,5)=8  (5,7)=7# (5,8)=8  (5,10)=7# (5,11)=8  (6,0)=8  (6,1)=5# (6,5)=7# (6,6)=8  (6,8)=7# (6,9)=8  (6,11)=7# (7,4)=7# (7,5)=8  (7,7)=7# (7,8)=8  (7,10)=7# (7,11)=8  (8,0)=8  (8,1)=5# (8,5)=7# (8,6)=8  (8,8)=7# (8,9)=8  (8,11)=7# (9,4)=7# (9,5)=8  (9,7)=7# (9,8)=8  (9,10)=7# (9,11)=8  (10,0)=8  (10,1)=5# (10,5)=7# (10,6)=8  (10,8)=7# (10,9)=8  (10,11)=7# (11,4)=7# (11,5)=8  (11,7)=7# (11,8)=8  (11,10)=7# (11,11)=8 
! 270 wrong pixels (generated / expected)

TEST caa06a1f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 169.3 bits (169.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-87] Checking task cbded52d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 24414.2 = 24429.8
DL output with Mo: L = 15.6 + 25987.6 = 26003.2
DL input+output M: L = 31.2 + 50401.8 = 50433.1

# learning a model for train pairs
2.000	
1.290	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.507	OUT OBJECT at ^.layer_0: ^.layer_0
0.422	IN  DEF: ^.layer_0.shape.mask=..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..
0.401	OUT DEF: ^.size=^.size
0.390	IN  DEF: ^.color=blue
0.380	OUT DEF: ^.color=^.color
0.373	IN  DEF: ^.layer_0.shape.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color blue and layers
  _0: a rectangle with size (?,?) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (?,?)

DL input  with Mi: L = 124.1 + 4483.5 = 4607.6
DL output with Mo: L = 14.3 + 4775.0 = 4789.3
DL input+output M: L = 138.5 + 9258.4 = 9396.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (0,1)=4  (0,7)=4  (4,0)=2  (4,6)=2  (6,1)=4 
   (174.4 bits)
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (0,1)=4  (0,4)=4  (0,7)=4  (3,1)=4  (4,0)=2  (4,3)=2  (4,6)=2  (6,1)=4 
   (200.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (0,1)=4  (0,7)=4  (4,0)=2  (4,6)=2  (6,1)=4 
! 8 wrong pixels (generated / expected)

TRAIN cbded52d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (0,3)=7# (1,1)=3  (1,7)=3  (6,3)=7# (7,7)=3 
   (174.4 bits)
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (0,3)=7# (1,1)=3  (1,4)=3  (1,7)=3  (3,3)=7# (4,7)=3  (6,3)=7# (7,7)=3 
   (200.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (0,3)=7# (1,1)=3  (1,7)=3  (6,3)=7# (7,7)=3 
! 8 wrong pixels (generated / expected)

TRAIN cbded52d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (4,0)=3  (4,6)=3 
   (99.6 bits)
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (4,0)=3  (4,3)=3  (4,6)=3 
   (76.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (4,0)=3  (4,6)=3 
! 3 wrong pixels (generated / expected)

TRAIN cbded52d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color blue and layers
  _0: a rectangle with size (8,8) and color black and mask ..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x..|xxxxxxxx|..x..x..|..x..x.. at (0,0)
diff: 
delta: (1,1)=8  (1,7)=8  (6,0)=6  (6,6)=6  (7,7)=8 
! 8 wrong pixels (generated / expected)

TEST cbded52d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 4775.0 bits (4775.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-86] Checking task cce03e0d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3677.4 = 3693.1
DL output with Mo: L = 15.6 + 11195.4 = 11211.0
DL input+output M: L = 31.2 + 14872.9 = 14904.1

# learning a model for train pairs
2.000	
1.757	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.515	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.374	OUT OBJECT at ^.layer_01: ^.layer_0.shape at (?,?)
1.302	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.251	OUT DEF: ^.size=^.size * 3
1.206	IN  DEF: ^.layer_0.shape.color=blue
1.185	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.170	OUT DEF: ^.layer_011.shape.color=red
1.156	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j
1.143	OUT DEF: ^.layer_011.pos.j=^.layer_00.pos.j
1.130	OUT DEF: ^.layer_0.pos.j=^.layer_00.pos.j * 3
1.118	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.104	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i * 3
1.094	OUT DEF: ^.layer_011.shape.size.j=^.layer_01.pos.j + 1
1.084	OUT DEF: ^.layer_011.shape.size.i=^.layer_01.pos.j + 1
1.077	OUT OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.062	OUT DEF: ^.layer_010.shape.color=blue
1.051	OUT DEF: ^.layer_010.shape.size.j=^.layer_01.pos.i
1.044	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 3 and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,^.layer_00.pos.j * 3)
  _010: a rectangle with size (?,^.layer_01.pos.i) and color blue and mask ? at (?,?)
  _01: ^.layer_0.shape at (^.layer_01.pos.i * 3,^.layer_0.pos.j)
  _011: a rectangle with size (^.layer_01.pos.j + 1,^.layer_01.pos.j + 1) and color red and mask ? at (?,^.layer_00.pos.j)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color blue and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 91.0 + 2231.2 = 2322.2
DL output with Mo: L = 251.8 + 4406.1 = 4657.9
DL input+output M: L = 342.8 + 6637.3 = 6980.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
   (77.4 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (3,0)
  _010: a rectangle with size (1,1) and color blue and mask Full at (4,1)
  _01: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (3,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
diff: 
delta:
   (47.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (1,1)
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _00: a point with color blue at (2,2)
  _0: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (0,0)
  _01: a point with color red at (1,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN cce03e0d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (0,2)
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta:
   (69.6 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,6)
  _010: a rectangle with size (2,2) and color blue and mask .x|xx at (0,6)
  _01: a rectangle with size (2,2) and color blue and mask .x|xx at (6,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (6,2)
diff: 
delta: (0,8)=2  (8,0)=2 
   (107.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color red at (0,2)
  _0: a rectangle with size (2,2) and color blue and mask .x|xx at (0,0)
  _01: a point with color red at (2,0)
diff: 
delta:
! 13 wrong pixels (generated / expected)

TRAIN cce03e0d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _00: a point with color black at (1,0)
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color black at (2,2)
diff: 
delta:
   (76.1 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color red and mask ......x.x|.......x.|......x..|...x.x...|....x....|...x.....|x.x......|.x.......|x........ at (0,0)
  _010: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a rectangle with size (3,2) and color blue and mask Even Checkboard at (6,1)
  _011: a rectangle with size (3,3) and color red and mask x.x|.x.|x.. at (0,0)
diff: 
delta: (0,7)=1  (1,8)=1  (2,7)=1  (3,4)=1  (4,5)=1  (5,4)=1 
   (285.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _00: a point with color black at (1,0)
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color black at (2,2)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _00: a point with color black at (2,2)
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color black at (1,0)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _00: a point with color blue at (0,1)
  _0: a rectangle with size (3,2) and color blue and mask Even Checkboard at (0,1)
  _01: a point with color black at (1,0)
diff: 
delta: (2,2)=0 
! 36 wrong pixels (generated / expected)

TRAIN cce03e0d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01: a point with color black at (1,1)
diff: 
delta: (2,0)=1  (2,2)=0 
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color red and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _01: a point with color blue at (2,0)
diff: 
delta: (1,1)=0  (2,2)=0 
! 33 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _00: a point with color blue at (0,0)
  _0: a rectangle with size (1,1) and color blue and mask Full at (2,0)
  _01: a point with color black at (1,1)
diff: 
delta: (1,2)=1  (2,2)=0 
! 31 wrong pixels (generated / expected)

TEST cce03e0d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.8 sec (14.8 sec/task)
bits-train-error = 4406.1 bits (4406.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-85] Checking task cdecee7f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6331.7 = 6347.3
DL output with Mo: L = 15.6 + 4989.2 = 5004.8
DL input+output M: L = 31.2 + 11320.9 = 11352.1

# learning a model for train pairs
2.000	
1.954	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.907	OUT DEF: ^.layer_0.pos='(0,0)
1.860	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.813	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.765	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.715	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.663	OUT OBJECT at ^.layer_011111: a point with color ? at (?,?)
1.624	OUT DEF: ^.size.i=3
1.586	OUT DEF: ^.size.j=3
1.550	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.513	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.476	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.439	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.400	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.360	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
1.337	OUT DEF: ^.layer_01.pos.i='0
1.314	OUT DEF: ^.layer_011.pos.i='0
1.293	OUT DEF: ^.layer_01.pos.j=area(^.layer_01.shape)
1.260	OUT DEF: ^.layer_011111.shape=^.layer_01.shape
1.237	OUT DEF: ^.layer_011.pos.j=2
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color ? and layers
  _0: a point with color ? at '(0,0)
  _01: a point with color ? at ('0,area(^.layer_01.shape))
  _011: a point with color ? at ('0,2)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: ^.layer_01.shape at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)

DL input  with Mi: L = 134.8 + 4775.3 = 4910.1
DL output with Mo: L = 160.4 + 2157.1 = 2317.6
DL input+output M: L = 295.3 + 6932.4 = 7227.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,1)
  _01: a point with color pink at (2,4)
  _011: a point with color green at (4,0)
  _0111: a point with color orange at (5,6)
  _01111: a point with color brown at (7,9)
  _011111: a point with color cyan at (8,2)
diff: 
delta:
   (124.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,0)
  _01: a point with color blue at (0,1)
  _011: a point with color cyan at (0,2)
  _0111: a point with color brown at (1,0)
  _01111: a point with color orange at (1,1)
  _011111: a point with color pink at (1,2)
diff: 
delta:
   (54.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,1)
  _01: a point with color pink at (2,4)
  _011: a point with color green at (4,0)
  _0111: a point with color orange at (5,6)
  _01111: a point with color brown at (7,9)
  _011111: a point with color cyan at (8,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN cdecee7f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
  _011: a point with color cyan at (2,6)
  _0111: a point with color pink at (4,4)
  _01111: a point with color brown at (5,0)
  _011111: a point with color grey at (6,8)
diff: 
delta: (7,1)=3 
   (150.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color brown at (0,0)
  _01: a point with color green at (0,1)
  _011: a point with color yellow at (0,2)
  _0111: a point with color grey at (1,0)
  _01111: a point with color cyan at (1,1)
  _011111: a point with color red at (2,0)
diff: 
delta: (1,2)=6 
   (77.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color red at (1,9)
  _011: a point with color cyan at (2,6)
  _0111: a point with color pink at (4,4)
  _01111: a point with color brown at (5,0)
  _011111: a point with color grey at (6,8)
diff: 
delta: (7,1)=3 
! 7 wrong pixels (generated / expected)

TRAIN cdecee7f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,9)
  _01: a point with color grey at (1,2)
  _011: a point with color brown at (1,5)
  _0111: a point with color blue at (2,8)
  _01111: a point with color yellow at (3,1)
  _011111: a point with color grey at (4,7)
diff: 
delta: (5,4)=3  (8,0)=2  (8,6)=1 
   (202.7 bits)
data: a background with size (3,3) and color blue and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (0,1)
  _011: a point with color grey at (0,2)
  _0111: a point with color brown at (1,1)
  _01111: a point with color green at (1,2)
  _011111: a point with color grey at (2,0)
diff: 
delta: (2,2)=3 
   (84.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color green at (0,9)
  _01: a point with color grey at (1,2)
  _011: a point with color brown at (1,5)
  _0111: a point with color blue at (2,8)
  _01111: a point with color yellow at (3,1)
  _011111: a point with color grey at (4,7)
diff: 
delta: (5,4)=3  (8,0)=2  (8,6)=1 
! 9 wrong pixels (generated / expected)

TRAIN cdecee7f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color brown at (1,6)
  _011: a point with color blue at (2,9)
  _0111: a point with color red at (3,1)
  _01111: a point with color pink at (4,7)
  _011111: a point with color green at (5,3)
diff: 
delta: (7,0)=5# (8,5)=4  (9,2)=9#
! 9 wrong pixels (generated / expected)

TEST cdecee7f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.5 sec (24.5 sec/task)
bits-train-error = 2157.1 bits (2157.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-84] Checking task ce22a75a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2243.6 = 2259.2
DL output with Mo: L = 15.6 + 16129.8 = 16145.4
DL input+output M: L = 31.2 + 18373.4 = 18404.6

# learning a model for train pairs
2.000	
1.160	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.092	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.022	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.946	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.897	IN  DEF: ^.layer_0.shape.color=grey
0.848	IN  DEF: ^.layer_01.shape.color=grey
0.799	IN  DEF: ^.layer_011.shape.color=grey
0.775	OUT DEF: ^.size=^.size
0.752	IN  DEF: ^.color=black
0.730	OUT DEF: ^.layer_0.shape.size=^.layer_011.pos + 2
0.717	OUT DEF: ^.layer_0.pos=^.layer_0.pos - 1
0.710	OUT DEF: ^.layer_0.shape.color=blue
0.707	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_011.pos + 2 and color blue and mask ? at ^.layer_0.pos - 1
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color grey at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color grey at (?,?)

DL input  with Mi: L = 82.5 + 1311.4 = 1393.9
DL output with Mo: L = 65.2 + 1388.0 = 1453.1
DL input+output M: L = 147.7 + 2699.4 = 2847.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,7)
diff: 
delta:
   (52.3 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,9) and color blue and mask xxx......|xxx......|xxx......|...xxx...|...xxx...|...xxx...|......xxx|......xxx|......xxx at (0,0)
diff: 
delta:
   (81.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,7)
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,1)
  _01: a point with color grey at (7,7)
  _011: a point with color grey at (4,4)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (4,4)
  _01: a point with color grey at (1,1)
  _011: a point with color grey at (7,7)
diff: 
delta:
! 27 wrong pixels (generated / expected)

TRAIN ce22a75a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,4)
diff: 
delta: (7,7)=5#
   (78.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (9,6) and color blue and mask xxx...|xxx...|xxx...|xxx...|xxx...|xxx...|xxxxxx|xxxxxx|xxxxxx at (0,3)
diff: 
delta:
   (56.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color grey at (4,4)
  _011: a point with color grey at (7,4)
diff: 
delta: (7,7)=5#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,4)
  _01: a point with color grey at (7,4)
  _011: a point with color grey at (4,4)
diff: 
delta: (7,7)=5#
! 36 wrong pixels (generated / expected)

TRAIN ce22a75a.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (4,1)
  _011: a point with color grey at (4,7)
diff: 
delta: (7,1)=5#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a point with color grey at (1,7)
  _01: a point with color grey at (4,1)
  _011: a point with color grey at (7,1)
diff: 
delta: (4,7)=5#
! 27 wrong pixels (generated / expected)

TEST ce22a75a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 1388.0 bits (1388.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-83] Checking task ce4f8723.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 21281.0 = 21296.6
DL output with Mo: L = 15.6 + 4001.9 = 4017.5
DL input+output M: L = 31.2 + 25282.9 = 25314.2

# learning a model for train pairs
2.000	
1.631	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.275	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.058	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.913	OUT DEF: ^.size=^.layer_0.shape.size
0.785	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.743	OUT DEF: ^.layer_0.pos.i='0
0.613	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.568	OUT DEF: ^.layer_0.pos='(0,0)
0.513	OUT DEF: ^.layer_0.shape.color=green
0.488	OUT DEF: ^.color=black
0.478	IN  DEF: ^.layer_011.shape.color=yellow
0.471	IN  DEF: ^.layer_011.shape.mask=Full
0.467	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color green and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)

DL input  with Mi: L = 114.7 + 5809.9 = 5924.6
DL output with Mo: L = 42.6 + 714.6 = 757.2
DL input+output M: L = 157.3 + 6524.6 = 6681.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
  _01: a rectangle with size (4,3) and color blue and mask xx.|.x.|.x.|x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (1,3)=1 
   (162.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|.xxx|xx..|x.xx at (0,0)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
  _01: a rectangle with size (4,3) and color blue and mask xx.|.x.|.x.|x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (1,3)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask xx.|.x.|.x.|x.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xxxx|..xx|xx..|..xx at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta: (1,3)=1 
! size mismatch, 4x3 instead of 4x4

TRAIN ce4f8723.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.x.x|..xx|xx.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|...x|xxxx|xx.x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (141.6 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|.x.x|xxxx|xx.x at (0,0)
diff: 
delta:
   (17.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xxx.|.x.x|..xx|xx.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask ...x|...x|xxxx|xx.x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN ce4f8723.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xx.x|..x.|.x..|x.x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (140.6 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xx.x|x.x.|xx.x|xxxx at (0,0)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx..|x.x.|xx.x|xxxx at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xx.x|..x.|.x..|x.x. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN ce4f8723.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
  _01: a rectangle with size (4,3) and color red and mask xx.|..x|xx.|..x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
   (136.7 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxx.|xxxx|xxxx|.xxx at (0,0)
diff: 
delta:
   (15.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
  _01: a rectangle with size (4,3) and color red and mask xx.|..x|xx.|..x at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask xx.|..x|xx.|..x at (5,0)
  _01: a rectangle with size (4,4) and color blue and mask x.x.|xx.x|x.xx|.x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! size mismatch, 4x3 instead of 4x4

TRAIN ce4f8723.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|..x.|.x.x|xxx. at (5,0)
  _01: a rectangle with size (4,3) and color blue and mask x.x|x.x|.x.|x.x at (0,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,4) and color black and layers
  _0: a rectangle with size (4,3) and color blue and mask x.x|x.x|.x.|x.x at (0,0)
  _01: a rectangle with size (4,4) and color red and mask xx..|..x.|.x.x|xxx. at (5,0)
  _011: a rectangle with size (1,4) and color yellow and mask Full at (4,0)
diff: 
delta:
! size mismatch, 4x3 instead of 4x4

TEST ce4f8723.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.3 sec (5.3 sec/task)
bits-train-error = 714.6 bits (714.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-82] Checking task ce602527.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 58863.7 = 58879.4
DL output with Mo: L = 15.6 + 6325.2 = 6340.8
DL input+output M: L = 31.2 + 65188.9 = 65220.2

# learning a model for train pairs
2.000	
1.460	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.027	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.853	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.614	OUT DEF: ^.layer_0.shape=^.layer_01.shape
0.521	OUT DEF: ^.size=^.layer_01.shape.size
0.465	OUT DEF: ^.color=^.color
0.409	OUT DEF: ^.layer_0.pos='(0,0)

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_01.shape.size and color ^.color and layers
  _0: ^.layer_01.shape at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 23593.9 = 23675.1
DL output with Mo: L = 44.5 + 0.0 = 44.5
DL input+output M: L = 125.7 + 23593.9 = 23719.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (8,10) and color cyan and mask xxxxxxxxxx|xxxxxxxxxx|xx..xx..xx|xx..xx..xx|........xx|........xx|........xx|........xx at (9,3)
  _01: a rectangle with size (5,5) and color red and mask xxxxx|x.x.x|....x|x.x.x|xxxxx at (3,3)
diff: 
delta: (2,11)=3  (2,12)=3  (2,14)=3  (2,15)=3  (3,11)=3  (3,15)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,13)=3  (6,11)=3  (6,12)=3  (6,13)=3  (6,14)=3  (6,15)=3  (15,3)=8  (15,4)=8  (15,7)=8  (15,8)=8  (16,3)=8  (16,4)=8  (16,7)=8  (16,8)=8 
   (891.1 bits)
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (5,5) and color red and mask xxxxx|x.x.x|....x|x.x.x|xxxxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (8,10) and color cyan and mask xxxxxxxxxx|xxxxxxxxxx|xx..xx..xx|xx..xx..xx|........xx|........xx|........xx|........xx at (9,3)
  _01: a rectangle with size (5,5) and color green and mask xx.xx|x...x|xxxxx|..x..|xxxxx at (2,11)
diff: 
delta: (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (4,3)=2  (4,5)=2  (4,7)=2  (5,7)=2  (6,3)=2  (6,5)=2  (6,7)=2  (7,3)=2  (7,4)=2  (7,5)=2  (7,6)=2  (7,7)=2  (15,3)=8  (15,4)=8  (15,7)=8  (15,8)=8  (16,3)=8  (16,4)=8  (16,7)=8  (16,8)=8 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,17) and color blue and layers
  _0: a rectangle with size (8,10) and color cyan and mask xxxxxxxxxx|xxxxxxxxxx|xx..xx..xx|xx..xx..xx|........xx|........xx|........xx|........xx at (9,3)
  _01: a rectangle with size (5,5) and color red and mask xxxxx|x.x.x|....x|x.x.x|xxxxx at (3,3)
diff: 
delta: (2,11)=3  (2,12)=3  (2,14)=3  (2,15)=3  (3,11)=3  (3,15)=3  (4,11)=3  (4,12)=3  (4,13)=3  (4,14)=3  (4,15)=3  (5,13)=3  (6,11)=3  (6,12)=3  (6,13)=3  (6,14)=3  (6,15)=3  (15,3)=8  (15,4)=8  (15,7)=8  (15,8)=8  (16,3)=8  (16,4)=8  (16,7)=8  (16,8)=8 
correct output grid

TRAIN ce602527.json/1: 1 2nd (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (8,5) and color pink and mask .xx..|.xx..|xxxxx|xxxxx|.xx..|.xx..|xxxxx|xxxxx at (10,0)
  _01: a rectangle with size (5,3) and color yellow and mask .x.|xxx|.x.|xxx|.x. at (8,11)
diff: 
delta: (4,4)=3  (4,6)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (6,4)=3  (6,6)=3 
   (410.5 bits)
data: a background with size (5,3) and color cyan and layers
  _0: a rectangle with size (5,3) and color yellow and mask .x.|xxx|.x.|xxx|.x. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (8,5) and color pink and mask .xx..|.xx..|xxxxx|xxxxx|.xx..|.xx..|xxxxx|xxxxx at (10,0)
  _01: a rectangle with size (3,5) and color green and mask .x.x.|xxxxx|.x.x. at (4,3)
diff: 
delta: (8,12)=4  (9,11)=4  (9,12)=4  (9,13)=4  (10,12)=4  (11,11)=4  (11,12)=4  (11,13)=4  (12,12)=4 
! size mismatch, 3x5 instead of 5x3
>> Trial 2
data: a background with size (18,18) and color cyan and layers
  _0: a rectangle with size (8,5) and color pink and mask .xx..|.xx..|xxxxx|xxxxx|.xx..|.xx..|xxxxx|xxxxx at (10,0)
  _01: a rectangle with size (5,3) and color yellow and mask .x.|xxx|.x.|xxx|.x. at (8,11)
diff: 
delta: (4,4)=3  (4,6)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,6)=3  (5,7)=3  (6,4)=3  (6,6)=3 
correct output grid

TRAIN ce602527.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (19,17) and color red and layers
  _0: a rectangle with size (3,5) and color green and mask x.x.x|xxxxx|..x.. at (10,8)
  _01: a rectangle with size (5,3) and color cyan and mask xxx|x..|xxx|..x|xxx at (2,4)
diff: 
delta: (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (17,0)=1  (17,1)=1  (17,2)=1  (17,3)=1  (18,0)=1  (18,1)=1  (18,2)=1  (18,3)=1 
   (571.9 bits)
data: a background with size (5,3) and color red and layers
  _0: a rectangle with size (5,3) and color cyan and mask xxx|x..|xxx|..x|xxx at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,17) and color red and layers
  _0: a rectangle with size (5,3) and color cyan and mask xxx|x..|xxx|..x|xxx at (2,4)
  _01: a rectangle with size (3,5) and color green and mask x.x.x|xxxxx|..x.. at (10,8)
diff: 
delta: (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (17,0)=1  (17,1)=1  (17,2)=1  (17,3)=1  (18,0)=1  (18,1)=1  (18,2)=1  (18,3)=1 
! size mismatch, 3x5 instead of 5x3
>> Trial 2
data: a background with size (19,17) and color red and layers
  _0: a rectangle with size (3,5) and color green and mask x.x.x|xxxxx|..x.. at (10,8)
  _01: a rectangle with size (5,3) and color cyan and mask xxx|x..|xxx|..x|xxx at (2,4)
diff: 
delta: (13,0)=1  (13,1)=1  (13,2)=1  (13,3)=1  (14,0)=1  (14,1)=1  (14,2)=1  (14,3)=1  (17,0)=1  (17,1)=1  (17,2)=1  (17,3)=1  (18,0)=1  (18,1)=1  (18,2)=1  (18,3)=1 
correct output grid

TRAIN ce602527.json/3: 1 2nd (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (15,17) and color blue and layers
  _0: a rectangle with size (6,7) and color red and mask xxxxx..|xxxxx..|x..xxxx|x..xxxx|xxxxx..|xxxxx.. at (9,0)
  _01: a rectangle with size (3,5) and color green and mask .xxx.|xx.xx|.xxx. at (9,8)
diff: 
delta: (2,5)=8  (2,8)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (4,5)=8  (4,8)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=8 
   (485.9 bits)
data: a background with size (3,5) and color blue and layers
  _0: a rectangle with size (3,5) and color green and mask .xxx.|xx.xx|.xxx. at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color blue and layers
  _0: a rectangle with size (6,7) and color red and mask xxxxx..|xxxxx..|x..xxxx|x..xxxx|xxxxx..|xxxxx.. at (9,0)
  _01: a rectangle with size (4,4) and color cyan and mask x..x|xxxx|x..x|xxxx at (2,5)
diff: 
delta: (9,9)=3  (9,10)=3  (9,11)=3  (10,8)=3  (10,9)=3  (10,11)=3  (10,12)=3  (11,9)=3  (11,10)=3  (11,11)=3 
! size mismatch, 4x4 instead of 3x5
>> Trial 2
data: a background with size (15,17) and color blue and layers
  _0: a rectangle with size (4,4) and color cyan and mask x..x|xxxx|x..x|xxxx at (2,5)
  _01: a rectangle with size (6,7) and color red and mask xxxxx..|xxxxx..|x..xxxx|x..xxxx|xxxxx..|xxxxx.. at (9,0)
diff: 
delta: (9,9)=3  (9,10)=3  (9,11)=3  (10,8)=3  (10,9)=3  (10,11)=3  (10,12)=3  (11,9)=3  (11,10)=3  (11,11)=3 
! size mismatch, 6x7 instead of 3x5
>> Trial 3
data: a background with size (15,17) and color blue and layers
  _0: a rectangle with size (6,7) and color red and mask xxxxx..|xxxxx..|x..xxxx|x..xxxx|xxxxx..|xxxxx.. at (9,0)
  _01: a rectangle with size (3,5) and color green and mask .xxx.|xx.xx|.xxx. at (9,8)
diff: 
delta: (2,5)=8  (2,8)=8  (3,5)=8  (3,6)=8  (3,7)=8  (3,8)=8  (4,5)=8  (4,8)=8  (5,5)=8  (5,6)=8  (5,7)=8  (5,8)=8 
correct output grid

TRAIN ce602527.json/4: 1 3rd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (6,6) and color cyan and mask +-cross at (12,6)
  _01: a rectangle with size (3,4) and color blue and mask x.xx|xx.x|x.xx at (2,9)
diff: 
delta: (5,3)=6  (6,2)=6  (6,3)=6  (6,4)=6  (7,3)=6  (8,2)=6  (8,3)=6  (8,4)=6 
! size mismatch, 3x4 instead of 4x3
>> Trial 2
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (3,4) and color blue and mask x.xx|xx.x|x.xx at (2,9)
  _01: a rectangle with size (6,6) and color cyan and mask +-cross at (12,6)
diff: 
delta: (5,3)=6  (6,2)=6  (6,3)=6  (6,4)=6  (7,3)=6  (8,2)=6  (8,3)=6  (8,4)=6 
! size mismatch, 6x6 instead of 4x3
>> Trial 3
data: a background with size (18,18) and color green and layers
  _0: a rectangle with size (6,6) and color cyan and mask +-cross at (12,6)
  _01: a rectangle with size (4,3) and color pink and mask .x.|xxx|.x.|xxx at (5,2)
diff: 
delta: (2,9)=1  (2,11)=1  (2,12)=1  (3,9)=1  (3,10)=1  (3,12)=1  (4,9)=1  (4,11)=1  (4,12)=1 
correct output grid

TEST ce602527.json/1: 1 3rd (SUCCESS)

# Performance measures on task
runtime-learning = 2.1 sec (2.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 0.46
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.33

=====================================
[-81] Checking task ce9e57f2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 15808.4 = 15824.0
DL output with Mo: L = 15.6 + 15808.4 = 15824.0
DL input+output M: L = 31.2 + 31616.8 = 31648.0

# learning a model for train pairs
2.000	
1.736	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.517	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.373	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.261	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.164	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.979	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.874	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at (?,?)
0.784	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at (?,?)
0.747	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_0111.shape at (?,?)
  _01111: ^.layer_0111.shape at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 4356.4 = 4501.5
DL output with Mo: L = 182.7 + 7137.0 = 7319.7
DL input+output M: L = 327.8 + 11493.4 = 11821.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (3,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
   (143.0 bits)
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask Full (and Border) at (5,3)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (4,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (3,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (1,1)
  _01111: a rectangle with size (3,1) and color red and mask Full at (2,3)
  _011111: a rectangle with size (2,1) and color red and mask Full at (4,7)
diff: 
delta: (5,4)=0  (6,4)=0  (6,7)=8 
   (236.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (4,1) and color red and mask Full at (3,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
! size mismatch, 10x10 instead of 7x9
>> Trial 2
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (6,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (3,1) and color red and mask Full at (4,7)
  _0111: a rectangle with size (4,1) and color red and mask Full at (3,5)
diff: 
delta:
! size mismatch, 10x10 instead of 7x9

TRAIN ce9e57f2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (5,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,5)
diff: 
delta:
   (145.7 bits)
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (4,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (5,1)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (5,7)
  _0111: a rectangle with size (3,1) and color red and mask Full at (2,7)
  _01111: a rectangle with size (3,1) and color red and mask Full at (3,3)
  _011111: a rectangle with size (2,1) and color red and mask Full at (5,5)
diff: 
delta: (6,3)=8  (7,3)=8  (7,5)=8 
   (238.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (5,1) and color red and mask Full at (3,3)
  _0111: a rectangle with size (3,1) and color red and mask Full at (5,5)
diff: 
delta:
! size mismatch, 10x10 instead of 8x9
>> Trial 2
data: a background with size (8,9) and color black and layers
  _0: a rectangle with size (7,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (6,1) and color red and mask Full at (2,7)
  _011: a rectangle with size (3,1) and color red and mask Full at (5,5)
  _0111: a rectangle with size (5,1) and color red and mask Full at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 8x9

TRAIN ce9e57f2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color red and mask Full at (5,5)
diff: 
delta:
   (146.9 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,1) and color cyan and mask Full at (5,7)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (6,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (5,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (1,7)
  _01111: a rectangle with size (4,1) and color red and mask Full at (2,1)
  _011111: a rectangle with size (2,1) and color red and mask Full at (6,3)
diff: 
delta: (7,5)=8  (8,3)=8  (8,5)=8 
   (239.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (5,5)
  _0111: a rectangle with size (3,1) and color red and mask Full at (6,3)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (8,1) and color red and mask Full at (1,7)
  _01: a rectangle with size (7,1) and color red and mask Full at (2,1)
  _011: a rectangle with size (3,1) and color red and mask Full at (6,3)
  _0111: a rectangle with size (4,1) and color red and mask Full at (5,5)
diff: 
delta:
! size mismatch, 10x10 instead of 9x9

TRAIN ce9e57f2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (9,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (5,1) and color red and mask Full at (6,7)
  _0111: a rectangle with size (2,1) and color red and mask Full at (9,5)
diff: 
delta:
! size mismatch, 10x10 instead of 11x9
>> Trial 2
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (1,1)
  _01: a rectangle with size (9,1) and color red and mask Full at (2,3)
  _011: a rectangle with size (2,1) and color red and mask Full at (9,5)
  _0111: a rectangle with size (5,1) and color red and mask Full at (6,7)
diff: 
delta:
! size mismatch, 10x10 instead of 11x9

TEST ce9e57f2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 7137.0 bits (7137.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-80] Checking task cf98881b.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 38347.0 = 38362.6
DL output with Mo: L = 15.6 + 8589.0 = 8604.6
DL input+output M: L = 31.2 + 46935.9 = 46967.2

# learning a model for train pairs
2.000	
1.770	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.344	OUT OBJECT at ^.layer_0: ^.layer_0
1.196	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.102	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.015	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.933	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_011.shape.size)
0.857	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.803	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
0.789	OUT DEF: ^.color=black
0.782	IN  DEF: ^.layer_0.shape.color=yellow
0.711	IN  OBJECT at ^.layer_0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.691	OUT DEF: ^.layer_011.pos.j=area(^.layer_011.shape) - ^.layer_0110.shape.size.i
0.673	OUT DEF: ^.layer_011.pos.i=area(^.layer_0111.shape) - min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j)
0.670	IN  DEF: ^.color=black
0.669	OUT DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_011.shape.size) and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a point with color ? at (area(^.layer_0111.shape) - min(^.layer_01.shape.size.j, ^.layer_011.shape.size.j),area(^.layer_011.shape) - ^.layer_0110.shape.size.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 178.3 + 13668.0 = 13846.4
DL output with Mo: L = 202.3 + 2450.6 = 2652.9
DL input+output M: L = 380.6 + 16118.6 = 16499.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _0110: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (2,4) and color brown and mask xx..|..xx at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (3,5)=9# (3,7)=9#
   (292.4 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (1,2) and color brown and mask Full at (1,2)
  _011: a point with color brown at (0,0)
diff: 
delta: (0,3)=4  (2,1)=1  (2,2)=1 
   (99.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask .x..|.x..|x...|xxxx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask .x..|xxx.|xx.x at (1,10)
  _0110: a rectangle with size (2,4) and color brown and mask xx..|..xx at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,3)=4  (3,5)=9# (3,7)=9#
! 7 wrong pixels (generated / expected)

TRAIN cf98881b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _0110: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
   (281.8 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,1)
  _011: a point with color brown at (3,2)
diff: 
delta: (3,0)=1 
   (50.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _0110: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask xxxx|xx..|x.xx at (0,0)
  _01: a rectangle with size (2,3) and color brown and mask x.x|xx. at (0,5)
  _0110: a rectangle with size (3,4) and color blue and mask x...|.x.x|x.x. at (1,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,8)=9# (3,7)=9#
! 4 wrong pixels (generated / expected)

TRAIN cf98881b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _0110: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,9)
  _0111: a rectangle with size (3,2) and color blue and mask .x|.x|x. at (0,10)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
   (293.9 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,3) and color brown and mask Full at (0,1)
  _011: a point with color blue at (2,0)
diff: 
delta:
   (33.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _0110: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,9)
  _0111: a rectangle with size (3,2) and color blue and mask .x|.x|x. at (0,10)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask xxx.|.x.x|.x.x|x.xx at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask xx.x|..x.|..xx|xxx. at (0,5)
  _0110: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (3,2) and color blue and mask .x|.x|x. at (0,10)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 6 wrong pixels (generated / expected)

TRAIN cf98881b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _0110: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta:
   (216.6 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,2) and color brown and mask Full at (1,1)
  _011: a point with color blue at (3,0)
diff: 
delta:
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _0110: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask ...x|xx.x|x.xx|.xxx at (0,0)
  _01: a rectangle with size (2,4) and color blue and mask xx.x|xxxx at (2,10)
  _0110: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (4,4) and color brown and mask ...x|x.x.|.xx.|.x.. at (0,5)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN cf98881b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _0110: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color brown and mask ..x|xx.|.x. at (1,6)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
   (282.0 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a point with color blue at (2,0)
diff: 
delta:
   (30.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _0110: a rectangle with size (3,3) and color brown and mask ..x|xx.|.x. at (1,6)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|xxxx|.xxx|.xx. at (0,0)
  _01: a rectangle with size (3,2) and color blue and mask xx|xx|.x at (1,10)
  _0110: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (3,3) and color brown and mask ..x|xx.|.x. at (1,6)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (0,13)=1  (2,13)=1  (3,13)=1 
! 4 wrong pixels (generated / expected)

TRAIN cf98881b.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,14) and color black and layers
  _0: a rectangle with size (2,4) and color yellow and mask ..x.|xx.x at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask x.x.|xxx.|.xxx|x.xx at (0,5)
  _0110: a rectangle with size (4,4) and color blue and mask xx..|xxx.|xx.x|x... at (0,10)
  _011: a rectangle with size (4,1) and color red and mask Full at (0,4)
  _0111: a rectangle with size (4,1) and color red and mask Full at (0,9)
diff: 
delta: (3,1)=4  (3,2)=4 
! 11 wrong pixels (generated / expected)

TEST cf98881b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 16.9 sec (16.9 sec/task)
bits-train-error = 2450.6 bits (2450.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-79] Checking task d037b0a7.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2288.8 = 2304.4
DL output with Mo: L = 15.6 + 4334.3 = 4349.9
DL input+output M: L = 31.2 + 6623.1 = 6654.3

# learning a model for train pairs
2.000	
1.772	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.644	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.537	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.423	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.319	OUT OBJECT at ^.layer_010: ^.layer_01
1.228	OUT DEF: ^.size=^.size
1.172	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.130	OUT DEF: ^.layer_0.shape.size.i=^.size.i
1.091	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.058	OUT DEF: ^.layer_01.shape.size.i=^.size.i - 1
1.025	IN  DEF: ^.color=black
1.001	OUT DEF: ^.layer_01.pos.i=area(^.layer_01.shape)
0.978	OUT DEF: ^.layer_0.shape.size.j=1
0.955	OUT DEF: ^.layer_0.shape.mask=Full
0.932	OUT DEF: ^.layer_01.shape.size.j=1
0.909	OUT DEF: ^.layer_01.shape.mask=Full
0.888	OUT DEF: ^.layer_01.pos=span(^.layer_0.pos, ^.layer_01.pos) - max(^.layer_0.pos, ^.layer_01.pos)
0.871	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,1) and color ^.layer_0.shape.color and mask Full at ^.layer_0.pos
  _010: ^.layer_01
  _01: a rectangle with size (^.size.i - 1,1) and color ? and mask Full at span(^.layer_0.pos, ^.layer_01.pos) - max(^.layer_0.pos, ^.layer_01.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 1665.4 = 1721.2
DL output with Mo: L = 135.6 + 403.5 = 539.2
DL input+output M: L = 191.4 + 2069.0 = 2260.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color green at (2,0)
diff: 
delta: (1,1)=4 
   (63.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color pink and mask Full at (0,2)
  _010: a point with color green at (2,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (1,1)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color yellow at (1,1)
diff: 
delta: (2,0)=3 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color green at (2,0)
diff: 
delta: (1,1)=4 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color pink at (0,2)
diff: 
delta: (2,0)=3 
! 4 wrong pixels (generated / expected)

TRAIN d037b0a7.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color cyan at (1,2)
diff: 
delta: (1,0)=7#
   (63.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (0,1)
  _010: a point with color cyan at (1,2)
  _01: a rectangle with size (2,1) and color orange and mask Full at (1,0)
diff: 
delta: (2,2)=8 
   (29.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color orange at (1,0)
diff: 
delta: (1,2)=8 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,1)
  _01: a point with color cyan at (1,2)
diff: 
delta: (1,0)=7#
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color orange at (1,0)
  _01: a point with color red at (0,1)
diff: 
delta: (1,2)=8 
! 4 wrong pixels (generated / expected)

TRAIN d037b0a7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta:
   (39.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (0,0)
  _010: a point with color red at (1,1)
  _01: a rectangle with size (2,1) and color red and mask Full at (1,1)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color red at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (1,1)
  _01: a point with color yellow at (0,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN d037b0a7.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color cyan at (0,2)
diff: 
delta: (2,1)=7#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color orange at (2,1)
diff: 
delta: (0,2)=8 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color yellow at (0,0)
diff: 
delta: (2,1)=7#
! 4 wrong pixels (generated / expected)

TEST d037b0a7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 403.5 bits (403.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-78] Checking task d06dbe63.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1031.2 = 1046.8
DL output with Mo: L = 15.6 + 10656.7 = 10672.3
DL input+output M: L = 31.2 + 11687.9 = 11719.1

# learning a model for train pairs
2.000	
1.588	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.349	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.179	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.073	IN  DEF: ^.layer_0.shape.color=cyan
1.022	OUT OBJECT at ^.layer_00: ^.layer_0
0.974	IN  DEF: ^.color=black
0.934	OUT DEF: ^.size=^.size
0.920	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.pos.j + 1
0.908	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.pos.j - 1
0.896	OUT DEF: ^.layer_01.shape.size.i=^.layer_0.pos.j - 1
0.886	OUT DEF: ^.layer_0.shape.color=grey
0.876	OUT DEF: ^.layer_01.shape.color=grey
0.871	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,^.layer_0.pos.j + 1) and color grey and mask ? at (?,?)
  _01: a rectangle with size (^.layer_0.pos.j - 1,^.layer_0.pos.j - 1) and color grey and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)

DL input  with Mi: L = 38.0 + 669.8 = 707.8
DL output with Mo: L = 144.2 + 1933.2 = 2077.4
DL input+output M: L = 182.2 + 2603.1 = 2785.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (3,4)
diff: 
delta:
   (33.5 bits)
data: a background with size (13,13) and color black and layers
  _00: a point with color cyan at (3,4)
  _0: a rectangle with size (6,5) and color grey and mask ....x|..xxx|..x..|xxx..|x....|x.... at (4,0)
  _01: a rectangle with size (3,3) and color grey and mask ..x|xxx|x.. at (0,4)
diff: 
delta:
   (81.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (3,4)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN d06dbe63.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (7,6)
diff: 
delta:
   (33.5 bits)
data: a background with size (13,13) and color black and layers
  _00: a point with color cyan at (7,6)
  _0: a rectangle with size (7,7) and color grey and mask ......x|....xxx|....x..|..xxx..|..x....|xxx....|x...... at (0,6)
  _01: a rectangle with size (5,5) and color grey and mask ....x|..xxx|..x..|xxx..|x.... at (8,2)
diff: 
delta:
   (111.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (7,6)
diff: 
delta:
! 51 wrong pixels (generated / expected)

TRAIN d06dbe63.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color cyan at (5,5)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST d06dbe63.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.2 sec (1.2 sec/task)
bits-train-error = 1933.2 bits (1933.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-77] Checking task d07ae81c.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 69323.5 = 69339.1
DL output with Mo: L = 15.6 + 83351.6 = 83367.2
DL input+output M: L = 31.2 + 152675.0 = 152706.3

# learning a model for train pairs
2.000	
1.231	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.694	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.686	OUT DEF: ^.size=^.size
0.678	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.548	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.500	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.464	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.441	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.431	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 15991.6 = 16040.4
DL output with Mo: L = 196.6 + 16450.1 = 16646.7
DL input+output M: L = 245.4 + 32441.6 = 32687.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...x.xx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
diff: 
delta: (5,4)=4  (8,1)=1 
   (359.7 bits)
data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|x.xxxxx.xxxx|xx.xxx.xxxxx|xxx.x.xxxxxx|...x.xx.....|....x.x.....|...xxx......|...xxxx.....|...xxxx.....|....xxx.....|...x.xx.....|xxxxx.xxxxx.|xxxxxx.xxxxx|xxxxxxx.xxxx|xxxxxxxx.xxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
  _01: a rectangle with size (6,7) and color yellow and mask x.....x|.x...x.|..x.x..|...x...|..x.x..|.....x. at (2,1)
  _011: a rectangle with size (6,6) and color yellow and mask x.....|.x....|..x...|...x..|....x.|.....x at (10,3)
  _0111: a rectangle with size (3,3) and color blue and mask Even Checkboard at (7,0)
  _01111: a rectangle with size (4,4) and color blue and mask x...|.x..|..x.|...x at (8,7)
  _011111: a rectangle with size (3,3) and color blue and mask x..|.x.|..x at (16,9)
diff: 
delta: (0,9)=1  (1,0)=1  (1,8)=1  (12,11)=4 
   (650.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,12) and color cyan and layers
  _0: a rectangle with size (19,12) and color red and mask ...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...x.xx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|...xxxx.....|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|...xxxx.....|...xxxx.....|...xxxx..... at (0,0)
diff: 
delta: (5,4)=4  (8,1)=1 
! 228 wrong pixels (generated / expected)

TRAIN d07ae81c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,14) and color blue and mask ...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxx.xx.....|...xxxxxx.....|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxxxxx..... at (0,0)
diff: 
delta: (3,6)=2  (8,11)=8 
   (298.0 bits)
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,14) and color blue and mask ....xxxxx.....|...x.xxx......|...xx.x.x.....|...xxx.xx.....|...xx.x.x.....|xxxx.xxx.xxxxx|xxx.xxxxx.xxx.|xx.xxxxxxx.x.x|...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxxxx...... at (0,0)
  _01: a rectangle with size (8,9) and color red and mask .x.......|..x...x..|...x.x...|....x....|...x.x...|..x...x..|.x.....x.|x.......x at (0,2)
  _011: a rectangle with size (3,5) and color cyan and mask ..x..|.x.x.|x...x at (8,9)
  _0111: a rectangle with size (2,2) and color red and mask Full (and Border) at (6,12)
  _01111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (8,0)
  _011111: a rectangle with size (1,1) and color cyan and mask Full at (0,9)
diff: 
delta: (11,8)=2 
   (472.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,14) and color blue and mask ...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxx.xx.....|...xxxxxx.....|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|...xxxxxx.....|...xxxxxx.....|...xxxxxx.....|...xxxxxx..... at (0,0)
diff: 
delta: (3,6)=2  (8,11)=8 
! 168 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color green and layers
  _0: a rectangle with size (12,6) and color blue and mask Full at (0,3)
diff: 
delta: (3,3)=1  (3,4)=1  (3,5)=1  (3,6)=2  (3,7)=1  (3,8)=1  (5,0)=1  (5,1)=1  (5,2)=1  (5,9)=1  (5,10)=1  (5,11)=1  (5,12)=1  (5,13)=1  (6,0)=1  (6,1)=1  (6,2)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (7,0)=1  (7,1)=1  (7,2)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (8,11)=8 
! 168 wrong pixels (generated / expected)

TRAIN d07ae81c.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,4) and color blue and mask Full at (0,6)
diff: 
delta: (0,0)=1  (0,1)=1  (1,0)=1  (1,1)=1  (2,0)=1  (2,1)=1  (3,0)=1  (3,1)=1  (4,0)=1  (4,1)=1  (5,0)=1  (5,1)=1  (5,7)=8  (6,0)=1  (6,1)=1  (7,0)=1  (7,1)=1  (8,0)=1  (8,1)=1  (8,4)=3  (9,0)=1  (9,1)=1  (10,0)=1  (10,1)=1  (10,12)=3  (11,0)=1  (11,1)=1  (12,0)=1  (12,1)=1  (13,0)=1  (13,1)=1  (14,0)=1  (14,1)=1 
   (941.5 bits)
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,4) and color blue and mask xxxx|xxxx|xxxx|xxx.|.x.x|x.xx|.x.x|xxx.|xxxx|xxxx|.xxx|x.xx|xx.x|xxx.|xx.x at (0,6)
  _01: a rectangle with size (15,2) and color blue and mask Full (and Border) at (0,0)
  _011: a rectangle with size (12,4) and color cyan and mask Full at (3,6)
  _0111: a rectangle with size (5,5) and color green and mask x-cross at (8,10)
  _01111: a rectangle with size (5,4) and color green and mask x...|.x.x|..x.|.x.x|x... at (6,2)
  _011111: a rectangle with size (4,4) and color green and mask x...|.x..|..x.|...x at (0,2)
diff: 
delta: (0,12)=3  (1,11)=3  (2,10)=3  (4,0)=8  (5,1)=8  (11,1)=8  (12,0)=8  (14,10)=3 
   (522.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (15,4) and color blue and mask Full at (0,6)
diff: 
delta: (0,0)=1  (0,1)=1  (1,0)=1  (1,1)=1  (2,0)=1  (2,1)=1  (3,0)=1  (3,1)=1  (4,0)=1  (4,1)=1  (5,0)=1  (5,1)=1  (5,7)=8  (6,0)=1  (6,1)=1  (7,0)=1  (7,1)=1  (8,0)=1  (8,1)=1  (8,4)=3  (9,0)=1  (9,1)=1  (10,0)=1  (10,1)=1  (10,12)=3  (11,0)=1  (11,1)=1  (12,0)=1  (12,1)=1  (13,0)=1  (13,1)=1  (14,0)=1  (14,1)=1 
! 225 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color pink and layers
  _0: a rectangle with size (9,4) and color blue and mask Full at (6,6)
diff: 
delta: (0,0)=1  (0,1)=1  (0,6)=1  (0,7)=1  (0,8)=1  (0,9)=1  (1,0)=1  (1,1)=1  (1,6)=1  (1,7)=1  (1,8)=1  (1,9)=1  (2,0)=1  (2,1)=1  (2,6)=1  (2,7)=1  (2,8)=1  (2,9)=1  (3,0)=1  (3,1)=1  (3,6)=1  (3,7)=1  (3,8)=1  (3,9)=1  (4,0)=1  (4,1)=1  (4,6)=1  (4,7)=1  (4,8)=1  (4,9)=1  (5,0)=1  (5,1)=1  (5,6)=1  (5,7)=8  (5,8)=1  (5,9)=1  (6,0)=1  (6,1)=1  (7,0)=1  (7,1)=1  (8,0)=1  (8,1)=1  (8,4)=3  (9,0)=1  (9,1)=1  (10,0)=1  (10,1)=1  (10,12)=3  (11,0)=1  (11,1)=1  (12,0)=1  (12,1)=1  (13,0)=1  (13,1)=1  (14,0)=1  (14,1)=1 
! 225 wrong pixels (generated / expected)

TRAIN d07ae81c.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color cyan and layers
  _0: a rectangle with size (17,19) and color green and mask ...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|xxxxxx.xxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|...xxxxxx..........|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxx.xxxx|xxxxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxxxx|...xxxxxx..........|...xxxxxx.......... at (0,0)
diff: 
delta: (0,10)=4  (4,6)=1  (12,14)=1 
! 323 wrong pixels (generated / expected)

TEST d07ae81c.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.6 sec (27.6 sec/task)
bits-train-error = 16450.1 bits (16450.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-76] Checking task d0f5fe59.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14134.9 = 14150.5
DL output with Mo: L = 15.6 + 2512.5 = 2528.1
DL input+output M: L = 31.2 + 16647.4 = 16678.6

# learning a model for train pairs
2.000	
1.673	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.378	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.180	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.067	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.930	OUT DEF: ^.size=min(^.layer_01.shape.size, ^.layer_011.shape.size) + 1
0.795	OUT DEF: ^.layer_0.shape.size=min(^.layer_01.shape.size, ^.layer_011.shape.size) + 1
0.702	OUT DEF: ^.layer_0.pos='(0,0)
0.635	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.605	OUT DEF: ^.color=black
0.579	IN  OBJECT at ^.layer_0110: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.567	IN  DEF: ^.layer_0.shape.color=cyan
0.556	IN  DEF: ^.layer_01.shape.color=cyan
0.544	IN  DEF: ^.layer_0110.shape.color=cyan
0.532	IN  DEF: ^.layer_011.shape.color=cyan
0.525	IN  DEF: ^.layer_0110.shape.mask=Full
0.520	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size min(^.layer_01.shape.size, ^.layer_011.shape.size) + 1 and color black and layers
  _0: a rectangle with size min(^.layer_01.shape.size, ^.layer_011.shape.size) + 1 and color ^.layer_0.shape.color and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _0110: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color cyan and mask ? at (?,?)

DL input  with Mi: L = 153.6 + 4211.5 = 4365.1
DL output with Mo: L = 120.6 + 413.1 = 533.7
DL input+output M: L = 274.2 + 4624.7 = 4898.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _0110: a rectangle with size (2,2) and color cyan and mask Full at (12,7)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
diff: 
delta:
   (170.1 bits)
data: a background with size (4,4) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x..|..x.|...x at (0,0)
diff: 
delta:
   (19.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,10) and color black and layers
  _0: a rectangle with size (4,3) and color cyan and mask .xx|.xx|xxx|.x. at (1,1)
  _01: a rectangle with size (3,3) and color cyan and mask .xx|xxx|..x at (6,4)
  _0110: a rectangle with size (2,2) and color cyan and mask Full at (12,7)
  _011: a rectangle with size (3,4) and color cyan and mask ..xx|xxx.|..x. at (10,1)
diff: 
delta:
! 12 wrong pixels (generated / expected)

TRAIN d0f5fe59.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,1)
  _0110: a rectangle with size (2,1) and color cyan and mask Full at (1,3)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,3)
diff: 
delta:
   (136.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask x..|.x.|..x at (0,0)
diff: 
delta:
   (14.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,1)
  _0110: a rectangle with size (2,2) and color cyan and mask Full at (8,3)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (1,3)
diff: 
delta:
! size mismatch, 3x2 instead of 3x3
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask ..x.|xxxx|x.x. at (3,5)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,1)
  _0110: a rectangle with size (2,1) and color cyan and mask Full at (1,3)
  _011: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (8,3)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN d0f5fe59.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,2)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (3,8)
  _0110: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,8)
diff: 
delta:
   (114.4 bits)
data: a background with size (2,2) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,2)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (3,3)
  _0110: a rectangle with size (3,1) and color cyan and mask Full at (3,8)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,8)
diff: 
delta:
! size mismatch, 2x3 instead of 2x2
>> Trial 2
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,2)
  _01: a rectangle with size (3,1) and color cyan and mask Full at (3,8)
  _0110: a rectangle with size (2,2) and color cyan and mask Full at (3,3)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (4,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,12) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (2,2)
  _01: a rectangle with size (2,2) and color cyan and mask Full (and Border) at (3,3)
  _0110: a rectangle with size (1,2) and color cyan and mask Full at (4,8)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (3,8)
diff: 
delta:
! size mismatch, 3x2 instead of 2x2

TRAIN d0f5fe59.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask ..x|xxx|.xx at (2,3)
  _01: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (9,8)
  _0110: a rectangle with size (2,2) and color cyan and mask Full at (2,8)
  _011: a rectangle with size (3,3) and color cyan and mask xx.|.xx|..x at (9,1)
diff: 
delta: (1,9)=8  (13,6)=8  (13,7)=8 
! size mismatch, 3x4 instead of 5x5
>> Trial 2
data: a background with size (15,12) and color black and layers
  _0: a rectangle with size (2,3) and color cyan and mask xx.|xxx at (9,8)
  _01: a rectangle with size (3,3) and color cyan and mask ..x|xxx|.xx at (2,3)
  _0110: a rectangle with size (3,2) and color cyan and mask Full at (1,8)
  _011: a rectangle with size (3,3) and color cyan and mask xx.|.xx|..x at (9,1)
diff: 
delta: (1,8)=0  (13,6)=8  (13,7)=8 
! size mismatch, 4x4 instead of 5x5

TEST d0f5fe59.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 413.1 bits (413.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-75] Checking task d10ecb37.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 28336.8 = 28352.4
DL output with Mo: L = 15.6 + 2255.2 = 2270.8
DL input+output M: L = 31.2 + 30592.0 = 30623.2

# learning a model for train pairs
2.000	
1.892	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.776	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.682	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.567	OUT DEF: ^.size=^.layer_0.shape.size
1.477	OUT DEF: ^.color=^.color
1.406	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
1.332	OUT DEF: ^.layer_0.shape.color=yellow
1.279	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.237	OUT DEF: ^.layer_01.pos.j=1
1.203	OUT DEF: ^.layer_0.pos.i=^.layer_01.pos.j / 2
1.170	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.136	OUT DEF: ^.layer_01.pos.i=^.layer_010.pos.j / 2
1.110	OUT DEF: ^.layer_0.pos.j=bottom(^.layer_0) - ^.layer_010.shape.size.i
1.106	IN  DEF: ^.layer_0.shape.mask=Full
1.103	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.color and layers
  _0: a point with color yellow at (^.layer_01.pos.j / 2,bottom(^.layer_0) - ^.layer_010.shape.size.i)
  _01: a point with color ^.layer_0.shape.color at (^.layer_010.pos.j / 2,1)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 113.3 + 23624.7 = 23738.0
DL output with Mo: L = 157.6 + 445.1 = 602.7
DL input+output M: L = 270.9 + 24069.8 = 24340.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,3)
  _010: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,1)
  _01: a rectangle with size (4,2) and color yellow and mask Full at (2,1)
diff: 
delta: (0,0)=4  (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,5)=4  (2,0)=6  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,4)=4  (4,5)=3  (5,0)=3  (5,3)=6  (5,4)=6 
   (513.9 bits)
data: a background with size (2,2) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color green at (0,1)
diff: 
delta: (1,0)=6 
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,3)
  _010: a rectangle with size (2,2) and color green and mask Even Checkboard at (3,1)
  _01: a rectangle with size (4,2) and color yellow and mask Full at (2,1)
diff: 
delta: (0,0)=4  (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,5)=4  (2,0)=6  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,4)=4  (4,5)=3  (5,0)=3  (5,3)=6  (5,4)=6 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,3)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,1)
diff: 
delta: (0,0)=4  (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,5)=4  (2,0)=6  (3,1)=3  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,2)=3  (4,4)=4  (4,5)=3  (5,0)=3  (5,3)=6  (5,4)=6 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (1,3)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (5,3)
diff: 
delta: (0,0)=4  (0,1)=3  (0,2)=6  (0,3)=4  (0,5)=6  (1,0)=6  (1,5)=4  (2,0)=6  (3,1)=3  (3,2)=6  (3,4)=4  (3,5)=6  (4,1)=6  (4,2)=3  (4,4)=4  (4,5)=3  (5,0)=3  (5,1)=4  (5,2)=4 
! 3 wrong pixels (generated / expected)

TRAIN d10ecb37.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _01: a rectangle with size (2,2) and color grey and mask Full at (5,1)
diff: 
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (2,0)=4  (2,7)=4  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,4)=5# (4,6)=4  (4,7)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
   (652.4 bits)
data: a background with size (2,2) and color red and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color grey at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
  _010: a rectangle with size (2,2) and color grey and mask Full (and Border) at (5,1)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
diff: 
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (2,0)=4  (2,7)=4  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,4)=5# (4,6)=4  (4,7)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color red and layers
  _0: a rectangle with size (2,2) and color grey and mask Full at (1,1)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (1,3)
  _01: a rectangle with size (2,2) and color grey and mask Full at (5,1)
diff: 
delta: (0,1)=4  (0,4)=5# (0,6)=4  (0,7)=5# (2,0)=4  (2,7)=4  (3,2)=4  (3,4)=5# (3,5)=4  (3,7)=5# (4,1)=4  (4,4)=5# (4,6)=4  (4,7)=5# (5,3)=4  (5,4)=4  (6,0)=4  (6,7)=4  (7,2)=4  (7,4)=5# (7,5)=4  (7,7)=5#
correct output grid

TRAIN d10ecb37.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (12,6) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,3)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,3)
diff: 
delta: (0,0)=3  (0,1)=2  (0,3)=3  (0,4)=4  (1,5)=3  (2,1)=3  (2,2)=3  (2,5)=4  (3,0)=4  (3,1)=2  (3,3)=4  (3,4)=3  (4,0)=4  (4,2)=2  (4,3)=4  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (5,5)=4  (6,0)=2  (6,1)=4  (6,2)=4  (6,5)=3  (7,0)=3  (7,2)=2  (7,3)=3  (7,4)=4  (7,5)=2  (8,0)=3  (8,1)=2  (8,3)=3  (8,4)=4  (9,1)=4  (9,2)=4  (9,5)=3  (10,1)=3  (10,2)=3  (10,5)=4  (11,0)=4  (11,1)=2  (11,3)=4  (11,4)=3 
   (1196.2 bits)
data: a background with size (2,2) and color blue and layers
  _0: a point with color yellow at (1,1)
  _01: a point with color red at (0,1)
diff: 
delta: (0,0)=3 
   (22.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,6) and color blue and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _010: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,3)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,3)
diff: 
delta: (0,0)=3  (0,1)=2  (0,3)=3  (0,4)=4  (1,5)=3  (2,1)=3  (2,2)=3  (2,5)=4  (3,0)=4  (3,1)=2  (3,3)=4  (3,4)=3  (4,0)=4  (4,2)=2  (4,3)=4  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (5,5)=4  (6,0)=2  (6,1)=4  (6,2)=4  (6,5)=3  (7,0)=3  (7,2)=2  (7,3)=3  (7,4)=4  (7,5)=2  (8,0)=3  (8,1)=2  (8,3)=3  (8,4)=4  (9,1)=4  (9,2)=4  (9,5)=3  (10,1)=3  (10,2)=3  (10,5)=4  (11,0)=4  (11,1)=2  (11,3)=4  (11,4)=3 
! size mismatch, 1x2 instead of 2x2
>> Trial 2
data: a background with size (12,6) and color blue and layers
  _0: a rectangle with size (2,2) and color red and mask Full at (1,3)
  _010: a rectangle with size (1,2) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (9,3)
diff: 
delta: (0,0)=3  (0,1)=2  (0,3)=3  (0,4)=4  (1,5)=3  (2,1)=3  (2,2)=3  (2,5)=4  (3,0)=4  (3,1)=2  (3,3)=4  (3,4)=3  (4,0)=4  (4,2)=2  (4,3)=4  (4,4)=3  (4,5)=2  (5,0)=2  (5,1)=3  (5,2)=3  (5,5)=4  (6,0)=2  (6,1)=4  (6,2)=4  (6,5)=3  (7,0)=3  (7,2)=2  (7,3)=3  (7,4)=4  (7,5)=2  (8,0)=3  (8,1)=2  (8,3)=3  (8,4)=4  (9,1)=4  (9,2)=4  (9,5)=3  (10,1)=3  (10,2)=3  (10,5)=4  (11,0)=4  (11,1)=2  (11,3)=4  (11,4)=3 
! 1 wrong pixels (generated / expected)

TRAIN d10ecb37.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,8) and color brown and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _010: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,1)
diff: 
delta: (0,2)=2  (0,5)=2  (0,6)=6  (1,0)=2  (1,7)=2  (2,0)=6  (2,7)=6  (3,1)=2  (3,2)=6  (3,5)=6  (3,6)=2 
! size mismatch, 1x2 instead of 2x2
>> Trial 2
data: a background with size (4,8) and color brown and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _010: a rectangle with size (1,2) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,2)
diff: 
delta: (0,1)=6  (0,5)=2  (0,6)=6  (1,0)=2  (1,7)=2  (2,0)=6  (2,7)=6  (3,1)=2  (3,2)=6  (3,5)=6  (3,6)=2 
! size mismatch, 1x2 instead of 2x2
>> Trial 3
data: a background with size (4,8) and color brown and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (1,3)
  _010: a rectangle with size (1,1) and color pink and mask Full at (0,1)
  _01: a rectangle with size (1,2) and color red and mask Full at (2,3)
diff: 
delta: (0,2)=2  (0,5)=2  (0,6)=6  (1,0)=2  (1,7)=2  (2,0)=6  (2,7)=6  (3,1)=2  (3,2)=6  (3,5)=6  (3,6)=2 
! size mismatch, 1x2 instead of 2x2

TEST d10ecb37.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.0 sec (7.0 sec/task)
bits-train-error = 445.1 bits (445.1 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.17
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-74] Checking task d13f3404.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2511.4 = 2527.0
DL output with Mo: L = 15.6 + 11127.6 = 11143.2
DL input+output M: L = 31.2 + 13638.9 = 13670.2

# learning a model for train pairs
2.000	
1.821	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.654	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.510	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.414	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.313	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.203	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.158	OUT DEF: ^.size=^.size * 2
1.116	OUT DEF: ^.layer_01.shape.size=^.size + 2
1.086	IN  DEF: ^.color=black
1.073	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
1.060	OUT DEF: ^.layer_011.pos.j=^.layer_011.pos.j * 2
1.048	OUT DEF: ^.layer_01.pos.j=area(^.layer_01.shape)
0.983	OUT DEF: ^.layer_01.shape.mask=x....|.x...|..x..|...x.|....x
0.956	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.941	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
0.926	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.911	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.896	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.890	OUT DEF: ^.color=black
0.888	OUT DEF: ^.layer_01.pos=^.layer_01.pos

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
  _01: a rectangle with size ^.size + 2 and color ^.layer_01.shape.color and mask x....|.x...|..x..|...x.|....x at ^.layer_01.pos
  _011: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 75.5 + 1600.7 = 1676.2
DL output with Mo: L = 127.9 + 2375.6 = 2503.5
DL input+output M: L = 203.4 + 3976.3 = 4179.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,0)
  _01: a point with color blue at (0,1)
  _011: a point with color green at (1,0)
diff: 
delta:
   (53.4 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color pink and mask x.....|.x....|..x...|...x..|....x.|.....x at (0,0)
  _01: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...x.|....x at (0,1)
  _011: a rectangle with size (5,5) and color green and mask x....|.x...|..x..|...x.|....x at (1,0)
diff: 
delta:
   (88.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,0)
  _01: a point with color blue at (0,1)
  _011: a point with color green at (1,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,0)
  _01: a point with color green at (1,0)
  _011: a point with color blue at (0,1)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (0,1)
  _01: a point with color pink at (0,0)
  _011: a point with color green at (1,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN d13f3404.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (2,0)
diff: 
delta:
   (53.4 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask x....|.x...|..x..|...x.|....x at (0,1)
  _01: a rectangle with size (5,5) and color cyan and mask x....|.x...|..x..|...x.|....x at (1,1)
  _011: a rectangle with size (4,4) and color red and mask x...|.x..|..x.|...x at (2,0)
diff: 
delta:
   (74.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color cyan at (1,1)
  _011: a point with color red at (2,0)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,1)
  _01: a point with color red at (2,0)
  _011: a point with color cyan at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color yellow at (0,1)
  _011: a point with color red at (2,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN d13f3404.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color blue at (1,0)
  _011: a point with color green at (1,1)
diff: 
delta:
   (53.4 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask x...|.x..|..x.|...x at (0,2)
  _01: a rectangle with size (5,5) and color blue and mask x....|.x...|..x..|...x.|....x at (1,0)
  _011: a rectangle with size (5,5) and color green and mask x....|.x...|..x..|...x.|....x at (1,1)
diff: 
delta:
   (74.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color blue at (1,0)
  _011: a point with color green at (1,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color pink at (0,2)
  _01: a point with color green at (1,1)
  _011: a point with color blue at (1,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color blue at (1,0)
  _01: a point with color pink at (0,2)
  _011: a point with color green at (1,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN d13f3404.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color yellow at (2,1)
  _011: a point with color brown at (2,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color brown at (2,2)
  _011: a point with color yellow at (2,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,1)
  _01: a point with color green at (0,2)
  _011: a point with color brown at (2,2)
diff: 
delta:
! 7 wrong pixels (generated / expected)

TEST d13f3404.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.8 sec (14.8 sec/task)
bits-train-error = 2375.6 bits (2375.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-73] Checking task d22278a0.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3271.3 = 3286.9
DL output with Mo: L = 15.6 + 55841.5 = 55857.1
DL input+output M: L = 31.2 + 59112.8 = 59144.1

# learning a model for train pairs
2.000	
1.896	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.784	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.682	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.580	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.513	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.454	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.399	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.369	IN  DEF: ^.color=black
1.350	OUT OBJECT at ^.layer_011111: ^.layer_01
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 55.8 + 2420.6 = 2476.4
DL output with Mo: L = 185.5 + 33138.1 = 33323.6
DL input+output M: L = 241.3 + 35558.7 = 35800.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,9)
diff: 
delta:
   (53.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _01: a rectangle with size (3,5) and color blue and mask Full at (6,0)
  _011: a rectangle with size (5,5) and color red and mask x....|x....|x....|x....|xxxxx at (0,5)
  _0111: a rectangle with size (1,5) and color red and mask Full at (6,5)
  _01111: a rectangle with size (1,5) and color red and mask Full at (8,5)
  _011111: a point with color red at (0,9)
diff: 
delta: (0,0)=1  (0,2)=1  (0,7)=2  (1,2)=1  (1,7)=2  (2,0)=1  (2,1)=1  (2,2)=1  (2,7)=2  (2,8)=2  (2,9)=2  (7,0)=0  (7,1)=0  (7,2)=0  (7,3)=0  (7,4)=0 
   (653.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,9)
diff: 
delta:
! 52 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (0,9)
  _01: a point with color blue at (0,0)
diff: 
delta:
! 53 wrong pixels (generated / expected)

TRAIN d22278a0.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (0,11)
  _01: a point with color cyan at (11,0)
diff: 
delta:
   (55.9 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask x....|x....|x....|x....|xxxxx at (0,7)
  _01: a rectangle with size (5,5) and color cyan and mask xxxxx|....x|....x|....x|....x at (7,0)
  _011: a rectangle with size (1,5) and color cyan and mask Full at (5,0)
  _0111: a rectangle with size (1,5) and color green and mask Full at (6,7)
  _01111: a rectangle with size (3,3) and color green and mask x..|x..|xxx at (0,9)
  _011111: a point with color cyan at (11,0)
diff: 
delta: (0,1)=3  (0,3)=3  (0,5)=3  (0,11)=3  (1,0)=8  (1,3)=3  (1,5)=3  (2,3)=3  (2,5)=3  (3,0)=8  (3,1)=8  (3,2)=8  (3,5)=3  (4,5)=3  (7,6)=8  (8,6)=8  (8,9)=3  (8,10)=3  (8,11)=3  (9,0)=8  (9,1)=8  (9,2)=8  (9,6)=8  (9,8)=8  (10,2)=8  (10,6)=8  (10,8)=8  (10,11)=3  (11,2)=8  (11,6)=8  (11,8)=8  (11,10)=8 
   (1083.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color green at (0,11)
  _01: a point with color cyan at (11,0)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TRAIN d22278a0.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a point with color yellow at (12,0)
  _01: a point with color red at (0,0)
diff: 
delta:
   (56.8 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (6,7) and color red and mask Full at (0,6)
  _01: a rectangle with size (5,5) and color red and mask ....x|....x|....x|....x|xxxxx at (0,0)
  _011: a rectangle with size (5,5) and color yellow and mask xxxxx|....x|....x|....x|....x at (8,0)
  _0111: a rectangle with size (6,1) and color yellow and mask Full at (7,6)
  _01111: a rectangle with size (6,1) and color yellow and mask Full at (7,8)
  _011111: a point with color red at (0,0)
diff: 
delta: (0,2)=2  (0,7)=0  (0,9)=0  (0,11)=0  (1,2)=2  (1,7)=0  (1,9)=0  (1,11)=0  (2,0)=2  (2,1)=2  (2,2)=2  (2,7)=0  (2,9)=0  (2,11)=0  (3,7)=0  (3,9)=0  (3,11)=0  (4,7)=0  (4,9)=0  (4,11)=0  (5,7)=0  (5,9)=0  (5,11)=0  (7,10)=4  (7,12)=4  (8,10)=4  (8,12)=4  (9,10)=4  (9,12)=4  (10,0)=4  (10,1)=4  (10,2)=4  (10,10)=4  (10,12)=4  (11,2)=4  (11,10)=4  (11,12)=4  (12,0)=4  (12,2)=4  (12,10)=4  (12,12)=4 
   (1318.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a point with color red at (0,0)
  _01: a point with color yellow at (12,0)
diff: 
delta:
! size mismatch, 10x10 instead of 13x13

TRAIN d22278a0.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,6)
diff: 
delta: (6,0)=8 
   (75.5 bits)
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask ..x|..x|xxx at (0,0)
  _01: a rectangle with size (3,3) and color red and mask x..|x..|xxx at (0,4)
  _011: a rectangle with size (3,3) and color cyan and mask xxx|..x|..x at (4,0)
  _0111: a rectangle with size (1,2) and color red and mask Full at (4,5)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (5,4)
  _011111: a point with color red at (0,6)
diff: 
delta: (0,0)=1  (6,0)=8 
   (258.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color red at (0,6)
diff: 
delta: (6,0)=8 
! size mismatch, 10x10 instead of 7x7
>> Trial 2
data: a background with size (7,7) and color black and layers
  _0: a point with color blue at (0,0)
  _01: a point with color cyan at (6,0)
diff: 
delta: (0,6)=2 
! size mismatch, 10x10 instead of 7x7
>> Trial 3
data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,6)
  _01: a point with color blue at (0,0)
diff: 
delta: (6,0)=8 
! size mismatch, 10x10 instead of 7x7

TRAIN d22278a0.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color cyan at (16,0)
diff: 
delta: (16,16)=1 
! size mismatch, 10x10 instead of 17x17

TEST d22278a0.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.2 sec (25.2 sec/task)
bits-train-error = 33138.1 bits (33138.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-72] Checking task d23f8c26.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7288.3 = 7303.9
DL output with Mo: L = 15.6 + 2671.6 = 2687.2
DL input+output M: L = 31.2 + 9959.9 = 9991.1

# learning a model for train pairs
2.000	
1.831	OUT DEF: ^.size=^.size
1.697	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.596	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.549	OUT DEF: ^.layer_0.pos.i='0
1.502	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.449	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j
1.402	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.355	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.310	OUT DEF: ^.layer_01.pos.j=area(^.layer_01.shape)
1.267	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.i
1.230	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.195	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
1.158	OUT DEF: ^.layer_01.pos.i=bottom(^.layer_01) + area(^.layer_0.shape)
1.130	OUT DEF: ^.color=black
1.116	IN  DEF: ^.layer_00.shape.mask=Full
1.103	IN  DEF: ^.layer_0.shape.mask=Full
1.089	IN  DEF: ^.layer_01.shape.mask=Full
1.079	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.layer_0.shape.size.j,^.layer_0.shape.size.i) and color ? and mask ^.layer_0.shape.mask at ('0,^.layer_01.shape.size.i)
  _01: a point with color ? at (bottom(^.layer_01) + area(^.layer_0.shape),area(^.layer_01.shape))
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 112.4 + 5797.3 = 5909.7
DL output with Mo: L = 137.0 + 587.6 = 724.6
DL input+output M: L = 249.4 + 6384.9 = 6634.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta: (1,2)=9# (2,0)=1 
   (119.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a point with color green at (1,1)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _0: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,1)
diff: 
delta: (1,2)=9# (2,0)=1 
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a rectangle with size (1,1) and color pink and mask Full at (0,0)
  _0: a rectangle with size (1,1) and color green and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (0,1)
diff: 
delta: (1,2)=9# (2,0)=1 
! 2 wrong pixels (generated / expected)

TRAIN d23f8c26.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,2)=3  (1,2)=5# (1,3)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
   (254.1 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (3,1) and color green and mask Full at (0,2)
  _01: a point with color brown at (4,2)
diff: 
delta: (1,2)=5#
   (36.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _01: a rectangle with size (1,3) and color green and mask Full at (2,0)
diff: 
delta: (0,2)=3  (1,2)=5# (1,3)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _0: a rectangle with size (1,3) and color green and mask Full at (2,0)
  _01: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
diff: 
delta: (0,2)=3  (1,2)=5# (1,3)=6  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color cyan and mask Full at (0,0)
  _0: a rectangle with size (2,1) and color pink and mask Full at (1,1)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,2)
diff: 
delta: (1,2)=5# (1,3)=6  (2,0)=3  (3,3)=5# (3,4)=9# (4,0)=5# (4,2)=9#
! 7 wrong pixels (generated / expected)

TRAIN d23f8c26.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _0: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
   (206.3 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
  _01: a point with color cyan at (3,2)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _0: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _00: a rectangle with size (2,1) and color green and mask Full at (0,0)
  _0: a rectangle with size (1,2) and color red and mask Full at (4,3)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (0,2)
diff: 
delta: (1,3)=7# (2,1)=6  (2,4)=7# (3,2)=8  (4,1)=8 
! 3 wrong pixels (generated / expected)

TRAIN d23f8c26.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (2,1) and color pink and mask Full at (5,3)
  _0: a rectangle with size (3,1) and color green and mask Full at (0,2)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (1,0)
diff: 
delta: (0,6)=7# (1,1)=1  (1,2)=0  (2,4)=8  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,2)=8  (6,1)=8  (6,5)=1 
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (3,1) and color green and mask Full at (0,2)
  _0: a rectangle with size (1,4) and color cyan and mask Full at (1,0)
  _01: a rectangle with size (2,1) and color pink and mask Full at (5,3)
diff: 
delta: (0,6)=7# (1,1)=1  (1,2)=0  (2,4)=8  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,2)=8  (6,1)=8  (6,5)=1 
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (7,7) and color black and layers
  _00: a rectangle with size (3,1) and color green and mask Full at (0,2)
  _0: a rectangle with size (2,1) and color pink and mask Full at (5,3)
  _01: a rectangle with size (1,4) and color cyan and mask Full at (1,0)
diff: 
delta: (0,6)=7# (1,1)=1  (1,2)=0  (2,4)=8  (2,6)=3  (3,1)=7# (3,3)=1  (3,5)=7# (5,0)=1  (5,2)=8  (6,1)=8  (6,5)=1 
! 7 wrong pixels (generated / expected)

TEST d23f8c26.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 587.6 bits (587.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-71] Checking task d2abd087.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 20623.5 = 20639.1
DL output with Mo: L = 15.6 + 20623.5 = 20639.1
DL input+output M: L = 31.2 + 41247.1 = 41278.3

# learning a model for train pairs
2.000	
1.826	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.652	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.488	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.324	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.190	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.057	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.987	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.916	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.861	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.805	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.776	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 8134.6 = 8311.4
DL output with Mo: L = 170.9 + 7536.6 = 7707.5
DL input+output M: L = 347.8 + 15671.2 = 16019.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full (and Border) at (2,2)
  _01: a rectangle with size (2,2) and color grey and mask Full (and Border) at (5,6)
  _011: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,1)
  _0111: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (5,5)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (8,1)
diff: 
delta:
   (183.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask Full (and Border) at (2,2)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (5,6)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (7,1)
  _0111: a rectangle with size (3,3) and color red and mask Odd Checkboard at (5,5)
  _01111: a rectangle with size (1,3) and color blue and mask Full at (8,1)
diff: 
delta:
   (163.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Full (and Border) at (2,2)
  _01: a rectangle with size (2,2) and color grey and mask Full (and Border) at (5,6)
  _011: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,1)
  _0111: a rectangle with size (3,3) and color grey and mask Odd Checkboard at (5,5)
  _01111: a rectangle with size (1,3) and color grey and mask Full at (8,1)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN d2abd087.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full (and Border) at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,1)
diff: 
delta: (4,8)=5# (5,8)=5#
   (256.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color red and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color red and mask Full (and Border) at (6,5)
  _011: a rectangle with size (3,3) and color blue and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color blue and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (7,1)
diff: 
delta: (4,8)=1  (5,8)=1 
   (236.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask .xx.|xxxx at (1,0)
  _01: a rectangle with size (3,2) and color grey and mask Full (and Border) at (6,5)
  _011: a rectangle with size (3,3) and color grey and mask ..x|xxx|..x at (0,6)
  _0111: a rectangle with size (1,4) and color grey and mask Full at (4,2)
  _01111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (7,1)
diff: 
delta: (4,8)=5# (5,8)=5#
! 30 wrong pixels (generated / expected)

TRAIN d2abd087.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
  _01111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (1,4)
diff: 
delta: (4,9)=5# (5,1)=5# (5,2)=5# (5,9)=5# (6,9)=5#
   (373.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color blue and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color blue and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color red and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (4,3) and color red and mask xxx|x..|x..|x.. at (0,7)
  _01111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,4)
diff: 
delta: (4,9)=1  (5,1)=1  (5,2)=1  (5,9)=1  (6,9)=1 
   (353.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .x..|xxxx|.xx. at (7,1)
  _01: a rectangle with size (4,3) and color grey and mask xxx|.xx|..x|..x at (0,0)
  _011: a rectangle with size (3,3) and color grey and mask xx.|.xx|.xx at (4,4)
  _0111: a rectangle with size (4,3) and color grey and mask xxx|x..|x..|x.. at (0,7)
  _01111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (1,4)
diff: 
delta: (4,9)=5# (5,1)=5# (5,2)=5# (5,9)=5# (6,9)=5#
! 36 wrong pixels (generated / expected)

TRAIN d2abd087.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask .xx.|.xx.|xxxx at (0,0)
  _01: a rectangle with size (2,4) and color grey and mask xx..|xxxx at (4,1)
  _011: a rectangle with size (3,3) and color grey and mask .xx|.xx|xx. at (0,5)
  _0111: a rectangle with size (1,5) and color grey and mask Full at (8,1)
  _01111: a rectangle with size (4,1) and color grey and mask Full at (4,7)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TEST d2abd087.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.2 sec (26.2 sec/task)
bits-train-error = 7536.6 bits (7536.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-70] Checking task d364b489.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3294.3 = 3310.0
DL output with Mo: L = 15.6 + 12584.2 = 12599.8
DL input+output M: L = 31.2 + 15878.6 = 15909.8

# learning a model for train pairs
2.000	
1.955	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.910	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.863	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.815	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.763	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.724	OUT OBJECT at ^.layer_0: ^.layer_0
1.684	OUT OBJECT at ^.layer_01: ^.layer_01
1.645	OUT OBJECT at ^.layer_011: ^.layer_011
1.605	OUT OBJECT at ^.layer_0111: ^.layer_0111
1.566	OUT OBJECT at ^.layer_01111: ^.layer_01111
1.533	IN  DEF: ^.layer_0.shape.color=blue
1.499	IN  DEF: ^.layer_01.shape.color=blue
1.466	IN  DEF: ^.layer_011.shape.color=blue
1.432	IN  DEF: ^.layer_0111.shape.color=blue
1.399	IN  DEF: ^.layer_01111.shape.color=blue
1.367	OUT DEF: ^.size=^.size
1.352	IN  DEF: ^.color=black
1.340	OUT OBJECT at ^.layer_011111: a point with color ? at (?,?)
1.327	OUT DEF: ^.layer_011111.pos=max(^.layer_01.pos, ^.layer_011.pos) - min(^.layer_011.pos, ^.layer_0111.pos)
1.316	OUT OBJECT at ^.layer_0111111: a point with color ? at (?,?)
1.300	OUT DEF: ^.layer_0111111.pos=max(^.layer_01.pos, ^.layer_011.pos) - 3
1.289	OUT OBJECT at ^.layer_01111111: a point with color ? at (?,?)
1.275	OUT DEF: ^.layer_01111111.pos=translationOnto(^.layer_01111, ^.layer_01) + span(^.layer_0.pos, ^.layer_0111.pos)
1.263	OUT OBJECT at ^.layer_011111111: a point with color ? at (?,?)
1.252	OUT OBJECT at ^.layer_0111111111: a point with color ? at (?,?)
1.241	OUT OBJECT at ^.layer_01111111111: a point with color ? at (?,?)
1.229	OUT OBJECT at ^.layer_011111111111: a point with color ? at (?,?)
1.216	OUT DEF: ^.layer_011111111111.pos=max(^.layer_01.pos, ^.layer_0111.pos) - corner(^.layer_01.pos, ^.layer_0.pos)
1.205	OUT OBJECT at ^.layer_0111111111111: a point with color ? at (?,?)
1.189	OUT DEF: ^.layer_0111111111111.pos=min(^.layer_0.pos, ^.layer_0111.pos) + 3
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: ^.layer_0111
  _01111: ^.layer_01111
  _011111: a point with color ? at max(^.layer_01.pos, ^.layer_011.pos) - min(^.layer_011.pos, ^.layer_0111.pos)
  _0111111: a point with color ? at max(^.layer_01.pos, ^.layer_011.pos) - 3
  _01111111: a point with color ? at translationOnto(^.layer_01111, ^.layer_01) + span(^.layer_0.pos, ^.layer_0111.pos)
  _011111111: a point with color ? at (?,?)
  _0111111111: a point with color ? at (?,?)
  _01111111111: a point with color ? at (?,?)
  _011111111111: a point with color ? at max(^.layer_01.pos, ^.layer_0111.pos) - corner(^.layer_01.pos, ^.layer_0.pos)
  _0111111111111: a point with color ? at min(^.layer_0.pos, ^.layer_0111.pos) + 3
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)
  _011: a point with color blue at (?,?)
  _0111: a point with color blue at (?,?)
  _01111: a point with color blue at (?,?)

DL input  with Mi: L = 126.2 + 1796.4 = 1922.6
DL output with Mo: L = 418.9 + 7250.1 = 7669.0
DL input+output M: L = 545.1 + 9046.4 = 9591.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (5,3)
  _0111: a point with color blue at (7,7)
  _01111: a point with color blue at (9,1)
diff: 
delta:
   (76.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (5,3)
  _0111: a point with color blue at (7,7)
  _01111: a point with color blue at (9,1)
  _011111: a point with color red at (0,6)
  _0111111: a point with color cyan at (2,6)
  _01111111: a point with color red at (2,9)
  _011111111: a point with color orange at (1,5)
  _0111111111: a point with color pink at (1,7)
  _01111111111: a point with color orange at (3,8)
  _011111111111: a point with color red at (4,3)
  _0111111111111: a point with color cyan at (4,9)
diff: 
delta: (5,2)=7# (5,4)=6  (6,3)=8  (6,7)=2  (7,6)=7# (7,8)=6  (8,1)=2  (8,7)=8  (9,0)=7# (9,2)=6 
   (337.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (5,3)
  _0111: a point with color blue at (7,7)
  _01111: a point with color blue at (9,1)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (5,3)
  _0111: a point with color blue at (9,1)
  _01111: a point with color blue at (7,7)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (1,6)
  _01: a point with color blue at (3,9)
  _011: a point with color blue at (7,7)
  _0111: a point with color blue at (5,3)
  _01111: a point with color blue at (9,1)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN d364b489.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (8,2)
diff: 
delta: (9,9)=1 
   (103.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (8,2)
  _011111: a point with color orange at (0,4)
  _0111111: a point with color pink at (0,6)
  _01111111: a point with color red at (1,0)
  _011111111: a point with color cyan at (1,5)
  _0111111111: a point with color pink at (2,1)
  _01111111111: a point with color red at (2,9)
  _011111111111: a point with color cyan at (3,0)
  _0111111111111: a point with color orange at (3,8)
diff: 
delta: (4,5)=2  (4,9)=8  (5,4)=7# (5,6)=6  (6,5)=8  (7,2)=2  (8,1)=7# (8,3)=6  (8,9)=2  (9,2)=8  (9,8)=7# (9,9)=1 
   (387.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (8,2)
diff: 
delta: (9,9)=1 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (5,5)
  _01111: a point with color blue at (9,9)
diff: 
delta: (8,2)=1 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,5)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (3,9)
  _0111: a point with color blue at (8,2)
  _01111: a point with color blue at (5,5)
diff: 
delta: (9,9)=1 
! 24 wrong pixels (generated / expected)

TRAIN d364b489.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Corner: vectors on same row/column

TEST d364b489.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 25.9 sec (25.9 sec/task)
bits-train-error = 7250.1 bits (7250.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-69] Checking task d406998b.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 12574.0 = 12589.6
DL output with Mo: L = 15.6 + 12574.0 = 12589.6
DL input+output M: L = 31.2 + 25147.9 = 25179.2

# learning a model for train pairs
2.000	
1.825	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.718	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.651	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.596	OUT DEF: ^.size=^.size
1.563	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.539	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.514	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.490	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.465	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.440	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.415	OUT OBJECT at ^.layer_011111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 7629.7 = 7774.8
DL output with Mo: L = 128.8 + 9909.8 = 10038.7
DL input+output M: L = 274.0 + 17539.5 = 17813.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (155.8 bits)
data: a background with size (3,10) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color grey at (0,2)
  _011: a point with color green at (0,5)
  _0111: a point with color green at (0,9)
  _01111: a point with color green at (1,1)
  _011111: a point with color grey at (1,4)
diff: 
delta: (1,7)=3  (2,3)=3  (2,6)=5# (2,8)=5#
   (190.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,10) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN d406998b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,6)
  _01: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,9)
  _011: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,3)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,0)
diff: 
delta: (2,2)=5#
   (191.2 bits)
data: a background with size (3,12) and color black and layers
  _0: a point with color green at (0,1)
  _01: a point with color green at (0,3)
  _011: a point with color grey at (0,6)
  _0111: a point with color grey at (0,8)
  _01111: a point with color grey at (1,0)
  _011111: a point with color grey at (1,4)
diff: 
delta: (1,7)=3  (1,10)=5# (2,2)=5# (2,5)=3  (2,9)=3  (2,11)=3 
   (241.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,12) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,6)
  _01: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,9)
  _011: a rectangle with size (3,3) and color grey and mask x..|.x.|..x at (0,3)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (0,0)
diff: 
delta: (2,2)=5#
! 13 wrong pixels (generated / expected)

TRAIN d406998b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,5) and color grey and mask ..x.x|.x.x.|x.... at (0,3)
  _01: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,8)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (0,11)
  _0111: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,0)
diff: 
delta: (0,2)=5#
   (198.1 bits)
data: a background with size (3,13) and color black and layers
  _0: a point with color green at (0,2)
  _01: a point with color grey at (0,5)
  _011: a point with color grey at (0,7)
  _0111: a point with color grey at (0,11)
  _01111: a point with color green at (1,0)
  _011111: a point with color green at (1,4)
diff: 
delta: (1,6)=3  (1,9)=5# (1,12)=3  (2,1)=5# (2,3)=5# (2,8)=3  (2,10)=3 
   (266.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,13) and color black and layers
  _0: a rectangle with size (3,5) and color grey and mask ..x.x|.x.x.|x.... at (0,3)
  _01: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,8)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (0,11)
  _0111: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,0)
diff: 
delta: (0,2)=5#
! 14 wrong pixels (generated / expected)

TRAIN d406998b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask Even Checkboard at (0,7)
  _01: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,0)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,12)
diff: 
delta: (0,2)=5# (2,6)=5#
   (217.8 bits)
data: a background with size (3,14) and color black and layers
  _0: a point with color grey at (0,2)
  _01: a point with color green at (0,5)
  _011: a point with color green at (0,7)
  _0111: a point with color green at (0,9)
  _01111: a point with color green at (0,11)
  _011111: a point with color grey at (1,0)
diff: 
delta: (1,4)=5# (1,8)=5# (1,10)=5# (1,13)=3  (2,1)=3  (2,3)=3  (2,6)=5# (2,12)=5#
   (292.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,14) and color black and layers
  _0: a rectangle with size (2,5) and color grey and mask Even Checkboard at (0,7)
  _01: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,3)
  _011: a rectangle with size (2,2) and color grey and mask Even Checkboard at (1,0)
  _0111: a rectangle with size (2,2) and color grey and mask Odd Checkboard at (1,12)
diff: 
delta: (0,2)=5# (2,6)=5#
! 15 wrong pixels (generated / expected)

TRAIN d406998b.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask ...x|x.x.|.x.. at (0,0)
  _01: a rectangle with size (2,3) and color grey and mask Even Checkboard at (0,7)
  _011: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (1,4)
  _0111: a rectangle with size (3,3) and color grey and mask ..x|.x.|x.. at (0,10)
diff: 
delta: (0,14)=5# (1,15)=5# (2,13)=5# (2,16)=5#
! 18 wrong pixels (generated / expected)

TEST d406998b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.8 sec (25.8 sec/task)
bits-train-error = 9909.8 bits (9909.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-68] Checking task d43fd935.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9101.0 = 9116.7
DL output with Mo: L = 15.6 + 14118.0 = 14133.6
DL input+output M: L = 31.2 + 23219.0 = 23250.2

# learning a model for train pairs
2.000	
1.773	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.559	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.346	OUT OBJECT at ^.layer_01: ^.layer_0
1.245	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.202	OUT DEF: ^.size=^.size
1.176	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.123	OUT OBJECT at ^.layer_010: ^.layer_01
1.093	OUT OBJECT at ^.layer_0111: ^.layer_01.shape at (?,?)
1.067	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.041	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
1.014	IN  OBJECT at ^.layer_0101: a point with color ? at (?,?)
0.992	OUT DEF: ^.layer_0111.pos=min(^.layer_011.pos, ^.layer_0101.pos)
0.973	IN  DEF: ^.layer_0.shape.color=green
0.959	OUT DEF: ^.layer_011.shape.size.i=span(^.layer_011.pos.i, ^.layer_010.pos.i)
0.948	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.936	OUT DEF: ^.layer_011.pos.j=^.layer_0.pos.j
0.925	OUT DEF: ^.layer_0.shape.color=^.layer_011.shape.color
0.914	IN  DEF: ^.layer_0.shape.mask=Full
0.906	IN  DEF: ^.color=black
0.899	OUT DEF: ^.layer_011.shape.size.j=1
0.892	OUT DEF: ^.layer_011.shape.mask=Full
0.887	OUT DEF: ^.color=black
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_011.shape.color and mask ? at (?,?)
  _010: ^.layer_01
  _01: ^.layer_0
  _011: a rectangle with size (span(^.layer_011.pos.i, ^.layer_010.pos.i),1) and color ^.layer_01.shape.color and mask Full at (?,^.layer_0.pos.j)
  _0111: ^.layer_01.shape at min(^.layer_011.pos, ^.layer_0101.pos)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _010: a point with color ? at (?,?)
  _0101: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 129.2 + 5624.6 = 5753.8
DL output with Mo: L = 206.8 + 3408.4 = 3615.2
DL input+output M: L = 336.0 + 9033.0 = 9369.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a point with color pink at (1,8)
  _01: a point with color pink at (6,7)
  _011: a point with color blue at (3,8)
diff: 
delta: (7,6)=6  (8,2)=6  (9,4)=1 
   (188.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,5) and color blue and mask Full at (3,4)
  _010: a point with color pink at (6,7)
  _01: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _011: a rectangle with size (4,1) and color pink and mask Full at (5,2)
  _0111: a point with color pink at (1,8)
diff: 
delta: (0,0)=1  (7,6)=6  (9,4)=1 
   (110.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a point with color pink at (1,8)
  _01: a point with color blue at (3,8)
  _011: a point with color pink at (6,7)
diff: 
delta: (7,6)=6  (8,2)=6  (9,4)=1 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a point with color pink at (1,8)
  _01: a point with color blue at (3,8)
  _011: a point with color pink at (7,6)
diff: 
delta: (6,7)=6  (8,2)=6  (9,4)=1 
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (3,2)
  _010: a point with color blue at (0,0)
  _0101: a point with color pink at (1,8)
  _01: a point with color pink at (6,7)
  _011: a point with color blue at (3,8)
diff: 
delta: (7,6)=6  (8,2)=6  (9,4)=1 
! 17 wrong pixels (generated / expected)

TRAIN d43fd935.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a point with color cyan at (0,6)
  _01: a point with color orange at (2,3)
  _011: a point with color cyan at (5,1)
diff: 
delta: (2,9)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
   (264.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color cyan and mask x...|x...|.xxx at (0,6)
  _010: a point with color orange at (2,3)
  _01: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _011: a rectangle with size (6,1) and color orange and mask Full at (4,5)
  _0111: a point with color orange at (0,1)
diff: 
delta: (2,4)=7# (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,9)=7#
   (203.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a point with color cyan at (0,6)
  _01: a point with color orange at (2,3)
  _011: a point with color cyan at (2,9)
diff: 
delta: (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a point with color cyan at (0,6)
  _01: a point with color orange at (2,3)
  _011: a point with color cyan at (5,1)
diff: 
delta: (2,9)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (2,5)
  _010: a point with color orange at (0,1)
  _0101: a point with color cyan at (0,6)
  _01: a point with color cyan at (2,9)
  _011: a point with color orange at (2,3)
diff: 
delta: (5,1)=8  (6,8)=8  (7,3)=8  (8,1)=7# (9,5)=7# (9,9)=7#
! 23 wrong pixels (generated / expected)

TRAIN d43fd935.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a point with color blue at (2,1)
  _01: a point with color blue at (9,1)
  _011: a point with color blue at (5,9)
diff: 
delta:
   (109.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (5,9)
  _010: a point with color blue at (9,1)
  _01: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _011: a rectangle with size (5,1) and color blue and mask Full at (1,4)
  _0111: a point with color blue at (2,1)
diff: 
delta:
   (26.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a point with color blue at (2,1)
  _01: a point with color blue at (5,9)
  _011: a point with color blue at (9,1)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a point with color blue at (2,1)
  _01: a point with color blue at (9,1)
  _011: a point with color blue at (5,9)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,4)
  _010: a point with color blue at (1,4)
  _0101: a point with color blue at (5,9)
  _01: a point with color blue at (2,1)
  _011: a point with color blue at (9,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN d43fd935.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,2)
  _010: a point with color red at (0,3)
  _0101: a point with color red at (1,0)
  _01: a point with color red at (2,7)
  _011: a point with color pink at (3,0)
diff: 
delta: (4,7)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,2)
  _010: a point with color red at (0,3)
  _0101: a point with color red at (1,0)
  _01: a point with color red at (2,7)
  _011: a point with color pink at (4,7)
diff: 
delta: (3,0)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 23 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full at (6,2)
  _010: a point with color red at (0,3)
  _0101: a point with color red at (1,0)
  _01: a point with color pink at (3,0)
  _011: a point with color red at (2,7)
diff: 
delta: (4,7)=6  (6,0)=6  (8,7)=2  (9,3)=6  (9,5)=6 
! 20 wrong pixels (generated / expected)

TEST d43fd935.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.1 sec (26.1 sec/task)
bits-train-error = 3408.4 bits (3408.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-67] Checking task d4469b4b.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18391.7 = 18407.3
DL output with Mo: L = 15.6 + 7860.1 = 7875.7
DL input+output M: L = 31.2 + 26251.8 = 26283.1

# learning a model for train pairs
2.000	
1.370	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.844	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.729	OUT DEF: ^.size=^.size - 2
0.634	OUT DEF: ^.layer_0.shape.size=^.size - 2
0.564	OUT DEF: ^.layer_0.pos='(0,0)
0.514	OUT DEF: ^.layer_0.shape.color=grey
0.492	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size - 2 and color black and layers
  _0: a rectangle with size ^.size - 2 and color grey and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 6769.7 = 6818.5
DL output with Mo: L = 59.6 + 899.4 = 959.0
DL input+output M: L = 108.4 + 7669.1 = 7777.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask ..x|.x.|.xx|xx. at (1,2)
diff: 
delta: (0,0)=2  (1,1)=2  (2,0)=2 
   (138.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask ..x|.x.|.xx|xx. at (1,2)
diff: 
delta: (0,0)=2  (1,1)=2  (2,0)=2 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|x.xx|x.x.|...x at (1,1)
diff: 
delta:
   (70.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask .xxx|x.xx|x.x.|...x at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask ...xx|.xx..|.x.x.|x.xx. at (1,0)
diff: 
delta: (0,0)=3 
   (99.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|..x|xxx at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask ...xx|.xx..|.x.x.|x.xx. at (1,0)
diff: 
delta: (0,0)=3 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (5,5) and color black and mask .x.xx|.xx..|..x.x|x.x.x|.xxx. at (0,0)
diff: 
delta:
   (87.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (5,5) and color black and mask .x.xx|.xx..|..x.x|x.x.x|.xxx. at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask x.x.|xxx.|.xxx|xx..|..x. at (0,1)
diff: 
delta:
   (81.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,4) and color black and mask x.x.|xxx.|.xxx|xx..|..x. at (0,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .x.x.|.xxx.|.xx.x|xxx..|..x.. at (0,0)
diff: 
delta: (4,4)=2 
   (105.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask xxx|.x.|.x. at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask .x.x.|.xxx.|.xx.x|xxx..|..x.. at (0,0)
diff: 
delta: (4,4)=2 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .x.|xx.|.x.|..x|xxx at (0,0)
diff: 
delta: (0,3)=3 
   (94.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask ..x|..x|xxx at (0,0)
diff: 
delta:
   (14.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,3) and color green and mask .x.|xx.|.x.|..x|xxx at (0,0)
diff: 
delta: (0,3)=3 
! 4 wrong pixels (generated / expected)

TRAIN d4469b4b.json/7: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color blue and mask xxxx.|..x.x|.x...|.x...|..x.. at (0,0)
diff: 
delta: (3,4)=1 
! 4 wrong pixels (generated / expected)

TEST d4469b4b.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,4) and color green and mask x.xx|.x.. at (0,1)
diff: 
delta: (2,0)=3  (3,2)=3  (3,4)=3  (4,4)=3 
! 4 wrong pixels (generated / expected)

TEST d4469b4b.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.1 sec (1.1 sec/task)
bits-train-error = 899.4 bits (899.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-66] Checking task d4a91cb9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2279.8 = 2295.4
DL output with Mo: L = 15.6 + 11704.3 = 11719.9
DL input+output M: L = 31.2 + 13984.1 = 14015.3

# learning a model for train pairs
2.000	
1.400	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.290	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.168	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.096	IN  DEF: ^.layer_0.shape.color=cyan
1.023	IN  DEF: ^.layer_01.shape.color=red
0.956	OUT OBJECT at ^.layer_01: ^.layer_01
0.887	OUT OBJECT at ^.layer_00: ^.layer_0
0.835	OUT DEF: ^.size=^.size
0.793	OUT DEF: ^.layer_0.shape.size=span(^.layer_0.pos, ^.layer_01.pos) - 1
0.761	IN  DEF: ^.color=black
0.747	OUT DEF: ^.layer_0.shape.color=yellow
0.740	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size span(^.layer_0.pos, ^.layer_01.pos) - 1 and color yellow and mask ? at (?,?)
  _01: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 60.4 + 1294.4 = 1354.8
DL output with Mo: L = 88.6 + 1669.6 = 1758.2
DL input+output M: L = 149.0 + 2964.0 = 3112.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,12) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color red at (8,9)
diff: 
delta:
   (43.6 bits)
data: a background with size (10,12) and color black and layers
  _00: a point with color cyan at (2,1)
  _0: a rectangle with size (6,8) and color yellow and mask x.......|x.......|x.......|x.......|x.......|xxxxxxxx at (3,1)
  _01: a point with color red at (8,9)
diff: 
delta:
   (59.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,12) and color black and layers
  _0: a point with color cyan at (2,1)
  _01: a point with color red at (8,9)
diff: 
delta:
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,12) and color black and layers
  _0: a point with color red at (8,9)
  _01: a point with color cyan at (2,1)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 55 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,11) and color black and layers
  _0: a point with color cyan at (1,8)
  _01: a point with color red at (5,1)
diff: 
delta:
   (41.8 bits)
data: a background with size (8,11) and color black and layers
  _00: a point with color cyan at (1,8)
  _0: a rectangle with size (4,7) and color yellow and mask ......x|......x|......x|xxxxxxx at (2,2)
  _01: a point with color red at (5,1)
diff: 
delta:
   (44.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,11) and color black and layers
  _0: a point with color cyan at (1,8)
  _01: a point with color red at (5,1)
diff: 
delta:
! 38 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (10,2)
  _01: a point with color red at (1,8)
diff: 
delta:
   (44.1 bits)
data: a background with size (12,11) and color black and layers
  _00: a point with color cyan at (10,2)
  _0: a rectangle with size (9,6) and color yellow and mask xxxxxx|x.....|x.....|x.....|x.....|x.....|x.....|x.....|x..... at (1,2)
  _01: a point with color red at (1,8)
diff: 
delta:
   (63.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a point with color cyan at (10,2)
  _01: a point with color red at (1,8)
diff: 
delta:
! 46 wrong pixels (generated / expected)

TRAIN d4a91cb9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,13) and color black and layers
  _0: a point with color cyan at (8,3)
  _01: a point with color red at (2,11)
diff: 
delta:
! 45 wrong pixels (generated / expected)

TEST d4a91cb9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 1669.6 bits (1669.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-65] Checking task d4f3cd78.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 9580.7 = 9596.3
DL output with Mo: L = 15.6 + 18832.0 = 18847.6
DL input+output M: L = 31.2 + 28412.6 = 28443.9

# learning a model for train pairs
2.000	
1.205	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.727	OUT OBJECT at ^.layer_0: ^.layer_0
0.307	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.285	OUT DEF: ^.size=^.size
0.274	IN  DEF: ^.layer_0.shape.color=grey
0.264	OUT DEF: ^.layer_01.shape.size.i=bottom(^.layer_0)
0.258	OUT DEF: ^.layer_01.shape.size.j=^.layer_0.shape.size.j - 2
0.252	OUT DEF: ^.layer_01.shape.color=cyan
0.246	OUT DEF: ^.layer_01.pos.j=3
0.241	IN  DEF: ^.color=black
0.238	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (bottom(^.layer_0),^.layer_0.shape.size.j - 2) and color cyan and mask ? at (?,3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 1752.4 = 1802.7
DL output with Mo: L = 82.6 + 864.4 = 947.0
DL input+output M: L = 132.9 + 2616.8 = 2749.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
diff: 
delta:
   (91.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
  _01: a rectangle with size (7,4) and color cyan and mask xxxx|xxxx|xxxx|xxxx|..x.|..x.|..x. at (3,3)
diff: 
delta:
   (37.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask xxxxxx|x....x|x....x|x....x|x....x|xxx.xx at (2,2)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
diff: 
delta:
   (84.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
  _01: a rectangle with size (9,4) and color cyan and mask ..x.|..x.|..x.|..x.|..x.|..x.|xxxx|xxxx|xxxx at (0,3)
diff: 
delta:
   (48.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,6) and color grey and mask xxx.xx|x....x|x....x|x....x|xxxxxx at (5,2)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN d4f3cd78.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,5) and color grey and mask xxxxx|x...x|x...x|x....|x...x|xxxxx at (2,2)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TEST d4f3cd78.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 864.4 bits (864.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-64] Checking task d511f180.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7795.6 = 7811.2
DL output with Mo: L = 15.6 + 7795.6 = 7811.2
DL input+output M: L = 31.2 + 15591.3 = 15622.5

# learning a model for train pairs
2.000	
1.861	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.722	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.667	OUT DEF: ^.size=^.size
1.628	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
1.596	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.566	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.534	OUT DEF: ^.layer_01.pos='(0,0)
1.503	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.472	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.440	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.415	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
1.394	OUT DEF: ^.layer_01111.shape.color=red
1.378	OUT DEF: ^.layer_011.pos.i='0
1.363	OUT DEF: ^.layer_0111.pos.i=1
1.347	OUT DEF: ^.layer_01111.pos.i=2
1.333	OUT DEF: ^.layer_0111.pos.j=^.layer_0.shape.size.i
1.330	OUT OBJECT at ^.layer_00: a point with color ? at (?,?)
1.316	OUT DEF: ^.layer_00.pos.j=^.layer_0.shape.size.i
1.302	OUT DEF: ^.layer_00.pos.i=right(^.layer_0) + 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: a point with color ? at (right(^.layer_0) + 1,^.layer_0.shape.size.i)
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a point with color ? at '(0,0)
  _011: a point with color ? at ('0,?)
  _0111: a point with color ? at (1,^.layer_0.shape.size.i)
  _01111: a point with color red at (2,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 6675.5 = 6724.4
DL output with Mo: L = 185.8 + 3259.9 = 3445.7
DL input+output M: L = 234.6 + 9935.4 = 10170.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (2,4) and color grey and mask xx.x|.xxx at (1,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,2)=6  (1,4)=4  (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
   (370.2 bits)
data: a background with size (5,5) and color grey and layers
  _00: a point with color blue at (4,2)
  _0: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (1,0)
  _01: a point with color red at (0,0)
  _011: a point with color orange at (0,1)
  _0111: a point with color pink at (1,2)
  _01111: a point with color red at (2,4)
diff: 
delta: (1,4)=4  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=8  (4,3)=9# (4,4)=3 
   (236.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (2,4) and color grey and mask xx.x|.xxx at (1,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,2)=6  (1,4)=4  (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (2,4) and color grey and mask Full (and Border) at (1,0)
diff: 
delta: (0,0)=2  (0,1)=7# (1,2)=6  (1,4)=4  (2,0)=8  (2,4)=2  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,1)=5# (4,2)=1  (4,3)=9# (4,4)=3 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (1,3) and color cyan and mask Full at (0,2)
diff: 
delta: (0,0)=2  (0,1)=7# (1,2)=6  (1,4)=4  (2,0)=8  (2,4)=2  (3,0)=8  (3,1)=8  (3,2)=4  (3,3)=3  (3,4)=6  (4,0)=6  (4,2)=1  (4,3)=9# (4,4)=3 
! 25 wrong pixels (generated / expected)

TRAIN d511f180.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
diff: 
delta: (0,0)=3  (0,2)=1  (1,2)=8  (2,0)=2  (2,2)=9#
   (159.7 bits)
data: a background with size (3,3) and color yellow and layers
  _00: a point with color brown at (2,2)
  _0: a rectangle with size (2,1) and color cyan and mask Full at (0,1)
  _01: a point with color green at (0,0)
  _011: a point with color blue at (0,2)
  _0111: a point with color grey at (1,2)
  _01111: a point with color red at (2,0)
diff: 
delta:
   (45.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,1)
diff: 
delta: (0,0)=3  (0,2)=1  (1,2)=8  (2,0)=2  (2,2)=9#
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,0)
diff: 
delta: (0,0)=3  (0,2)=1  (1,2)=8  (2,0)=2  (2,2)=9#
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,0)
diff: 
delta: (0,1)=5# (0,2)=1  (1,1)=5# (1,2)=8  (2,0)=2  (2,2)=9#
! 8 wrong pixels (generated / expected)

TRAIN d511f180.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
diff: 
delta: (0,0)=6  (0,2)=3  (1,1)=7# (2,2)=2 
   (137.7 bits)
data: a background with size (3,3) and color cyan and layers
  _00: a point with color grey at (2,1)
  _0: a rectangle with size (1,2) and color grey and mask Full at (2,0)
  _01: a point with color pink at (0,0)
  _011: a point with color green at (0,2)
  _0111: a point with color orange at (1,1)
  _01111: a point with color red at (2,2)
diff: 
delta:
   (45.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,2) and color cyan and mask Full at (2,0)
diff: 
delta: (0,0)=6  (0,2)=3  (1,1)=7# (2,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color cyan and layers
  _0: a rectangle with size (2,3) and color grey and mask Odd Checkboard at (0,0)
diff: 
delta: (0,0)=6  (0,2)=3  (1,1)=7# (2,2)=2 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color grey and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,0)
diff: 
delta: (0,2)=3  (1,1)=7# (2,0)=8  (2,1)=8  (2,2)=2 
! 9 wrong pixels (generated / expected)

TRAIN d511f180.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (2,1) and color grey and mask Full at (0,3)
diff: 
delta: (0,2)=4  (1,0)=3  (1,2)=7# (2,0)=3  (2,1)=7# (2,2)=1  (2,3)=9# (3,0)=6  (3,1)=4 
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (1,0)
diff: 
delta: (0,2)=4  (0,3)=5# (1,2)=7# (1,3)=5# (2,1)=7# (2,2)=1  (2,3)=9# (3,0)=6  (3,1)=4 
! 16 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (2,2) and color orange and mask Odd Checkboard at (1,1)
diff: 
delta: (0,2)=4  (0,3)=5# (1,0)=3  (1,3)=5# (2,0)=3  (2,2)=1  (2,3)=9# (3,0)=6  (3,1)=4 
! 16 wrong pixels (generated / expected)

TEST d511f180.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 21.7 sec (21.7 sec/task)
bits-train-error = 3259.9 bits (3259.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-63] Checking task d5d6de2d.json: 3 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14123.2 = 14138.8
DL output with Mo: L = 15.6 + 5440.0 = 5455.6
DL input+output M: L = 31.2 + 19563.2 = 19594.5

# learning a model for train pairs
2.000	
1.356	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.716	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.565	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.450	OUT DEF: ^.size=^.size
0.386	OUT DEF: ^.layer_0.pos=^.layer_0.pos + 1
0.330	OUT DEF: ^.layer_0.shape.size=max(^.layer_0.shape.size, ^.layer_01.shape.size) - 2
0.299	OUT DEF: ^.layer_0.shape.color=green
0.281	OUT DEF: ^.layer_0.shape.mask=Full
0.267	OUT DEF: ^.color=black
0.255	IN  DEF: ^.layer_0.shape.color=red
0.244	IN  DEF: ^.layer_01.shape.color=red
0.233	IN  DEF: ^.layer_01.shape.mask=Border
0.228	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size max(^.layer_0.shape.size, ^.layer_01.shape.size) - 2 and color green and mask Full at ^.layer_0.pos + 1
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask Border at (?,?)

DL input  with Mi: L = 87.3 + 2252.8 = 2340.2
DL output with Mo: L = 72.4 + 269.0 = 341.4
DL input+output M: L = 159.7 + 2521.8 = 2681.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask Border at (5,4)
  _01: a rectangle with size (3,3) and color red and mask Border at (1,1)
diff: 
delta:
   (76.4 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color green and mask Full at (6,5)
diff: 
delta: (2,2)=3 
   (26.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask Border at (5,4)
  _01: a rectangle with size (3,3) and color red and mask Border at (1,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color red and mask Border at (5,4)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,4)
  _01: a rectangle with size (4,3) and color red and mask Border at (1,4)
diff: 
delta:
   (69.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,1) and color green and mask Full at (2,5)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,3) and color red and mask Full at (1,4)
  _01: a rectangle with size (4,3) and color red and mask Border at (1,4)
diff: 
delta:
correct output grid

TRAIN d5d6de2d.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Border at (7,10)
diff: 
delta:
   (79.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (7,10)
  _01: a rectangle with size (5,5) and color red and mask Border at (1,1)
diff: 
delta:
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,5) and color red and mask Border at (1,1)
  _01: a rectangle with size (2,2) and color red and mask Border at (7,10)
diff: 
delta:
correct output grid

TRAIN d5d6de2d.json/3: 1 2nd (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,8) and color red and mask Border at (4,1)
  _01: a rectangle with size (3,3) and color red and mask Border at (0,0)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Border at (0,0)
  _01: a rectangle with size (6,8) and color red and mask Border at (4,1)
diff: 
delta:
! 47 wrong pixels (generated / expected)

TEST d5d6de2d.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (4,9) and color red and mask Border at (9,15)
  _01: a rectangle with size (6,5) and color red and mask Border at (18,1)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2 
! 31 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (6,5) and color red and mask Border at (18,1)
  _01: a rectangle with size (4,9) and color red and mask Border at (9,15)
diff: 
delta: (1,1)=2  (1,2)=2  (1,3)=2  (1,4)=2  (1,5)=2  (1,6)=2  (1,7)=2  (2,1)=2  (2,7)=2  (3,1)=2  (3,2)=2  (3,3)=2  (3,4)=2  (3,5)=2  (3,6)=2  (3,7)=2  (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2 
! 35 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (25,25) and color black and layers
  _0: a rectangle with size (4,9) and color red and mask Border at (9,15)
  _01: a rectangle with size (3,7) and color red and mask Border at (1,1)
diff: 
delta: (7,4)=2  (7,5)=2  (8,4)=2  (8,5)=2  (18,1)=2  (18,2)=2  (18,3)=2  (18,4)=2  (18,5)=2  (19,1)=2  (19,5)=2  (20,1)=2  (20,5)=2  (21,1)=2  (21,5)=2  (22,1)=2  (22,5)=2  (23,1)=2  (23,2)=2  (23,3)=2  (23,4)=2  (23,5)=2 
! 17 wrong pixels (generated / expected)

TEST d5d6de2d.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.6 sec (1.6 sec/task)
bits-train-error = 269.0 bits (269.0 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-62] Checking task d631b094.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2898.1 = 2913.8
DL output with Mo: L = 15.6 + 716.1 = 731.7
DL input+output M: L = 31.2 + 3614.2 = 3645.5

# learning a model for train pairs
2.000	
1.656	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.175	OUT DEF: ^.color=^.layer_0.shape.color
0.887	OUT DEF: ^.size.j=area(^.layer_0.shape)
0.705	OUT DEF: ^.size.i=1
0.671	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (1,area(^.layer_0.shape)) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 1765.4 = 1813.4
DL output with Mo: L = 35.8 + 0.0 = 35.8
DL input+output M: L = 83.8 + 1765.4 = 1849.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,0)
diff: 
delta:
   (44.7 bits)
data: a background with size (1,2) and color blue and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Even Checkboard at (1,0)
diff: 
delta:
correct output grid

TRAIN d631b094.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
   (45.9 bits)
data: a background with size (1,3) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask Odd Checkboard at (0,0)
diff: 
delta:
correct output grid

TRAIN d631b094.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta:
   (36.4 bits)
data: a background with size (1,1) and color orange and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color orange and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN d631b094.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|x. at (0,0)
diff: 
delta:
   (49.5 bits)
data: a background with size (1,4) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color cyan and mask .x|xx|x. at (0,0)
diff: 
delta:
correct output grid

TRAIN d631b094.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask xx.|x.x|..x at (0,0)
diff: 
delta:
correct output grid

TEST d631b094.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-61] Checking task d687bc17.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 37728.3 = 37743.9
DL output with Mo: L = 15.6 + 36707.4 = 36723.0
DL input+output M: L = 31.2 + 74435.7 = 74466.9

# learning a model for train pairs
2.000	
1.765	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.550	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.342	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.133	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.935	OUT OBJECT at ^.layer_00: ^.layer_0
0.749	OUT OBJECT at ^.layer_011: ^.layer_01
0.580	IN  OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.424	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.406	OUT DEF: ^.size=^.size
0.391	OUT OBJECT at ^.layer_010: ^.layer_011
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_011
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 145.1 + 10078.1 = 10223.3
DL output with Mo: L = 102.9 + 4313.6 = 4416.6
DL input+output M: L = 248.1 + 14391.8 = 14639.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _011: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (2,10)=3  (3,3)=2  (4,7)=7# (5,3)=3  (6,5)=8  (7,9)=4  (7,11)=2 
   (344.7 bits)
data: a background with size (10,15) and color black and layers
  _00: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _0: a rectangle with size (8,2) and color red and mask x.|x.|xx|x.|x.|x.|xx|x. at (1,0)
  _010: a rectangle with size (8,1) and color green and mask Full at (1,14)
  _01: a rectangle with size (8,2) and color green and mask .x|xx|.x|.x|xx|.x|.x|.x at (1,13)
  _011: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
diff: 
delta: (1,9)=4  (8,5)=8 
   (164.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (2,10)=3  (3,3)=2  (4,7)=7# (5,3)=3  (6,5)=8  (7,9)=4  (7,11)=2 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,15) and color black and layers
  _0: a rectangle with size (1,13) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (8,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (9,1)
  _011: a rectangle with size (8,1) and color green and mask Full at (1,14)
diff: 
delta: (2,10)=3  (3,3)=2  (4,7)=7# (5,3)=3  (6,5)=8  (7,9)=4  (7,11)=2 
! 16 wrong pixels (generated / expected)

TRAIN d687bc17.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (2,9)=7# (3,7)=2  (4,4)=3  (6,8)=4  (8,3)=8  (9,5)=1  (9,8)=7#
   (343.7 bits)
data: a background with size (12,12) and color black and layers
  _00: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _0: a rectangle with size (2,10) and color orange and mask .......xx.|xxxxxxxxxx at (10,1)
  _010: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (10,1) and color red and mask Full at (1,0)
diff: 
delta: (1,5)=1  (6,10)=4 
   (144.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (2,9)=7# (3,7)=2  (4,4)=3  (6,8)=4  (8,3)=8  (9,5)=1  (9,8)=7#
! 18 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (1,10) and color blue and mask Full at (0,1)
  _010: a rectangle with size (10,1) and color red and mask Full at (1,0)
  _01: a rectangle with size (1,10) and color orange and mask Full at (11,1)
  _011: a rectangle with size (10,1) and color yellow and mask Full at (1,11)
diff: 
delta: (2,9)=7# (3,7)=2  (4,4)=3  (6,8)=4  (8,3)=8  (9,5)=1  (9,8)=7#
! 17 wrong pixels (generated / expected)

TRAIN d687bc17.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _01: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _011: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8 
   (319.5 bits)
data: a background with size (14,11) and color black and layers
  _00: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _0: a rectangle with size (12,2) and color cyan and mask .x|.x|.x|xx|.x|.x|.x|.x|xx|xx|.x|.x at (1,9)
  _010: a rectangle with size (1,9) and color green and mask Full at (13,1)
  _01: a rectangle with size (2,1) and color pink and mask Full at (0,8)
  _011: a rectangle with size (1,9) and color pink and mask Full at (0,1)
diff: 
delta: (7,1)=4 
   (122.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _01: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _011: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8 
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,11) and color black and layers
  _0: a rectangle with size (12,1) and color yellow and mask Full at (1,0)
  _010: a rectangle with size (1,9) and color pink and mask Full at (0,1)
  _01: a rectangle with size (12,1) and color cyan and mask Full at (1,10)
  _011: a rectangle with size (1,9) and color green and mask Full at (13,1)
diff: 
delta: (2,2)=2  (3,8)=6  (4,4)=8  (7,3)=4  (9,6)=8  (10,2)=8 
! 16 wrong pixels (generated / expected)

TRAIN d687bc17.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _01: a rectangle with size (12,1) and color blue and mask Full at (1,0)
  _011: a rectangle with size (12,1) and color red and mask Full at (1,16)
diff: 
delta: (2,7)=8  (2,12)=1  (3,3)=2  (3,14)=3  (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (14,17) and color black and layers
  _0: a rectangle with size (1,15) and color yellow and mask Full at (0,1)
  _010: a rectangle with size (12,1) and color blue and mask Full at (1,0)
  _01: a rectangle with size (1,15) and color cyan and mask Full at (13,1)
  _011: a rectangle with size (12,1) and color red and mask Full at (1,16)
diff: 
delta: (2,7)=8  (2,12)=1  (3,3)=2  (3,14)=3  (5,6)=1  (5,10)=7# (5,13)=8  (7,4)=2  (9,5)=6  (9,8)=4  (9,14)=4  (10,3)=8  (10,11)=1 
! 24 wrong pixels (generated / expected)

TEST d687bc17.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.3 sec (26.3 sec/task)
bits-train-error = 4313.6 bits (4313.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-60] Checking task d6ad076f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 27872.8 = 27888.4
DL output with Mo: L = 15.6 + 36609.5 = 36625.1
DL input+output M: L = 31.2 + 64482.3 = 64513.5

# learning a model for train pairs
2.000	
1.421	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.950	OUT OBJECT at ^.layer_0: ^.layer_0
0.632	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.340	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.150	OUT OBJECT at ^.layer_011: ^.layer_01
0.134	OUT DEF: ^.size=^.size
0.128	OUT DEF: ^.layer_01.shape.size.i=^.layer_01.pos.j + 2
0.124	OUT DEF: ^.layer_01.shape.color=cyan
0.120	OUT DEF: ^.layer_01.pos.j=right(^.layer_0) / 2
0.116	OUT DEF: ^.layer_01.pos.i=min(^.layer_0.pos.i, ^.layer_01.pos.i) + 3
0.112	IN  DEF: ^.layer_0.shape.mask=Full
0.109	IN  DEF: ^.layer_01.shape.mask=Full
0.106	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.103	IN  DEF: ^.color=black
0.101	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size (^.layer_01.pos.j + 2,?) and color cyan and mask ^.layer_01.shape.mask at (min(^.layer_0.pos.i, ^.layer_01.pos.i) + 3,right(^.layer_0) / 2)
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 2504.2 = 2584.6
DL output with Mo: L = 128.3 + 191.4 = 319.7
DL input+output M: L = 208.7 + 2695.6 = 2904.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
   (82.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,2) and color cyan and mask Full at (4,2)
  _011: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
   (5.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,6) and color orange and mask Full at (7,0)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN d6ad076f.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (84.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (4,4)
  _011: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
   (6.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (5,3) and color pink and mask Full at (3,7)
diff: 
delta:
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,3) and color pink and mask Full at (3,7)
  _01: a rectangle with size (8,3) and color yellow and mask Full at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN d6ad076f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,9) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,6) and color brown and mask Full at (8,3)
diff: 
delta:
   (83.8 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,9) and color green and mask Full at (0,0)
  _01: a rectangle with size (5,4) and color cyan and mask Full at (3,4)
  _011: a rectangle with size (2,6) and color brown and mask Full at (8,3)
diff: 
delta:
   (7.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,9) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,6) and color brown and mask Full at (8,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,6) and color brown and mask Full at (8,3)
  _01: a rectangle with size (3,9) and color green and mask Full at (0,0)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN d6ad076f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (8,4) and color blue and mask Full at (0,0)
  _01: a rectangle with size (6,3) and color red and mask Full at (1,7)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color red and mask Full at (1,7)
  _01: a rectangle with size (8,4) and color blue and mask Full at (0,0)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TEST d6ad076f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 191.4 bits (191.4 bits/task)
acc-train-micro = 0.33 tasks (33.33%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.33
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-59] Checking task d89b689b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 6837.2 = 6852.9
DL output with Mo: L = 15.6 + 3798.7 = 3814.3
DL input+output M: L = 31.2 + 10635.9 = 10667.2

# learning a model for train pairs
2.000	
1.697	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.538	OUT DEF: ^.size=^.size
1.476	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.386	OUT DEF: ^.layer_0.pos=^.layer_0.pos
1.322	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.235	OUT DEF: ^.layer_01.pos=^.layer_0.pos + 1
1.168	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.095	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.053	OUT DEF: ^.layer_011.pos.i=^.layer_0.pos.i
1.011	OUT DEF: ^.layer_0111.pos.j=^.layer_0.pos.j
0.970	OUT DEF: ^.layer_011.pos.j=right(^.layer_0)
0.928	OUT DEF: ^.layer_0111.pos.i=bottom(^.layer_0)
0.893	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.850	OUT DEF: ^.layer_011.shape=^.layer_01.shape
0.814	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.772	OUT DEF: ^.layer_0.shape=^.layer_011.shape
0.748	IN  DEF: ^.layer_0.shape.color=cyan
0.728	OUT DEF: ^.color=black
0.713	IN  DEF: ^.layer_0.shape.mask=Full
0.703	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_011.shape at ^.layer_0.pos
  _01: a point with color ? at ^.layer_0.pos + 1
  _011: ^.layer_01.shape at (^.layer_0.pos.i,right(^.layer_0))
  _0111: a point with color ? at (bottom(^.layer_0),^.layer_0.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color cyan and mask Full at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)

DL input  with Mi: L = 90.2 + 3860.7 = 3950.9
DL output with Mo: L = 142.1 + 338.6 = 480.7
DL input+output M: L = 232.2 + 4199.4 = 4431.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color pink at (3,1)
diff: 
delta: (8,1)=4  (9,9)=9#
   (128.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color pink at (4,4)
  _01: a point with color brown at (5,5)
  _011: a point with color orange at (4,5)
  _0111: a point with color yellow at (5,4)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color pink at (3,1)
diff: 
delta: (8,1)=4  (9,9)=9#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color orange at (0,8)
  _011: a point with color yellow at (8,1)
diff: 
delta: (3,1)=6  (9,9)=9#
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color pink at (3,1)
  _011: a point with color orange at (0,8)
diff: 
delta: (8,1)=4  (9,9)=9#
! 4 wrong pixels (generated / expected)

TRAIN d89b689b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color brown at (1,8)
  _011: a point with color grey at (0,2)
diff: 
delta: (6,9)=1  (8,1)=2 
   (128.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (4,4)
  _01: a point with color blue at (5,5)
  _011: a point with color brown at (4,5)
  _0111: a point with color red at (5,4)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color grey at (0,2)
  _011: a point with color brown at (1,8)
diff: 
delta: (6,9)=1  (8,1)=2 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color grey at (0,2)
  _011: a point with color blue at (6,9)
diff: 
delta: (1,8)=9# (8,1)=2 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color brown at (1,8)
  _011: a point with color grey at (0,2)
diff: 
delta: (6,9)=1  (8,1)=2 
! 2 wrong pixels (generated / expected)

TRAIN d89b689b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (0,3)
diff: 
delta: (6,9)=6  (7,2)=3 
   (128.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (2,5)
  _01: a point with color pink at (3,6)
  _011: a point with color yellow at (2,6)
  _0111: a point with color green at (3,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color yellow at (0,9)
diff: 
delta: (6,9)=6  (7,2)=3 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color blue at (0,3)
  _011: a point with color pink at (6,9)
diff: 
delta: (0,9)=4  (7,2)=3 
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (2,5)
  _01: a point with color yellow at (0,9)
  _011: a point with color blue at (0,3)
diff: 
delta: (6,9)=6  (7,2)=3 
! 2 wrong pixels (generated / expected)

TRAIN d89b689b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color yellow at (1,6)
  _011: a point with color green at (3,1)
diff: 
delta: (8,8)=7# (9,2)=6 
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color yellow at (1,6)
  _011: a point with color orange at (8,8)
diff: 
delta: (3,1)=3  (9,2)=6 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Full at (4,4)
  _01: a point with color green at (3,1)
  _011: a point with color yellow at (1,6)
diff: 
delta: (8,8)=7# (9,2)=6 
! 4 wrong pixels (generated / expected)

TEST d89b689b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.7 sec (0.7 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-58] Checking task d8c310e9.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11161.5 = 11177.1
DL output with Mo: L = 15.6 + 20027.8 = 20043.4
DL input+output M: L = 31.2 + 31189.3 = 31220.5

# learning a model for train pairs
2.000	
1.660	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.373	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.260	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.160	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.059	OUT OBJECT at ^.layer_00: ^.layer_0
0.955	OUT OBJECT at ^.layer_001: ^.layer_0.shape at (?,?)
0.858	OUT OBJECT at ^.layer_01: ^.layer_011
0.827	OUT OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.796	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.767	OUT DEF: ^.size=^.size
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 5471.3 = 5584.5
DL output with Mo: L = 147.2 + 5220.0 = 5367.2
DL input+output M: L = 260.5 + 10691.3 = 10951.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,1)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,4)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta:
   (114.6 bits)
data: a background with size (5,15) and color black and layers
  _00: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,1)
  _001: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,4)
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,9)
  _010: a rectangle with size (1,1) and color blue and mask Full at (4,12)
  _01: a rectangle with size (1,7) and color blue and mask Full at (4,0)
  _011: a rectangle with size (2,8) and color red and mask Full (and Border) at (3,7)
diff: 
delta: (3,9)=0  (3,12)=0 
   (152.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,1)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,4)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,4)
  _01: a rectangle with size (2,2) and color red and mask Full (and Border) at (3,1)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta:
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,3)
  _01: a rectangle with size (2,5) and color red and mask Full (and Border) at (3,1)
  _011: a rectangle with size (1,7) and color blue and mask Full at (4,0)
diff: 
delta: (3,3)=0 
! 26 wrong pixels (generated / expected)

TRAIN d8c310e9.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (1,6) and color green and mask Full at (4,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,6)
diff: 
delta: (4,3)=1  (4,7)=1 
   (164.7 bits)
data: a background with size (5,15) and color black and layers
  _00: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _001: a rectangle with size (3,1) and color red and mask Full at (2,10)
  _0: a rectangle with size (3,1) and color red and mask Full at (2,14)
  _010: a rectangle with size (1,1) and color blue and mask Full at (4,3)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,6)
  _011: a rectangle with size (1,14) and color green and mask Full at (4,0)
diff: 
delta: (4,7)=1  (4,11)=1 
   (155.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (1,6) and color green and mask Full at (4,0)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,6)
diff: 
delta: (4,3)=1  (4,7)=1 
! 22 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,6)
  _011: a rectangle with size (1,6) and color green and mask Full at (4,0)
diff: 
delta: (4,3)=1  (4,7)=1 
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color red and mask Full at (2,6)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,6) and color green and mask Full at (4,0)
diff: 
delta: (4,3)=1  (4,7)=1 
! 21 wrong pixels (generated / expected)

TRAIN d8c310e9.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (2,5)
  _01: a rectangle with size (1,8) and color red and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
   (267.9 bits)
data: a background with size (5,15) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (2,5)
  _001: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (2,11)
  _0: a rectangle with size (2,1) and color green and mask Full at (3,1)
  _010: a rectangle with size (2,10) and color green and mask Full (and Border) at (3,4)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
  _011: a rectangle with size (1,13) and color red and mask Full at (4,2)
diff: 
delta: (3,8)=0  (3,9)=0  (4,8)=2  (4,9)=2 
   (213.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (2,5)
  _01: a rectangle with size (1,8) and color red and mask Full at (4,2)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
  _01: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (2,5)
  _011: a rectangle with size (1,8) and color red and mask Full at (4,2)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (2,5)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (2,0)
  _011: a rectangle with size (1,8) and color red and mask Full at (4,2)
diff: 
delta: (3,1)=3  (3,4)=3  (3,7)=3  (4,1)=3  (4,4)=3  (4,7)=3 
! 24 wrong pixels (generated / expected)

TRAIN d8c310e9.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,1)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
  _011: a rectangle with size (2,10) and color pink and mask Full (and Border) at (3,0)
diff: 
delta: (3,3)=0  (3,7)=0  (3,9)=2  (4,3)=3  (4,7)=3 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,15) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,1)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (2,5)
  _011: a rectangle with size (1,10) and color pink and mask Full at (4,0)
diff: 
delta: (3,0)=6  (3,4)=6  (3,8)=6  (3,9)=2  (4,3)=3  (4,7)=3 
! 26 wrong pixels (generated / expected)

TEST d8c310e9.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.4 sec (25.4 sec/task)
bits-train-error = 5220.0 bits (5220.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-57] Checking task d90796e8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5891.6 = 5907.2
DL output with Mo: L = 15.6 + 4464.5 = 4480.1
DL input+output M: L = 31.2 + 10356.1 = 10387.3

# learning a model for train pairs
2.000	
1.891	OUT DEF: ^.size=^.size
1.838	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.783	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.743	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.639	OUT DEF: ^.layer_0=^.layer_0
1.599	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.538	OUT DEF: ^.layer_01.pos=^.layer_00.pos
1.509	IN  DEF: ^.layer_00.shape.color=green
1.468	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.439	IN  DEF: ^.layer_01.shape.color=red
1.423	OUT DEF: ^.color=black
1.410	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a point with color ? at ^.layer_00.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _00: a point with color green at (?,?)
  _0: a point with color ? at (?,?)
  _01: a point with color red at (?,?)

DL input  with Mi: L = 80.2 + 4702.3 = 4782.5
DL output with Mo: L = 40.1 + 2649.8 = 2689.9
DL input+output M: L = 120.3 + 7352.1 = 7472.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _0: a point with color grey at (2,1)
  _01: a point with color red at (0,1)
diff: 
delta:
   (42.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color grey at (2,1)
  _01: a point with color cyan at (0,0)
diff: 
delta:
   (5.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _0: a point with color grey at (2,1)
  _01: a point with color red at (0,1)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _00: a point with color green at (0,0)
  _0: a point with color red at (0,1)
  _01: a point with color grey at (2,1)
diff:   ^.layer_01.shape.color
delta:
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _00: a point with color grey at (2,1)
  _0: a point with color green at (0,0)
  _01: a point with color red at (0,1)
diff:   ^.layer_00.shape.color
delta:
! 2 wrong pixels (generated / expected)

TRAIN d90796e8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,6) and color black and layers
  _00: a point with color green at (1,2)
  _0: a point with color grey at (0,0)
  _01: a point with color red at (1,3)
diff: 
delta: (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
   (176.6 bits)
data: a background with size (7,6) and color black and layers
  _0: a point with color grey at (0,0)
  _01: a point with color cyan at (1,2)
diff: 
delta: (3,1)=8  (3,5)=2  (5,0)=5# (5,3)=3 
   (104.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,6) and color black and layers
  _00: a point with color green at (1,2)
  _0: a point with color grey at (0,0)
  _01: a point with color red at (1,3)
diff: 
delta: (3,1)=3  (3,5)=2  (4,1)=2  (5,0)=5# (5,3)=3 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,6) and color black and layers
  _00: a point with color green at (1,2)
  _0: a point with color red at (1,3)
  _01: a point with color red at (3,5)
diff: 
delta: (0,0)=5# (3,1)=3  (4,1)=2  (5,0)=5# (5,3)=3 
! 7 wrong pixels (generated / expected)

TRAIN d90796e8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,0)
  _0: a point with color red at (0,5)
  _01: a point with color red at (2,2)
diff: 
delta: (1,6)=3  (2,0)=5# (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
   (251.6 bits)
data: a background with size (7,7) and color black and layers
  _0: a point with color red at (0,5)
  _01: a point with color green at (1,0)
diff: 
delta: (1,6)=3  (2,0)=5# (2,3)=8  (5,0)=8  (5,5)=8  (6,3)=5#
   (154.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,0)
  _0: a point with color red at (0,5)
  _01: a point with color red at (2,2)
diff: 
delta: (1,6)=3  (2,0)=5# (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,7) and color black and layers
  _00: a point with color green at (1,0)
  _0: a point with color green at (1,6)
  _01: a point with color red at (0,5)
diff: 
delta: (2,0)=5# (2,2)=2  (2,3)=3  (4,5)=2  (5,0)=3  (5,1)=2  (5,5)=3  (6,3)=5#
! 7 wrong pixels (generated / expected)

TRAIN d90796e8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _00: a point with color green at (1,6)
  _0: a point with color red at (0,4)
  _01: a point with color red at (1,1)
diff: 
delta: (0,8)=5# (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 11 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (7,9) and color black and layers
  _00: a point with color green at (1,6)
  _0: a point with color grey at (0,8)
  _01: a point with color red at (0,4)
diff: 
delta: (1,1)=2  (1,7)=2  (2,1)=3  (3,4)=5# (3,8)=2  (4,0)=5# (4,3)=2  (5,7)=3  (6,0)=5# (6,1)=3  (6,5)=5# (6,7)=2 
! 11 wrong pixels (generated / expected)

TEST d90796e8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.4 sec (0.4 sec/task)
bits-train-error = 2649.8 bits (2649.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-56] Checking task d9f24cd1.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3294.3 = 3310.0
DL output with Mo: L = 15.6 + 17333.4 = 17349.0
DL input+output M: L = 31.2 + 20627.7 = 20658.9

# learning a model for train pairs
2.000	
1.752	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.504	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.253	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.208	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.163	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.116	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.068	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.016	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.983	IN  DEF: ^.layer_0.shape.color=grey
0.949	IN  DEF: ^.layer_01.shape.color=grey
0.916	IN  DEF: ^.layer_0111.shape.color=red
0.883	IN  DEF: ^.layer_01111.shape.color=red
0.853	OUT OBJECT at ^.layer_00: ^.layer_0
0.823	OUT OBJECT at ^.layer_010: ^.layer_01
0.800	OUT DEF: ^.size=^.size
0.784	IN  DEF: ^.color=black
0.773	OUT DEF: ^.layer_0.shape.size.i=^.size.i
0.762	OUT DEF: ^.layer_01.shape.size.i=^.size.i
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (^.size.i,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (^.size.i,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color grey at (?,?)
  _01: a point with color grey at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color red at (?,?)
  _01111: a point with color red at (?,?)

DL input  with Mi: L = 123.9 + 1909.3 = 2033.1
DL output with Mo: L = 137.5 + 2433.9 = 2571.4
DL input+output M: L = 261.3 + 4343.2 = 4604.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,1)
  _0111: a point with color red at (9,4)
  _01111: a point with color red at (9,6)
diff: 
delta:
   (82.0 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (3,6)
  _0: a rectangle with size (10,2) and color red and mask .x|.x|.x|.x|xx|x.|x.|x.|x.|x. at (0,6)
  _010: a point with color grey at (5,2)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,1)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,4)
diff: 
delta:
   (108.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,6)
  _01: a point with color grey at (5,2)
  _011: a point with color red at (9,1)
  _0111: a point with color red at (9,4)
  _01111: a point with color red at (9,6)
diff: 
delta:
! 41 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,5)
  _01: a point with color grey at (5,1)
  _011: a point with color grey at (6,8)
  _0111: a point with color red at (9,1)
  _01111: a point with color red at (9,4)
diff: 
delta: (9,7)=2 
   (108.9 bits)
data: a background with size (10,10) and color black and layers
  _00: a point with color grey at (3,5)
  _0: a rectangle with size (10,2) and color red and mask .x|.x|.x|.x|.x|.x|xx|x.|x.|x. at (0,1)
  _010: a point with color grey at (5,1)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,4)
  _011: a rectangle with size (10,1) and color red and mask Full at (0,7)
diff: 
delta: (6,8)=5#
   (135.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (3,5)
  _01: a point with color grey at (5,1)
  _011: a point with color grey at (6,8)
  _0111: a point with color red at (9,1)
  _01111: a point with color red at (9,4)
diff: 
delta: (9,7)=2 
! 48 wrong pixels (generated / expected)

TRAIN d9f24cd1.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color grey at (2,7)
  _01: a point with color grey at (4,1)
  _011: a point with color grey at (6,4)
  _0111: a point with color red at (9,1)
  _01111: a point with color red at (9,4)
diff: 
delta: (9,8)=2 
! 48 wrong pixels (generated / expected)

TEST d9f24cd1.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 25.6 sec (25.6 sec/task)
bits-train-error = 2433.9 bits (2433.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-55] Checking task d9fac9be.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 24434.7 = 24450.4
DL output with Mo: L = 15.6 + 624.4 = 640.0
DL input+output M: L = 31.2 + 25059.1 = 25090.4

# learning a model for train pairs
2.000	
1.719	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.353	OUT DEF: ^.size=^.layer_0.shape.size - 2
1.348	IN  DEF: ^.layer_0.shape.mask=Full
1.287	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.274	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.734	OUT DEF: ^.color=^.layer_011.shape.color
0.721	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.708	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.695	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.682	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.676	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.672	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size - 2 and color ^.layer_011.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)

DL input  with Mi: L = 197.1 + 14764.1 = 14961.2
DL output with Mo: L = 38.3 + 0.0 = 38.3
DL input+output M: L = 235.4 + 14764.1 = 14999.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a point with color red at (0,5)
  _0111: a point with color red at (0,8)
  _01111: a point with color red at (2,6)
  _011111: a point with color red at (3,7)
  _0111111: a point with color red at (4,0)
  _01111111: a point with color red at (4,5)
diff: 
delta: (2,2)=2 
   (192.6 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask Full at (1,1)
  _01: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _011: a point with color red at (0,5)
  _0111: a point with color red at (0,8)
  _01111: a point with color red at (2,6)
  _011111: a point with color red at (3,7)
  _0111111: a point with color red at (4,0)
  _01111111: a point with color red at (4,5)
diff: 
delta: (2,2)=2 
correct output grid

TRAIN d9fac9be.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,2)
  _011: a point with color cyan at (0,0)
  _0111: a point with color cyan at (0,2)
  _01111: a point with color cyan at (0,8)
  _011111: a point with color cyan at (1,4)
  _0111111: a point with color cyan at (2,2)
  _01111111: a point with color cyan at (3,0)
diff: 
delta: (3,3)=3  (3,6)=8  (6,0)=3  (6,7)=8 
   (281.6 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,9) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (2,5)
  _01: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,2)
  _011: a point with color cyan at (0,0)
  _0111: a point with color cyan at (0,2)
  _01111: a point with color cyan at (0,8)
  _011111: a point with color cyan at (1,4)
  _0111111: a point with color cyan at (2,2)
  _01111111: a point with color cyan at (3,0)
diff: 
delta: (3,3)=3  (3,6)=8  (6,0)=3  (6,7)=8 
correct output grid

TRAIN d9fac9be.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,1)
  _01: a rectangle with size (4,5) and color red and mask x....|.x...|..x.x|...x. at (0,1)
  _011: a point with color blue at (0,0)
  _0111: a point with color red at (0,5)
  _01111: a point with color red at (2,0)
  _011111: a point with color blue at (2,2)
  _0111111: a point with color blue at (2,7)
  _01111111: a point with color blue at (2,8)
diff: 
delta: (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
   (436.9 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,9) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (6,1)
  _01: a rectangle with size (4,5) and color red and mask x....|.x...|..x.x|...x. at (0,1)
  _011: a point with color blue at (0,0)
  _0111: a point with color red at (0,5)
  _01111: a point with color red at (2,0)
  _011111: a point with color blue at (2,2)
  _0111111: a point with color blue at (2,7)
  _01111111: a point with color blue at (2,8)
diff: 
delta: (3,1)=1  (3,8)=2  (4,6)=1  (7,0)=1  (7,2)=1  (7,7)=2  (8,8)=2  (9,2)=1  (10,3)=2 
correct output grid

TRAIN d9fac9be.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (7,3)
  _01: a rectangle with size (3,4) and color green and mask x...|.xx.|...x at (1,0)
  _011: a point with color cyan at (0,1)
  _0111: a point with color green at (0,10)
  _01111: a point with color cyan at (0,11)
  _011111: a point with color cyan at (1,7)
  _0111111: a point with color green at (1,9)
  _01111111: a point with color cyan at (2,3)
diff: 
delta: (2,11)=8  (3,4)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,2)=3  (8,3)=3  (8,4)=8  (8,5)=3  (10,2)=3 
   (565.4 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,12) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask Full at (7,3)
  _01: a rectangle with size (3,4) and color green and mask x...|.xx.|...x at (1,0)
  _011: a point with color cyan at (0,1)
  _0111: a point with color green at (0,10)
  _01111: a point with color cyan at (0,11)
  _011111: a point with color cyan at (1,7)
  _0111111: a point with color green at (1,9)
  _01111111: a point with color cyan at (2,3)
diff: 
delta: (2,11)=8  (3,4)=8  (4,0)=3  (4,10)=8  (5,3)=3  (5,4)=8  (6,1)=3  (7,8)=8  (7,10)=3  (8,2)=3  (8,3)=3  (8,4)=8  (8,5)=3  (10,2)=3 
correct output grid

TRAIN d9fac9be.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Full at (8,4)
  _01: a rectangle with size (1,2) and color yellow and mask Full at (5,7)
  _011: a point with color blue at (0,9)
  _0111: a point with color blue at (1,0)
  _01111: a point with color yellow at (1,6)
  _011111: a point with color blue at (1,9)
  _0111111: a point with color blue at (3,4)
  _01111111: a point with color yellow at (3,5)
diff: 
delta: (3,8)=4  (4,1)=4  (4,3)=1  (5,5)=1  (5,11)=1  (6,0)=1  (7,3)=1  (7,8)=4  (8,11)=4  (9,0)=4  (9,4)=1  (9,5)=4  (9,6)=1  (9,7)=1  (10,11)=4  (11,2)=4  (11,3)=4  (11,7)=1 
! 1 wrong pixels (generated / expected)

TEST d9fac9be.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.0 sec (2.0 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-54] Checking task dae9d2b5.json: 5 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8789.3 = 8804.9
DL output with Mo: L = 15.6 + 4594.4 = 4610.0
DL input+output M: L = 31.2 + 13383.7 = 13414.9

# learning a model for train pairs
2.000	
1.626	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.403	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.287	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.212	OUT DEF: ^.layer_0.pos=max(^.layer_0.shape.size, ^.layer_01.shape.size) - ^.layer_0.shape.size
1.119	OUT DEF: ^.color=pink
1.049	OUT DEF: ^.size.i=^.size.i
0.979	OUT DEF: ^.size.j=3
0.919	OUT DEF: ^.layer_0.shape.color=black
0.887	IN  DEF: ^.layer_01.shape.color=green
0.863	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
0.819	OUT DEF: ^.layer_0.shape.size.i=max(^.layer_01.pos.j, ^.layer_010.pos.j) - ^.layer_0.shape.size.j
0.805	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,3) and color pink and layers
  _0: a rectangle with size (max(^.layer_01.pos.j, ^.layer_010.pos.j) - ^.layer_0.shape.size.j,?) and color black and mask ? at max(^.layer_0.shape.size, ^.layer_01.shape.size) - ^.layer_0.shape.size
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a rectangle with size (?,?) and color green and mask ? at (?,?)

DL input  with Mi: L = 102.4 + 5103.2 = 5205.6
DL output with Mo: L = 173.0 + 812.9 = 985.9
DL input+output M: L = 275.4 + 5916.1 = 6191.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _010: a point with color green at (2,5)
  _01: a rectangle with size (2,2) and color green and mask xx|x. at (0,3)
diff: 
delta:
   (91.5 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|.xx|xx. at (0,0)
diff: 
delta:
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _010: a point with color green at (2,5)
  _01: a rectangle with size (2,2) and color green and mask xx|x. at (0,3)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _010: a point with color green at (0,4)
  _01: a rectangle with size (2,1) and color green and mask Full at (0,3)
diff: 
delta: (2,5)=3 
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask xx|x. at (0,0)
  _010: a point with color green at (1,3)
  _01: a rectangle with size (1,2) and color green and mask Full at (0,3)
diff: 
delta: (2,5)=3 
! 7 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _010: a point with color yellow at (0,2)
  _01: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,3)
diff: 
delta: (2,2)=4 
   (112.2 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,2) and color black and mask xx|x. at (1,1)
diff: 
delta:
   (14.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _010: a point with color yellow at (0,2)
  _01: a rectangle with size (3,2) and color green and mask xx|x.|x. at (0,3)
diff: 
delta: (2,2)=4 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (0,0)
  _010: a point with color yellow at (0,2)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,3)
diff: 
delta: (0,4)=3  (2,2)=4 
! 3 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _010: a point with color green at (0,4)
  _01: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,3)
diff: 
delta:
   (108.5 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (0,0)
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _010: a point with color green at (0,4)
  _01: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,3)
diff: 
delta:
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.xx|xx. at (0,0)
  _010: a point with color green at (1,5)
  _01: a rectangle with size (3,3) and color green and mask .x.|x.x|..x at (0,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _010: a point with color green at (0,3)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,5)
diff: 
delta: (2,0)=4 
   (99.1 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,3) and color black and mask ..x|xx.|.xx at (0,0)
diff: 
delta:
   (21.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _010: a point with color green at (0,3)
  _01: a rectangle with size (1,1) and color green and mask Full at (1,5)
diff: 
delta: (2,0)=4 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (0,0)
  _010: a point with color yellow at (2,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,3)
diff: 
delta: (1,5)=3 
! 7 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,3)
  _010: a point with color yellow at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,4)
diff: 
delta: (2,2)=4 
   (99.1 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color black and mask x.x|.xx at (0,0)
diff: 
delta:
   (17.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,2) and color green and mask Full at (2,3)
  _010: a point with color yellow at (1,0)
  _01: a rectangle with size (1,1) and color green and mask Full at (0,4)
diff: 
delta: (2,2)=4 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,4)
  _010: a point with color yellow at (1,0)
  _01: a rectangle with size (1,2) and color green and mask Full at (2,3)
diff: 
delta: (2,2)=4 
! 2 wrong pixels (generated / expected)

TRAIN dae9d2b5.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .xx|x..|.x. at (0,0)
  _010: a point with color green at (1,4)
  _01: a rectangle with size (3,1) and color green and mask Full at (0,3)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TEST dae9d2b5.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,6) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask ..x|.x.|x.. at (0,0)
  _010: a point with color green at (0,4)
  _01: a rectangle with size (3,3) and color green and mask .x.|xxx|x.. at (0,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TEST dae9d2b5.json/2: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.5 sec (4.5 sec/task)
bits-train-error = 812.9 bits (812.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-53] Checking task db3e9e38.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2637.3 = 2652.9
DL output with Mo: L = 15.6 + 9607.6 = 9623.2
DL input+output M: L = 31.2 + 12244.9 = 12276.1

# learning a model for train pairs
2.000	
1.396	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.109	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.895	OUT OBJECT at ^.layer_00: ^.layer_0
0.714	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.672	IN  DEF: ^.layer_0.shape.color=orange
0.633	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.596	OUT DEF: ^.size=^.size
0.571	IN  DEF: ^.layer_0.shape.mask=Full
0.552	IN  DEF: ^.color=black
0.538	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i - 1
0.526	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j + 2
0.515	OUT DEF: ^.layer_01.shape.color=^.layer_0.shape.color
0.504	OUT DEF: ^.layer_01.shape.size.i=^.size.i / 2
0.494	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.483	OUT DEF: ^.layer_0.shape.color=cyan
0.471	OUT DEF: ^.layer_011.shape.color=cyan
0.461	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j - 1
0.451	OUT DEF: ^.layer_01.pos.i='0
0.441	OUT DEF: ^.layer_011.pos.i='0
0.432	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j - 2
0.425	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.418	OUT DEF: ^.layer_01.shape.mask=Full
0.412	OUT DEF: ^.layer_011.shape.mask=Full
0.405	OUT DEF: ^.layer_011.shape.size.i=^.layer_0.shape.size.i - 3
0.400	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (^.layer_0.shape.size.i - 1,^.layer_0.shape.size.j + 2) and color cyan and mask ^.layer_0.shape.mask at (^.layer_0.pos.i,^.layer_0.pos.j - 1)
  _01: a rectangle with size (^.size.i / 2,?) and color ^.layer_0.shape.color and mask Full at ('0,^.layer_0.pos.j - 2)
  _011: a rectangle with size (^.layer_0.shape.size.i - 3,?) and color cyan and mask Full at ('0,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color orange and mask Full at (?,?)

DL input  with Mi: L = 50.3 + 773.2 = 823.5
DL output with Mo: L = 210.7 + 647.0 = 857.8
DL input+output M: L = 261.0 + 1420.2 = 1681.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (0,3)
diff: 
delta:
   (37.3 bits)
data: a background with size (5,7) and color black and layers
  _00: a rectangle with size (4,1) and color orange and mask Full at (0,3)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (0,2)
  _01: a rectangle with size (2,5) and color orange and mask Full at (0,1)
  _011: a rectangle with size (1,7) and color cyan and mask Full at (0,0)
diff: 
delta:
   (22.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,7) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (0,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN db3e9e38.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,1) and color orange and mask Full at (0,2)
diff: 
delta:
   (40.0 bits)
data: a background with size (7,8) and color black and layers
  _00: a rectangle with size (5,1) and color orange and mask Full at (0,2)
  _0: a rectangle with size (4,3) and color cyan and mask Full at (0,1)
  _01: a rectangle with size (3,5) and color orange and mask Full at (0,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (0,5)
diff: 
delta: (0,6)=7#
   (42.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,8) and color black and layers
  _0: a rectangle with size (5,1) and color orange and mask Full at (0,2)
diff: 
delta:
! 6 wrong pixels (generated / expected)

TRAIN db3e9e38.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (7,1) and color orange and mask Full at (0,5)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TEST db3e9e38.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 2.5 sec (2.5 sec/task)
bits-train-error = 647.0 bits (647.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-52] Checking task db93a21d.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 40839.4 = 40855.0
DL output with Mo: L = 15.6 + 183357.6 = 183373.2
DL input+output M: L = 31.2 + 224197.0 = 224228.2

# learning a model for train pairs
2.000	
1.433	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.078	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.848	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.667	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.539	OUT OBJECT at ^.layer_00: ^.layer_0
0.459	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.397	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 8247.6 = 8328.8
DL output with Mo: L = 151.8 + 35314.7 = 35466.5
DL input+output M: L = 233.0 + 43562.3 = 43795.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full (and Border) at (7,1)
  _01: a rectangle with size (2,2) and color brown and mask Full (and Border) at (0,6)
diff: 
delta:
   (84.2 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color brown and mask Full (and Border) at (7,1)
  _0: a rectangle with size (7,2) and color blue and mask Full (and Border) at (3,6)
  _01: a rectangle with size (4,4) and color green and mask Full at (6,0)
  _011: a rectangle with size (2,2) and color brown and mask Full (and Border) at (0,6)
  _0111: a rectangle with size (3,4) and color green and mask Full at (0,5)
diff: 
delta:
   (156.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full (and Border) at (0,6)
  _01: a rectangle with size (2,2) and color brown and mask Full (and Border) at (7,1)
diff: 
delta:
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full (and Border) at (7,1)
  _01: a rectangle with size (2,2) and color brown and mask Full (and Border) at (0,6)
diff: 
delta:
! 42 wrong pixels (generated / expected)

TRAIN db93a21d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (2,2) and color brown and mask Full (and Border) at (6,3)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
   (201.8 bits)
data: a background with size (15,15) and color black and layers
  _00: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _0: a rectangle with size (12,13) and color green and mask ....xxxxxxxx.|....xxxxxxxx.|....xx....xx.|....xx....xx.|....xx....xx.|xxxxxx....xx.|x..xxxxxxxxx.|x..xxxxxxxxx.|xxxx......xxx|..........x..|..........x..|..........xxx at (0,2)
  _01: a rectangle with size (7,4) and color blue and mask Full at (8,8)
  _011: a rectangle with size (6,2) and color blue and mask Full (and Border) at (9,3)
  _0111: a rectangle with size (3,2) and color blue and mask Full (and Border) at (12,13)
diff: 
delta: (6,3)=9# (6,4)=9# (7,3)=9# (7,4)=9# (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
   (547.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (2,8)
  _01: a rectangle with size (2,2) and color brown and mask Full (and Border) at (6,3)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full (and Border) at (6,3)
  _01: a rectangle with size (4,4) and color brown and mask Full at (2,8)
diff: 
delta: (9,13)=9# (9,14)=9# (10,13)=9# (10,14)=9#
! size mismatch, 10x10 instead of 15x15

TRAIN db93a21d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (4,4) and color brown and mask Full at (6,15)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
   (214.8 bits)
data: a background with size (20,20) and color black and layers
  _00: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _0: a rectangle with size (16,17) and color green and mask ..........xxxxxxx|..........xxxxxxx|..........xx....x|..........xx....x|..........xx....x|xxxxxxxxxxxx....x|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxx......xxx.....|xxxxxxxxxxxx.....|xxxxxxxxxxxx..... at (4,3)
  _01: a rectangle with size (8,4) and color blue and mask Full at (12,15)
  _011: a rectangle with size (14,2) and color blue and mask Full (and Border) at (6,2)
  _0111: a rectangle with size (4,4) and color brown and mask Full at (6,15)
diff: 
delta: (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (3,1)=3  (3,2)=9# (3,3)=9# (3,4)=3  (4,1)=3  (4,2)=9# (4,3)=9# (4,4)=3  (5,1)=3  (5,2)=3  (5,3)=3  (5,4)=3 
   (901.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (12,6)
  _01: a rectangle with size (4,4) and color brown and mask Full at (6,15)
diff: 
delta: (3,2)=9# (3,3)=9# (4,2)=9# (4,3)=9#
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (4,4) and color brown and mask Full at (8,2)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
   (324.0 bits)
data: a background with size (20,20) and color green and layers
  _00: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _0: a rectangle with size (16,4) and color blue and mask xxxx|xxxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|.xxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx at (4,7)
  _01: a rectangle with size (6,9) and color black and mask ..xxxxxxx|..xxxxxxx|..xxxxxxx|..xxxxxxx|xxxxxxxxx|xxxxxxxxx at (0,11)
  _011: a rectangle with size (6,7) and color black and mask xxxxx..|xxxxx..|xxxxx..|xxxxx..|xxxxxxx|xxxxxxx at (0,0)
  _0111: a rectangle with size (6,4) and color blue and mask Full at (14,2)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9# (8,2)=9# (8,3)=9# (8,4)=9# (8,5)=9# (9,2)=9# (9,3)=9# (9,4)=9# (9,5)=9# (10,2)=9# (10,3)=9# (10,4)=9# (10,5)=9# (11,2)=9# (11,3)=9# (11,4)=9# (11,5)=9# (14,0)=0  (14,1)=0  (14,6)=0  (15,0)=0  (15,1)=0  (15,6)=0  (16,0)=0  (16,1)=0  (16,6)=0  (17,0)=0  (17,1)=0  (17,6)=0  (18,0)=0  (18,1)=0  (18,6)=0  (18,11)=0  (18,12)=0  (18,13)=0  (18,14)=1  (18,15)=1  (18,16)=1  (18,17)=1  (18,18)=1  (18,19)=1  (19,0)=0  (19,1)=0  (19,6)=0  (19,11)=0  (19,12)=0  (19,13)=0  (19,14)=1  (19,15)=1  (19,16)=1  (19,17)=1  (19,18)=1  (19,19)=1 
   (1926.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (9,14)
  _01: a rectangle with size (4,4) and color brown and mask Full at (8,2)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask Full at (8,2)
  _01: a rectangle with size (6,6) and color brown and mask Full at (9,14)
diff: 
delta: (0,7)=9# (0,8)=9# (0,9)=9# (0,10)=9# (1,7)=9# (1,8)=9# (1,9)=9# (1,10)=9#
! size mismatch, 10x10 instead of 20x20

TRAIN db93a21d.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,30) and color black and layers
  _0: a rectangle with size (6,6) and color brown and mask Full at (16,21)
  _01: a rectangle with size (4,4) and color brown and mask Full at (2,16)
diff: 
delta: (7,9)=9# (7,10)=9# (7,11)=9# (7,12)=9# (8,9)=9# (8,10)=9# (8,11)=9# (8,12)=9# (9,9)=9# (9,10)=9# (9,11)=9# (9,12)=9# (10,9)=9# (10,10)=9# (10,11)=9# (10,12)=9# (22,4)=9# (22,5)=9# (23,4)=9# (23,5)=9#
! size mismatch, 10x10 instead of 30x30

TEST db93a21d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.4 sec (27.4 sec/task)
bits-train-error = 35314.7 bits (35314.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-51] Checking task dbc1a6ce.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10400.4 = 10416.0
DL output with Mo: L = 15.6 + 27290.3 = 27305.9
DL input+output M: L = 31.2 + 37690.7 = 37721.9

# learning a model for train pairs
2.000	
1.674	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.550	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.513	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.484	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.447	OUT OBJECT at ^.layer_00: ^.layer_0
1.417	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.386	IN  OBJECT at ^.layer_00: a point with color ? at (?,?)
1.349	OUT OBJECT at ^.layer_010: ^.layer_01
1.319	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.288	IN  OBJECT at ^.layer_010: a point with color ? at (?,?)
1.250	OUT OBJECT at ^.layer_0111: ^.layer_011
1.219	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.186	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: ^.layer_011
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a point with color ? at (?,?)
  _0: a point with color ? at (?,?)
  _010: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 154.1 + 8011.9 = 8166.0
DL output with Mo: L = 133.4 + 10840.3 = 10973.7
DL input+output M: L = 287.5 + 18852.2 = 19139.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _00: a point with color blue at (0,3)
  _0: a point with color blue at (1,8)
  _010: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
  _011: a point with color blue at (8,6)
  _0111: a point with color blue at (6,1)
  _01111: a point with color blue at (9,3)
diff: 
delta:
   (139.5 bits)
data: a background with size (10,9) and color black and layers
  _00: a point with color blue at (1,8)
  _0: a rectangle with size (8,6) and color cyan and mask ..x...|..x...|..x...|.xxxxx|x.x...|..x...|..x...|..x... at (1,1)
  _010: a point with color blue at (4,7)
  _01: a rectangle with size (3,1) and color blue and mask Full at (4,1)
  _011: a rectangle with size (10,1) and color blue and mask Full at (0,3)
  _0111: a point with color blue at (8,6)
diff: 
delta:
   (167.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _00: a point with color blue at (0,3)
  _0: a point with color blue at (1,8)
  _010: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
  _011: a point with color blue at (6,1)
  _0111: a point with color blue at (8,6)
  _01111: a point with color blue at (9,3)
diff: 
delta:
! size mismatch, 10x10 instead of 10x9
>> Trial 2
data: a background with size (10,9) and color black and layers
  _00: a point with color blue at (0,3)
  _0: a point with color blue at (1,8)
  _010: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
  _011: a point with color blue at (8,6)
  _0111: a point with color blue at (6,1)
  _01111: a point with color blue at (9,3)
diff: 
delta:
! size mismatch, 10x10 instead of 10x9

TRAIN dbc1a6ce.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _00: a point with color blue at (0,4)
  _0: a point with color blue at (0,9)
  _010: a point with color blue at (2,4)
  _01: a point with color blue at (2,8)
  _011: a point with color blue at (3,2)
  _0111: a point with color blue at (7,0)
  _01111: a point with color blue at (7,7)
diff: 
delta: (9,6)=1 
   (169.2 bits)
data: a background with size (10,11) and color black and layers
  _00: a point with color blue at (0,9)
  _0: a rectangle with size (3,5) and color cyan and mask .xxxx|x....|.xxx. at (0,4)
  _010: a point with color blue at (2,8)
  _01: a rectangle with size (1,6) and color cyan and mask Full at (7,1)
  _011: a rectangle with size (3,1) and color blue and mask Full at (0,4)
  _0111: a point with color blue at (3,2)
diff: 
delta: (7,0)=1  (7,7)=1  (9,6)=1 
   (217.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _00: a point with color blue at (0,4)
  _0: a point with color blue at (0,9)
  _010: a point with color blue at (2,4)
  _01: a point with color blue at (2,8)
  _011: a point with color blue at (3,2)
  _0111: a point with color blue at (7,0)
  _01111: a point with color blue at (7,7)
diff: 
delta: (9,6)=1 
! size mismatch, 10x10 instead of 10x11

TRAIN dbc1a6ce.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _00: a point with color blue at (0,6)
  _0: a point with color blue at (0,11)
  _010: a point with color blue at (2,10)
  _01: a point with color blue at (4,5)
  _011: a point with color blue at (5,1)
  _0111: a point with color blue at (5,9)
  _01111: a point with color blue at (6,6)
diff: 
delta: (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
   (303.8 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color blue at (0,11)
  _0: a rectangle with size (7,9) and color cyan and mask .....xxxx|....x....|....x....|....x...x|....x...x|xxxxxxx.x|.....xxx. at (0,2)
  _010: a point with color blue at (4,5)
  _01: a rectangle with size (3,5) and color cyan and mask .xxx.|x...x|.xxx. at (9,4)
  _011: a rectangle with size (3,1) and color blue and mask Full at (9,4)
  _0111: a point with color blue at (5,1)
diff: 
delta: (0,6)=1  (2,10)=1  (5,9)=1  (6,6)=1  (6,10)=1  (7,2)=1  (9,8)=1  (11,8)=1 
   (418.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _00: a point with color blue at (0,6)
  _0: a point with color blue at (0,11)
  _010: a point with color blue at (2,10)
  _01: a point with color blue at (4,5)
  _011: a point with color blue at (5,1)
  _0111: a point with color blue at (5,9)
  _01111: a point with color blue at (6,6)
diff: 
delta: (6,10)=1  (7,2)=1  (9,4)=1  (9,8)=1  (11,4)=1  (11,8)=1 
! size mismatch, 10x10 instead of 12x12

TRAIN dbc1a6ce.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (8,9) and color black and layers
  _00: a point with color blue at (0,1)
  _0: a point with color blue at (0,4)
  _010: a point with color blue at (2,4)
  _01: a point with color blue at (2,6)
  _011: a point with color blue at (3,0)
  _0111: a point with color blue at (4,5)
  _01111: a point with color blue at (5,2)
diff: 
delta: (5,7)=1  (7,0)=1 
   (188.7 bits)
data: a background with size (8,9) and color black and layers
  _00: a point with color blue at (0,4)
  _0: a rectangle with size (1,4) and color cyan and mask Full at (5,3)
  _010: a point with color blue at (2,6)
  _01: a rectangle with size (3,4) and color cyan and mask xx..|..x.|...x at (0,2)
  _011: a rectangle with size (3,1) and color cyan and mask Full at (4,0)
  _0111: a point with color blue at (3,0)
diff: 
delta: (0,1)=1  (2,4)=1  (4,5)=1  (5,2)=1  (5,7)=1  (7,0)=1 
   (281.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,9) and color black and layers
  _00: a point with color blue at (0,1)
  _0: a point with color blue at (0,4)
  _010: a point with color blue at (2,4)
  _01: a point with color blue at (2,6)
  _011: a point with color blue at (3,0)
  _0111: a point with color blue at (4,5)
  _01111: a point with color blue at (5,2)
diff: 
delta: (5,7)=1  (7,0)=1 
! size mismatch, 10x10 instead of 8x9

TRAIN dbc1a6ce.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
  _00: a point with color blue at (0,7)
  _0: a point with color blue at (0,10)
  _010: a point with color blue at (0,14)
  _01: a point with color blue at (1,2)
  _011: a point with color blue at (2,10)
  _0111: a point with color blue at (3,19)
  _01111: a point with color blue at (4,9)
diff: 
delta: (5,1)=1  (6,6)=1  (7,1)=1  (8,10)=1  (9,11)=1  (10,13)=1  (12,9)=1  (14,6)=1  (14,14)=1  (16,1)=1  (18,1)=1  (18,3)=1 
! size mismatch, 10x10 instead of 19x21

TEST dbc1a6ce.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.2 sec (26.2 sec/task)
bits-train-error = 10840.3 bits (10840.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-50] Checking task dc0a314f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 140802.8 = 140818.4
DL output with Mo: L = 15.6 + 10828.9 = 10844.5
DL input+output M: L = 31.2 + 151631.8 = 151663.0

# learning a model for train pairs
2.000	
1.640	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.441	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.354	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.310	OUT DEF: ^.size=^.layer_0.shape.size
1.286	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.210	OUT DEF: ^.layer_01.pos.j='0
1.188	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.i
1.160	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.147	OUT DEF: ^.layer_0.pos.i='0
1.135	OUT DEF: ^.layer_011.pos.j=2
1.111	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.099	OUT DEF: ^.layer_0.shape.size.j=min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)
1.088	OUT DEF: ^.layer_0.pos.j=^.layer_01.pos.j / 2
1.077	OUT DEF: ^.layer_011.pos.i=middle(^.layer_0) / 3
1.068	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.059	OUT DEF: ^.layer_01.shape.mask=Full
1.049	OUT DEF: ^.layer_011.shape.size.j=1
1.040	OUT DEF: ^.layer_011.shape.mask=Full
1.031	OUT DEF: ^.layer_011.shape.size.i=middle(^.layer_0) / 3
1.024	OUT DEF: ^.layer_0111.pos.i=max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_01.shape.size.i
1.023	IN  DEF: ^.layer_0.shape.color=green
1.022	IN  DEF: ^.layer_0.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ? and layers
  _0: a rectangle with size (^.layer_0.shape.size.i,min(^.layer_0.shape.size.j, ^.layer_01.shape.size.j)) and color ? and mask ? at ('0,^.layer_01.pos.j / 2)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,'0)
  _011: a rectangle with size (middle(^.layer_0) / 3,1) and color ? and mask Full at (middle(^.layer_0) / 3,2)
  _0111: a point with color ? at (max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i) - ^.layer_01.shape.size.i,?)
  _01111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color green and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 83.5 + 100923.4 = 101006.9
DL output with Mo: L = 316.1 + 2988.7 = 3304.8
DL input+output M: L = 399.7 + 103912.1 = 104311.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (5,9)
  _01: a rectangle with size (6,2) and color cyan and mask Full (and Border) at (5,7)
diff: 
delta: (0,0)=2  (0,1)=1  (0,2)=2  (0,3)=2  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,12)=2  (0,13)=2  (0,14)=1  (0,15)=2  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,7)=2  (1,8)=2  (1,10)=6  (1,12)=1  (1,13)=6  (1,14)=6  (1,15)=1  (2,0)=2  (2,1)=6  (2,2)=1  (2,3)=6  (2,7)=2  (2,8)=2  (2,12)=6  (2,13)=1  (2,14)=6  (2,15)=2  (3,0)=2  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=1  (3,15)=2  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,12)=6  (4,15)=6  (5,1)=6  (5,3)=2  (5,4)=8  (5,5)=8  (5,14)=6  (6,3)=2  (7,0)=6  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=7# (7,5)=8  (7,6)=8  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=7# (8,5)=8  (8,6)=8  (8,14)=2  (8,15)=6  (9,3)=2  (10,1)=6  (10,3)=2  (10,4)=8  (10,5)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,14)=6  (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,12)=6  (11,15)=6  (12,0)=2  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=1  (12,15)=2  (13,0)=2  (13,1)=6  (13,2)=1  (13,3)=6  (13,7)=2  (13,8)=2  (13,12)=6  (13,13)=1  (13,14)=6  (13,15)=2  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,7)=2  (14,8)=2  (14,10)=6  (14,12)=1  (14,13)=6  (14,14)=6  (14,15)=1  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=2  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,12)=2  (15,13)=2  (15,14)=1  (15,15)=2 
   (4021.8 bits)
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,2) and color red and mask x.|x.|xx|xx|x. at (0,3)
  _01: a rectangle with size (2,2) and color cyan and mask Full at (2,0)
  _011: a rectangle with size (2,1) and color orange and mask Full at (2,2)
  _0111: a point with color cyan at (0,1)
  _01111: a point with color cyan at (0,2)
diff: 
delta:
   (81.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (5,9)
  _01: a rectangle with size (6,4) and color cyan and mask ..xx|..xx|xxxx|xxxx|..xx|..xx at (5,5)
diff: 
delta: (0,0)=2  (0,1)=1  (0,2)=2  (0,3)=2  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,12)=2  (0,13)=2  (0,14)=1  (0,15)=2  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,7)=2  (1,8)=2  (1,10)=6  (1,12)=1  (1,13)=6  (1,14)=6  (1,15)=1  (2,0)=2  (2,1)=6  (2,2)=1  (2,3)=6  (2,7)=2  (2,8)=2  (2,12)=6  (2,13)=1  (2,14)=6  (2,15)=2  (3,0)=2  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=1  (3,15)=2  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,12)=6  (4,15)=6  (5,1)=6  (5,3)=2  (5,4)=8  (5,5)=8  (5,14)=6  (6,3)=2  (7,0)=6  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=7# (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=7# (8,14)=2  (8,15)=6  (9,3)=2  (10,1)=6  (10,3)=2  (10,4)=8  (10,5)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,14)=6  (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,12)=6  (11,15)=6  (12,0)=2  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=1  (12,15)=2  (13,0)=2  (13,1)=6  (13,2)=1  (13,3)=6  (13,7)=2  (13,8)=2  (13,12)=6  (13,13)=1  (13,14)=6  (13,15)=2  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,7)=2  (14,8)=2  (14,10)=6  (14,12)=1  (14,13)=6  (14,14)=6  (14,15)=1  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=2  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,12)=2  (15,13)=2  (15,14)=1  (15,15)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (5,9)
  _01: a rectangle with size (6,2) and color cyan and mask Full (and Border) at (5,7)
diff: 
delta: (0,0)=2  (0,1)=1  (0,2)=2  (0,3)=2  (0,4)=6  (0,7)=6  (0,8)=6  (0,11)=6  (0,12)=2  (0,13)=2  (0,14)=1  (0,15)=2  (1,0)=1  (1,1)=6  (1,2)=6  (1,3)=1  (1,5)=6  (1,7)=2  (1,8)=2  (1,10)=6  (1,12)=1  (1,13)=6  (1,14)=6  (1,15)=1  (2,0)=2  (2,1)=6  (2,2)=1  (2,3)=6  (2,7)=2  (2,8)=2  (2,12)=6  (2,13)=1  (2,14)=6  (2,15)=2  (3,0)=2  (3,1)=1  (3,2)=6  (3,3)=6  (3,4)=6  (3,5)=2  (3,6)=2  (3,7)=2  (3,8)=2  (3,9)=2  (3,10)=2  (3,11)=6  (3,12)=6  (3,13)=6  (3,14)=1  (3,15)=2  (4,0)=6  (4,3)=6  (4,5)=8  (4,7)=7# (4,8)=7# (4,10)=8  (4,12)=6  (4,15)=6  (5,1)=6  (5,3)=2  (5,4)=8  (5,5)=8  (5,14)=6  (6,3)=2  (7,0)=6  (7,1)=2  (7,2)=2  (7,3)=2  (7,4)=7# (7,5)=8  (7,6)=8  (7,14)=2  (7,15)=6  (8,0)=6  (8,1)=2  (8,2)=2  (8,3)=2  (8,4)=7# (8,5)=8  (8,6)=8  (8,14)=2  (8,15)=6  (9,3)=2  (10,1)=6  (10,3)=2  (10,4)=8  (10,5)=8  (10,10)=8  (10,11)=8  (10,12)=2  (10,14)=6  (11,0)=6  (11,3)=6  (11,5)=8  (11,7)=7# (11,8)=7# (11,10)=8  (11,12)=6  (11,15)=6  (12,0)=2  (12,1)=1  (12,2)=6  (12,3)=6  (12,4)=6  (12,5)=2  (12,6)=2  (12,7)=2  (12,8)=2  (12,9)=2  (12,10)=2  (12,11)=6  (12,12)=6  (12,13)=6  (12,14)=1  (12,15)=2  (13,0)=2  (13,1)=6  (13,2)=1  (13,3)=6  (13,7)=2  (13,8)=2  (13,12)=6  (13,13)=1  (13,14)=6  (13,15)=2  (14,0)=1  (14,1)=6  (14,2)=6  (14,3)=1  (14,5)=6  (14,7)=2  (14,8)=2  (14,10)=6  (14,12)=1  (14,13)=6  (14,14)=6  (14,15)=1  (15,0)=2  (15,1)=1  (15,2)=2  (15,3)=2  (15,4)=6  (15,7)=6  (15,8)=6  (15,11)=6  (15,12)=2  (15,13)=2  (15,14)=1  (15,15)=2 
! 25 wrong pixels (generated / expected)

TRAIN dc0a314f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,16) and color orange and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,3)
  _01: a rectangle with size (16,16) and color red and mask ........xx......|........x.......|.........x.xx...|..x.......xx.x..|..x........xxx..|...x.x....x.x...|x.x...x..x...x.x|xx.....xx.....xx|xx.....xx.....xx|x.x...x..x...x.x|...x.x....x.x...|..xxx......xxx..|..x.xx....xx.x..|...xx.x..x.xx...|.......xx.......|......xxxx...... at (0,0)
diff: 
delta: (0,0)=8  (0,1)=9# (0,2)=9# (0,12)=8  (0,13)=9# (0,14)=9# (0,15)=8  (1,0)=9# (1,1)=8  (1,2)=9# (1,10)=1  (1,12)=9# (1,13)=9# (1,14)=8  (1,15)=9# (2,0)=9# (2,1)=9# (2,2)=8  (2,13)=8  (2,14)=9# (2,15)=9# (3,0)=8  (3,1)=9# (3,8)=1  (3,12)=9# (3,14)=9# (3,15)=8  (4,9)=8  (5,1)=1  (5,14)=1  (6,4)=8  (6,7)=8  (6,8)=8  (6,11)=8  (7,3)=1  (7,6)=8  (7,9)=8  (7,12)=1  (8,3)=1  (8,6)=8  (8,9)=8  (8,12)=1  (9,4)=8  (9,7)=8  (9,8)=8  (9,11)=8  (10,1)=1  (10,14)=1  (11,6)=8  (11,9)=8  (12,0)=8  (12,1)=9# (12,3)=9# (12,7)=1  (12,8)=1  (12,12)=9# (12,14)=9# (12,15)=8  (13,0)=9# (13,1)=9# (13,2)=8  (13,13)=8  (13,14)=9# (13,15)=9# (14,0)=9# (14,1)=8  (14,2)=9# (14,3)=9# (14,5)=1  (14,10)=1  (14,12)=9# (14,13)=9# (14,14)=8  (14,15)=9# (15,0)=8  (15,1)=9# (15,2)=9# (15,3)=8  (15,12)=8  (15,13)=9# (15,14)=9# (15,15)=8 
   (2491.7 bits)
data: a background with size (5,5) and color orange and layers
  _0: a rectangle with size (5,5) and color red and mask ...xx|....x|xx.x.|.xx..|xx... at (0,0)
  _01: a rectangle with size (3,1) and color brown and mask Full at (1,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (1,2)
  _0111: a point with color cyan at (0,0)
  _01111: a point with color blue at (3,4)
diff: 
delta: (4,3)=8 
   (121.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color orange and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,3)
  _01: a rectangle with size (16,16) and color red and mask ........xx......|........x.......|.........x.xx...|..x.......xx.x..|..x........xxx..|...x.x....x.x...|x.x...x..x...x.x|xx.....xx.....xx|xx.....xx.....xx|x.x...x..x...x.x|...x.x....x.x...|..xxx......xxx..|..x.xx....xx.x..|...xx.x..x.xx...|.......xx.......|......xxxx...... at (0,0)
diff: 
delta: (0,0)=8  (0,1)=9# (0,2)=9# (0,12)=8  (0,13)=9# (0,14)=9# (0,15)=8  (1,0)=9# (1,1)=8  (1,2)=9# (1,10)=1  (1,12)=9# (1,13)=9# (1,14)=8  (1,15)=9# (2,0)=9# (2,1)=9# (2,2)=8  (2,13)=8  (2,14)=9# (2,15)=9# (3,0)=8  (3,1)=9# (3,8)=1  (3,12)=9# (3,14)=9# (3,15)=8  (4,9)=8  (5,1)=1  (5,14)=1  (6,4)=8  (6,7)=8  (6,8)=8  (6,11)=8  (7,3)=1  (7,6)=8  (7,9)=8  (7,12)=1  (8,3)=1  (8,6)=8  (8,9)=8  (8,12)=1  (9,4)=8  (9,7)=8  (9,8)=8  (9,11)=8  (10,1)=1  (10,14)=1  (11,6)=8  (11,9)=8  (12,0)=8  (12,1)=9# (12,3)=9# (12,7)=1  (12,8)=1  (12,12)=9# (12,14)=9# (12,15)=8  (13,0)=9# (13,1)=9# (13,2)=8  (13,13)=8  (13,14)=9# (13,15)=9# (14,0)=9# (14,1)=8  (14,2)=9# (14,3)=9# (14,5)=1  (14,10)=1  (14,12)=9# (14,13)=9# (14,14)=8  (14,15)=9# (15,0)=8  (15,1)=9# (15,2)=9# (15,3)=8  (15,12)=8  (15,13)=9# (15,14)=9# (15,15)=8 
! 25 wrong pixels (generated / expected)

TRAIN dc0a314f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
  _01: a rectangle with size (3,14) and color yellow and mask Full at (1,1)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,4)=9# (1,5)=5# (1,6)=2  (1,14)=5# (1,15)=2  (2,0)=5# (2,2)=5# (2,4)=9# (2,5)=2  (2,6)=5# (2,13)=5# (2,15)=5# (3,0)=2  (3,4)=5# (3,5)=9# (3,6)=5# (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,1)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,2)=5# (6,3)=5# (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,2)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,2)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,2)=5# (9,3)=5# (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,1)=5# (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,6)=5# (12,7)=2  (12,8)=2  (12,9)=5# (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,6)=5# (13,7)=5# (13,8)=5# (13,9)=5# (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,5)=5# (14,6)=2  (14,9)=2  (14,10)=5# (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
   (3578.8 bits)
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color brown and mask ..xxx|xx..x|....x|...x.|xxx.x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (3,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,2)
  _0111: a point with color red at (2,3)
  _01111: a point with color pink at (4,3)
diff: 
delta:
   (96.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
  _01: a rectangle with size (3,14) and color yellow and mask Full at (1,1)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,4)=9# (1,5)=5# (1,6)=2  (1,14)=5# (1,15)=2  (2,0)=5# (2,2)=5# (2,4)=9# (2,5)=2  (2,6)=5# (2,13)=5# (2,15)=5# (3,0)=2  (3,4)=5# (3,5)=9# (3,6)=5# (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,1)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,2)=5# (6,3)=5# (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,2)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,2)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,2)=5# (9,3)=5# (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,1)=5# (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,6)=5# (12,7)=2  (12,8)=2  (12,9)=5# (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,6)=5# (13,7)=5# (13,8)=5# (13,9)=5# (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,5)=5# (14,6)=2  (14,9)=2  (14,10)=5# (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
  _01: a rectangle with size (3,6) and color grey and mask .x..x.|.xxxx.|x....x at (12,5)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,2)=4  (1,3)=4  (1,5)=5# (1,6)=2  (1,12)=4  (1,13)=4  (1,14)=5# (1,15)=2  (2,0)=5# (2,1)=4  (2,2)=5# (2,3)=4  (2,5)=2  (2,6)=5# (2,12)=4  (2,13)=5# (2,14)=4  (2,15)=5# (3,0)=2  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=5# (3,6)=5# (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,1)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,2)=5# (6,3)=5# (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,2)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,2)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,2)=5# (9,3)=5# (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,1)=5# (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,7)=2  (12,8)=2  (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,6)=2  (14,9)=2  (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,16) and color brown and layers
  _0: a rectangle with size (5,5) and color green and mask Full at (0,7)
  _01: a rectangle with size (6,3) and color grey and mask x..|.xx|.x.|.x.|.xx|x.. at (5,1)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=5# (0,3)=2  (0,12)=2  (0,13)=5# (0,14)=2  (0,15)=2  (1,0)=2  (1,1)=5# (1,2)=4  (1,3)=4  (1,5)=5# (1,6)=2  (1,12)=4  (1,13)=4  (1,14)=5# (1,15)=2  (2,0)=5# (2,1)=4  (2,2)=5# (2,3)=4  (2,5)=2  (2,6)=5# (2,12)=4  (2,13)=5# (2,14)=4  (2,15)=5# (3,0)=2  (3,1)=4  (3,2)=4  (3,3)=4  (3,4)=5# (3,6)=5# (3,12)=4  (3,13)=4  (3,14)=4  (3,15)=2  (4,3)=5# (4,5)=6  (4,12)=5# (5,2)=2  (5,4)=6  (5,5)=6  (5,10)=6  (5,11)=6  (5,13)=2  (5,14)=5# (6,1)=2  (6,6)=7# (6,9)=7# (6,12)=5# (6,13)=5# (6,14)=2  (7,0)=5# (7,3)=2  (7,7)=6  (7,8)=6  (7,12)=2  (7,13)=5# (7,15)=5# (8,0)=5# (8,3)=2  (8,7)=6  (8,8)=6  (8,12)=2  (8,13)=5# (8,15)=5# (9,1)=2  (9,6)=7# (9,9)=7# (9,12)=5# (9,13)=5# (9,14)=2  (10,2)=2  (10,4)=6  (10,5)=6  (10,10)=6  (10,11)=6  (10,13)=2  (10,14)=5# (11,3)=5# (11,5)=6  (11,10)=6  (11,12)=5# (12,0)=2  (12,1)=4  (12,2)=4  (12,3)=4  (12,4)=5# (12,6)=5# (12,7)=2  (12,8)=2  (12,9)=5# (12,11)=5# (12,12)=4  (12,13)=4  (12,14)=4  (12,15)=2  (13,0)=5# (13,1)=4  (13,2)=5# (13,3)=4  (13,5)=2  (13,6)=5# (13,7)=5# (13,8)=5# (13,9)=5# (13,10)=2  (13,12)=4  (13,13)=5# (13,14)=4  (13,15)=5# (14,0)=2  (14,1)=5# (14,2)=4  (14,3)=4  (14,5)=5# (14,6)=2  (14,9)=2  (14,10)=5# (14,12)=4  (14,13)=4  (14,14)=5# (14,15)=2  (15,0)=2  (15,1)=2  (15,2)=5# (15,3)=2  (15,7)=5# (15,8)=5# (15,12)=2  (15,13)=5# (15,14)=2  (15,15)=2 
! 25 wrong pixels (generated / expected)

TRAIN dc0a314f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: ScaleDown: not an integer

TEST dc0a314f.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 24.9 sec (24.9 sec/task)
bits-train-error = 2988.7 bits (2988.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-49] Checking task dc1df850.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2561.6 = 2577.2
DL output with Mo: L = 15.6 + 9672.4 = 9688.0
DL input+output M: L = 31.2 + 12234.0 = 12265.2

# learning a model for train pairs
2.000	
1.461	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.363	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.289	OUT OBJECT at ^.layer_00: ^.layer_0
1.224	IN  DEF: ^.layer_0.shape.color=red
1.172	OUT DEF: ^.size=^.size
1.143	IN  DEF: ^.color=black
1.123	OUT DEF: ^.layer_0.shape.size.i=3
1.106	OUT DEF: ^.layer_0.shape.color=blue
1.092	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j / 2
1.079	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.069	OUT DEF: ^.layer_01.shape.mask=Full
1.061	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: ^.layer_0
  _0: a rectangle with size (3,?) and color blue and mask ? at (?,^.layer_0.pos.j / 2)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color red at (?,?)

DL input  with Mi: L = 38.0 + 2044.9 = 2082.9
DL output with Mo: L = 96.1 + 2353.9 = 2449.9
DL input+output M: L = 134.0 + 4398.7 = 4532.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (1,3)=2  (3,1)=6 
   (74.2 bits)
data: a background with size (5,5) and color black and layers
  _00: a point with color red at (0,0)
  _0: a rectangle with size (3,5) and color blue and mask .xxxx|xxx.x|..xxx at (0,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (1,3)
diff: 
delta: (3,1)=6 
   (78.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (1,3)=2  (3,1)=6 
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color black and layers
  _0: a point with color red at (1,3)
diff: 
delta: (0,0)=2  (3,1)=6 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color black and layers
  _0: a point with color pink at (3,1)
diff:   ^.layer_0.shape.color
delta: (0,0)=2  (1,3)=2 
! 12 wrong pixels (generated / expected)

TRAIN dc1df850.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a point with color red at (6,2)
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8 
   (106.0 bits)
data: a background with size (8,8) and color black and layers
  _00: a point with color red at (6,2)
  _0: a rectangle with size (3,3) and color blue and mask Full at (5,1)
  _01: a rectangle with size (2,2) and color blue and mask Full at (0,6)
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8 
   (118.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a point with color red at (0,7)
diff: 
delta: (2,3)=3  (4,6)=8  (6,2)=2 
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a point with color red at (6,2)
diff: 
delta: (0,7)=2  (2,3)=3  (4,6)=8 
! 22 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a point with color green at (2,3)
diff:   ^.layer_0.shape.color
delta: (0,7)=2  (4,6)=8  (6,2)=2 
! 22 wrong pixels (generated / expected)

TRAIN dc1df850.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
   (24.3 bits)
data: a background with size (4,5) and color black and layers
  _00: a point with color red at (1,1)
  _0: a rectangle with size (3,1) and color blue and mask Full at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask Full at (0,0)
diff: 
delta:
   (38.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,5) and color black and layers
  _0: a point with color red at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN dc1df850.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (1,2)
diff: 
delta: (0,8)=7# (3,7)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (3,7)
diff: 
delta: (0,8)=7# (1,2)=2  (5,1)=7# (7,5)=2  (9,9)=5#
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color red at (7,5)
diff: 
delta: (0,8)=7# (1,2)=2  (3,7)=2  (5,1)=7# (9,9)=5#
! 26 wrong pixels (generated / expected)

TEST dc1df850.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.0 sec (1.0 sec/task)
bits-train-error = 2353.9 bits (2353.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-48] Checking task dc433765.json: 7 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4777.2 = 4792.8
DL output with Mo: L = 15.6 + 4777.2 = 4792.8
DL input+output M: L = 31.2 + 9554.5 = 9585.7

# learning a model for train pairs
2.000	
1.760	OUT DEF: ^.size=^.size
1.630	OUT OBJECT at ^.layer_0: a point with color ? at (?,?)
1.489	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.360	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.135	OUT DEF: ^.layer_0=^.layer_0
0.994	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.860	OUT DEF: ^.layer_01.pos=^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
0.777	OUT DEF: ^.layer_01.shape=^.layer_01.shape
0.695	IN  DEF: ^.layer_0.shape.color=yellow
0.613	IN  DEF: ^.layer_01.shape.color=green
0.577	IN  DEF: ^.color=black
0.541	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01.shape at ^.layer_0.pos - translationOnto(^.layer_01, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color yellow at (?,?)
  _01: a point with color green at (?,?)

DL input  with Mi: L = 60.4 + 2477.9 = 2538.4
DL output with Mo: L = 54.5 + 0.0 = 54.5
DL input+output M: L = 114.9 + 2477.9 = 2592.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,2)
  _01: a point with color green at (0,0)
diff: 
delta:
   (28.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,2)
  _01: a point with color green at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,2)
  _01: a point with color green at (0,0)
diff: 
delta:
correct output grid

TRAIN dc433765.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color green at (1,0)
diff: 
delta:
   (31.6 bits)
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color green at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,3) and color black and layers
  _0: a point with color yellow at (1,2)
  _01: a point with color green at (1,0)
diff: 
delta:
correct output grid

TRAIN dc433765.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a point with color yellow at (2,4)
  _01: a point with color green at (2,1)
diff: 
delta:
   (34.5 bits)
data: a background with size (5,5) and color black and layers
  _0: a point with color yellow at (2,4)
  _01: a point with color green at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a point with color yellow at (2,4)
  _01: a point with color green at (2,1)
diff: 
delta:
correct output grid

TRAIN dc433765.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a point with color yellow at (4,4)
  _01: a point with color green at (1,1)
diff: 
delta:
   (38.4 bits)
data: a background with size (7,7) and color black and layers
  _0: a point with color yellow at (4,4)
  _01: a point with color green at (2,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a point with color yellow at (4,4)
  _01: a point with color green at (1,1)
diff: 
delta:
correct output grid

TRAIN dc433765.json/4: 1 1st (SUCCESS)

## instance 5

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,2)
  _01: a point with color green at (7,2)
diff: 
delta:
   (42.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,2)
  _01: a point with color green at (6,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color yellow at (2,2)
  _01: a point with color green at (7,2)
diff: 
delta:
correct output grid

TRAIN dc433765.json/5: 1 1st (SUCCESS)

## instance 6

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a point with color yellow at (8,3)
  _01: a point with color green at (2,3)
diff: 
delta:
   (43.6 bits)
data: a background with size (11,11) and color black and layers
  _0: a point with color yellow at (8,3)
  _01: a point with color green at (3,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a point with color yellow at (8,3)
  _01: a point with color green at (2,3)
diff: 
delta:
correct output grid

TRAIN dc433765.json/6: 1 1st (SUCCESS)

## instance 7

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,0)
  _01: a point with color green at (0,2)
diff: 
delta:
   (28.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,0)
  _01: a point with color green at (1,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (2,0)
  _01: a point with color green at (0,2)
diff: 
delta:
correct output grid

TRAIN dc433765.json/7: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a point with color yellow at (8,3)
  _01: a point with color green at (2,3)
diff: 
delta:
correct output grid

TEST dc433765.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color yellow at (0,0)
  _01: a point with color green at (2,2)
diff: 
delta:
correct output grid

TEST dc433765.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-47] Checking task ddf7fa4f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 26123.0 = 26138.6
DL output with Mo: L = 15.6 + 26123.0 = 26138.6
DL input+output M: L = 31.2 + 52246.1 = 52277.3

# learning a model for train pairs
2.000	
1.605	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.254	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.024	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.795	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.611	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.471	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.448	OUT DEF: ^.size=^.size
0.431	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.416	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.402	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.389	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.375	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.362	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.353	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.343	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.332	OUT OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.323	IN  OBJECT at ^.layer_0110: a point with color ? at (?,?)
0.303	OUT DEF: ^.layer_0111=^.layer_0110
0.294	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.274	OUT DEF: ^.layer_01111=^.layer_0111
0.263	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.243	OUT DEF: ^.layer_011111=^.layer_01111
0.237	IN  DEF: ^.layer_0.shape.color=grey
0.230	IN  DEF: ^.layer_01.shape.color=grey
0.224	IN  DEF: ^.layer_011.shape.color=grey
0.218	OUT DEF: ^.layer_011.shape.color=^.layer_0111.shape.color
0.214	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.210	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.206	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.203	IN  DEF: ^.layer_0.shape.mask=Full
0.199	IN  DEF: ^.layer_01.shape.mask=Full
0.195	IN  DEF: ^.layer_011.shape.mask=Full
0.192	IN  DEF: ^.color=black
0.189	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ? and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color ? and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color ^.layer_0111.shape.color and mask ^.layer_011.shape.mask at ^.layer_011.pos
  _0111: ^.layer_0110
  _01111: ^.layer_0111
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0110: a point with color ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 177.8 + 4324.0 = 4501.7
DL output with Mo: L = 108.5 + 338.6 = 447.1
DL input+output M: L = 286.2 + 4662.6 = 4948.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _0110: a point with color red at (0,2)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color cyan at (0,9)
  _01111: a point with color pink at (0,5)
diff: 
delta:
   (145.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color red and mask Full at (4,1)
  _011: a rectangle with size (3,3) and color cyan and mask Full at (7,7)
  _0111: a point with color red at (0,2)
  _01111: a point with color cyan at (0,9)
  _011111: a point with color pink at (0,5)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _0110: a point with color red at (0,2)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color pink at (0,5)
  _01111: a point with color cyan at (0,9)
diff: 
delta:
! 35 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _0110: a point with color red at (0,2)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color cyan at (0,9)
  _01111: a point with color pink at (0,5)
diff: 
delta:
! 26 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,4)
  _01: a rectangle with size (5,2) and color grey and mask Full at (4,1)
  _0110: a point with color pink at (0,5)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,7)
  _0111: a point with color red at (0,2)
  _01111: a point with color cyan at (0,9)
diff: 
delta:
! 35 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color yellow at (0,5)
  _01111: a point with color orange at (0,8)
diff: 
delta:
   (145.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color orange and mask Full at (2,7)
  _011: a rectangle with size (2,4) and color yellow and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color yellow at (0,5)
  _011111: a point with color orange at (0,8)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color yellow at (0,5)
  _01111: a point with color orange at (0,8)
diff: 
delta:
! 28 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color orange at (0,8)
  _01111: a point with color yellow at (0,5)
diff: 
delta:
! 36 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color grey and mask Full at (2,0)
  _01: a rectangle with size (4,3) and color grey and mask Full at (2,7)
  _0110: a point with color yellow at (0,5)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,3)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
diff: 
delta:
! 36 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _0110: a point with color pink at (0,5)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
diff: 
delta:
   (141.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color pink and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color orange and mask Full at (3,7)
  _011: a rectangle with size (3,2) and color blue and mask Full at (2,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color blue at (0,1)
  _011111: a point with color orange at (0,8)
diff: 
delta:
   (11.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color pink at (0,5)
  _01111: a point with color orange at (0,8)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _0110: a point with color blue at (0,1)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color orange at (0,8)
  _01111: a point with color pink at (0,5)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (5,3)
  _01: a rectangle with size (2,3) and color grey and mask Full at (3,7)
  _0110: a point with color pink at (0,5)
  _011: a rectangle with size (3,2) and color grey and mask Full at (2,1)
  _0111: a point with color blue at (0,1)
  _01111: a point with color orange at (0,8)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN ddf7fa4f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (2,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (2,8)
  _0110: a point with color green at (0,0)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,0)
  _0111: a point with color pink at (0,4)
  _01111: a point with color brown at (0,8)
diff: 
delta:
! 42 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (2,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (2,8)
  _0110: a point with color green at (0,0)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,0)
  _0111: a point with color brown at (0,8)
  _01111: a point with color pink at (0,4)
diff: 
delta:
! 42 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,5) and color grey and mask Full at (2,2)
  _01: a rectangle with size (7,2) and color grey and mask Full at (2,8)
  _0110: a point with color pink at (0,4)
  _011: a rectangle with size (2,4) and color grey and mask Full at (7,0)
  _0111: a point with color green at (0,0)
  _01111: a point with color brown at (0,8)
diff: 
delta:
! 34 wrong pixels (generated / expected)

TEST ddf7fa4f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 20.2 sec (20.2 sec/task)
bits-train-error = 338.6 bits (338.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-46] Checking task de1cd16c.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 176914.7 = 176930.3
DL output with Mo: L = 15.6 + 624.4 = 640.0
DL input+output M: L = 31.2 + 177539.1 = 177570.3

# learning a model for train pairs
2.000	
1.556	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.194	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.986	OUT DEF: ^.size.i=1
0.779	OUT DEF: ^.size.j=1
0.654	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.427	OUT DEF: ^.color=^.layer_01.shape.color
0.425	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.424	IN  DEF: ^.layer_0.shape.mask=Full
0.424	IN  DEF: ^.layer_011.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (1,1) and color ^.layer_01.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 132.8 + 11665.1 = 11797.9
DL output with Mo: L = 25.9 + 202.5 = 228.5
DL input+output M: L = 158.8 + 11867.6 = 12026.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,13) and color cyan and layers
  _0: a rectangle with size (7,8) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (10,5) and color blue and mask Full at (7,8)
  _011: a rectangle with size (7,5) and color black and mask Full at (0,8)
  _0111: a point with color pink at (10,5)
diff: 
delta: (2,3)=6  (2,10)=6  (4,5)=6  (11,11)=6  (12,2)=6  (15,5)=6 
   (321.8 bits)
data: a background with size (1,1) and color blue and layers
diff: 
delta: (0,0)=8 
   (20.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,13) and color cyan and layers
  _0: a rectangle with size (7,8) and color yellow and mask Full at (0,0)
  _01: a rectangle with size (10,5) and color blue and mask Full at (7,8)
  _011: a rectangle with size (7,5) and color black and mask Full at (0,8)
  _0111: a point with color pink at (10,5)
diff: 
delta: (2,3)=6  (2,10)=6  (4,5)=6  (11,11)=6  (12,2)=6  (15,5)=6 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,13) and color cyan and layers
  _0: a rectangle with size (10,5) and color blue and mask Full at (7,8)
  _01: a rectangle with size (7,8) and color yellow and mask Full at (0,0)
  _011: a rectangle with size (7,5) and color black and mask Full at (0,8)
  _0111: a point with color pink at (10,5)
diff: 
delta: (2,3)=6  (2,10)=6  (4,5)=6  (11,11)=6  (12,2)=6  (15,5)=6 
! 1 wrong pixels (generated / expected)

TRAIN de1cd16c.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (16,15) and color cyan and layers
  _0: a rectangle with size (9,7) and color green and mask Full at (0,0)
  _01: a rectangle with size (9,8) and color red and mask Full at (0,7)
  _011: a rectangle with size (1,1) and color blue and mask Full at (12,11)
  _0111: a point with color blue at (13,6)
diff: 
delta: (1,10)=1  (1,13)=1  (3,9)=1  (4,2)=1  (6,11)=1 
   (287.7 bits)
data: a background with size (1,1) and color red and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,15) and color cyan and layers
  _0: a rectangle with size (9,8) and color red and mask Full at (0,7)
  _01: a rectangle with size (9,7) and color green and mask Full at (0,0)
  _011: a rectangle with size (1,1) and color blue and mask Full at (12,11)
  _0111: a point with color blue at (13,6)
diff: 
delta: (1,10)=1  (1,13)=1  (3,9)=1  (4,2)=1  (6,11)=1 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,15) and color cyan and layers
  _0: a rectangle with size (9,7) and color green and mask Full at (0,0)
  _01: a rectangle with size (9,8) and color red and mask Full at (0,7)
  _011: a rectangle with size (1,1) and color blue and mask Full at (12,11)
  _0111: a point with color blue at (13,6)
diff: 
delta: (1,10)=1  (1,13)=1  (3,9)=1  (4,2)=1  (6,11)=1 
correct output grid

TRAIN de1cd16c.json/2: 1 2nd (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (16,17) and color grey and layers
  _0: a rectangle with size (8,7) and color black and mask Full at (8,0)
  _01: a rectangle with size (8,10) and color pink and mask Full at (8,7)
  _011: a rectangle with size (8,7) and color blue and mask Full at (0,0)
  _0111: a point with color yellow at (5,11)
diff: 
delta: (1,1)=4  (3,3)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
   (354.8 bits)
data: a background with size (1,1) and color pink and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,17) and color grey and layers
  _0: a rectangle with size (8,10) and color pink and mask Full at (8,7)
  _01: a rectangle with size (8,7) and color black and mask Full at (8,0)
  _011: a rectangle with size (8,7) and color blue and mask Full at (0,0)
  _0111: a point with color yellow at (5,11)
diff: 
delta: (1,1)=4  (3,3)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (16,17) and color grey and layers
  _0: a rectangle with size (8,10) and color pink and mask Full at (8,7)
  _01: a rectangle with size (8,7) and color blue and mask Full at (0,0)
  _011: a rectangle with size (8,7) and color black and mask Full at (8,0)
  _0111: a point with color yellow at (5,11)
diff: 
delta: (1,1)=4  (3,3)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (16,17) and color grey and layers
  _0: a rectangle with size (8,7) and color black and mask Full at (8,0)
  _01: a rectangle with size (8,10) and color pink and mask Full at (8,7)
  _011: a rectangle with size (8,7) and color blue and mask Full at (0,0)
  _0111: a point with color yellow at (5,11)
diff: 
delta: (1,1)=4  (3,3)=4  (6,2)=4  (9,12)=4  (11,10)=4  (11,15)=4  (14,13)=4 
correct output grid

TRAIN de1cd16c.json/3: 1 3rd (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (16,19) and color blue and layers
  _0: a rectangle with size (9,12) and color cyan and mask Full at (0,7)
  _01: a rectangle with size (7,12) and color yellow and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xx.xxxxxxxxx|xxxxx.xxxxxx|xxxxxxxxxxxx at (9,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (13,9)
  _0111: a point with color red at (14,12)
diff: 
delta: (4,11)=2 
   (202.2 bits)
data: a background with size (1,1) and color yellow and layers
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,19) and color blue and layers
  _0: a rectangle with size (9,12) and color cyan and mask Full at (0,7)
  _01: a rectangle with size (7,12) and color yellow and mask xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xxxxxxxxxxxx|xx.xxxxxxxxx|xxxxx.xxxxxx|xxxxxxxxxxxx at (9,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (13,9)
  _0111: a point with color red at (14,12)
diff: 
delta: (4,11)=2 
correct output grid

TRAIN de1cd16c.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,19) and color cyan and layers
  _0: a rectangle with size (4,19) and color green and mask Full at (0,0)
  _01: a rectangle with size (8,9) and color red and mask Full at (4,0)
  _011: a rectangle with size (6,9) and color blue and mask Full at (12,0)
  _0111: a point with color yellow at (9,14)
diff: 
delta: (1,7)=4  (5,1)=4  (5,7)=4  (7,4)=4  (8,2)=4  (9,6)=4  (11,12)=4  (14,14)=4  (15,4)=4  (16,1)=4 
correct output grid

TEST de1cd16c.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.3 sec (2.3 sec/task)
bits-train-error = 202.5 bits (202.5 bits/task)
acc-train-micro = 0.75 tasks (75.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.46
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-45] Checking task ded97339.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4560.6 = 4576.2
DL output with Mo: L = 15.6 + 11863.1 = 11878.7
DL input+output M: L = 31.2 + 16423.7 = 16454.9

# learning a model for train pairs
2.000	
1.411	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.321	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.270	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.218	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.164	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.107	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.057	OUT DEF: ^.size=^.size
1.020	IN  DEF: ^.layer_0.shape.color=cyan
0.984	IN  DEF: ^.layer_01.shape.color=cyan
0.947	IN  DEF: ^.layer_011.shape.color=cyan
0.911	IN  DEF: ^.layer_0111.shape.color=cyan
0.892	OUT DEF: ^.layer_0.shape.size.i=span(^.layer_0.pos.i, ^.layer_0111.pos.i)
0.875	IN  DEF: ^.color=black
0.860	OUT DEF: ^.layer_01.shape.size.j=^.layer_011.pos.j
0.846	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.832	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.821	OUT DEF: ^.layer_0.pos.i=min(^.layer_01.pos.i, ^.layer_011.pos.i)
0.812	OUT DEF: ^.layer_01.shape.size.i=1
0.804	OUT DEF: ^.layer_01.shape.mask=Full
0.798	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (span(^.layer_0.pos.i, ^.layer_0111.pos.i),?) and color ^.layer_0.shape.color and mask ? at (min(^.layer_01.pos.i, ^.layer_011.pos.i),?)
  _01: a rectangle with size (1,^.layer_011.pos.j) and color ^.layer_01.shape.color and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color cyan at (?,?)
  _011: a point with color cyan at (?,?)
  _0111: a point with color cyan at (?,?)

DL input  with Mi: L = 104.4 + 2751.1 = 2855.5
DL output with Mo: L = 169.0 + 1893.0 = 2061.9
DL input+output M: L = 273.4 + 4644.0 = 4917.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (7,4)
  _011: a point with color cyan at (3,6)
  _0111: a point with color cyan at (9,6)
diff: 
delta:
   (65.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color cyan and mask Full at (3,6)
  _01: a rectangle with size (1,6) and color cyan and mask Full at (3,1)
diff: 
delta: (7,4)=8 
   (50.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (3,6)
  _011: a point with color cyan at (7,4)
  _0111: a point with color cyan at (9,6)
diff: 
delta:
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (3,6)
  _011: a point with color cyan at (9,6)
  _0111: a point with color cyan at (7,4)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (3,1)
  _01: a point with color cyan at (7,4)
  _011: a point with color cyan at (3,6)
  _0111: a point with color cyan at (9,6)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TRAIN ded97339.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (3,2)
  _011: a point with color cyan at (6,5)
  _0111: a point with color cyan at (6,9)
diff: 
delta: (8,2)=8 
   (92.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color cyan and mask Full at (3,2)
  _01: a rectangle with size (1,5) and color cyan and mask Full at (6,5)
diff: 
delta: (1,7)=8 
   (50.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (3,2)
  _011: a point with color cyan at (6,5)
  _0111: a point with color cyan at (6,9)
diff: 
delta: (8,2)=8 
! 29 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (3,2)
  _011: a point with color cyan at (6,5)
  _0111: a point with color cyan at (8,2)
diff: 
delta: (6,9)=8 
! 31 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,7)
  _01: a point with color cyan at (3,2)
  _011: a point with color cyan at (6,9)
  _0111: a point with color cyan at (6,5)
diff: 
delta: (8,2)=8 
! 33 wrong pixels (generated / expected)

TRAIN ded97339.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (4,1)
  _0111: a point with color cyan at (7,5)
diff: 
delta: (7,9)=8  (9,2)=8 
   (118.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,9) and color cyan and mask xxxxx....|x...x....|x...x....|x...x....|....x....|....x....|....xxxxx at (1,1)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (9,2)
diff: 
delta:
   (88.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (4,1)
  _0111: a point with color cyan at (7,5)
diff: 
delta: (7,9)=8  (9,2)=8 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (1,5)
  _011: a point with color cyan at (7,5)
  _0111: a point with color cyan at (4,1)
diff: 
delta: (7,9)=8  (9,2)=8 
! 24 wrong pixels (generated / expected)

TRAIN ded97339.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (2,3)
  _011: a point with color cyan at (3,7)
  _0111: a point with color cyan at (5,1)
diff: 
delta: (8,4)=8  (8,7)=8 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (2,3)
  _011: a point with color cyan at (3,7)
  _0111: a point with color cyan at (8,4)
diff: 
delta: (5,1)=8  (8,7)=8 
! 30 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a point with color cyan at (1,1)
  _01: a point with color cyan at (2,3)
  _011: a point with color cyan at (5,1)
  _0111: a point with color cyan at (3,7)
diff: 
delta: (8,4)=8  (8,7)=8 
! 16 wrong pixels (generated / expected)

TEST ded97339.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 8.3 sec (8.3 sec/task)
bits-train-error = 1893.0 bits (1893.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-44] Checking task e179c5f4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1317.2 = 1332.8
DL output with Mo: L = 15.6 + 7898.0 = 7913.6
DL input+output M: L = 31.2 + 9215.2 = 9246.4

# learning a model for train pairs
2.000	
1.325	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.116	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
0.991	IN  DEF: ^.layer_0.shape.color=blue
0.928	OUT DEF: ^.size=^.size
0.866	OUT DEF: ^.layer_0.shape.size=^.size
0.810	IN  DEF: ^.color=black
0.774	OUT DEF: ^.layer_0.pos='(0,0)
0.740	OUT DEF: ^.color=cyan
0.719	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color cyan and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)

DL input  with Mi: L = 38.0 + 775.2 = 813.2
DL output with Mo: L = 45.4 + 815.5 = 860.9
DL input+output M: L = 83.4 + 1590.7 = 1674.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (24.3 bits)
data: a background with size (10,2) and color cyan and layers
  _0: a rectangle with size (10,2) and color blue and mask Odd Checkboard at (0,0)
diff: 
delta:
   (7.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,2) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 10 wrong pixels (generated / expected)

TRAIN e179c5f4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (26.0 bits)
data: a background with size (10,3) and color cyan and layers
  _0: a rectangle with size (10,3) and color blue and mask .x.|x..|.x.|..x|.x.|x..|.x.|..x|.x.|x.. at (0,0)
diff: 
delta:
   (34.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,3) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)

TRAIN e179c5f4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
   (27.3 bits)
data: a background with size (10,4) and color cyan and layers
  _0: a rectangle with size (10,4) and color blue and mask ...x|..x.|.x..|x...|.x..|..x.|...x|..x.|.x..|x... at (0,0)
diff: 
delta:
   (39.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 30 wrong pixels (generated / expected)

TRAIN e179c5f4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,5) and color black and layers
  _0: a point with color blue at (9,0)
diff: 
delta:
! 40 wrong pixels (generated / expected)

TEST e179c5f4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 815.5 bits (815.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-43] Checking task e21d9049.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3671.5 = 3687.2
DL output with Mo: L = 15.6 + 13501.3 = 13517.0
DL input+output M: L = 31.2 + 17172.9 = 17204.1

# learning a model for train pairs
2.000	
1.921	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.845	OUT OBJECT at ^.layer_0: ^.layer_0
1.803	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.761	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.715	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.677	OUT OBJECT at ^.layer_01: ^.layer_01
1.597	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.516	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.479	OUT OBJECT at ^.layer_010: ^.layer_01.shape at (?,?)
1.447	OUT DEF: ^.size=^.size
1.417	IN  DEF: ^.layer_011.shape.color=red
1.397	OUT OBJECT at ^.layer_0110: ^.layer_011
1.378	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at (?,?)
1.359	OUT OBJECT at ^.layer_01110: ^.layer_0111
1.336	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.317	OUT OBJECT at ^.layer_01101: ^.layer_011.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: ^.layer_0
  _010: ^.layer_01.shape at (?,?)
  _01: ^.layer_01
  _0110: ^.layer_011
  _01101: ^.layer_011.shape at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_0111
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: ^.layer_0111.shape at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color red at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 110.6 + 2694.5 = 2805.1
DL output with Mo: L = 193.1 + 7331.0 = 7524.0
DL input+output M: L = 303.7 + 10025.5 = 10329.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (3,1)
  _01: a point with color cyan at (2,2)
  _011: a point with color red at (4,2)
  _0111: a point with color cyan at (4,0)
diff: 
delta:
   (105.2 bits)
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (3,1)
  _010: a point with color cyan at (4,6)
  _01: a point with color cyan at (2,2)
  _0110: a point with color red at (4,2)
  _01101: a point with color red at (1,2)
  _011: a rectangle with size (1,7) and color green and mask Full at (4,4)
  _01110: a point with color cyan at (4,0)
  _0111: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (4,2)
  _01111: a point with color cyan at (8,2)
  _011111: a rectangle with size (10,1) and color green and mask Full at (0,2)
diff: 
delta: (4,5)=2  (4,8)=2  (4,9)=8  (7,2)=2  (10,2)=2  (11,2)=8 
   (297.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,11) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (3,1)
  _01: a point with color cyan at (2,2)
  _011: a point with color red at (4,2)
  _0111: a point with color cyan at (4,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN e21d9049.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a point with color yellow at (4,8)
  _011: a point with color red at (7,8)
  _0111: a point with color red at (6,7)
diff: 
delta: (6,8)=3  (6,10)=4 
   (164.3 bits)
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _010: a point with color yellow at (6,2)
  _01: a point with color yellow at (4,8)
  _0110: a point with color red at (7,8)
  _01101: a point with color red at (3,8)
  _011: a rectangle with size (13,1) and color green and mask Full at (2,8)
  _01110: a point with color red at (6,7)
  _0111: a rectangle with size (1,5) and color yellow and mask Full at (6,6)
  _01111: a point with color red at (6,3)
  _011111: a rectangle with size (1,13) and color green and mask Full at (6,0)
diff: 
delta: (0,8)=4  (1,8)=8  (6,1)=8  (6,5)=8  (6,11)=2  (6,13)=8  (8,8)=4  (9,8)=8  (11,8)=2  (12,8)=4  (13,8)=8 
   (435.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a point with color yellow at (4,8)
  _011: a point with color red at (6,7)
  _0111: a point with color green at (6,8)
diff: 
delta: (6,10)=4  (7,8)=2 
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a point with color yellow at (4,8)
  _011: a point with color red at (6,7)
  _0111: a point with color yellow at (6,10)
diff: 
delta: (6,8)=3  (7,8)=2 
! 27 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color black and layers
  _0: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (5,8)
  _01: a point with color yellow at (4,8)
  _011: a point with color red at (7,8)
  _0111: a point with color red at (6,7)
diff: 
delta: (6,8)=3  (6,10)=4 
! 27 wrong pixels (generated / expected)

TRAIN e21d9049.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
  _01: a point with color green at (6,7)
  _011: a point with color red at (6,6)
  _0111: a point with color blue at (6,8)
diff: 
delta: (7,6)=3  (8,6)=1 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (6,6)
  _01: a point with color yellow at (5,6)
  _011: a point with color red at (6,6)
  _0111: a point with color yellow at (6,5)
diff: 
delta: (6,8)=1  (8,6)=1 
! 38 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (20,20) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (5,5)
  _01: a point with color green at (6,7)
  _011: a point with color red at (6,6)
  _0111: a point with color green at (7,6)
diff: 
delta: (6,8)=1  (8,6)=1 
! 38 wrong pixels (generated / expected)

TEST e21d9049.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 7331.0 bits (7331.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-42] Checking task e26a3af2.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 111085.6 = 111101.2
DL output with Mo: L = 15.6 + 101484.1 = 101499.7
DL input+output M: L = 31.2 + 212569.7 = 212601.0

# learning a model for train pairs
2.000	
1.536	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.187	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.853	OUT OBJECT at ^.layer_01: ^.layer_0
0.595	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.433	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.300	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.293	OUT DEF: ^.size=^.size
0.291	OUT DEF: ^.layer_011.shape.size.i=max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i)
0.289	IN  OBJECT at ^.layer_001: a point with color ? at (?,?)
0.287	IN  OBJECT at ^.layer_000: a point with color ? at (?,?)
0.283	OUT DEF: ^.layer_0.pos='(0,0)
0.281	OUT DEF: ^.layer_0.shape.size.j=^.layer_00.shape.size.j
0.279	OUT DEF: ^.layer_011.shape.color=cyan
0.277	OUT DEF: ^.layer_0.shape.color=^.layer_00.shape.color
0.276	OUT DEF: ^.layer_011.pos.i=min(^.layer_0.pos.i, ^.layer_01.pos.i)
0.275	OUT DEF: ^.layer_0.shape.mask=Full
0.274	OUT DEF: ^.layer_011.shape.mask=Full
0.273	IN  DEF: ^.layer_0.shape.mask=Full
0.268	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.262	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.258	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.255	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.253	OUT DEF: ^.layer_0.shape.size.i=max(^.layer_0.shape.size.i, ^.layer_011111.shape.size.i)
0.251	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.250	IN  DEF: ^.layer_011.shape.mask=Full
0.249	IN  DEF: ^.layer_01111.shape.mask=Full
0.248	IN  DEF: ^.layer_011111.shape.mask=Full
0.248	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.248	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (max(^.layer_0.shape.size.i, ^.layer_011111.shape.size.i),^.layer_00.shape.size.j) and color ^.layer_00.shape.color and mask ^.layer_0.shape.mask at '(0,0)
  _01: ^.layer_0
  _011: a rectangle with size (max(^.layer_0.shape.size.i, ^.layer_01.shape.size.i),?) and color cyan and mask ^.layer_011.shape.mask at (min(^.layer_0.pos.i, ^.layer_01.pos.i),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _000: a point with color ? at (?,?)
  _00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _001: a point with color ? at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111111: a point with color ? at (?,?)

DL input  with Mi: L = 297.9 + 26321.6 = 26619.5
DL output with Mo: L = 199.0 + 649.8 = 848.8
DL input+output M: L = 496.9 + 26971.4 = 27468.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,17) and color red and layers
  _000: a point with color cyan at (0,15)
  _00: a rectangle with size (13,5) and color blue and mask xxxxx|..x.x|.xx.x|xxxxx|.xxx.|.x.xx|xxxx.|xxxxx|xxx.x|.xx.x|xxxxx|xxxxx|x.x.x at (0,0)
  _001: a point with color brown at (1,0)
  _0: a rectangle with size (13,4) and color green and mask Full at (0,8)
  _01: a rectangle with size (13,4) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (1,13) and color pink and mask Full at (9,0)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (5,14)
  _011111: a rectangle with size (4,1) and color yellow and mask Full at (2,0)
  _0111111: a point with color cyan at (2,13)
diff: 
delta: (2,7)=5# (2,10)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,5)=7# (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,3)=8  (9,5)=5# (9,8)=4  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
   (1061.2 bits)
data: a background with size (13,17) and color red and layers
  _0: a rectangle with size (13,5) and color blue and mask Full at (0,0)
  _01: a rectangle with size (13,4) and color green and mask Full at (0,8)
  _011: a rectangle with size (13,3) and color cyan and mask Full at (0,5)
diff: 
delta:
   (21.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,17) and color red and layers
  _000: a point with color cyan at (0,15)
  _00: a rectangle with size (13,5) and color blue and mask xxxxx|..x.x|.xx.x|xxxxx|.xxx.|.x.xx|xxxx.|xxxxx|xxx.x|.xx.x|xxxxx|xxxxx|x.x.x at (0,0)
  _001: a point with color brown at (1,0)
  _0: a rectangle with size (13,4) and color green and mask Full at (0,8)
  _01: a rectangle with size (13,4) and color cyan and mask Full at (0,4)
  _011: a rectangle with size (1,3) and color grey and mask Full at (1,1)
  _0111: a rectangle with size (1,13) and color pink and mask Full at (9,0)
  _01111: a rectangle with size (2,1) and color pink and mask Full at (5,14)
  _011111: a rectangle with size (4,1) and color yellow and mask Full at (2,0)
  _0111111: a point with color cyan at (2,13)
diff: 
delta: (2,7)=5# (2,10)=8  (2,16)=7# (3,7)=2  (4,0)=9# (4,10)=4  (4,12)=8  (5,5)=7# (5,16)=9# (6,4)=9# (6,8)=9# (6,12)=4  (7,6)=5# (7,11)=4  (7,16)=3  (8,3)=9# (9,3)=8  (9,5)=5# (9,8)=4  (9,13)=4  (9,16)=7# (10,14)=6  (11,10)=7# (12,3)=4  (12,13)=9# (12,15)=1 
! 104 wrong pixels (generated / expected)

TRAIN e26a3af2.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,14) and color cyan and layers
  _000: a point with color blue at (0,7)
  _00: a rectangle with size (13,5) and color red and mask xxxxx|xx.xx|xxxxx|xxxxx|xxxxx|xxxxx|xxx.x|x..xx|xxxxx|xxx.x|xxxx.|xxxxx|x.xxx at (0,0)
  _001: a point with color pink at (3,8)
  _0: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _01: a rectangle with size (2,1) and color grey and mask Full at (5,10)
  _011: a rectangle with size (2,1) and color grey and mask Full at (9,8)
  _0111: a rectangle with size (2,2) and color brown and mask Odd Checkboard at (2,6)
  _01111: a rectangle with size (4,1) and color pink and mask Full at (6,3)
  _011111: a rectangle with size (1,1) and color pink and mask Full at (7,1)
  _0111111: a point with color yellow at (7,2)
diff: 
delta: (6,13)=6  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,11)=8  (11,13)=3  (12,9)=3  (12,11)=9#
   (682.6 bits)
data: a background with size (13,14) and color black and layers
  _0: a rectangle with size (13,5) and color red and mask Full at (0,0)
  _01: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _011: a rectangle with size (13,6) and color cyan and mask Full at (0,5)
diff: 
delta:
   (17.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,14) and color cyan and layers
  _000: a point with color blue at (0,7)
  _00: a rectangle with size (13,5) and color red and mask xxxxx|xx.xx|xxxxx|xxxxx|xxxxx|xxxxx|xxx.x|x..xx|xxxxx|xxx.x|xxxx.|xxxxx|x.xxx at (0,0)
  _001: a point with color pink at (3,8)
  _0: a rectangle with size (13,3) and color blue and mask Full at (0,11)
  _01: a rectangle with size (2,1) and color grey and mask Full at (5,10)
  _011: a rectangle with size (2,1) and color grey and mask Full at (9,8)
  _0111: a rectangle with size (2,2) and color brown and mask Odd Checkboard at (2,6)
  _01111: a rectangle with size (4,1) and color pink and mask Full at (6,3)
  _011111: a rectangle with size (1,1) and color pink and mask Full at (7,1)
  _0111111: a point with color yellow at (7,2)
diff: 
delta: (6,13)=6  (7,5)=9# (8,5)=6  (8,7)=7# (8,13)=2  (9,6)=3  (9,11)=3  (10,4)=5# (10,6)=2  (11,11)=8  (11,13)=3  (12,9)=3  (12,11)=9#
! 78 wrong pixels (generated / expected)

TRAIN e26a3af2.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,14) and color orange and layers
  _000: a point with color yellow at (0,1)
  _00: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _001: a point with color red at (1,8)
  _0: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _01: a rectangle with size (3,14) and color cyan and mask xxxxxxxxxxxx.x|xxxxxxxxxxx.xx|xxx.xxx..xxxxx at (10,0)
  _011: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _0111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,12)
  _01111: a rectangle with size (3,1) and color red and mask Full at (1,5)
  _011111: a rectangle with size (4,1) and color yellow and mask Full at (9,3)
  _0111111: a point with color yellow at (3,2)
diff: 
delta: (2,7)=2  (4,6)=8  (4,13)=4  (5,0)=9# (5,4)=3  (6,13)=2  (7,5)=5# (7,12)=5# (8,6)=3  (8,11)=2  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
   (888.4 bits)
data: a background with size (15,14) and color orange and layers
  _0: a rectangle with size (4,14) and color green and mask Full at (0,0)
  _01: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _011: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
diff: 
delta:
   (26.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,14) and color orange and layers
  _000: a point with color yellow at (0,1)
  _00: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _001: a point with color red at (1,8)
  _0: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _01: a rectangle with size (3,14) and color cyan and mask xxxxxxxxxxxx.x|xxxxxxxxxxx.xx|xxx.xxx..xxxxx at (10,0)
  _011: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _0111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,12)
  _01111: a rectangle with size (3,1) and color red and mask Full at (1,5)
  _011111: a rectangle with size (4,1) and color yellow and mask Full at (9,3)
  _0111111: a point with color yellow at (3,2)
diff: 
delta: (2,7)=2  (4,6)=8  (4,13)=4  (5,0)=9# (5,4)=3  (6,13)=2  (7,5)=5# (7,12)=5# (8,6)=3  (8,11)=2  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 120 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,14) and color orange and layers
  _000: a point with color yellow at (0,1)
  _00: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _001: a point with color red at (1,5)
  _0: a rectangle with size (2,14) and color blue and mask Full at (13,0)
  _01: a rectangle with size (3,14) and color cyan and mask xxxxxxxxxxxx.x|xxxxxxxxxxx.xx|xxx.xxx..xxxxx at (10,0)
  _011: a rectangle with size (2,2) and color red and mask Full at (1,7)
  _0111: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _01111: a rectangle with size (4,1) and color yellow and mask Full at (9,3)
  _011111: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
  _0111111: a point with color red at (3,5)
diff: 
delta: (4,6)=8  (4,13)=4  (5,0)=9# (5,4)=3  (6,12)=8  (6,13)=2  (7,5)=5# (7,12)=5# (7,13)=8  (8,6)=3  (8,11)=2  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 148 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (15,14) and color orange and layers
  _000: a point with color yellow at (0,1)
  _00: a rectangle with size (5,14) and color green and mask x.xxxxxxxxxxxx|xxxxx.xx.xxxxx|xxx.xxx.xxx.xx|xx.xx.xxxxxxxx|.........xx... at (0,0)
  _001: a point with color red at (1,8)
  _0: a rectangle with size (3,14) and color cyan and mask Full at (10,0)
  _01: a rectangle with size (2,14) and color blue and mask Full (and Border) at (13,0)
  _011: a rectangle with size (1,9) and color brown and mask Full at (2,3)
  _0111: a rectangle with size (2,2) and color cyan and mask Even Checkboard at (6,12)
  _01111: a rectangle with size (3,1) and color red and mask Full at (1,5)
  _011111: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
  _0111111: a point with color cyan at (4,6)
diff: 
delta: (2,7)=2  (4,13)=4  (5,0)=9# (5,4)=3  (6,13)=2  (7,5)=5# (7,12)=5# (8,6)=3  (8,11)=2  (9,3)=4  (9,4)=6  (9,10)=9# (10,12)=9# (11,11)=3  (12,3)=4  (12,7)=7# (12,8)=9# (13,3)=5# (13,10)=9# (14,10)=9#
! 126 wrong pixels (generated / expected)

TRAIN e26a3af2.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color cyan and layers
  _000: a point with color pink at (0,0)
  _00: a rectangle with size (4,15) and color red and mask .xxxx.x.xx.x.xx|xx.x.xxx.xx.x.x|x.xx...xxx.x.xx|xxxxxxxxxx.x.xx at (3,0)
  _001: a point with color blue at (0,1)
  _0: a rectangle with size (3,15) and color blue and mask Full at (0,0)
  _01: a rectangle with size (2,15) and color yellow and mask xxxxxx..xxxxx.x|xx.xxxxxxx.xxxx at (11,0)
  _011: a rectangle with size (2,15) and color green and mask Full at (13,0)
  _0111: a rectangle with size (1,2) and color pink and mask Full at (5,5)
  _01111: a rectangle with size (1,12) and color grey and mask Full at (5,1)
  _011111: a rectangle with size (1,3) and color yellow and mask Full at (3,10)
  _0111111: a point with color orange at (3,0)
diff: 
delta: (0,3)=5# (1,1)=4  (1,4)=9# (1,9)=5# (2,0)=5# (2,4)=4  (3,5)=6  (3,7)=9# (4,2)=9# (4,4)=1  (4,8)=3  (4,13)=7# (5,10)=3  (6,10)=6  (7,0)=1  (7,6)=9# (8,4)=1  (8,10)=7# (8,14)=9# (9,10)=4  (10,8)=5# (10,12)=1  (11,6)=7# (11,7)=3  (11,13)=2  (12,2)=7# (13,2)=1  (13,3)=9# (14,0)=8  (14,1)=6  (14,4)=8 
! 225 wrong pixels (generated / expected)

TEST e26a3af2.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 15.7 sec (15.7 sec/task)
bits-train-error = 649.8 bits (649.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-41] Checking task e3497940.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18508.9 = 18524.5
DL output with Mo: L = 15.6 + 9300.9 = 9316.5
DL input+output M: L = 31.2 + 27809.7 = 27840.9

# learning a model for train pairs
2.000	
1.551	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.203	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.074	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.997	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.938	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.897	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.864	OUT DEF: ^.size.i=^.size.i
0.836	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.802	OUT OBJECT at ^.layer_011: ^.layer_0111.shape at (?,?)
0.779	OUT DEF: ^.size.j=^.layer_0.pos.j
0.763	OUT DEF: ^.layer_01.shape.color=^.layer_0111.shape.color
0.747	OUT DEF: ^.layer_0.pos.i=middle(^.layer_0111)
0.731	OUT DEF: ^.layer_01.pos.i=area(^.layer_01.shape) - 3
0.716	OUT DEF: ^.layer_0.shape.size.j=area(^.layer_01.shape) - 2
0.703	OUT DEF: ^.layer_01.pos.j=right(^.layer_01)
0.691	OUT DEF: ^.layer_011.pos.j=area(^.layer_01.shape) - 3
0.681	OUT DEF: ^.layer_0.pos.j=center(^.layer_0) - ^.layer_01.shape.size.i
0.670	OUT DEF: ^.layer_011.pos.i=center(^.layer_0) - min(^.layer_011.shape.size.j, ^.layer_0111.shape.size.j)
0.659	OUT DEF: ^.layer_01.shape.size.j=1
0.649	OUT DEF: ^.layer_01.shape.mask=Full
0.639	IN  DEF: ^.layer_0.shape.color=grey
0.631	OUT DEF: ^.color=black
0.626	IN  DEF: ^.layer_0.shape.mask=Full
0.621	IN  DEF: ^.layer_011.shape.mask=Full
0.615	IN  DEF: ^.layer_0111.shape.mask=Full
0.610	IN  DEF: ^.layer_01111.shape.mask=Full
0.606	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,^.layer_0.pos.j) and color black and layers
  _0: a rectangle with size (?,area(^.layer_01.shape) - 2) and color ? and mask ? at (middle(^.layer_0111),center(^.layer_0) - ^.layer_01.shape.size.i)
  _01: a rectangle with size (?,1) and color ^.layer_0111.shape.color and mask Full at (area(^.layer_01.shape) - 3,right(^.layer_01))
  _011: ^.layer_0111.shape at (center(^.layer_0) - min(^.layer_011.shape.size.j, ^.layer_0111.shape.size.j),area(^.layer_01.shape) - 3)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 178.3 + 6493.0 = 6671.4
DL output with Mo: L = 334.4 + 1955.5 = 2289.9
DL input+output M: L = 512.8 + 8448.5 = 8961.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,2) and color green and mask xx|.x|.x|.x at (4,2)
  _011: a rectangle with size (1,3) and color green and mask Full at (6,5)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta:
   (164.5 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (4,3) and color green and mask .xx|..x|xxx|..x at (4,1)
  _01: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (3,2)
diff: 
delta:
   (36.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,2) and color green and mask xx|.x|.x|.x at (4,2)
  _011: a rectangle with size (1,3) and color green and mask Full at (6,5)
  _0111: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (4,2) and color green and mask xx|.x|.x|.x at (4,2)
  _011: a rectangle with size (1,2) and color yellow and mask Full at (3,5)
  _0111: a rectangle with size (1,3) and color green and mask Full at (6,5)
  _01111: a rectangle with size (2,1) and color yellow and mask Full at (2,3)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN e3497940.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _0111: a rectangle with size (1,3) and color red and mask Full at (4,5)
  _01111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
diff: 
delta: (2,5)=2  (2,6)=6  (7,5)=2 
   (248.4 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (1,2) and color pink and mask Full at (5,2)
  _01: a rectangle with size (8,1) and color red and mask Full at (1,3)
  _011: a rectangle with size (1,3) and color red and mask Full at (4,1)
diff: 
delta: (2,2)=6  (7,1)=2  (7,2)=2 
   (96.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _0111: a rectangle with size (1,3) and color red and mask Full at (4,5)
  _01111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
diff: 
delta: (2,5)=2  (2,6)=6  (7,5)=2 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,3) and color red and mask ..x|xx.|..x at (6,1)
  _011: a rectangle with size (4,1) and color red and mask Full at (1,3)
  _0111: a rectangle with size (1,4) and color pink and mask Full at (5,2)
  _01111: a rectangle with size (1,3) and color red and mask Full at (4,5)
diff: 
delta: (2,5)=2  (2,6)=6  (7,5)=2 
! 15 wrong pixels (generated / expected)

TRAIN e3497940.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,5)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
diff: 
delta: (4,1)=7# (8,5)=8  (8,6)=7#
   (236.4 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (7,2) and color cyan and mask .x|.x|xx|xx|.x|.x|.x at (2,2)
  _01: a rectangle with size (1,1) and color orange and mask Full at (1,3)
  _011: a rectangle with size (1,1) and color orange and mask Full at (4,1)
diff: 
delta: (8,2)=7#
   (63.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (3,2) and color cyan and mask .x|.x|xx at (2,2)
  _011: a rectangle with size (1,2) and color cyan and mask Full at (5,5)
  _0111: a rectangle with size (1,1) and color orange and mask Full at (1,5)
  _01111: a rectangle with size (2,1) and color cyan and mask Full at (6,3)
diff: 
delta: (4,1)=7# (8,5)=8  (8,6)=7#
! 12 wrong pixels (generated / expected)

TRAIN e3497940.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,9) and color black and layers
  _0: a rectangle with size (10,1) and color grey and mask Full at (0,4)
  _01: a rectangle with size (1,7) and color blue and mask Full at (3,1)
  _011: a rectangle with size (7,1) and color blue and mask Full at (1,3)
  _0111: a rectangle with size (1,3) and color blue and mask Full at (5,5)
  _01111: a rectangle with size (1,2) and color pink and mask Full at (4,5)
diff: 
delta: (2,5)=1  (3,8)=6  (4,3)=6  (5,3)=0  (7,5)=1  (7,6)=6  (8,5)=6 
! 15 wrong pixels (generated / expected)

TEST e3497940.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.5 sec (26.5 sec/task)
bits-train-error = 1955.5 bits (1955.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-40] Checking task e40b9e2f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7591.0 = 7606.6
DL output with Mo: L = 15.6 + 11362.1 = 11377.7
DL input+output M: L = 31.2 + 18953.1 = 18984.4

# learning a model for train pairs
2.000	
1.500	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.900	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.784	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.731	OUT DEF: ^.size=^.size
0.701	OUT DEF: ^.layer_0.pos=^.layer_0.pos - 1
0.684	OUT DEF: ^.layer_01.shape.size.i=bottom(^.layer_0) - 2
0.667	OUT DEF: ^.layer_01.shape.size.j=bottom(^.layer_0) - 2
0.652	OUT DEF: ^.layer_01.pos.i=3
0.639	OUT DEF: ^.layer_01.pos.j=center(^.layer_01) / 2
0.629	IN  DEF: ^.color=black
0.623	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at ^.layer_0.pos - 1
  _01: a rectangle with size (bottom(^.layer_0) - 2,bottom(^.layer_0) - 2) and color ? and mask ? at (3,center(^.layer_01) / 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 80.4 + 2768.8 = 2849.2
DL output with Mo: L = 139.8 + 2681.3 = 2821.1
DL input+output M: L = 220.2 + 5450.1 = 5670.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|.x..|x.x.|...x at (4,3)
  _01: a rectangle with size (4,3) and color orange and mask +-cross at (3,3)
diff: 
delta:
   (111.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,5) and color yellow and mask x-cross at (3,2)
  _01: a rectangle with size (5,5) and color orange and mask +-cross at (3,2)
diff: 
delta:
   (42.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color yellow and mask x.x.|.x..|x.x.|...x at (4,3)
  _01: a rectangle with size (4,3) and color orange and mask +-cross at (3,3)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|xx|.x at (4,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
   (85.2 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (3,1)
  _01: a rectangle with size (4,4) and color pink and mask .x..|.xxx|xxx.|..x. at (3,1)
diff: 
delta: (3,4)=3  (6,1)=3  (6,4)=3 
   (122.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,2) and color pink and mask xx|xx|.x at (4,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (4,2)
  _01: a rectangle with size (1,1) and color green and mask Full at (3,1)
diff: 
delta: (6,3)=6 
! 14 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color brown and mask Full at (2,6)
diff: 
delta:
   (80.1 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,1) and color brown and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
diff: 
delta: (2,6)=9# (6,2)=9# (6,6)=9#
   (103.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color cyan and mask Full at (3,3)
  _01: a rectangle with size (1,1) and color brown and mask Full at (2,6)
diff: 
delta:
! 15 wrong pixels (generated / expected)

TRAIN e40b9e2f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,5) and color green and mask xxx.x|...x.|xxx.x at (3,1)
  _01: a rectangle with size (4,3) and color red and mask +-cross at (2,3)
diff: 
delta:
! 32 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color red and mask .x.|.x.|x.x|.x. at (2,3)
  _01: a rectangle with size (3,5) and color green and mask xxx.x|...x.|xxx.x at (3,1)
diff: 
delta:
! 31 wrong pixels (generated / expected)

TEST e40b9e2f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.1 sec (4.1 sec/task)
bits-train-error = 2681.3 bits (2681.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-39] Checking task e48d4e1a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22416.3 = 22431.9
DL output with Mo: L = 15.6 + 20163.3 = 20178.9
DL input+output M: L = 31.2 + 42579.6 = 42610.9

# learning a model for train pairs
2.000	
1.274	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.627	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.534	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.449	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.398	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.353	OUT DEF: ^.layer_01.shape=^.layer_01.shape
0.308	OUT DEF: ^.layer_0.shape=^.layer_0.shape
0.268	OUT DEF: ^.size=^.size
0.257	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i
0.246	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.236	IN  DEF: ^.layer_011.shape.color=grey
0.226	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j - ^.layer_011.shape.size.i
0.216	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i + ^.layer_011.shape.size.i
0.210	IN  DEF: ^.layer_0.shape.mask=Full
0.204	IN  DEF: ^.layer_01.shape.mask=Full
0.198	IN  DEF: ^.layer_011.shape.mask=Full
0.193	OUT DEF: ^.color=black
0.189	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0.shape at (^.layer_0.pos.i + ^.layer_011.shape.size.i,^.layer_0.pos.j)
  _01: ^.layer_01.shape at (^.layer_01.pos.i,^.layer_01.pos.j - ^.layer_011.shape.size.i)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 114.7 + 4015.5 = 4130.2
DL output with Mo: L = 96.0 + 0.0 = 96.0
DL input+output M: L = 210.7 + 4015.5 = 4226.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (100.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (8,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color red and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (101.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (6,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color yellow and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color yellow and mask Full at (0,3)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (4,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (101.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (7,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color pink and mask Full at (4,0)
  _01: a rectangle with size (10,1) and color pink and mask Full at (0,6)
  _011: a rectangle with size (3,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (2,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
   (98.3 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color green and mask Full at (2,0)
  _01: a rectangle with size (10,1) and color green and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TRAIN e48d4e1a.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,10) and color cyan and mask Full at (3,0)
  _01: a rectangle with size (10,1) and color cyan and mask Full at (0,5)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,9)
diff: 
delta:
correct output grid

TEST e48d4e1a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 2.2 sec (2.2 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-38] Checking task e5062a87.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 32497.8 = 32513.4
DL output with Mo: L = 15.6 + 35058.1 = 35073.7
DL input+output M: L = 31.2 + 67555.9 = 67587.1

# learning a model for train pairs
2.000	
1.499	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.099	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.908	OUT OBJECT at ^.layer_00: ^.layer_0
0.799	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.775	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.755	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.738	OUT DEF: ^.size=^.size
0.732	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.726	IN  DEF: ^.layer_0.shape.color=grey
0.566	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 83.5 + 11068.4 = 11152.0
DL output with Mo: L = 177.5 + 7660.8 = 7838.4
DL input+output M: L = 261.1 + 18729.3 = 18990.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _01: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (7,9)=5# (8,0)=5# (8,3)=5# (8,6)=5# (8,8)=5# (8,9)=5# (9,3)=5# (9,4)=5# (9,7)=5# (9,8)=5#
   (592.8 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _0: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
  _01: a rectangle with size (4,5) and color red and mask .x...|x.xx.|.xx.x|...x. at (0,5)
  _011: a rectangle with size (5,4) and color red and mask ..x.|.x.x|.xx.|x.x.|.x.. at (5,5)
  _0111: a rectangle with size (3,4) and color grey and mask ...x|x.xx|.xx. at (7,6)
  _01111: a rectangle with size (3,2) and color grey and mask xx|x.|xx at (7,3)
diff: 
delta: (6,1)=2  (7,0)=2  (7,1)=5# (7,2)=2  (8,0)=5# (8,1)=2 
   (428.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
  _01: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (7,9)=5# (8,0)=5# (8,3)=5# (8,6)=5# (8,8)=5# (8,9)=5# (9,3)=5# (9,4)=5# (9,7)=5# (9,8)=5#
! 47 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,4) and color grey and mask .xxx|x..x|..x.|.x.x|..x.|..xx|.x.. at (0,6)
  _01: a rectangle with size (6,6) and color grey and mask .xxx..|.x....|.xx...|x.xxxx|x....x|xx.xxx at (0,0)
diff: 
delta: (0,6)=2  (1,5)=2  (1,7)=2  (2,6)=2  (7,1)=5# (7,3)=5# (7,4)=5# (7,9)=5# (8,0)=5# (8,3)=5# (8,6)=5# (8,8)=5# (8,9)=5# (9,3)=5# (9,4)=5# (9,7)=5# (9,8)=5#
! 53 wrong pixels (generated / expected)

TRAIN e5062a87.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _01: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|..xx at (0,6)
diff: 
delta: (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2 
   (324.2 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _0: a rectangle with size (5,1) and color grey and mask Full at (0,9)
  _01: a rectangle with size (1,9) and color red and mask Full at (5,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (0,7)
  _0111: a rectangle with size (2,2) and color grey and mask Full (and Border) at (3,8)
  _01111: a rectangle with size (1,1) and color grey and mask Full at (2,6)
diff: 
delta: (1,8)=5#
   (180.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
  _01: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|..xx at (0,6)
diff: 
delta: (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2 
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color grey and mask .x.x|.xxx|x..x|..xx|..xx at (0,6)
  _01: a rectangle with size (10,10) and color grey and mask .xxxx.....|x.x.......|xxxxx.....|x.xxx.....|xxxx..x...|x....x....|.xxxxxx.xx|..xxx..xx.|x.xx.x.x.x|xx.x.xxxxx at (0,0)
diff: 
delta: (5,1)=2  (5,2)=2  (5,3)=2  (5,4)=2 
! 59 wrong pixels (generated / expected)

TRAIN e5062a87.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full (and Border) at (7,7)
diff: 
delta:
   (189.9 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _0: a rectangle with size (6,1) and color red and mask Full at (2,3)
  _01: a rectangle with size (1,4) and color red and mask Full at (4,1)
  _011: a rectangle with size (3,2) and color red and mask Full (and Border) at (7,7)
  _0111: a rectangle with size (3,1) and color red and mask Full at (2,1)
  _01111: a rectangle with size (1,2) and color red and mask Full at (7,3)
diff: 
delta:
   (156.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxxxx|xxxx.xxx.x|x.x.xx.xxx|x.x.xx..xx|x....xxx.x|xxx.x.x..x|.x..x.xxxx|xxx...x.x.|.xxxx.x.x.|x.....x..x at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full (and Border) at (7,7)
diff: 
delta:
! 16 wrong pixels (generated / expected)

TRAIN e5062a87.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxx.xxxx.|xxx.xxxx.x|..xxxx.x..|..xxxx.xxx|..xxx....x|xx.....xxx|..xx...xxx|.xxxxxx...|xx..xxx...|x.x.x..x.. at (0,0)
  _01: a rectangle with size (3,2) and color red and mask Full (and Border) at (4,5)
diff: 
delta:
! 19 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (7,1)
  _01: a rectangle with size (10,10) and color grey and mask .xxx.xxxx.|xxx.xxxx.x|..xxxx.x..|..xxxx.xxx|..xxx....x|xx.....xxx|..xx...xxx|.xxxxxx...|xx..xxx...|x.x.x..x.. at (0,0)
diff: 
delta: (4,5)=2  (4,6)=2  (5,5)=2  (5,6)=2  (6,5)=2  (6,6)=2 
! 69 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color grey and mask Full (and Border) at (2,2)
  _01: a rectangle with size (10,10) and color grey and mask .xxx.xxxx.|xxx.xxxx.x|..xxxx.x..|..xxxx.xxx|..xxx....x|xx.....xxx|..xx...xxx|.xxxxxx...|xx..xxx...|x.x.x..x.. at (0,0)
diff: 
delta: (4,5)=2  (4,6)=2  (5,5)=2  (5,6)=2  (6,5)=2  (6,6)=2 
! 67 wrong pixels (generated / expected)

TEST e5062a87.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.4 sec (27.4 sec/task)
bits-train-error = 7660.8 bits (7660.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-37] Checking task e509e548.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 28704.7 = 28720.3
DL output with Mo: L = 15.6 + 28704.7 = 28720.3
DL input+output M: L = 31.2 + 57409.4 = 57440.6

# learning a model for train pairs
2.000	
1.809	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.617	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.438	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.259	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.141	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.023	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.960	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.896	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.833	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 176.9 + 10891.0 = 11067.8
DL output with Mo: L = 145.1 + 12718.1 = 12863.2
DL input+output M: L = 322.0 + 23609.1 = 23931.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,21) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask .xx.|.x..|.x..|.x..|xxxx at (9,0)
  _01: a rectangle with size (4,3) and color green and mask xxx|x..|x..|xxx at (4,12)
  _011: a rectangle with size (4,3) and color green and mask xxx|x.x|x.x|..x at (15,15)
  _0111: a rectangle with size (3,4) and color green and mask x..x|xxxx|x... at (3,3)
  _01111: a rectangle with size (3,5) and color green and mask xxxxx|x....|x.... at (13,6)
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (10,16)=3  (10,17)=3  (11,17)=3  (12,16)=3  (12,17)=3  (17,2)=3  (18,1)=3  (18,2)=3 
   (622.5 bits)
data: a background with size (19,21) and color black and layers
  _0: a rectangle with size (5,4) and color red and mask .xx.|.x..|.x..|.x..|xxxx at (9,0)
  _01: a rectangle with size (4,3) and color pink and mask xxx|x..|x..|xxx at (4,12)
  _011: a rectangle with size (4,3) and color pink and mask xxx|x.x|x.x|..x at (15,15)
  _0111: a rectangle with size (3,4) and color red and mask x..x|xxxx|x... at (3,3)
diff: 
delta: (0,17)=1  (0,18)=1  (1,18)=1  (2,18)=1  (10,16)=6  (10,17)=6  (11,17)=6  (12,16)=6  (12,17)=6  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (14,6)=1  (15,6)=1  (17,2)=1  (18,1)=1  (18,2)=1 
   (757.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,21) and color black and layers
  _0: a rectangle with size (5,4) and color green and mask .xx.|.x..|.x..|.x..|xxxx at (9,0)
  _01: a rectangle with size (4,3) and color green and mask xxx|x..|x..|xxx at (4,12)
  _011: a rectangle with size (4,3) and color green and mask xxx|x.x|x.x|..x at (15,15)
  _0111: a rectangle with size (3,4) and color green and mask x..x|xxxx|x... at (3,3)
  _01111: a rectangle with size (3,5) and color green and mask xxxxx|x....|x.... at (13,6)
diff: 
delta: (0,17)=3  (0,18)=3  (1,18)=3  (2,18)=3  (10,16)=3  (10,17)=3  (11,17)=3  (12,16)=3  (12,17)=3  (17,2)=3  (18,1)=3  (18,2)=3 
! size mismatch, 10x10 instead of 19x21

TRAIN e509e548.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|x..x|x..x|x..x at (1,6)
  _01: a rectangle with size (1,5) and color green and mask Full at (6,0)
  _011: a rectangle with size (3,3) and color green and mask xxx|..x|..x at (0,0)
  _0111: a rectangle with size (1,3) and color green and mask Full at (9,2)
  _01111: a rectangle with size (4,1) and color green and mask Full at (6,2)
diff: 
delta:
   (214.0 bits)
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask xxxx|x..x|x..x|x..x at (1,6)
  _01: a rectangle with size (4,5) and color red and mask xxxxx|..x..|..x..|..xxx at (6,0)
  _011: a rectangle with size (1,3) and color blue and mask Full at (0,0)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,2)
diff: 
delta:
   (195.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,11) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask xxxx|x..x|x..x|x..x at (1,6)
  _01: a rectangle with size (1,5) and color green and mask Full at (6,0)
  _011: a rectangle with size (3,3) and color green and mask xxx|..x|..x at (0,0)
  _0111: a rectangle with size (1,3) and color green and mask Full at (9,2)
  _01111: a rectangle with size (4,1) and color green and mask Full at (6,2)
diff: 
delta:
! size mismatch, 10x10 instead of 10x11

TRAIN e509e548.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask x....|x....|x...x|xxxxx at (1,1)
  _01: a rectangle with size (4,3) and color green and mask ..x|xxx|x.x|x.x at (7,5)
  _011: a rectangle with size (2,3) and color green and mask x.x|xxx at (12,9)
  _0111: a rectangle with size (2,3) and color green and mask x..|xxx at (1,9)
  _01111: a rectangle with size (2,3) and color green and mask xxx|..x at (11,0)
diff: 
delta:
   (252.6 bits)
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (4,5) and color pink and mask x....|x....|x...x|xxxxx at (1,1)
  _01: a rectangle with size (4,3) and color red and mask ..x|xxx|x.x|x.x at (7,5)
  _011: a rectangle with size (2,3) and color pink and mask x.x|xxx at (12,9)
  _0111: a rectangle with size (2,3) and color blue and mask x..|xxx at (1,9)
diff: 
delta: (11,0)=1  (11,1)=1  (11,2)=1  (12,2)=1 
   (319.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,12) and color black and layers
  _0: a rectangle with size (4,5) and color green and mask x....|x....|x...x|xxxxx at (1,1)
  _01: a rectangle with size (4,3) and color green and mask ..x|xxx|x.x|x.x at (7,5)
  _011: a rectangle with size (2,3) and color green and mask x.x|xxx at (12,9)
  _0111: a rectangle with size (2,3) and color green and mask x..|xxx at (1,9)
  _01111: a rectangle with size (2,3) and color green and mask xxx|..x at (11,0)
diff: 
delta:
! size mismatch, 10x10 instead of 14x12

TRAIN e509e548.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,16) and color black and layers
  _0: a rectangle with size (3,4) and color green and mask .xxx|...x|xxxx at (6,9)
  _01: a rectangle with size (3,5) and color green and mask ...xx|...x.|xxxxx at (4,3)
  _011: a rectangle with size (3,6) and color green and mask xxxxxx|.....x|.....x at (11,1)
  _0111: a rectangle with size (5,3) and color green and mask x..|x..|xxx|x.x|..x at (0,12)
  _01111: a rectangle with size (3,3) and color green and mask x.x|x.x|xxx at (0,1)
diff: 
delta: (10,11)=3  (11,11)=3  (12,11)=3  (12,12)=3  (12,13)=3 
! size mismatch, 10x10 instead of 14x16

TEST e509e548.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.7 sec (27.7 sec/task)
bits-train-error = 12718.1 bits (12718.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-36] Checking task e50d258f.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 41416.7 = 41432.3
DL output with Mo: L = 15.6 + 4221.3 = 4237.0
DL input+output M: L = 31.2 + 45638.0 = 45669.2

# learning a model for train pairs
2.000	
1.554	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.438	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.373	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.315	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.252	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.208	OUT DEF: ^.size.j=bottom(^.layer_0) / 2
1.178	OUT DEF: ^.layer_0.pos=^.layer_01.pos / 2
1.138	OUT DEF: ^.layer_0.shape.color=red
1.108	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
1.083	OUT DEF: ^.layer_011.pos.i=span(^.layer_0.pos.i, ^.layer_01.pos.i)
1.058	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.018	OUT DEF: ^.layer_011.shape.color=^.layer_011.shape.color
0.997	OUT DEF: ^.layer_011.pos.j=max(^.layer_0.pos.j, ^.layer_01.pos.j) / 2

# Learned model:
CONSTRUCT (Mo)
a background with size (?,bottom(^.layer_0) / 2) and color ? and layers
  _0: a rectangle with size (?,?) and color red and mask ? at ^.layer_01.pos / 2
  _01: a point with color ? at (?,^.layer_01.pos.j)
  _011: a point with color ^.layer_011.shape.color at (span(^.layer_0.pos.i, ^.layer_01.pos.i),max(^.layer_0.pos.j, ^.layer_01.pos.j) / 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 17230.7 = 17344.0
DL output with Mo: L = 190.8 + 2260.8 = 2451.6
DL input+output M: L = 304.1 + 19491.5 = 19795.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff: 
delta: (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
   (406.6 bits)
data: a background with size (5,4) and color cyan and layers
  _0: a rectangle with size (1,2) and color red and mask Full at (1,1)
  _01: a point with color blue at (3,2)
  _011: a point with color red at (3,1)
diff: 
delta:
   (39.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _011: a rectangle with size (1,1) and color blue and mask Full at (2,2)
diff: 
delta: (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x4 instead of 5x4
>> Trial 2
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,2) and color red and mask Full at (1,7)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta: (2,2)=1  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x4 instead of 5x4
>> Trial 3
data: a background with size (10,10) and color cyan and layers
  _0: a rectangle with size (10,10) and color black and mask xxxxxx....|x....x....|x....x....|x....x....|x....x....|xxxxxxxxxx|xxx......x|xxx......x|xxx......x|xxx......x at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (2,2)
  _011: a rectangle with size (1,2) and color red and mask Full at (1,7)
diff: 
delta: (3,3)=2  (3,7)=2  (3,8)=1  (7,6)=2  (8,4)=2  (8,6)=1  (9,4)=1 
! size mismatch, 10x4 instead of 5x4

TRAIN e50d258f.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,2)=2  (7,3)=2  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
   (859.9 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,3) and color red and mask .xx|xx.|x.. at (0,0)
  _01: a point with color cyan at (0,0)
  _011: a point with color cyan at (2,2)
diff: 
delta:
   (52.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,2)=2  (7,3)=2  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
! size mismatch, 10x3 instead of 3x3
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (5,4) and color blue and mask xxx.|x.xx|...x|xxx.|.x.. at (0,0)
  _01: a rectangle with size (7,5) and color cyan and mask Full at (1,5)
  _011: a rectangle with size (4,4) and color cyan and mask Full at (1,0)
diff: 
delta: (0,3)=8  (1,5)=1  (1,8)=1  (2,1)=2  (2,6)=1  (2,8)=2  (3,9)=1  (4,0)=8  (4,6)=1  (4,7)=2  (4,9)=2  (5,8)=1  (6,5)=1  (6,6)=1  (6,8)=1  (7,1)=8  (7,2)=2  (7,3)=2  (7,5)=8  (7,6)=1  (7,7)=1  (7,9)=2  (8,1)=2  (8,2)=2  (8,3)=1  (9,1)=2  (9,2)=1  (9,3)=8 
! size mismatch, 10x2 instead of 3x3

TRAIN e50d258f.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (3,6)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (4,8)=1  (5,1)=1  (5,7)=2  (6,9)=1  (8,8)=1 
   (456.5 bits)
data: a background with size (6,4) and color cyan and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
  _01: a point with color blue at (2,0)
  _011: a point with color blue at (4,3)
diff: 
delta: (1,2)=1  (3,3)=2  (4,1)=2  (5,1)=1 
   (134.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,4) and color cyan and mask .xx.|xx.x|x.xx|xxx.|.xxx|xx.x at (3,6)
  _01: a rectangle with size (6,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (5,1) and color blue and mask Full at (3,6)
diff: 
delta: (0,0)=2  (1,2)=1  (2,0)=1  (3,3)=2  (3,9)=2  (4,1)=2  (4,3)=1  (4,8)=1  (5,1)=1  (5,7)=2  (6,9)=1  (8,8)=1 
! size mismatch, 10x4 instead of 6x4

TRAIN e50d258f.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,3) and color cyan and mask Full at (1,6)
  _01: a rectangle with size (4,4) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (3,4) and color cyan and mask ..x.|xx.x|..x. at (6,1)
diff: 
delta: (0,0)=2  (1,2)=1  (1,6)=2  (1,8)=1  (2,0)=1  (2,1)=2  (2,3)=1  (3,6)=2  (3,7)=1  (4,8)=2  (5,6)=2  (5,8)=1  (6,1)=1  (6,2)=2  (6,4)=2  (6,6)=1  (7,3)=1  (8,1)=1  (8,2)=2  (8,4)=1 
! size mismatch, 10x3 instead of 6x3

TEST e50d258f.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 7.9 sec (7.9 sec/task)
bits-train-error = 2260.8 bits (2260.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-35] Checking task e6721834.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 123607.4 = 123623.0
DL output with Mo: L = 15.6 + 20461.8 = 20477.4
DL input+output M: L = 31.2 + 144069.2 = 144100.4

# learning a model for train pairs
2.000	
1.246	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.849	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.573	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.518	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.482	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.447	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.417	OUT DEF: ^.size=^.layer_0.shape.size
0.387	OUT OBJECT at ^.layer_00: ^.layer_011.shape at (?,?)
0.375	OUT DEF: ^.layer_011.shape.size.i=average(^.layer_01.pos.i, ^.layer_011.pos.i) - 1
0.365	OUT DEF: ^.color=^.color
0.358	OUT DEF: ^.layer_0.pos.i=^.layer_01.shape.size.j - 2
0.350	OUT DEF: ^.layer_0.pos.j=bottom(^.layer_011) / 2
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.color and layers
  _00: ^.layer_011.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (^.layer_01.shape.size.j - 2,bottom(^.layer_011) / 2)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (average(^.layer_01.pos.i, ^.layer_011.pos.i) - 1,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 19344.1 = 19457.3
DL output with Mo: L = 242.2 + 3711.1 = 3953.3
DL input+output M: L = 355.5 + 23055.2 = 23410.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _011: a rectangle with size (2,7) and color blue and mask xxx.xxx|x.xxx.x at (4,2)
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,2)=1  (7,3)=1  (7,4)=3  (7,5)=1  (8,2)=1  (8,3)=3  (8,13)=2  (9,2)=1  (9,3)=1  (9,11)=2  (9,13)=2  (10,2)=1  (10,3)=3  (10,11)=2  (11,2)=1  (11,3)=1  (11,4)=3  (11,5)=1  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
   (1119.8 bits)
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (2,7) and color blue and mask xxx.xxx|x.xxx.x at (1,8)
  _0: a rectangle with size (5,4) and color blue and mask xx.x|x.xx|xxxx|x.xx|xx.x at (9,2)
  _01: a rectangle with size (1,5) and color red and mask Full at (2,9)
  _011: a rectangle with size (5,2) and color green and mask Full (and Border) at (9,3)
diff: 
delta: (1,11)=2 
   (142.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _011: a rectangle with size (2,7) and color blue and mask Full (and Border) at (4,2)
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,2)=1  (7,3)=1  (7,4)=3  (7,5)=1  (8,2)=1  (8,3)=3  (8,13)=2  (9,2)=1  (9,3)=1  (9,11)=2  (9,13)=2  (10,2)=1  (10,3)=3  (10,11)=2  (11,2)=1  (11,3)=1  (11,4)=3  (11,5)=1  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 54 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (2,7) and color blue and mask Full (and Border) at (4,2)
  _011: a rectangle with size (3,11) and color blue and mask Full at (8,4)
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,2)=1  (7,3)=1  (7,4)=3  (7,5)=1  (8,2)=1  (8,3)=3  (8,13)=2  (9,2)=1  (9,3)=1  (9,11)=2  (9,13)=2  (10,2)=1  (10,3)=3  (10,11)=2  (11,2)=1  (11,3)=1  (11,4)=3  (11,5)=1  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 64 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (30,17) and color black and layers
  _0: a rectangle with size (15,17) and color cyan and mask xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xx.......xxxxxxxx|xx.......xxxxxxxx|xxxxxxxxxxxxxxxxx|xx....xxxxxxxxxxx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxx.....xx|xx....xxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxxx at (0,0)
  _01: a rectangle with size (3,11) and color blue and mask Full at (8,4)
  _011: a rectangle with size (2,7) and color blue and mask xxx.xxx|x.xxx.x at (4,2)
diff: 
delta: (4,5)=2  (5,3)=2  (5,7)=2  (7,2)=1  (7,3)=1  (7,4)=3  (7,5)=1  (8,2)=1  (8,3)=3  (8,13)=2  (9,2)=1  (9,3)=1  (9,11)=2  (9,13)=2  (10,2)=1  (10,3)=3  (10,11)=2  (11,2)=1  (11,3)=1  (11,4)=3  (11,5)=1  (16,11)=2  (17,9)=2  (17,13)=2  (24,4)=3  (25,3)=3  (27,3)=3  (28,4)=3 
! 52 wrong pixels (generated / expected)

TRAIN e6721834.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,20) and color blue and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _01: a rectangle with size (4,3) and color green and mask Full at (2,2)
  _011: a rectangle with size (3,4) and color green and mask Full at (8,4)
diff: 
delta: (1,15)=8  (1,17)=8  (3,2)=8  (3,4)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
   (445.5 bits)
data: a background with size (11,10) and color blue and layers
  _00: a rectangle with size (3,4) and color green and mask Full at (6,1)
  _0: a rectangle with size (1,1) and color cyan and mask Full at (1,5)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,7)
  _011: a rectangle with size (4,3) and color green and mask Full at (0,5)
diff: 
delta: (6,4)=2  (7,2)=2 
   (134.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,20) and color blue and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _01: a rectangle with size (3,4) and color green and mask Full at (8,4)
  _011: a rectangle with size (4,3) and color green and mask Full at (2,2)
diff: 
delta: (1,15)=8  (1,17)=8  (3,2)=8  (3,4)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
! 38 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,20) and color blue and layers
  _0: a rectangle with size (11,10) and color pink and mask xxxxxxxxxx|xxxxxxxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xx...xxxxx|xxxxxxxxxx|xxxxxxxxxx|xxxx....xx|xxxx....xx|xxxx....xx at (0,0)
  _01: a rectangle with size (4,3) and color green and mask Full at (2,2)
  _011: a rectangle with size (3,4) and color green and mask Full at (8,4)
diff: 
delta: (1,15)=8  (1,17)=8  (3,2)=8  (3,4)=8  (6,14)=2  (7,12)=2  (8,7)=2  (9,5)=2 
! 38 wrong pixels (generated / expected)

TRAIN e6721834.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,16) and color yellow and layers
  _0: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask Full at (1,9)
  _011: a rectangle with size (2,3) and color blue and mask xx.|xxx at (7,10)
diff: 
delta: (2,4)=2  (2,9)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
   (369.1 bits)
data: a background with size (10,8) and color yellow and layers
  _00: a rectangle with size (2,3) and color blue and mask xx.|xxx at (8,0)
  _0: a rectangle with size (4,3) and color blue and mask xxx|.xx|xxx|.xx at (1,4)
  _01: a rectangle with size (1,1) and color pink and mask Full at (8,2)
  _011: a rectangle with size (3,1) and color red and mask Full at (2,4)
diff: 
delta:
   (94.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,16) and color yellow and layers
  _0: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask Full at (1,9)
  _011: a rectangle with size (2,3) and color blue and mask Full (and Border) at (7,10)
diff: 
delta: (2,4)=2  (2,9)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,16) and color yellow and layers
  _0: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (2,3) and color blue and mask Full (and Border) at (7,10)
  _011: a rectangle with size (4,3) and color blue and mask Full at (1,9)
diff: 
delta: (2,4)=2  (2,9)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
! 32 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,16) and color yellow and layers
  _0: a rectangle with size (10,8) and color cyan and mask xxxxxxxx|x...xxxx|x...xxxx|x...xxxx|x...xxxx|xxxxxxxx|xxxxxxxx|xx...xxx|xx...xxx|xxxxxxxx at (0,8)
  _01: a rectangle with size (4,3) and color blue and mask Full at (1,9)
  _011: a rectangle with size (2,3) and color blue and mask xx.|xxx at (7,10)
diff: 
delta: (2,4)=2  (2,9)=2  (4,4)=2  (4,9)=2  (7,12)=6  (8,2)=6 
! 25 wrong pixels (generated / expected)

TRAIN e6721834.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Average: not an integer

TEST e6721834.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 3711.1 bits (3711.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-34] Checking task e73095fd.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 52299.8 = 52315.4
DL output with Mo: L = 15.6 + 65116.0 = 65131.6
DL input+output M: L = 31.2 + 117415.8 = 117447.0

# learning a model for train pairs
2.000	
1.156	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.368	OUT OBJECT at ^.layer_0: ^.layer_0
0.271	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.233	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.219	OUT OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.209	OUT DEF: ^.size=^.size
0.206	IN  DEF: ^.layer_0.shape.color=grey
0.203	OUT DEF: ^.layer_01.shape.size.i=3
0.200	OUT DEF: ^.layer_01.shape.color=yellow
0.198	OUT DEF: ^.layer_011.shape.color=yellow
0.196	OUT DEF: ^.layer_00.shape.mask=Full
0.193	OUT DEF: ^.layer_00.shape.size.j=2
0.192	OUT DEF: ^.layer_01.shape.mask=Full
0.190	OUT DEF: ^.layer_011.shape.mask=Full
0.189	IN  DEF: ^.color=black
0.188	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _00: a rectangle with size (?,2) and color ? and mask Full at (?,?)
  _0: ^.layer_0
  _01: a rectangle with size (3,?) and color yellow and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color yellow and mask Full at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 7877.5 = 7927.8
DL output with Mo: L = 119.9 + 2225.8 = 2345.7
DL input+output M: L = 170.2 + 10103.3 = 10273.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
diff: 
delta:
   (265.8 bits)
data: a background with size (12,19) and color black and layers
  _00: a rectangle with size (5,2) and color yellow and mask Full at (2,6)
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
  _01: a rectangle with size (3,1) and color yellow and mask Full at (1,18)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (6,12)
diff: 
delta: (2,0)=4 
   (93.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,19) and color black and layers
  _0: a rectangle with size (12,19) and color grey and mask .............x...xx|xx...xxxx....x...x.|.xxxxx..xxxxxxxxxx.|xx...x..x....x...x.|.....x..x....x...xx|.....x..x..xxxx....|.....x..x..x..x....|.....xxxx..x..xxxxx|......x....xxxx....|......x......x.....|......x......x.....|......x......x..... at (0,0)
diff: 
delta:
! 21 wrong pixels (generated / expected)

TRAIN e73095fd.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
diff: 
delta:
   (226.8 bits)
data: a background with size (13,16) and color black and layers
  _00: a rectangle with size (1,2) and color grey and mask Full at (4,14)
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (5,4)
  _011: a rectangle with size (3,1) and color yellow and mask Full at (5,15)
diff: 
delta:
   (62.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (13,16) and color grey and mask .....x.....x....|.....x.....x....|.....x.....x....|.....x.....x....|...xxxxx...x..xx|...x...x...x..x.|...x...xxxxxxxx.|...x...x......x.|...xxxxx......xx|.....x..........|.....x..........|xxxxxx..........|.....x.......... at (0,0)
diff: 
delta:
! 18 wrong pixels (generated / expected)

TRAIN e73095fd.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
diff: 
delta:
   (295.1 bits)
data: a background with size (15,17) and color black and layers
  _00: a rectangle with size (3,2) and color yellow and mask Full at (5,4)
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
  _01: a rectangle with size (3,3) and color yellow and mask Full at (2,12)
  _011: a rectangle with size (2,2) and color yellow and mask Full at (11,11)
diff: 
delta:
   (67.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (15,17) and color grey and mask .....x...........|.....x.....xxxxx.|xxxxxxxxxxxx...x.|.....x.....x...xx|...xxxx....x...x.|xxxx..x....xxxxx.|...x..x.....x....|...x..x.....x....|...xxxx.....x....|.....x......x....|.....x....xxxx...|xxxxxxxxxxx..x...|.....x....x..x...|.....x....xxxx...|.....x......x.... at (0,0)
diff: 
delta:
! 23 wrong pixels (generated / expected)

TRAIN e73095fd.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (16,18) and color grey and mask .......x..........|.......x..........|xxx....x..........|..xxxxxxxxxxxxxxxx|xxx....x......x...|.......x......x...|.......x......x...|.......x.....xxxx.|.....xxxxx...x..x.|xxxxxx...xxxxx..xx|.x...x...x...x..x.|.x...xxxxx...xxxx.|.x.....x..........|xxx....x..........|x.x....x..........|xxx....x.......... at (0,0)
diff: 
delta:
! 19 wrong pixels (generated / expected)

TEST e73095fd.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 4.1 sec (4.1 sec/task)
bits-train-error = 2225.8 bits (2225.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-33] Checking task e76a88a6.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 16333.5 = 16349.1
DL output with Mo: L = 15.6 + 16333.5 = 16349.1
DL input+output M: L = 31.2 + 32666.9 = 32698.1

# learning a model for train pairs
2.000	
1.722	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.443	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.315	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.148	OUT OBJECT at ^.layer_0: ^.layer_01
0.994	OUT OBJECT at ^.layer_01: ^.layer_01.shape at (?,?)
0.841	OUT OBJECT at ^.layer_011: ^.layer_01.shape at (?,?)
0.750	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.612	OUT OBJECT at ^.layer_0111: ^.layer_0111
0.488	OUT OBJECT at ^.layer_01111: ^.layer_0111.shape at (?,?)
0.362	OUT OBJECT at ^.layer_01110: ^.layer_0111.shape at (?,?)
0.337	OUT DEF: ^.size=^.size
0.323	OUT DEF: ^.layer_01111.pos=^.layer_011.pos
0.309	OUT DEF: ^.layer_01110.pos=^.layer_0.pos
0.303	OUT DEF: ^.layer_011.pos.j=^.layer_011.pos.j
0.296	IN  DEF: ^.layer_0.shape.color=grey
0.289	IN  DEF: ^.layer_011.shape.color=grey
0.283	OUT DEF: ^.layer_01.pos.j=^.layer_0.pos.j
0.276	OUT DEF: ^.layer_01.pos.i=area(^.layer_01.shape)
0.271	OUT DEF: ^.layer_011.pos.i=middle(^.layer_011) - 1
0.266	IN  DEF: ^.layer_0.shape.mask=Full
0.262	IN  DEF: ^.layer_011.shape.mask=Full
0.258	IN  DEF: ^.layer_0111.shape.mask=Full
0.255	IN  DEF: ^.color=black
0.252	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_01
  _01: ^.layer_01.shape at (area(^.layer_01.shape),^.layer_0.pos.j)
  _011: ^.layer_01.shape at (middle(^.layer_011) - 1,^.layer_011.pos.j)
  _01110: ^.layer_0111.shape at ^.layer_0.pos
  _0111: ^.layer_0111
  _01111: ^.layer_0111.shape at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 148.9 + 3042.4 = 3191.4
DL output with Mo: L = 145.3 + 786.9 = 932.2
DL input+output M: L = 294.2 + 3829.4 = 4123.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (4,6)
  _01: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,2)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
diff: 
delta:
   (135.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _01: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (5,6)
  _011: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (8,2)
  _01110: a rectangle with size (2,3) and color red and mask Full at (4,6)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
  _01111: a rectangle with size (2,3) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask Full at (4,6)
  _01: a rectangle with size (2,3) and color yellow and mask .xx|xxx at (2,1)
  _011: a rectangle with size (3,3) and color grey and mask Full at (7,2)
  _0111: a rectangle with size (2,3) and color red and mask Full at (1,1)
diff: 
delta:
correct output grid

TRAIN e76a88a6.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
   (168.6 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (6,4)
  _011: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (1,6)
  _01110: a rectangle with size (2,4) and color pink and mask Full at (5,4)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
  _01111: a rectangle with size (2,4) and color pink and mask Full at (0,6)
diff: 
delta: (2,6)=6  (3,1)=6  (7,4)=6 
   (78.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
! 13 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _01: a rectangle with size (2,4) and color cyan and mask xx.x|.xxx at (2,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _0111: a rectangle with size (2,4) and color pink and mask Full at (1,1)
diff: 
delta: (3,1)=6 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,4) and color grey and mask Full at (0,6)
  _01: a rectangle with size (2,4) and color pink and mask xxxx|..x. at (1,1)
  _011: a rectangle with size (3,4) and color grey and mask Full at (5,4)
  _0111: a rectangle with size (2,4) and color cyan and mask Full at (2,1)
diff: 
delta: (3,1)=6 
! 22 wrong pixels (generated / expected)

TRAIN e76a88a6.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
undefined expression: Middle: no middle, even height

TEST e76a88a6.json/1: 0 - (ERROR)

# Performance measures on task
runtime-learning = 13.0 sec (13.0 sec/task)
bits-train-error = 786.9 bits (786.9 bits/task)
acc-train-micro = 0.50 tasks (50.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.50
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-32] Checking task e8593010.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 20572.1 = 20587.7
DL output with Mo: L = 15.6 + 20572.1 = 20587.7
DL input+output M: L = 31.2 + 41144.2 = 41175.4

# learning a model for train pairs
2.000	
1.220	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.121	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.063	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.981	OUT OBJECT at ^.layer_00: ^.layer_0
0.918	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.857	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.827	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.797	OUT DEF: ^.size=^.size
0.769	OUT OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.740	OUT OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 4488.4 = 4537.2
DL output with Mo: L = 240.7 + 10461.3 = 10702.0
DL input+output M: L = 289.5 + 14949.7 = 15239.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
diff: 
delta:
   (148.1 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
  _0: a rectangle with size (8,1) and color red and mask Full at (2,9)
  _01: a rectangle with size (3,2) and color red and mask Full (and Border) at (4,4)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
  _0111: a rectangle with size (2,2) and color blue and mask Full (and Border) at (2,6)
  _01111: a rectangle with size (1,5) and color green and mask Full at (0,4)
  _011111: a rectangle with size (1,6) and color green and mask Full at (5,2)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (5,0)
diff: 
delta: (3,2)=3  (9,0)=3  (9,7)=3 
   (300.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxx.xxx.x|..xxxxxxxx|.xxxxx..x.|xx.xxxx.x.|xxxx..xxxx|.x.xxxx.x.|.xxx..xxx.|xxxxxxxxxx|xxxxxxxxx.|.xxxxxx.x. at (0,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)

TRAIN e8593010.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
diff: 
delta:
   (149.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
  _0: a rectangle with size (6,2) and color red and mask Full (and Border) at (1,0)
  _01: a rectangle with size (2,2) and color blue and mask Full (and Border) at (6,6)
  _011: a rectangle with size (2,2) and color blue and mask Full (and Border) at (8,0)
  _0111: a rectangle with size (8,1) and color green and mask Full at (1,9)
  _01111: a rectangle with size (1,2) and color red and mask Full at (0,5)
  _011111: a rectangle with size (1,2) and color red and mask Full at (2,7)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (2,5)
diff: 
delta: (1,3)=3  (3,1)=3  (4,8)=3  (5,4)=2  (6,4)=2  (8,6)=3  (9,8)=3 
   (398.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask xxxxx..xxx|..x.xxxxx.|xxxxx.x..x|x.xxx.xxxx|xxxxxxxx.x|xxxx.xxxxx|..xx.x..x.|xxxxxxx.xx|.xxxxx.xx.|..xxxxxx.x at (0,0)
diff: 
delta:
! 26 wrong pixels (generated / expected)

TRAIN e8593010.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
diff: 
delta:
   (151.1 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
  _0: a rectangle with size (4,3) and color blue and mask Full at (1,2)
  _01: a rectangle with size (2,3) and color red and mask Full (and Border) at (4,7)
  _011: a rectangle with size (1,7) and color green and mask Full at (8,1)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,8)
  _01111: a rectangle with size (1,2) and color red and mask Full at (0,0)
  _011111: a rectangle with size (2,1) and color red and mask Full at (2,1)
  _0111111: a rectangle with size (2,1) and color red and mask Full at (5,2)
diff: 
delta: (0,4)=3  (2,5)=3  (6,5)=3  (7,3)=3  (9,2)=3 
   (347.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask ..xx.xxx.x|xx..xxxx.x|x.x.x.xx.x|x.xx.xxxxx|xxx..xx.x.|xx.xxxx.x.|xx.xx.xxxx|xxx.xxxxxx|x.xxx.x.xx|xx.xxxxxxx at (0,0)
diff: 
delta:
! 27 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color grey and layers
  _0: a rectangle with size (8,6) and color black and mask xx..x.|..xx..|.x.x.x|.x..x.|...xx.|..x...|..x...|...x.. at (0,0)
diff: 
delta: (0,8)=0  (1,8)=0  (2,8)=0  (4,7)=0  (4,9)=0  (5,7)=0  (5,9)=0  (6,5)=0  (8,1)=0  (8,5)=0  (8,7)=0  (9,2)=0 
! 100 wrong pixels (generated / expected)

TRAIN e8593010.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color grey and mask .xxxxx..xx|xxx.xx.x.x|xx.xxxxx.x|x..xxxxxxx|.xxxxx.xxx|.xx.xx.x..|xx.xxxxx.x|xx.xxxxxx.|..xxxx.xxx|xxxx.x..x. at (0,0)
diff: 
delta:
! 28 wrong pixels (generated / expected)

TEST e8593010.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.3 sec (26.3 sec/task)
bits-train-error = 10461.3 bits (10461.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-31] Checking task e8dc4411.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 8597.6 = 8613.3
DL output with Mo: L = 15.6 + 18990.7 = 19006.3
DL input+output M: L = 31.2 + 27588.4 = 27619.6

# learning a model for train pairs
2.000	
1.372	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.904	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.542	OUT OBJECT at ^.layer_01: ^.layer_0
0.507	OUT DEF: ^.size=^.size
0.475	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
0.456	IN  DEF: ^.layer_0.shape.color=black
0.441	OUT DEF: ^.color=^.color
0.433	OUT DEF: ^.layer_0.shape.color=^.layer_01.shape.color

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ? at (?,?)
  _01: ^.layer_0
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)
  _01: a point with color ? at (?,?)

DL input  with Mi: L = 71.3 + 2684.8 = 2756.1
DL output with Mo: L = 61.4 + 2090.5 = 2151.8
DL input+output M: L = 132.6 + 4775.3 = 4907.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (3,3) and color black and mask Odd Checkboard at (3,3)
  _01: a point with color red at (5,6)
diff: 
delta:
   (80.7 bits)
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (7,8) and color red and mask .x......|x.x.....|.x.x....|..x.x...|...x.x..|....x.x.|.....x.x at (5,5)
  _01: a rectangle with size (3,3) and color black and mask Odd Checkboard at (3,3)
diff: 
delta:
   (81.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (3,3) and color black and mask Odd Checkboard at (3,3)
  _01: a point with color red at (5,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,14) and color black and layers
  _0: a rectangle with size (12,14) and color cyan and mask xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxx.xxxxxxxxx|xxx.x.xxxxxxxx|xxxx.x.xxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (0,0)
  _01: a point with color red at (5,6)
diff:   ^.layer_0.shape.color
delta:
! 17 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,14) and color cyan and layers
  _0: a rectangle with size (1,1) and color black and mask Full at (3,4)
  _01: a point with color black at (4,3)
diff: 
delta: (4,5)=0  (5,4)=0  (5,6)=2 
! 20 wrong pixels (generated / expected)

TRAIN e8dc4411.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask +-cross at (5,5)
  _01: a point with color green at (7,4)
diff: 
delta:
   (81.6 bits)
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (6,6) and color green and mask ....x.|...xxx|..x.x.|.xxx..|x.x...|xx.... at (7,0)
  _01: a rectangle with size (3,3) and color black and mask +-cross at (5,5)
diff: 
delta:
   (70.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask +-cross at (5,5)
  _01: a point with color green at (7,4)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (1,3) and color black and mask Full at (6,5)
  _01: a point with color black at (5,6)
diff: 
delta: (7,4)=3  (7,6)=0 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,15) and color blue and layers
  _0: a rectangle with size (1,3) and color black and mask Full at (6,5)
  _01: a point with color green at (7,4)
diff: 
delta: (5,6)=0  (7,6)=0 
! 19 wrong pixels (generated / expected)

TRAIN e8dc4411.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
  _01: a point with color cyan at (4,11)
diff: 
delta:
   (106.1 bits)
data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color cyan and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (0,11)
  _01: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
diff: 
delta:
   (57.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xx.xx|xx.xx|..x..|xx.xx|xx.xx at (5,6)
  _01: a point with color cyan at (4,11)
diff: 
delta:
! 21 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,16) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask Full at (5,6)
  _01: a point with color cyan at (4,11)
diff: 
delta: (5,8)=4  (6,8)=4  (7,6)=4  (7,7)=4  (7,9)=4  (7,10)=4  (8,8)=4  (9,8)=4 
! 29 wrong pixels (generated / expected)

TRAIN e8dc4411.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (18,16) and color green and layers
  _0: a rectangle with size (3,3) and color black and mask Even Checkboard at (6,4)
  _01: a point with color pink at (5,3)
diff: 
delta:
! 9 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (18,16) and color black and layers
  _0: a rectangle with size (18,16) and color green and mask xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxx.xxxxxxxxxxxx|xxxx.x.xxxxxxxxx|xxxxx.xxxxxxxxxx|xxxx.x.xxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx|xxxxxxxxxxxxxxxx at (0,0)
  _01: a point with color pink at (5,3)
diff:   ^.layer_0.shape.color
delta:
! 9 wrong pixels (generated / expected)

TEST e8dc4411.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 5.5 sec (5.5 sec/task)
bits-train-error = 2090.5 bits (2090.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-30] Checking task e9614598.json: 2 train, 2 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1507.1 = 1522.7
DL output with Mo: L = 15.6 + 4053.4 = 4069.0
DL input+output M: L = 31.2 + 5560.5 = 5591.7

# learning a model for train pairs
2.000	
1.567	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.461	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.334	OUT OBJECT at ^.layer_01: ^.layer_0
1.217	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.086	OUT OBJECT at ^.layer_011: ^.layer_01
0.987	OUT DEF: ^.size=^.size
0.914	IN  DEF: ^.layer_0.shape.color=blue
0.842	IN  DEF: ^.layer_01.shape.color=blue
0.792	OUT DEF: ^.layer_0.pos=average(^.layer_0.pos, ^.layer_01.pos) - 1
0.755	OUT DEF: ^.layer_0.shape.mask=+-cross
0.722	IN  DEF: ^.color=black
0.691	OUT DEF: ^.layer_0.shape.size.i=3
0.660	OUT DEF: ^.layer_0.shape.size.j=3
0.633	OUT DEF: ^.layer_0.shape.color=green
0.621	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at average(^.layer_0.pos, ^.layer_01.pos) - 1
  _01: ^.layer_0
  _011: ^.layer_01
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color blue at (?,?)
  _01: a point with color blue at (?,?)

DL input  with Mi: L = 60.4 + 850.1 = 910.6
DL output with Mo: L = 92.6 + 0.0 = 92.6
DL input+output M: L = 153.0 + 850.1 = 1003.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
diff: 
delta:
   (42.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (3,3)
  _01: a point with color blue at (4,1)
  _011: a point with color blue at (4,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (4,1)
  _01: a point with color blue at (4,7)
diff: 
delta:
correct output grid

TRAIN e9614598.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (8,3)
diff: 
delta:
   (42.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask +-cross at (3,2)
  _01: a point with color blue at (0,3)
  _011: a point with color blue at (8,3)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (8,3)
diff: 
delta:
correct output grid

TRAIN e9614598.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color blue at (3,1)
  _01: a point with color blue at (3,11)
diff: 
delta:
correct output grid

TEST e9614598.json/1: 1 1st (SUCCESS)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,6) and color black and layers
  _0: a point with color blue at (0,3)
  _01: a point with color blue at (6,3)
diff: 
delta:
correct output grid

TEST e9614598.json/2: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-29] Checking task e98196ab.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 19596.4 = 19612.0
DL output with Mo: L = 15.6 + 10705.8 = 10721.4
DL input+output M: L = 31.2 + 30302.2 = 30333.4

# learning a model for train pairs
2.000	
1.628	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.584	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.555	OUT DEF: ^.size.j=^.size.j
1.534	OUT DEF: ^.size.i=^.size.i / 2
1.513	OUT OBJECT at ^.layer_01: a point with color ? at (?,?)
1.485	OUT DEF: ^.layer_01.pos=^.layer_0.shape.size / 2
1.463	OUT OBJECT at ^.layer_011: a point with color ? at (?,?)
1.442	OUT OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.421	OUT OBJECT at ^.layer_01111: a point with color ? at (?,?)
1.399	OUT OBJECT at ^.layer_011111: a point with color ? at (?,?)
1.378	OUT OBJECT at ^.layer_0111111: a point with color ? at (?,?)
1.356	OUT OBJECT at ^.layer_01111111: a point with color ? at (?,?)
1.334	OUT OBJECT at ^.layer_011111111: a point with color ? at (?,?)
1.311	OUT OBJECT at ^.layer_0111111111: a point with color ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i / 2,^.size.j) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a point with color ? at ^.layer_0.shape.size / 2
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
  _011111111: a point with color ? at (?,?)
  _0111111111: a point with color ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 12263.2 = 12312.0
DL output with Mo: L = 246.5 + 7077.5 = 7324.0
DL input+output M: L = 295.4 + 19340.6 = 19636.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,5)=8  (2,3)=8  (2,7)=8  (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
   (341.1 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (1,4)
  _01: a point with color cyan at (0,5)
  _011: a point with color blue at (1,6)
  _0111: a point with color cyan at (2,3)
  _01111: a point with color cyan at (2,7)
  _011111: a point with color blue at (3,2)
  _0111111: a point with color blue at (3,8)
  _01111111: a point with color blue at (4,0)
  _011111111: a point with color cyan at (4,1)
  _0111111111: a point with color cyan at (4,9)
diff: 
delta: (4,10)=1 
   (188.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,5)=8  (2,3)=8  (2,7)=8  (4,1)=8  (4,9)=8  (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
! 15 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,1) and color cyan and mask Full at (0,5)
diff: 
delta: (2,3)=8  (2,7)=8  (4,1)=8  (4,9)=8  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5# (7,4)=1  (7,6)=1  (9,2)=1  (9,8)=1  (10,0)=1  (10,10)=1 
! 15 wrong pixels (generated / expected)

TRAIN e98196ab.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,1)=3  (0,5)=3  (0,9)=3  (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
   (417.3 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (1,3) and color orange and mask Full at (2,2)
  _01: a point with color green at (0,5)
  _011: a point with color green at (0,1)
  _0111: a point with color green at (0,9)
  _01111: a point with color orange at (0,10)
  _011111: a point with color orange at (1,0)
  _0111111: a point with color orange at (1,8)
  _01111111: a point with color green at (2,8)
  _011111111: a point with color orange at (4,0)
  _0111111111: a point with color green at (4,1)
diff: 
delta: (2,3)=3  (4,6)=7# (4,10)=7#
   (242.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,1)=3  (0,5)=3  (0,9)=3  (2,3)=3  (2,8)=3  (4,1)=3  (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,1) and color green and mask Full at (0,1)
diff: 
delta: (0,5)=3  (0,9)=3  (2,3)=3  (2,8)=3  (4,1)=3  (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5# (5,5)=5# (5,6)=5# (5,7)=5# (5,8)=5# (5,9)=5# (5,10)=5# (6,10)=7# (7,0)=7# (7,8)=7# (8,2)=7# (8,4)=7# (10,0)=7# (10,6)=7# (10,10)=7#
! 16 wrong pixels (generated / expected)

TRAIN e98196ab.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (1,1)=1  (1,3)=1  (1,4)=1  (1,6)=1  (1,9)=1  (2,6)=1  (3,2)=1  (3,4)=1  (3,7)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
   (468.0 bits)
data: a background with size (5,11) and color black and layers
  _0: a rectangle with size (3,2) and color blue and mask x.|x.|.x at (1,6)
  _01: a point with color red at (0,5)
  _011: a point with color red at (0,0)
  _0111: a point with color red at (0,10)
  _01111: a point with color blue at (1,1)
  _011111: a point with color blue at (1,3)
  _0111111: a point with color blue at (1,4)
  _01111111: a point with color blue at (1,9)
  _011111111: a point with color blue at (3,2)
  _0111111111: a point with color blue at (3,4)
diff: 
delta: (4,0)=2  (4,4)=2  (4,8)=2  (4,10)=1 
   (277.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (1,1)=1  (1,3)=1  (1,4)=1  (1,6)=1  (1,9)=1  (2,6)=1  (3,2)=1  (3,4)=1  (3,7)=1  (4,10)=1  (6,0)=2  (6,5)=2  (6,10)=2  (10,0)=2  (10,4)=2  (10,8)=2 
! 18 wrong pixels (generated / expected)

TRAIN e98196ab.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color black and layers
  _0: a rectangle with size (1,11) and color grey and mask Full at (5,0)
diff: 
delta: (0,10)=7# (1,2)=7# (1,3)=7# (1,8)=7# (2,6)=7# (3,1)=7# (3,3)=7# (3,10)=7# (4,6)=7# (6,0)=6  (6,4)=6  (6,6)=6  (7,10)=6  (8,0)=6  (8,4)=6  (8,10)=6  (9,9)=6  (10,0)=6  (10,3)=6 
! 23 wrong pixels (generated / expected)

TEST e98196ab.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.1 sec (24.1 sec/task)
bits-train-error = 7077.5 bits (7077.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-28] Checking task e9afcf9a.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 3188.5 = 3204.1
DL output with Mo: L = 15.6 + 3188.5 = 3204.1
DL input+output M: L = 31.2 + 6377.0 = 6408.2

# learning a model for train pairs
2.000	
1.338	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.716	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.628	OUT DEF: ^.size=^.size
0.542	OUT DEF: ^.layer_0.shape.size=^.size
0.486	OUT DEF: ^.color=^.color
0.434	OUT DEF: ^.layer_0.pos='(0,0)
0.387	OUT DEF: ^.layer_0.shape.mask=Odd Checkboard
0.352	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.331	IN  DEF: ^.layer_0.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask Odd Checkboard at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 48.8 + 969.3 = 1018.1
DL output with Mo: L = 43.8 + 0.0 = 43.8
DL input+output M: L = 92.6 + 969.3 = 1061.9

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (1,6) and color brown and mask Full at (1,0)
diff: 
delta:
   (48.5 bits)
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (2,6) and color brown and mask Odd Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color green and layers
  _0: a rectangle with size (1,6) and color brown and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (2,6) and color yellow and layers
  _0: a rectangle with size (1,6) and color cyan and mask Full at (1,0)
diff: 
delta:
   (48.5 bits)
data: a background with size (2,6) and color yellow and layers
  _0: a rectangle with size (2,6) and color cyan and mask Odd Checkboard at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color yellow and layers
  _0: a rectangle with size (1,6) and color cyan and mask Full at (1,0)
diff: 
delta:
correct output grid

TRAIN e9afcf9a.json/2: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,6) and color red and layers
  _0: a rectangle with size (1,6) and color pink and mask Full at (0,0)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (2,6) and color pink and layers
  _0: a rectangle with size (1,6) and color red and mask Full at (1,0)
diff: 
delta:
correct output grid

TEST e9afcf9a.json/1: 1 2nd (SUCCESS)

# Performance measures on task
runtime-learning = 0.3 sec (0.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 0.50

=====================================
[-27] Checking task ea32f347.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 15150.1 = 15165.7
DL output with Mo: L = 15.6 + 15150.1 = 15165.7
DL input+output M: L = 31.2 + 30300.3 = 30331.5

# learning a model for train pairs
2.000	
1.673	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.345	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.112	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.879	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.753	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.626	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.574	OUT DEF: ^.size=^.size
0.542	OUT DEF: ^.layer_01.shape.size=^.layer_01.shape.size
0.512	OUT DEF: ^.layer_011.pos=^.layer_011.pos
0.481	OUT DEF: ^.layer_01.pos=^.layer_01.pos
0.451	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.421	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.395	OUT DEF: ^.layer_011.shape.size=^.layer_011.shape.size
0.381	IN  DEF: ^.layer_0.shape.color=grey
0.366	IN  DEF: ^.layer_01.shape.color=grey
0.351	IN  DEF: ^.layer_011.shape.color=grey
0.336	OUT DEF: ^.layer_0.shape.color=blue
0.322	OUT DEF: ^.layer_01.shape.color=yellow
0.307	OUT DEF: ^.layer_011.shape.color=red
0.298	OUT DEF: ^.layer_011.shape.mask=^.layer_011.shape.mask
0.289	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.281	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.272	IN  DEF: ^.layer_0.shape.mask=Full
0.263	IN  DEF: ^.layer_01.shape.mask=Full
0.254	IN  DEF: ^.layer_011.shape.mask=Full
0.248	IN  DEF: ^.color=black
0.241	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color blue and mask ^.layer_0.shape.mask at ^.layer_0.pos
  _01: a rectangle with size ^.layer_01.shape.size and color yellow and mask ^.layer_01.shape.mask at ^.layer_01.pos
  _011: a rectangle with size ^.layer_011.shape.size and color red and mask ^.layer_011.shape.mask at ^.layer_011.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color grey and mask Full at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 119.4 + 3463.0 = 3582.4
DL output with Mo: L = 76.6 + 0.0 = 76.6
DL input+output M: L = 196.0 + 3463.0 = 3659.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color grey and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,7)
diff: 
delta:
   (86.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color red and mask Full at (4,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,1)
  _01: a rectangle with size (5,1) and color grey and mask Full at (2,4)
  _011: a rectangle with size (3,1) and color grey and mask Full at (4,7)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,7)
diff: 
delta:
   (84.9 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color blue and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color yellow and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color red and mask Full at (5,7)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,1) and color grey and mask Full at (1,4)
  _01: a rectangle with size (4,1) and color grey and mask Full at (3,1)
  _011: a rectangle with size (2,1) and color grey and mask Full at (5,7)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (7,2)
diff: 
delta:
   (86.7 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color blue and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color yellow and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color red and mask Full at (7,2)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (2,0)
  _01: a rectangle with size (5,1) and color grey and mask Full at (3,7)
  _011: a rectangle with size (1,3) and color grey and mask Full at (7,2)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/3: 1 1st (SUCCESS)

## instance 4

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color grey and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color grey and mask Full at (2,1)
diff: 
delta:
   (88.0 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color blue and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color yellow and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color red and mask Full at (2,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (7,1) and color grey and mask Full at (1,7)
  _01: a rectangle with size (1,5) and color grey and mask Full at (5,1)
  _011: a rectangle with size (1,4) and color grey and mask Full at (2,1)
diff: 
delta:
correct output grid

TRAIN ea32f347.json/4: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,6) and color grey and mask Full at (5,4)
  _01: a rectangle with size (1,5) and color grey and mask Full at (8,0)
  _011: a rectangle with size (3,1) and color grey and mask Full at (1,3)
diff: 
delta:
correct output grid

TEST ea32f347.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 5.3 sec (5.3 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-26] Checking task ea786f4a.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1478.7 = 1494.4
DL output with Mo: L = 15.6 + 6881.4 = 6897.0
DL input+output M: L = 31.2 + 8360.1 = 8391.3

# learning a model for train pairs
2.000	
1.270	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.084	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
0.972	IN  DEF: ^.layer_0.shape.color=black
0.903	OUT DEF: ^.size=^.size
0.835	OUT DEF: ^.layer_0.shape.size=^.size
0.795	OUT DEF: ^.layer_0.pos='(0,0)
0.766	OUT DEF: ^.color=^.color
0.733	OUT DEF: ^.layer_0.shape.mask=x-cross
0.709	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size ^.size and color ^.layer_0.shape.color and mask x-cross at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color black at (?,?)

DL input  with Mi: L = 38.9 + 1010.5 = 1049.3
DL output with Mo: L = 43.8 + 0.0 = 43.8
DL input+output M: L = 82.6 + 1010.5 = 1093.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color blue and layers
  _0: a point with color black at (1,1)
diff: 
delta:
   (29.8 bits)
data: a background with size (3,3) and color blue and layers
  _0: a rectangle with size (3,3) and color black and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color blue and layers
  _0: a point with color black at (1,1)
diff: 
delta:
correct output grid

TRAIN ea786f4a.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a point with color black at (2,2)
diff: 
delta:
   (34.2 bits)
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a point with color black at (2,2)
diff: 
delta:
correct output grid

TRAIN ea786f4a.json/2: 1 1st (SUCCESS)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color green and layers
  _0: a point with color black at (3,3)
diff: 
delta:
   (37.1 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (7,7) and color black and mask x-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color green and layers
  _0: a point with color black at (3,3)
diff: 
delta:
correct output grid

TRAIN ea786f4a.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (11,11) and color pink and layers
  _0: a point with color black at (5,5)
diff: 
delta:
correct output grid

TEST ea786f4a.json/1: 1 1st (SUCCESS)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 0.0 bits (0.0 bits/task)
acc-train-micro = 1.00 tasks (100.00%)
acc-train-macro = 1.00 tasks (100.00%)
acc-train-mrr = 1.00
acc-test-micro = 1.00 tasks (100.00%)
acc-test-macro = 1.00 tasks (100.00%)
acc-test-mrr = 1.00

=====================================
[-25] Checking task eb281b96.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 10747.3 = 10762.9
DL output with Mo: L = 15.6 + 36898.9 = 36914.5
DL input+output M: L = 31.2 + 47646.2 = 47677.4

# learning a model for train pairs
2.000	
1.137	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.361	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.355	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.348	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.342	OUT DEF: ^.size.j=^.size.j
0.338	IN  DEF: ^.color=black
0.334	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.333	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,^.size.j) and color black and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ? at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.0 + 2319.7 = 2367.6
DL output with Mo: L = 41.0 + 4134.7 = 4175.8
DL input+output M: L = 89.0 + 6454.4 = 6543.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
   (106.0 bits)
data: a background with size (9,17) and color black and layers
  _0: a rectangle with size (9,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|..x...x...x...x.. at (0,0)
diff: 
delta:
   (170.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,17) and color black and layers
  _0: a rectangle with size (3,17) and color cyan and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 9x17

TRAIN eb281b96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,17) and color black and layers
  _0: a rectangle with size (4,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
   (126.0 bits)
data: a background with size (13,17) and color black and layers
  _0: a rectangle with size (13,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|..x...x...x...x.. at (0,0)
diff: 
delta:
   (242.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,17) and color black and layers
  _0: a rectangle with size (4,17) and color red and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 13x17

TRAIN eb281b96.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,17) and color black and layers
  _0: a rectangle with size (5,17) and color green and mask ..x...x...x...x..|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|.x.x.x.x.x.x.x.x.|x...x...x...x...x at (0,0)
diff: 
delta:
! size mismatch, 10x17 instead of 17x17

TEST eb281b96.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 4134.7 bits (4134.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-24] Checking task eb5a1d5d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 187245.2 = 187260.8
DL output with Mo: L = 15.6 + 9159.4 = 9175.0
DL input+output M: L = 31.2 + 196404.6 = 196435.8

# learning a model for train pairs
2.000	
1.184	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.636	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.487	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.345	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.322	OUT DEF: ^.color=^.color
0.304	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.285	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.271	OUT DEF: ^.layer_01.pos.i=^.layer_01.pos.i / 2
0.258	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j / 2
0.247	OUT DEF: ^.layer_01.shape.mask=^.layer_01.shape.mask
0.236	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.235	IN  DEF: ^.layer_0.shape.mask=Full
0.235	IN  DEF: ^.layer_01.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.color and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at (?,?)
  _01: a rectangle with size (?,?) and color ^.layer_01.shape.color and mask ^.layer_01.shape.mask at (^.layer_01.pos.i / 2,^.layer_01.pos.j / 2)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 81.2 + 7534.3 = 7615.6
DL output with Mo: L = 97.9 + 1681.9 = 1779.8
DL input+output M: L = 179.2 + 9216.2 = 9395.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (23,27) and color cyan and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (9,6)
  _01: a rectangle with size (16,18) and color green and mask Full at (2,3)
diff: 
delta:
   (113.3 bits)
data: a background with size (5,5) and color cyan and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (3,3) and color green and mask Full at (1,1)
diff: 
delta:
   (44.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (23,27) and color cyan and layers
  _0: a rectangle with size (6,6) and color red and mask Full at (9,6)
  _01: a rectangle with size (16,18) and color green and mask Full at (2,3)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN eb5a1d5d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (13,15) and color pink and mask Full at (3,4)
  _01: a rectangle with size (22,25) and color grey and mask Full at (0,0)
diff: 
delta:
   (112.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (1,1)
  _01: a rectangle with size (3,3) and color grey and mask Full at (0,0)
diff: 
delta:
   (40.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (22,25) and color black and layers
  _0: a rectangle with size (13,15) and color pink and mask Full at (3,4)
  _01: a rectangle with size (22,25) and color grey and mask Full at (0,0)
diff: 
delta:
! size mismatch, 10x10 instead of 3x3

TRAIN eb5a1d5d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (9,9) and color red and mask Full at (5,5)
  _01: a rectangle with size (14,14) and color cyan and mask Full at (3,3)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
   (527.4 bits)
data: a background with size (7,7) and color green and layers
  _0: a rectangle with size (3,3) and color red and mask Full at (2,2)
  _01: a rectangle with size (5,5) and color cyan and mask Full at (1,1)
diff: 
delta: (3,3)=1 
   (82.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (21,22) and color green and layers
  _0: a rectangle with size (9,9) and color red and mask Full at (5,5)
  _01: a rectangle with size (14,14) and color cyan and mask Full at (3,3)
diff: 
delta: (6,8)=1  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (7,8)=1  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (8,8)=1  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1 
! size mismatch, 10x10 instead of 7x7

TRAIN eb5a1d5d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (26,27) and color red and layers
  _0: a rectangle with size (14,14) and color green and mask Full at (7,6)
  _01: a rectangle with size (19,20) and color blue and mask Full at (5,3)
diff: 
delta: (10,9)=8  (10,10)=8  (10,11)=8  (10,12)=8  (10,13)=8  (10,14)=8  (10,15)=8  (10,16)=8  (10,17)=8  (11,9)=8  (11,10)=8  (11,11)=8  (11,12)=2  (11,13)=2  (11,14)=2  (11,15)=2  (11,16)=8  (11,17)=8  (12,9)=8  (12,10)=8  (12,11)=8  (12,12)=2  (12,13)=2  (12,14)=2  (12,15)=2  (12,16)=8  (12,17)=8  (13,9)=8  (13,10)=8  (13,11)=8  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (13,16)=8  (13,17)=8  (14,9)=8  (14,10)=8  (14,11)=8  (14,12)=2  (14,13)=2  (14,14)=2  (14,15)=2  (14,16)=8  (14,17)=8  (15,9)=8  (15,10)=8  (15,11)=8  (15,12)=8  (15,13)=8  (15,14)=8  (15,15)=8  (15,16)=8  (15,17)=8  (16,9)=8  (16,10)=8  (16,11)=8  (16,12)=8  (16,13)=8  (16,14)=8  (16,15)=8  (16,16)=8  (16,17)=8 
! size mismatch, 10x10 instead of 9x9
>> Trial 2
data: a background with size (26,27) and color red and layers
  _0: a rectangle with size (7,9) and color cyan and mask Full at (10,9)
  _01: a rectangle with size (19,20) and color blue and mask Full at (5,3)
diff: 
delta: (7,6)=3  (7,7)=3  (7,8)=3  (7,9)=3  (7,10)=3  (7,11)=3  (7,12)=3  (7,13)=3  (7,14)=3  (7,15)=3  (7,16)=3  (7,17)=3  (7,18)=3  (7,19)=3  (8,6)=3  (8,7)=3  (8,8)=3  (8,9)=3  (8,10)=3  (8,11)=3  (8,12)=3  (8,13)=3  (8,14)=3  (8,15)=3  (8,16)=3  (8,17)=3  (8,18)=3  (8,19)=3  (9,6)=3  (9,7)=3  (9,8)=3  (9,9)=3  (9,10)=3  (9,11)=3  (9,12)=3  (9,13)=3  (9,14)=3  (9,15)=3  (9,16)=3  (9,17)=3  (9,18)=3  (9,19)=3  (10,6)=3  (10,7)=3  (10,8)=3  (10,18)=3  (10,19)=3  (11,6)=3  (11,7)=3  (11,8)=3  (11,12)=2  (11,13)=2  (11,14)=2  (11,15)=2  (11,18)=3  (11,19)=3  (12,6)=3  (12,7)=3  (12,8)=3  (12,12)=2  (12,13)=2  (12,14)=2  (12,15)=2  (12,18)=3  (12,19)=3  (13,6)=3  (13,7)=3  (13,8)=3  (13,12)=2  (13,13)=2  (13,14)=2  (13,15)=2  (13,18)=3  (13,19)=3  (14,6)=3  (14,7)=3  (14,8)=3  (14,12)=2  (14,13)=2  (14,14)=2  (14,15)=2  (14,18)=3  (14,19)=3  (15,6)=3  (15,7)=3  (15,8)=3  (15,18)=3  (15,19)=3  (16,6)=3  (16,7)=3  (16,8)=3  (16,18)=3  (16,19)=3  (17,6)=3  (17,7)=3  (17,8)=3  (17,9)=3  (17,10)=3  (17,11)=3  (17,12)=3  (17,13)=3  (17,14)=3  (17,15)=3  (17,16)=3  (17,17)=3  (17,18)=3  (17,19)=3  (18,6)=3  (18,7)=3  (18,8)=3  (18,9)=3  (18,10)=3  (18,11)=3  (18,12)=3  (18,13)=3  (18,14)=3  (18,15)=3  (18,16)=3  (18,17)=3  (18,18)=3  (18,19)=3  (19,6)=3  (19,7)=3  (19,8)=3  (19,9)=3  (19,10)=3  (19,11)=3  (19,12)=3  (19,13)=3  (19,14)=3  (19,15)=3  (19,16)=3  (19,17)=3  (19,18)=3  (19,19)=3  (20,6)=3  (20,7)=3  (20,8)=3  (20,9)=3  (20,10)=3  (20,11)=3  (20,12)=3  (20,13)=3  (20,14)=3  (20,15)=3  (20,16)=3  (20,17)=3  (20,18)=3  (20,19)=3 
! size mismatch, 10x10 instead of 9x9

TEST eb5a1d5d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 6.6 sec (6.6 sec/task)
bits-train-error = 1681.9 bits (1681.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-23] Checking task ec883f72.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18253.5 = 18269.2
DL output with Mo: L = 15.6 + 21478.8 = 21494.4
DL input+output M: L = 31.2 + 39732.3 = 39763.5

# learning a model for train pairs
2.000	
1.456	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.900	OUT OBJECT at ^.layer_0: ^.layer_0
0.697	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.450	OUT OBJECT at ^.layer_01: ^.layer_01
0.395	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.359	OUT DEF: ^.size=^.size
0.349	OUT DEF: ^.layer_011.shape.color=^.layer_01.shape.color
0.342	IN  DEF: ^.layer_01.shape.mask=Full
0.336	IN  DEF: ^.color=black
0.332	OUT DEF: ^.color=black
0.330	OUT DEF: ^.layer_011.shape.size.i=^.layer_01.shape.size.i
0.320	OUT DEF: ^.layer_011.shape.size.j=^.layer_01.shape.size.i
0.311	OUT DEF: ^.layer_011.pos.j=right(^.layer_0) + 1

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: ^.layer_01
  _011: a rectangle with size (^.layer_01.shape.size.i,^.layer_01.shape.size.i) and color ^.layer_01.shape.color and mask ? at (?,right(^.layer_0) + 1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Full at (?,?)

DL input  with Mi: L = 80.4 + 4303.5 = 4383.8
DL output with Mo: L = 96.7 + 1432.8 = 1529.6
DL input+output M: L = 177.1 + 5736.3 = 5913.4

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
   (95.4 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
  _011: a rectangle with size (2,2) and color green and mask Even Checkboard at (4,4)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Full (and Border) at (0,0)
  _01: a rectangle with size (4,4) and color brown and mask ...x|...x|...x|xxxx at (0,0)
diff:   ^.layer_01.shape.mask
delta:
! 13 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (1,4) and color brown and mask Full at (3,0)
  _01: a rectangle with size (2,2) and color green and mask Full at (0,0)
diff: 
delta: (0,3)=9# (1,3)=9# (2,3)=9#
! 9 wrong pixels (generated / expected)

TRAIN ec883f72.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
diff: 
delta:
   (93.2 bits)
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _011: a rectangle with size (1,1) and color pink and mask Full at (3,7)
diff: 
delta: (3,1)=6  (4,0)=6 
   (60.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
  _01: a rectangle with size (1,1) and color pink and mask Full at (0,4)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (1,1) and color pink and mask Full at (0,4)
  _01: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
diff:   ^.layer_01.shape.mask
delta:
! 8 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (8,8) and color black and layers
  _0: a rectangle with size (3,1) and color cyan and mask Full at (0,2)
  _01: a rectangle with size (3,5) and color cyan and mask x...x|x...x|xxxxx at (0,2)
diff:   ^.layer_01.shape.mask
delta: (0,4)=6 
! 9 wrong pixels (generated / expected)

TRAIN ec883f72.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
diff: 
delta:
   (109.7 bits)
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
  _011: a rectangle with size (2,2) and color red and mask Odd Checkboard at (3,7)
diff: 
delta: (4,0)=2 
   (39.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
  _01: a rectangle with size (2,2) and color red and mask Full at (7,3)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (7,3)
  _01: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
diff:   ^.layer_01.shape.mask
delta:
! 18 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,1) and color yellow and mask Full at (5,1)
  _01: a rectangle with size (4,6) and color yellow and mask xxxxxx|x....x|x....x|x....x at (5,1)
diff:   ^.layer_01.shape.mask
delta: (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
! 23 wrong pixels (generated / expected)

TRAIN ec883f72.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
diff: 
delta:
   (132.0 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _011: a rectangle with size (5,5) and color yellow and mask ....x|...x.|..x..|.x...|x.... at (0,6)
diff: 
delta:
   (30.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
  _01: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (7,6) and color grey and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x at (5,0)
diff:   ^.layer_01.shape.mask
delta:
! 46 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,4) and color yellow and mask Full at (7,0)
  _01: a rectangle with size (7,1) and color grey and mask Full at (5,5)
diff: 
delta: (5,0)=5# (5,1)=5# (5,2)=5# (5,3)=5# (5,4)=5#
! 50 wrong pixels (generated / expected)

TRAIN ec883f72.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,6) and color green and mask x....x|x....x|x....x|x....x|xxxxxx at (0,4)
  _01: a rectangle with size (3,2) and color yellow and mask Full at (0,6)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (0,6)
  _01: a rectangle with size (5,6) and color green and mask x....x|x....x|x....x|x....x|xxxxxx at (0,4)
diff:   ^.layer_01.shape.mask
delta:
! 20 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (5,1) and color green and mask Full at (0,4)
  _01: a rectangle with size (5,6) and color green and mask x....x|x....x|x....x|x....x|xxxxxx at (0,4)
diff:   ^.layer_01.shape.mask
delta: (0,6)=4  (0,7)=4  (1,6)=4  (1,7)=4  (2,6)=4  (2,7)=4 
! 22 wrong pixels (generated / expected)

TEST ec883f72.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.5 sec (3.5 sec/task)
bits-train-error = 1432.8 bits (1432.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-22] Checking task ecdecbb3.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18645.5 = 18661.1
DL output with Mo: L = 15.6 + 33729.4 = 33745.0
DL input+output M: L = 31.2 + 52374.9 = 52406.2

# learning a model for train pairs
2.000	
1.527	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.113	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.799	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.554	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.434	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.415	OUT DEF: ^.size=^.size
0.398	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.384	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
0.375	IN  DEF: ^.layer_0.shape.color=cyan
0.366	IN  DEF: ^.layer_011.shape.color=red
0.358	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.352	OUT DEF: ^.layer_0111.shape.size.i=middle(^.layer_01) / 2
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _0: a rectangle with size (?,^.layer_0.shape.size.j) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (middle(^.layer_01) / 2,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color cyan and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a point with color red at (?,?)

DL input  with Mi: L = 105.6 + 3250.1 = 3355.8
DL output with Mo: L = 160.1 + 5654.8 = 5814.9
DL input+output M: L = 265.7 + 8905.0 = 9170.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,8)
  _011: a point with color red at (2,2)
diff: 
delta:
   (93.0 bits)
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (3,13) and color cyan and mask .xxx...xxx...|xx.xxxxx.xxxx|.xxx...xxx... at (5,0)
  _01: a rectangle with size (3,1) and color red and mask Full at (2,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (6,2)
  _0111: a rectangle with size (5,1) and color red and mask Full at (6,8)
diff: 
delta:
   (154.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _011: a point with color red at (10,8)
diff: 
delta:
! 57 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _01: a rectangle with size (1,1) and color red and mask Full at (10,8)
  _011: a point with color red at (2,2)
diff: 
delta:
! 63 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,2)
  _01: a rectangle with size (1,13) and color cyan and mask Full at (6,0)
  _011: a point with color red at (10,8)
diff:   ^.layer_0.shape.color
delta:
! 37 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
  _011: a point with color red at (4,8)
diff: 
delta:
   (102.8 bits)
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (13,3) and color cyan and mask .x.|.x.|.x.|xxx|x.x|xxx|.x.|.x.|.x.|.x.|.x.|.x.|.x. at (0,13)
  _011: a rectangle with size (1,10) and color red and mask Full at (4,5)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (3,2)
diff: 
delta: (4,3)=2 
   (206.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,18) and color black and layers
  _0: a rectangle with size (13,1) and color cyan and mask Full at (0,3)
  _01: a rectangle with size (13,1) and color cyan and mask Full at (0,14)
  _011: a point with color red at (4,8)
diff: 
delta:
! 52 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
  _011: a point with color red at (2,8)
diff: 
delta: (10,4)=2 
   (129.2 bits)
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (3,12) and color cyan and mask ...xxx.xxx..|xxxx.xxx.xxx|...xxx.xxx.. at (6,0)
  _01: a rectangle with size (3,12) and color cyan and mask ...xxx......|xxxx.xxxxxxx|...xxx...... at (12,0)
  _011: a rectangle with size (6,1) and color red and mask Full at (2,8)
  _0111: a rectangle with size (7,1) and color red and mask Full at (7,4)
diff: 
delta:
   (204.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
  _011: a point with color red at (2,8)
diff: 
delta: (10,4)=2 
! 83 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (1,12) and color cyan and mask Full at (13,0)
  _01: a rectangle with size (1,12) and color cyan and mask Full at (7,0)
  _011: a point with color red at (2,8)
diff: 
delta: (10,4)=2 
! 77 wrong pixels (generated / expected)

TRAIN ecdecbb3.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,19) and color black and layers
  _0: a rectangle with size (17,1) and color cyan and mask Full at (0,4)
  _01: a rectangle with size (17,1) and color cyan and mask Full at (0,12)
  _011: a point with color red at (1,15)
diff: 
delta: (2,1)=2  (8,8)=2  (14,16)=2 
! 83 wrong pixels (generated / expected)

TEST ecdecbb3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.6 sec (26.6 sec/task)
bits-train-error = 5654.8 bits (5654.8 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-21] Checking task ed36ccf7.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4048.3 = 4063.9
DL output with Mo: L = 15.6 + 4048.3 = 4063.9
DL input+output M: L = 31.2 + 8096.5 = 8127.8

# learning a model for train pairs
2.000	
1.538	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.076	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.946	OUT DEF: ^.size=^.size
0.858	OUT DEF: ^.color=^.color
0.802	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.747	IN  DEF: ^.layer_0.shape.color=black
0.694	OUT DEF: ^.layer_0.shape.size.i=^.layer_0.shape.size.j
0.645	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.i
0.608	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.i

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _0: a rectangle with size (^.layer_0.shape.size.j,^.layer_0.shape.size.i) and color ^.layer_0.shape.color and mask ? at (?,^.layer_0.pos.i)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color black and mask ? at (?,?)

DL input  with Mi: L = 51.2 + 1911.2 = 1962.3
DL output with Mo: L = 59.3 + 447.7 = 507.0
DL input+output M: L = 110.4 + 2358.9 = 2469.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (0,1)
diff: 
delta:
   (41.7 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,1) and color black and mask Full at (0,0)
diff: 
delta:
   (7.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (0,1)
diff: 
delta:
correct output grid

TRAIN ed36ccf7.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|..x at (1,0)
diff: 
delta:
   (52.8 bits)
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (3,2) and color black and mask xx|x.|x. at (0,1)
diff: 
delta:
   (15.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,3) and color black and mask xxx|..x at (1,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (1,3) and color black and mask Full at (1,0)
diff: 
delta: (2,2)=0 
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color pink and layers
  _0: a rectangle with size (2,1) and color black and mask Full at (1,2)
diff: 
delta: (1,0)=0  (1,1)=0 
! 2 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (0,0)
diff: 
delta:
   (43.7 bits)
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (1,0)
diff: 
delta:
   (7.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color brown and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (0,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|..x|xxx at (0,0)
diff:   ^.layer_0.shape.color
delta:
! 4 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,3) and color brown and mask Full at (2,0)
diff:   ^.layer_0.shape.color
delta: (0,2)=9# (1,2)=9#
! 2 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color black and mask .x|xx|x. at (0,0)
diff: 
delta:
   (52.8 bits)
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (2,3) and color black and mask xx.|.xx at (1,0)
diff: 
delta:
   (15.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (3,2) and color black and mask .x|xx|x. at (0,0)
diff: 
delta:
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,2) and color red and mask .x|.x|xx at (0,1)
diff:   ^.layer_0.shape.color
delta: (0,0)=2 
! 3 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color red and layers
  _0: a rectangle with size (1,2) and color black and mask Full at (1,0)
diff: 
delta: (0,1)=0  (2,0)=0 
! 4 wrong pixels (generated / expected)

TRAIN ed36ccf7.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask x..|.xx at (1,0)
diff:   ^.layer_0.shape.color
delta:
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (2,1)
diff:   ^.layer_0.shape.color
delta: (1,0)=5#
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color grey and mask Full at (1,0)
diff:   ^.layer_0.shape.color
delta: (2,1)=5# (2,2)=5#
! 4 wrong pixels (generated / expected)

TEST ed36ccf7.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.9 sec (0.9 sec/task)
bits-train-error = 447.7 bits (447.7 bits/task)
acc-train-micro = 0.25 tasks (25.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.25
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-20] Checking task ef135b50.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 28186.3 = 28201.9
DL output with Mo: L = 15.6 + 34429.6 = 34445.2
DL input+output M: L = 31.2 + 62615.9 = 62647.2

# learning a model for train pairs
2.000	
1.471	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.234	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.022	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.904	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.788	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.648	OUT OBJECT at ^.layer_00: ^.layer_0
0.540	IN  OBJECT at ^.layer_00: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.441	OUT OBJECT at ^.layer_001: ^.layer_00
0.423	OUT DEF: ^.size=^.size
0.418	OUT DEF: ^.layer_01.shape.size.j=^.layer_01.shape.size.i / 2
0.413	OUT DEF: ^.layer_01.shape.size.i=area(^.layer_0.shape) / 2
0.408	OUT DEF: ^.layer_01.shape.color=^.layer_01.shape.color
0.403	OUT DEF: ^.layer_01.pos.j=^.layer_01.pos.j
0.398	OUT DEF: ^.layer_011.shape.size.j=span(^.layer_01.pos.j, ^.layer_00.pos.j) - 3
0.394	OUT DEF: ^.layer_0.pos.j=^.layer_00.pos.j / 2
0.390	OUT DEF: ^.color=^.color
0.386	OUT DEF: ^.layer_011.pos.i=max(^.layer_01.pos.i, ^.layer_00.pos.i)
0.382	IN  DEF: ^.layer_00.shape.mask=Full
0.379	IN  DEF: ^.layer_0.shape.mask=Full
0.376	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.373	OUT DEF: ^.layer_01.shape.mask=Full
0.370	OUT DEF: ^.layer_011.shape.mask=Full

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ^.color and layers
  _00: ^.layer_0
  _001: ^.layer_00
  _0: a rectangle with size (?,?) and color ? and mask ^.layer_0.shape.mask at (?,^.layer_00.pos.j / 2)
  _01: a rectangle with size (area(^.layer_0.shape) / 2,^.layer_01.shape.size.i / 2) and color ^.layer_01.shape.color and mask Full at (?,^.layer_01.pos.j)
  _011: a rectangle with size (?,span(^.layer_01.pos.j, ^.layer_00.pos.j) - 3) and color ? and mask Full at (max(^.layer_01.pos.i, ^.layer_00.pos.i),?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _00: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 113.3 + 6678.8 = 6792.0
DL output with Mo: L = 263.9 + 4194.1 = 4458.0
DL input+output M: L = 377.2 + 10872.9 = 11250.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _0: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _01: a rectangle with size (4,2) and color red and mask Full (and Border) at (6,3)
diff: 
delta:
   (115.4 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _001: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _0: a rectangle with size (2,4) and color brown and mask Full at (3,3)
  _01: a rectangle with size (4,2) and color red and mask Full at (6,3)
  _011: a rectangle with size (2,2) and color brown and mask Full at (6,5)
diff: 
delta:
   (46.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _0: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _01: a rectangle with size (4,2) and color red and mask Full (and Border) at (6,3)
diff: 
delta:
! 30 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _0: a rectangle with size (4,2) and color red and mask Full at (6,3)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,0)
diff: 
delta:
! 25 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (3,3) and color red and mask Full at (2,0)
  _0: a rectangle with size (5,2) and color red and mask Full at (3,7)
  _01: a rectangle with size (4,2) and color red and mask Full (and Border) at (6,3)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TRAIN ef135b50.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _0: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _01: a rectangle with size (4,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta: (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
   (321.1 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _001: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _0: a rectangle with size (4,2) and color red and mask Full at (5,3)
  _01: a rectangle with size (4,2) and color red and mask Full at (0,0)
  _011: a rectangle with size (2,5) and color brown and mask Full at (2,2)
diff: 
delta: (5,5)=9# (5,6)=9# (8,5)=9#
   (124.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _0: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _01: a rectangle with size (4,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta: (5,3)=2  (5,4)=2  (6,3)=2  (6,4)=2  (7,3)=2  (7,4)=2  (8,3)=2  (8,4)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (4,3) and color red and mask Full at (2,7)
  _0: a rectangle with size (2,4) and color red and mask Full at (8,6)
  _01: a rectangle with size (4,2) and color red and mask Full (and Border) at (5,3)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (3,0)=2  (3,1)=2 
! 37 wrong pixels (generated / expected)

TRAIN ef135b50.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color red and layers
  _00: a rectangle with size (4,2) and color black and mask Full at (2,8)
  _0: a rectangle with size (1,6) and color black and mask Full at (0,0)
  _01: a rectangle with size (10,10) and color black and mask xxxxxx....|....xx....|....xxxxxx|....x...xx|xxxxx...xx|xxxxx...xx|xxxxx...x.|....x...x.|....x...x.|....xxxxx. at (0,0)
diff: 
delta:
   (231.3 bits)
data: a background with size (10,10) and color red and layers
  _00: a rectangle with size (1,6) and color black and mask Full at (0,0)
  _001: a rectangle with size (4,2) and color black and mask Full at (2,8)
  _0: a rectangle with size (1,5) and color black and mask Full at (9,4)
  _01: a rectangle with size (3,5) and color black and mask Full at (4,0)
  _011: a rectangle with size (1,6) and color black and mask Full at (2,4)
diff: 
delta: (1,4)=9# (1,5)=9# (3,4)=9# (6,8)=9# (7,4)=9# (7,8)=9# (8,4)=9# (8,8)=9#
   (248.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color red and layers
  _00: a rectangle with size (4,2) and color black and mask Full at (2,8)
  _0: a rectangle with size (1,6) and color black and mask Full at (0,0)
  _01: a rectangle with size (10,10) and color black and mask xxxxxx....|....xx....|....xxxxxx|....x...xx|xxxxx...xx|xxxxx...xx|xxxxx...x.|....x...x.|....x...x.|....xxxxx. at (0,0)
diff: 
delta:
! 44 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color red and layers
  _00: a rectangle with size (4,2) and color black and mask Full at (2,8)
  _0: a rectangle with size (3,2) and color black and mask Full at (0,4)
  _01: a rectangle with size (10,10) and color black and mask xxxxxx....|....xx....|....xxxxxx|....x...xx|xxxxx...xx|xxxxx...xx|xxxxx...x.|....x...x.|....x...x.|....xxxxx. at (0,0)
diff: 
delta:
! 43 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color red and layers
  _00: a rectangle with size (8,1) and color black and mask Full at (2,8)
  _0: a rectangle with size (1,6) and color black and mask Full at (0,0)
  _01: a rectangle with size (10,10) and color black and mask xxxxxx....|....xx....|....xxxxxx|....x...xx|xxxxx...xx|xxxxx...xx|xxxxx...x.|....x...x.|....x...x.|....xxxxx. at (0,0)
diff: 
delta:
! 47 wrong pixels (generated / expected)

TRAIN ef135b50.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,3) and color red and mask Full at (3,1)
  _0: a rectangle with size (3,4) and color red and mask Full at (1,6)
  _01: a rectangle with size (2,4) and color red and mask Full (and Border) at (5,5)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (5,3) and color red and mask Full at (3,1)
  _0: a rectangle with size (2,4) and color red and mask Full at (5,5)
  _01: a rectangle with size (3,4) and color red and mask Full at (1,6)
diff: 
delta: (0,0)=2  (0,1)=2  (0,2)=2  (1,0)=2  (1,1)=2  (1,2)=2 
! 25 wrong pixels (generated / expected)

TEST ef135b50.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 14.6 sec (14.6 sec/task)
bits-train-error = 4194.1 bits (4194.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-19] Checking task f15e1fac.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 4967.9 = 4983.5
DL output with Mo: L = 15.6 + 35954.6 = 35970.2
DL input+output M: L = 31.2 + 40922.5 = 40953.7

# learning a model for train pairs
2.000	
1.539	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.317	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.253	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.159	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.110	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.060	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.005	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.972	IN  DEF: ^.layer_0.shape.color=cyan
0.938	IN  DEF: ^.layer_01.shape.color=cyan
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color cyan at (?,?)
  _01: a point with color cyan at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 120.1 + 3294.9 = 3414.9
DL output with Mo: L = 113.3 + 8991.3 = 9104.6
DL input+output M: L = 233.3 + 12286.2 = 12519.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (17,12) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (0,5)
  _011: a point with color cyan at (0,7)
  _0111: a point with color cyan at (0,9)
  _01111: a point with color red at (4,0)
diff: 
delta: (10,0)=2 
   (130.9 bits)
data: a background with size (17,12) and color black and layers
  _0: a rectangle with size (17,7) and color cyan and mask x.x.x..|x.x.x..|x.x.x..|x.x.x..|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|.x.x.x.|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x|..x.x.x at (0,5)
  _01: a rectangle with size (17,3) and color cyan and mask x..|x..|x..|x..|.x.|.x.|.x.|.x.|.x.|.x.|..x|..x|..x|..x|..x|..x|..x at (0,1)
  _011: a rectangle with size (1,1) and color red and mask Full at (4,0)
diff: 
delta: (10,0)=2 
   (333.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,12) and color black and layers
  _0: a point with color cyan at (0,1)
  _01: a point with color cyan at (0,5)
  _011: a point with color cyan at (0,7)
  _0111: a point with color cyan at (0,9)
  _01111: a point with color red at (4,0)
diff: 
delta: (10,0)=2 
! size mismatch, 10x10 instead of 17x12

TRAIN f15e1fac.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (3,9)
  _0111: a point with color red at (7,9)
  _01111: a point with color red at (11,9)
diff: 
delta:
   (99.2 bits)
data: a background with size (14,10) and color black and layers
  _0: a rectangle with size (14,4) and color cyan and mask ...x|...x|...x|..x.|..x.|..x.|..x.|.x..|.x..|.x..|.x..|x...|x...|x... at (0,3)
  _01: a rectangle with size (11,3) and color cyan and mask ..x|..x|..x|.x.|.x.|.x.|.x.|x..|x..|x..|x.. at (0,0)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,9)
diff: 
delta: (7,9)=2  (11,9)=2 
   (264.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,10) and color black and layers
  _0: a point with color cyan at (0,2)
  _01: a point with color cyan at (0,6)
  _011: a point with color red at (3,9)
  _0111: a point with color red at (7,9)
  _01111: a point with color red at (11,9)
diff: 
delta:
! size mismatch, 10x10 instead of 14x10

TRAIN f15e1fac.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color cyan at (6,0)
  _011: a point with color cyan at (9,0)
  _0111: a point with color red at (11,4)
  _01111: a point with color red at (11,8)
diff: 
delta:
   (99.4 bits)
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (0,0)
  _01: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (4,0)
  _011: a rectangle with size (3,12) and color cyan and mask ........xxxx|....xxxx....|xxxx........ at (7,0)
diff: 
delta: (11,4)=2  (11,8)=2 
   (300.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a point with color cyan at (2,0)
  _01: a point with color cyan at (6,0)
  _011: a point with color cyan at (9,0)
  _0111: a point with color red at (11,4)
  _01111: a point with color red at (11,8)
diff: 
delta:
! size mismatch, 10x10 instead of 12x12

TRAIN f15e1fac.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,17) and color black and layers
  _0: a point with color cyan at (2,16)
  _01: a point with color cyan at (5,16)
  _011: a point with color cyan at (8,16)
  _0111: a point with color cyan at (10,16)
  _01111: a point with color red at (11,2)
diff: 
delta: (11,6)=2  (11,11)=2 
! size mismatch, 10x10 instead of 12x17

TEST f15e1fac.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 24.5 sec (24.5 sec/task)
bits-train-error = 8991.3 bits (8991.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-18] Checking task f1cefba8.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 101890.6 = 101906.2
DL output with Mo: L = 15.6 + 109854.4 = 109870.1
DL input+output M: L = 31.2 + 211745.1 = 211776.3

# learning a model for train pairs
2.000	
1.381	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.836	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.432	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.296	OUT OBJECT at ^.layer_01: ^.layer_01
0.244	OUT OBJECT at ^.layer_010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.228	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: ^.layer_01
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 5097.2 = 5178.4
DL output with Mo: L = 116.9 + 19314.7 = 19431.6
DL input+output M: L = 198.1 + 24411.9 = 24610.0

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (11,8) and color red and mask ....x...|xxxxxxx.|xxxxxxx.|xxxxxxxx|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|.x...... at (3,3)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
diff: 
delta:
   (184.3 bits)
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (6,7) and color red and mask Full at (7,3)
  _010: a rectangle with size (2,7) and color red and mask Full (and Border) at (4,3)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
  _011: a rectangle with size (19,1) and color red and mask Full at (0,4)
diff: 
delta: (0,7)=2  (1,7)=2  (4,4)=8  (4,7)=8  (5,4)=8  (5,7)=8  (6,0)=2  (6,12)=2  (7,4)=8  (7,7)=8  (8,4)=8  (8,7)=8  (9,4)=8  (9,7)=8  (10,4)=8  (10,7)=8  (11,4)=8  (11,7)=8  (12,4)=8  (12,7)=8  (15,7)=2  (16,7)=2  (17,7)=2  (18,7)=2 
   (774.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (11,8) and color red and mask ....x...|xxxxxxx.|xxxxxxx.|xxxxxxxx|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|xxxxxxx.|.x...... at (3,3)
  _01: a rectangle with size (13,11) and color cyan and mask Full at (2,1)
diff: 
delta:
! size mismatch, 10x10 instead of 19x13
>> Trial 2
data: a background with size (19,13) and color black and layers
  _0: a rectangle with size (13,11) and color cyan and mask xxxxxxxxxxx|xxxxxx.xxxx|xx.......xx|xx.......xx|xx........x|xx.......xx|xx.......xx|xx.......xx|xx.......xx|xx.......xx|xx.......xx|xxx.xxxxxxx|xxxxxxxxxxx at (2,1)
  _01: a rectangle with size (11,8) and color red and mask Full at (3,3)
diff: 
delta:
! size mismatch, 10x10 instead of 19x13

TRAIN f1cefba8.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..x......|xxxxxxxx.|xxxxxxxxx|xxxxxxxx.|xxxxxxxx.|....x.... at (5,4)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
diff: 
delta:
   (160.7 bits)
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (2,12) and color blue and mask Full (and Border) at (4,2)
  _010: a rectangle with size (2,8) and color yellow and mask Full (and Border) at (8,4)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
  _011: a rectangle with size (15,1) and color yellow and mask Full at (0,6)
diff: 
delta: (0,8)=4  (1,8)=4  (2,8)=4  (3,8)=4  (6,4)=4  (6,5)=4  (6,7)=4  (6,9)=4  (6,10)=4  (6,11)=4  (7,0)=4  (7,1)=4  (7,14)=4  (7,15)=4  (7,16)=4  (8,6)=1  (8,8)=1  (9,6)=1  (9,8)=1  (12,8)=4  (13,8)=4  (14,8)=4 
   (721.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (6,9) and color yellow and mask ..x......|xxxxxxxx.|xxxxxxxxx|xxxxxxxx.|xxxxxxxx.|....x.... at (5,4)
  _01: a rectangle with size (8,12) and color blue and mask Full at (4,2)
diff: 
delta:
! size mismatch, 10x10 instead of 15x17
>> Trial 2
data: a background with size (15,17) and color black and layers
  _0: a rectangle with size (8,12) and color blue and mask xxxxxxxxxxxx|xxxx.xxxxxxx|xx........xx|xx.........x|xx........xx|xx........xx|xxxxxx.xxxxx|xxxxxxxxxxxx at (4,2)
  _01: a rectangle with size (6,9) and color yellow and mask Full at (5,4)
diff: 
delta:
! size mismatch, 10x10 instead of 15x17

TRAIN f1cefba8.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (5,6)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
diff: 
delta: (4,11)=3  (8,5)=3 
   (164.6 bits)
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (8,5) and color green and mask Full at (5,6)
  _010: a rectangle with size (8,2) and color green and mask Full (and Border) at (5,12)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
  _011: a rectangle with size (1,18) and color green and mask Full at (8,0)
diff: 
delta: (0,11)=3  (1,11)=3  (2,11)=3  (8,6)=2  (8,7)=2  (8,8)=2  (8,9)=2  (8,10)=2  (8,12)=2  (8,13)=2  (15,11)=3 
   (435.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (8,8) and color green and mask Full at (5,6)
  _01: a rectangle with size (12,12) and color red and mask Full at (3,4)
diff: 
delta: (4,11)=3  (8,5)=3 
! size mismatch, 10x10 instead of 16x18
>> Trial 2
data: a background with size (16,18) and color black and layers
  _0: a rectangle with size (12,12) and color red and mask xxxxxxxxxxxx|xxxxxxx.xxxx|xx........xx|xx........xx|xx........xx|x.........xx|xx........xx|xx........xx|xx........xx|xx........xx|xxxxxxxxxxxx|xxxxxxxxxxxx at (3,4)
  _01: a rectangle with size (9,9) and color green and mask Full at (4,5)
diff: 
delta:
! size mismatch, 10x10 instead of 16x18

TRAIN f1cefba8.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (10,11) and color cyan and mask ....x...x..|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|xxxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx|.xxxxxxxxxx at (4,2)
  _01: a rectangle with size (13,14) and color blue and mask Full at (3,1)
diff: 
delta:
! size mismatch, 10x10 instead of 19x18
>> Trial 2
data: a background with size (19,18) and color black and layers
  _0: a rectangle with size (13,14) and color blue and mask xxxxxxxxxxxxxx|xxxxx.xxx.xxxx|xx..........xx|xx..........xx|xx..........xx|xx..........xx|x...........xx|xx..........xx|xx..........xx|xx..........xx|xx..........xx|xxxxxxxxxxxxxx|xxxxxxxxxxxxxx at (3,1)
  _01: a rectangle with size (10,11) and color cyan and mask Full at (4,2)
diff: 
delta:
! size mismatch, 10x10 instead of 19x18

TEST f1cefba8.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.1 sec (27.1 sec/task)
bits-train-error = 19314.7 bits (19314.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-17] Checking task f25fbde4.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5246.2 = 5261.8
DL output with Mo: L = 15.6 + 14204.4 = 14220.0
DL input+output M: L = 31.2 + 19450.7 = 19481.9

# learning a model for train pairs
2.000	
1.221	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.604	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.567	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size * 2
0.531	OUT DEF: ^.size=^.layer_0.shape.size * 2
0.499	IN  DEF: ^.layer_0.shape.color=yellow
0.477	OUT DEF: ^.layer_0.pos='(0,0)
0.463	IN  DEF: ^.color=black
0.451	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.446	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size * 2 and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size * 2 and color ^.layer_0.shape.color and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color yellow and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 1723.1 = 1773.4
DL output with Mo: L = 58.0 + 1491.1 = 1549.0
DL input+output M: L = 108.3 + 3214.2 = 3322.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask +-cross at (2,1)
diff: 
delta:
   (51.8 bits)
data: a background with size (6,8) and color black and layers
  _0: a rectangle with size (6,8) and color yellow and mask ..xxxx..|..xxxx..|xxxxxxxx|xxxxxxxx|..xxxx..|..xxxx.. at (0,0)
diff: 
delta:
   (51.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,4) and color yellow and mask +-cross at (2,1)
diff: 
delta:
! 16 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,2) and color yellow and mask Full (and Border) at (2,2)
diff: 
delta: (3,1)=4  (3,4)=4 
! size mismatch, 6x4 instead of 6x8
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,4) and color yellow and mask Full at (3,1)
diff: 
delta: (2,2)=4  (2,3)=4  (4,2)=4  (4,3)=4 
! size mismatch, 2x8 instead of 6x8

TRAIN f25fbde4.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xx.|..x at (1,3)
diff: 
delta:
   (58.2 bits)
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (6,6) and color yellow and mask ..xx..|..xx..|xxxx..|xxxx..|....xx|....xx at (0,0)
diff: 
delta:
   (42.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask .x.|xx.|..x at (1,3)
diff: 
delta:
! 20 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (2,3)
diff: 
delta: (1,4)=4  (3,5)=4 
! size mismatch, 2x4 instead of 6x6
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (2,1) and color yellow and mask Full at (1,4)
diff: 
delta: (2,3)=4  (3,5)=4 
! size mismatch, 4x2 instead of 6x6

TRAIN f25fbde4.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask .x.|xx.|.x.|.xx at (4,1)
diff: 
delta:
   (62.3 bits)
data: a background with size (8,6) and color black and layers
  _0: a rectangle with size (8,6) and color yellow and mask ..xx..|..xx..|xxxx..|xxxx..|..xx..|..xx..|..xxxx|..xxxx at (0,0)
diff: 
delta:
   (55.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask .x.|xx.|.x.|.xx at (4,1)
diff: 
delta:
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (4,1) and color yellow and mask Full at (4,2)
diff: 
delta: (5,1)=4  (7,3)=4 
! size mismatch, 8x2 instead of 8x6
>> Trial 3
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (1,2) and color yellow and mask Full at (5,1)
diff: 
delta: (4,2)=4  (6,2)=4  (7,2)=4  (7,3)=4 
! size mismatch, 2x4 instead of 8x6

TRAIN f25fbde4.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (9,9) and color black and layers
  _0: a rectangle with size (3,5) and color yellow and mask Odd Checkboard at (1,3)
diff: 
delta:
! 32 wrong pixels (generated / expected)

TEST f25fbde4.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.2 sec (0.2 sec/task)
bits-train-error = 1491.1 bits (1491.1 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-16] Checking task f25ffba3.json: 2 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5963.0 = 5978.6
DL output with Mo: L = 15.6 + 11423.0 = 11438.6
DL input+output M: L = 31.2 + 17385.9 = 17417.1

# learning a model for train pairs
2.000	
1.644	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.352	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.183	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.038	OUT OBJECT at ^.layer_01: ^.layer_01
0.947	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.843	OUT OBJECT at ^.layer_011: ^.layer_011
0.755	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.709	OUT OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.678	OUT DEF: ^.size=^.size
0.658	OUT DEF: ^.layer_01111.shape.size=^.layer_011.shape.size
0.641	OUT DEF: ^.layer_0111.pos='(0,0)
0.624	OUT DEF: ^.layer_0.shape.size.i=^.size.i
0.607	OUT DEF: ^.layer_0111.shape.size=^.layer_01.shape.size
0.596	IN  DEF: ^.layer_0.shape.mask=Full
0.586	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
0.577	OUT DEF: ^.layer_0.pos.i='0
0.567	OUT DEF: ^.layer_01111.pos.i='0
0.558	OUT DEF: ^.layer_01111.shape.color=^.layer_011.shape.color
0.549	OUT DEF: ^.layer_0111.shape.color=^.layer_01.shape.color
0.541	IN  DEF: ^.color=black
0.533	OUT DEF: ^.layer_0.pos.j=^.layer_0.pos.j
0.526	OUT DEF: ^.layer_01111.pos.j=^.layer_011.pos.j
0.520	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.514	OUT DEF: ^.layer_0.shape.size.j=^.layer_0.shape.size.j
0.510	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size (^.size.i,^.layer_0.shape.size.j) and color ^.layer_0.shape.color and mask ^.layer_0.shape.mask at ('0,^.layer_0.pos.j)
  _01: ^.layer_01
  _011: ^.layer_011
  _0111: a rectangle with size ^.layer_01.shape.size and color ^.layer_01.shape.color and mask ? at '(0,0)
  _01111: a rectangle with size ^.layer_011.shape.size and color ^.layer_011.shape.color and mask ? at ('0,^.layer_011.pos.j)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 112.4 + 2452.5 = 2564.9
DL output with Mo: L = 153.4 + 774.4 = 927.8
DL input+output M: L = 265.9 + 3226.9 = 3492.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color brown and mask Full at (5,3)
  _01: a rectangle with size (2,1) and color red and mask Full at (8,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (6,2)
diff: 
delta: (9,1)=4 
   (126.9 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (10,1) and color brown and mask Full at (0,3)
  _01: a rectangle with size (2,1) and color red and mask Full at (8,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (6,2)
  _0111: a rectangle with size (2,1) and color red and mask Full at (0,0)
  _01111: a rectangle with size (4,1) and color green and mask Full at (0,2)
diff: 
delta: (0,1)=4  (9,1)=4 
   (57.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color brown and mask Full at (5,3)
  _01: a rectangle with size (4,1) and color green and mask Full at (6,2)
  _011: a rectangle with size (2,1) and color red and mask Full at (8,0)
diff: 
delta: (9,1)=4 
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color brown and mask Full at (5,3)
  _01: a rectangle with size (2,1) and color red and mask Full at (8,0)
  _011: a rectangle with size (4,1) and color green and mask Full at (6,2)
diff: 
delta: (9,1)=4 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (4,1) and color green and mask Full at (6,2)
  _01: a rectangle with size (5,1) and color brown and mask Full at (5,3)
  _011: a rectangle with size (2,1) and color red and mask Full at (8,0)
diff: 
delta: (9,1)=4 
! 14 wrong pixels (generated / expected)

TRAIN f25ffba3.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (3,2) and color cyan and mask x.|.x|.x at (7,1)
diff: 
delta:
   (118.3 bits)
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (10,1) and color red and mask Full at (0,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (3,2) and color cyan and mask x.|.x|.x at (7,1)
  _0111: a rectangle with size (2,2) and color green and mask xx|.x at (0,0)
  _01111: a rectangle with size (3,2) and color cyan and mask .x|.x|x. at (0,1)
diff: 
delta:
   (20.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (3,2) and color cyan and mask x.|.x|.x at (7,1)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (5,3)
  _01: a rectangle with size (3,2) and color cyan and mask x.|.x|.x at (7,1)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
diff: 
delta:
! 7 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color red and mask Full at (5,3)
  _01: a rectangle with size (2,2) and color green and mask .x|xx at (8,0)
  _011: a rectangle with size (2,1) and color cyan and mask Full at (8,2)
diff: 
delta: (7,1)=8 
! 3 wrong pixels (generated / expected)

TRAIN f25ffba3.json/2: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (5,1)
  _01: a rectangle with size (4,1) and color orange and mask Full at (6,0)
  _011: a rectangle with size (2,2) and color green and mask x.|xx at (7,2)
diff: 
delta: (9,2)=4  (9,3)=4 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (5,1) and color blue and mask Full at (5,1)
  _01: a rectangle with size (2,2) and color green and mask x.|xx at (7,2)
  _011: a rectangle with size (4,1) and color orange and mask Full at (6,0)
diff: 
delta: (9,2)=4  (9,3)=4 
! 9 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,4) and color black and layers
  _0: a rectangle with size (4,1) and color orange and mask Full at (6,0)
  _01: a rectangle with size (5,1) and color blue and mask Full at (5,1)
  _011: a rectangle with size (2,2) and color green and mask x.|xx at (7,2)
diff: 
delta: (9,2)=4  (9,3)=4 
! 12 wrong pixels (generated / expected)

TEST f25ffba3.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 18.2 sec (18.2 sec/task)
bits-train-error = 774.4 bits (774.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-15] Checking task f2829549.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 18398.4 = 18414.0
DL output with Mo: L = 15.6 + 5184.4 = 5200.0
DL input+output M: L = 31.2 + 23582.9 = 23614.1

# learning a model for train pairs
2.000	
1.567	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.323	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.144	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.009	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.939	OUT DEF: ^.size.i=^.size.i
0.877	OUT DEF: ^.size.j=3
0.823	OUT DEF: ^.layer_0.shape.color=green
0.770	OUT DEF: ^.layer_0.shape.size.j=area(^.layer_01.shape) - 1
0.738	OUT DEF: ^.layer_0.pos.j=^.layer_01.shape.size.j / 2
0.714	OUT DEF: ^.color=black
0.707	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.size.i,3) and color black and layers
  _0: a rectangle with size (?,area(^.layer_01.shape) - 1) and color green and mask ? at (?,^.layer_01.shape.size.j / 2)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 112.4 + 7908.6 = 8021.0
DL output with Mo: L = 104.0 + 1307.5 = 1411.5
DL input+output M: L = 216.4 + 9216.1 = 9432.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _01: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
   (126.9 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (4,2) and color green and mask .x|xx|x.|.x at (0,1)
diff: 
delta:
   (25.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
diff: 
delta:
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask x..|x..|x.x|xx. at (0,4)
  _01: a rectangle with size (2,2) and color orange and mask xx|x. at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN f2829549.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
   (191.1 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (3,3) and color green and mask ..x|xxx|..x at (0,0)
diff: 
delta:
   (25.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
! 3 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color orange and mask xx.|.xx at (2,0)
  _01: a rectangle with size (2,2) and color grey and mask x.|xx at (2,4)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (0,1)=7# (0,4)=5#
! 3 wrong pixels (generated / expected)

TRAIN f2829549.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
diff: 
delta:
   (129.6 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask ..x|xx. at (2,0)
diff: 
delta: (1,0)=3 
   (45.2 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _01: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta:
! 8 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (3,3) and color grey and mask x..|.xx|xx. at (0,4)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (4,2) and color orange and mask xx|.x|x.|.x at (0,1)
diff: 
delta:
! 8 wrong pixels (generated / expected)

TRAIN f2829549.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|xxx at (0,4)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color orange and mask x.x|xx.|.x. at (0,0)
diff: 
delta: (3,4)=5# (3,6)=5#
   (174.2 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,3) and color green and mask Even Checkboard at (2,0)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|xxx at (0,4)
  _01: a rectangle with size (3,3) and color orange and mask x.x|xx.|.x. at (0,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,4)=5# (3,6)=5#
! 7 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (2,3) and color grey and mask xx.|xxx at (0,4)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (3,3) and color orange and mask x.x|xx.|.x. at (0,0)
diff: 
delta: (3,4)=5# (3,6)=5#
! 9 wrong pixels (generated / expected)

TRAIN f2829549.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (1,2)=7#
   (169.0 bits)
data: a background with size (4,3) and color black and layers
  _0: a rectangle with size (2,2) and color green and mask Odd Checkboard at (0,1)
diff: 
delta:
   (17.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,3) and color orange and mask Full at (3,0)
diff: 
delta: (0,0)=7# (1,2)=7#
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|x..|xxx|xxx at (0,4)
  _01: a rectangle with size (1,3) and color orange and mask Full at (3,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (0,0)=7# (1,2)=7#
! 2 wrong pixels (generated / expected)

TRAIN f2829549.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (4,1) and color blue and mask Full at (0,3)
  _011: a rectangle with size (1,3) and color orange and mask Full at (1,0)
diff: 
delta: (3,0)=7#
! 6 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,7) and color black and layers
  _0: a rectangle with size (4,3) and color grey and mask .x.|xx.|x..|xxx at (0,4)
  _01: a rectangle with size (1,3) and color orange and mask Full at (1,0)
  _011: a rectangle with size (4,1) and color blue and mask Full at (0,3)
diff: 
delta: (3,0)=7#
! 6 wrong pixels (generated / expected)

TEST f2829549.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 9.5 sec (9.5 sec/task)
bits-train-error = 1307.5 bits (1307.5 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-14] Checking task f35d900a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5371.5 = 5387.1
DL output with Mo: L = 15.6 + 51717.0 = 51732.6
DL input+output M: L = 31.2 + 57088.5 = 57119.7

# learning a model for train pairs
2.000	
1.865	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.730	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.595	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.459	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.399	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.338	IN  OBJECT at ^.layer_01: a point with color ? at (?,?)
1.273	IN  OBJECT at ^.layer_011: a point with color ? at (?,?)
1.203	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
1.183	OUT OBJECT at ^.layer_00: ^.layer_0
1.163	OUT OBJECT at ^.layer_010: ^.layer_01
1.142	OUT OBJECT at ^.layer_0110: ^.layer_011
1.122	OUT OBJECT at ^.layer_01110: ^.layer_0111
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_01
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0110: ^.layer_011
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01110: ^.layer_0111
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a point with color ? at (?,?)
  _01: a point with color ? at (?,?)
  _011: a point with color ? at (?,?)
  _0111: a point with color ? at (?,?)

DL input  with Mi: L = 96.0 + 3911.2 = 4007.2
DL output with Mo: L = 171.5 + 19391.4 = 19562.9
DL input+output M: L = 267.5 + 23302.6 = 23570.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (14,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (2,6)
  _011: a point with color green at (8,1)
  _0111: a point with color red at (8,6)
diff: 
delta:
   (95.9 bits)
data: a background with size (14,14) and color black and layers
  _00: a point with color red at (2,1)
  _0: a rectangle with size (3,3) and color green and mask Full at (1,0)
  _010: a point with color green at (2,6)
  _01: a rectangle with size (3,3) and color red and mask Full at (1,5)
  _0110: a point with color green at (8,1)
  _011: a rectangle with size (3,3) and color red and mask Full at (7,0)
  _01110: a point with color red at (8,6)
  _0111: a rectangle with size (3,3) and color green and mask Full at (7,5)
diff: 
delta: (2,3)=5# (2,4)=5# (4,1)=5# (4,6)=5# (6,1)=5# (6,6)=5# (8,3)=5# (8,4)=5#
   (374.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (14,14) and color black and layers
  _0: a point with color red at (2,1)
  _01: a point with color green at (2,6)
  _011: a point with color green at (8,1)
  _0111: a point with color red at (8,6)
diff: 
delta:
! size mismatch, 10x10 instead of 14x14

TRAIN f35d900a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (17,14) and color black and layers
  _0: a point with color blue at (3,2)
  _01: a point with color cyan at (3,10)
  _011: a point with color cyan at (14,2)
  _0111: a point with color blue at (14,10)
diff: 
delta:
   (97.6 bits)
data: a background with size (17,14) and color black and layers
  _00: a point with color blue at (3,2)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (2,1)
  _010: a point with color cyan at (3,10)
  _01: a rectangle with size (3,3) and color blue and mask Full at (2,9)
  _0110: a point with color cyan at (14,2)
  _011: a rectangle with size (3,3) and color blue and mask Full at (13,1)
  _01110: a point with color blue at (14,10)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (13,9)
diff: 
delta: (3,4)=5# (3,6)=5# (3,8)=5# (5,2)=5# (5,10)=5# (7,2)=5# (7,10)=5# (10,2)=5# (10,10)=5# (12,2)=5# (12,10)=5# (14,4)=5# (14,6)=5# (14,8)=5#
   (536.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,14) and color black and layers
  _0: a point with color blue at (3,2)
  _01: a point with color cyan at (3,10)
  _011: a point with color cyan at (14,2)
  _0111: a point with color blue at (14,10)
diff: 
delta:
! size mismatch, 10x10 instead of 17x14

TRAIN f35d900a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (17,16) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color yellow at (3,13)
  _011: a point with color yellow at (13,2)
  _0111: a point with color red at (13,13)
diff: 
delta:
   (98.8 bits)
data: a background with size (17,16) and color black and layers
  _00: a point with color red at (3,2)
  _0: a rectangle with size (3,3) and color yellow and mask Full at (2,1)
  _010: a point with color yellow at (3,13)
  _01: a rectangle with size (3,3) and color red and mask Full at (2,12)
  _0110: a point with color yellow at (13,2)
  _011: a rectangle with size (3,3) and color red and mask Full at (12,1)
  _01110: a point with color red at (13,13)
  _0111: a rectangle with size (3,3) and color yellow and mask Full at (12,12)
diff: 
delta: (3,4)=5# (3,6)=5# (3,9)=5# (3,11)=5# (5,2)=5# (5,13)=5# (7,2)=5# (7,13)=5# (9,2)=5# (9,13)=5# (11,2)=5# (11,13)=5# (13,4)=5# (13,6)=5# (13,9)=5# (13,11)=5#
   (593.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a point with color red at (3,2)
  _01: a point with color yellow at (3,13)
  _011: a point with color yellow at (13,2)
  _0111: a point with color red at (13,13)
diff: 
delta:
! size mismatch, 10x10 instead of 17x16

TRAIN f35d900a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (17,16) and color black and layers
  _0: a point with color green at (3,4)
  _01: a point with color cyan at (3,12)
  _011: a point with color cyan at (8,4)
  _0111: a point with color green at (8,12)
diff: 
delta:
   (98.8 bits)
data: a background with size (17,16) and color black and layers
  _00: a point with color green at (3,4)
  _0: a rectangle with size (3,3) and color cyan and mask Full at (2,3)
  _010: a point with color cyan at (3,12)
  _01: a rectangle with size (3,3) and color green and mask Full at (2,11)
  _0110: a point with color cyan at (8,4)
  _011: a rectangle with size (3,3) and color green and mask Full at (7,3)
  _01110: a point with color green at (8,12)
  _0111: a rectangle with size (3,3) and color cyan and mask Full at (7,11)
diff: 
delta: (3,6)=5# (3,8)=5# (3,10)=5# (5,4)=5# (5,12)=5# (6,4)=5# (6,12)=5# (8,6)=5# (8,8)=5# (8,10)=5#
   (434.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,16) and color black and layers
  _0: a point with color green at (3,4)
  _01: a point with color cyan at (3,12)
  _011: a point with color cyan at (8,4)
  _0111: a point with color green at (8,12)
diff: 
delta:
! size mismatch, 10x10 instead of 17x16

TRAIN f35d900a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,18) and color black and layers
  _0: a point with color yellow at (4,2)
  _01: a point with color blue at (4,12)
  _011: a point with color blue at (15,2)
  _0111: a point with color yellow at (15,12)
diff: 
delta:
! size mismatch, 10x10 instead of 17x18

TEST f35d900a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 19391.4 bits (19391.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-13] Checking task f5b8619d.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 1905.3 = 1920.9
DL output with Mo: L = 15.6 + 25709.8 = 25725.4
DL input+output M: L = 31.2 + 27615.1 = 27646.3

# learning a model for train pairs
2.000	
1.669	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.436	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.301	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.213	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.174	IN  DEF: ^.color=black
1.145	OUT OBJECT at ^.layer_00: ^.layer_0
1.125	OUT DEF: ^.size=^.size * 2
1.109	OUT OBJECT at ^.layer_010: ^.layer_0.shape at (?,?)
1.101	OUT OBJECT at ^.layer_001: ^.layer_0.shape at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size * 2 and color ? and layers
  _00: ^.layer_0
  _001: ^.layer_0.shape at (?,?)
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _010: ^.layer_0.shape at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 1552.5 = 1588.2
DL output with Mo: L = 168.0 + 6882.2 = 7050.1
DL input+output M: L = 203.6 + 8434.7 = 8638.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (2,2)=2 
   (49.9 bits)
data: a background with size (6,6) and color cyan and layers
  _00: a point with color red at (0,0)
  _001: a point with color red at (0,3)
  _0: a rectangle with size (6,1) and color black and mask Full at (0,1)
  _010: a point with color red at (2,5)
  _01: a rectangle with size (6,1) and color black and mask Full at (0,4)
  _011: a rectangle with size (2,2) and color red and mask Even Checkboard at (2,2)
diff: 
delta: (3,0)=2  (5,2)=2  (5,5)=2 
   (197.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (0,0)
diff: 
delta: (2,2)=2 
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (3,3) and color black and layers
  _0: a point with color red at (2,2)
diff: 
delta: (0,0)=2 
! 24 wrong pixels (generated / expected)

TRAIN f5b8619d.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (0,1)
diff: 
delta: (4,0)=5# (4,5)=5#
   (82.5 bits)
data: a background with size (12,12) and color black and layers
  _00: a point with color grey at (0,1)
  _001: a point with color grey at (0,7)
  _0: a rectangle with size (12,3) and color cyan and mask Full at (0,5)
  _010: a point with color grey at (4,0)
  _01: a rectangle with size (12,2) and color cyan and mask Full (and Border) at (0,0)
  _011: a rectangle with size (12,1) and color cyan and mask Full at (0,11)
diff: 
delta: (4,5)=5# (4,6)=5# (4,11)=5# (6,1)=5# (6,7)=5# (10,0)=5# (10,5)=5# (10,6)=5# (10,11)=5#
   (370.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (0,1)
diff: 
delta: (4,0)=5# (4,5)=5#
! 71 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,0)
diff: 
delta: (0,1)=5# (4,5)=5#
! 71 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,6) and color black and layers
  _0: a point with color grey at (4,5)
diff: 
delta: (0,1)=5# (4,0)=5#
! 71 wrong pixels (generated / expected)

TRAIN f5b8619d.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (2,2) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (22.9 bits)
data: a background with size (4,4) and color black and layers
  _00: a point with color yellow at (0,1)
  _001: a point with color yellow at (0,3)
  _0: a rectangle with size (3,1) and color cyan and mask Full at (1,1)
  _010: a point with color yellow at (2,3)
  _01: a rectangle with size (1,1) and color cyan and mask Full at (1,3)
  _011: a rectangle with size (1,1) and color cyan and mask Full at (3,3)
diff: 
delta: (2,1)=4 
   (119.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (2,2) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! 9 wrong pixels (generated / expected)

TRAIN f5b8619d.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (0,2)
diff: 
delta: (2,3)=3  (3,0)=3 
! 49 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (2,3)
diff: 
delta: (0,2)=3  (3,0)=3 
! 49 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (4,4) and color black and layers
  _0: a point with color green at (3,0)
diff: 
delta: (0,2)=3  (2,3)=3 
! 49 wrong pixels (generated / expected)

TEST f5b8619d.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.5 sec (27.5 sec/task)
bits-train-error = 6882.2 bits (6882.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-12] Checking task f76d97a5.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 5642.6 = 5658.2
DL output with Mo: L = 15.6 + 5512.4 = 5528.0
DL input+output M: L = 31.2 + 11155.0 = 11186.2

# learning a model for train pairs
2.000	
1.421	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.867	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.752	OUT DEF: ^.layer_0.shape.mask=^.layer_0.shape.mask
0.670	OUT DEF: ^.size=^.size
0.589	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size
0.540	OUT DEF: ^.layer_0.pos=^.layer_0.pos
0.511	OUT DEF: ^.layer_0.shape.color=^.color
0.481	IN  DEF: ^.layer_0.shape.color=grey
0.468	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: a rectangle with size ^.layer_0.shape.size and color ^.color and mask ^.layer_0.shape.mask at ^.layer_0.pos
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color grey and mask ? at (?,?)

DL input  with Mi: L = 51.2 + 2304.1 = 2355.3
DL output with Mo: L = 35.4 + 249.0 = 284.4
DL input+output M: L = 86.6 + 2553.1 = 2639.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
   (50.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color yellow and mask +-cross at (0,0)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color yellow and layers
  _0: a rectangle with size (3,3) and color grey and mask +-cross at (0,0)
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=5#
   (105.3 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=6 
   (24.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (5,5) and color grey and mask xx...|.xx..|..xx.|...xx|....x at (0,0)
diff: 
delta: (4,0)=5#
! 1 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (4,4) and color pink and mask x...|xx..|xxx.|.xxx at (1,0)
diff:   ^.layer_0.shape.color
delta: (0,2)=6  (0,3)=6  (0,4)=6  (1,3)=6  (1,4)=6  (2,4)=6 
! 19 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color pink and layers
  _0: a rectangle with size (1,2) and color grey and mask Full at (0,0)
diff: 
delta: (1,1)=5# (1,2)=5# (2,2)=5# (2,3)=5# (3,3)=5# (3,4)=5# (4,0)=5# (4,4)=5#
! 8 wrong pixels (generated / expected)

TRAIN f76d97a5.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (5,4) and color grey and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
   (74.7 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,4) and color brown and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
   (0.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color brown and layers
  _0: a rectangle with size (5,4) and color grey and mask x...|.xx.|x...|.x..|..xx at (0,1)
diff: 
delta:
correct output grid

TRAIN f76d97a5.json/3: 1 1st (SUCCESS)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color grey and layers
  _0: a rectangle with size (5,5) and color green and mask xxx.x|x.xxx|x..x.|xxx.x|...xx at (0,0)
diff:   ^.layer_0.shape.color
delta:
! 25 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (4,5) and color grey and mask .x...|.xx.x|...x.|xxx.. at (1,0)
diff: 
delta: (0,3)=5#
! 1 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (5,5) and color green and layers
  _0: a rectangle with size (1,3) and color grey and mask Full at (4,0)
diff: 
delta: (0,3)=5# (1,1)=5# (2,1)=5# (2,2)=5# (2,4)=5# (3,3)=5#
! 6 wrong pixels (generated / expected)

TEST f76d97a5.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 249.0 bits (249.0 bits/task)
acc-train-micro = 0.67 tasks (66.67%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.67
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-11] Checking task f8a8fe49.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 20050.2 = 20065.8
DL output with Mo: L = 15.6 + 20050.2 = 20065.8
DL input+output M: L = 31.2 + 40100.4 = 40131.7

# learning a model for train pairs
2.000	
1.738	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.399	OUT OBJECT at ^.layer_0: ^.layer_0
1.136	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.872	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.680	OUT OBJECT at ^.layer_011: ^.layer_01
0.566	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.510	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.426	OUT OBJECT at ^.layer_0111: ^.layer_0111.shape at (?,?)
0.393	OUT DEF: ^.size=^.size
0.375	OUT DEF: ^.layer_01.shape.size=^.layer_011.shape.size
0.358	OUT DEF: ^.layer_0111.pos=max(^.layer_01.pos, ^.layer_0111.pos) - translationOnto(^.layer_0111, ^.layer_0)
0.350	IN  DEF: ^.layer_0.shape.color=red
0.341	IN  DEF: ^.layer_01.shape.color=red
0.333	IN  DEF: ^.layer_011.shape.color=grey
0.325	OUT DEF: ^.layer_01.shape.color=grey
0.316	IN  DEF: ^.layer_0111.shape.color=grey
0.312	IN  DEF: ^.layer_0111.shape.mask=Full
0.308	IN  DEF: ^.color=black
0.304	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color black and layers
  _0: ^.layer_0
  _01: a rectangle with size ^.layer_011.shape.size and color grey and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_0111.shape at max(^.layer_01.pos, ^.layer_0111.pos) - translationOnto(^.layer_0111, ^.layer_0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color grey and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color grey and mask Full at (?,?)

DL input  with Mi: L = 153.6 + 5110.2 = 5263.8
DL output with Mo: L = 115.5 + 722.2 = 837.7
DL input+output M: L = 269.0 + 5832.4 = 6101.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
   (167.7 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,3) and color grey and mask x.x|xxx at (1,6)
  _011: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (13,7)
diff: 
delta:
   (22.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (2,3) and color grey and mask xxx|x.x at (6,6)
  _0111: a rectangle with size (1,1) and color grey and mask Full at (9,7)
diff: 
delta:
! 11 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta:
   (182.0 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (4,2) and color grey and mask .x|x.|x.|.x at (5,0)
  _011: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,12)
diff: 
delta:
   (26.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (8,2) and color red and mask xx|.x|.x|.x|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta:
! 12 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (8,2) and color red and mask xx|x.|x.|x.|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (8,1) and color red and mask Full at (3,10)
  _011: a rectangle with size (4,2) and color grey and mask x.|.x|.x|x. at (5,5)
  _0111: a rectangle with size (4,1) and color grey and mask Full at (5,8)
diff: 
delta: (3,9)=2  (10,9)=2 
! 22 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta:
   (161.4 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (3,2) and color grey and mask .x|xx|x. at (4,0)
  _011: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (4,12)
diff: 
delta:
   (23.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (5,2) and color red and mask xx|.x|.x|.x|xx at (3,9)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta:
! 10 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask xx|x.|x.|x.|xx at (3,3)
  _01: a rectangle with size (5,1) and color red and mask Full at (3,10)
  _011: a rectangle with size (3,2) and color grey and mask x.|xx|.x at (4,5)
  _0111: a rectangle with size (3,1) and color grey and mask Full at (4,8)
diff: 
delta: (3,9)=2  (7,9)=2 
! 18 wrong pixels (generated / expected)

TRAIN f8a8fe49.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (2,7) and color red and mask x.....x|xxxxxxx at (10,4)
  _011: a rectangle with size (2,5) and color grey and mask .xxxx|xxx.. at (6,5)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta:
! 17 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (2,7) and color red and mask xxxxxxx|x.....x at (4,4)
  _01: a rectangle with size (1,7) and color red and mask Full at (11,4)
  _011: a rectangle with size (2,5) and color grey and mask .xxxx|xxx.. at (6,5)
  _0111: a rectangle with size (1,3) and color grey and mask Full at (9,6)
diff: 
delta: (10,4)=2  (10,10)=2 
! 25 wrong pixels (generated / expected)

TEST f8a8fe49.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 11.9 sec (11.9 sec/task)
bits-train-error = 722.2 bits (722.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-10] Checking task f8b3ba0a.json: 4 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 50701.8 = 50717.4
DL output with Mo: L = 15.6 + 2465.1 = 2480.7
DL input+output M: L = 31.2 + 53166.9 = 53198.1

# learning a model for train pairs
2.000	
1.858	OUT DEF: ^.color=red
1.754	OUT DEF: ^.size.i=3
1.686	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.632	OUT DEF: ^.size.j=1
1.583	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.539	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.506	IN  OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.481	IN  OBJECT at ^.layer_01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.461	IN  OBJECT at ^.layer_011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.440	IN  OBJECT at ^.layer_0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.425	IN  OBJECT at ^.layer_01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.408	IN  OBJECT at ^.layer_011111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.396	IN  OBJECT at ^.layer_0111111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.379	IN  OBJECT at ^.layer_01111111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (3,1) and color red and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01111111111: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 366.2 + 34018.0 = 34384.2
DL output with Mo: L = 24.4 + 1713.9 = 1738.3
DL input+output M: L = 390.6 + 35731.8 = 36122.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,4)
  _011: a rectangle with size (1,8) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (9,1)
  _01111: a rectangle with size (3,2) and color blue and mask Full (and Border) at (3,1)
  _011111: a rectangle with size (1,5) and color yellow and mask Full at (3,7)
  _0111111: a rectangle with size (1,5) and color blue and mask Full at (5,7)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (1,1)
  _011111111: a rectangle with size (1,2) and color blue and mask Full at (3,4)
  _0111111111: a rectangle with size (1,2) and color yellow and mask Full at (5,4)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (7,1)
diff: 
delta: (1,6)=0  (1,9)=0  (3,9)=0  (4,1)=0  (4,2)=0  (5,9)=0  (7,6)=0  (7,9)=0  (9,3)=0  (9,4)=2  (9,5)=2  (9,6)=0  (9,9)=0  (11,3)=0  (11,6)=0  (11,9)=0 
   (795.0 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (0,0)=4  (2,0)=3 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01: a rectangle with size (1,8) and color blue and mask Full at (1,4)
  _011: a rectangle with size (1,8) and color blue and mask Full at (7,4)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (9,1)
  _01111: a rectangle with size (3,2) and color blue and mask Full (and Border) at (3,1)
  _011111: a rectangle with size (1,5) and color yellow and mask Full at (3,7)
  _0111111: a rectangle with size (1,5) and color blue and mask Full at (5,7)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (1,1)
  _011111111: a rectangle with size (1,2) and color blue and mask Full at (3,4)
  _0111111111: a rectangle with size (1,2) and color yellow and mask Full at (5,4)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (7,1)
diff: 
delta: (1,6)=0  (1,9)=0  (3,9)=0  (4,1)=0  (4,2)=0  (5,9)=0  (7,6)=0  (7,9)=0  (9,3)=0  (9,4)=2  (9,5)=2  (9,6)=0  (9,9)=0  (11,3)=0  (11,6)=0  (11,9)=0 
! 2 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _01: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _011: a rectangle with size (1,14) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color cyan and mask Full at (5,4)
  _01111: a rectangle with size (1,11) and color cyan and mask Full at (9,1)
  _011111: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
  _01111111: a rectangle with size (1,2) and color cyan and mask Full at (3,4)
  _011111111: a rectangle with size (1,2) and color red and mask Full at (3,7)
  _0111111111: a rectangle with size (1,2) and color pink and mask Full at (3,10)
  _01111111111: a rectangle with size (1,2) and color cyan and mask Full at (3,13)
diff: 
delta: (1,6)=0  (1,9)=0  (1,12)=0  (5,1)=1  (5,2)=1  (5,6)=0  (5,7)=1  (5,8)=1  (5,9)=0  (5,12)=0  (7,3)=0  (7,4)=1  (7,5)=1  (7,6)=0  (7,9)=0  (7,12)=0  (9,3)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=0  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
   (1090.4 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (0,0)=6  (1,0)=1 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (1,14) and color cyan and mask Full at (11,1)
  _01: a rectangle with size (1,11) and color cyan and mask Full at (1,4)
  _011: a rectangle with size (1,14) and color cyan and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color cyan and mask Full at (5,4)
  _01111: a rectangle with size (1,11) and color cyan and mask Full at (9,1)
  _011111: a rectangle with size (1,2) and color pink and mask Full at (1,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (3,1)
  _01111111: a rectangle with size (1,2) and color cyan and mask Full at (3,4)
  _011111111: a rectangle with size (1,2) and color red and mask Full at (3,7)
  _0111111111: a rectangle with size (1,2) and color pink and mask Full at (3,10)
  _01111111111: a rectangle with size (1,2) and color cyan and mask Full at (3,13)
diff: 
delta: (1,6)=0  (1,9)=0  (1,12)=0  (5,1)=1  (5,2)=1  (5,6)=0  (5,7)=1  (5,8)=1  (5,9)=0  (5,12)=0  (7,3)=0  (7,4)=1  (7,5)=1  (7,6)=0  (7,9)=0  (7,12)=0  (9,3)=0  (9,6)=0  (9,7)=6  (9,8)=6  (9,9)=0  (9,13)=6  (9,14)=6  (11,3)=0  (11,6)=0  (11,9)=0  (11,12)=0 
! 2 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,2) and color green and mask Full (and Border) at (5,1)
  _011: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _0111: a rectangle with size (1,5) and color red and mask Full at (9,4)
  _01111: a rectangle with size (1,5) and color green and mask Full at (11,4)
  _011111: a rectangle with size (1,2) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (5,4)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (5,7)
  _011111111: a rectangle with size (1,2) and color cyan and mask Full at (7,4)
  _0111111111: a rectangle with size (1,2) and color green and mask Full at (7,7)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (11,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,6)=0  (6,1)=0  (6,2)=0  (8,1)=0  (8,2)=0  (9,6)=0  (11,6)=0 
   (595.9 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (1,0)=8  (2,0)=1 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,10) and color black and layers
  _0: a rectangle with size (1,8) and color green and mask Full at (1,1)
  _01: a rectangle with size (5,2) and color green and mask Full (and Border) at (5,1)
  _011: a rectangle with size (1,5) and color green and mask Full at (3,4)
  _0111: a rectangle with size (1,5) and color red and mask Full at (9,4)
  _01111: a rectangle with size (1,5) and color green and mask Full at (11,4)
  _011111: a rectangle with size (1,2) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color cyan and mask Full at (5,4)
  _01111111: a rectangle with size (1,2) and color green and mask Full at (5,7)
  _011111111: a rectangle with size (1,2) and color cyan and mask Full at (7,4)
  _0111111111: a rectangle with size (1,2) and color green and mask Full at (7,7)
  _01111111111: a rectangle with size (1,2) and color red and mask Full at (11,1)
diff: 
delta: (1,3)=0  (1,6)=0  (3,6)=0  (6,1)=0  (6,2)=0  (8,1)=0  (8,2)=0  (9,6)=0  (11,6)=0 
! 2 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,11) and color blue and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01111: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _011111: a rectangle with size (1,8) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color red and mask Full at (3,10)
  _01111111: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011111111: a rectangle with size (1,2) and color blue and mask Full at (9,1)
  _0111111111: a rectangle with size (1,2) and color cyan and mask Full at (9,4)
  _01111111111: a rectangle with size (1,2) and color blue and mask Full at (9,7)
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,3)=0  (3,6)=0  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=8  (7,8)=8  (7,9)=0  (9,10)=4  (9,11)=4  (11,3)=0  (11,4)=8  (11,5)=8  (11,6)=0  (11,9)=0 
   (920.5 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (0,0)=8  (2,0)=4 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (1,8) and color blue and mask Full at (5,4)
  _01: a rectangle with size (1,11) and color blue and mask Full at (1,1)
  _011: a rectangle with size (1,11) and color blue and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color blue and mask Full at (11,1)
  _01111: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _011111: a rectangle with size (1,8) and color blue and mask Full at (3,1)
  _0111111: a rectangle with size (1,2) and color red and mask Full at (3,10)
  _01111111: a rectangle with size (1,2) and color red and mask Full at (5,1)
  _011111111: a rectangle with size (1,2) and color blue and mask Full at (9,1)
  _0111111111: a rectangle with size (1,2) and color cyan and mask Full at (9,4)
  _01111111111: a rectangle with size (1,2) and color blue and mask Full at (9,7)
diff: 
delta: (1,3)=0  (1,6)=0  (1,7)=8  (1,8)=8  (1,9)=0  (3,3)=0  (3,6)=0  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=8  (7,8)=8  (7,9)=0  (9,10)=4  (9,11)=4  (11,3)=0  (11,4)=8  (11,5)=8  (11,6)=0  (11,9)=0 
! 2 wrong pixels (generated / expected)

TRAIN f8b3ba0a.json/4: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,13) and color black and layers
  _0: a rectangle with size (1,8) and color red and mask Full at (9,4)
  _01: a rectangle with size (1,11) and color red and mask Full at (1,1)
  _011: a rectangle with size (1,11) and color red and mask Full at (7,1)
  _0111: a rectangle with size (1,11) and color red and mask Full at (13,1)
  _01111: a rectangle with size (1,5) and color red and mask Full at (5,4)
  _011111: a rectangle with size (1,11) and color cyan and mask Full at (5,1)
  _0111111: a rectangle with size (1,2) and color blue and mask Full at (3,1)
  _01111111: a rectangle with size (1,2) and color red and mask Full at (3,4)
  _011111111: a rectangle with size (1,2) and color yellow and mask Full at (3,7)
  _0111111111: a rectangle with size (1,2) and color red and mask Full at (3,10)
  _01111111111: a rectangle with size (1,2) and color yellow and mask Full at (9,1)
diff: 
delta: (1,3)=0  (1,4)=4  (1,5)=4  (1,6)=0  (1,9)=0  (5,3)=0  (5,6)=0  (5,9)=0  (7,3)=0  (7,6)=0  (7,7)=1  (7,8)=1  (7,9)=0  (9,6)=0  (9,9)=0  (11,1)=2  (11,2)=2  (11,4)=1  (11,5)=1  (11,7)=2  (11,8)=2  (11,10)=4  (11,11)=4  (13,3)=0  (13,6)=0  (13,7)=4  (13,8)=4  (13,9)=0 
! 3 wrong pixels (generated / expected)

TEST f8b3ba0a.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 27.0 sec (27.0 sec/task)
bits-train-error = 1713.9 bits (1713.9 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-9] Checking task f8c80d96.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 14621.1 = 14636.7
DL output with Mo: L = 15.6 + 32312.5 = 32328.1
DL input+output M: L = 31.2 + 46933.7 = 46964.9

# learning a model for train pairs
2.000	
1.547	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.244	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.040	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.838	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.695	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.604	OUT OBJECT at ^.layer_0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.567	OUT OBJECT at ^.layer_00: ^.layer_0
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 81.2 + 4965.3 = 5046.6
DL output with Mo: L = 151.8 + 7030.3 = 7182.1
DL input+output M: L = 233.0 + 11995.6 = 12228.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
   (227.7 bits)
data: a background with size (10,10) and color grey and layers
  _00: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _0: a rectangle with size (8,8) and color cyan and mask xxxxxxxx|.......x|.......x|.......x|.......x|.......x|.......x|.......x at (2,0)
  _01: a rectangle with size (1,10) and color cyan and mask Full at (0,0)
  _011: a rectangle with size (10,1) and color cyan and mask Full at (0,9)
  _0111: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
   (321.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
  _01: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
! 89 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,4) and color cyan and mask xxxx|...x|...x|...x at (6,0)
  _01: a rectangle with size (6,6) and color cyan and mask xxxxxx|.....x|.....x|.....x|.....x|.....x at (4,0)
diff: 
delta: (8,0)=8  (8,1)=8  (9,1)=8 
! 93 wrong pixels (generated / expected)

TRAIN f8c80d96.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
diff: 
delta:
   (140.1 bits)
data: a background with size (10,10) and color grey and layers
  _00: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
  _0: a rectangle with size (1,9) and color blue and mask Full at (8,1)
  _01: a rectangle with size (9,1) and color blue and mask Full at (0,1)
  _011: a rectangle with size (1,3) and color blue and mask Full at (2,7)
  _0111: a rectangle with size (3,1) and color blue and mask Full at (0,7)
diff: 
delta:
   (155.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
  _01: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
diff: 
delta:
! 89 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|x..|xxx at (0,7)
  _01: a rectangle with size (6,6) and color blue and mask x.....|x.....|x.....|x.....|x.....|xxxxxx at (0,4)
diff: 
delta:
! 95 wrong pixels (generated / expected)

TRAIN f8c80d96.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
diff: 
delta:
   (128.7 bits)
data: a background with size (10,10) and color grey and layers
  _00: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _0: a rectangle with size (6,10) and color red and mask .........x|.........x|.........x|.........x|.........x|xxxxxxxxxx at (0,0)
  _01: a rectangle with size (1,10) and color red and mask Full at (7,0)
  _011: a rectangle with size (1,10) and color red and mask Full at (9,0)
  _0111: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
diff: 
delta:
   (225.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
  _01: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
diff: 
delta:
! 87 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,3) and color red and mask x.x|xxx at (0,3)
  _01: a rectangle with size (4,7) and color red and mask x.....x|x.....x|x.....x|xxxxxxx at (0,1)
diff: 
delta:
! 95 wrong pixels (generated / expected)

TRAIN f8c80d96.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,6) and color yellow and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
  _01: a rectangle with size (4,3) and color yellow and mask xxx|..x|..x|xxx at (3,0)
diff: 
delta:
! 80 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (4,3) and color yellow and mask xxx|..x|..x|xxx at (3,0)
  _01: a rectangle with size (10,6) and color yellow and mask xxxxxx|.....x|.....x|.....x|.....x|.....x|.....x|.....x|.....x|xxxxxx at (0,0)
diff: 
delta:
! 92 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (10,10) and color yellow and layers
  _0: a rectangle with size (10,4) and color black and mask Full at (0,6)
  _01: a rectangle with size (8,5) and color black and mask xxxxx|xxxxx|...xx|...xx|...xx|...xx|xxxxx|xxxxx at (1,0)
diff: 
delta: (4,0)=0  (4,1)=0  (5,0)=0  (5,1)=0 
! 100 wrong pixels (generated / expected)

TEST f8c80d96.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.0 sec (26.0 sec/task)
bits-train-error = 7030.3 bits (7030.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-8] Checking task f8ff0b80.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 17242.2 = 17257.8
DL output with Mo: L = 15.6 + 1848.8 = 1864.4
DL input+output M: L = 31.2 + 19091.0 = 19122.2

# learning a model for train pairs
2.000	
1.638	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.424	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.283	OUT DEF: ^.color=red
1.157	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.060	OUT DEF: ^.size.i=^.layer_01.shape.size.i
1.018	OUT DEF: ^.size.j=^.layer_0.shape.size.i - 3
1.008	IN  DEF: ^.layer_01.shape.color=red
1.004	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (^.layer_01.shape.size.i,^.layer_0.shape.size.i - 3) and color red and layers
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color red and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 114.7 + 4798.2 = 4912.9
DL output with Mo: L = 55.1 + 1285.4 = 1340.5
DL input+output M: L = 169.9 + 6083.6 = 6253.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _01: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _011: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
diff: 
delta:
   (164.5 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (0,0)=3  (2,0)=8 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color green and mask .xx.|.xx.|.xxx|x... at (1,1)
  _01: a rectangle with size (3,4) and color red and mask .xx.|xxxx|.x.. at (6,3)
  _011: a rectangle with size (3,3) and color cyan and mask .x.|xx.|..x at (2,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
  _011: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
diff: 
delta:
   (154.9 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (0,0)=1  (1,0)=7#
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color blue and mask xx.x|xxx.|..xx|.x.. at (1,7)
  _01: a rectangle with size (3,2) and color red and mask .x|xx|.x at (7,2)
  _011: a rectangle with size (3,3) and color orange and mask ..x|xxx|.xx at (8,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _01: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
diff: 
delta:
   (160.5 bits)
data: a background with size (3,1) and color red and layers
diff: 
delta: (0,0)=4  (2,0)=1 
   (42.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,5) and color yellow and mask ..xxx|xxxxx|xxxxx|.x... at (7,3)
  _01: a rectangle with size (3,4) and color red and mask ..x.|.xxx|xxx. at (1,1)
  _011: a rectangle with size (3,2) and color blue and mask x.|xx|xx at (2,8)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN f8ff0b80.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (12,12) and color black and layers
  _0: a rectangle with size (4,4) and color pink and mask ..x.|.xx.|x.xx|..x. at (8,5)
  _01: a rectangle with size (2,3) and color blue and mask .xx|xxx at (5,3)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (1,1)
diff:   ^.layer_01.shape.color
delta:
! size mismatch, 2x1 instead of 3x1

TEST f8ff0b80.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.9 sec (1.9 sec/task)
bits-train-error = 1285.4 bits (1285.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-7] Checking task f9012d9b.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11479.9 = 11495.5
DL output with Mo: L = 15.6 + 993.4 = 1009.0
DL input+output M: L = 31.2 + 12473.2 = 12504.5

# learning a model for train pairs
2.000	
1.426	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.178	OUT DEF: ^.color=^.layer_0.shape.color

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color ^.layer_0.shape.color and layers
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 4989.1 = 5038.0
DL output with Mo: L = 22.3 + 724.4 = 746.7
DL input+output M: L = 71.1 + 5713.5 = 5784.6

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask .x.x.|xxxxx|.x.x.|..xxx|...x. at (0,0)
diff: 
delta: (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0 
   (183.7 bits)
data: a background with size (2,2) and color blue and layers
diff: 
delta: (1,0)=2 
   (32.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color red and layers
  _0: a rectangle with size (5,5) and color blue and mask .x.x.|xxxxx|.x.x.|..xxx|...x. at (0,0)
diff: 
delta: (3,0)=0  (3,1)=0  (4,0)=0  (4,1)=0 
! size mismatch, 10x10 instead of 2x2
>> Trial 2
data: a background with size (5,5) and color blue and layers
  _0: a rectangle with size (2,2) and color black and mask Full (and Border) at (3,0)
diff: 
delta: (0,0)=2  (0,2)=2  (0,4)=2  (2,0)=2  (2,2)=2  (2,4)=2  (4,2)=2  (4,4)=2 
! size mismatch, 10x10 instead of 2x2

TRAIN f9012d9b.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x.x|x.x.|.x.x at (0,0)
diff: 
delta: (0,2)=0 
   (99.0 bits)
data: a background with size (1,1) and color cyan and layers
diff: 
delta:
   (6.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (4,4) and color cyan and layers
  _0: a rectangle with size (4,4) and color pink and mask Odd Checkboard at (0,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 1x1
>> Trial 2
data: a background with size (4,4) and color pink and layers
  _0: a rectangle with size (4,4) and color cyan and mask x...|.x.x|x.x.|.x.x at (0,0)
diff: 
delta: (0,2)=0 
! size mismatch, 10x10 instead of 1x1

TRAIN f9012d9b.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (7,7) and color grey and mask ..x..x.|..x..x.|xxxxxxx|..x..x.|..x..x.|xxxxx..|..x.... at (0,0)
diff: 
delta: (5,5)=0  (5,6)=0  (6,5)=0  (6,6)=0 
   (216.2 bits)
data: a background with size (2,2) and color grey and layers
diff: 
delta: (1,1)=2 
   (32.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (7,7) and color grey and mask ..x..x.|..x..x.|xxxxxxx|..x..x.|..x..x.|xxxxx..|..x.... at (0,0)
diff: 
delta: (5,5)=0  (5,6)=0  (6,5)=0  (6,6)=0 
! size mismatch, 10x10 instead of 2x2

TRAIN f9012d9b.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color blue and layers
  _0: a rectangle with size (7,7) and color cyan and mask x.xx...|.xx....|xx.x...|x.xx.xx|.xx.xx.|xx.xx.x|x.xx.xx at (0,0)
diff: 
delta: (0,4)=0  (0,5)=0  (0,6)=0  (1,4)=0  (1,5)=0  (1,6)=0  (2,4)=0  (2,5)=0  (2,6)=0 
! size mismatch, 10x10 instead of 3x3
>> Trial 2
data: a background with size (7,7) and color cyan and layers
  _0: a rectangle with size (3,3) and color black and mask Full at (0,4)
diff: 
delta: (0,1)=1  (1,0)=1  (1,3)=1  (2,2)=1  (3,1)=1  (3,4)=1  (4,0)=1  (4,3)=1  (4,6)=1  (5,2)=1  (5,5)=1  (6,1)=1  (6,4)=1 
! size mismatch, 10x10 instead of 3x3

TEST f9012d9b.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.1 sec (0.1 sec/task)
bits-train-error = 724.4 bits (724.4 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-6] Checking task fafffa47.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 11357.6 = 11373.2
DL output with Mo: L = 15.6 + 3581.2 = 3596.8
DL input+output M: L = 31.2 + 14938.8 = 14970.0

# learning a model for train pairs
2.000	
1.674	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.479	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.297	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.124	OUT DEF: ^.size=max(^.layer_0.shape.size, ^.layer_01.shape.size)
1.046	OUT DEF: ^.layer_0.shape.color=red
0.986	IN  DEF: ^.layer_01.shape.color=blue
0.931	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.i
0.883	OUT DEF: ^.layer_0.shape.size.j=^.layer_01.pos.j + 1
0.849	OUT DEF: ^.color=black
0.824	IN  DEF: ^.layer_0.shape.color=brown
0.813	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size max(^.layer_0.shape.size, ^.layer_01.shape.size) and color black and layers
  _0: a rectangle with size (?,^.layer_01.pos.j + 1) and color red and mask ? at (^.layer_0.pos.i,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color brown and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color blue and mask ? at (?,?)

DL input  with Mi: L = 85.0 + 4434.1 = 4519.1
DL output with Mo: L = 97.5 + 1398.0 = 1495.5
DL input+output M: L = 182.5 + 5832.2 = 6014.7

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .xx|.xx|xxx at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|..x|xxx at (3,0)
diff: 
delta:
   (86.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,1) and color red and mask Full at (0,0)
diff: 
delta:
   (12.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .xx|.xx|xxx at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask .x.|..x|xxx at (3,0)
diff: 
delta:
correct output grid

TRAIN fafffa47.json/1: 1 1st (SUCCESS)

## instance 2

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x.x|.xx|..x at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (3,0)
diff: 
delta: (3,2)=1 
   (98.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (2,1)=2 
   (34.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask x.x|.xx|..x at (0,0)
  _01: a rectangle with size (3,1) and color blue and mask Full at (3,0)
diff: 
delta: (3,2)=1 
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,1) and color blue and mask Full at (3,0)
  _01: a rectangle with size (3,3) and color brown and mask x.x|.xx|..x at (0,0)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta: (3,2)=1 
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,2)
  _01: a rectangle with size (3,1) and color blue and mask Full at (3,0)
diff: 
delta: (0,0)=9# (1,1)=9# (3,2)=1 
! size mismatch, 3x1 instead of 3x3

TRAIN fafffa47.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta: (5,0)=1 
   (94.9 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color red and mask x.x|.x.|.xx at (0,0)
diff: 
delta:
   (25.3 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (4,2)
diff: 
delta: (5,0)=1 
! 5 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
  _01: a rectangle with size (1,1) and color blue and mask Full at (5,0)
diff: 
delta: (4,2)=1 
! 5 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (4,2)
  _01: a rectangle with size (3,3) and color brown and mask .x.|x.x|x.. at (0,0)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta: (5,0)=1 
! 5 wrong pixels (generated / expected)

TRAIN fafffa47.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.xx|..x at (3,0)
diff: 
delta:
   (88.4 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,1)
diff: 
delta: (2,0)=2 
   (34.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
  _01: a rectangle with size (3,3) and color blue and mask x..|.xx|..x at (3,0)
diff: 
delta:
! 4 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x..|.xx|..x at (3,0)
  _01: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta:
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color brown and mask ..x|xxx|.x. at (0,0)
  _01: a rectangle with size (1,2) and color blue and mask Full at (4,1)
diff: 
delta: (3,0)=1  (5,2)=1 
! 4 wrong pixels (generated / expected)

TRAIN fafffa47.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask x.|xx|xx at (0,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (4,0)
diff: 
delta:
   (75.6 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (0,0)
diff: 
delta: (0,2)=2 
   (34.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,2) and color brown and mask x.|xx|xx at (0,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (4,0)
diff: 
delta:
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (2,2) and color brown and mask Full (and Border) at (1,1)
  _01: a rectangle with size (2,3) and color blue and mask xxx|x.x at (4,0)
diff: 
delta: (0,1)=9#
! size mismatch, 2x3 instead of 3x3

TRAIN fafffa47.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,2)
  _01: a rectangle with size (3,3) and color blue and mask .xx|.x.|x.. at (3,0)
diff: 
delta: (0,0)=9# (2,0)=9#
! 2 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask .xx|.x.|x.. at (3,0)
  _01: a rectangle with size (3,1) and color brown and mask Full at (0,2)
diff:   ^.layer_01.shape.color  ^.layer_0.shape.color
delta: (0,0)=9# (2,0)=9#
! 2 wrong pixels (generated / expected)
>> Trial 3
data: a background with size (6,3) and color black and layers
  _0: a rectangle with size (3,1) and color brown and mask Full at (0,2)
  _01: a rectangle with size (1,2) and color blue and mask Full at (3,1)
diff: 
delta: (0,0)=9# (2,0)=9# (4,1)=1  (5,0)=1 
! size mismatch, 3x2 instead of 3x3

TEST fafffa47.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.0 sec (3.0 sec/task)
bits-train-error = 1398.0 bits (1398.0 bits/task)
acc-train-micro = 0.20 tasks (20.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.20
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-5] Checking task fcb5c309.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 42863.6 = 42879.2
DL output with Mo: L = 15.6 + 15586.8 = 15602.4
DL input+output M: L = 31.2 + 58450.4 = 58481.7

# learning a model for train pairs
2.000	
1.152	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.758	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.530	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.465	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.431	OUT DEF: ^.size=^.layer_0.shape.size
0.401	OUT DEF: ^.layer_0.shape.size=^.layer_0.shape.size - 2
0.390	OUT DEF: ^.layer_0.shape.color=black
0.381	OUT DEF: ^.layer_0.pos.j=1
0.371	OUT DEF: ^.layer_0.pos.i=1
0.366	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.350	OUT DEF: ^.color=^.layer_0111.shape.color
0.344	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.339	IN  OBJECT at ^.layer_011111: a point with color ? at (?,?)
0.333	IN  OBJECT at ^.layer_0111111: a point with color ? at (?,?)
0.328	IN  OBJECT at ^.layer_01111111: a point with color ? at (?,?)
0.322	IN  OBJECT at ^.layer_011111111: a point with color ? at (?,?)
0.317	IN  OBJECT at ^.layer_0111111111: a point with color ? at (?,?)
0.313	IN  DEF: ^.layer_0.shape.mask=Border
0.309	IN  DEF: ^.layer_01.shape.mask=Border
0.307	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size ^.layer_0.shape.size and color ^.layer_0111.shape.color and layers
  _0: a rectangle with size ^.layer_0.shape.size - 2 and color black and mask ? at (1,1)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask Border at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)
  _011111: a point with color ? at (?,?)
  _0111111: a point with color ? at (?,?)
  _01111111: a point with color ? at (?,?)
  _011111111: a point with color ? at (?,?)
  _0111111111: a point with color ? at (?,?)

DL input  with Mi: L = 252.5 + 11109.8 = 11362.3
DL output with Mo: L = 77.2 + 581.6 = 658.7
DL input+output M: L = 329.7 + 11691.4 = 12021.1

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Border at (2,0)
  _01: a rectangle with size (4,3) and color red and mask Border at (3,10)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (9,9)
  _0111: a point with color yellow at (0,4)
  _01111: a point with color yellow at (0,12)
  _011111: a point with color yellow at (4,1)
  _0111111: a point with color yellow at (6,4)
  _01111111: a point with color yellow at (9,4)
  _011111111: a point with color yellow at (12,4)
  _0111111111: a point with color yellow at (12,11)
diff: 
delta:
   (248.3 bits)
data: a background with size (7,7) and color yellow and layers
  _0: a rectangle with size (5,5) and color black and mask xxxxx|.xxxx|xxxxx|xxx.x|xxxxx at (1,1)
diff: 
delta:
   (16.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,13) and color black and layers
  _0: a rectangle with size (7,7) and color red and mask Border at (2,0)
  _01: a rectangle with size (4,3) and color red and mask Border at (3,10)
  _011: a rectangle with size (2,2) and color yellow and mask Odd Checkboard at (9,9)
  _0111: a point with color yellow at (0,4)
  _01111: a point with color yellow at (0,12)
  _011111: a point with color yellow at (4,1)
  _0111111: a point with color yellow at (6,4)
  _01111111: a point with color yellow at (9,4)
  _011111111: a point with color yellow at (12,4)
  _0111111111: a point with color yellow at (12,11)
diff: 
delta:
! 2 wrong pixels (generated / expected)

TRAIN fcb5c309.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask Border at (2,8)
  _01: a rectangle with size (5,6) and color blue and mask Border at (7,1)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (11,10)
  _0111: a point with color green at (0,13)
  _01111: a point with color green at (1,4)
  _011111: a point with color green at (2,3)
  _0111111: a point with color green at (3,11)
  _01111111: a point with color green at (4,1)
  _011111111: a point with color green at (4,5)
  _0111111111: a point with color green at (5,6)
diff: 
delta: (5,9)=3  (5,11)=3  (9,5)=3  (11,0)=3  (12,0)=3  (12,7)=3 
   (416.5 bits)
data: a background with size (6,7) and color green and layers
  _0: a rectangle with size (4,5) and color black and mask xx.xx|xxxxx|.x.xx|xxxxx at (1,1)
diff: 
delta:
   (18.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (13,16) and color black and layers
  _0: a rectangle with size (6,7) and color blue and mask Border at (2,8)
  _01: a rectangle with size (5,6) and color blue and mask Border at (7,1)
  _011: a rectangle with size (2,2) and color green and mask .x|xx at (11,10)
  _0111: a point with color green at (0,13)
  _01111: a point with color green at (1,4)
  _011111: a point with color green at (2,3)
  _0111111: a point with color green at (3,11)
  _01111111: a point with color green at (4,1)
  _011111111: a point with color green at (4,5)
  _0111111111: a point with color green at (5,6)
diff: 
delta: (5,9)=3  (5,11)=3  (9,5)=3  (11,0)=3  (12,0)=3  (12,7)=3 
! 3 wrong pixels (generated / expected)

TRAIN fcb5c309.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color green and mask Border at (3,10)
  _011: a rectangle with size (4,3) and color green and mask Border at (10,3)
  _0111: a point with color red at (0,8)
  _01111: a point with color red at (1,10)
  _011111: a point with color red at (2,3)
  _0111111: a point with color red at (2,5)
  _01111111: a point with color red at (4,8)
  _011111111: a point with color red at (4,12)
  _0111111111: a point with color red at (5,3)
diff: 
delta: (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
   (446.1 bits)
data: a background with size (7,7) and color red and layers
  _0: a rectangle with size (5,5) and color black and mask x.x.x|xxxxx|xxxxx|x.xxx|xxxx. at (1,1)
diff: 
delta:
   (22.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (15,16) and color black and layers
  _0: a rectangle with size (7,7) and color green and mask Border at (1,1)
  _01: a rectangle with size (5,4) and color green and mask Border at (3,10)
  _011: a rectangle with size (4,3) and color green and mask Border at (10,3)
  _0111: a point with color red at (0,8)
  _01111: a point with color red at (1,10)
  _011111: a point with color red at (2,3)
  _0111111: a point with color red at (2,5)
  _01111111: a point with color red at (4,8)
  _011111111: a point with color red at (4,12)
  _0111111111: a point with color red at (5,3)
diff: 
delta: (6,6)=2  (9,12)=2  (10,7)=2  (10,15)=2  (12,11)=2  (13,2)=2  (14,8)=2 
! 4 wrong pixels (generated / expected)

TRAIN fcb5c309.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (17,17) and color black and layers
  _0: a rectangle with size (8,8) and color blue and mask Border at (1,4)
  _01: a rectangle with size (5,6) and color blue and mask Border at (11,10)
  _011: a rectangle with size (3,3) and color blue and mask Border at (2,0)
  _0111: a point with color cyan at (0,14)
  _01111: a point with color cyan at (2,6)
  _011111: a point with color cyan at (2,8)
  _0111111: a point with color cyan at (2,12)
  _01111111: a point with color cyan at (3,12)
  _011111111: a point with color cyan at (3,14)
  _0111111111: a point with color cyan at (4,14)
diff: 
delta: (6,6)=8  (6,16)=8  (7,9)=8  (8,13)=8  (9,1)=8  (10,5)=8  (11,1)=8  (13,5)=8  (13,11)=8  (13,13)=8  (14,3)=8  (14,4)=8  (14,7)=8  (16,8)=8  (16,9)=8  (16,16)=8 
! 4 wrong pixels (generated / expected)

TEST fcb5c309.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 13.0 sec (13.0 sec/task)
bits-train-error = 581.6 bits (581.6 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-4] Checking task fcc82909.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 7843.8 = 7859.4
DL output with Mo: L = 15.6 + 16873.1 = 16888.7
DL input+output M: L = 31.2 + 24716.8 = 24748.0

# learning a model for train pairs
2.000	
1.721	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.600	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.500	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.396	OUT OBJECT at ^.layer_00: ^.layer_0
1.328	IN  OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.238	OUT OBJECT at ^.layer_011: ^.layer_01
1.168	IN  OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.078	OUT OBJECT at ^.layer_0111: ^.layer_011
1.042	OUT DEF: ^.size=^.size
1.011	IN  OBJECT at ^.layer_0111: a point with color ? at (?,?)
0.965	OUT OBJECT at ^.layer_01111: ^.layer_0111
0.931	IN  OBJECT at ^.layer_01111: a point with color ? at (?,?)
0.885	OUT OBJECT at ^.layer_011111: ^.layer_01111
0.872	IN  DEF: ^.layer_011.shape.mask=Full
TIMEOUT

# Learned model:
CONSTRUCT (Mo)
a background with size ^.size and color ? and layers
  _00: ^.layer_0
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: ^.layer_01
  _0111: ^.layer_011
  _01111: ^.layer_0111
  _011111: ^.layer_01111
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
  _011: a rectangle with size (?,?) and color ? and mask Full at (?,?)
  _0111: a point with color ? at (?,?)
  _01111: a point with color ? at (?,?)

DL input  with Mi: L = 152.3 + 5225.3 = 5377.6
DL output with Mo: L = 108.9 + 3063.3 = 3172.2
DL input+output M: L = 261.2 + 8288.6 = 8549.8

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (6,5)
  _0111: a point with color cyan at (5,5)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
   (139.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _0: a rectangle with size (3,2) and color green and mask Full (and Border) at (7,5)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (4,1)
  _011: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _0111: a rectangle with size (1,2) and color orange and mask Full at (6,5)
  _01111: a point with color cyan at (5,5)
  _011111: a point with color yellow at (5,6)
diff: 
delta:
   (65.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (1,2) and color brown and mask Full at (2,1)
  _01: a rectangle with size (1,2) and color pink and mask Full at (3,1)
  _011: a rectangle with size (1,2) and color orange and mask Full at (6,5)
  _0111: a point with color cyan at (5,5)
  _01111: a point with color yellow at (5,6)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN fcc82909.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,6)
  _0111: a point with color cyan at (1,3)
  _01111: a point with color brown at (2,2)
diff: 
delta:
   (154.3 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _0: a rectangle with size (3,2) and color green and mask Full (and Border) at (3,2)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (6,6)
  _011: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _0111: a rectangle with size (2,2) and color red and mask Full at (4,6)
  _01111: a point with color cyan at (1,3)
  _011111: a point with color brown at (2,2)
diff: 
delta:
   (65.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (1,2)
  _01: a rectangle with size (2,2) and color blue and mask Odd Checkboard at (4,6)
  _011: a rectangle with size (2,2) and color red and mask Full at (4,6)
  _0111: a point with color cyan at (1,3)
  _01111: a point with color brown at (2,2)
diff: 
delta:
! 14 wrong pixels (generated / expected)

TRAIN fcc82909.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _0111: a point with color red at (1,2)
  _01111: a point with color yellow at (1,3)
diff: 
delta: (2,2)=6  (2,3)=7# (5,4)=7#
   (228.6 bits)
data: a background with size (10,10) and color black and layers
  _00: a rectangle with size (2,2) and color pink and mask Full (and Border) at (5,4)
  _0: a rectangle with size (6,4) and color green and mask xx..|xx..|xx..|xx..|..xx|..xx at (3,2)
  _01: a rectangle with size (2,2) and color green and mask Full (and Border) at (3,6)
  _011: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _0111: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _01111: a point with color red at (1,2)
  _011111: a point with color yellow at (1,3)
diff: 
delta: (2,2)=6  (2,3)=7# (5,4)=7#
   (175.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _0111: a point with color red at (1,2)
  _01111: a point with color yellow at (1,3)
diff: 
delta: (2,2)=6  (2,3)=7# (5,4)=7#
! 23 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color pink and mask Full (and Border) at (5,4)
  _01: a rectangle with size (2,2) and color cyan and mask Odd Checkboard at (1,6)
  _011: a rectangle with size (2,2) and color brown and mask Full at (1,6)
  _0111: a point with color red at (1,2)
  _01111: a point with color pink at (2,2)
diff: 
delta: (1,3)=4  (2,3)=7# (5,4)=7#
! 23 wrong pixels (generated / expected)

TRAIN fcc82909.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (3,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,6)
  _0111: a point with color brown at (1,7)
  _01111: a point with color blue at (2,6)
diff: 
delta: (2,0)=2  (2,7)=6  (3,4)=7# (4,3)=8 
! 24 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (2,2) and color blue and mask Full (and Border) at (1,0)
  _01: a rectangle with size (2,2) and color yellow and mask Even Checkboard at (3,3)
  _011: a rectangle with size (1,1) and color red and mask Full at (1,6)
  _0111: a point with color brown at (1,7)
  _01111: a point with color pink at (2,7)
diff: 
delta: (2,0)=2  (2,6)=1  (3,4)=7# (4,3)=8 
! 24 wrong pixels (generated / expected)

TEST fcc82909.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 26.2 sec (26.2 sec/task)
bits-train-error = 3063.3 bits (3063.3 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-3] Checking task feca6190.json: 5 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 2896.5 = 2912.1
DL output with Mo: L = 15.6 + 27364.5 = 27380.1
DL input+output M: L = 31.2 + 30261.1 = 30292.3

# learning a model for train pairs
2.000	
1.728	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.542	OUT OBJECT at ^.layer_01: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.389	IN  OBJECT at ^.layer_0: a point with color ? at (?,?)
1.270	OUT OBJECT at ^.layer_011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.228	IN  DEF: ^.color=black
1.217	OUT DEF: ^.layer_0.shape.color=^.layer_0.shape.color
1.207	OUT DEF: ^.layer_0.pos.i=^.layer_0.pos.j
1.198	OUT DEF: ^.layer_01.pos.i=^.layer_0.pos.j + 2
1.194	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ^.layer_0.shape.color and mask ? at (^.layer_0.pos.j,?)
  _01: a rectangle with size (?,?) and color ? and mask ? at (^.layer_0.pos.j + 2,?)
  _011: a rectangle with size (?,?) and color ? and mask ? at (?,?)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a point with color ? at (?,?)

DL input  with Mi: L = 35.7 + 2307.0 = 2342.7
DL output with Mo: L = 136.9 + 10516.7 = 10653.6
DL input+output M: L = 172.6 + 12823.8 = 12996.3

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color blue at (0,0)
diff: 
delta: (0,2)=7#
   (46.5 bits)
data: a background with size (10,10) and color black and layers
  _0: a rectangle with size (10,10) and color blue and mask .........x|........x.|.......x..|......x...|.....x....|....x.....|...x......|..x.......|.x........|x......... at (0,0)
  _01: a rectangle with size (1,1) and color orange and mask Full at (2,9)
  _011: a rectangle with size (8,8) and color orange and mask .......x|......x.|.....x..|....x...|...x....|..x.....|.x......|x....... at (2,2)
diff: 
delta:
   (199.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color blue at (0,0)
diff: 
delta: (0,2)=7#
! 26 wrong pixels (generated / expected)
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color orange at (0,2)
diff: 
delta: (0,0)=1 
! 30 wrong pixels (generated / expected)

TRAIN feca6190.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
   (23.9 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color red and mask Full at (2,4)
  _01: a rectangle with size (1,1) and color red and mask Full at (4,2)
  _011: a rectangle with size (1,1) and color red and mask Full at (3,3)
diff: 
delta:
   (75.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color red at (0,2)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN feca6190.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,0)
diff: 
delta: (0,2)=6  (0,4)=8 
   (68.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (15,15) and color yellow and mask ..............x|.............x.|............x..|...........x...|..........x....|.........x.....|........x......|.......x.......|......x........|.....x.........|....x..........|...x...........|..x............|.x.............|x.............. at (0,0)
  _01: a rectangle with size (13,13) and color pink and mask ............x|...........x.|..........x..|.........x...|........x....|.......x.....|......x......|.....x.......|....x........|...x.........|..x..........|.x...........|x............ at (2,2)
  _011: a rectangle with size (11,11) and color cyan and mask ..........x|.........x.|........x..|.......x...|......x....|.....x.....|....x......|...x.......|..x........|.x.........|x.......... at (4,4)
diff: 
delta:
   (345.7 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,0)
diff: 
delta: (0,2)=6  (0,4)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color pink at (0,2)
diff: 
delta: (0,0)=4  (0,4)=8 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,4)
diff: 
delta: (0,0)=4  (0,2)=6 
! size mismatch, 10x10 instead of 15x15

TRAIN feca6190.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color brown at (0,1)
diff: 
delta: (0,3)=8  (0,4)=4 
   (68.2 bits)
data: a background with size (15,15) and color black and layers
  _0: a rectangle with size (14,14) and color brown and mask .............x|............x.|...........x..|..........x...|.........x....|........x.....|.......x......|......x.......|.....x........|....x.........|...x..........|..x...........|.x............|x............. at (1,1)
  _01: a rectangle with size (12,12) and color cyan and mask ...........x|..........x.|.........x..|........x...|.......x....|......x.....|.....x......|....x.......|...x........|..x.........|.x..........|x........... at (3,3)
  _011: a rectangle with size (11,11) and color yellow and mask ..........x|.........x.|........x..|.......x...|......x....|.....x.....|....x......|...x.......|..x........|.x.........|x.......... at (4,4)
diff: 
delta:
   (331.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color brown at (0,1)
diff: 
delta: (0,3)=8  (0,4)=4 
! size mismatch, 10x10 instead of 15x15
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,3)
diff: 
delta: (0,1)=9# (0,4)=4 
! size mismatch, 10x10 instead of 15x15
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,4)
diff: 
delta: (0,1)=9# (0,3)=8 
! size mismatch, 10x10 instead of 15x15

TRAIN feca6190.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
   (23.9 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (1,1) and color yellow and mask Full at (1,4)
  _01: a rectangle with size (1,1) and color yellow and mask Full at (3,2)
  _011: a rectangle with size (4,4) and color yellow and mask ...x|..x.|.x..|x... at (1,1)
diff: 
delta:
   (99.8 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color yellow at (0,1)
diff: 
delta:
! size mismatch, 10x10 instead of 5x5

TRAIN feca6190.json/5: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (1,5) and color black and layers
  _0: a point with color pink at (0,1)
diff: 
delta: (0,2)=7# (0,3)=8  (0,4)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 2
data: a background with size (1,5) and color black and layers
  _0: a point with color orange at (0,2)
diff: 
delta: (0,1)=6  (0,3)=8  (0,4)=9#
! size mismatch, 10x10 instead of 20x20
>> Trial 3
data: a background with size (1,5) and color black and layers
  _0: a point with color cyan at (0,3)
diff: 
delta: (0,1)=6  (0,2)=7# (0,4)=9#
! size mismatch, 10x10 instead of 20x20

TEST feca6190.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 3.9 sec (3.9 sec/task)
bits-train-error = 10516.7 bits (10516.7 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-2] Checking task ff28f65a.json: 8 train, 3 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 22829.0 = 22844.7
DL output with Mo: L = 15.6 + 6082.0 = 6097.7
DL input+output M: L = 31.2 + 28911.1 = 28942.3

# learning a model for train pairs
2.000	
1.623	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.309	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.206	OUT DEF: ^.layer_0.pos='(0,0)
1.122	OUT DEF: ^.size.i=3
1.037	OUT DEF: ^.size.j=3
0.963	OUT DEF: ^.layer_0.shape.color=blue
0.931	OUT DEF: ^.color=black
0.911	IN  DEF: ^.layer_0.shape.color=red
0.903	IN  DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (3,3) and color black and layers
  _0: a rectangle with size (?,?) and color blue and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color red and mask ? at (?,?)

DL input  with Mi: L = 50.3 + 13524.3 = 13574.6
DL output with Mo: L = 53.7 + 1826.2 = 1879.9
DL input+output M: L = 104.0 + 15350.5 = 15454.5

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta:
   (39.2 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (0,0)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,1)
diff: 
delta:
   (62.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=1 
   (33.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,1)
diff: 
delta:
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (2,2)
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2 
   (165.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,3) and color blue and mask Even Checkboard at (0,0)
diff: 
delta:
   (19.5 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (2,2)
diff: 
delta: (1,1)=2  (1,2)=2  (2,1)=2  (2,2)=2 
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/3: 0 - (FAILURE)

## instance 4

> Input and output best reading:
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
diff: 
delta: (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
   (139.1 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta: (0,2)=1 
   (33.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
diff: 
delta: (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/4: 0 - (FAILURE)

## instance 5

> Input and output best reading:
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
diff: 
delta:
   (34.8 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (1,1) and color blue and mask Full at (0,0)
diff: 
delta:
   (10.0 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (2,2) and color red and mask Full (and Border) at (1,1)
diff: 
delta:
! 3 wrong pixels (generated / expected)

TRAIN ff28f65a.json/5: 0 - (FAILURE)

## instance 6

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full (and Border) at (0,4)
diff: 
delta: (2,1)=2  (2,2)=2  (2,4)=0  (2,5)=0  (3,1)=2  (3,2)=2  (5,1)=2  (5,2)=2  (6,1)=2  (6,2)=2 
   (290.3 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (5,2) and color red and mask Full (and Border) at (0,4)
diff: 
delta: (2,1)=2  (2,2)=2  (2,4)=0  (2,5)=0  (3,1)=2  (3,2)=2  (5,1)=2  (5,2)=2  (6,1)=2  (6,2)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/6: 0 - (FAILURE)

## instance 7

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (3,3)
diff: 
delta: (0,4)=2  (0,5)=2  (1,1)=2  (1,2)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (4,0)=2  (4,1)=2  (5,0)=2  (5,1)=2 
   (359.0 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask Even Checkboard at (0,0)
diff: 
delta:
   (20.6 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (3,3)
diff: 
delta: (0,4)=2  (0,5)=2  (1,1)=2  (1,2)=2  (1,4)=2  (1,5)=2  (2,1)=2  (2,2)=2  (4,0)=2  (4,1)=2  (5,0)=2  (5,1)=2 
! 5 wrong pixels (generated / expected)

TRAIN ff28f65a.json/7: 0 - (FAILURE)

## instance 8

> Input and output best reading:
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (0,0)
diff: 
delta: (0,5)=2  (0,6)=2  (1,5)=2  (1,6)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
   (262.5 bits)
data: a background with size (3,3) and color black and layers
  _0: a rectangle with size (3,3) and color blue and mask x.x|.x.|x.. at (0,0)
diff: 
delta:
   (27.9 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask ..xx|..xx|xx..|xx.. at (0,0)
diff: 
delta: (0,5)=2  (0,6)=2  (1,5)=2  (1,6)=2  (3,3)=2  (3,4)=2  (4,3)=2  (4,4)=2 
! 4 wrong pixels (generated / expected)

TRAIN ff28f65a.json/8: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (6,6) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,0)
diff: 
delta: (0,3)=2  (0,4)=2  (1,3)=2  (1,4)=2 
! 3 wrong pixels (generated / expected)

TEST ff28f65a.json/1: 0 - (FAILURE)

## instance 2

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (1,3)
diff: 
delta: (1,0)=2  (1,1)=2  (2,0)=2  (2,1)=2  (4,2)=2  (4,3)=2  (5,2)=2  (5,3)=2 
! 4 wrong pixels (generated / expected)

TEST ff28f65a.json/2: 0 - (FAILURE)

## instance 3

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (7,7) and color black and layers
  _0: a rectangle with size (4,4) and color red and mask xx..|xx..|..xx|..xx at (0,3)
diff: 
delta: (0,0)=2  (0,1)=2  (1,0)=2  (1,1)=2  (3,1)=2  (3,2)=2  (4,1)=2  (4,2)=2  (5,4)=2  (5,5)=2  (6,4)=2  (6,5)=2 
! 5 wrong pixels (generated / expected)

TEST ff28f65a.json/3: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 0.6 sec (0.6 sec/task)
bits-train-error = 1826.2 bits (1826.2 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00

=====================================
[-1] Checking task ff805c23.json: 3 train, 1 test

# evaluating init_model
DL input  with Mi: L = 15.6 + 279465.8 = 279481.4
DL output with Mo: L = 15.6 + 5664.6 = 5680.2
DL input+output M: L = 31.2 + 285130.3 = 285161.6

# learning a model for train pairs
2.000	
1.454	OUT OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
1.035	IN  OBJECT at ^.layer_0: a rectangle with size (?,?) and color ? and mask ? at (?,?)
0.986	OUT DEF: ^.layer_0.pos='(0,0)
0.973	OUT DEF: ^.color=black

# Learned model:
CONSTRUCT (Mo)
a background with size (?,?) and color black and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at '(0,0)
WHERE (Mi)
a background with size (?,?) and color ? and layers
  _0: a rectangle with size (?,?) and color ? and mask ? at (?,?)

DL input  with Mi: L = 48.8 + 162476.3 = 162525.2
DL output with Mo: L = 45.0 + 2176.0 = 2221.0
DL input+output M: L = 93.9 + 164652.3 = 164746.2

# train input/output grids

## instance 1

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color red and mask .......xxx....xxx.......|......xx.xx..xx.xx......|......x..x....x..x......|......xxxxxxxxxxxx......|.......x.xxxxxx.x.......|.........xxxxxx.........|.xxx..x..xxxxxx..x..xxx.|xx.xx..xx.xxxx.xx..xx.xx|x..x...xx..xx..xx...x..x|xxxxxxx..xxxxxx..xxxxxxx|.x.xxxxx.x.xx.x.xxxxx.x.|...xxxxxxxx..xxxxxxxx...|...xxxxxxxx..xxxxxxxx...|.x.xxxxx.x.xx.x.xxxxx.x.|xxxxxxx..xxxxxx..xxxxxxx|x..x...xx..xx..xx...x..x|xx.xx..xx.xxxx.xx..xx.xx|.xxx..x..xxxxxx..x..xxx.|.........xxxxxx.........|.......x.xxxxxx.x.......|......xxxxxxxxxxxx......|......x..x....x..x......|......xx.xx..xx.xx......|.......xxx....xxx....... at (0,0)
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,18)=1  (0,19)=1  (0,20)=1  (0,21)=1  (0,22)=1  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,18)=1  (1,19)=1  (1,20)=1  (1,21)=1  (1,22)=1  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,5)=3  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=3  (3,0)=3  (3,1)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,18)=1  (3,19)=1  (3,20)=1  (3,21)=1  (3,22)=1  (3,23)=3  (4,0)=3  (4,1)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,18)=1  (4,19)=1  (4,20)=1  (4,21)=1  (4,22)=1  (4,23)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,18)=3  (5,19)=3  (5,20)=3  (5,21)=3  (18,2)=3  (18,3)=3  (18,4)=3  (18,5)=3  (18,18)=3  (18,19)=3  (18,20)=3  (18,21)=3  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,5)=3  (19,18)=3  (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,3)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,20)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,5)=3  (21,18)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
   (3795.5 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color green and mask .xxxx|.xxxx|x..xx|xxx.x|xxx.x at (0,0)
diff: 
delta:
   (64.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (24,24) and color red and mask .......xxx....xxx.......|......xx.xx..xx.xx......|......x..x....x..x......|......xxxxxxxxxxxx......|.......x.xxxxxx.x.......|.........xxxxxx.........|.xxx..x..xxxxxx..x..xxx.|xx.xx..xx.xxxx.xx..xx.xx|x..x...xx..xx..xx...x..x|xxxxxxx..xxxxxx..xxxxxxx|.x.xxxxx.x.xx.x.xxxxx.x.|...xxxxxxxx..xxxxxxxx...|...xxxxxxxx..xxxxxxxx...|.x.xxxxx.x.xx.x.xxxxx.x.|xxxxxxx..xxxxxx..xxxxxxx|x..x...xx..xx..xx...x..x|xx.xx..xx.xxxx.xx..xx.xx|.xxx..x..xxxxxx..x..xxx.|.........xxxxxx.........|.......x.xxxxxx.x.......|......xxxxxxxxxxxx......|......x..x....x..x......|......xx.xx..xx.xx......|.......xxx....xxx....... at (0,0)
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,18)=1  (0,19)=1  (0,20)=1  (0,21)=1  (0,22)=1  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,18)=1  (1,19)=1  (1,20)=1  (1,21)=1  (1,22)=1  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,5)=3  (2,18)=1  (2,19)=1  (2,20)=1  (2,21)=1  (2,22)=1  (2,23)=3  (3,0)=3  (3,1)=3  (3,3)=3  (3,4)=3  (3,5)=3  (3,18)=1  (3,19)=1  (3,20)=1  (3,21)=1  (3,22)=1  (3,23)=3  (4,0)=3  (4,1)=3  (4,3)=3  (4,4)=3  (4,5)=3  (4,18)=1  (4,19)=1  (4,20)=1  (4,21)=1  (4,22)=1  (4,23)=3  (5,2)=3  (5,3)=3  (5,4)=3  (5,5)=3  (5,18)=3  (5,19)=3  (5,20)=3  (5,21)=3  (18,2)=3  (18,3)=3  (18,4)=3  (18,5)=3  (18,18)=3  (18,19)=3  (18,20)=3  (18,21)=3  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,5)=3  (19,18)=3  (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,3)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,20)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,5)=3  (21,18)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/1: 0 - (FAILURE)

## instance 2

> Input and output best reading:
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask xxxxxxxxxxxx|xx.xxxxxx.xx|x..x.xx.x..x|xxxxxxxxxxxx|xx.xxxxxx.xx|.......xxxxx|.......xxxxx|.....xxxx.xx|.....xxxxxxx|.....xx.x..x|xx.xxxxxx.xx|xxxxxxxxxxxx at (6,6)
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,5)=3  (0,7)=8  (0,8)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,15)=8  (0,16)=8  (0,18)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,2)=3  (1,4)=3  (1,6)=8  (1,8)=8  (1,15)=8  (1,17)=8  (1,19)=3  (1,21)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=8  (2,7)=8  (2,8)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=3  (2,19)=3  (2,20)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,9)=8  (3,11)=8  (3,12)=8  (3,14)=8  (3,18)=3  (3,19)=3  (3,21)=3  (3,23)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,6)=8  (4,8)=8  (4,11)=8  (4,12)=8  (4,15)=8  (4,17)=8  (4,20)=3  (4,21)=3  (4,22)=3  (5,0)=3  (5,2)=3  (5,3)=3  (5,5)=3  (5,6)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,17)=8  (5,18)=3  (5,20)=3  (5,21)=3  (5,23)=3  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,18)=8  (6,19)=8  (6,21)=8  (6,22)=8  (7,0)=8  (7,2)=8  (7,21)=8  (7,23)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=8  (8,5)=8  (8,18)=8  (8,19)=8  (8,21)=8  (8,22)=8  (8,23)=8  (9,3)=8  (9,5)=8  (9,18)=8  (9,20)=8  (10,0)=8  (10,2)=8  (10,5)=8  (10,18)=8  (10,21)=8  (10,23)=8  (11,0)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,19)=8  (11,20)=8  (11,21)=8  (11,23)=8  (12,0)=8  (12,2)=8  (12,3)=8  (12,4)=8  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,19)=8  (12,20)=8  (12,21)=8  (12,23)=8  (13,0)=8  (13,2)=8  (13,5)=8  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,18)=8  (13,21)=8  (13,23)=8  (14,3)=8  (14,5)=8  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,18)=8  (14,20)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,4)=8  (15,5)=8  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,18)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,23)=8  (16,0)=8  (16,2)=8  (16,21)=8  (16,23)=8  (17,1)=8  (17,2)=8  (17,4)=8  (17,5)=8  (17,18)=8  (17,19)=8  (17,21)=8  (17,22)=8  (18,0)=3  (18,2)=3  (18,3)=3  (18,5)=3  (18,6)=8  (18,8)=8  (18,9)=8  (18,10)=8  (18,13)=8  (18,14)=8  (18,15)=8  (18,17)=8  (18,18)=3  (18,20)=3  (18,21)=3  (18,23)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,6)=8  (19,8)=8  (19,11)=8  (19,12)=8  (19,15)=8  (19,17)=8  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=3  (20,2)=3  (20,4)=3  (20,5)=3  (20,9)=8  (20,11)=8  (20,12)=8  (20,14)=8  (20,18)=3  (20,19)=3  (20,21)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=3  (21,4)=3  (21,5)=3  (21,6)=8  (21,7)=8  (21,8)=8  (21,10)=8  (21,11)=8  (21,12)=8  (21,13)=8  (21,15)=8  (21,16)=8  (21,17)=8  (21,18)=3  (21,19)=3  (21,20)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,2)=3  (22,4)=3  (22,6)=8  (22,8)=8  (22,15)=8  (22,17)=8  (22,19)=3  (22,21)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,5)=3  (23,7)=8  (23,8)=8  (23,10)=8  (23,11)=8  (23,12)=8  (23,13)=8  (23,15)=8  (23,16)=8  (23,18)=3  (23,20)=3  (23,21)=3  (23,22)=3 
   (7927.1 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color pink and mask xxxxx|xxxxx|xx.xx|xxxxx|x..x. at (0,0)
diff: 
delta:
   (60.1 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color black and layers
  _0: a rectangle with size (12,12) and color pink and mask xxxxxxxxxxxx|xx.xxxxxx.xx|x..x.xx.x..x|xxxxxxxxxxxx|xx.xxxxxx.xx|.......xxxxx|.......xxxxx|.....xxxx.xx|.....xxxxxxx|.....xx.x..x|xx.xxxxxx.xx|xxxxxxxxxxxx at (6,6)
diff: 
delta: (0,1)=3  (0,2)=3  (0,3)=3  (0,5)=3  (0,7)=8  (0,8)=8  (0,10)=8  (0,11)=8  (0,12)=8  (0,13)=8  (0,15)=8  (0,16)=8  (0,18)=3  (0,20)=3  (0,21)=3  (0,22)=3  (1,0)=3  (1,2)=3  (1,4)=3  (1,6)=8  (1,8)=8  (1,15)=8  (1,17)=8  (1,19)=3  (1,21)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,3)=3  (2,4)=3  (2,5)=3  (2,6)=8  (2,7)=8  (2,8)=8  (2,10)=8  (2,11)=8  (2,12)=8  (2,13)=8  (2,15)=8  (2,16)=8  (2,17)=8  (2,18)=3  (2,19)=3  (2,20)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,2)=3  (3,4)=3  (3,5)=3  (3,9)=8  (3,11)=8  (3,12)=8  (3,14)=8  (3,18)=3  (3,19)=3  (3,21)=3  (3,23)=3  (4,1)=3  (4,2)=3  (4,3)=3  (4,6)=8  (4,8)=8  (4,11)=8  (4,12)=8  (4,15)=8  (4,17)=8  (4,20)=3  (4,21)=3  (4,22)=3  (5,0)=3  (5,2)=3  (5,3)=3  (5,5)=3  (5,6)=8  (5,8)=8  (5,9)=8  (5,10)=8  (5,13)=8  (5,14)=8  (5,15)=8  (5,17)=8  (5,18)=3  (5,20)=3  (5,21)=3  (5,23)=3  (6,1)=8  (6,2)=8  (6,4)=8  (6,5)=8  (6,18)=8  (6,19)=8  (6,21)=8  (6,22)=8  (7,0)=8  (7,2)=8  (7,21)=8  (7,23)=8  (8,0)=8  (8,1)=8  (8,2)=8  (8,4)=8  (8,5)=8  (8,18)=8  (8,19)=8  (8,21)=8  (8,22)=8  (8,23)=8  (9,3)=8  (9,5)=8  (9,18)=8  (9,20)=8  (10,0)=8  (10,2)=8  (10,5)=8  (10,18)=8  (10,21)=8  (10,23)=8  (11,0)=8  (11,2)=8  (11,3)=8  (11,4)=8  (11,6)=1  (11,7)=1  (11,8)=1  (11,9)=1  (11,10)=1  (11,19)=8  (11,20)=8  (11,21)=8  (11,23)=8  (12,0)=8  (12,2)=8  (12,3)=8  (12,4)=8  (12,6)=1  (12,7)=1  (12,8)=1  (12,9)=1  (12,10)=1  (12,19)=8  (12,20)=8  (12,21)=8  (12,23)=8  (13,0)=8  (13,2)=8  (13,5)=8  (13,6)=1  (13,7)=1  (13,8)=1  (13,9)=1  (13,10)=1  (13,18)=8  (13,21)=8  (13,23)=8  (14,3)=8  (14,5)=8  (14,6)=1  (14,7)=1  (14,8)=1  (14,9)=1  (14,10)=1  (14,18)=8  (14,20)=8  (15,0)=8  (15,1)=8  (15,2)=8  (15,4)=8  (15,5)=8  (15,6)=1  (15,7)=1  (15,8)=1  (15,9)=1  (15,10)=1  (15,18)=8  (15,19)=8  (15,21)=8  (15,22)=8  (15,23)=8  (16,0)=8  (16,2)=8  (16,21)=8  (16,23)=8  (17,1)=8  (17,2)=8  (17,4)=8  (17,5)=8  (17,18)=8  (17,19)=8  (17,21)=8  (17,22)=8  (18,0)=3  (18,2)=3  (18,3)=3  (18,5)=3  (18,6)=8  (18,8)=8  (18,9)=8  (18,10)=8  (18,13)=8  (18,14)=8  (18,15)=8  (18,17)=8  (18,18)=3  (18,20)=3  (18,21)=3  (18,23)=3  (19,1)=3  (19,2)=3  (19,3)=3  (19,6)=8  (19,8)=8  (19,11)=8  (19,12)=8  (19,15)=8  (19,17)=8  (19,20)=3  (19,21)=3  (19,22)=3  (20,0)=3  (20,2)=3  (20,4)=3  (20,5)=3  (20,9)=8  (20,11)=8  (20,12)=8  (20,14)=8  (20,18)=3  (20,19)=3  (20,21)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,3)=3  (21,4)=3  (21,5)=3  (21,6)=8  (21,7)=8  (21,8)=8  (21,10)=8  (21,11)=8  (21,12)=8  (21,13)=8  (21,15)=8  (21,16)=8  (21,17)=8  (21,18)=3  (21,19)=3  (21,20)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,2)=3  (22,4)=3  (22,6)=8  (22,8)=8  (22,15)=8  (22,17)=8  (22,19)=3  (22,21)=3  (22,23)=3  (23,1)=3  (23,2)=3  (23,3)=3  (23,5)=3  (23,7)=8  (23,8)=8  (23,10)=8  (23,11)=8  (23,12)=8  (23,13)=8  (23,15)=8  (23,16)=8  (23,18)=3  (23,20)=3  (23,21)=3  (23,22)=3 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/2: 0 - (FAILURE)

## instance 3

> Input and output best reading:
data: a background with size (24,24) and color grey and layers
  _0: a rectangle with size (24,24) and color black and mask .........xx..xx.........|........xxxxxxxx........|...xxx.xx..xx..xx.xxx...|..xx..xx.x....x.xx..xx..|..x..xxx..xxxx..xxx..x..|..x.x..xx.xxxx.xx..x.x..|...xx.x.xx....xx.x.xx...|..xxxx...xx..xx...xxxx..|.xx..xx...x..x...xx..xx.|xx.x..xx........xx..x.xx|xx..xx.xx......xx.xx..xx|.xx.xx............xx.xx.|.xx.xx............xx.xx.|xx..xx.xx......xx.xx..xx|xx.x..xx........xx..x.xx|.xx..xx..........xx..xx.|..xxxx...x........xxxx..|...xx.x.xx.....x.x.xx...|..x.x..xx......xx..x.x..|..x..xxx........xxx..x..|..xx..xx.x....x.xx..xx..|...xxx.xx..xx..xx.xxx...|........xxxxxxxx........|.........xx..xx......... at (0,0)
diff: 
delta: (0,0)=0  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=0  (0,18)=0  (0,19)=3  (0,20)=3  (0,21)=3  (0,22)=3  (0,23)=0  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,18)=3  (1,19)=3  (1,20)=3  (1,21)=3  (1,22)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,1)=3  (3,4)=3  (3,5)=3  (3,18)=3  (3,19)=3  (3,22)=3  (3,23)=3  (4,0)=3  (4,1)=3  (4,3)=3  (4,4)=3  (4,19)=3  (4,20)=3  (4,22)=3  (4,23)=3  (5,0)=0  (5,1)=3  (5,3)=3  (5,5)=3  (5,18)=3  (5,20)=3  (5,22)=3  (5,23)=0  (10,10)=0  (10,13)=0  (11,11)=0  (11,12)=0  (12,11)=0  (12,12)=0  (13,10)=0  (13,13)=0  (15,10)=1  (15,11)=1  (15,12)=1  (15,13)=1  (15,14)=1  (16,10)=1  (16,11)=1  (16,12)=1  (16,13)=1  (16,14)=1  (17,10)=1  (17,11)=1  (17,12)=1  (17,13)=1  (17,14)=1  (18,0)=0  (18,1)=3  (18,3)=3  (18,5)=3  (18,10)=1  (18,11)=1  (18,12)=1  (18,13)=1  (18,14)=1  (18,18)=3  (18,20)=3  (18,22)=3  (18,23)=0  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,10)=1  (19,11)=1  (19,12)=1  (19,13)=1  (19,14)=1  (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=3  (22,18)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,0)=0  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,5)=0  (23,18)=0  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3  (23,23)=0 
   (4525.0 bits)
data: a background with size (5,5) and color black and layers
  _0: a rectangle with size (5,5) and color grey and mask .xx..|.xx..|xxxx.|....x|....x at (0,0)
diff: 
delta: (0,4)=5#
   (93.4 bits)

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color grey and layers
  _0: a rectangle with size (24,24) and color black and mask .........xx..xx.........|........xxxxxxxx........|...xxx.xx..xx..xx.xxx...|..xx..xx.x....x.xx..xx..|..x..xxx..xxxx..xxx..x..|..x.x..xx.xxxx.xx..x.x..|...xx.x.xx....xx.x.xx...|..xxxx...xx..xx...xxxx..|.xx..xx...x..x...xx..xx.|xx.x..xx........xx..x.xx|xx..xx.xx......xx.xx..xx|.xx.xx............xx.xx.|.xx.xx............xx.xx.|xx..xx.xx......xx.xx..xx|xx.x..xx........xx..x.xx|.xx..xx..........xx..xx.|..xxxx...x........xxxx..|...xx.x.xx.....x.x.xx...|..x.x..xx......xx..x.x..|..x..xxx........xxx..x..|..xx..xx.x....x.xx..xx..|...xxx.xx..xx..xx.xxx...|........xxxxxxxx........|.........xx..xx......... at (0,0)
diff: 
delta: (0,0)=0  (0,1)=3  (0,2)=3  (0,3)=3  (0,4)=3  (0,5)=0  (0,18)=0  (0,19)=3  (0,20)=3  (0,21)=3  (0,22)=3  (0,23)=0  (1,0)=3  (1,1)=3  (1,2)=3  (1,3)=3  (1,4)=3  (1,5)=3  (1,18)=3  (1,19)=3  (1,20)=3  (1,21)=3  (1,22)=3  (1,23)=3  (2,0)=3  (2,1)=3  (2,2)=3  (2,21)=3  (2,22)=3  (2,23)=3  (3,0)=3  (3,1)=3  (3,4)=3  (3,5)=3  (3,18)=3  (3,19)=3  (3,22)=3  (3,23)=3  (4,0)=3  (4,1)=3  (4,3)=3  (4,4)=3  (4,19)=3  (4,20)=3  (4,22)=3  (4,23)=3  (5,0)=0  (5,1)=3  (5,3)=3  (5,5)=3  (5,18)=3  (5,20)=3  (5,22)=3  (5,23)=0  (10,10)=0  (10,13)=0  (11,11)=0  (11,12)=0  (12,11)=0  (12,12)=0  (13,10)=0  (13,13)=0  (15,10)=1  (15,11)=1  (15,12)=1  (15,13)=1  (15,14)=1  (16,10)=1  (16,11)=1  (16,12)=1  (16,13)=1  (16,14)=1  (17,10)=1  (17,11)=1  (17,12)=1  (17,13)=1  (17,14)=1  (18,0)=0  (18,1)=3  (18,3)=3  (18,5)=3  (18,10)=1  (18,11)=1  (18,12)=1  (18,13)=1  (18,14)=1  (18,18)=3  (18,20)=3  (18,22)=3  (18,23)=0  (19,0)=3  (19,1)=3  (19,3)=3  (19,4)=3  (19,10)=1  (19,11)=1  (19,12)=1  (19,13)=1  (19,14)=1  (19,19)=3  (19,20)=3  (19,22)=3  (19,23)=3  (20,0)=3  (20,1)=3  (20,4)=3  (20,5)=3  (20,18)=3  (20,19)=3  (20,22)=3  (20,23)=3  (21,0)=3  (21,1)=3  (21,2)=3  (21,21)=3  (21,22)=3  (21,23)=3  (22,0)=3  (22,1)=3  (22,2)=3  (22,3)=3  (22,4)=3  (22,5)=3  (22,18)=3  (22,19)=3  (22,20)=3  (22,21)=3  (22,22)=3  (22,23)=3  (23,0)=0  (23,1)=3  (23,2)=3  (23,3)=3  (23,4)=3  (23,5)=0  (23,18)=0  (23,19)=3  (23,20)=3  (23,21)=3  (23,22)=3  (23,23)=0 
! size mismatch, 10x10 instead of 5x5

TRAIN ff805c23.json/3: 0 - (FAILURE)

# Test input/output grids

## instance 1

> Output prediction from input (up to 3 trials):
>> Trial 1
data: a background with size (24,24) and color green and layers
  _0: a rectangle with size (12,12) and color cyan and mask Full at (6,6)
diff: 
delta: (0,0)=4  (0,1)=4  (0,2)=4  (0,3)=0  (0,4)=4  (0,5)=0  (0,6)=0  (0,10)=0  (0,11)=0  (0,12)=0  (0,13)=0  (0,17)=0  (0,18)=0  (0,19)=4  (0,20)=0  (0,21)=4  (0,22)=4  (0,23)=4  (1,0)=4  (1,1)=4  (1,2)=4  (1,3)=4  (1,4)=0  (1,5)=4  (1,10)=0  (1,13)=0  (1,18)=4  (1,19)=0  (1,20)=4  (1,21)=4  (1,22)=4  (1,23)=4  (2,0)=4  (2,1)=4  (2,2)=0  (2,3)=4  (2,4)=0  (2,5)=0  (2,8)=0  (2,9)=0  (2,14)=0  (2,15)=0  (2,18)=0  (2,19)=0  (2,20)=4  (2,21)=0  (2,22)=4  (2,23)=4  (3,0)=0  (3,1)=4  (3,2)=4  (3,3)=0  (3,4)=4  (3,5)=4  (3,8)=0  (3,9)=0  (3,14)=0  (3,15)=0  (3,18)=4  (3,19)=4  (3,20)=0  (3,21)=4  (3,22)=4  (3,23)=0  (4,0)=4  (4,1)=0  (4,2)=0  (4,3)=4  (4,4)=4  (4,5)=4  (4,6)=0  (4,7)=0  (4,10)=0  (4,13)=0  (4,16)=0  (4,17)=0  (4,18)=4  (4,19)=4  (4,20)=4  (4,21)=0  (4,22)=0  (4,23)=4  (5,0)=0  (5,1)=4  (5,2)=0  (5,3)=4  (5,4)=4  (5,5)=0  (5,6)=0  (5,17)=0  (5,18)=0  (5,19)=4  (5,20)=4  (5,21)=0  (5,22)=4  (5,23)=0  (6,0)=0  (6,4)=0  (6,5)=0  (6,9)=1  (6,10)=1  (6,11)=1  (6,12)=1  (6,13)=1  (6,18)=0  (6,19)=0  (6,23)=0  (7,4)=0  (7,9)=1  (7,10)=1  (7,11)=1  (7,12)=1  (7,13)=1  (7,14)=0  (7,19)=0  (8,2)=0  (8,3)=0  (8,9)=1  (8,10)=1  (8,11)=1  (8,12)=1  (8,13)=1  (8,14)=0  (8,20)=0  (8,21)=0  (9,2)=0  (9,3)=0  (9,7)=0  (9,8)=0  (9,9)=1  (9,10)=1  (9,11)=1  (9,12)=1  (9,13)=1  (9,15)=0  (9,16)=0  (9,20)=0  (9,21)=0  (10,0)=0  (10,1)=0  (10,4)=0  (10,7)=0  (10,9)=1  (10,10)=1  (10,11)=1  (10,12)=1  (10,13)=1  (10,16)=0  (10,19)=0  (10,22)=0  (10,23)=0  (11,0)=0  (11,8)=0  (11,15)=0  (11,23)=0  (12,0)=0  (12,8)=0  (12,15)=0  (12,23)=0  (13,0)=0  (13,1)=0  (13,4)=0  (13,7)=0  (13,10)=0  (13,13)=0  (13,16)=0  (13,19)=0  (13,22)=0  (13,23)=0  (14,2)=0  (14,3)=0  (14,7)=0  (14,8)=0  (14,15)=0  (14,16)=0  (14,20)=0  (14,21)=0  (15,2)=0  (15,3)=0  (15,9)=0  (15,11)=0  (15,12)=0  (15,14)=0  (15,20)=0  (15,21)=0  (16,4)=0  (16,9)=0  (16,10)=0  (16,13)=0  (16,14)=0  (16,19)=0  (17,0)=0  (17,4)=0  (17,5)=0  (17,18)=0  (17,19)=0  (17,23)=0  (18,0)=0  (18,1)=4  (18,2)=0  (18,3)=4  (18,4)=4  (18,5)=0  (18,6)=0  (18,17)=0  (18,18)=0  (18,19)=4  (18,20)=4  (18,21)=0  (18,22)=4  (18,23)=0  (19,0)=4  (19,1)=0  (19,2)=0  (19,3)=4  (19,4)=4  (19,5)=4  (19,6)=0  (19,7)=0  (19,10)=0  (19,13)=0  (19,16)=0  (19,17)=0  (19,18)=4  (19,19)=4  (19,20)=4  (19,21)=0  (19,22)=0  (19,23)=4  (20,0)=0  (20,1)=4  (20,2)=4  (20,3)=0  (20,4)=4  (20,5)=4  (20,8)=0  (20,9)=0  (20,14)=0  (20,15)=0  (20,18)=4  (20,19)=4  (20,20)=0  (20,21)=4  (20,22)=4  (20,23)=0  (21,0)=4  (21,1)=4  (21,2)=0  (21,3)=4  (21,4)=0  (21,5)=0  (21,8)=0  (21,9)=0  (21,14)=0  (21,15)=0  (21,18)=0  (21,19)=0  (21,20)=4  (21,21)=0  (21,22)=4  (21,23)=4  (22,0)=4  (22,1)=4  (22,2)=4  (22,3)=4  (22,4)=0  (22,5)=4  (22,10)=0  (22,13)=0  (22,18)=4  (22,19)=0  (22,20)=4  (22,21)=4  (22,22)=4  (22,23)=4  (23,0)=4  (23,1)=4  (23,2)=4  (23,3)=0  (23,4)=4  (23,5)=0  (23,6)=0  (23,10)=0  (23,11)=0  (23,12)=0  (23,13)=0  (23,17)=0  (23,18)=0  (23,19)=4  (23,20)=0  (23,21)=4  (23,22)=4  (23,23)=4 
! size mismatch, 10x10 instead of 5x5

TEST ff805c23.json/1: 0 - (FAILURE)

# Performance measures on task
runtime-learning = 1.3 sec (1.3 sec/task)
bits-train-error = 2176.0 bits (2176.0 bits/task)
acc-train-micro = 0.00 tasks (0.00%)
acc-train-macro = 0.00 tasks (0.00%)
acc-train-mrr = 0.00
acc-test-micro = 0.00 tasks (0.00%)
acc-test-macro = 0.00 tasks (0.00%)
acc-test-mrr = 0.00


## performance measures averaged over 400 tasks
runtime-learning = 5042.3 sec (12.6 sec/task)
bits-train-error = 3797261.0 bits (9493.2 bits/task)
acc-train-micro = 59.62 tasks (14.90%)
acc-train-macro = 49.00 tasks (12.25%)
acc-train-mrr = 0.14
acc-test-micro = 42.50 tasks (10.62%)
acc-test-macro = 42.00 tasks (10.50%)
acc-test-mrr = 0.10

// Profiling...
#calls	#calls/s	Time (s)	Percentage	Section
//      3030	  316647.5	    0.0	  0.0%	Grid.diff
//      6611	  275389.5	    0.0	  0.0%	Model2.size_of_data
//      9735	  309086.9	    0.0	  0.0%	Model2.shape_refinements
//      4646	   63098.4	    0.1	  0.0%	Model2.write_grid
//    243063	  892301.8	    0.3	  0.0%	Model2.dl_model_data
//     12104	   37134.8	    0.3	  0.0%	Model2.defs_refinements/first/patterns
//     58870	  133852.0	    0.4	  0.0%	Grid.split_part
//    299254	  475824.3	    0.6	  0.0%	Model2.insert_ilist
//    859314	  777245.4	    1.1	  0.0%	Model2.insert_patt
//   1341618	  576642.2	    2.3	  0.0%	Model2.insert_template
//      5545	    2132.0	    2.6	  0.1%	Grid.segment_by_color
//     12104	    4430.7	    2.7	  0.1%	Model2.defs_refinements/val_matrix
//    337091	  122108.4	    2.8	  0.1%	Model2.apply_grid_refinement
//    337091	  107194.4	    3.1	  0.1%	Model2.apply_refinement
//    341116	   92889.6	    3.7	  0.1%	Model2.model_refinements/seq
//   3142557	  739190.0	    4.3	  0.1%	Model2.parse_grid
//    343943	   77364.2	    4.4	  0.1%	Model2.signature_of_template
//      1717	     341.6	    5.0	  0.1%	Model2.apply_model
//    287121	   50158.8	    5.7	  0.1%	Grid.points
//   2729716	  460298.4	    5.9	  0.1%	Grid.background_colors
//    675782	   79451.7	    8.5	  0.2%	Model2.dl_template
//   2440257	  136994.3	   17.8	  0.4%	Model2.read_grid/best_parses
//   2996763	  158841.4	   18.9	  0.4%	Model2.parse_layers/prep
//     12104	     360.9	   33.5	  0.7%	Model2.defs_expressions
//  70495377	 1586950.6	   44.4	  0.9%	Model2.parse_grid/seq
// 170481299	 3758799.6	   45.4	  0.9%	Model2.state_minus_shape_gen
// 169979525	 3187937.5	   53.3	  1.1%	Model2.parse_single_point/seq
//  68104075	  962040.0	   70.8	  1.4%	Model2.read_grid/first_parses/dl
//    829418	   11508.5	   72.1	  1.4%	Grid.rectangles
//     12103	     166.5	   72.7	  1.4%	Model2.defs_refinements/others
//  19132646	  114930.0	  166.5	  3.3%	Model2.defs_refinements/first/exprs/apply
// 473808781	 2037784.2	  232.5	  4.6%	Model2.parse_single_rectangle/seq
//     12104	      35.2	  343.5	  6.8%	Model2.defs_refinements/first/exprs
//     12104	      28.8	  420.2	  8.3%	Model2.defs_refinements
//      6052	      14.4	  420.4	  8.3%	Model2.model_refinements
//  71323647	   55220.8	 1291.6	 25.6%	Model2.parse_layers/seq
//   3142557	     693.8	 4529.5	 89.7%	Model2.read_grid/first_parses
//   3192894	     693.6	 4603.4	 91.2%	Model2.read_grid
//    337891	      73.2	 4617.8	 91.5%	Model2.read_grid_pairs
//       400	       0.1	 5042.3	 99.9%	Model2.learn_model
//       400	       0.1	 5047.6	100.0%	Test.print_learned_model
